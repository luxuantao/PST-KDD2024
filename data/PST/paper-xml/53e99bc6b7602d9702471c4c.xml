<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A survey of scheduling with controllable processing times ଁ</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-03-05">5 March 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Dvir</forename><surname>Shabtay</surname></persName>
							<email>dvirs@bgu.ac.il</email>
							<affiliation key="aff0">
								<orgName type="department">Michael G. DeGroote School of Business</orgName>
								<orgName type="laboratory">Management Science and Information Systems Area</orgName>
								<orgName type="institution">McMaster University</orgName>
								<address>
									<settlement>Hamilton</settlement>
									<region>Ont</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">George</forename><surname>Steiner</surname></persName>
							<email>steiner@mcmaster.ca</email>
							<affiliation key="aff0">
								<orgName type="department">Michael G. DeGroote School of Business</orgName>
								<orgName type="laboratory">Management Science and Information Systems Area</orgName>
								<orgName type="institution">McMaster University</orgName>
								<address>
									<settlement>Hamilton</settlement>
									<region>Ont</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A survey of scheduling with controllable processing times ଁ</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-03-05">5 March 2007</date>
						</imprint>
					</monogr>
					<idno type="MD5">6F12548BC26858BABDCBDCE054A0B427</idno>
					<idno type="DOI">10.1016/j.dam.2007.02.003</idno>
					<note type="submission">Received 11 August 2005; received in revised form 8 January 2007; accepted 1 February 2007</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Deterministic scheduling</term>
					<term>Controllable processing times</term>
					<term>Resource allocation</term>
					<term>Complexity</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In classical deterministic scheduling problems, the job processing times are assumed to be constant parameters. In many practical cases, however, processing times are controllable by allocating a resource (that may be continuous or discrete) to the job operations. In such cases, each processing time is a decision variable to be determined by the scheduler, who can take advantage of this flexibility to improve system performance. Since scheduling problems with controllable processing times are very interesting both from the practical and theoretical point of view, they have received a lot of attention from researchers over the last 25 years. This paper aims to give a unified framework for scheduling with controllable processing times by providing an up-to-date survey of the results in the field.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>For the majority of deterministic scheduling problems in the literature, job processing times are considered constant. In various real-life systems, however, processing times may be controllable by allocating resources, such as additional money, overtime, energy, fuel, catalysts, subcontracting, or additional manpower, to the job operations. In such systems, job scheduling and resource allocation decisions should be coordinated carefully to achieve the most efficient system performance. Janiak <ref type="bibr" target="#b44">[45]</ref> described in detail an interesting application of a scheduling problem with controllable processing times in steel mills, where batches of ingots have to be preheated before being hot-rolled in a blooming mill, and both the preheating time and the rolling time are inversely proportional to the gas flow intensity. Another interesting application arises from scheduling in a machine tooling environment where the job processing time is a function of the feed rate and the spindle speed used for each operation (e.g., <ref type="bibr" target="#b102">[104,</ref><ref type="bibr" target="#b63">64,</ref><ref type="bibr" target="#b65">66]</ref>).</p><p>Vickson <ref type="bibr" target="#b103">[105]</ref> was one of the first researchers to study a shop scheduling problem with controllable processing times. He pointed out that, "least cost scheduling through job processing time control has been studied thoroughly in the project management context. In view of the importance of, and familiarity with job processing time choice in project planning models, it is perhaps surprising that similar concepts have received little attention in the sequencing portion of the scheduling literature." After 1980, following the impetus of Vickson's paper, sequencing problems with controllable processing times have been extensively studied by researchers. An early survey of results on this subject, up to 1990, is given by Nowicki and Zdrzalka <ref type="bibr" target="#b85">[86]</ref>, and partial and brief surveys were given later by Chen et al. <ref type="bibr" target="#b9">[10]</ref> and in Section 5 of the multicriteria scheduling survey by Hoogeven <ref type="bibr" target="#b35">[36]</ref>.</p><p>A general definition of scheduling problems with controllable job processing times may be stated as follows: n independent jobs, J = {1, 2, . . . , n}, are to be processed on m machines, M ∈ {M 1 , M 2 , . . . , M m }, where O ij is the operation of job j on machine i for i = 1, . . . , m and j = 1, . . . , n. The machines are arranged in a specific technological configuration, which can be a single machine (m = 1), machines in parallel, or machines in a flow shop, job shop, or open shop. The release time of job j, r j , is the time at which the job arrives in the system and is ready for processing. The processing time of job j on machine i, p ij , is a non-increasing function of the amount of resource, u ij , allocated to the processing of operation O ij for j = 1, . . . , n and i = 1, . . . , m. In the single machine case, we omit the machine index so that, for example, p j is the processing time of job j on the single machine. The resource may be used either in continuous or discrete quantities. In the first case, the processing time of a job is determined by the amount of a divisible resource (e.g., gas and electricity) allocated to it and therefore can vary continuously. On the other hand, a discrete type of resource is indivisible (e.g., manpower and supporting equipment) and therefore the processing time of a job has only a finite number of possible durations. Since researchers usually assumed a continuous type of resource in most of their work, we will also focus on this case, but will briefly review papers with discrete resource too. In this paper, we provide a survey of results only for the case where the resource is assumed to be non-renewable (e.g., money, fuel, gas and electricity) and its availability may be limited by an upper bound U. For problems with renewable resources and resource allocations which may vary over time, we refer the reader to the paper by Jozefowska and Weglarz <ref type="bibr" target="#b61">[62]</ref> for the continuous case and the paper by Blazewicz et al. <ref type="bibr" target="#b6">[7]</ref> for the discrete case.</p><p>A solution for a scheduling problem with controllable processing times is specified by a resource allocation for each job on each machine and by a job schedule. The quality of a solution is measured by two criteria: The first one, F 1 , is a scheduling criterion dependent on the job completion times, and the second one, F 2 , is the resource consumption cost. Both criteria have to be minimized. A weight w j may be associated with each job j ∈ J , which indicates the relative importance of job j in F 1 . A weight v ij is associated with each operation O ij , that is the cost of one unit of resource allocated to operation O ij in F 2 . The F 2 criteria used in the literature are</p><formula xml:id="formula_0">F 2 ∈ { m i=1 n j =1 u ij , m i=1 n j =1 v ij u ij }.</formula><p>The most frequently used criteria for F 1 are F 1 ∈ {f max , n j =1 C j , n j =1 w j C j , n j =1 U j , n j =1 T j + E j }, where C j is the completion time of job j , d j is the due date of job j , L j = C jd j is the lateness of job j, T j = max(0, L j ) is the tardiness of job j , E j = max(0, -L j ) is the earliness of job j , U j is the tardiness indicator variable for job j, i.e., U j = 1 if C j &gt; d j and U j = 0 if C j d j , and f max = max j =1,...,n (f j (C j )) with a non-decreasing function f j for j = 1, . . . , n.</p><p>Since scheduling with controllable processing times is essentially a problem with two criteria, four different problems can arise:</p><p>• The first one, which we denote by P1, is to minimize the total integrated cost, i.e., F 1 + F 2 ; • The second one, which we denote by P2, is to minimize F 1 subject to F 2 U ; • The third one, which we denote by P3, is to minimize F 2 subject to F 1 K, where K is a given upper bound; • The last one, which we denote by P4, is to identify the set of Pareto-optimal schedules for (F 1 , F 2 ), where a schedule S with F 1 (S) = K and F 2 (S) = U is called Pareto-optimal if there does not exist another schedule S such that F 1 (S ) K and F 2 (S ) U with at least one of these inequalities being strict.</p><p>It should be noted that solving P4, also solves P1-P3 as a by-product.</p><p>In most studies of scheduling with controllable processing times, researchers assumed that the job processing time is a bounded linear function of the amount of resource allocated to the processing of the job, i.e., the resource consumption function is of the form</p><formula xml:id="formula_1">p ij (u ij ) = p ij -a ij u ij , 0 u ij u ij p ij /a ij ,<label>(1)</label></formula><p>where p ij is the non-compressed processing time for job j on machine i, u ij is the upper bound on the amount of resource that can be allocated to perform job j on machine i and a ij is the positive compression rate of job j on machine i for j = 1, . . . , n and i = 1, . . . , m. For many resource allocation problems in physical or economic systems, however, they do not use a linear resource consumption function, since it fails to reflect the law of diminishing marginal returns.</p><p>This law states that productivity increases at a decreasing rate with the amount of resource employed. In order to model this, other studies on scheduling with resource allocation assumed that the job processing time is a convex decreasing function of the amount of resource allocated to the processing of the job (e.g. <ref type="bibr" target="#b75">[76,</ref><ref type="bibr" target="#b90">92,</ref><ref type="bibr" target="#b91">93]</ref>). For a convex resource consumption function, researchers usually used the following function:</p><formula xml:id="formula_2">p ij (u ij ) = ij u ij k , (<label>2</label></formula><formula xml:id="formula_3">)</formula><p>where ij is a positive parameter, which represents the workload of operation O ij and k is a positive constant. Eq. ( <ref type="formula" target="#formula_2">2</ref>) has been used extensively in continuous resource allocation theory (e.g., <ref type="bibr" target="#b75">[76,</ref><ref type="bibr" target="#b89">91,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b90">92,</ref><ref type="bibr" target="#b91">93]</ref>). In fact, Monma et al. <ref type="bibr" target="#b75">[76]</ref> pointed out that k = 1 corresponds to many actual government and industrial operations and the k = 0.5 case arises from very large scale integration (VLSI) circuit design, where the product of the silicon area (resource) and the square of time spent equals a constant value (the workload) for an individual job.</p><p>Due to the fact that the case of constant job processing times is a special case of the linear resource consumption function given by Eq. ( <ref type="formula" target="#formula_1">1</ref>), when u ij = 0, any problem which is NP-hard with constant processing times is also NPhard for the case of linearly controllable processing times. Since the convex resource consumption function given by Eq. ( <ref type="formula" target="#formula_2">2</ref>) is not locally bounded, however, we have to note that it is not straightforward that an NP-hard problem for the case of constant processing times will remain so if the processing times are controllable via Eq. ( <ref type="formula" target="#formula_2">2</ref>).</p><p>We will use and extend the standard three field notation | | introduced by Graham et al. <ref type="bibr" target="#b31">[32]</ref> for scheduling problems, and refer the reader to this paper for any missing definitions. The field describes the machine environment. For example, if 1 appears in the field, it means that we deal with a single machine scheduling problem, and if Pm appears in the field, it means that we consider a set of m identical parallel machines. The field exhibits the processing characteristics and constraints. For example, if r j is specified in the field, it implies that the job release times are not all equal, and if dscr appears in the field, it means that we deal with a discrete type of resource. We also include in the field the information needed about the type of resource consumption function used. For example, if lin appears in this field, it means that a linear resource consumption function given by Eq. ( <ref type="formula" target="#formula_1">1</ref>) is assumed, and conv means that we assume Eq. ( <ref type="formula" target="#formula_2">2</ref>) represents the accurate resource consumption function. Special cases of these functions and controllable release times will also be described in . We also put the upper bound constraints into the field for problems P2 and P3. The field contains the optimizing criteria. For problems P4, we include both criteria here. For example, 1|lin, n j =1 v j u j U |C max denotes the P2-type problem of minimizing the makespan on a single machine with linearly compressible processing times (resource consumption function) subject to the total weighted resource consumption not exceeding a given upper bound U .</p><p>The rest of the paper is organized as follows. In Section 2, we present a survey of results for single machine problems. It is divided into subsections, based on the scheduling criterion used for F 1 . Section 3 surveys multi-machine scheduling problems with controllable job processing times. The division of Section 3 into subsections reflects the consideration of different machine configurations. Concluding remarks along with suggestions for future research are presented in the last section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Single machine scheduling with controllable processing times</head><p>In the single machine framework, each schedule is specified by a job sequence ∈ , where is the set of all n! possible permutations of the n jobs, and by a vector of resource allocations u = (u 1 , u 2 , . . . , u n ). In Section 2.1 we will review scheduling problems in which F 1 = f max . Section 2.2 is devoted to problems with F 1 = n j =1 w j C j , while the problems with F 1 = n j =1 w j U j appear in Section 2.3. The last two subsections consider scheduling problems with batching and due date assignment, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Maximum penalty criterion</head><formula xml:id="formula_4">(F 1 = f max )</formula><p>We consider scheduling problems with controllable processing times where the scheduling criterion is F 1 = f max = max j ∈J f j (C j ) and f j (C j ) is a non-decreasing (regular) function. We start with some simple problems which do not seem to have been covered in the literature.</p><p>For some scheduling problems on a single machine with F 1 = f max , the optimal job sequence is independent of the job processing times. For example, the problem of minimizing the makespan on a single machine, 1 C max , has the same objective value for each ∈ , or the optimal job sequence for the 1 L max , 1 T max problems is to arrange the jobs in EDD order (i.e., in a non-decreasing order of due dates). Since the EDD job sequence is independent of the processing time values, this is the optimal job sequence for any feasible resource allocation. Similarly, the 1|r j |C max problem is solved by sequencing the jobs in non-decreasing order of their release times. In all these cases, the scheduling problems with controllable processing times reduce to resource allocation problems. As a result, the P1-P3 versions of the above problems with controllable job processing reduce to either a linear or a convex programming problem (depending on the type of resource consumption function used).</p><p>The linear programming problem that 1|lin, n j =1 v j u j U |C max reduces to is to minimize n j =1 (p j -a j u j ) subject to n j =1 v j u j U , or equivalently, maximize n j =1 a j u j subject to n j =1 v j u j U . This is a continuous knapsack problem and therefore can be solved in O(n log n) time by ordering the jobs into non-decreasing a j /v j order and packing them greedily in this order until we reach n j =1 v j u j = U . This implies that the knapsack has at most n different solution sets over varying U values, and therefore we can easily obtain all the Pareto points too. This yields the following theorem.</p><p>Theorem 1. The P4-type problem 1|lin|(C max , n j =1 v j u j ) and its versions P1-P3 are solvable in O(n log n) time.</p><p>An anonymous reviewer has brought it to our attention that some of the problems in the above theorem have been studied in <ref type="bibr" target="#b50">[51]</ref>. Unfortunately, we were unable to gain access to this paper. Janiak and Lichtenstein <ref type="bibr" target="#b56">[57]</ref> extended the continuous-knapsack-based approach for minimizing the makespan in the presence of resource-dependent setup times. It also follows from the above discussion that the integer programming problem that 1|lin, dscr, n j =1 v j u j U | C max is equivalent to is a discrete knapsack problem, which is known to be NP-hard in the ordinary sense even if a j = a for j = 1, . . . , n. It is also easy to observe that the 1|lin, dscr, a j = a, C max K| n j =1 v j u j problem is NP-hard (see also <ref type="bibr" target="#b51">[52]</ref>).</p><p>In order to solve the 1|conv|(C max , n j =1 v j u j ) problem, we need to minimize n j =1 ( j /u j ) k subject to n j =1 v j u j = U for any positive value of U . By applying the Lagrangian method, it is easy to verify that the optimal resource allocation is given by the following equation for j = 1, . . . , n:</p><formula xml:id="formula_5">u j = ( j ) k/(k+1) /(v j ) 1/(k+1) n i=1 ( i ) k/(k+1) /(v i ) 1/(k+1) × U ,<label>(3)</label></formula><p>and the following curve represents the efficient frontier</p><formula xml:id="formula_6">C max = n i=1 ( i ) k/(k+1) /(v i ) 1/(k+1) U k × n j =1 (v j j ) k/(k+1) .<label>(4)</label></formula><p>This proves the following theorem.</p><p>Theorem 2. The P4-type problem 1|conv|(C max , n j =1 v j u j ) and its versions P1-P3 are solvable in O(n) time.</p><p>For problems where the optimal sequence does not depend on the (controllable) processing times, their corresponding versions of type P1, P2 and P3 reduce either to a linear or to a convex programming problem depending on the resource consumption function.Vickson <ref type="bibr" target="#b103">[105]</ref> showed that for a continuous type of resource, the linear programming problem that 1|lin|T max + n j =1 v j u j reduces to is equivalent to a production-inventory problem that can be solved in O(n 2 ) time. He also showed that the problem becomes NP-hard with a discrete resource. Chen et al. <ref type="bibr" target="#b8">[9]</ref> proved that the 1|dscr|T max + n j =1 v j u j problem is NP-hard, even if d j = d for j = 1, . . . , n, and presented a pseudo-polynomial optimization algorithm for its solution. Chen et al. also gave similar results for the 1|dscr, r j |C max + n j =1 v j u j problem. Janiak <ref type="bibr" target="#b41">[42]</ref> showed that the 1|lin, n j =1 u j U |L max problem can be solved in O(n 2 ) time even with precedence constraints <ref type="bibr" target="#b40">[41]</ref>, and Janiak and Kovalyov <ref type="bibr" target="#b52">[53]</ref> presented an O(n log n) time optimization algorithm for the 1|lin, L max 0| n j =1 v j u j problem. Janiak and Kovalyov also showed that if the resource is discrete, then the problem becomes NP-hard. For this case, they provided a fully polynomial time approximation scheme (FPTAS), and also showed that the special case where a j = a and v j = v for j = 1, . . . , n can be solved in O(n log n) time. Van Wassenhove and Baker <ref type="bibr" target="#b108">[110]</ref> presented a greedy algorithm for the 1|lin|(T max , n j =1 v j u j ) problem. They showed that the greedy algorithm constructs the efficient frontier in O(n 2 ) time. They also provided an O(n 3 ) time optimization algorithm for the special case of the 1|lin|(f max , n j =1 v j u j ) problem where f is piecewise linear and f j (t) f j +1 (t) for all t 0 and 1 j n -1. Daniels <ref type="bibr" target="#b23">[24]</ref> extended Van Wassenhove and Baker's <ref type="bibr" target="#b108">[110]</ref> research by studying how specified limits on individual job tardiness affect optimal sequencing and the optimal resource allocation. He also considered the case when multiple resources are available for processing time control. Daniels developed constructive procedures to identify the job sequence and resource allocation which minimize the total amount of resource required to satisfy imposed limits on maximum and individual job tardiness. Similar to Van Wassenhove and Baker, Daniels constructed the efficient frontier that represents the trade-off curve between the maximal tardiness and the minimum amount of resource required. Hoogeveen and Woeginger <ref type="bibr" target="#b37">[38]</ref> extended Van Wassenhove and Baker's <ref type="bibr" target="#b108">[110]</ref> results by providing an O(L 2 n 4 ) algorithm for the 1|lin|(f max , n j =1 v j u j ) problem for regular and piecewise linear f j functions, where L denotes the number of linear pieces needed to describe all f j functions for j = 1, . . . , n, yielding a polynomial time algorithm if all penalty functions are described explicitly. Hoogeveen and Woeginger <ref type="bibr" target="#b37">[38]</ref> also showed that if the penalty functions are described implicitly the problem becomes strongly NP-hard.</p><p>For a discrete type of resource and non-decreasing functions f j (C j ) for j = 1, . . . , n, Janiak and Kovalyov <ref type="bibr" target="#b51">[52]</ref> provided O(n log n) time optimization algorithms for the 1|lin, dscr, f max K| n j =1 u j and the 1|lin, a j = a, dscr, f max K| n j =1 v j u j problems and an O(n log n log(max{f j ( n i=1 b i )})) time optimization algorithm to solve the 1|lin, dscr, n j =1 u j U |f max and the 1|lin, a j = a, dscr, n j =1 v j u j U |f max problems. Cheng et al. <ref type="bibr" target="#b14">[15]</ref> gave a dynamic programming algorithm to solve the 1|lin, dscr, f max K| n j =1 v j u j problem in O(n( n j =1 v j j ) 2 ) time, where j is the number of different possible processing times for job j. They also presented an O(n 3 / 2 + n 3 log n + n log(max(v j j ))) time -approximation algorithm for the same problem. They showed that the 1|lin, dscr, n j =1 v j u j U |f max problem can be solved in O(n( n j =1 v j j ) 2 log(max{f j ( n i=1 b i )})) time. They proved that the set of Pareto optimal points for the 1|lin, dscr|(f max , n j =1 v j u j ) problem can also be constructed in O(n( n j =1 v j j ) 2 log(max{f j ( n i=1 b i )})) time per Pareto point and showed that an approximation set which contains a point within an -factor for every Pareto point can be found in O((n 3 / 2 + n 3 log n + n log(max(v j j )))log (1+ /2) (max{f j ( n i=1 b i )})) time.</p><p>Shabtay <ref type="bibr" target="#b90">[92]</ref> provided an O(n 3 ) time optimization algorithm to solve the 1|conv, n j =1 u j U |L max problem by representing the resource allocation problem on a fixed job sequence as a variation of the longest path problem in a directed acyclic graph. The results of most of the research papers in scheduling with controllable processing times are limited to deal with a very specific type of resource consumption function as given by either Eq. (1) or Eq. (2). Yedidsion et al. <ref type="bibr" target="#b109">[111]</ref> showed that Shabtay's <ref type="bibr" target="#b90">[92]</ref> method to solve 1|conv, n j =1 u j U |L max can be extended to deal with a more general type of convex, decreasing resource consumption function by providing an O(n 3 ) algorithm to solve the 1|conv|(L max , n j =1 u j ) problem. Shabtay <ref type="bibr" target="#b90">[92]</ref> studied the case of a two-resource allocation problem to minimize the maximum lateness on a single machine. He showed for the 1|conv, n j =1 u 1j U 1 , n j =1 u 2j U 2 |L max problem that a dual -approximation solution, i.e., a solution that reaches the minimum L max value while using at most (1 + ) times the allowable resources, can be found in O(n 3 log(1/ )) time, where u ij is the amount of resource type i (i = 1, 2) assigned to job j (j = 1, . . . , n) and</p><formula xml:id="formula_7">p j = max(( 1j /u 1j ) k , ( 2j /u 2j ) k ).</formula><p>In Table <ref type="table" target="#tab_0">1</ref>, we present a summary of complexity results for the single machine scheduling problem with controllable job processing times and F 1 = f max for r j = 0 for j = 1, . . . , n.</p><p>The 1|r j |L max problem is strongly NP-hard (see <ref type="bibr" target="#b71">[72]</ref>). For the version of this problem with delivery times and linearly controllable processing times, Zdrzalka <ref type="bibr" target="#b111">[113]</ref> gave a polynomial time approximation algorithm with a worstcase approximation ratio 11  6 . Zdrzalka's result was based on the 4  3 -approximation guarantee given by Hall and Shmoys <ref type="bibr" target="#b33">[34]</ref> for the same problem with constant processing times.</p><p>Janiak <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b46">47]</ref> introduced a version of the problem where the release times of the jobs are controllable by consuming a continuous resource. The situation arises, for example, in steel mills where ingots have to be heated up before hot-rolling and the preheating time for an ingot is dependent on gas flow intensity. Janiak <ref type="bibr" target="#b38">[39]</ref> analyzed the 1|r j = f (u r j )|C max problem, i.e., minimizing the makespan on a single machine when the job release times are controlled by a positive, strictly decreasing resource consumption function f (u r j ). For the case when f (u r j ) = r ju r j with 0 u r j u r j for </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NP-hard</head><p>[52] 1|lin, dscr, p j = p, C max K| n j =1 v j u j NP-hard</p><formula xml:id="formula_8">[52] 1|lin|T max + n j =1 v j u j O(n 2 ) [105] 1|lin, dscr|T max + n j =1 v j u j NP-hard [105,9] 1|dscr, d j = d|T max + n j =1 v j u j</formula><p>NP-hard, pseudo-poly.</p><p>[9] 1|dscr|T max + n j =1 v j u j NP-hard, pseudo-poly.</p><p>[9] 1|dscr|C max + n j =1 v j u j NP-hard, pseudo-poly.</p><p>[9] 1|lin, n j =1 u j U |L max and 1|lin, prec,</p><formula xml:id="formula_9">n j =1 u j U |L max O(n 2 ) [41,42] 1|lin, L max 0| n j =1 v j u j O(n log n) [53] 1|lin, dscr, f max K| n j =1 v j u j NP-hard, FPTAS [53,15] 1|lin, dscr, a j = a, L max 0| n j =1 vu j O(n log n) [53] 1|lin, dscr, L max 0| n j =1 u j O(n log n) [53] 1|lin, dscr, n j =1 u j U |f max O(n log n log(max{f j ( n i=1 b i )})) [52] 1|lin, a j = a, dscr, n j =1 v j u j U |f max O(n log n log(max{f j ( n i=1 b i )})) [52] 1|lin|(T max , n j =1 v j u j ) O(n 2 ) [110] 1|lin|(f max , n j =1 v j u j ) O(L 2 n 4 ) a [38] 1|lin, dscr, f max K| n j =1 u j O(n log n) b [52] 1|lin, a j = a, dscr, f max K| n j =1 v j u j O(n log n) b [52] 1|conv|(L max , n j =1 u j ) O(n 3 ) c [111] 1|conv, n j =1 u 1j U 1 , n j =1 u 2j U 2 |L max O(n 3 log(1/ )) d [92]</formula><p>a f j is regular and piecewise linear and L is the number of linear pieces in f j . b f j is regular. c p j (u j ) is a general convex function. d p j = max(( 1j /u 1j ) k , ( 2j /u 2j ) k ). j = 1, . . . , n, Janiak <ref type="bibr" target="#b46">[47,</ref><ref type="bibr" target="#b48">49]</ref> proved that the 1|r j = r ju r j , C max K| u r j problem is strongly NP-hard. Wang and Cheng <ref type="bibr" target="#b106">[108]</ref> suggested and evaluated some heuristics for solving the 1|lin, a j = 1, r j = ru r j |C max + n j =1 v j u j + n j =1 c r (rr j ) problem, i.e., a problem where both release dates and processing times are linear, strictly decreasing functions of the amount of resource consumed, with 0 u r j u r j , and c r is the cost of reducing the release time by one unit. Shakhlevich and Strusevich <ref type="bibr" target="#b98">[100]</ref> have studied the makespan problem for the following resource consumption and resource cost functions both for release dates and processing times:</p><p>• Controllable processing speed, which is a special case of the resource consumption function given by Eq. ( <ref type="formula" target="#formula_2">2</ref>) with k =1, and the resource allocation is constrained to be equal for all jobs, i.e., p j (u)=w j /u. The resource consumption cost is given by c p × u q where c p is a given positive constant and q is a given positive integer. This problem is denoted by 1|r j , p j = w j /u|(C max ) q 1 + c p u q 2 . • Controllable processing times, where the processing times are given by Eq. ( <ref type="formula" target="#formula_1">1</ref>) with a j = 1 and the resource consumption cost is given by n j =1 v j u j . This corresponds to 1|r j , lin, a j = 1|(C max ) q 1 + n j =1 v j u j . • Controllable release speed, where r j (u r )= r j /u r , and the resource consumption cost is given by c r ×u q r , where c r is a given positive constant and q is a given positive integer. The corresponding problems are 1|r</p><formula xml:id="formula_10">j = r j /u r |(C max ) q 1 + c r × u q 2 r and 1|lin, a j = 1, r j = r j /u r |(C max ) q 1 + n j =1 v j u j + c r × u q 2</formula><p>r . • Controllable release times, where r j (u r j )=r j -u r j with 0 u r j u r j for j =1, . . . , n, and the resource consumption cost is given by n j =1 v r j u r j . This general problem corresponds to 1|p j = w j /u, r j = r ju r j | (C max ) q 1 + c p u q 2 + n j =1 v r j u r j .</p><p>In Table <ref type="table">2</ref>, we present a summary of complexity results for the single machine scheduling problem with controllable job processing times and release dates for F 1 = f max . Since for the case of constant processing times and release dates, the makespan problem is solvable in O(n log n) time by ordering the jobs in a non-decreasing order of r j , the Table <ref type="table">2</ref> Summary of complexity results for the single machine problem with controllable processing times and release dates for</p><formula xml:id="formula_11">F 1 = f max Problem Complexity Ref.</formula><p>1|lin, r j , a j = 1|L max Strongly NP-hard, 11/6-approx</p><formula xml:id="formula_12">[113] 1|lin, a j = 1, r j = r -u rj |C max + n j =1 v j u j + n j =1 c r (r -r j )</formula><p>Strongly NP-hard <ref type="bibr" target="#b48">[49]</ref> 1|conv,</p><formula xml:id="formula_13">r j = ( rj /u rj ) k |(C max , n j =1 u j + n j =1 u rj ) Open [65] 1|r j , p j = w j /u|(C max ) q1 + c p u q2 O(n log n) [100] 1|r j , lin, a j = 1|(C max ) q1 + n j =1 v j u j O(n 2 ) [100] 1|r j = rj /u r |(C max ) q1 + c r × u q2 r O(n log n) [100] 1|p j = w j /u, r j = rj /u r |(C max ) q1 + c p u q2 + n j =1 c r × u q2 r O(n log n) [100] 1|lin, a j = 1, r j = rj /u r |(C max ) q1 + n j =1 v j u j + c r × u q2 r O(n 3 ) [100] 1|r j = r j -u rj |(C max ) q1 + n j =1 v rj u rj</formula><p>Strongly NP-hard</p><formula xml:id="formula_14">[100] 1|r j = r j -u rj |(C max ) q1 + n j =1 v r u rj NP-hard , pseudo-poly. a [100] 1|p j = w j /u, r j = r j -u rj |(C max ) q1 + c p u q2 + n j =1 v r u rj</formula><p>NP-hard, pseudo-poly.</p><p>[100]</p><p>1|lin,</p><formula xml:id="formula_15">a j = 1, r j = r j -u rj |(C max ) q1 + n j =1 v j u j + n j =1 v r u rj</formula><p>NP-hard, pseudo-poly.</p><p>[100]</p><formula xml:id="formula_16">1|r j = r -u rj , r = r -u r , r -r n j =1 p j |(C max ) q1 + n j =1 v rj u rj O(n × n j =1 p j ) [100] 1|r j = r -u rj , r = r -u r |(C max ) q1 + n j =1 v rj u rj O(n 2 × max j =1,...,n p j × n j =1 p j ) [100] 1|r j = r -u rj , r = r -u r |(C max ) q1 + n j =1 v r u rj O(n log n) [100] 1|p j = w j /u, r j = r -u rj , r = r -u r |(C max ) q1 + c p u q2 + n j =1 v r u rj O(n log n) [100] 1|lin, a j = 1, r j = r -u rj , r = r -u r |C max + n j =1 v j u j + n j =1 v rj u rj O(n 3 ) [18] 1|lin, a j = 1, r j = r -u rj , r = r -u r |C max + n j =1 vu j + n j =1 v r u rj O(n 2 ) [18] 1|lin, a j = 1, r j = r -u rj , r = r -u r |C max + n j =1 vu j + n j =1 v r u rj O(n log n) b [18] 1|lin, a j = 1, r j = r -u rj , |(C max , n j =1 vu j + n j =1 v r u rj ) O(n 2 ) b [18] 1|conv, r j = ( rj /u rj ) k |(C max , n j =1 u j + n j =1 u rj ) O(n log n) c [65]</formula><p>a Even for r j = r and u r = u r . b For agreeable processing times (p 1 p 2 , . . . , p n and p 1 p 2 , . . . , p n where p j = p ju j ).</p><p>c If j = for j = 1, . . . , n; or rj = r for j = 1, . . . , n; or j / rj = for j = 1, . . . , n; or inversely agreeable j and rj values; or inversely agreeable j and rj / j values.</p><p>problem with constant release dates reduces either to a linear programming or to a convex resource allocation problem depending on the type of the resource consumption function. Shakhlevich and Strusevich <ref type="bibr" target="#b98">[100]</ref> gave an O(n log n) time optimization algorithm for the case of controllable processing speed, while for controllable processing times, Nowicki and Zdrzalka <ref type="bibr" target="#b85">[86]</ref> gave an O(n 2 ) optimization algorithm. For the case of controllable release speed, we can observe that for any u r value, ordering the jobs in non-decreasing order of r j yields the required optimal job sequence, which is a non-decreasing order of r j and again the problem reduces to a resource allocation problem, which can be solved in O(n log n) time for both cases of constant processing times and controllable processing speeds. For the case of controllable processing times the problem is solvable in O(n 3 ) time.</p><p>In contrast to the case of constant release dates and controllable release speeds, where the optimal job sequence is independent of the resource allocation, in the case of controllable release dates, the optimal job sequence depends on the resource allocated to each release date operation, making the problem harder to solve. Shakhlevich and Strusevich <ref type="bibr" target="#b98">[100]</ref> showed that this problem is strongly NP-hard even if all processing times are constant, since it is reducable to the well-known 1|| n j =1 w j T j problem <ref type="bibr" target="#b67">[68]</ref> with w j = v r j . The problem admits a pseudo-polynomial algorithm if w j = w (i.e., v r j = v) for j = 1, . . . , n (see <ref type="bibr" target="#b67">[68]</ref> and <ref type="bibr" target="#b25">[26]</ref>). Shakhlevich and Strusevich also studied the special case where the release dates have the same upper and lower bounds, i.e., r j = r and r ju r j = r j = r for j = 1, . . . , n. In the analysis, they distinguish between two versions of the problem: the unrestricted one for which rr n j =1 p j and the restricted one in which rr &lt; n j =1 p j . They showed that in both cases the problem is still NP-hard even for the case of constant processing times, and presented two pseudo-polynomial optimization algorithms to solve the problem for both cases. If v r j = v for j = 1, . . . , n in addition to common upper and lower bounds for the release dates, the problem is solvable in O(n log n) time for the case of constant processing times and also for the case of controllable processing speeds. For the case of controllable processing times, Cheng et al. <ref type="bibr" target="#b17">[18]</ref> showed that the problem is solvable in O(n 3 ) for arbitrary v j values and in O(n 2 ) if v j = v for j = 1, . . . , n. For the case of agreeable processing times (p 1 p 2 , . . . , p n and p 1 p 2 , . . . , p n where p j = p ju j ) and v j = v for j = 1, . . . , n the computational time can be further reduced to O(n log n) time. Cheng et al. <ref type="bibr" target="#b17">[18]</ref> studied also the bicriteria version of the problem, i.e., the 1|lin, a j = 1, r j = ru r j , |(C max , n j =1 vu j + n j =1 v r u r j ) with agreeable processing times and provided an O(n 2 ) optimization algorithm to construct the efficient frontier.</p><p>Kaspi and Shabtay <ref type="bibr" target="#b64">[65]</ref> study the 1|conv, r j = ( r j /u r j ) k |(C max , n j =1 u j + n j =1 u r j ) problem with controllable release times, where r j is a positive parameter for j = 1, . . . , n. They show that the optimal resource allocation as a function of the job sequence can be determined in linear time, and prove that the optimal job sequence is independent of the total amount of resources used. Thereby, it is possible to reduce the problem to a sequencing one. Although the computational complexity of the reduced sequencing problem remains an open question, their study identifies five special cases that are solvable in polynomial time (see footnote in Table <ref type="table">2</ref>). They also provide an exact dynamic programming algorithm to solve the sequencing problem. For large-scale problems, they present a very simple heuristic algorithm that on average has a deviation less than 0.3% from the optimal solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Sum of weighted completion times criterion</head><formula xml:id="formula_17">(F 1 = n j =1 w j C j )</formula><p>It is well known <ref type="bibr" target="#b101">[103]</ref> that the 1|| n j =1 w j C j problem is solvable in O(n log n) time by sorting the jobs in a nondecreasing order of p j /w j . However, the problem becomes harder to solve with controllable job processing times. Wan et al. <ref type="bibr" target="#b105">[107]</ref> and Hoogeveen and Woeginger <ref type="bibr" target="#b37">[38]</ref> proved that the 1|lin, a j = 1| n j =1 w j C j + n j =1 v j u j problem is NP-hard. Janiak et al. <ref type="bibr" target="#b53">[54]</ref> observed that this problem remains NP-hard even if u j = p j for j = 1, . . . , n since it is polynomially equivalent to a positive half-product minimization problem which is known to be NP-hard. Janiak et al. <ref type="bibr" target="#b53">[54]</ref> also proposed two FPTAS-s to solve the special case of the problem where u j = p j by generalizing the FPTAS proposed for the half-product minimization in <ref type="bibr" target="#b3">[4]</ref>. The first FPTAS runs in O(n 2 log P / ) time, where P = n j =1 p j , and the other one requires in O(n 2 log W/ ) time, where W = n j =1 w j . The question whether the general 1|lin, a j = 1| n j =1 w j C j + n j =1 v j u j problem is strongly or ordinary NP-hard is still open when u j &lt; p j for some j. For the same problem, Vickson <ref type="bibr" target="#b104">[106]</ref> proved that there exists an optimal schedule with the following all-or-none property: the processing time of each job j ∈ J is either fully reduced, i.e., p j = p ju j or not reduced at all, i.e., p j = p j . By exploiting the all-or-none property, Vickson <ref type="bibr" target="#b104">[106]</ref> provided branch and bound optimization and heuristic algorithms to solve the problem. Although Vickson dealt only with the case a j = 1 for j = 1, . . . , n, it is easy to see that Vickson's <ref type="bibr" target="#b104">[106]</ref> results are also applicable for arbitrary a j values. Cheng et al. <ref type="bibr" target="#b14">[15]</ref> proved that the 1|lin, dscr, n j =1 v j u j U | n j =1 w j C j and the 1|lin, dscr, n j =1 w j C j K| n j =1 v j u j problems are also NP-hard. Shabtay and Kaspi <ref type="bibr" target="#b91">[93]</ref> studied the 1|conv, n j =1 u j U | n j =1 w j C j problem with resource consumption function <ref type="bibr" target="#b1">(2)</ref>. They proved that the optimal resource allocation as a function of the job sequence can be determined by the following equation for j = 1, . . . , n:</p><formula xml:id="formula_18">u * [j ] = ( [j ] ) k/(k+1) × ( n i=j w [i] ) 1/(k+1) n i=1 ( [i] ) k/(k+1) × ( n l=i w [l] ) 1/(k+1) × U ,<label>(5)</label></formula><p>where [j] represents the job in the jth position in the sequence. As a result, they were able to show that the objective value under an optimal resource allocation strategy is</p><formula xml:id="formula_19">n j =1 w j C j ( , u * ) = ⎛ ⎜ ⎝ n j =1 ( [j ] ) k/(k+1) × ⎛ ⎝ n i=j w [j ] ⎞ ⎠ 1/(k+1) ⎞ ⎟ ⎠ k+1 × U -k ,<label>(6)</label></formula><p>and therefore the problem reduces to the following sequencing problem: find the job sequence which minimizes k+1) . Although the computational complexity of this sequencing problem remains open, Shabtay and Kaspi presented some special cases when the problem is solvable in polynomial time (see footnote in Table <ref type="table" target="#tab_1">3</ref>). They also provided an exact dynamic programming algorithm and heuristic algorithms to solve the problem. Since the sequencing problem is independent of U, Shabtay and Kaspi's results can be easily extended to the 1|conv|( n j =1 w j C j , n j =1 u j ) problem. Vickson <ref type="bibr" target="#b103">[105]</ref> studied the 1|lin, a j = 1| n j =1 C j + n j =1 v j u j problem and observed that the objective value can be represented as</p><formula xml:id="formula_20">n j =1 ( [j ] ) k/(k+1) × ( n i=j w [j ] ) 1/(</formula><formula xml:id="formula_21">n j =1 p [j ] (n -j + 1 -v [j ]</formula><p>) plus a constant. As a result, it is easy to show that there exists an optimal 1|lin, a j = 1| n j =1 w j C j + n j =1 v j u j NP-hard <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b105">107]</ref> 1|lin,</p><formula xml:id="formula_22">a j = 1, u j = p j | n j =1 w j C j + n j =1 v j u j NP-hard, FPTAS<label>[54]</label></formula><p>1|lin, dscr, n j =1 v j u j U | n j =1 w j C j NP-hard <ref type="bibr" target="#b14">[15]</ref> 1|lin, dscr, n j =1 w j C j K| n j =1 v j u j NP-hard</p><formula xml:id="formula_23">[15] 1|conv, n j =1 u j U | n j =1 w j C j Open [93] 1|conv, n j =1 u j U | n j =1 w j C j O(n log n) a [93] 1|lin| n j =1 C j + n j =1 v j u j O(n 3 ) [105] and Corollary 1 1|lin, a j = 1, u j = p j | n j =1 C j + n j =1 v j u j O(n 2 ) [54] 1|dscr| n j =1 C j + n j =1 v j u j O(n 3 ) [9]</formula><p>1|lin, dscr,</p><formula xml:id="formula_24">a j = a, p j = p, n j =1 v j u j U | n j =1 C j O(n log n) [15] 1|lin, dscr, a j = a, p j = p, n j =1 C j K| n j =1 v j u j O(n log n log( n j =1 j )) [15]</formula><p>1|lin,</p><formula xml:id="formula_25">a j = 1, r j = r -u rj , u rj = u r | n j =1 C j + n j =1 v j u j + n j =1 v rj u rj NP-hard c [19] 1|lin, a j = 1, r j = r -u rj , u rj = u r | n j =1 C j + n j =1 vu j + n j =1 v rj u rj Open c [19] 1|lin, a j = 1, r j = r -u rj , u rj = u r | n j =1 C j + n j =1 v j u j + n j =1 v r u rj O(n 3 ) c [19] 1|lin, a j = 1, r j = r -u rj , u rj = u r | n j =1 C j + n j =1 vu j + n j =1 v r u rj O(n 2 ) c [19] 1|lin, a j = 1, r j = r -u rj , u rj = u r | n j =1 C j + n j =1 vu j + n j =1 v r u rj O(n log n) d [19] 1|p j = p j + j /u j , n j =1 u j U | n j =1 C j Open [71] 1|p j = p + j /u j , n j =1 u j U | n j =1 C j O(n log n) [71] 1|p j = p j + /u j , n j =1 u j U | n j =1 C j O(n log n) [71] 1|conv|( n j =1 C j , n j =1 u j ) O(n log n) [93] 1|lin, a j = 1| n j =1 (C j -C) 2 + n j =1 f (u j )</formula><p>NP-hard, pseudo-poly b <ref type="bibr" target="#b82">[83]</ref> 1|lin,</p><formula xml:id="formula_26">a j = 1| 1 n i=1 n j =i |C i -C j | + 2 n j =1 C j + 3 n j =1 v j u j O(n 3 ) [109] 1|lin, a j = 1| 1 n i=1 n j =i |W i -W j | + 2 n j =1 W j + 3 n j =1 v j u j O(n 3 ) [109]</formula><p>1|lin, a j = 1,</p><formula xml:id="formula_27">u j = u| 1 n i=1 n j =i |C i -C j | + 2 n j =1 C j + 3 n j =1 vu j O(n log n) [109]</formula><p>1|lin, a j = 1,</p><formula xml:id="formula_28">u j = u| 1 n i=1 n j =i |C i -C j | + 2 n j =1 C j + 3 n j =1 vu j O(n log n) [109]</formula><p>a If j = for j = 1, . . . , n; or w j / j = for j = 1, . . . , n; or inversely agreeable j and w j values; or inversely agreeable j and ( j ) k/(k+1) /(w j ) 1/(k+1) values.</p><p>b For agreeable p j and p ja j u j values, where f (u j ) is any convex non-decreasing function of u j . c For the unrestricted case where rr n j =1 p j . d For agreeable p j and p ja j u j values and rr n j =1 p j . schedule where p [j ] is set to its maximal value if v [j ] &gt; nj + 1 and to its minimal value if v [j ] nj + 1. If we define the optimal processing time for job j if it is assigned to position i of the job sequence as p * ij , we get that the objective value is</p><formula xml:id="formula_29">F 1 = n i=1 n j =1 p * ij (n -i + 1 -v j )</formula><p>under an optimal resource allocation. Naturally, each job must be assigned to a single position and each position must be assigned only once. Therefore, the problem reduces to a linear assignment problem, which can be solved in O(n 3 ) time. Vickson's <ref type="bibr" target="#b103">[105]</ref> result can be easily extended to arbitrary a j values by replacing v j by v j /a j . As a result, we have the following corollary.</p><formula xml:id="formula_30">Corollary 1. The 1|lin| n j =1 C j + n j =1 v j u j problem is solvable in O(n 3 ) time.</formula><p>Janiak et al. <ref type="bibr" target="#b53">[54]</ref> showed that the time complexity of the algorithm for the 1|lin| n j =1 C j + n j =1 v j u j problem can be reduced to O(n 2 ) if a j = 1 and u j = p j for j = 1, . . . , n. Lee <ref type="bibr" target="#b69">[70]</ref> performed sensitivity analysis on the optimal solution of the 1|lin, a j = 1| n j =1 C j + n j =1 v j u j problem identifying the ranges of job processing times in which the optimal job sequence remains unchanged. Chen et al. <ref type="bibr" target="#b8">[9]</ref> showed that Vickson's method can also be used to solve the 1|dscr| n j =1 C j + n j =1 v j u j problem in O(n 3 ) time. Cheng et al. <ref type="bibr" target="#b14">[15]</ref> proved that if a j = a and p j = p for j = 1, . . . , n, then the 1|lin, dscr,</p><formula xml:id="formula_31">n j =1 u j U | n j =1 C j problem is solvable in O(n log n) time and 1|lin, dscr, n j =1 C j K| n j =1 u j is solvable in O(n log n log( n j =1 j ))</formula><p>time, where j is again the number of different possible processing times for job j.</p><p>Cheng et al. <ref type="bibr" target="#b18">[19]</ref> have shown that the 1|lin, a j = 1, r j = r ju r j | n j =1 C j + n j =1 v j u j + n j =1 v r j u r j problem is NP-hard even for the special case where the release dates have the same upper and lower bounds, i.e., r j = r and r ju r j = r j = r for j = 1, . . . , n and rr n j =1 p j . However, if in addition v r j = v r for j = 1, . . . , n, then the problem is solvable in O(n 3 ) time by a reduction to an assignment problem. The time complexity is further reduced to O(n 2 ) if v j = v for j = 1, . . . , n and to O(n log n) if v j = v for j = 1, . . . , n and the processing times are agreeable (p 1 p 2 , . . . , p n and p 1 p 2 , . . . , p n , where p j = p ju j ).</p><p>Lee and Lei <ref type="bibr" target="#b70">[71]</ref> studied the sum-of-completion-times problem with convex resource consumption function p j = p j + j /u j . They conjectured that the 1|p j = p j + j /u j , n j =1 u j U | n j =1 C j problem is NP-hard and presented O(n log n) time algorithms for the special cases when p j =p for j =1, 2, . . . , n or j = for j =1, 2, . . . , n. Shabtay and Kaspi <ref type="bibr" target="#b91">[93]</ref> analyzed the 1|conv, n j =1 u j U | n j =1 C j problem with resource consumption function ( <ref type="formula" target="#formula_2">2</ref>) and showed that it is solvable in O(n log n) time by first ordering the jobs in a non-decreasing order of j and then by allocating the resource according to Eq. ( <ref type="formula" target="#formula_18">5</ref>) with w j = 1 for j = 1, . . . , n. The minimal objective value is then obtained from Eq. ( <ref type="formula" target="#formula_19">6</ref>) (again with w j = 1 for j = 1, . . . , n), thus also providing a complete solution for the 1|conv|</p><formula xml:id="formula_32">( n j =1 C j , n j =1 u j ) problem in O(n log n) time.</formula><p>In Table <ref type="table" target="#tab_1">3</ref>, we present a summary of complexity results for single machine scheduling problems with controllable job processing times and F 1 = n j =1 w j C j or an F 1 which is the (weighted) sum of functions involving the completion times.</p><p>Ng et al. <ref type="bibr" target="#b82">[83]</ref> have studied the problem of minimizing a weighted linear combination of the completion time variance (CTV) and the total resource consumption cost for a linear connection between job processing time and resource consumption as given by Eq. ( <ref type="formula" target="#formula_1">1</ref>) (with a j =1 for j =1, . . . , n), and a convex non-decreasing resource consumption cost. Since the classical CTV problem was proven to be NP-hard by Kubiak <ref type="bibr" target="#b66">[67]</ref>, this is also the complexity of the problem studied by Ng et al. <ref type="bibr" target="#b82">[83]</ref>. For the agreeable condition <ref type="bibr" target="#b82">[83]</ref> have presented an O(nU (U -L + 1)(U -L + n)) pseudo-polynomial time optimization algorithm to solve the problem, where U = n j =1 p j and L = n j =1 (p ja j u j ). Although Ng et al. proved that the problem they studied is NP-hard in the ordinary sense under the agreeable condition, it is an open question whether a pseudopolynomial solution exists for the general case too. However, for the general case, they succeed to provide a tight lower bound for the optimal objective value. This lower bound was used to examine the efficiency of two different heuristic algorithms. Wang and Xia <ref type="bibr" target="#b107">[109]</ref> showed that the 1|lin,</p><formula xml:id="formula_33">p 1 p 2 • • • p n and p 1 -a 1 u 1 p 2 -a 2 u 2 • • • p n -a n u n , Ng et al.</formula><formula xml:id="formula_34">a j = 1| 1 n i=1 n j =i |C i -C j | + 2 n j =1 C j + 3 n j =1 v j u j and the 1|lin, a j = 1| 1 n i=1 n j =i |W i -W j | + 2 n j =1 W j + 3 n j =1 v j</formula><p>u j problems can be solved in O(n 3 ) time by adopting a similar approach to the one used by Vickson <ref type="bibr" target="#b103">[105]</ref>, where W j = C jp j is the waiting time of job j . Wang and Xia also showed that if v j = v and u j = u for j = 1, . . . , n, then the time complexity can be reduced to O(n log n) for both problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Weighted number of tardy jobs criterion</head><formula xml:id="formula_35">(F 1 = n j =1 w j U j )</formula><p>For the case of constant processing times, the 1|d j = d| n j =1 w j U j problem is NP-hard <ref type="bibr" target="#b62">[63]</ref>. As a result, we can conclude that for the linear resource consumption function given by Eq. ( <ref type="formula" target="#formula_1">1</ref>), problems P1-P4 are all NP-hard. The 1 n j =1 U j problem with constant processing times is solvable in polynomial time <ref type="bibr" target="#b76">[77]</ref>. Unfortunately, the problem becomes harder to solve for the case of controllable processing times. Cheng et al. <ref type="bibr" target="#b10">[11]</ref> proved that the 1|lin, d j = d, n j =1 U j K| n j =1 u j problem is NP-hard, and building on the results of Daniels and Sarin <ref type="bibr" target="#b24">[25]</ref>, they presented a pseudo-polynomial time algorithm to solve the 1|lin|( n j =1 U j , n j =1 u j ) problem. Cheng et al. <ref type="bibr" target="#b12">[13]</ref> proved that the 1|lin, d j =d, a j =1| n j =1 v j u j + n j =1 U j problem is NP-hard. They presented both a pseudo-polynomial algorithm and a FPTAS for the maximization problem 1|lin, a j =1| n j =1 w j (1-U j )-n j =1 v j u j , and also provided heuristics for producing near-optimal solutions quickly. Cheng et al. <ref type="bibr" target="#b12">[13]</ref> also noted that since all parameters are integers, there must exist an optimal solution where all u j values are integers as well. Therefore, the complexity results given above are also applicable for a discrete type of resource. Chen et al. <ref type="bibr" target="#b8">[9]</ref> proved that the 1|dscr, d j = d| n j =1 v j u j + n j =1 U j problem is NP-hard and provided a pseudo-polynomial time algorithm to solve the 1|dscr| n j =1 v j u j + n j =1 w j U j problem. He et al. <ref type="bibr" target="#b34">[35]</ref> proved that the 1|lin, dscr, n j =1 U j K| n j =1 v j u j is NP-hard in the ordinary sense. He et al. <ref type="bibr" target="#b34">[35]</ref> also studied some problems with minimizing the maximum resource consumption cost objective. They gave an O(n 2 log W ) optimization algorithm for the 1|lin, a j = 1, n j =1 U j K|max j =1,...,n v j u j problem, where W = max j =1,...,n v j u j and 1|lin,</p><formula xml:id="formula_36">d j = d, n j =1 U j K| n j =1 u j NP-hard a [11] 1|lin|( n j =1 U j , n j =1 u j )</formula><p>NP-hard a , pseudo-poly <ref type="bibr" target="#b10">[11]</ref> 1|lin,</p><formula xml:id="formula_37">d j = d, a j = 1| n j =1 v j u j + n j =1 U j NP-hard a [13] 1|lin, d j = d, a j = 1| n j =1 v j u j + n j =1 w j U j NP-hard a [13] 1|dscr, d j = d| n j =1 v j u j + n j =1 U j NP-hard [9]</formula><p>1|dscr| n j =1 v j u j + n j =1 w j U j NP-hard, pseudo-poly <ref type="bibr" target="#b8">[9]</ref> 1|lin, dscr, n j =1 U j K| n j =1 v j u j NP-hard, pseudo-poly <ref type="bibr" target="#b34">[35]</ref> 1|lin,</p><formula xml:id="formula_38">a j = 1, n j =1 U j K|max j =1,...,n v j u j O(n 2 log W ) b [35]</formula><p>1|dscr, lin, a j = 1, n j =1 U j K|max j =1,...,n v j u j O(n 2 log(nl)) c <ref type="bibr" target="#b34">[35]</ref> a The results are applicable both for continuous and discrete type of resource. b W = max j =1,...,n v j u j . c l = max j =1,...,n l j .</p><p>an O(n 2 log(nl)) optimization algorithm for the 1|dscr, lin, a j = 1, n j =1 U j K|max j =1,...,n v j u j problem, where l j is the number of possible processing time values for job j for j = 1, . . . , n and l = max j =1,...,n l j .</p><p>In Table <ref type="table" target="#tab_2">4</ref>, we present a summary of complexity results for the single machine scheduling problem with controllable job processing times and F 1 = n j =1 w j U j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Batch scheduling problems on a single machine</head><p>Modern technologies in flexible manufacturing, for example, in a group technology (GT) environment, lead to new types of scheduling problems in which jobs are processed in batches on a single machine. The main idea in GT is to identify similar jobs and classify them into groups (batches) to take advantage of their similarities. A major setup is needed for switching between two consecutive groups and a minor setup is needed for switching between jobs within the same group. In order to specify the batching model in a GT environment, we will include GT in the field. In GT, researchers used the job availability assumption where a job is considered completed when its processing is finished irrespective when the other jobs in the group may be finished.</p><p>Janiak et al. <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b54">55]</ref> studied a batch scheduling problem in a GT environment with controllable setup (s i ) and job processing times where group splitting is not allowed. In such an environment, a solution is specified by a batch sequence, by a job sequence within each batch and by the resource allocation. In <ref type="bibr" target="#b55">[56]</ref>, they extended the continuousknapsack-based approach for minimizing the makespan with controllable family setup times, i.e., 1|GT, p j = p ja j u j , s f = s fa f i v f , u j U, v f V |C max . Since Janiak et al. <ref type="bibr" target="#b54">[55]</ref> used the sequence independent setup time assumption, the minor setup time between two jobs in the same group can be included in the processing time of the corresponding job. Janiak et al. further assumed in <ref type="bibr" target="#b54">[55]</ref> that all jobs and setups are jointly compressible, i.e., all jobs use the same amount of resource, denoted by u, and setups also use the same amount of resource, denoted by u s . For both a continuous and a discrete type of resource, their objective was to minimize the total weighted resource consumption, subject to meeting job deadlines. Based on an earlier result <ref type="bibr" target="#b88">[90]</ref> stating that if a feasible solution exists, there exists an optimal schedule in which jobs of the same group are sequenced in the earliest due date (EDD) order, Janiak et al. provided an O(gn 2 log n) time optimization algorithm to solve the 1|GT, p j = p ja j u, s i = s ia s i u s , v 1 u s + v 2 u U |L max problem and a O(gn 2 log 2 max{n, max j ∈J (a j ), v 1 , v 2 , u, u s }) time optimization algorithm to solve the 1|GT, dscr, p j = p ja j u, s i = s ia s i u s , v 1 u s + v 2 u U |L max problem, where g is the number of groups and s i = s ia s i u s is the resource consumption function for setups for group i (i = 1, . . . , g). For the case of constant job processing times, Janiak et al. showed that the problem is solvable in O(n log n) time, while if the setup times are constant parameters, the problem is solvable in O(gn 2 ) time for both continuous and discrete type of resource. Ng et al. <ref type="bibr" target="#b78">[79]</ref> apply the model of Janiak et al. <ref type="bibr" target="#b54">[55]</ref> to the case where F 1 = n j =1 w j C j . The corresponding problem with constant job processing and setup times, i.e., 1|GT| n j =1 w j C j is solvable in O(n log n) time by ordering the groups in a non-decreasing order of P f /W f and the jobs within each group in a non-decreasing order of p (j,f ) /w (j,f ) , where (j, f ) denotes the jth job of group f ,</p><formula xml:id="formula_39">P f = s f + n f j =1 p (j,f ) , W f = n f j =1 w (j,f ) for f = 1, .</formula><p>. . , g and j = 1, . . . , n f , and n f is the number of jobs in group f (see <ref type="bibr" target="#b88">[90]</ref> for more detail of this model). Ng et al. <ref type="bibr" target="#b78">[79]</ref> proved that if the resource is continuous, independent of the batch and the job sequence, one should consider at most three candidate values for the optimal resource allocation. Since we can calculate the setup and job processing times for each of these candidates, the problem is reduced to three 1|GT| n j =1 w j C j problems, which can be solved in O(n log n) time as described above. As a result, the time complexity of the 1|GT, p j = p ja j u,</p><formula xml:id="formula_40">s i = s i -a s i u s , v 1 u s + v 2 u U | n j =1 w j C j problem is O(n log n).</formula><p>For a discrete type of resource, Ng et al. <ref type="bibr" target="#b78">[79]</ref> presented an O((n + log 2 N max )n 2 max{n, g 4 }) time optimization algorithm, where N max is the maximal numerical parameter in the problem. The algorithm basically enumerates all the possible combinations of candidates for optimal group sequence and optimal job sequence within each group.</p><p>Cheng and Kovalyov <ref type="bibr" target="#b16">[17]</ref>, Cheng et al. <ref type="bibr" target="#b15">[16]</ref>, Ng et al. <ref type="bibr" target="#b80">[81]</ref> and Shabtay and Steiner <ref type="bibr" target="#b95">[97]</ref> consider the following batch scheduling problem with controllable job processing times: there is a single group of jobs which is to be processed in batches on a single machine. Preceding the production of batch i is a setup time, s i , which may or may not be resource dependent. All jobs in a batch are considered to have been completed together at the completion time of the last job in their batch, i.e., a batch of jobs is removed from the system at this common completion time. This model of job completion times is called the batch availability model (BAM) and it is applicable in situations where jobs flow through processing facilities in containers, such as pallets, boxes or carts. The setup time may be needed, for example, to remove the previous container, to install a new one and to perform some cleaning operations. In order to specify this batching framework we will include BAM in the field. A schedule in the BAM model is specified by a job sequence, the partition of the job sequence into n s batches (where n s is a decision variable), B = (B 1 , B 2 , . . . , B n s ), the job resource allocations, u = (u 1 , u 2 , . . . , u n ) and the setup resource allocations, u s =(u s 1 , u s 2 , . . . , u s ns ).</p><p>Cheng and Kovalyov <ref type="bibr" target="#b16">[17]</ref> proved that the 1|lin, BAM, s i = s, L max 0| n j =1 v j u j problem is NP-hard even if d j = d, p j = p and u j = 1 for j = 1, . . . , n. They also presented a pseudo-polynomial algorithm, which solves the 1|lin, BAM, s i = s, L max 0| n j =1 v j u j problem in O(n n j =1 u j min{d j , js + n i=1 p i }) time. Cheng et al. <ref type="bibr" target="#b15">[16]</ref> studied a problem where both processing times and setups are resource dependent. They assumed that all jobs and setups are jointly compressible, i.e., all jobs use the same amount of resource, and all setups use the same amount of resource. Based on the fact that there exists an optimal solution in which the jobs are ordered according to the EDD rule, they presented O(n 7 ) and O(n 5 log(max{n, v 1 , v 2 , u, u s , max j ∈J a j , a s })) time algorithms for the 1|BAM, p j = p ja j u, s = sa s u s , L max 0| v 1 n s u s + v 2 u problem, and they also showed that if either the setup time or the job processing times are fixed parameters, then the problem can be solved in O(n 4 ) time. They also gave a O(n 5 log(max{n, s, max j ∈J a j , max p j , max j ∈J d j , a s })) time algorithm to solve the P2-type 1|BAM, p j = p ja j u, s = sa s u s , v 1 n s u s + v 2 u U |L max problem.</p><p>Ng et al. <ref type="bibr" target="#b80">[81]</ref> studied the same scheduling environment as in <ref type="bibr" target="#b15">[16]</ref> with a different objective. Based on the fact that there exists an optimal SPT job sequence (i.e., a job sequence where the jobs are ordered in a non-decreasing order of processing times), they presented an O(n 3 ) optimization algorithm to solve the 1|BAM, p j = p ja j u, s i = sa s u s , v 1 n s u s + v 2 u U | n j =1 C j problem. For each possible value of n s ∈ {1, . . . , n}, their algorithm identifies a set of candidates for the optimal resource allocation, which may include no more than three candidates for an n s value. For each candidate, the problem reduces to a 1|BAM, s i = s| n j =1 C j problem, which can be solved by applying the batching algorithm of Coffman et al. <ref type="bibr" target="#b22">[23]</ref>. Based on the above results, Ng et al. <ref type="bibr" target="#b80">[81]</ref> also presented an O(n 3 log N max ) optimization algorithm to solve the 1|BAM, p j = p ja j u, s = sa s u s , n j =1 C j K|v 1 n s u s + v 2 u problem, where N max is the maximal numerical parameter value in the instance. Ng et al. <ref type="bibr" target="#b79">[80]</ref> analyzed the case where different jobs and different setups can consume different amounts of a resource. They provided some properties for the optimal solution of the 1|BAM, lin, a j = 1,</p><formula xml:id="formula_41">s i = s i -u s i | n j =1 C j + v 1 n s i=1 u s i + v 2 n j =1 u j and the 1|BAM, lin, a j = 1, s i = s i -u s i , v 1 n s i=1 u s i + v 2 n j =1 u j U | n j =1</formula><p>C j problems, but the computational complexity of the problems remains open. They also identified the following polynomially solvable special cases: If the job processing times are fixed, the first problem can be solved in O(n 4 ) and the second one in O(n 3 ) time. For agreeable upper and lower bounds on the processing time values (i.e., agreeable p j and p ju j values) the first problem can be solved in O(n 5 ) and the second one in O(n 3 log n) time. If in addition to agreeable upper and lower bounds on the processing times, all setup times are fixed, then the first problem is solvable in O(n 4 ) while the second one in O(n 3 ) time.</p><p>Shabtay and Steiner <ref type="bibr" target="#b95">[97]</ref> studied the case where the job processing times are controllable via Eq. ( <ref type="formula" target="#formula_2">2</ref>) and setup times are also controllable by the resource consumption functions s i = ( s /u s i ) k for i = 1, . . . , n s . The objective was either to minimize n j =1 C j subject to n j =1 u j + n s i=1 u s i U , or to minimize n j =1 C j + v( n j =1 u j + n s i=1 u s i ). For 1|lin, BAM, d j = d, p j = p, u j = 1, s i = s, L max 0| n j =1 v j u j NP-hard <ref type="bibr" target="#b16">[17]</ref> 1|lin, BAM, s i = s, L max 0| n j =1 v j u j NP-hard, pseudo-poly <ref type="bibr" target="#b16">[17]</ref> 1|BAM, p j = p ja j u, s i = sa s u s , L max 0|v 1 n s u s + v 2 u Either O(n 7 ) or O(n 5 log(A)) a <ref type="bibr" target="#b15">[16]</ref> 1|BAM, p j = p ja j u,</p><formula xml:id="formula_42">s i = s -a s u s , v 1 n s u s + v 2 u U |L max O(n 5 log(B)) b [16] 1|BAM, p j = p j -a j u, L max 0|v 1 n s u s + v 2 u O(n 4 ) [16] 1|BAM, s i = s -a s u s , L max 0|v 1 n s u s + v 2 u O(n 4 ) [16] 1|BAM, p j = p j -a j u, s i = s -a s u s , v 1 n s u s + v 2 u U | n j =1 C j O(n 3 ) [81] 1|BAM, p j = p j -a j u, s i = s -a s u s , n j =1 C j K|v 1 n s u s + v 2 u O(n 3 log N max ) [81]</formula><p>1|BAM, lin, a j = 1,</p><formula xml:id="formula_43">s i = s i -u si | n j =1 C j + v 1 ns i=1 u si + v 2 n j =1 u j Open [80] 1|BAM, lin, a j = 1, s i = s i -u si , v 1 ns i=1 u si + v 2 n j =1 u j U | n j =1 C j Open [80] 1|BAM, s i = s i -u si | n j =1 C j + v 1 ns i=1 u si + v 2 n j =1 u j O(n 4 ) [80] 1|BAM, lin, a j = 1, s i = s i -u si | n j =1 C j + v 1 ns i=1 u si + v 2 n j =1 u j O(n 5 ) c [80] 1|BAM, lin, a j = 1, s i = s| n j =1 C j + v 1 ns i=1 u si + v 2 n j =1 u j O(n 4 ) c [80] 1|BAM, s i = s i -u si , v 1 ns i=1 u si + v 2 n j =1 u j U | n j =1 C j O(n 3 ) [80] 1|BAM, lin, a j = 1, s i = s i -u si , v 1 ns i=1 u si + v 2 n j =1 u j U | n j =1 C j O(n 3 log n) c [80] 1|BAM, lin, a j = 1, s i = s, v 1 ns i=1 u si + v 2 n j =1 u j U | n j =1 C j O(n 3 ) c [80] 1|conv, BAM, s i = ( s /u si ) k , n j =1 u j + ns i=1 u si U | n j =1 C j O(n log n) [97] 1|conv, BAM, s i = ( s /u si ) k | n j =1 C j + v( n j =1 u j + ns i=1 u si ) O(n log n) [97] 1|GT, p j = p j -a j u j , s f = s f -a fi v f , u j U, v f V |C max O(n 2 ) [56] 1|GT, p j = p j -a j u, s i = s i -a si u s , v 1 u s + v 2 u U |L max O(gn 2 log n) [55]</formula><p>1|GT, dscr,</p><formula xml:id="formula_44">p j = p j -a j u, s i = s i -a si u s , v 1 u s + v 2 u U |L max O(gn 2 log 2 C) d [55] 1|GT, s i = s i -a si u s , v 1 u s + v 2 u U |L max O(n log n) [55]</formula><p>1|GT, dscr,</p><formula xml:id="formula_45">s i = s i -a si u s , v 1 u s + v 2 u U |L max O(n log n) [55]</formula><p>1|GT, p j = p ja j u,</p><formula xml:id="formula_46">s i = s i , v 1 u s + v 2 u U |L max O(gn 2 ) [55]</formula><p>1|GT, dscr, p j = p ja j u,</p><formula xml:id="formula_47">s i = s i , v 1 u s + v 2 u U |L max O(gn 2 ) [55]</formula><p>1|GT, p j = p ja j u,</p><formula xml:id="formula_48">s i = s i -a si u s , v 1 u s + v 2 u U | n j =1 w j C j O(n log n) [79]</formula><p>1|GT, dscr, p j = p ja j u,</p><formula xml:id="formula_49">s i = s i -a si u s , v 1 u s + v 2 u U | n j =1 w j C j O((n + log 2 N max )n 2 max{n, g 4 })<label>[79]</label></formula><p>a A = max{n, v 1 , v 2 , u, u s , max j ∈J a j , a s }. b B = max{n, s, max j ∈J a j , max p j , max j ∈J d j , a s }. c Agreeable p j and p ju j values. d C = max{n, max j ∈J a j , v 1 , v 2 , u, u s }.</p><p>both problems, Shabtay and Steiner proved that there exists an optimal job sequence where the jobs are sequenced in a non-decreasing order of j . Consequently, they were able to provide a closed-form solution for the optimal resource allocations as a function of the partition of the optimal sequence into batches and thus reduce the problem to a partitioning problem.A variant of the algorithm by Coffman et al. <ref type="bibr" target="#b22">[23]</ref> was used to solve the reduced problem. The overall complexity of the optimization algorithms of Shabtay and Steiner <ref type="bibr" target="#b95">[97]</ref> for the 1|BAM, conv,</p><formula xml:id="formula_50">s i = ( s /u s i ) k , n j =1 u j + n s i=1 u s i U | n j =1 C j and 1|BAM, conv, s i = ( s /u s i ) k | n j =1 C j + v( n j =1 u j + n s i=1 u s i ) problems is O(n log n).</formula><p>In contrast, we mention that the complexity of the same problems with linear resource consumption function is still open (see <ref type="bibr" target="#b79">[80]</ref>).</p><p>In Table <ref type="table" target="#tab_3">5</ref>, we present a summary of complexity results for single machine batch scheduling problems with controllable job processing times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.">Due date assignment problems</head><p>Meeting due dates has always been one of the most important objectives in scheduling. Customers demand that suppliers meet contracted delivery dates or face large penalties. While traditional scheduling models considered due dates as given by exogenous decisions, in an integrated system, they are determined by taking into account the system's ability to meet the quoted delivery dates. In order to avoid penalties, including the possibility of losing customers, companies are under increasing pressure to quote attainable delivery dates. At the same time, promising delivery dates too far into the future may not be acceptable to the customer or may force a company to offer price discounts in order to retain the business. Thus there is an important trade-off between assigning relatively short due dates to customer orders and avoiding tardiness penalties. This is why an increasingly large number of recent studies viewed due date assignment as part of the scheduling process and showed how the ability to control due dates can be a major factor in improving system performance. Recent surveys on due date assignment scheduling problems are given by Gordon et al. <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b29">30]</ref>. In the following, we present three of the most commonly used due date assignment methods:</p><p>• The common due date assignment method (usually referred to as CON) where all jobs are assigned the same due date, that is d j = d for j = 1, . . . , n. • The slack due date assignment method (usually referred to as SLK) where jobs are given an equal flow allowance that reflects equal waiting time (i.e., equal slacks), that is, d j = p j + slk for j = 1, . . . , n, where slk 0 is a decision variable. • The unrestricted due date assignment method where each job can be assigned a different due date with no restrictions.</p><p>(We will refer to this method as DIF in short.)</p><p>The case where both due date and job processing times are controllable reflects a very flexible scheduling system and the scheduler can take advantage of this flexibility to improve the system performance. The relevant literature can be divided into two parts based on different objective functions used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.1.">Earliness-tardiness problems</head><p>The widespread use of Just-in-Time systems in industry made the early delivery of products undesirable. This led to the introduction of earliness penalties, which may reflect additional storage or insurance costs, or costs of product deterioration over time, in addition to the traditional tardiness penalties.</p><p>In the earliness-tardiness single machine scheduling problem with due date assignment and resource dependent processing times, the objective is to find the job sequence * ∈ , the set of due dates</p><formula xml:id="formula_51">d * = (d * 1 , d * 2 , . . . , d * n )</formula><p>and the resource allocation u * = (u * 1 , u * 2 , . . . , u * n ) which minimize a cost function that includes the costs of earliness, tardiness, due date assignment, makespan and resource consumption given by the following equation:</p><formula xml:id="formula_52">Z( , d, u) = n j =1 E j + n j =1 T j + n j =1 d j + C max + n j =1 v j u j ,<label>(7)</label></formula><p>where , , and are non-negative parameters representing the cost of one unit of earliness, tardiness, due date, and operation time, respectively. For the CON method the optimization is done under the constraint that d j = d for j = 1, . . . , n, while a constraint that d j = p j + slk for j = 1, . . . , n is included for the SLK method. For the CON due date assignment method, in the special case of linear resource consumption functions, a j = 1 for j = 1, . . . , n, and = = 0, Panwalkar and Rajagopalan <ref type="bibr" target="#b87">[88]</ref> proved that there exists an optimal schedule in which each job will be processed either with its non-compressed (maximal) or its most compressed (minimal) processing time, and reduced the problem to a linear assignment problem which is solvable in O(n 3 ) time. Cheng et al. <ref type="bibr" target="#b21">[22]</ref> extended Panwalkar and Rajagopalan's research by adding the due date cost to the objective and by also solving the problem for the case of slack due date assignments (SLK) in O(n 3 ) time. Biskup and Cheng <ref type="bibr" target="#b4">[5]</ref> extended Panwalkar and Rajagopalan's research by adding the total completion time cost to the objective function. They showed that the extended problem can also be solved by reducing it to a linear assignment problem. Liman et al. <ref type="bibr" target="#b72">[73]</ref> showed that the complexity of the problem does not increase if a common due window is to be assigned, i.e., the scheduler can assign a time window <ref type="bibr">[d, d]</ref> where the objective includes a linear penalty for both d and d. In the model given in <ref type="bibr" target="#b72">[73]</ref>, the earliness of a job is calculated with respect to d, while the tardiness is calculated with respect to d. Cheng et al. <ref type="bibr" target="#b18">[19]</ref> have showed that if v j = v for j = 1, . . . , n then the complexity reduces to O(n 2 ) for the CON, SLK and the common due window methods. For the CON method, Biskup and Jahnke <ref type="bibr" target="#b5">[6]</ref> studied the special case where the job processing times are jointly reducible by the same proportional amount, i.e., the case where a j = p j and u j = u for j = 1, . . . , n. They presented O(n log n) time optimization algorithms to minimize a cost function containing earliness, tardiness, resource consumption and due date assignment costs. Ng et al. <ref type="bibr" target="#b81">[82]</ref> extended Biskup and Jahnke's results to the case where the job processing times are jointly reducible by the same amount of the resource, i.e., for the case where u j = u for j = 1, . . . , n, and presented an O(n 2 log n) time optimization algorithm for the same objective. Shabtay and Steiner <ref type="bibr" target="#b96">[98]</ref> provided a unified optimization algorithm to minimize Eq. ( <ref type="formula" target="#formula_52">7</ref>) for the three different due date assignment methods (CON, SLK and DIF) in O(n 3 ) time if the resource consumption function is given by Eq. <ref type="bibr" target="#b0">(1)</ref>. They also presented an O(n log n) time unified optimization algorithm for the three different due date assignment methods if the resource consumption function is given by Eq. (2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.2.">Weighted number of tardy jobs</head><p>Here the objective is to find the job sequence * ∈ , the set of due dates</p><formula xml:id="formula_53">d * = (d * 1 , d * 2 , . . . , d * n )</formula><p>and the resource allocations u * = (u * 1 , u * 2 , . . . , u * n ) which minimize a cost function that includes the weighted number of tardy jobs and the costs of due date assignment, makespan and resource consumption defined by the following equation:</p><formula xml:id="formula_54">Z( , u, d) = n j =1 w j U j + n j =1 d j + C max + n j =1 v j u j ,<label>(8)</label></formula><p>where and are non-negative parameters representing the cost of delaying the due date or increasing the operation time by one unit, respectively.</p><p>As far as we know, there are only three papers which combined due date assignment and continuous resource allocation decisions to minimize an objective that includes a penalty on the number of tardy jobs. The first two papers are devoted to the combination of the linear resource consumption function with the CON due date assignment method. For a special case of the linear resource consumption function where the job processing times are jointly reducible by the same proportional amount, i.e., the case where a j = p j and u j = u for j = 1, . . . , n, Biskup and Jahnke <ref type="bibr" target="#b5">[6]</ref> presented an O(n log n) time optimization algorithm to minimize a penalty function that includes the number of tardy jobs, due date assignment and resource allocation costs. Ng et al. <ref type="bibr" target="#b81">[82]</ref> extended Biskup and Jahnke's results to the case where the job processing times are jointly reducible by the same amount of the resource, i.e., for the case where u j = u for j = 1, . . . , n, and presented an O(n 2 log n) time optimization algorithm to solve the same problem. In contrast with <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b81">[82]</ref>, Shabtay and Steiner <ref type="bibr" target="#b97">[99]</ref> allowed the individual control of the processing time for each job. They also analyzed the more general case where different jobs might have different tardiness penalties. Shabtay and Steiner provided a complete analysis of the problem with the three due date assignment methods (CON, SLK and DIF) and both the linear and the convex resource consumption functions given in Eqs. ( <ref type="formula" target="#formula_1">1</ref>) and (2), respectively. The results for single machine scheduling problems with controllable job processing times and due date assignment are summarized in Table <ref type="table" target="#tab_4">6</ref>. 1|lin,</p><formula xml:id="formula_55">a j = 1| n j =1 E j + n j =1 T j + n j =1 v j u j CON O(n 3 ) [88] 1|lin, a j = 1| n j =1 E j + n j =1 T j + n j =1 d j + n j =1 v j u j CON/SLK O(n 3 ) [22] 1|lin, a j = 1| n j =1 E j + n j =1 T j + n( d + d) + n j =1 v j u j CON(window) O(n 3 ) [73] 1|p j = p j (1 -u)| n j =1 E j + n j =1 T j + n j =1 d j + f (u) CON O(n log n) [6] 1|lin, u j = u| n j =1 E j + n j =1 T j + n j =1 d j + f (u) CON O(n 2 log n) [82] 1|lin| n j =1 E j + n j =1 T j + n j =1 d j + C max + n j =1 v j u j CON/SLK/DIF O(n 3 ) [98] 1|lin| n j =1 E j + n j =1 T j + n j =1 d j + C max + n j =1 v j u j CON/SLK/DIF O(n log n) [98] 1|lin| n j =1 E j + n j =1 T j + n j =1 d j + n j =1 vu j CON/CON(window)/SLK O(n 2 ) [19] 1|p j = p j (1 -u)| n j =1 U j + n j =1 d j + f (u) CON O(n log n) [6] 1|lin, u j = u| n j =1 U j + n j =1 d j + f (u) CON O(n 2 log n) [82] 1|lin| n j =1 j U j + n j =1 d j + C max + n j =1 v j u j CON/SLK O(n) [99] 1|conv| n j =1 j U j + n j =1 d j + C max + n j =1 v j u j CON/SLK O(n) [99] 1|lin| n j =1 j U j + n j =1 d j + C max + n j =1 v j u j DIF O(n 4 ) [99] 1|conv| n j =1 j U j + n j =1 d j + C max + n j =1 v j u j DIF O(n 4 ) [99] 1|conv| n j =1 U j + n j =1 d j + C max + n j =1 v j u j DIF O(n) [99]</formula><p>It is interesting to note that the solution methods for all problems with linear resource consumption function discussed in this subsection generate optimal schedules with the all-or-none property, i.e., a job is either compressed to its minimum possible duration or not compressed at all. This all-or-none property was also observed in many other scheduling problems with a linear model of processing times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Multi-machine problems with controllable processing times</head><p>This section is devoted to the multi-machine scheduling environment and the division into subsections is based on the machine configuration, i.e., whether we have machines in parallel, a flow shop, a job shop, or an open shop.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Parallel machines</head><p>In a parallel machine environment, each job must be processed by any one of the m machines. Three different systems of parallel machines are considered in the literature:</p><p>• Identical machines ( = P m), where there are m identical machines.</p><p>• Uniform machines ( = Qm), where there are m machines in parallel and the machines have different speeds.</p><p>Machine i has a speed of s i , i.e., the processing time p ij of job j on machine i is equal to p j /s i . • Unrelated machines ( = Rm), where there are m machines in parallel and each machine has a different speed for each job. Let s ij be the speed when machine i is processing job j, then the processing time p ij of job j on machine i is equal to p j /s ij .</p><p>In the parallel machine framework, a schedule is specified by an m-partition of the n jobs, reflecting their assignment to the m machines, by job sequences i ∈ i for i = 1, . . . , m, where i is the set of all n i ! possible permutations of the n i jobs assigned to machine i, and a by a vector of resource allocations, u = (u 1 , u 2 , . . . , u n ).</p><p>The first to consider a parallel machine system with controllable job processing times were Alidaee and Ahmadian <ref type="bibr" target="#b0">[1]</ref>. They extended the results given by Vickson <ref type="bibr" target="#b103">[105]</ref> for the 1|lin, a j = 1| n j =1 C j + n j =1 v j u j problem and by Panwalkar and Rajagopalan <ref type="bibr" target="#b87">[88]</ref> for the 1|lin, a j = 1| n j =1 E j + n j =1 T j + n j =1 v j u j problem with the CON due date assignment method to the case of non-identical parallel machines. (For the sake of shorter notation in the remainder of the paper, we add the due date assignment method-if applicable-to the field in the problem description, e.g., the last problem will be denoted by Rm|lin, a j = 1, CON| n j =1 E j + n j =1 T j + n j =1 v j u j .) They showed that both the Rm|lin, a j = 1| n j =1 C j + n j =1 v j u j and the Rm|lin, a j = 1, CON| n j =1 E j + n j =1 T j + n j =1 v j u j problems are solvable in O(n 3 m + n 2 m log(nm)) time by solving an assignment problem. Both these problems possess the all-or-none property that was recognized earlier by Vickson <ref type="bibr" target="#b103">[105]</ref> and Panwalkar and Rajagopalan <ref type="bibr" target="#b87">[88]</ref> for the case of a single machine. The results of Alidaee and Ahmadian <ref type="bibr" target="#b0">[1]</ref> can be easily extended to deal with arbitrary a j values, and even the case of general convex increasing resource consumption cost functions ( f ij (u ij ), for i = 1, . . . , m and j = 1, . . . , n with f ij (u ij = 0) = 0, and f ij (u ij ) = ∞ for u ij &gt; u ij ) as described by Cheng et al. <ref type="bibr" target="#b11">[12]</ref>. The results in <ref type="bibr" target="#b11">[12]</ref> are restricted to the case where f ij is differentiable on [0, u ij ], f -1 ij (y) exists, and it can be evaluated in constant time for y ∈</p><formula xml:id="formula_56">[f -1 ij (0), f -1 ij (u ij )</formula><p>]. The preemptive Pm|pmtn|C max problem is solvable in a linear time <ref type="bibr" target="#b74">[75]</ref> with a minimal objective value of</p><formula xml:id="formula_57">C max = max max j ∈J p j , j ∈J p j m .<label>(9)</label></formula><p>Consequently, the extension of Pm|pmtn|C max for problem types P1-P3 with controllable processing times reduces either to a linear or a convex programming problem (depending on the resource consumption function). Nowicki and Zdrzalka <ref type="bibr" target="#b86">[87]</ref> provided an O(n 2 ) greedy algorithm to solve the Pm|lin, a j = 1, pmtn|(C max , n j =1 v j u j ) problem, and Jansen and Mastrolilli <ref type="bibr" target="#b59">[60]</ref> presented a linear time algorithm to solve the Pm|lin, pmtn, C max K| n j =1 v j u j problem. Shabtay and Kaspi <ref type="bibr" target="#b92">[94]</ref> showed that the Pm|conv, pmtn, n j =1 u j U |C max problem can be solved in O(n 2 ) time. Since the Pm C max problem with fixed processing times is known to be NP-hard, it is straightforward that its extension to P1-P4 type of problems with linear resource consumption functions is also NP-hard. Jansen and Mastrolilli <ref type="bibr" target="#b59">[60]</ref> provided a PTAS for the Pm|lin, C max K| n j =1 v j u j problem, which minimizes the resource consumption cost with a makespan not greater than (1 + )K, if a solution with a makespan not greater than K exists. They also gave a PTAS for the Pm|lin, n j =1 v j u j U |C max and for the Pm|lin|C max + n j =1 v j u j problems. Trick <ref type="bibr" target="#b102">[104]</ref> provided a 2.618-approximation algorithm for the Rm|lin|C max + n j =1 v j u j problem, which was later improved by Shmoys and Tardos <ref type="bibr" target="#b99">[101]</ref> to a 2-approximation.</p><p>Mastrolilli <ref type="bibr" target="#b73">[74]</ref> studied the sum of completion time problem on a set of identical parallel machines with job release dates both in the preemptive and non-preemptive case. He presented a polynomial time algorithm to solve the Pm|lin, pmtn, r j , n j =1 v j u j U | n j =1 C j problem by solving O(log(n max j ∈J p j )) linear programming problems, and a (3 -2/m)-approximation algorithm for the strongly NP-hard Pm|lin, r j , n j =1 v j u j U | n j =1 C j problem. In the suggested approximation algorithm, the jobs are ordered according to the FIFO rule (that is, jobs are assigned to the first available machine in a non-decreasing order of release dates), and the processing times are set to be equal to the optimal processing times for the Pm|lin, pmtn, r j , n j =1 v j u j U | n j =1 C j problem. Cheng et al. <ref type="bibr" target="#b18">[19]</ref> have showed that the Qm|lin, a j =1, r j =r -u r j , u r j =u r , r -r 3 ) time and that the time complexity can be reduced to O(n 2 ) if v j = v for j = 1, . . . , n. However, Cheng et al. <ref type="bibr" target="#b17">[18]</ref> observed that the similar problem with the makespan criterion is NP-hard even if the machines are identical.</p><formula xml:id="formula_58">n j =1 p j | n j =1 C j + n j =1 v j u j + n j =1 v r u r j problem is solvable in O(n</formula><p>Shabtay and Kaspi <ref type="bibr" target="#b92">[94]</ref> showed that the Pm|conv|C max problem is NP-hard, and that Pm|conv| n j =1 C j is solvable in O(n log n) time.</p><p>Chen <ref type="bibr" target="#b7">[8]</ref> developed column generation based branch and bound optimization algorithms for the NP-hard Pm|lin| n j =1 w j C j + n j =1 v j u j , Pm|dscr| n j =1 w j C j + n j =1 v j u j , Pm|lin| n j =1 w j U j + n j =1 v j u j and Pm|dscr| n j =1 w j U j + n j =1 v j u j problems. He reported that the algorithms are capable to solve problems with up to 40 jobs and any number of parallel machines within a reasonable CPU time.</p><p>The Qm|pmtn|C max problem is solvable in O(n + m log n) time (Gonzalez and Sahni <ref type="bibr" target="#b27">[28]</ref>) with a minimal objective value of</p><formula xml:id="formula_59">C max = max max t=1,...,m-1 t k=1 p [k] t k=1 s k , n k=1 p [k] m k=1 s k ,<label>(10)</label></formula><p>where</p><formula xml:id="formula_60">s 1 s 2 • • • s m and =([1], [2], . . . , [n]) is a permutation of J such that p [1] p [2] • • • p [n]</formula><p>. Consequently, the extension of Qm|pmtn|C max to controllable processing times for problem types P1-P3 reduces either to a linear or a convex programming problem. Nowicki and Zdrzalka <ref type="bibr" target="#b86">[87]</ref> provided an O(n max{m, log n}) greedy algorithm to solve the Qm|lin, a j = 1, pmtn, C max K| n j =1 v j u j problem. As a result, they were able to construct an -approximation of the efficient frontier for the Qm|lin, a j = 1, pmtn|(C max , n j =1 v j u j ) in O(n log n + ( C max (0) -C max (u) / )nm) time, where C max (0) and C max (u) are the values computed from Eq. ( <ref type="formula" target="#formula_59">10</ref>) with u = (0, 0, . . . , 0) and u = (u 1 , u 2 ,…,u n ), respectively. It is still an open question whether this problem is polynomially solvable.</p><p>Inspired by Skutella's [102] 3 2 -approximation algorithm for the Rm n j =1 w j C j problem, Zhang et al. <ref type="bibr" target="#b110">[112]</ref> presented a 3  2 -approximation algorithm for the Rm|lin, a j = 1| n j =1 w j C j + n j =1 m i=1 v ij u ij problem using the technique of convex quadratic programming relaxation.</p><p>In Table <ref type="table" target="#tab_5">7</ref>, we present a summary of complexity results for parallel machine scheduling problems with controllable job processing times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Flow shops and job shops</head><p>In this subsection, we review the known results for flow shops and job shops. Their main characteristics are described below.</p><p>• Flow shop ( = F m): In a flow shop, the machines are linearly ordered and the jobs all must follow the same route from the first to the last machine. • Job shop ( = J m): In a job shop, each job has its own predetermined route to follow on the machines. Usually it is assumed that each job visits each machine at most once. Note that the flow shop is a special case of the job shop. Rm|lin,</p><formula xml:id="formula_61">a j = 1| n j =1 C j + n j =1 v j u j O(n 3 m + n 2 m log(nm)) [1]</formula><p>Rm|lin,</p><formula xml:id="formula_62">a j = 1, CON| n j =1 E j + n j =1 T j + n j =1 v j u j O(n 3 m + n 2 m log(nm)) a [1]</formula><p>Rm|lin,</p><formula xml:id="formula_63">a j = 1| n j =1 C j + m i=1 n j =1 f ij (u ij ) O(n 3 m + n 2 m log(nm)) b [12]</formula><p>Rm|lin,</p><formula xml:id="formula_64">a j = 1, CON| n j =1 E j + n j =1 T j + m i=1 n j =1 f ij (u ij )</formula><p>O(n 3 m + n 2 m log(nm)) a and b <ref type="bibr" target="#b11">[12]</ref> Pm|lin,</p><formula xml:id="formula_65">a j = 1, pmtn|(C max , n j =1 v j u j ) O(n 2 ) [87]</formula><p>Pm|lin, pmtn, C max K| n j =1 v j u j O(n) <ref type="bibr" target="#b59">[60]</ref> Pm|conv, pmtn,</p><formula xml:id="formula_66">n j =1 u j U |C max O(n 2 ) [94]</formula><p>Pm|lin, C max K| n j =1 v j u j PTAS <ref type="bibr" target="#b59">[60]</ref> Pm|lin, n j =1 v j u j U |C max PTAS <ref type="bibr" target="#b59">[60]</ref> Pm|lin|C max + n j =1 v j u j PTAS <ref type="bibr" target="#b59">[60]</ref> Rm|lin|C max + n j =1 v j u j 2.618-approx <ref type="bibr" target="#b102">[104]</ref> Rm|lin|C max + n j =1 v j u j 2-approx <ref type="bibr" target="#b99">[101]</ref> Pm|lin, pmtn, r j , n j =1 v j u j U | n j =1 C j O(log(n max j ∈J p j )) LP problems <ref type="bibr" target="#b73">[74]</ref> Pm|lin,</p><formula xml:id="formula_67">r j , n j =1 v j u j U | n j =1 C j (3 -2/m)-approx [74] Rm|lin, a j = 1| n j =1 w j C j + n j =1 m i=1 v ij u ij 3/2-approx [112] Pm|conv|C max NP-hard [94] Qm|lin, a j = 1, r j = r -u rj | n j =1 C j + n j =1 v j u j + n j =1 v r u rj O(n 3 ) c [19] Qm|lin, a j = 1, r j = r -u rj | n j =1 C j + n j =1 vu j + n j =1 v r u rj O(n 2 ) c [19] Pm|lin, a j = 1, r j = r -u rj |C max + n j =1 vu j + n j =1 v r u rj NP-hard c [18] Pm|conv| n j =1 C j O(n log n) [94] Qm|lin, a j = 1, pmtn, C max K| n j =1 v j u j O(n max{m, log n}) [87] Qm|lin, a j = 1, pmtn|(C max , n j =1 v j u j ) Open, O(n log n + Anm/ ) d<label>[87]</label></formula><p>a The due dates are assignable according to the CON method.</p><formula xml:id="formula_68">b f ij (u ij ) is a convex function, differentiable on [0, u ij ], f -1 ij (y) can be calculated in a constant time for y ∈ [f -1 ij (0), f -1 ij (u ij )], f ij (u ij = 0) = 0 and f ij (u ij ) = ∞ for u ij &gt; u ij .</formula><p>c For u rj = u r and the unrestricted case where rr n j =1 p j . d A = C max (0) -C max (u) where C max (0) and C max (u) are the values of Eq. ( <ref type="formula" target="#formula_59">10</ref>) with u = (0, 0, . . . , 0) and u = (u 1 , u 2 ,…,u n ), respectively.</p><p>Each schedule in a job shop is specified by a job sequence on every machine, i ∈ for i =1, . . . , m, and by a matrix of resource allocations u = (u ij ) for j = 1, . . . , n and i = 1, . . . , m. For flow shops, researchers usually considered only the case in which the job sequences are restricted to be identical on each machine, i.e., i = for i = 1, . . . , m. This version of the problem is called the permutation flow shop problem and it is specified by including prmu in the field. If, in addition, the jobs are not allowed to wait between the machines, the problem is called the no-wait flow shop problem, and it is specified by including nw in the field.</p><p>Janiak <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b42">43,</ref><ref type="bibr" target="#b47">48]</ref> and Nowicki and Zdrzalka <ref type="bibr" target="#b84">[85]</ref> were the first to analyze flow shop scheduling systems with controllable job processing times. By reducing the knapsack problem to it, Nowicki and Zdrzalka proved that the F 2|lin|wC max + 2 i=1 n j =1 v ij u ij problem is NP-hard even in the case where a ij = 1 for i = 1, 2 and j = 1, . . . , n, the processing times in the second machine are non-controllable, and all the processing costs are identical. Similar results were obtained by Janiak <ref type="bibr" target="#b45">[46]</ref> for the F 2|lin, C max K| 2 i=1 n j =1 v ij u ij problem and also by Janiak <ref type="bibr" target="#b49">[50]</ref> for the F 2|lin, 2</p><formula xml:id="formula_69">i=1 n j =1 v ij u ij U | C max problem.</formula><p>It remains an open question whether the above problems are strongly NP-hard or NP-hard in the ordinary sense. Janiak <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b49">50]</ref> also identified some polynomially solvable special cases of the P1-P4 versions of F 2|lin|C max , which are summarized in Table <ref type="table" target="#tab_6">8</ref>.</p><p>Nowicki and Zdrzalka <ref type="bibr" target="#b84">[85]</ref> presented a 3 2 -approximation algorithm for the F 2|lin|wC max + 2 i=1 n j =1 v ij u ij problem. They also showed that the approximation algorithm has a better performance bound if the job processing times are controllable only on the first machine and all unit resource consumption costs are identical. Nowicki <ref type="bibr" target="#b83">[84]</ref> further improved these approximation results by providing a 4  3 -approximation algorithm for the problem. In addition, Nowicki presented an extension of his algorithm to the m-machine (m 2) permutation flow shop problem, which yields an approximation algorithm with a worst case ratio equal to 1  2 ( + √ (m -1))</p><formula xml:id="formula_70">+ 1 4 + O(1/ √ m)</formula><p>, where is the </p><formula xml:id="formula_71">F 2|lin|wC max + 2 i=1 n j =1 v ij u ij NP-hard, 3 2 -approx [85] F 2|lin|wC max + 2 i=1 n j =1 v ij u ij 4 3 -approx [84] F 2|lin, C max K| 2 i=1 n j =1 v ij u ij NP-hard [46] F 2|lin, 2 i=1 n j =1 v ij u ij U | C max NP-hard, 2-approx [50] F 2|lin|(C max , 2 i=1 n j =1 v ij u ij ) F 2|lin|C max + 2 i=1 n j =1 v ij u ij F 2|lin, C max K| 2 i=1 n j =1 v ij u ij F 2|lin, 2 i=1 n j =1 v ij u ij U |C max O(n log n) a [50] Fm|lin, prmu|wC max + 2 i=1 n j =1 v ij u ij 1 2 ( + (m -1) + 1 4 + O(1/ √ m) b [84] Fm|p ij = p j -u j |(C max , n j =1 v j u j ) O(n log n) [20] Fm|p ij = p j -u j |(C max , n j =1 v 1j u 2 j + v 2j u j ) O(n 2 ) [20] F 2|conv, nw, 2 i=1 n j =1 u ij U |C max Strongly NP-hard, 2 1/k+1 -approx [96] F 2|conv, nw, 2 i=1 n j =1 u ij U |C max O(n log n) c [96] Jm|lin, C max K| n j =1 v j u j PTAS [61] Jm|lin, n j =1 v j u j U |C max PTAS [61] Jm|lin|C max + n j =1 v j u j PTAS [61] O2|conv, 2 i=1 n j =1 u ij U |C max O(n log n) [95] O2|lin, a ij = 1, C max K| 2 i=1 n j =1 v ij u ij O(n) [21] O2|lin, a ij = 1|(C max , 2 i=1 n j =1 v ij u ij ) O(n log n) [21] O3|conv, 3 i=1 n j =1 u ij U |C max NP-hard<label>[95]</label></formula><p>a If the processing times on the second machine are non-controllable, i.e., u 2j = 0 and p 1j = p 1 and u 1j = u 1 ; and/or a 1j = a 1 and u 1j = u 1 ; and/or p 1j = p 1 and a 1j = a 1 ; for j = 1, . . . , n.</p><p>b is the worst-case performance ratio of a procedure used for solving Fm|prmu|C max with fixed processing times. c Agreeable 1j and 2j values or 1 <ref type="bibr" target="#b1">[2]</ref> 1 <ref type="bibr" target="#b0">[1]</ref> 1 <ref type="bibr" target="#b3">[4]</ref> 1 <ref type="bibr" target="#b2">[3]</ref> , . . . ,</p><formula xml:id="formula_72">1[m] 1,[m-1] , where = ([1], [2], . . . , [n]</formula><p>) is a job sequence in which the jobs are ordered in a non-increasing order of the 2j .</p><p>worst-case performance ratio of a procedure used for solving the sequencing problem Fm|prmu|C max with fixed processing times. (For example, applying the approximation algorithm of Nawaz et al. <ref type="bibr" target="#b77">[78]</ref> to the Fm|prmu|C max problem yields = O(nlog 2 m).) Janiak <ref type="bibr" target="#b49">[50]</ref> presented four 2-approximation algorithms for the F 2|lin, 2 i=1 n j =1 v ij u ij U |C max problem. He also provided an experimental performance analysis for the suggested heuristics and presented an exact branch and bound optimization algorithm based on some elimination properties.</p><p>Janiak <ref type="bibr" target="#b43">[44]</ref> studied the Fm|lin, n j =1 u ij U i |C max problem, where the resource consumption is both 'locally' bounded for each operation, i.e., 0 u ij u ij p ij /a ij for i = 1, . . . , m and j = 1, . . . , n, and globally bounded for each machine, i.e., n j =1 u ij U i for i = 1, . . . , m. Janiak presented a branch and bound optimization algorithm to solve the problem based on some properties he obtained. Cheng and Janiak <ref type="bibr" target="#b13">[14]</ref> extended Janiak's work by considering the permutation flow shop problem on m machines with general convex decreasing resource consumption functions, where the resource consumption of each job is constrained 'locally' to be within a given range and there is also a global upper bound on the total resource consumption. They analyzed the structure of the optimal solution, which provided some elimination properties that were exploited in a branch and bound optimization scheme. Cheng and Janiak also presented m-approximation algorithms together with the results of computational experiments.</p><p>Cheng and Shakhlevich <ref type="bibr" target="#b19">[20]</ref> studied the proportionate flow shop problem where every operation of a job has the same processing time on each machine. For this Fm|p ij = p ju j |(C max , n j =1 v j u j ) problem, Cheng and Shakhlevich developed an O(n log n) time optimization algorithm. They also suggested an O(n 2 ) time optimization algorithm for solving the Fm|p ij = p ju j |(C max , n j =1 v 1j u 2 j + v 2j u j ) problem, where v 1j , v 2j are positive parameters for j = 1, . . . , n.</p><p>Janiak and Portmann <ref type="bibr" target="#b57">[58]</ref> provided some properties of the optimal schedule for the strongly NP-hard Fm|lin, prmu,</p><formula xml:id="formula_73">m i=1 n j =1 v ij u ij U |C max problem.</formula><p>Based on these properties, they constructed four different genetic algorithms as heuristic solutions. The heuristics were tested in an experimental study. Gupta et al. <ref type="bibr" target="#b32">[33]</ref> suggested heuristic algorithms to solve the strongly NP-hard Fm|lin, prmu, r j , m i=1 n</p><formula xml:id="formula_74">j =1 u ij U | n j =1 j E j + n j =1 j T j + n j =1</formula><p>w j C j + n j =1 j d j problem for three different due date assignment methods. The suggested heuristics are based on job insertion techniques and iterative local search algorithms. Since there is no effective exact optimization algorithm and a tight lower bound for the problem, the heuristics suggested by Gupta et al. were tested relative to each other. Shabtay et al. <ref type="bibr" target="#b94">[96]</ref> consider the case of a convex resource consumption function to minimize the makespan in a two-machine flow-shop with no-wait restriction, i.e., the F 2|conv, nw, 2 i=1 n j =1 u ij U |C max problem. They used the equivalent load method (see <ref type="bibr" target="#b75">[76]</ref>) to reduce the problem to a special case of the Traveling Salesman Problem (TSP) on permuted Monge matrices. They showed that the reduced problem is strongly NP-hard and provided two special cases which are polynomially solvable. They also gave a 2 1/k+1 -approximation guarantee for the problem, where k is the exponent in the resource consumption function of equation ( <ref type="formula" target="#formula_2">2</ref>). Shabtay et al. also tested two different subtour-patching heuristics in large-scale computational experiments on randomly generated instances. The heuristics tended to produce the optimal solution for most of the instances with increasing probability as the number of cities (jobs) increased. For example, for 1000 out of 1000 randomly generated numerical instances, the heuristics produced the optimal solution for every set of instances when the number of cities was greater than 100.</p><p>Grabowski and Janiak <ref type="bibr" target="#b30">[31]</ref> studied a job shop scheduling problem where the processing time of the jobs on some machines is a linear decreasing function with respect to the amount of a continuously divisible, non-renewable, locally and globally constrained resource. It is clear that this problem is NP-hard even for the m = 2 case, since Janiak <ref type="bibr" target="#b45">[46]</ref> proved that the corresponding flow shop problem on two machines is already NP-hard. Grabowski and Janiak analyzed the structure of the optimal solution, which yielded some elimination properties that they exploited in a branch and bound solution scheme. Janiak and Szkodny <ref type="bibr" target="#b58">[59]</ref> extended Grabowski and Janiak's <ref type="bibr" target="#b30">[31]</ref> branch and bound optimization algorithm by considering the case of general convex decreasing resource consumption functions that are both locally and globally constrained. They reported that they experienced computational difficulties when solving larger problems (e.g., 10 jobs on 10 machines) even under the assumption that operation times are linearly controllable on only one of the ten machines.</p><p>Jansen et al. <ref type="bibr" target="#b60">[61]</ref> provided a PTAS for the Jm|lin, C max K| n j =1 v j u j problem, which minimizes the resource consumption cost with a makespan not greater than (1 + )K, if a solution with a makespan not greater than K exists, and two different PTAS-s for the Jm|lin, n j =1 v j u j U |C max and for the Jm|lin|C max + n j =1 v j u j problems. They proved that some of their results are also applicable to the case of a discrete resource and preemptive jobs.</p><p>Table <ref type="table" target="#tab_6">8</ref> contains a summary of complexity results for scheduling with controllable job processing times in flow shops and job shops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Open shops</head><p>In an open shop ( = Om), each job needs to be processed exactly once on every machine, but the route of the jobs is unrestricted, i.e., the scheduler also has to determine the route each job follows, and different jobs may have different routes. The O2 C max problem is solvable in O(n log n) time (see <ref type="bibr" target="#b26">[27]</ref>) with a minimal objective value of</p><formula xml:id="formula_75">C max = max ⎧ ⎨ ⎩ max j =1,...,n (p 1j + p 2j ), n j =1 p 1j , n j =1 p 2j ⎫ ⎬ ⎭ . (<label>11</label></formula><formula xml:id="formula_76">)</formula><p>Consequently, the extension of O2 C max with controllable processing times for problem types P1-P3 reduces either to a linear or a convex programming problem. Shabtay and Kaspi <ref type="bibr" target="#b93">[95]</ref> gave an O(n log n) time optimization algorithm to solve the O2|conv, 2 i=1 n j =1 u ij U |C max problem. Since this algorithm provides a closed form solution for the makespan value as a function of U, the trade-off curve between total resource consumption and makespan can also be constructed in O(n log n) time. Cheng and Shakhlevich <ref type="bibr" target="#b20">[21]</ref> showed that the linear programming problem resulting from the O2|lin, a ij = 1, C max K| 2 i=1 n j =1 v ij u ij problem can be solved in a linear time. They found that by ignoring the max j =1,...,n (p 1j + p 2j ) term in the makespan value (see Eq. ( <ref type="formula" target="#formula_75">11</ref>)), the problem can be decomposed into two independent continuous knapsack problems, which are solvable in O(n) time. If the solution obtained by solving the two independent continuous knapsack problems is a feasible one, i.e., max j =1,...,n (p 1j + p 2j ) K, it is also optimal. Otherwise, if max j =1,...,n (p 1j + p 2j ) &gt; K, they showed that max j =1,...,n (p 1j + p 2j ) = K in an optimal solution, which leads to a continuous generalized upper bound resource allocation problem, which is also solvable in O(n) time <ref type="bibr" target="#b36">[37]</ref>.</p><p>In addition, Cheng and Shakhlevich gave an O(n log n) time algorithm to construct the trade-off curve between the makespan and the total resource allocation cost.</p><p>The O3 C max is NP-hard (see <ref type="bibr" target="#b26">[27]</ref>) and the Om C max problem is proven to be strongly NP-hard for an arbitrary number of machines (see <ref type="bibr" target="#b68">[69]</ref>). Therefore, the corresponding extensions of the problem to P1-P4 type objectives with the linear resource consumption function given by Eq. ( <ref type="formula" target="#formula_1">1</ref>) also have the same complexity. Shabtay and Kaspi <ref type="bibr" target="#b93">[95]</ref> proved the NP-hardness of the O3|conv, 3 i=1 n j =1 u ij U |C max problem by using a variation of the proof of Gonzalez and Sahni <ref type="bibr" target="#b26">[27]</ref> for the NP-hardness of the O3 C max problem. Table 8 also contains a summary of complexity results for open shops with controllable job processing times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Concluding remarks and future research</head><p>We presented a survey of results for scheduling problems with controllable processing times. Although the field has attracted a lot of attention from researchers in the last 25 years, there are still many open questions and a lot of problems that have not been studied. Some problems have already been considered in the literature, but their complexity remains unsolved. For example, the complexity of the 1|conv, n j =1 u j U | n j =1 w j C j and 1|p j = p j + j /u j , n j =1 u j U | n j =1 C j problems is still an open question, as well as the complexity of the 1|conv, r j = ( r j /u r j ) k |(C max , n j =1 u j + n j =1 u r j ) problem. Since the NP-hardness of the 1|lin, n j =1 v j u j U | n j =1 w j C j problem was proved by reducing the PARTITION problem to it and no one has given a pseudo-polynomial algorithm to solve the problem, it is still an open question whether this problem is strongly NP-hard or NP-hard in the ordinary sense. The complexity status of the problem 1|lin, a j = 1, r j = ru r j , u r j = u r | n j =1 C j + n j =1 vu j + n j =1 v r j u r j is also open for the unrestricted case where rr n j =1 p j . The complexity of the batching problems 1|BAM, lin, a j =1, s i =s i -u s i | n j =1 C j +v 1 n s i=1 u s i +v 2 n j =1 u j and 1|BAM, lin, a j =1, s i =s i -u s i , v 1</p><formula xml:id="formula_77">n s i=1 u s i + v 2 n j =1 u j U | n j =1 C j</formula><p>is also open. Since there is relatively little known for multi-machine problems with controllable processing times, there are a lot of open questions in this area. Some of the problems that one may consider for future research are the F 2|conv|(C max , 2 i=1 n j =1 v j u j ) problem with both continuous and discrete resource and the F 2|lin, nw, 2 i=1 n j =1 v ij u ij U |C max problem. Since both of the above problems are polynomially solvable for the case of non-controllable processing times, it might be interesting to see if they remain so for the case of controllable job processing times. We hope that this survey will give an impetus for new research on these open questions and will lead to further progress in the important area of scheduling with controllable processing times.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Summary of complexity results for the single machine problem with controllable processing times F 1 = f max and equal fixed release dates</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 3</head><label>3</label><figDesc>Summary of complexity results for the single machine problem with F 1 = n j =1 w j C j</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4</head><label>4</label><figDesc>Summary of complexity results for the single machine problem with F 1 = n j =1 w j U j</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5</head><label>5</label><figDesc>Summary of complexity results for single machine batch scheduling problems</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 6</head><label>6</label><figDesc>Summary of results for single machine scheduling problems with due date assignment</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7</head><label>7</label><figDesc>Summary of complexity results for parallel machine scheduling problems</figDesc><table><row><cell>Problem</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 8</head><label>8</label><figDesc>Summary of complexity results for flow shops, job shops and open shops</figDesc><table><row><cell>Problem</cell></row></table></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>ଁ This research was partially supported by the Paul Ivanier Center for Robotics and Production Management, Ben-Gurion University of the Negev. Partial support by the Natural Sciences and Engineering Research Council of Canada under Grant no. 041798 is also gratefully acknowledged.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Two parallel machine sequencing problems involving controllable job processing times</title>
		<author>
			<persName><forename type="first">B</forename><surname>Alidaee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ahmadian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="335" to="341" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An algorithm for the two-resource allocation problem with a non-differentiable convex objective function</title>
		<author>
			<persName><forename type="first">R</forename><surname>Armstrong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="116" to="122" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Solving a class of two-resource allocation problems by equivalent load method</title>
		<author>
			<persName><forename type="first">R</forename><surname>Armstrong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="818" to="825" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Minimization of half-products</title>
		<author>
			<persName><forename type="first">T</forename><surname>Badics</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Boros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="649" to="660" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Single-machine scheduling with controllable processing times and earliness, tardiness and completion time penalties</title>
		<author>
			<persName><forename type="first">D</forename><surname>Biskup</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Engrg. Optim</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="329" to="336" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Common due date assignment for scheduling on a single machine with jointly reducible processing times</title>
		<author>
			<persName><forename type="first">D</forename><surname>Biskup</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jahnke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Production Econom</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="317" to="322" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Scheduling with discrete resource constraints</title>
		<author>
			<persName><forename type="first">J</forename><surname>Blazewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Brauner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Finke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Scheduling</title>
		<editor>
			<persName><forename type="first">J</forename></persName>
		</editor>
		<editor>
			<persName><forename type="first">Y-T</forename><surname>Leung</surname></persName>
		</editor>
		<meeting><address><addrLine>Boca Raton</addrLine></address></meeting>
		<imprint>
			<publisher>CRC Press</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="23" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Simultaneous job scheduling and resource allocation on parallel machines</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">129</biblScope>
			<biblScope unit="page" from="135" to="153" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Single machine scheduling with discretely controllable processing times</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="69" to="76" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">A review of machine scheduling: complexity and approximability</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">N</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Woeginger</surname></persName>
		</author>
		<editor>D.Z. Du, P.M. Pardalos</editor>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Kluwer Academic Publishers</publisher>
			<biblScope unit="page" from="21" to="169" />
			<pubPlace>Dordrecht</pubPlace>
		</imprint>
	</monogr>
	<note>Handbook of Combinatorial Optimization</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Single-machine scheduling with trade-off between number of tardy jobs and resource consumption</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="237" to="242" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Parallel-machine scheduling with controllable processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IIE Trans</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="177" to="180" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Scheduling to minimize the total compression and late costs</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">M T</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Res. Logistics</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="67" to="82" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A permutation flow-shop scheduling problem with convex models of operation processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page" from="39" to="60" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Bicriterion single machine scheduling with resource dependent processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Optim</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="617" to="630" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Single machine batch scheduling with resource dependent setup processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">135</biblScope>
			<biblScope unit="page" from="177" to="183" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Single machine batch scheduling with deadlines and resource dependent processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="243" to="249" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Scheduling with controllable release dates and processing times: makespan minimization</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shakhlevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">175</biblScope>
			<biblScope unit="page" from="751" to="768" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Scheduling with controllable release dates and processing times: total completion time minimization</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shakhlevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">175</biblScope>
			<biblScope unit="page" from="769" to="781" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Proportionate flow shop with controllable processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shakhlevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Scheduling</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="253" to="265" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Two-machine open shop problem with controllable processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shakhlevich</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Due-date assignment and single machine scheduling with compressible processing times</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ogaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">D</forename><surname>Qi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Production Econom</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="29" to="35" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Batch sizing and job sequencing on a single machine</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Coffman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Yannakakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Magazine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Santos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="135" to="147" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A multi-objective approach to resource allocation in single machine scheduling</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Daniels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="226" to="241" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Single machine scheduling with controllable processing times and number of jobs tardy</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Daniels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Sarin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="981" to="984" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Minimizing total tardiness on one machine is NP-hard</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="483" to="495" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Open shop scheduling to minimize finish time</title>
		<author>
			<persName><forename type="first">T</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sahni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="665" to="679" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Preemptive scheduling of uniform processor system</title>
		<author>
			<persName><forename type="first">T</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sahni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="92" to="101" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A survey of the state-of-the-art of common due date assignment and scheduling research</title>
		<author>
			<persName><forename type="first">V</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Proth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">B</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">139</biblScope>
			<biblScope unit="page" from="1" to="25" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Due date assignment and scheduling: SLK, TWK and other due date assignment models, Production Plann</title>
		<author>
			<persName><forename type="first">V</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Proth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">B</forename><surname>Chu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Control</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="117" to="132" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Job-shop scheduling with resource-time models of operations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Grabowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="58" to="73" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Optimization and approximation in deterministic sequencing and scheduling: a survey</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="287" to="326" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Heuristics for hybrid flow shops with controllable processing times and assignable due dates</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N D</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kruger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Lauff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Werner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">N</forename><surname>Sotskov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1417" to="1439" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Jackson&apos;s rule for one-machine scheduling: making a good heuristic better</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Shmoys</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="22" to="35" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Single-machine scheduling with trade-off between number of tardy jobs and compression cost</title>
		<author>
			<persName><forename type="first">Y</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Scheduling</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Invited review: multicriteria scheduling</title>
		<author>
			<persName><forename type="first">H</forename><surname>Hoogeveen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">167</biblScope>
			<biblScope unit="page" from="592" to="623" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">About strongly polynomial time algorithms for quadratic optimization over submodular constraints</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Hochbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Programming</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="269" to="309" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Some comments on sequencing with controllable processing times</title>
		<author>
			<persName><forename type="first">H</forename><surname>Hoogeveen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Woeginger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="181" to="192" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Time-optimal control in a single machine problem with resource constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="745" to="747" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Flow shop scheduling with controllable operation times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IFAC Symposium on Large Scale Systems: Theory and Applications</title>
		<meeting>the IFAC Symposium on Large Scale Systems: Theory and Applications<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Pergamon Press</publisher>
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">One-machine scheduling problems with resource constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Control and Inform. Sci.</title>
		<imprint>
			<biblScope unit="volume">84</biblScope>
			<biblScope unit="page" from="358" to="364" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">One-machine scheduling with allocation of continuously-divisible resource and with no precedence constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Kybernetika</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="289" to="293" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Minimization of the total resource consumption in permutation flow shop sequencing subject to a given makespan</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Modelling, Simulation Control</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">General flow-shop scheduling with resource constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Production Res</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1089" to="1103" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Minimization of the blooming mill standstills-mathematical model, suboptimal algorithms</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mechanika</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="37" to="49" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Minimization of resource consumption under a given deadline in the two-processor flow-shop scheduling problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="101" to="112" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Scheduling independent one-processor tasks with linear models of release dates under a given maximum schedule length to minimize resource consumption</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Syst. Anal. Modelling Simulation</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">11/12</biblScope>
			<biblScope unit="page" from="885" to="890" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Scheduling and resource allocation problems in some flow type manufacturing processes</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Modern Production Concepts</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Fandel</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Zäpfel</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Single machine scheduling problem with common deadline and resource dependent release dates</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="317" to="325" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Minimization of the makespan in a two-machine problem under given resource constraints</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">107</biblScope>
			<biblScope unit="page" from="325" to="337" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Selected problems and algorithms for task scheduling and resource allocation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Akademicka Oficyna Wydawnicza PLJ</title>
		<editor>
			<persName><forename type="first">Problemy</forename><surname>Wspolczesnej Nauki</surname></persName>
		</editor>
		<editor>
			<persName><surname>Teoria I Zastosowania-Informatyka</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1999">1999</date>
			<pubPlace>Warszawa</pubPlace>
		</imprint>
	</monogr>
	<note>Polish</note>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Single machine scheduling with deadlines and resource dependent processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
		<respStmt>
			<orgName>Working Paper, Institute of Engineering Cybernetics, Technical University of Wroclaw, Poland</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Single machine scheduling subject to deadlines and resource dependent processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="284" to="291" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Positive half-product and scheduling with controllable processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Kubiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Werner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">165</biblScope>
			<biblScope unit="page" from="413" to="422" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Single machine group scheduling with resource dependent setup and processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Portmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">162</biblScope>
			<biblScope unit="page" from="112" to="121" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Some single machine scheduling problems with resource dependent set-up and processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lichtenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Selected Papers of the Symposium on Operations Research (OR 2000)</title>
		<meeting><address><addrLine>Dresden; Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000-09">September 2000. 2001</date>
			<biblScope unit="page" from="60" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Optimal resource distribution in scheduling problems with resource dependent setup and processing times</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lichtenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th IEEE International Conference on Methods and Models of Automation and Robotics</title>
		<meeting>the 10th IEEE International Conference on Methods and Models of Automation and Robotics<address><addrLine>Miedzyzdroje, Poland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="1285" to="1288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Genetic algorithm for the permutation flow shop scheduling problem with linear models of operations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Portmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="95" to="114" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Job-shop scheduling with convex models of operations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Szkodny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comput. Modelling</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="59" to="68" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Approximation schemes for parallel machine scheduling problem with controllable processing times</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mastrolilli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="1565" to="1581" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Approximation schemes for job shop scheduling problem with controllable processing times</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mastrolilli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Solis-Oba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">167</biblScope>
			<biblScope unit="page" from="297" to="319" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Scheduling with resource constraints-continuous resources</title>
		<author>
			<persName><forename type="first">J</forename><surname>Jozefowska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weglarz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Scheduling</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename></persName>
		</editor>
		<editor>
			<persName><forename type="first">-T</forename><surname>Leung</surname></persName>
		</editor>
		<imprint>
			<publisher>CRC Press Publ</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="24" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Reducibility among combinatorial problems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Karp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Complexity of Computer Computations</title>
		<meeting><address><addrLine>NY</addrLine></address></meeting>
		<imprint>
			<publisher>Plenum Press</publisher>
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Optimization of machining economics problem for a multi-stage transfer machine under failure, opportunistic and integrated replacement strategies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Production Res</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2229" to="2248" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">A bicriterion approach to time/cost trade-offs in scheduling with convex resource-dependent job processing times and release dates</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="3015" to="3033" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A new bounding mechanism for the CNC machine scheduling problem with controllable processing times</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Kayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Akturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">167</biblScope>
			<biblScope unit="page" from="624" to="643" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Completion time variance minimization on a single machine is difficult</title>
		<author>
			<persName><forename type="first">W</forename><surname>Kubiak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="49" to="59" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">A pseudopolynomial time algorithm for sequencing jobs to minimize total tardiness</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="331" to="342" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Sequencing and scheduling: algorithms and complexity</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">L</forename><surname>Lawler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Shmoys</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Logistics of Production and Inventory</title>
		<title level="s">Handbooks in Operations Research and Management Science</title>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Graves</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Zipkin</surname></persName>
		</editor>
		<meeting><address><addrLine>North-Holland, Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Single machine scheduling with controllable processing times: a parametric study</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Production Econom</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="105" to="110" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Multiple-project scheduling with controllable project duration and hard resource constraint: some solvable cases</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="287" to="307" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Complexity of machine scheduling problems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Brucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="343" to="362" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">A single machine scheduling problem with common due window and controllable processing times</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Liman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Panwalkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Thongmee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="145" to="154" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Notes on max flow time minimization with controllable processing times</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mastrolilli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="page" from="375" to="386" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Scheduling with deadlines and loss functions</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mcnaughton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Sci</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="1" to="12" />
			<date type="published" when="1959">1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Convex resource allocation problems on directed acyclic graphs: duality, complexity, special cases and extensions</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Monma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Todd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">K</forename><surname>Wei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="736" to="748" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">An n job, one machine sequencing algorithm for minimizing the number of late jobs</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Moore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Sci</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="102" to="109" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">A heuristic algorithm for the m-machine, n-job flow-shop sequencing problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Nawaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Enscore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Ham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">OMEGA</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="91" to="95" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Group scheduling with controllable setup and processing times: minimizing total weighted completion time</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T D</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Janiak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">133</biblScope>
			<biblScope unit="page" from="163" to="174" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Batch scheduling with controllable setup and processing times to minimize total completion time</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T D</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="499" to="506" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Single machine batch scheduling with jointly compressible setup and processing times</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T D</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">153</biblScope>
			<biblScope unit="page" from="211" to="219" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Single machine scheduling with a variable common due date and resource-dependent processing times</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T D</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Y</forename><surname>Kovalyov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Lam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1173" to="1185" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Minimizing completion time variance with compressible processing times</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Lam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Global Optim</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="333" to="352" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">An approximation algorithm for the m-machine permutation flow shop scheduling problem with controllable processing times</title>
		<author>
			<persName><forename type="first">E</forename><surname>Nowicki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="342" to="349" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">A two-machine flow shop scheduling problem with controllable job processing times</title>
		<author>
			<persName><forename type="first">E</forename><surname>Nowicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zdrzalka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="208" to="220" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">A survey of results for sequencing problems with controllable processing times</title>
		<author>
			<persName><forename type="first">E</forename><surname>Nowicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zdrzalka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Appl. Math</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="271" to="287" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">A bicriterion approach to preemptive scheduling of parallel machines with controllable job processing times</title>
		<author>
			<persName><forename type="first">E</forename><surname>Nowicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zdrzalka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Appl. Math</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="237" to="256" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Single-machine sequencing with controllable processing times</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Panwalkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rajagopalan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="298" to="302" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Integrating scheduling with batching and lot-sizing: a review of algorithms and complexity</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">N</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Van Wassenhove</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Oper. Res. Soc</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="395" to="406" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">Allocation of resources in project management</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">R</forename><surname>Jefferson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internat. J. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="413" to="420" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title level="a" type="main">Single and a two-resource allocation algorithms for minimizing the maximal lateness in a single machine-scheduling problem</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1303" to="1315" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">Minimizing the total weighted flow time in a single machine with controllable processing times</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2279" to="2289" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">Parallel machine scheduling with a convex resource consumption function</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">173</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="92" to="107" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Minimizing the makespan in open-shop scheduling problem with a convex resource-dependent processing times</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Res. Logistics</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="204" to="216" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">The no-wait two-machine flow-shop scheduling problem with convex resource-dependent processing times</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Steiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IIE Trans</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="539" to="557" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Single machine batch scheduling to minimize total completion time and resource consumption costs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Steiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Scheduling</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">The earliness-tardiness scheduling problem with due date assignment and resource-dependent processing times</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Steiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the MISTA 2005 Conference</title>
		<meeting>the MISTA 2005 Conference<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="149" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Optimal due date assignment and resource allocation to minimize the weighted number of tardy jobs on a single machine</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Steiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manufacturing Service Operations Management</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Single machine scheduling with controllable release and processing times</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">V</forename><surname>Shakhlevich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">A</forename><surname>Strusevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Appl. Math</title>
		<imprint>
			<biblScope unit="volume">154</biblScope>
			<biblScope unit="page" from="2178" to="2199" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">An approximation algorithm for the generalized assignment problem</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shmoys</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Programming</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="461" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Convex quadratic and semidefinite programming relaxations in scheduling</title>
		<author>
			<persName><forename type="first">M</forename><surname>Skutella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="206" to="242" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">Various optimizers for single-stage production</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">E</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Res. Logistics Quarterly</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="59" to="66" />
			<date type="published" when="1956">1956</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title level="a" type="main">Scheduling multiple variable-speed machines</title>
		<author>
			<persName><forename type="first">M</forename><surname>Trick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="234" to="248" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<analytic>
		<title level="a" type="main">Two single machine sequencing problems involving controllable job processing times</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Vickson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIIE Trans</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="258" to="262" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title level="a" type="main">Choosing the job sequence and processing times to minimize total processing plus flow cost on a single machine</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Vickson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1155" to="1167" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title level="a" type="main">Single machine scheduling to minimize total compression plus weighted flow cost is NP-hard</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P C</forename><surname>Yen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inform. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="273" to="280" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">Single machine scheduling with resource dependent release times and processing times</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C E</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">162</biblScope>
			<biblScope unit="page" from="727" to="739" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<analytic>
		<title level="a" type="main">Single machine scheduling problems with controllable processing times and total absolute differences penalties</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">Q</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">177</biblScope>
			<biblScope unit="page" from="638" to="645" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title level="a" type="main">A bicriterion approach to time/cost trade-offs in sequencing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Van Wassenhove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Baker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="48" to="54" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<monogr>
		<title level="m" type="main">A bicriterion approach to maximal lateness and resource consumption in scheduling with convex resourcedependent processing times</title>
		<author>
			<persName><forename type="first">L</forename><surname>Yedidsion</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shabtay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaspi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<pubPlace>Israel</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Ben-Gurion University of the Negev, Beer-Sheva</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Working Paper</note>
</biblStruct>

<biblStruct xml:id="b110">
	<analytic>
		<title level="a" type="main">3 2 -Approximation algorithm for parallel machine scheduling with controllable processing times</title>
		<author>
			<persName><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">L A</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="41" to="47" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b111">
	<analytic>
		<title level="a" type="main">Scheduling jobs on a single machine with release dates, delivery times, and controllable processing times</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zdrzalka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res. Lett</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="519" to="532" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
