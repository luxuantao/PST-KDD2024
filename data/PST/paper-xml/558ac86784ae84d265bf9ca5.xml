<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Institute of Fluid Dynamics</orgName>
								<orgName type="department" key="dep2">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<postCode>CH-8092</postCode>
									<settlement>Zürich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5E635AE662C67DCB6D32503B354A34CC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Optimization Based on Bacterial Chemotaxis Sibylle D. Müller, Jarno Marchetto, Stefano Airaghi, and Petros Koumoutsakos Abstract-We present an optimization algorithm based on a model of bacterial chemotaxis. The original biological model is used to formulate a simple optimization algorithm, which is evaluated on a set of standard test problems. Based on this evaluation, several features are added to the basic algorithm using evolutionary concepts in order to obtain an improved optimization strategy, called the bacteria chemotaxis (BC) algorithm. This strategy is evaluated on a number of test functions for local and global optimization, compared with other optimization techniques, and applied to the problem of inverse airfoil design. The comparisons show that on average, BC performs similar to standard evolution strategies and worse than evolution strategies with enhanced convergence properties.</p><p>Index Terms-Bacterial chemotaxis, evolution strategies, stochastic optimization methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N THE FIELD of optimization, many researchers have been inspired by biological processes such as evolution <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref> or the food-searching behavior of ants <ref type="bibr" target="#b2">[3]</ref> to develop new optimization methods such as evolutionary algorithms or ant codes. These techniques have been found to perform better than the classical heuristic or gradient-based optimization methods, especially when faced with the problem of optimizing multimodal, nondifferentiable, or discontinuous functions. Examples of applying these biologically inspired strategies in the field of engineering range from aerodynamic design (e.g., <ref type="bibr" target="#b3">[4]</ref>) to job-shop scheduling problems <ref type="bibr" target="#b4">[5]</ref>.</p><p>Another biologically inspired optimization method is the chemotaxis algorithm, pioneered by Bremermann <ref type="bibr" target="#b5">[6]</ref> and his coworkers <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, proposed by analogy to the way bacteria react to chemoattractants in concentration gradients. This algorithm were analyzed for chemotaxis in a three-dimensional (3-D) gradient by Bremermann <ref type="bibr" target="#b5">[6]</ref> and employed for the training of neural networks <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>. A similar algorithm is the guided accelerated random search technique <ref type="bibr" target="#b8">[9]</ref>, which was applied to optimize parameters in flight control systems <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref> and to optimize perceptrons <ref type="bibr" target="#b10">[11]</ref>.</p><p>Whereas these algorithms contain the fundamental concepts of bacteria chemotaxis (BC), more recent biological findings have provided further details and models of the process. This paper presents a novel optimization strategy whose roots are found in an extended biological model of bacterial chemotaxis <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>. The basic model and the resulting optimization algorithm differ from the chemotaxis algorithm as follows.</p><p>1) The bacteria from our basic model incorporate information from concentration values. 2) They do not keep on running in the same direction in case of increasing concentrations of the chemoattractants. 3) Beyond studying the biological model, the main part of our work is dedicated to the further development of the basic strategy to yield a powerful, robust optimization technique. Bacteria are single-cell organisms, one of the simplest form of life developed on earth. Despite their "simplicity," they acquire information about their environment, orient themselves in this environment, and use this information efficiently to survive. This reaction of the organism to its environment has been subject to intensive research in the past decades, see, e.g., <ref type="bibr" target="#b13">[14]</ref>- <ref type="bibr" target="#b16">[17]</ref>. It is also interesting for scientists in the field of optimization to study the bacterial behavior. Like bacteria, optimization algorithms may be viewed as entities that gather information about a function landscape and then use this information to move to an optimum. At the same time, the simplicity and robustness of the process of bacterial chemotaxis suggest a starting point for constructing an optimization algorithm.</p><p>Although it has been found that bacteria do share information among each other <ref type="bibr" target="#b17">[18]</ref>, not much is known presently about the communication patterns. Generally, bacteria are considered individuals and social interaction is not used in the models. These models differ from the interaction models for the behavior of social insects (such as ants, bees, wasps, or termites) that are viewed as systems with collective intelligence resulting in powerful problem-solving capabilities <ref type="bibr" target="#b18">[19]</ref>.</p><p>The term taxis refers to the locomotory response of a cell to its environment. In a taxis, a cell responds such that it changes both its direction and the duration of the next movement step. The tactic response requires some directional information from the environment that bacteria obtain by comparing an environmental property at two different time steps. If the tactic response is related to information about chemical concentrations (that may be either attractants or repellents), it is called chemotaxis.</p><p>For optimization purposes, we concentrated on studying microscopic models that consider the chemotaxis of a single bacterium instead of macroscopic models that analyze the movement of bacteria colonies.</p><p>Our studies are based on a microscopic model for bacterial chemotaxis proposed by Berg and Brown <ref type="bibr" target="#b11">[12]</ref> and Dahlquist et al. <ref type="bibr" target="#b12">[13]</ref>. Berg and Brown <ref type="bibr" target="#b11">[12]</ref> analyze the chemotaxis toward amino acids of the bacterium Escherichia coli. The analysis provides experimental measurements of parameters in the model. Dahlquist et al. <ref type="bibr" target="#b12">[13]</ref> study bacterial chemotaxis toward amino acids of the bacterium Salmonella typhimurium. They present a mathematical model and present experimental results that validate their model.</p><p>In the original model, the 3-D motion of a bacterium is approximated and the model parameters depend on the particular bacterial environment and on the experimental setup. For preliminary studies, an optimization algorithm is formulated based on the biological model. This algorithm is used for optimizing two-dimensional (2-D) test functions and contains model parameters that are selected a priori.</p><p>After studying the searching behavior of bacteria with this basic model, we enhance it for optimization purposes <ref type="bibr" target="#b19">[20]</ref>. The first modification regards the determination of model parameters that will be referred to as strategy parameters in the following. The search for appropriate strategy parameters is inspired by nature. From an evolutionary perspective, bacteria adapt their motility properties so that they have a better chance to survive in changing environments. Our approach finds its counterpart in this evolutionary idea: using an evolution strategy (ES), we optimize the strategy parameters by minimizing the number of iterations that the virtual bacterium needs from the start to the optimum. The second modification regards the extension of the 2-D to an -dimensional model.</p><p>Further improvements include the automatic modification of strategy parameters according to the properties of the optimization function, a possibility of escaping plateaus, and additional features to facilitate the search of global optima. These improvements yield a new optimization algorithm called the BC algorithm.</p><p>To assess its properties, BC is evaluated on standard test problems, its performance is compared against other optimization algorithms, and it is finally applied to the optimization of airfoil profile shapes with an inverse design technique.</p><p>This paper is organized as follows. Section II describes the basic bacterial chemotaxis model in two dimensions and tests it on various standard optimization problems. How appropriate parameters for the bacteria algorithm are chosen is shown in Section III. Section IV presents the extension of the bacteria algorithm from two to dimensions and improvements for the -dimensional strategy, yielding the BC strategy, which is applied on test functions. Convergence properties of the BC strategy are compared with those of other optimization algorithms in Section V. In Section VI, the BC code is further extended for the search of global optima. The application of the BC strategy on the inverse airfoil design is shown in Section VII and conclusions are finally drawn in Section VIII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. 2-D MODEL</head><p>In this section, we describe the model of bacterial chemotaxis and we formulate it as an optimization algorithm. This algorithm is evaluated on several test functions to assess its advantages and drawbacks. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Description of the 2-D Model</head><p>Dahlquist et al. <ref type="bibr" target="#b12">[13]</ref> model the motion of a single bacterium in two dimensions by making the following assumptions.</p><p>1) The path of a bacterium is a sequence of straight-line trajectories joined by instantaneous turns, each trajectory being characterized by speed, direction, and duration. 2) All trajectories have the same constant speed.</p><p>3) When a bacterium turns, its choice of a new direction is governed by a probability distribution, which is azimuthally symmetric about the previous direction. In two dimensions, this means that the probability to turn left or right is the same. 4) The angle between two successive trajectories is governed by a probability distribution. 5) The duration of a trajectory is governed by an exponentially decaying probability distribution. 6) The probability distributions for both the angle and the duration are independent of parameters of the previous trajectory. These assumptions yield a model that can be described by the algorithm presented below. Every step is characterized by a velocity, a duration, and a direction; the bacterium trajectory consists of a sequence of straight segments of variable length and orientation.</p><p>Bacteria algorithm based on the bacterial chemotaxis model: The algorithm is presented below and illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>.</p><p>1) Compute the velocity . In the model, the velocity is assumed to be a scalar constant value </p><p>where the expectation value and the standard deviation referring to the chemotaxis measurements of the bacterium Escherichia coli by <ref type="bibr">Berg and Brown</ref> . The choice of a right or left direction as referring to the previous trajectory is determined using a uniform probability density distribution, thereby yielding a probability density distribution for the angle <ref type="bibr" target="#b4">(5)</ref> We formulate the following variation of the expectation value and the variance, which is applied only if :</p><formula xml:id="formula_1">(6)<label>(7)</label></formula><p>with <ref type="bibr" target="#b7">(8)</ref> where is the correlation time, and the duration of the previous step. Equation <ref type="bibr" target="#b7">(8)</ref> is based on the first-order approximation of the average value of the cosine of the angle between successive trajectories at times and as a function of , as shown by Dahlquist et al. <ref type="bibr" target="#b12">[13,</ref><ref type="bibr">Fig. 5</ref>]. It provides us with a statistical measure of direction-duration dependencies in experimental observations of BC. Note, however, the difference between the formulation in <ref type="bibr" target="#b7">(8)</ref> in which the duration of the previous trajectory is used and the formulation <ref type="bibr" target="#b8">(9)</ref> in which the actual trajectory duration is used, as found in <ref type="bibr" target="#b12">[13]</ref>. With <ref type="bibr" target="#b7">(8)</ref>, which is used in the following, the probability distribution of the angle becomes dependent on the duration of the previous step, which is contradictory to the assumption made by Dahlquist et al.In Section IV, we discuss results of the application of both algorithms on a number of test problems.</p><p>As soon as is computed, it is possible to obtain the normalized new displacement vector with unit length. 4) Compute the new position. The length of the path is given by <ref type="bibr" target="#b9">(10)</ref> The normalized new direction vector with is multiplied by to obtain the displacement vector <ref type="bibr" target="#b10">(11)</ref> such that the new location of the bacterium is <ref type="bibr" target="#b11">(12)</ref> In summary, the algorithm contains the following parameters: the minimal mean time , the dimensionless gradient parameter , the correlation time , and the velocity . They constitute the optimization strategy parameters that are adjusted as described in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Tests of the 2-D Model</head><p>The 2-D model presented in the previous subsection is tested to get an insight into the behavior of the "virtual" bacterium. In particular, we test the model on finding optima of simple unimodal test functions, as well as on finding the global optimum of multimodal test functions. Whereas unimodal functions (functions with only one extremum) are used mainly to check the convergence speed of the optimization algorithm, multimodal functions (functions with more than one extremum) are used to check the capability of the algorithm to escape from local minima. In the following, we use test functions suggested in <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b20">[21]</ref>, and <ref type="bibr" target="#b21">[22]</ref> with known optimum parameters and known optimum function values. All these test functions are to be minimized. The algorithm terminates as soon as a certain convergence criterion is reached. This criterion is based on the difference between the function value of the current parameters and the function value of the optimum parameters . In each iteration step, this difference is compared to a previously set precision value, . As soon as the difference becomes smaller than the target precision, , the algorithm terminates.</p><p>Values for the strategy parameters reported in <ref type="bibr" target="#b12">[13]</ref> were obtained from experiments with bacteria moving in specific concentration gradients (varying exponentially with distance) and are, therefore, not recommended to use in a general optimization strategy. Only for the preliminary tests presented in this section, a very simple approach to obtain more general parameters is chosen: we define about 20 different random parameter sets and select out of these the set that yields the minimal number of iterations.</p><p>1) Tests on Unimodal Functions: The first case is the minimization of the quadratic function with a single global minimum placed in and the minimum value of . The target precision was set to with a start point in . The computation takes 100 steps (average of runs) with a standard deviation of 40 steps to reach the minimum of the function . Averaging is necessary because of the stochastic processes involved in the model.</p><p>Increasing the precision, more computations are needed to reach the goal starting from the same point. For , the number of iterations is ; for , (Fig. <ref type="figure" target="#fig_14">2</ref>), averaged on runs, as seen in Fig. <ref type="figure" target="#fig_3">4</ref>. Note that in optimizing with a high precision, the bacterium goes straight until an area close to the goal, then it moves in an increasingly random fashion as soon as the function becomes flatter. Thus, the algorithm requires a large number of iterations to arrive finally at the optimum (Fig. <ref type="figure">3</ref>). This behavior of the virtual bacterium is consistent with that observed in real bacteria: in a uniform isotropic environment, i.e., one without directional information, bacteria will move randomly <ref type="bibr" target="#b16">[17]</ref>.</p><p>Subsequently, we studied the influence of higher order polynomials on the number of iteration steps. In the following tests, we analyzed the path on the test function  starting again from the point with the goal at (Fig. <ref type="figure" target="#fig_4">5</ref>). The three simulations differ only in the parameter . We observe that the larger the , the smaller the number of steps to reach the goal, although the path seems to be less direct. Simulation with (not shown in Fig. <ref type="figure" target="#fig_4">5</ref>) becomes unstable in the sense that the bacterium jumps far away from the targeted minimum and is not able to reapproach its goal.</p><p>Another test is the generalized Rosenbrock function with the minimum . We note that starting from two different points at and , the bacterium goes relatively straight down in the direction of the minimum, but spends a lot of computation time on the plateau (Fig. <ref type="figure" target="#fig_5">6</ref>). Here, we can already note that getting stuck on a plateau seems to be a disadvantage of the current method that needs to be improved.</p><p>2) Tests on Multimodal Functions: First, we test the code on Rastrigin's function (see Fig. <ref type="figure" target="#fig_6">7</ref>)  Global minimum at (0; 0). with the global minimum . Fig. <ref type="figure" target="#fig_7">8</ref> shows the contour lines of the function together with the path of the bacterium that is characterized by long residence times in areas close to several local optima and short residence times far from local optima. The stochastisity in the chemotactic model allows for escaping local minima. However, using the current methodology, the bacterium visits the global optimum, but is not able to stop there. Ideas to avoid this problem are presented in Section VI.</p><p>Another multimodal function with local minima located on concentric circles is (see Fig. <ref type="figure" target="#fig_8">9</ref>) Again, the virtual bacterium finds many local minima and also visits the global one but does not stop there. Fig. <ref type="figure" target="#fig_9">10</ref> illustrates the path on this function, indicating that the bacterium stays longer in regions that are more promising.</p><p>The algorithm can escape from local optima due to the stochastic processes inherent in the algorithm when computing the duration and the direction of the trajectory. Therefore, bacterial  Global minimum at (0; 0). chemotaxis may provide a basis for the search of a global optimum. In Section VI, we discuss the suitable adjustment of the algorithm in order to effectuate this goal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. OPTIMIZATION OF THE STRATEGY PARAMETERS</head><p>From the tests of the previous section, we recognize that the quality (measured in terms of number of iterations) of the search of a unimodal function with a bacterial strategy depends strongly on two aspects:</p><p>1) the chosen target precision ; 2) the chosen strategy parameters , , , and .</p><p>Since one usually has an estimate on the overall desired accuracy of the solution, it is an easy task to define the target precision. However, optimum strategy parameters are not known a priori because the values given in <ref type="bibr" target="#b12">[13]</ref> depend on the experimental setup and are therefore not generalizable.</p><p>To obtain strategy parameters that are independent from these experiments, we study the performance of the bacteria algorithm on a set of quadratic functions in the following way: the strategy parameters are the optimization parameters and the number of iterations to the optimum is the objective function that is to be minimized. We are aware of the fact that the strategy parameters found by this optimization are only optimal for the class of functions on which the bacteria strategy is applied. However, it is a widely accepted method in the field of evolutionary computation to obtain strategy parameters by investigating the behavior of an optimization algorithm using only certain functions. For example, the well-known 1/5-success rule by Rechenberg <ref type="bibr" target="#b22">[23]</ref> is based on his theoretical study of the ES, using only the sphere and the corridor functions.</p><p>The motivation for optimizing the parameters is consistent with the principles of evolution for realistic bacterial organisms. The motility properties of bacteria tend to adapt to the environment since bacteria that are better adapted to their environment have a bigger chance to survive.</p><p>In order to optimize the strategy parameters, we implement a covariance-matrix adaptation evolution strategy (CMA-ES) <ref type="bibr" target="#b21">[22]</ref>. This strategy adapts the covariance matrix of the mutation distribution efficiently to the topology of badly scaled and/or nonseparable functions. Moreover, the CMA-ES is invariant against linear transformations of the object parameter space. All strategy parameters are chosen according to <ref type="bibr" target="#b21">[22]</ref>.</p><p>For every test, the start point is placed randomly on a circle with center in and radius . The mean and variance were computed on values from simulations with the same start point. Averaging over more than simulations does not influence mean and variance significantly.</p><p>Note that for all the considered test functions the velocity always tended to a constant value, namely, . For this reason, the value is used as a constant in the algorithm. Relations among the optimum strategy parameters and the required precision are identified using the following algorithm.</p><p>1) Define the needed precision for the computation.</p><p>2) From the given precision compute a value for using ( <ref type="formula">13</ref>)</p><p>3) From the computed , find a value for using <ref type="bibr" target="#b13">(14)</ref> 4) From the values of and , compute using <ref type="bibr" target="#b14">(15)</ref> The coefficients in the above equations were determined using a linear regression on the whole set of data obtained from the considered test functions.</p><p>The relation between and is dictated by the following reasons.</p><p>1) If is too big, the needed precision may not be reached.</p><p>In fact, is the shortest time step, which should be small enough to let the bacterium reach the goal with the needed precision. 2) If the bacterium sees a big gradient and if is not small enough, the bacterium can jump far away from the area of attraction and may not come back. This is unstable behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXTENSION TO AN -DIMENSIONAL STRATEGY</head><p>In this section, we show the extension of the current algorithm from two to dimensions, improvements to the algorithm, yielding the BC strategy. The BC code is then tested on a set of standard optimization functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Development of an -Dimensional Algorithm</head><p>Extending the 2-D algorithm to dimensions amounts merely to changes of geometrical nature. We define a position in an -dimensional space with a radius and angles . The position in dimensions is defined as follows: <ref type="bibr" target="#b15">(16)</ref> Applying <ref type="bibr" target="#b15">(16)</ref> to the bacterial chemotaxis model, we can extend the algorithm described in Section II to dimensions. The 2-D and the -dimensional model differ only in the computation of the angles and of the normalized direction vector.</p><p>The new direction is computed by using the Gaussian probability density distribution of the angle in the plane, where is measured from the the axis and reads for turning left or right, respectively <ref type="bibr" target="#b16">(17)</ref> where and and . The left or right direction is determined using a uniform probability density distribution, thereby yielding a probability density distribution of the angle <ref type="bibr" target="#b17">(18)</ref> As for the 2-D algorithm, the expectation and the variance are modified so that the previous and the new directions are correlated, if the bacterium is moving toward a decreasing value of the function (this implies a negative gradient) and if the previous computed trajectory duration is short <ref type="bibr" target="#b12">[13]</ref>. These two conditions imply that (19) <ref type="bibr" target="#b19">(20)</ref> As soon as are computed, it is possible to obtain the normalized new displacement vector . To obtain this vector, we sum the new computed angles to the old ones and, using ( <ref type="formula">16</ref>), the radius is set to one. The new position in Cartesian coordinates is then found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Improvements of the -Dimensional Algorithm to Yield the BC Strategy</head><p>In this section, we present features of the -dimensional algorithm that were added to obtain an improved optimization strategy. In particular, we address the following extensions. The influence of the gradient on the time is controlled only by the strategy parameter . The optimal strategy parameter was found for certain types of functions, as described in <ref type="bibr" target="#b13">(14)</ref>. However, functions may have completely different slopes than the ones considered in the tests. For example, if the gradient becomes too big, may become so large that the bacterium jumps out of the area of attraction and may never be able to get back. We refer to this behavior as instability. To prevent the bacteria strategy from leaving promising regions, we modify the algorithm such that it becomes less dependent on the function that is optimized. The following approach is, of course, not completely independent of the function, but increases the stability significantly. Hence, (3) now reads for for <ref type="bibr" target="#b21">(22)</ref> with at each iteration step once in the beginning and once after each parameter change (23) where is computed as described in <ref type="bibr" target="#b13">(14)</ref>. is the function to be minimized, is the difference between the actual and the previous function value, , is the vector connecting the previous and the actual position in the parameter space, and we have <ref type="bibr" target="#b23">(24)</ref> for the (user-defined) preceding subsequent values of . The first factor of the correction controls the parameter depending on the change of the slope of the function. If the change in slope tends to zero, the term does not influence . If the change in slope tends to infinity, the parameter tends to zero. This means that the bacterium moves with little steps. This correction should avoid that the bacterium skips a domain with a minimum by jumping far away from it and not being able to come back.</p><p>The second factor of the correction, considers the function values at the actual position and the previous position. Assuming a slowly varying gradient, the values of the function at the previous and at the actual position tend to be the same (this means that the bacterium is on the same level), the parameter is not corrected. If the difference of the two values tends to infinity, tends to zero and the bacterium moves with small steps.</p><p>These two terms, which have a similar influence on the correction, should be well distinguished. In fact, if we consider, for example, a quadratic function, the value of could be nearly the same on the whole domain, but the bacterium must slow down close to the goal. For this reason the term must also be introduced for correction. This confines the bacterium in the domain of the minimum although the change of slope is equal to zero.</p><p>The second factor is computed only in "critical" situations, i.e., in the beginning of the optimization and after changes of the parameters (see next subsection), where the function values are especially difficult to control. For all other instances, we prefer to leave out the second factor since we do not want to reduce the parameter to extremely small values that may cause the algorithm to work inefficiently.</p><p>2) Strategy Parameter Adaptation: In order to further improve our algorithm, we introduce the automatic change of all strategy parameters during the local search in order to refine them for increased precision. Using the relationships given in ( <ref type="formula">13</ref>), <ref type="bibr" target="#b13">(14)</ref>, and ( <ref type="formula">15</ref>), the optimal parameters for a given precision are known. We adapt the parameters during the optimization as follows.</p><p>1) Define initial and final precisions and with . The initial precision determines the starting parameters using the relations in ( <ref type="formula">13</ref>), <ref type="bibr" target="#b13">(14)</ref>, and (15). 2) Define the maximum number of parameter changes.</p><p>3) Start the computation searching for the minimum of the function. As the initial precision is reached, the parameters are adapted to another precision (defined by the number of parameter changes) and the search continues, until this new precision is reached. This adaptation is computed until the bacterium finds the minimum with the final needed precision . A given precision is reached if the difference between a given number (user-defined) of subsequent function values found by the bacterium is smaller than for a given number of subsequent values. This parameter adaptation is important because it permits refining the search adaptively. In this way, the bacterium does not waste much time at the beginning because of parameters that constrain small steps and it can proceed toward the minimum directly (Figs. <ref type="figure" target="#fig_10">11</ref> and<ref type="figure" target="#fig_1">12</ref>). On the other hand, by adapting the parameters, the bacterium slows down near the minimum so that it does not skip the minimum domain.</p><p>3) Escape from Plateaus: As discussed earlier, the bacterial algorithm faces a difficulty in escaping from plateaus. To remedy this, we propose the following algorithm: if the absolute value of the slope is smaller than a given value for a subsequent number of steps, then the value of must be multiplied by a constant if  for a given number of subsequent numbers (user-defined). Here, is the actual required precision and and are user-defined constants. This strategy should give the bacterium the capability to speed up in plateau areas. Fig. <ref type="figure" target="#fig_13">13</ref> compares two simulations with and without the plateau feature. The test function is 2-D In this case, we can see one order of magnitude improvement in the required number of iterations.</p><p>In this example, all strategy parameters were set to the same values; with the plateau speedup feature, it takes 365 iterations to reach the goal, whereas without the plateau speedup feature, 2156 iterations are required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Tests of the BC Strategy on Different Test Functions</head><p>The test functions are ( -dimensional "sphere") and (generalized Rosenbrock's function) the latter chosen particularly for the plateau problem. The start point of every test is the point , the goal is in . The final required precision is set to and the plateau speedup factor is set to . We test these functions in different dimensions in order to analyze how the number of steps for reaching the goal increases with respect to the dimension. The number of steps to convergence was averaged on 100 tests because of the stochastic processes contained in the model.</p><p>Testing the -dimensional "sphere" in five dimensions, the bacterium converged after steps. The standard deviation represents 60% of the average. The parameters , , and were refined 200 times. In 20 dimensions, it needed steps to the goal the standard deviation was 53% of the average. The strategy parameters listed above were refined 2000 times. Jumping from five to 20 dimensions, the number of steps to convergence increased by a factor of 56.2, i.e., for a four-fold increase in dimensions, the steps to converge increases 56 fold.</p><p>In the tests on Rosenbrock's function, the bacterium needed steps in five dimensions (with 2000 parameter changes) and steps in 20 dimensions (with 8000 parameter changes) to reach the goal. In the first case, the standard deviation represented 15% of the average and in the second it is 51%.</p><p>From these tests we can see that the stochastic processes contained in the model have a large influence on the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Dependency of Current on Previous Steps</head><p>As discussed in Section II, our BC optimization algorithm employs a dependency of the current step on the previous duration [see <ref type="bibr" target="#b7">(8)</ref>], whereas Dahlquist et al. <ref type="bibr" target="#b12">[13]</ref> assume no dependency [see <ref type="bibr" target="#b8">(9)</ref>]. To assess the differences between both algorithms, they are evaluated on two test functions ( -dimensional "sphere") and , where</p><p>. For , the plateau speedup feature is not used whereas for it is activated . The starting point lies in , the goal in for both functions. Starting from the initial precision , the strategy parameters may be either held constant ( , ,</p><p>) or refined 200 times until the final precision is reached. The number of iterations and the standard deviation obtained from 100 runs are listed in Table <ref type="table" target="#tab_0">I</ref>.</p><p>Table <ref type="table" target="#tab_0">I</ref> shows that the algorithm without dependency on previous steps needs fewer function evaluations than the algorithm with dependency for and for the five-dimensional (5-D) function with parameter adaptation. On the other hand, it takes longer to converge for the algorithm without dependency for the 5-D function without parameter refinement and for the 3-D function both with and without parameter adaptation. From these results, we cannot conclude that either algorithm is superior for the test problems examined here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. COMPARISON WITH OTHER OPTIMIZATION STRATEGIES</head><p>In this section, we compare the proposed BC code (BC) with: 1) a quasi-Newton optimization algorithm (L-BFGS); 2) differential evolution (DE), described in <ref type="bibr" target="#b23">[24]</ref>, using strategy parameters that we optimized for the particular test functions, also see <ref type="bibr" target="#b24">[25]</ref>; 3) a simple ES with a global step size adaptation as described in <ref type="bibr" target="#b21">[22]</ref>; 4) an ES with CMA-ES using strategy parameters proposed in <ref type="bibr" target="#b21">[22]</ref>. Since the quasi-Newton optimizer requires not only function evaluations but also its derivatives, we choose test functions where the gradient can be computed analytically. The two test functions are a simple sphere function in five and 20 dimensions <ref type="bibr" target="#b24">(25)</ref> and Rosenbrock's function <ref type="bibr" target="#b25">(26)</ref> also in five and 20 dimensions.</p><p>Note that the start points and the precision ( ) in the tests were the same for all the strategies. The average number of function evaluations of all the tests are summarized in Table <ref type="table" target="#tab_0">II</ref>. For the L-BFGS, the table shows the sum of the number of function and gradient evaluations.</p><p>For all the test functions, the quasi-Newton method clearly outperforms the other stochastic techniques as we would expect.</p><p>The evolutionary computation methods rely on function information only, whereas the quasi-Newton method uses both function and gradient information. The additional use of gradients yields a higher convergence rate of the L-BFGS. However, this comes at the expense of requiring gradient information, which can be difficult to obtain in several realistic applications.</p><p>All the evolutionary computation methods (DE, ES, and CMA-ES) have similar convergence properties on the sphere function in five and 20 dimensions. BC performs worse than all the other methods for the sphere functions. The behavior of the bacterium on the sphere can also be interpreted in a qualitative way. The -dimensional spherical test function presents specific difficulties to the bacterial strategy; in fact, the slope of this function changes from point to point, but the numerical approximation of the change of slope remains to a large extent constant on the whole domain. This implies that the correction presented in Section IV cannot give different values from point to point and so does not influence the step lengths. The plateau correction presented in Section IV-B3 cannot be applied either because the slope is not constant on the whole domain. In conclusion, both model improvements cannot be applied on this function and the bacterium moves with very small steps to the goal. For this specific problem, a modification of the BC needs to be performed. On Rosenbrock's function in five dimensions, CMA and DE are faster than ES and BC. For the 20-dimensional case, CMA-ES is the fastest method followed by DE, BC, and finally ES.</p><p>Summarizing these results, BC performs worse than the evolutionary computation techniques for the sphere function for the reasons given but comparable to existing techniques for Rosenbrock's problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. SEARCH OF GLOBAL MINIMA</head><p>In this section, we present further extensions of the BC optimization strategy with respect to the search of global minima as well as results from test runs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Strategies to Adapt the BC Strategy for the Search of Global Minima</head><p>From the previous sections, we saw that the bacterial chemotactic strategy can be valuable for the search of the global minimum on a multimodal function. Analyzing the results of the bacterium behavior on such functions, we define a strategy to perform a global minimum search into a given domain. The algorithms encompasses the following features.</p><p>1) Search the whole domain of the multimodal function with a significantly reduced precision and mark all the points visited by the bacterium. This can be interpreted as the deposition of a marker (or a "pheromone") by the bacterium <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b17">[18]</ref>. The points with the highest frequency of passages are identified by the concentration of this marker and are considered as "potential" global minima. 2) Analyze the concentration of the marker deposited over the whole domain. The neighborhood of the point with the highest concentration is considered as a candidate for the global minimum.</p><p>3) Start a local search with refined parameters from this candidate point and run until the needed final precision is reached. The final value is chosen as the global minimum of the function, reached by the algorithm. This concept can be realized in terms of the following steps.</p><p>1) The global search on the whole domain is performed as described in Section IV. Note that the features for the plateau correction and for the automatic parameter adaptation reported in Section IV are not activated during this first search, as these are special improvements for the local search. The parameters are computed as described in Section III from a fixed precision (user-defined). </p><p>where user-defined precision; [see <ref type="bibr" target="#b22">(23)</ref>]; user-defined constant. This gives the bacterium the needed "push" for one step to jump out from a local minumum and to return to the global search.</p><p>3) At every point where it passes, the bacterium puts a marker, whose concentration is given by the exponential decaying function <ref type="bibr" target="#b27">(28)</ref> where -dimensional concentration of the marker on the whole domain; , actual position of the bacterium; function value in this point; coordinates of a point in the -dimensional space; constant (for the decay control of the concentration function). Note that is a function value of the stopping point of the bacterium, so that not only the frequency of passes in a local minimum but also the function value found there influences the choice of the "best" local minimum. To avoid spending time computing the values of the marker concentration far away from the position of the bacterium, where these are close to zero (to mark the local minima the exponential function must have a rapid decay), we define a radius within which this function must be evaluated. The values are put on a grid (with a user-defined grid spacing) to decrease the computational time and find easily the maximal marker concentration. 4) The concentration of the marker deposited on the whole domain is analyzed. The point with the highest concentration represents the point with the highest frequency of passages. This point is assumed to be the nearest point to the global minimum. 5) Start a local search from this point as described in Section IV until the final precision is reached. The reached point is considered the global minimum of the function in the considered domain. There are two disadvantages to this tactic. First, because of the stochastic processes involved, the frequency of passes could yield a minimum that is not the global minimum. This disadvantage can be circumvented by expressing the parameter as a function of the actual function value as follows. The lower the value of the function, the stronger the concentration trace, as this point would be more likely to be the global minimum. Second, it is not assured that the bacterium will pass from the global minimum at least one time. By increasing the number of steps for the global search on the whole domain, one can increase the possibility of getting into a region of the global minimum, but only at cost of an increase in computational time. Moreover, one has to find good values for and (contained in ), so that the bacterium visits as many local minima as possible on the given domain during the local search, but without spending much time there and without jumping far away from the domain (this can happen because of the multiplication of by ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparison of the Global Properties With Other Optimization Strategies</head><p>In this section, we compare the global search properties of the proposed BC code with other stochastic optimization techniques as before: DE, a simple ES, and a CMA-ES. In addition, the performance of a pure random search (PRS) method is shown.</p><p>The two test functions are: 1) Rastrigin's function in two dimensions  . Based on an evaluation of all previous results, these strategy parameters are chosen since they fit a wide range of different optimization problems in terms of stability and convergence speed.</p><p>For the ESs, a population of two parents and ten offspring was chosen and the initial global step size is . Other strategy parameters are defined in <ref type="bibr" target="#b21">[22]</ref>. For DE, we optimized the strategy parameters for the individual test cases. Note that the choice of the parameters strongly influences the capabilities of the algorithms of finding the global optimum.</p><p>To compare the global properties of the various strategies, the success rate is measured. The success rate is the ratio of the number of successful trials in which the convergence criterion is met to the total number of trials. The success rates of the different optimization methods, summarized in Table <ref type="table" target="#tab_1">III</ref>, are determined using 30 trials for the stochastic optimization strategies and trials for the PRS. As seen from Table <ref type="table" target="#tab_1">III</ref>, the PRS technique performs very poorly on Rastrigin's function. The reason that the evolutionary methods find the global optimum with a higher success rate lies in the fact that they can ignore the superimposed sinusoidal noise on the quadratic function using appropriate step sizes. DE works perfectly on this function, whereas ES, CMA-ES, and BC find the global optimum less likely.</p><p>On the modified Rosenbrock function, the behavior is different. Here, the PRS technique succeeds in all trials. The number of maximum iterations was likely chosen too large. Also BC performs perfectly whereas the other evolutionary algorithms DE, ES, and CMA-ES are less likely to succeed.</p><p>It is noteworthy that the above values for the success rates may differ significantly when other strategy parameters are chosen or when the number of allowed iterations is modified. This analysis should give a rough idea about the limitations of the algorithms. The improvement of the strategy parameters for global optimization in the BC is a subject of ongoing investigation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. APPLICATION OF THE BC STRATEGY TO INVERSE DESIGN OF AIRFOILS</head><p>This section contains a general description of optimizaton of airfoil profiles with inverse design and also the application of the bacteria strategy to this problem. In addition, it provides a further comparison of the BC with ESs, showing that BC can be a viable alternative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Theory of the Airfoil Optimization Using the Inverse Design Method</head><p>The design cycle of airfoil profiles involves the calculation of the pressure distribution associated with the airfoil geometry. When the geometry of the airfoil is given, the surface pressure distribution is computed from the solution of the flow field. This computation that involves the implementation of a potential or Euler flow solver is referred to as analysis or direct technique. However, it is common practice to design the airfoil geometry based on a desired wall-pressure distribution. This inverse design process can be achieved by applying an inverse algorithm such as an adjoint procedure <ref type="bibr" target="#b25">[26]</ref> to the governing flow equations or by iteratively modifying the geometry of the airfoil, using an optimization algorithm in order to achieve the desired pressure distribution. algorithms exhibit high convergence rates, but they may not be easily available for computation of certain flows or for configurations that involve combinations of empirical models and equations as is often the case in industrial applications. Here, we implement an iterative approach along with the chemotactic bacterial strategy. We carry out the inverse design procedure for the problem of potential flow past a nonlifting configuration. It should be emphasized that this flow model was selected for its simplicity and that the optimization algorithm is not inherently linked to the flow solver. The flow is solved using a panel-method approach with a distribution of constant-strength vortices along the profile <ref type="bibr" target="#b26">[27]</ref>. The problem amounts to determining the strength of the vortex sheet in order to enforce the boundary condition of no-through flow. This is achieved by solving a well-posed system of linear equations for the panel strengths requiring that the normal velocity component vanishes at the centerpoint of the panel.</p><p>The parameters are variables defining the shape of the airfoil. The optimization problem requires the minimization of the measure of the distance between the achieved and desired pressure distribution. In our case, the objective function is defined by where pressure coefficient; target pressure coefficient; location on the chordwise coordinate; total number of panels. For the optimization, our target pressure distribution corresponds to potential flow past wing sections of a standardized family of airfoil geometries, the so-called NACA four-digit airfoil series. The thickness distribution nondimensionalized by the chordlength can be expressed as a fraction of the maximum  thickness <ref type="bibr" target="#b27">[28]</ref>. We introduced a sinusoidal term in the equation for the thickness distribution as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Airfoil Optimization With the Bacterial Chemotaxis Algorithm</head><p>We apply the BC strategy on this six-dimensional problem, using the following parameters: initial precision , final precision , number of parameter changes , , , . Again, parameters are chosen based on our experience. For the initial parameters , , , , , , the objective function value is . We stopped the simulation after obtaining a final objective function value of . Figs. 14 and 15 show, respectively, the evolution of the profile geometry and of the pressure distribution (given in terms of the pressure coefficient on the profile). Fig. <ref type="figure" target="#fig_10">16</ref> shows the convergence behavior of the bacterial strategy on the airfoil problem (note the logarithmic scale).</p><p>Starting from the initial values, the BC algorithm converges to the coefficients , , , , , . The converged coefficients are different from the NACA0012 values that are , , , , , and . However, different sets of parameters (representing the coefficients of a polynomial) may yield similar geometric shapes and pressure distributions of the airfoil, as it is the case here.</p><p>We compare this result with those given by a single optimization run using (3/3,12)-ES and a single run with (3/3,12)-CMA-ES (Fig. <ref type="figure" target="#fig_10">17</ref>). After 2400 steps, BC reaches a value of around 1, ES around 1.3, and CMA-ES around 0.1. At this point, the BC strategy is better than the ES, but worse than CMA-ES. This behavior does not change until iterations when the optimization stops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>The purpose of this paper was to present a class of optimization algorithms based on a model of bacterial chemotaxis. Starting from a simple 2-D chemotaxis, we developed an -dimensional model with additional features to improve its performance in situations that may cause a loss of computational time, e.g., the run on plateaus or the need of high precision. The improved optimization strategy, which we call BC strategy, is stochastic and relatively simple. The stochasticity gives an important feature not contained in other optimization strategies, particularly the possibility of finding the global optimum of a multimodal function, a common feature of many engineering problems.</p><p>The performance of the new optimization strategy is worse than that of ESs for quadratic functions but comparable for the Rosenbrock function. Also in case of the inverse design of airfoils, the bacteria strategy performs better than standard ESs and is comparable to ESs with improved convergence properties. In the future, strategy parameters for the additional features of the algorithm should be determined adaptively depending on the optimization problem. It would be interesting to add communication features into an optimization strategy based on BC as they may correspond to actual biological behavior of certain types of bacteria populations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. 2-D path of a bacterium consisting of the previous step x and the actual step x yielding the new position x of the bacterium.</figDesc><graphic coords="2,338.40,62.28,176.64,105.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>( 1 ) 2 )</head><label>12</label><figDesc>Compute the duration of the trajectory from the distribution of a random variable with an exponential proba-; function to minimize (2-D); difference between the actual and the previous function value; , vector connecting the previous and the actual position in the parameter space; dimensionless parameter. 3) Compute the new direction. The probability density distribution of the angle between the previous and the new direction is Gaussian and reads, for turning right or left, respectively</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .Fig. 3 .</head><label>23</label><figDesc>Fig. 2. Path of a single bacterium on F (x; y) = (x 0 1) + (y 0 1) . Start point (0; 0), = 10 , T = 2:6 1 10 , b = 1:53 1 10 , = 3:65 1 10 , v = 1, number of steps: 389, path length: 1.5727.</figDesc><graphic coords="4,52.86,62.28,221.52,177.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Average number of iterations plus standard deviation as a function of the target precision for the optimization of F (x; y) = (x 0 1) + (y 0 1) . Start point (0; 0).</figDesc><graphic coords="4,337.26,62.28,178.80,146.16" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Paths of three bacteria on F (x; y) = (x 0 1) + (y 0 1) using different values of b. Start point (0; 0), = 10 , T = 5:0 1 10 ; = 7:9 1 10 , v = 1. b = 270 (-), number of steps: 2441, path length: 2.7044; b = 1000(1 11), number of steps: 495, path length: 2.1017; b = 2000 (-. -), number of steps: 232, path length: 3.6102.</figDesc><graphic coords="4,336.12,261.78,181.20,172.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Paths of two bacteria on F (x; y) = 1001 (x 0y) + (1 0x) using different start points. = 10 ; T = 5:0 1 10 ; b = 2:0; = 7:9 1 10 , v = 1. Start point (2; 01)(-), number of steps: 17339, path length: 29.144; Start point (02; 02)(-1 -), number of steps: 12722, path length: 15.217.</figDesc><graphic coords="5,75.66,62.28,179.04,171.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Function F (x; y) = 20+(x 0101cos(2x)+y 0101cos(2y)).</figDesc><graphic coords="5,49.98,296.52,230.40,176.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Path of a single bacterium on F (x; y) = 20+(x 0101cos(2x)+ y 0 10 1 cos(2y)). Start point (05; 05), = 10 , b = 10:0, T = 5:0 1 10 , = 7:9 1 10 , v = 1. Number of steps: 3 1 10 . Note that the simulation does not stop at the global minimum.</figDesc><graphic coords="5,340.92,62.28,174.48,177.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Function F (x; y) = (x + y ) 1 (sin (50(x + y ) ) + 1:0).</figDesc><graphic coords="5,311.94,301.26,232.56,177.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Path of a single bacterium on F (x; y) = (x + y ) 1 (sin (50(x + y ) ) + 1:0). Start point (05; 05), = 10 , T = 5:0 1 10 , b = 8:0 1 10 , = 1:79 1 10 , v = 1, number of steps: 10 . Note that the simulation does not stop at the global minimum.</figDesc><graphic coords="6,73.26,62.28,180.72,177.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>1 )</head><label>1</label><figDesc>Adapt the parameter automatically to functions with different slopes and values. 2) Change all strategy parameters during the local search in order to refine them for an increasing precision requirement. 3) Avoid spending much computation time on plateaus. 1) Automatic Adaptation of the Parameter : One of the critical points in the formulation of the current bacteria strategy is the definition of the time [see (3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 11 . 10 .</head><label>1110</label><figDesc>Fig. 11. Paths of two bacteria on F (x; y) with and without strategy parameter refinement. Start point (0; 0), = 10 . Without strategy parameters refinement (-): = 10 , n = 0, number of function evaluations: 10 806. With strategy parameters refinement (-1 -): = 10 , n = 10, number of function evaluations: 1172.</figDesc><graphic coords="8,76.68,62.28,174.00,172.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Convergence plot for the two bacteria paths shown in Fig. 11. Without parameter refinement (-). With parameter refinement (-1 -).</figDesc><graphic coords="8,316.50,62.28,220.32,179.16" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Paths of two bacteria on F = (x 01) +(y 01) . Start point (0; 0), n = 3, A = 10 , B = 4:0, = 10 . Without plateau speedup (-), number of steps: 2156. With plateau speedup (-1 -), number of steps: 365.</figDesc><graphic coords="8,339.18,283.02,174.96,172.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>2 )</head><label>2</label><figDesc>To avoid spending too much time or even being blocked in a local minimum without succeeding in jumping from one local minimum to another, the parameter is increased (only one time) after the bacterium has found a subsequent number of values below a given precision If for subsequent times (user-defined) (only for the th step)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>modified Rosenbrock function in two dimensions (30) with the global minimum and a local one . The optimization parameter ranges are for and for . Within these domains, the start points were placed randomly and the termination criteria were set to and in order to check if the area of attraction of the global minimum was found. If the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Evolution of the airfoil profile after 0 (---), 200 (-1 -), 1000 (1 1 1), and 2400 (-) objective function evaluations for a single optimization run.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 15 .</head><label>15</label><figDesc>Fig.<ref type="bibr" target="#b14">15</ref>. Evolution of pressure distribution (C ) on the profile after 0 (---), 200(-1 -), 1000 (1 1 1), and 2400 (-) objective function evaluations for a single optimization run.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 16 .Fig. 17 .</head><label>1617</label><figDesc>Fig. 16. Convergence of the BC for a single airfoil optimization run.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I AVERAGE</head><label>I</label><figDesc>NUMBER OF FUNCTION EVALUATIONS TO REACH THE OPTIMIZATION GOAL FOR THE TWO ALGORITHMS WITH AND WITHOUT DEPENDENCY ON THE PREVIOUS STEP TABLE II AVERAGE NUMBER OF FUNCTION EVALUATIONS TO REACH THE OPTIMIZATION GOAL FOR THE DIFFERENT METHODS</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE III SUCCESS</head><label>III</label><figDesc>RATES FOR THE DIFFERENT METHODS method failed to meet this criterion, it was stopped after 50 000 iterations.The strategy parameters of the BC were given as follows. For the marker concentration function, it was</figDesc><table><row><cell>,</cell><cell>,</cell><cell cols="2">. The number of</cell></row><row><cell cols="3">function evaluations for the global search was set to</cell><cell>and</cell></row><row><cell>for the local search,</cell><cell cols="3">. The parameters for the global search</cell></row><row><cell>were chosen as</cell><cell>,</cell><cell>,</cell><cell>; the</cell></row><row><cell cols="2">parameters for the local search were</cell><cell>,</cell><cell>,</cell></row><row><cell>,</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank the anonymous reviewers and Dr. Fogel for their valuable comments.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported by the Swiss National Science Foundation under Grant 21-54093-98. S. D. Müller and P. Koumoutsakos are with the Institute of Computational Sciences, Swiss Federal Institute of Technology (ETH), CH-8092 Zürich, Switzerland ). J. Marchetto was with the Institute of Fluid Dynamics, Swiss Federal Institute of Technology (ETH), CH-8092 Zürich, Switzerland. He is now with Research and Development, the Fantastic Corporation, 6928 Manno, Switzerland</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Sibylle D. <ref type="bibr">Müller</ref>  In his diploma thesis, he studied optimization algorithms based on bacteria chemotaxis among other biologically inspired algorithms.</p><p>Petros Koumoutsakos received the Dipl. degree in naval architecture and mechanical engineering from the National Technical University of Athens, Greece, in 1986, the Dipl. degree in naval architecture from the University of Michigan, Ann Arbor, in 1987, and the M.Sc. degree in aeronautics and the Ph.D. degree in aeronautics and applied mathematics from the California Institute of Technology, Pasadena, in 1988 and 1992, respectively.</p><p>From 1992 to 1994, he was a National Science Foundation Postdoctoral Fellow in parallel supercomputing with the California Institute of Technology. Since 1994, he has been a Senior Research Associate with the Center for Turbulence Research, NASA Ames/Stanford University. From September 1997 to June 2000, he was an Assistant Professor of Computational Fluid Dynamics, Swiss Federal Institute of Technology (ETH), Zürich, Switzerland, where he has been a Full Professor of Computational Sciences since July 2000. His current research interests are in the areas of particle methods, machine learning, and biologically inspired computation and the application of these techniques to problems of interest in the areas of engineering and life sciences.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Schwefel</surname></persName>
		</author>
		<title level="m">Evolution and Optimum Seeking</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Adaptation in Natural and Artificial Systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>Univ. of Michigan Press</publisher>
			<pubPlace>Ann Arbor, MI</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Learning and Natural Algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Dipartimento di Elettronica e Informazione, Politecnico di Milano</title>
		<meeting><address><addrLine>Milano, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
	<note>in Italian</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Pareto genetic algorithm for aerodynamic design using the Navier-Stokes equations</title>
		<author>
			<persName><forename type="first">S</forename><surname>Obayashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Genetic Algorithms in Engineering and Computer Science</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Ant system for job-shop scheduling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trubian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Belg. J. Oper. Res. Stat. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="39" to="53" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Chemotaxis and optimization</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Bremermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Franklin Inst</title>
		<imprint>
			<biblScope unit="volume">297</biblScope>
			<biblScope unit="page" from="397" to="404" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">How the brain adjusts synapses-maybe</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Bremermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automated Reasoning: Essays in Honor of Woody Bledsoe</title>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Boyer</surname></persName>
		</editor>
		<meeting><address><addrLine>Norwell, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="119" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Biased random-walk learning: A neurobiological correlate to trial-and-error</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Neural Networks and Pattern Recognition</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Omidvar</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Dayhoff</surname></persName>
		</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="221" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Self-organizing and learning control systems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Barron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cybernetic Problems in Bionics-Bionics Symposium</title>
		<meeting><address><addrLine>Dayton; New York</addrLine></address></meeting>
		<imprint>
			<publisher>Gordon and Breach</publisher>
			<date type="published" when="1966-05">May 1966. 1968</date>
			<biblScope unit="page" from="147" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Neuromine nets as the basis for predictive component of robot brains</title>
	</analytic>
	<monogr>
		<title level="m">Cybernetics, Artificial Intelligence, and Ecology-Fourth Annual Symposium American Society of Cybernetics</title>
		<editor>
			<persName><forename type="first">W</forename><surname>Robinson</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Knight</surname></persName>
		</editor>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>Spartan</publisher>
			<date type="published" when="1972">1972</date>
			<biblScope unit="page" from="159" to="193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Adaptive flight control systems</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Mucciardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Principles and Practise of Bionics-NATO AGARD Bionics Symp</title>
		<imprint>
			<date type="published" when="1968-09">Sept. 1968</date>
			<biblScope unit="page" from="119" to="167" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Chemotaxis in Escherichia coli analyzed by three-dimensional tracking</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">C</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">239</biblScope>
			<biblScope unit="page" from="500" to="504" />
			<date type="published" when="1972-10">Oct. 1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Studies of bacterial chemotaxis in defined concentration gradients-A model for chemotaxis toward l-serine</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">W</forename><surname>Dahlquist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Elwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Lovely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Supramolecular Structure</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">289</biblScope>
			<biblScope unit="page">329</biblScope>
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Biology of the Chemotactic Response-Forty-Sixth Symposium of the Society for General Microbiology Jointly Organised with the British Society for Cell Biology</title>
		<editor>J. Armitage and J. M. Lackie</editor>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Koshland</surname><genName>Jr</genName></persName>
		</author>
		<title level="m">Bacterial Chemotaxis as a Model Behavioral System</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Raven</publisher>
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Lackie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Wilkinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biology of the Chemotactic Reponse</title>
		<imprint>
			<date type="published" when="1981">1981</date>
			<publisher>Cambridge Univ. Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Lackie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cell Movement and Cell Behavior</title>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>Allen and Unwin</publisher>
			<pubPlace>London, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The involvement of cell-to-cell signals in the development of a bacterial biofilm</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Davies</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Parsek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Pearson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Iglewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Costerton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">280</biblScope>
			<biblScope unit="page" from="295" to="298" />
			<date type="published" when="1998-04">Apr. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Swarm Intelligence-From Natural to Artificial Systems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Bonabeau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Theraulaz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Studies in the Sciences of Complexity</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>Oxford, U.K.; Santa Fe Inst</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Optimization algorithms based on a model of bacterial chemotaxis</title>
		<author>
			<persName><forename type="first">S</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Airaghi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Marchetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Koumoutsakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Int. Conf. Simulation of Adaptive Behavior: From Animals to Animats, SAB 2000 Proc</title>
		<meeting>6th Int. Conf. Simulation of Adaptive Behavior: From Animals to Animats, SAB 2000</meeting>
		<imprint>
			<date type="published" when="2000-09">Sept. 2000</date>
			<biblScope unit="page" from="375" to="384" />
		</imprint>
	</monogr>
	<note>Suppl.</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Building better test functions</title>
		<author>
			<persName><forename type="first">D</forename><surname>Whitley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mathias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dzubera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth International Conference on Genetic Algorithms</title>
		<meeting>the Sixth International Conference on Genetic Algorithms<address><addrLine>San Mateo, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Convergence properties of evolution strategies with the derandomized covariance matrix adaptation: The (= ; )-CMA-ES</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ostermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Eur. Congr. Intelligent Techniques and Soft Computing</title>
		<meeting>5th Eur. Congr. Intelligent Techniques and Soft Computing</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="650" to="654" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><surname>Rechenberg</surname></persName>
		</author>
		<title level="m">Evolutionsstrategie &apos;94</title>
		<meeting><address><addrLine>Stuttgart, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Fromann-Holzboog</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Differential evolution-a simple and efficient heuristic for global optimization over continuous spaces</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Global Optim</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="341" to="359" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">System design by constraint adaptation and differential evolution</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="22" to="34" />
			<date type="published" when="1999-04">Apr. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Constrained multipoint aerodynamic shape optimization using an adjoint formulation and parallel computers, Part 2</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Reuther</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jameson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Alonso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Rimlinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Saunders</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Aircraft</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="60" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Panel methods in computational fluid dynamics</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Hess</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annu. Rev. Fluid Mechan</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="255" to="274" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">H</forename><surname>Abbott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Doenhoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Theory of Wing Sections</title>
		<imprint>
			<date type="published" when="1949">1949</date>
			<publisher>Dover</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
