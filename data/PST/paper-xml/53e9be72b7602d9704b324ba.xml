<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Asymptotically Optimal Geometric Mobile Ad-Hoc Routing *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Fabian</forename><surname>Kuhn</surname></persName>
							<email>kuhn@inf.ethz.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science ETH</orgName>
								<address>
									<postCode>8092</postCode>
									<settlement>Zurich, Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Roger</forename><surname>Wattenhofer</surname></persName>
							<email>wattenhofer@inf.ethz.ch</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science ETH</orgName>
								<address>
									<postCode>8092</postCode>
									<settlement>Zurich, Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Aaron</forename><surname>Zollinger</surname></persName>
							<email>zollinger@inf.ethz.ch</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science ETH</orgName>
								<address>
									<postCode>8092</postCode>
									<settlement>Zurich, Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Asymptotically Optimal Geometric Mobile Ad-Hoc Routing *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">246DD3E97D44B78A08A9573BD07E3AEA</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems-geometrical problems and computations</term>
					<term>routing and layout; C.2.2 [Computer-Communication Networks]: Network Protocols-routing protocols Algorithms</term>
					<term>Theory Ad-Hoc Networks</term>
					<term>Face Routing</term>
					<term>Geometric Routing</term>
					<term>Routing</term>
					<term>Unit Disk Graphs</term>
					<term>Wireless Communication</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper we present AFR, a new geometric mobile adhoc routing algorithm. The algorithm is completely distributed; nodes need to communicate only with direct neighbors in their transmission range. We show that if a best route has cost c, AFR finds a route and terminates with cost O(c 2 ) in the worst case. AFR is the first algorithm with cost bounded by a function of the optimal route. We also give a tight lower bound by showing that any geometric routing algorithm has worst-case cost Ω(c 2 ). Thus AFR is asymptotically optimal. We give a non-geometric algorithm that also matches the lower bound, but needs some memory at each node. This establishes an intriguing trade-off between geometry and memory.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>A mobile ad-hoc network consists of mobile nodes equipped with a wireless radio. We think of mobile nodes as points in the Euclidean plane. Two nodes can directly communicate with each other if and only if they are within transmission range of each other. Throughout this paper we assume that all nodes have the same transmission range R<ref type="foot" target="#foot_0">1</ref> . Two nodes with distance greater than R can communicate by relaying their messages through a series of intermediate nodes; this process is called multi-hop routing.</p><p>In this paper we study so-called geometric routing; in networks that support geometric routing a) each node is equipped with a location service, i.e. each node knows its Euclidean coordinates, b) each node knows all the neighbor nodes (nodes within transmission range R) and their coordinates, and c) the sender of a message knows the coordinates of the destination.</p><p>In addition to the standard assumptions a), b) and c), we take for granted that mobile nodes are not arbitrarily close to each other, i.e. d) there is a positive constant d0 such that the distance between any pair of nodes is at least d0. This is motivated by the fact that there are physical limitations on how close to each other two mobile nodes can be placed. Further, distances between neighboring nodes in an ad-hoc network will typically be in the order of the transmission range. <ref type="foot" target="#foot_1">2</ref>In this paper we present a new geometric routing algorithm which borrows from the eminent Face Routing algorithm by Kranakis, Singh, and Urrutia <ref type="bibr" target="#b13">[14]</ref>. As it is the tradition in the community, we give our algorithm a name: AFR which stands for Adaptive Face Routing 3 . Our algorithm is completely local; nodes only exchange messages with their direct neighbors, i.e. nodes in their transmission range R. We show that if a best route has cost c, our algorithm finds a route and terminates with cost O(c 2 ) in the worst case. This bound holds for many prominent cost models such as distance, energy, or the link metric. Note that the distance of the best route (the sum of the distances of the single hops) can be arbitrarily larger than the Euclidean distance of source and destination. Our algorithm is the first algorithm that is bounded by a function of the optimal route; the original Face Routing algorithm and all other geo-metric routing algorithms are only bounded by a function of the number of nodes.</p><p>Moreover we show that any geometric routing algorithm has cost Ω(c 2 ). This tight lower bound proves that our algorithm is asymptotically optimal <ref type="foot" target="#foot_3">4</ref> . The lower bound also holds for randomized algorithms. Apart from the theoretical relevance of our results, we feel that our algorithm has practical potential, especially as a fall-back mechanism for greedy geometric routing algorithms (which are efficient in an average case).</p><p>It is surprising that the cost of geometric routing algorithms is quadratic in the cost of the best route. We show that this bound can also be achieved by a simple non-geometric routing algorithm. In exchange for the missing location service we give the algorithm some extra memory at each node. We show that this algorithm also has cost O(c 2 ), which, contrary to intuition, proves that in the worst case a GPS is about as useful as some extra bits of memory.</p><p>The paper is organized as follows. In the next section we discuss the related work. In Section 3 we formally model mobile ad-hoc networks and geometric routing algorithms. In Section 4 we present and analyze our geometric routing algorithm AFR. We give a matching lower bound in Section 5. Section 6 concludes and discusses the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Traditionally, multi-hop routing for mobile ad-hoc networks can be classified into proactive and reactive algorithms. Proactive routing algorithms copycat the behavior of wireline routing algorithms: Each node in the mobile ad-hoc network maintains a routing table that lays down how to forward a message. Mobile nodes locally change the topology of the network, which in turn provokes updates to the routing tables throughout the network. Proactive routing algorithms are efficient only if the ratio of mobility over communication is low. If the nodes in the network are reasonably mobile, the overhead of control messages to update the routing tables becomes unacceptably high. Also storing large routing tables at cheap mobile nodes might be prohibitively expensive. Reactive routing algorithms on the other hand find routes on demand only. The advantage is that there is no fixed cost for bureaucracy. However, whenever a node needs to send a message to another node, the sender needs to flood the network in order to find the receiver and a route to it. Although there are a myriad of (often obvious and sometimes helpful) optimization tricks, the flooding process can still use up a significant amount of scarce wireless bandwidth. Reviews of routing algorithms in mobile ad-hoc networks in general can be found in <ref type="bibr" target="#b3">[4]</ref> and <ref type="bibr" target="#b20">[21]</ref>.</p><p>Over a decade ago researchers started to advocate equipping every node with a location information system <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b22">23]</ref>; each node knows its geometric coordinates <ref type="bibr" target="#b9">[10]</ref>. If the (approximate) coordinates of the destination are known too, a message can simply be sent/forwarded to the "best" direction. This approach is called directional, geometric, geographic, location-, or position-based routing. With the growing availability of global positioning systems (GPS or Galileo), it can easily be imagined to have a corresponding receiver at each node <ref type="bibr" target="#b11">[12]</ref>. Even if this is not the case, one can conceive that nodes calculate their position with a local scheme; a research area that has recently been well studied <ref type="bibr" target="#b21">[22]</ref>. Geometric routing only works if nodes know the location of the destination. Clearly, the (approximate) location of the destination changes much less frequently than the structure of the underlying graph. In this sense it is certainly less expensive to keep the approximate locations of the destinations than the whole graph. In the area of peer-to-peer networking a lot of data structures have been presented that store this type of information in an efficient way. It would be possible to use an overlay peer-to-peer network to maintain the position of all destinations <ref type="bibr" target="#b15">[16]</ref>. Last but not least one could imagine that we want to send a message to any node in a given area, a routing concept that is known as geocasting <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b18">19]</ref>. Overviews of geometric routing algorithms are given in <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b19">20]</ref>. The first geometric routing algorithms were purely greedy: The message is always forwarded to the neighboring node that is closest to the destination <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b22">23]</ref>. It was shown that even simple location configurations do not guarantee that a message will reach its destination when forwarded greedily. For example, we are given a network with nodes that are distributed "on" the letter "C" (see figure <ref type="figure" target="#fig_0">1</ref>). Assume that the northernmost node s of "C" wants to send a message to destination t (the southeastern tip of "C"). With greedy routing the message is forwarded from the source to the best neighbor, i.e. in the southeastern direction. At node v (the north eastern tip of "C") there is no neighbor node closer to the destination, and the routing algorithm fails. To circumvent the gap of the "C", the source should have sent the message to the west. It has been shown that many other definitions of "best" neighbor (e.g. best angle a.k.a. Compass Routing in <ref type="bibr" target="#b13">[14]</ref>) do not guarantee delivery either.</p><p>The first geometric routing algorithm that guarantees delivery is the Face Routing algorithm, proposed in a seminal paper by Kranakis, Singh, and Urrutia <ref type="bibr" target="#b13">[14]</ref> (in their short paper they call the algorithm Compass Routing II ). The Face Routing algorithm is a building block of our routing algorithm AFR and will therefore be discussed in more detail later. The Face Routing algorithm guarantees that the message will arrive at the destination and terminates in O(n) steps, where n is the number of nodes in the network. This is not satisfactory, since already a very simple flooding algorithm will terminate in O(n) steps. In case the source and the destination are close, we would like to have an algorithm that terminates earlier. In particular, we are interested in the competitive ratio of the route found by the algorithm over the best possible route.</p><p>There have been other suggestions for geometric routing algorithms with guaranteed delivery <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5]</ref>, but in the worst case (to the best of our knowledge) none of them is better than the original Face Routing algorithm. Other (partly non-deterministic) greedy routing algorithms have been shown to find the destination on special planar graphs, such as triangulations or convex subdivisions <ref type="bibr" target="#b1">[2]</ref>, without any performance guarantees.</p><p>It has been shown that the shortest path between two nodes on a Delaunay triangulation is only a small constant factor longer than their distance <ref type="bibr" target="#b5">[6]</ref>. It has even been shown that indeed there is a competitive routing algorithm for Delaunay triangulations <ref type="bibr" target="#b0">[1]</ref>. However, nodes can only communicate within transmission range R: Delaunay triangulation is not applicable since edges can be arbitrarily long in Delaunay triangulations. Accordingly, there have been attempts to approximate the Delaunay triangulation locally <ref type="bibr" target="#b16">[17]</ref> but no better bound on the performance of routing algorithms can be given for such a construction.</p><p>A more detailed discussion of geometric routing can be found in <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">MODEL</head><p>This section introduces the notation and the model we use throughout the paper. We consider routing algorithms on Euclidean graphs, i.e. weighted graphs where edge weights represent Euclidean distances between the adjacent nodes in a particular embedding in the plane. As usual, a graph G is defined as a pair G := (V, E) where V denotes the set of nodes and E ⊆ V 2 denotes the set of edges. The number of nodes is called n := |V | and the Euclidean length of an edge e ∈ E is denoted by c d (e). A path p := v1, . . . , v k for vi ∈ V is a list of nodes such that two consecutive nodes are adjacent in G, i.e. (vi, vi+1) ∈ E. Note that edges can be traversed multiple times when walking along p. Where convenient, we also denote a path p by the corresponding list of edges.</p><p>As mentioned in the introduction, we consider the standard model for ad-hoc networks where all nodes have the same limited transmission ranges. This leads to the definition of the unit disk graph (UDG). Definition 1. (Unit Disk Graph) Let V ⊂ Ê 2 be a set of points in the 2-dimensional plane. The Euclidean graph with edges between all nodes with distance at most 1 is called the unit disk graph.</p><p>We also make the natural assumption that the distance between nodes is limited from below. Definition 2. (Ω(1)-model) If the distance between any two nodes is bounded from below by a term of order Ω(1), i.e. there is a positive constant d0 such that d0 is a lower bound on the distance between any two nodes, this is referred to as the Ω(1)-model. This paper mainly focuses on geometric ad-hoc routing algorithms which can be defined as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3.</head><p>(Geometric Ad-Hoc Routing Algorithm) Let G = (V, E) be a Euclidean graph. The aim of a geometric ad-hoc routing algorithm A is to transmit a message from a source s ∈ V to a destination t ∈ V by sending packets over the edges of G while complying with the following conditions:</p><p>• Initially all nodes v ∈ V know their geometric positions as well as the geometric positions of all of their neighbors in G.</p><p>• The source s knows the position of the destination t.</p><p>• The nodes are not allowed to store anything except for temporarily storing packets before transmitting them.</p><p>• The additional information which can be stored in a packet is limited by O(log n) bits, i.e. information about O(1) nodes is allowed.</p><p>In the literature geometric ad-hoc routing has been given various other names, such as O(1)-memory routing algorithm in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>, local routing algorithm in <ref type="bibr" target="#b13">[14]</ref> or positionbased routing. Due to the storage restrictions, geometric ad-hoc routing algorithms are inherently local.</p><p>For our analysis we are interested in three different cost models: the link distance metric (the number of hops), the Euclidean distance metric (the total traversed Euclidean distance) and the energy metric (the total energy used). Each cost model implies an edge weight function. As already defined, the Euclidean length of an edge is denoted by c d (e). In the link distance metric all edges have weight 1 (c ℓ (e) ≡ 1), and the energy weight of an edge is defined as the square of the Euclidean length (cE(e) := c d 2 (e)). The cost of a path p = e1, . . . , e k is defined as the sum of the costs of its edges:</p><formula xml:id="formula_0">cτ (p) := k i=1 cτ (ei), for τ ∈ {d, ℓ, E}.</formula><p>The cost cτ (A) of an algorithm A is defined analogously as the sum over the costs of all edges which are traversed during the execution of an algorithm on a particular graph G<ref type="foot" target="#foot_4">5</ref> . Lemma 3.1. In the Ω(1)-model, the Euclidean distance, the link distance, and the energy metrics of a path p = e1, . . . , e k are equal up to a constant factor on the unit disk graph <ref type="foot" target="#foot_5">6</ref> .</p><p>Proof. The cost of p in the link distance metric is c ℓ (p) = k. We have that d0 ≤ c d (e) ≤ 1 for all edges e ∈ E. Therefore, the Euclidean distance and the energy costs of p are upper-bounded by k and lower-bounded by c d (p) ≥ d0k and cE(p) ≥ d 2 0 k, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">AFR: ADAPTIVE FACE ROUTING</head><p>In this section, we describe our algorithm AFR which is asymptotically optimal for unit disk graphs in the Ω(1)model. Our algorithm is an extension of the Face Routing algorithm introduced by Kranakis et al. <ref type="bibr" target="#b13">[14]</ref> (in the original paper the algorithm is called Compass Routing II ). Face Routing and AFR work on planar graphs. We use the term planar graph for a specific embedding of a planar graph, i.e. we consider Euclidean planar graphs. In this case, the nodes and edges of a planar graph G partition the Euclidean plane into contiguous regions called the f faces of G (see Figure <ref type="figure" target="#fig_1">2</ref> as an illustration). Note that we get f -1 finite faces in the interior of G and one infinite face around G.</p><p>The main idea of the Face Routing algorithm is to walk along the faces which are intersected by the line segment st between the source s and the destination t. For completeness we describe the algorithm in detail (see Figure <ref type="figure" target="#fig_2">3</ref>).  In order to simplify the subsequent proofs, we show that Face Routing terminates in linear time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>t s</head><p>Lemma 4.1. The Face Routing algorithm reaches the destination t after traversing at most O(n) edges where n is the number of nodes.</p><p>Proof. First we show that the algorithm terminates. By the choices of the faces F in step 0 and 2, respectively, we see that in step 1 we always find a point p which is nearer to t than the previous p where we start the tour around F . Therefore we are coming nearer to t with each iteration, and since there are only finitely many intersections between st and the edges of G, we reach t in a finite number of iterations.</p><p>For the performance analysis, we see that by choosing p as the st-"face boundary" intersection which is nearest to t, we will never traverse the same face twice. Now, we partition the edges E into two subsets E1 and E2 where E1 are the edges which are incident to only one face (the same face lies on both sides of the edge) and E2 are the edges which are incident to two faces (the edge lies between two different faces). During the exploration of a face F in step 2, an edge of E2 is traversed at most twice and an edge of E1 is traversed at most four times. Since the edges of E1 appear in only one face and the edges of E2 appear in two faces, all edges of E are traversed at most four times during the whole algorithm. Each face in a planar connected graph (with at least 4 nodes) has at least three edges on its boundary. This together with the Euler polyhedral formula (n -m + f = 2) yields that the number of edges m is bounded by m ≤ 3n-6 which proves the lemma.</p><p>In order to obtain our new algorithm AFR, we are now going to change Face Routing in two steps. In a first step we assume that an upper-bound c d on the (Euclidean) length c d (p * ) of a shortest route p * from s to t on graph G is known to s at the beginning. We present a geometric adhoc routing algorithm which reaches t with link distance cost at most O( c d 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bounded Face Routing (BFR[ c d ])</head><p>. Let E be the ellipse which is defined by the locus of all points the sum of whose distances from s and t is c d , i.e. E is an ellipse with foci s and t. By the definition of E, the shortest path (in Ê 2 ) from s to t via a point q outside E is longer than c d . Therefore, the best path from s to t on G is completely inside or on E. We change step 1 of Face Routing such that we always stay within E.</p><p>0. Start at s and let F be the face which is incident to s and which is intersected by st in the immediate region of s. As before, we explore the face F and remember the best intersection between st and the edges of F in p.</p><p>We start the exploration of F as in Face Routing by starting to walk into one of the two possible directions.</p><p>We continue until we come around the whole face F as in the normal Face Routing algorithm or until we would cross the boundary of E. In the latter case, we turn around and walk back until we get to the boundary of E again. In any case we are then going back to p. If the exploration of F does not yield a better p, i.e. if p has the same value as in the previous iteration, Bounded Face Routing does not find a route to t and we restart BFR to find a route back from p to the source s. Otherwise, proceed with step 2.</p><p>2. p divides st into two line segments where pt is the not yet "traversed" part of st. Update F to be the face which is incident to p and which is intersected by the line segment pt in the immediate region of p. Go back to step 1. Figure <ref type="figure">4</ref> shows an example where c d is chosen too small, Figure <ref type="figure">5</ref> shows a successful execution of the Bounded Face Routing algorithm.</p><p>Lemma 4.2. If the length of an optimal path p * (w.r.t. the Euclidean distance metric) between s and t in graph G in the Ω(1)-model is upper-bounded by a constant c d ≥ c d (p * ), Bounded Face Routing finds a path from s to t. If Bounded Face Routing does not succeed in finding a route to t, it does succeed in returning to s. In any case, Bounded Face Routing terminates with link distance cost at most O( c d 2 ).</p><p>Proof. We show that whenever there is a path from s to t which is completely inside or on E, Bounded Face Routing finds a route from s to t by traversing at most O( c d 2 ) edges. The lemma then follows. s t F r q' q A p' p Figure <ref type="figure">6</ref>: If there is a path from s to t inside E, BFR succeeds in routing from s to t (E is not drawn on the picture).</p><p>Suppose that there is a path r from s to t where r lies inside or on E. First we show that in this case BFR finds a route from s to t. Consider a point p on st from which we start to traverse a face F . We have to show that we find a point p ′ on st which is nearer to t than p while exploring face F . Assume that F does not completely lie inside the ellipse E since otherwise we find p ′ as in the normal Face Routing algorithm. Let q be the last intersection between path r and st before p and let q ′ be the first intersection between r and st after p (see Figure <ref type="figure">6</ref> as an illustration). The part of the path r which is between q and q ′ and the line segment qq ′ together define a polygon. We denote the area which is covered by this polygon by A. To traverse the boundary of F we can leave p in two possible directions where one of them points into A. During the traversal we will in any case take both directions. While walking along the boundary of F , we cannot cross the path r because the edges of r are part of the planar graph of which F is a face. In order to leave A, we therefore have to cross st at a point p ′ = p. p ′ must be nearer to t than p because otherwise the boundary of F would cross itself.</p><p>As a second step we show that each edge inside E is traversed at most four times during the execution of the BFR algorithm. In order to prove this, we consider the graph G ′ which is defined as follows. Prune everything of G which is outside the ellipse E. At the intersections between edges of G and E, we introduce new nodes and we take the segments of E between those new nodes as additional "edges" 7 . As an illustration, all edges of G ′ are drawn with thick lines in Figure <ref type="figure">5</ref>. Now consider step 1 of BFR as exploring a face F of G ′ instead of exploring a face of G. Let p be the intersection between F and st where we start the traversal of F and let p ′ be the st-"face boundary"-intersection which is closest to t. If there is a path from s to t inside E, there must also be a path between p and p ′ which is inside E. Assume that this is not the case. The part of the boundary of F which includes p and the part of the boundary of F which includes p ′ would then only be connected by the additional edges on E in G ′ . Thus, F would then separate E into two parts, one of which containing s, the other one containing t. Therefore step 1 of our algorithm BFR yields p ′ as a new point on st, i.e. BFR is in a sense equivalent to Face Routing on G ′ . Hence, in an execution of BFR each face of G ′ is visited at most once. During the exploration of a face F in step 1 of BFR each edge is traversed at most twice, no matter if we walk around F as in the normal Face Routing algorithm or if we hit E and have to turn around (the edges whose sides belong to the same face can again be traversed four times). Therefore, we conclude that each edge inside E is traversed at most four times.</p><p>As a last step, we have to prove that there are only O( c d 2 ) edges of G inside E. Since G is a planar graph, we know that the number of edges is linear in the number of nodes (m ≤ 3n -6 as shown in the proof of Lemma 4.1). We consider the Ω(1)-model where the Euclidean distance between any pair of nodes is at least d0. Thus, the circles of radius d0/2 around all nodes do not intersect each other. Since the length of the semimajor axis a of the ellipse E is c d /2, and since the area of E is smaller than πa 2 , the number of nodes n ′ inside E is bounded by</p><formula xml:id="formula_1">n ′ ≤ πa 2 π d 0 2 ¡ 2 + O(a) = c d 2 d 2 0 + O(a) ∈ O c d 2 ¡</formula><p>.</p><p>We have now proven that if there is a path from s to t inside E, then algorithm BFR terminates after traversing at 7 We do not consider that those additional edges are no straight lines. By adding some additional new nodes on E and connecting all new nodes by straight line segments, we could also construct G ′ to be a real Euclidean planar graph.</p><p>most O( c d 2 ) edges. The only thing which remains open in order to conclude the proof of Lemma 4.2 is that an unsuccessful execution of BFR also terminates after traversing at most O( c d 2 ) edges. Let Fi, 1 ≤ i ≤ k, be the faces which are visited during the execution of the algorithm. F k is the face where we do not find a better point on st, i.e. F k is the face which divides E into two parts. From the above analysis it is clear that the first k -1 faces are only visited once. F k is explored at most twice, once to find the best accessible intersection with st and once to see that no further improvement can be made. Hence, all edges are traversed at most eight times until we arrive at the point p on st where we have to turn around<ref type="foot" target="#foot_6">8</ref> . For our way back we know that there is a path from p to s which lies inside E and therefore we arrive at s after visiting every edge at most another four times.</p><p>We are now coming to the definition of AFR. The problem with Bounded Face Routing is that usually no upper-bound on the length of the best route is known. In AFR we apply a standard trick to get around this.</p><p>AFR Adaptive Face Routing. We begin by determining an estimate c d for the unknown value c d (p * ), e.g. c d := 2st. The algorithm then runs Bounded Face Routing with exponentially growing c d until eventually the destination t is reached: </p><formula xml:id="formula_2">1. Execute BFR[ c d ].</formula><formula xml:id="formula_3">c ℓ (AFR) ≤ k i=0 c ℓ (BFR[ c d,i ]) ≤ k i=0 λ 2 i c d,0 2 = λ c 2 d,0 4 k+1 -1 3 &lt; 16 3 λ 2 k-1 c d,0 2 &lt; 16 3 λ • c 2 d (p * ) ∈ O c 2 d (p * ) ¡ .</formula><p>For the remainder of this section we show how to apply AFR to the unit disk graph. We need a planar subgraph of the unit disk graph, since AFR requires a planar graph. There are various suggestions on how to construct a planar subgraph of the unit disk graph in a distributed way. Often the intersection between the UDG and the Relative Neighborhood Graph (RNG <ref type="bibr" target="#b23">[24]</ref>) or the Gabriel Graph (GG <ref type="bibr" target="#b7">[8]</ref>), respectively, have been proposed. In the RNG an edge between nodes u and v is present iff no other node w is closer to u and to v than u is to v. In the Gabriel Graph an edge between u and v is present iff no other node w is inside or on the circle with diameter uv. The Relative Neighborhood Graph and the Gabriel Graph are easily constructed in a distributed manner. There have been other suggestions, such as the intersection between the Delaunay triangulation and the unit disk graph <ref type="bibr" target="#b16">[17]</ref>. All mentioned graphs are connected provided that the unit disk graph is connected as well. We use the Gabriel Graph, since it meets all requirements as shown in the following lemma.</p><p>Lemma 4.4. In the Ω(1)-model the shortest path for any of the considered metrics (Euclidean distance, link distance, and energy) on the Gabriel Graph intersected with the unit disk graph is only by a constant longer than the shortest path on the unit disk graph for the respective metric. Proof. We show that at least one best path with respect to the energy metric on the UDG is also contained in GG ∩ UDG. Suppose that e = (u, v) is an edge of an energy optimal path p on the UDG. For the sake of contradiction suppose that e is not contained in GG ∩ UDG. Then there is a node w in or on the circle with diameter uv (see Figure <ref type="figure" target="#fig_5">7</ref>). The edges e ′ = (u, w) and e ′′ = (v, w) are also edges of the UDG and because w is in the described circle, we have e ′2 + e ′′2 ≤ e 2 . If w is inside the circle with diameter uv, the energy for the path p ′ := p \ {e} ∪ {e ′ , e ′′ } is smaller than the energy for p and p no energy-optimal path. If w is on the above circle, p ′ is an energy-optimal path as well and the argument applies recursively. Using Lemma 3.1, we see that the optimal path costs with respect to the Euclidean and the link distance metrics are only by a constant factor greater than the energy cost of p. This concludes the proof. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">LOWER BOUND</head><p>In this section we give a constructive lower bound for geometric ad-hoc routing algorithms.  Proof. We construct a family of networks as follows. We are given a positive integer k and define a Euclidean graph G (see Figure <ref type="figure" target="#fig_8">8</ref>): On a circle we evenly distribute 2k nodes such that the distance between two neighboring points is exactly 1; thus, the circle has radius r ≈ k/π. For every second node of the circle we construct a chain of ⌈r/2⌉ -1 nodes. The nodes of such a chain are arranged on a line pointing towards the center of the circle; the distance between two neighboring nodes of a chain is exactly 1. Node w is one arbitrary circle node with a chain: The chain of w consists of ⌈r⌉ nodes with distance 1. The last node of the chain of w is the center node; note that the edge to the center node does not need to have distance 1.</p><p>Please note that the unit disk graph consists of the edges on the circle and the edges on the chains only. In particular, there is no edge between two chains because all chains except the w chain end strictly outside radius r/2. Note that the graph has k chains with Θ(k) nodes each.</p><p>We route from an arbitrary node on the circle (the source s) to the center of the circle (the destination t). An optimal route between s and t follows the shortest path on the circle until it hits node w, and then directly follows w's chain to t with link cost c ≤ k + r + 1 ∈ O(k). An ad-hoc routing algorithm with routing tables at each node will find this best route.</p><p>A geometric ad-hoc routing algorithm needs to find the "correct" chain w. Since there is no routing information stored at the nodes, this can only be done by exploring the chains. Any deterministic algorithm needs to explore the chains in a deterministic order until it finds the chain w. Thus, an adversary can always place w such that w's chain will be explored as the last one. The algorithm will therefore explore Θ(k 2 ) (instead of only O(k)) nodes.</p><p>The argument is similar for randomized algorithms. By placing w accordingly (randomly!), an adversary forces the randomized algorithm to explore Ω(k) chains before chain w with constant factor probability. Then the expected link cost of the algorithm is Ω(k 2 ).</p><p>Because all edges (but one) in our construction have length 1, the costs in the Euclidean distance, the link distance, and the energy metrics are equal. Thus, the Ω(c 2 ) lower bound holds for all three metrics. Note that our lower bound does hold generally, not only for Ω(1)-graphs. However, if the graph is not an Ω(1)-graph, there might be a higher (worse) lower bound.</p><p>To conclude this section, we present the main theorem of this paper stating that AFR is asymptotically optimal for unit disk graphs in the Ω(1)-model. Theorem 5.2. Let c be the cost of an optimal path for a given source destination pair on a unit disk graph in the Ω(1)-model. In the worst case the cost for applying AFR to find a route from the source to the destination is Θ(c 2 ). This is asymptotically optimal.</p><p>Proof. Theorem 5.2 is an immediate consequence of Theorem 4.5 and of Theorem 5.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION</head><p>In this paper we proved a lower bound for geometric adhoc routing algorithms on the unit disk graph. Specifically, we showed that in the worst case the cost of any geometric ad-hoc routing algorithm is quadratic in the cost of an optimal path. This result holds for the Euclidean distance, the link distance, and the energy metric. Furthermore, we gave an algorithm (AFR) which matches this lower bound and is therefore optimal.</p><p>It is interesting to see that if we allow the nodes to store O(log n) bits, we can achieve the same results even if the source does not know anything about the coordinates of the destination. The lower bound still holds and the upper bound can be achieved by a simple flooding algorithm. The source floods the network (we again take GG ∩ UDG) with an initial time to live ttl0, i.e. all nodes up to depth ttl 0 are reached. The result of the flood (destination reached or not reached) is then echoed back to the source along the same paths in the reverse direction. We iterate the process with exponentially growing time to live until we reach the destination. All nodes which are reached by flooding with TTL ttl are in a circle with radius ttl around the source. In this circle there are O(ttl 2 ) nodes and hence also O(ttl 2 ) edges each of which is traversed at most 4 times (including the echo process). Therefore, the cost of iteration i (with TTL ttli) is O(ttl 2 i ) and the cost of the whole algorithm is quadratic in the cost of the best path for any of the three considered metrics. We find it intriguing that a few storage bits in each node appear to be as good as the geometric information about the destination.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Greedy routing fails with nodes distributed on the letter "C".</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The faces of a planar graph (the white region is the infinite outer face).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The Face Routing algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: Bounded Face Routing (no success: c d is chosen too small)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>2 .Lemma 4 . 3 .</head><label>243</label><figDesc>If the BFR execution of step 1 succeeded, we are done; otherwise, we double the estimate for the length of the shortest path ( c d := 2 c d ) and go back to step 1. Let p * be a shortest path from node s to node t on the planar graph G. Adaptive Face Routing finds a path from s to t while traversing at most O(c 2 d (p * )) edges. Proof. We denote the first estimate c d on the optimal path length by c d,0 and the consecutive estimates by c d,i := 2 i c d,0 . Furthermore, we define k such that c d,k-1 &lt; c d (p * ) ≤ c d,k . For the cost of BFR[ c d ] we have c ℓ (BFR[ c d ]) ∈ O( c d 2 ) and therefore c ℓ (BFR[ c d ]) ≤ λ • c d 2 for a constant λ (and sufficiently large c d ). The total cost of algorithm AFR can therefore be bounded by</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: The unit disk graph contains an energy optimal path.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Lemma 4 . 5 . 4 . 5 .</head><label>4545</label><figDesc>4 directly leads to Theorem 4.Theorem Let p * τ for τ ∈ {d, ℓ, E} be an optimal path with respect to the corresponding metric on the unit disk graph in the Ω(1)-model. We have∀τ ∈ {d, ℓ, E} : cτ (AFR) ∈ O c 2 τ (p * τ )¡ when applying AFR on GG ∩ UDG in the Ω(1)-model.Proof. The theorem directly follows from Lemma 3.1, Lemma 4.3, and Lemma 4.4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>w</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Lower bound graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>After traversing all edges, go back to p. If we reach t while traversing the boundary of F , we are done.2. p divides st into two line segments where pt is the not yet "traversed" part of st. Update F to be the face which is incident to p and which is intersected by the line segment pt in the immediate region of p. Go back to step 1.</figDesc><table /><note><p>1. Explore the boundary of F by traversing its edges and remember the intersection point p of st with the edges of F which is nearest to t.</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>In the technical part of the paper we simplify the presentation by scaling the coordinates of the system such that R = 1.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p><ref type="bibr" target="#b1">2</ref> Meanwhile, we have achieved similar results without assumption d) in [</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p><ref type="bibr" target="#b14">15</ref>].<ref type="bibr" target="#b2">3</ref> Is it a coincidence that AFR also reflects our first names?</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>The constant between the lower and the upper bound depends on the cost model, but can generally become quite large.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>For the energy metric it is usually assumed that a node can send a message simultaneously to different neighbors using only the energy corresponding to the farthest of those neighbors. We neglect this because it does not change our results.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>More generally, all metrics whose edge weight functions are polynomial in the Euclidean distance weight are equal up to a constant factor on the unit disk graph in the Ω(1)-model. This formulation would include hybrid models as well as energy metrics with exponents other than 2.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_6"><p>It is possible to explore face F k only once as well but for our asymptotic analysis, we ignore this optimization.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The work presented in this paper was supported (in part) by the National Competence Center in Research on Mobile Information and Communication Systems (NCCR-MICS), a center supported by the Swiss National Science Foundation under grant number 5005-67322.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX AFR Implementation</head><p>This appendix contains a detailed distributed implementation of the AFR algorithm in pseudocode notation. On each network node an instance of the algorithm runs independently. Basically each instance waits to react to messages arriving on the network. The message structure is defined as follows: We assume that a number of primitive operations and structures are offered by an underlying software layer for use in our algorithm. In particular, we employ the data structures Point and Edge representing network node locations or intersection points and edges between network nodes, respectively. We denote by thisPoint the position of the network node on which the considered instance of the algorithm is running. Additionally, we define LineSegment(Point a, Point b) to describe the line segment between the two points a and b. We also define the value set types State, containing the three values FACE, BOUNDEDFACE, and FORWARD, and IterationState, consisting of the values NORMAL, FAILED, and DISCONNECTED.</p><p>State contains values describing the state of the traveling message in the course of a BFR iteration of the algorithm. Whenever the message is in the FACE state, the face traversal phase of the Face Routing algorithm is being performed. After possibly "hitting" the ellipse, the message changes to the BOUNDEDFACE state. Whenever the message simply should be forwarded to m.pNext, i.e. having fully explored a face or after "hitting" the ellipse for the second time, the message is in FORWARD state.</p><p>IterationState consists of values denoting the overall state of a BFR iteration. If the source receives a return message with iterationState == FAILED, the next iteration of AFR with doubled cDTilde should be started. DISCONNECTED informs the source that the network is disconnected in such a way that the destination is not reachable. In non-error cases the iteration state is NORMAL.</p><p>In addition to the above structures we define the following primitive operations employed by the algorithm implementation: Note that all of these operations run locally on each network node and only use information collected from directly neighboring nodes. Also observe that a node will forward the message to itself exactly once if an intermediate destination (pStart or pNext) lies on the edge to be traversed next and the face traversal direction has to be changed. Finally, note that an error message will return to the source without changing its iterationState, since there always exists a path back to the source within the currently considered ellipse. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Online routing in triangulations</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Morin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th International Symposium on Algorithms and Computation (ISAAC), volume 1741 of Springer LNCS</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="113" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Online routing in convex subdivisions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Morin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Brodnik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Carlsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fleischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Munro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lopez-Ortiz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Algorithms and Computation (ISAAC)</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="47" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Routing with guaranteed delivery in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Morin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Urrutia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Discrete Algorithms and Methods for Mobility (DIALM&apos;99)</title>
		<meeting>of Discrete Algorithms and Methods for Mobility (DIALM&apos;99)</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="48" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A performance comparison of multi-hop wireless ad hoc network routing protocols</title>
		<author>
			<persName><forename type="first">J</forename><surname>Broch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jetcheva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Mobile Computing and Networking</title>
		<imprint>
			<biblScope unit="page" from="85" to="97" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Internal node and shortcut based routing with guaranteed delivery in wireless networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Datta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. on Distributed Computing and Systems Workshops; Cluster Computing</title>
		<meeting>IEEE Int. Conf. on Distributed Computing and Systems Workshops; Cluster Computing</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="461" to="466" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Delaunay graphs are almost as good as complete graphs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Supowit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete &amp; Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="399" to="407" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Routing and addressing problems in large metropolitan-scale internetworks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Finn</surname></persName>
		</author>
		<idno>ISI/RR-87-180</idno>
		<imprint>
			<date type="published" when="1987-03">March 1987</date>
			<publisher>USC/ISI</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A new statistical approach to geographic variation analysis</title>
		<author>
			<persName><forename type="first">K</forename><surname>Gabriel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sokal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Systematic Zoology</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="259" to="278" />
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Position based routing algorithms for ad hoc networks: a taxonomy</title>
		<author>
			<persName><forename type="first">S</forename><surname>Giordano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Blazevic</surname></persName>
		</author>
		<ptr target="http://www.site.uottawa.ca/˜ivan/routing-survey.pdf" />
		<imprint>
			<date type="published" when="2001-07">July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Location systems for ubiquitous computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="57" to="66" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Transmission range control in multihop packet radio networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="38" to="44" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Gps-based addressing and routing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Imielinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Navas</surname></persName>
		</author>
		<idno>RFC 2009</idno>
		<imprint>
			<date type="published" when="1996-11">November 1996</date>
		</imprint>
		<respStmt>
			<orgName>Computer Science, Rutgers University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Geocasting in mobile ad hoc networks: Location-based multicast algorithms</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vaidya</surname></persName>
		</author>
		<idno>TR-98-018</idno>
		<imprint>
			<date type="published" when="1998-09">September 1998</date>
		</imprint>
		<respStmt>
			<orgName>Texas A&amp;M University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Compass routing on geometric networks</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kranakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Urrutia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Canadian Conference on Computational Geometry</title>
		<meeting>11th Canadian Conference on Computational Geometry<address><addrLine>Vancouver</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">August 1999</date>
			<biblScope unit="page" from="51" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Geometric ad-hoc routing for unit disk graphs and general cost models</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zollinger</surname></persName>
		</author>
		<idno>373</idno>
		<ptr target="http://www.distcomp.ethz.ch/publications/tr373.ps" />
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
		<respStmt>
			<orgName>ETH Zurich, Department of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A scalable location service for geographic ad-hoc routing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jannotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">De</forename><surname>Couto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiCom &apos;00</title>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
			<biblScope unit="page" from="120" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Distributed construction of planar spanner and routing for ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">X.-Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Calinescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-J</forename><surname>Wan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A survey on position-based routing in mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mauve</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Widmer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hartenstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network Magazine</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="30" to="39" />
			<date type="published" when="2001-11">November 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Geocast -geographic addressing and routing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Navas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Imielinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mobile Computing and Networking</title>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="66" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A survey of routing techniques for mobile communications networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ramanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Steenstrup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="89" to="104" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A review of current routing protocols for ad-hoc mobile wireless networks</title>
		<author>
			<persName><forename type="first">E</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Toh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Personal Communications</title>
		<imprint>
			<date type="published" when="1999-04">April 1999</date>
			<biblScope unit="page" from="46" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Dynamic fine-grained localization in ad-hoc networks of sensors</title>
		<author>
			<persName><forename type="first">A</forename><surname>Savvides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-C</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MOBICOM &apos;01</title>
		<imprint>
			<date type="published" when="2001-07">July 2001</date>
			<biblScope unit="page" from="166" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Optimal transmission ranges for randomly distributed packet radio terminals</title>
		<author>
			<persName><forename type="first">H</forename><surname>Takagi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kleinrock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="246" to="257" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The relative neighborhood graph of a finite planar set</title>
		<author>
			<persName><forename type="first">G</forename><surname>Toussaint</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="261" to="268" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Routing with guaranteed delivery in geometric and wireless networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Urrutia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Wireless Networks and Mobile Computing</title>
		<editor>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</editor>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="393" to="406" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
