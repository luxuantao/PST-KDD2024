<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Virtual Compass: Relative Positioning to Sense Mobile Social Interactions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Nilanjan</forename><surname>Banerjee</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Arkansas</orgName>
								<address>
									<settlement>Fayetteville</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sharad</forename><surname>Agarwal</surname></persName>
							<email>sagarwal@microsoft.com</email>
							<affiliation key="aff1">
								<orgName type="department">Microsoft Research Redmond</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Paramvir</forename><surname>Bahl</surname></persName>
							<email>bahl@microsoft.com</email>
							<affiliation key="aff1">
								<orgName type="department">Microsoft Research Redmond</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ranveer</forename><surname>Chandra</surname></persName>
							<email>ranveer@microsoft.com</email>
							<affiliation key="aff1">
								<orgName type="department">Microsoft Research Redmond</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alec</forename><surname>Wolman</surname></persName>
							<email>alecw@microsoft.com</email>
							<affiliation key="aff1">
								<orgName type="department">Microsoft Research Redmond</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mark</forename><surname>Corner</surname></persName>
							<email>mcorner@cs.umass.edu</email>
							<affiliation key="aff2">
								<orgName type="institution">University of Massachusetts Amherst</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Virtual Compass: Relative Positioning to Sense Mobile Social Interactions</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">9EA9BEA5C92AFD52F1808F7701321763</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>There are endless possibilities for the next generation of mobile social applications that automatically determine your social context. A key element of such applications is ubiquitous and precise sensing of the people you interact with. Existing techniques that rely on deployed infrastructure to determine proximity are limited in availability and accuracy. Virtual Compass is a peer-based relative positioning system that relies solely on the hardware and operating system support available on commodity mobile handhelds. It uses multiple radios to detect nearby mobile devices and places them in a two-dimensional plane. It uses adaptive scanning and out-of-band coordination to explore trade-offs between energy consumption and the latency in detecting movement. We have implemented Virtual Compass on mobile phones and laptops, and we evaluate it using a sample application that senses social interactions between Facebook friends.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Imagine a suite of social applications running on your mobile phone which senses your precise social context, predicts future context, and logs and recalls social interactions. The possibilities for such applications are myriad <ref type="bibr" target="#b0">[1]</ref>, from alerting you about an impending contact with a business associate and reminding you of their personal details, to a game that utilizes the relative physical positioning of its players, or a service that tracks the frequency and tenor of interactions among colleagues and friends.</p><p>These next generation applications will use continual sensing of social context at an extremely fine granularity. Recent examples of mobile social applications include Loopt <ref type="bibr" target="#b1">[2]</ref> which displays the location of a user's friends and Dodgeball <ref type="bibr">[3]</ref> which finds friends of friends within a 10 block radius. Unfortunately, these and other widely deployed technologies that implement localization on mobile handhelds are limited by accuracy, coverage and energy consumption.</p><p>The most widely used localization technology in mobile handsets is GPS, but it rarely works indoors. Furthermore, its accuracy degrades in urban environments, and the energy consumed by GPS devices is a significant deterrent. Cell-tower based localization <ref type="bibr" target="#b2">[4]</ref> is widely available but can provide very poor accuracy without a fingerprint profile, or outside city centers. Wi-Fi localization, when available, provides reasonable accuracy in dense urban environments, but is also much less effective in other areas <ref type="bibr" target="#b3">[5]</ref>.</p><p>People spend the majority of their time indoors. As a result, many of the most common opportunities for social interaction occur in indoor environments such as offices, hotels, malls, restaurants, music and sports venues, and conferences. In these environments, to detect the interaction with, or even the opportunity to interact with someone requires relatively fine-grained location accuracy. Even in environments where indoor Wi-Fi based localization schemes <ref type="bibr" target="#b4">[6]</ref> could provide the needed coverage and accuracy, most of today's environments do not have this infrastructure deployed and the barriers to deployment lead us to believe that this will be the case for some time to come. Techniques that rely on ultrasound or detecting the phase offset of transmitted radio waves <ref type="bibr" target="#b5">[7]</ref> are difficult to implement using the hardware and APIs available on commodity mobile phones.</p><p>We present the design and implementation of Virtual Compass, a peer-based localization system for mobile phones. Virtual Compass does not require any infrastructure support, but instead uses multiple, common radio technologies to create a neighbor graph: a fine grained map of the relative spatial relationships between nearby peers. Virtual Compass allows nearby devices to communicate directly, and provides multi-hop relaying so that the neighbor graph can include others who are not within direct communication range.</p><p>Virtual Compass leverages short-range radio technologies, such as Bluetooth and Wi-Fi, available in today's mobile handhelds. These radios consume a significant amount of energy during scanning, and we consider energy management as a fundamental design pillar. Hence, Virtual Compass includes three techniques to reduce energy consumption: 1) use of adaptive scanning triggered on topology changes to update the neighbor graph; 2) selection of the appropriate radio based on its energy consumption characteristics; and 3) using the wide-area wireless network when available with a cloud-based service to assist with coordination and notification of potential changes to the neighbor graph.</p><p>Mobile social applications are heavily driven by the relative positioning of people, and less by absolute location. Sensing the precise placement of individuals relative to one another yields the social context needed for many useful applications, and the quality of location information produced by Virtual Compass increases as the density of devices increases.</p><p>We have implemented Virtual Compass on Windows based mobile phones and laptops. Through extensive experimentation we evaluate the latency, location accuracy, and energy consumption characteristics of Virtual Compass as a function of system scale. In a typical experiment we found the average error in spatial placement of nine nodes in a 100m 2 area was 1.9 meters. We show significant accuracy gains in simultaneously using multiple radios for distance estimation, and our algorithm for spatial placement. Additionally, we are able to locate a new device within 25 seconds of its arrival. Applying our energy conservation techniques yields four-fold to nine-fold improvements in battery lifetime over a naive scheme that does not use any energy management. We also present the design and evaluation of a sample application built on top of Virtual Compass.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>As a key ingredient for sensing, localization has been the subject of extensive work, both core technologies, and systems that leverage and reason about location. A comprehensive review of localization research is in <ref type="bibr" target="#b6">[8]</ref>. Here, we compare and contrast our work by broadly dividing the corpus of prior work into two categories: infrastructure-based and peer-based, and review the most relevant.</p><p>Infrastructure-based localization techniques can be broadly classified by their core technology: GSM <ref type="bibr" target="#b7">[9,</ref><ref type="bibr" target="#b8">10,</ref><ref type="bibr" target="#b3">5]</ref>, Wi-Fi <ref type="bibr" target="#b9">[11,</ref><ref type="bibr" target="#b10">12,</ref><ref type="bibr" target="#b4">6]</ref>, GPS, ultrasound with RF <ref type="bibr" target="#b11">[13,</ref><ref type="bibr" target="#b12">14]</ref>, Infrared <ref type="bibr" target="#b13">[15]</ref>, RFID <ref type="bibr" target="#b14">[16]</ref>, and UWB <ref type="bibr" target="#b15">[17]</ref>. The most successful techniques have leveraged infrastructure that was put in place for other reasons (GSM and Wi-Fi localization) and it seems likely that peer-based localization will follow a similar trend relying on technologies such as Wi-Fi and Bluetooth. GPS is the only exception, but it is unique in that it only works outdoors. Several industrial startups [3, 2, 18, 19] have cropped up which use localization to support social applications, relying on the infrastructure-based localization support in mobile phones which is typically Wi-Fi-, GSM-or GPS-based. However, such schemes are limited in coverage and accuracy, making it impossible to support the full range of social applications-especially in situations that require finegrained proximity information. For example, Wi-Fi localization requires a dense deployment of access points and accurate profiling (not available in many indoor scenarios), and GSM localization can exhibit poor accuracy without a detailed profile or away from dense urban areas.</p><p>Peer-based localization techniques attempt to either infer the proximity of a pair of devices, or infer the actual distances between multiple devices and place them in a virtual map. Proximity-based placement schemes such as Hummingbird <ref type="bibr" target="#b16">[20]</ref> and NearMe <ref type="bibr" target="#b17">[21]</ref> detect if two devices are within 30 to 100 meters of each other. Beep Beep <ref type="bibr" target="#b19">[22]</ref> achieves high accuracy using sound, but does not spatially place more than two nodes, nor nodes that are out of earshot. BlueHoo <ref type="bibr" target="#b20">[23]</ref> uses Bluetooth discovery to detect friends within Bluetooth range and People-Tones <ref type="bibr" target="#b21">[24]</ref> uses GSM-based relative positioning. Virtual Compass measures the distances between multiple nearby nodes, uses multi-hop communication to expand coverage, and spatially places them relative to each other on a 2D plane. Moreover, our system uses algorithms which balance energy consumption with low-latency and accurate localization. Relate <ref type="bibr" target="#b22">[25]</ref> and DOLPHIN <ref type="bibr" target="#b23">[26]</ref> rely on custom ultrasound hardware which is typically unavailable in commodity devices. RIPS <ref type="bibr" target="#b5">[7]</ref> requires signal processing of received radio waves, which is possible on custom hardware such as MICA2 motes but hard to do with off the shelf mobile phones and standard SDKs. MSP <ref type="bibr" target="#b25">[27]</ref> uses sensor event distribution to locate nodes in a static sensor network. Bulusu <ref type="bibr" target="#b26">[28]</ref>, Sextant <ref type="bibr" target="#b27">[29]</ref> and Calibree <ref type="bibr" target="#b28">[30]</ref> use the location of a subset of nodes (e.g. equipped with GPS units) to derive the locations of a larger set of nodes. LOCALE <ref type="bibr" target="#b30">[31]</ref> also uses GPS equipped nodes to locate other nodes using dead reckoning. Our goal is to design a peer-based localization system that works in the absence of fixed infrastructure or reference points, which can be hard to obtain using GPS in indoor settings.</p><p>Moore et al. <ref type="bibr" target="#b31">[32]</ref>, Spotlight <ref type="bibr" target="#b32">[33]</ref>, and Vivaldi <ref type="bibr" target="#b33">[34]</ref> address the problem of placing nodes relative to each other in a multi-dimensional plane. Moore et al. <ref type="bibr" target="#b31">[32]</ref> and Spotlight <ref type="bibr" target="#b32">[33]</ref> use custom sensors for relative localization while Virtual Compass focuses on commodity cellular phones. While their algorithms can be used in Virtual Compass, we use a simpler Vivaldi <ref type="bibr" target="#b33">[34]</ref> variant in our implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Peer Localization</head><p>The goal of Virtual Compass is to generate a two-dimensional layout of nearby mobile devices. It uses radios that allow peer-to-peer communication, such as Wi-Fi and Bluetooth, to exchange messages directly between devices. This exchange serves two purposes. Each pair of devices that are in communication range uses the received signal strength of these messages to estimate the distance between them. The message itself contains the list of neighbors and their distances, which allows nodes that are further away to map devices that are not in their immediate communication range. Virtual Compass leverages the collective knowledge of distances between peers learned in this way to calculate the 2D layout. Figure <ref type="figure" target="#fig_0">1</ref> shows an example. Mobile node A periodically sends messages to its neighbors B, C, and D. Each of these nodes uses the received signal strength indication (RSSI) of these messages to calculate its distance to A, as described in § 3.1. The nodes exchange these messages on multiple radios to reduce the inherent error of distance estimation via RSSI, as described in § 3.2. They embed these distances in the messages that are exchanged between neighbors so that each node discovers the distances between other nodes. So in this way, C learns of the distance between A and D. Furthermore, nodes such as E that are far away can learn where A, B and D are. Virtual Compass solves the constraints imposed by these distances to create a relative map using the technique in § 3.3. Note that the underlying RSSI-based mechanism detects distance but not direction.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Estimating Distance</head><p>In Virtual Compass, nodes periodically exchange messages on radios with omnidirectional antennas. § 5 describes these messages in detail. We use the RSSI of these messages to estimate the distance between sender and receiver. Even though we rely on RSSI, if techniques such as propagation time become feasible, Virtual Compass can easily use them instead. While translating RSSI to distance has been studied in prior work <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b35">36]</ref>, Virtual Compass enhances that work by incorporating the uncertainty in distance measurements to provide two benefits. First, as Virtual Compass is meant to be used in a broad range of unknown environments, modeling the uncertainty reduces the dependence on the environment in which the measurements were taken. Secondly, and more importantly, the error model provides a basis for composing information from different radios. To translate each RSSI reading to a distance estimate with an error bound, we use empirical models that we built by running several propagation experiments in two indoor office environments at Microsoft Research Redmond, and University of Massachusetts Amherst (details of the experiments can be found in our technical report <ref type="bibr" target="#b36">[37]</ref>). We have evaluated our distance estimation scheme in § 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Using Multiple Radios</head><p>To reduce the error in estimating distance from RSSI, Virtual Compass uses multiple peer-to-peer radios simultaneously. For ease of exposition, we describe how our scheme works for two radios, Wi-Fi and Bluetooth. This approach works for any radio with an RSSI to distance conversion, or when using more than two radios.</p><p>Consider Figure <ref type="figure" target="#fig_1">2</ref> where a node receives a message from the sender over Bluetooth and one over Wi-Fi and attempts to calculate the distance between the two nodes. Let RSSI 1 be the RSSI of the message received over Bluetooth, and RSSI 2 be the RSSI of the message received over Wi-Fi. We obtain a distance estimate for each, x 1 and x 2 (see <ref type="bibr" target="#b36">[37]</ref> for details). We also obtain the uncertainties (error), u 1 and u 2 , each of which is the distance between the 10 th and 90 th percentiles for the measured model. The goal of the composition is to combine the two sources of information in order to reduce uncertainty in measurement. The mid-point of the two RSSI distance estimates is P = (x 1 + x 2 )/2. We apply a displacement from P for each measurement, which are F 1 = (P -x 1 ) * u 1 /2 and F 2 = (P -x 2 ) * u 2 /2. Intuitively, the sum of the forces should push the node in the direction of a source which has a smaller uncertainty in measurement. The final estimate of the distance is given by the midpoint displaced by a normalized sum of displacements D = P + 2(F 1 + F 2 )/(u 1 + u 2 ). The normalization ensures that the estimate of distance always falls within the range of estimates given by the two RSSI readings. In the rare case where the uncertainties from the two readings do not intersect, we simply use P as the final distance. We have evaluated our multi-radio composition scheme in § 6.</p><p>In this way, each pair of nodes that can directly communicate with each other estimate the distances between them, while reducing error. These distances are embedded in the messages that are exchanged between them so that ultimately, each node knows the distances between any two nodes that can communicate in the vicinity. The next step in Virtual Compass is to calculate a 2D spatial placement of these nodes that satisfies these distance constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Spatial Placement</head><p>Consider a 2D Euclidean space where each node's position is determined by its (x, y) coordinates. Each distance estimate r ij between nodes i and j forms a constraint:</p><formula xml:id="formula_0">(x i -x j ) 2 + (y i -y j ) 2 = r 2</formula><p>ij . An optimal algorithm would simultaneously solve this set of non-linear (quadratic) constraints to calculate coordinates for peer nodes. However, this is known to be NP-Hard <ref type="bibr" target="#b37">[38]</ref>. Furthermore, since the distances between nodes are measured independently and are subject to error, it is possible in some cases that there is no solution that satisfies all the distance constraints.</p><p>We instead use the Vivaldi <ref type="bibr" target="#b33">[34]</ref> method to calculate node positions. Vivaldi uses estimates of distances between nodes to calculate a force vector, and then iteratively improves each node's coordinates by moving it along the resulting force. Vivaldi has been shown to produce good results with little computation overhead. However, the choice of starting all nodes at the origin can sometimes lead to local minima or a large number of iterations to converge. Hence, to produce a relative map of all nodes, we first calculate a very approximate but quick placement in phase 1, and then feed that to a simple Vivaldi implementation in phase 2 for iterative refinement.</p><p>Phase 1 calculates an approximate set of coordinates that will help Vivaldi converge faster and to more accurate results in phase 2. Consider the example where node A is calculating a placement for itself with respect to 2 other nodes B and C and begins by placing itself at the origin. It finds the peer, B, that is the smallest distance (r 1 ) away, and places it at (0, r 1 ). Next, we choose node C that is constrained by both A and B. The algorithm Virtual Compass uses to place C is defined in Algorithm 1. We run this algorithm multiple times with different constraint orderings and we use an average of the coordinates from each Algorithm 1. Spatial placement for calculating rough 2D coordinates during Phase 1 for a node</p><formula xml:id="formula_1">Input: Set of constraints C = {C1, ..., Cn}, Ci = (x -xi) 2 + (y -yi) 2 = r 2 i loop</formula><p>For every pair of constraints (Ci, Cj ), find intersection points (x1, y1) and (x2, y2)</p><formula xml:id="formula_2">end loop P = {{(x 1 1 , y 1 1 ), (x 1 2 , y 1 2 )}, ..., {(x k 1 , y k 1 ), (x k 2 , y k 2 )}} (set of intersection coordinates). Initialize solution set S = {(x 1 1 , y 1 1 )} loop For each element E = {(x j 1 , y j 1 ), (x j 2 , y j 2 )} ∈ P S = S ∪ arg min{ (x j ,y j )∈S (x j 1 -xj ) 2 + (y j 1 -yj ) 2 , (x j ,y j )∈S (x j 2 -xj ) 2 + (y j 2 -yj ) 2 } end loop return Node coordinate: ((1/|S|) • x i ∈S xi, (1/|S|) • y i ∈S yi)</formula><p>iteration as the starting placement for phase 2. Experimentally, we determined that 10 iterations produces a sufficiently accurate initial placement with little impact on run time. While we could have used other algorithms, the goal of this phase is to produce a starting point for Vivaldi that is more reasonable than the origin for all nodes. Phase 2 uses the coordinates from phase 1 as the starting placement and uses a simple implementation of Vivaldi <ref type="bibr" target="#b33">[34]</ref> to iteratively refine the coordinates to reduce the error between the placement and the measured pairwise distances. In each iteration, Vivaldi calculates forces that are applied between nodes -each force represents the difference between the measured distance between a pair of nodes and their distance in the virtual coordinate space. The resulting force on each node then determines the direction and amount of movement for the node in the virtual coordinate space. This process is repeated in each iteration. We have experimentally determined that 100 iterations produces accurate results with extremely marginal benefit from additional iterations. In § 6, we present the latency overhead of this computation, and it is dwarfed by the network communication time.</p><p>As an example, consider node A at (x 1 , y 1 ) with a neighbor B whose coordinates are (x 2 , y 2 ). The measured distance between them is r 12 . The magnitude of the force F between them as applied on</p><formula xml:id="formula_3">A is r 12 -(x 1 -x 2 ) 2 + (y 1 -y 2 ) 2</formula><p>and its direction is given by the unit vector ((x 1 -x 2 ), (y 1 -y 2 )). There may be other forces applied on A (due to measured distances to other neighbors), and we calculate the resulting single force <ref type="bibr" target="#b33">[34]</ref>. The coordinates for A are then changed in this iteration to (x 1 + F x * t, y 1 + F y * t), where F x and F y are the components of F in the x and y direction and t is a constant. For Virtual Compass we experimented with different values of t and found t = 0.1 works best in our environment. Applying a force at each node that is proportional to the error minimizes the mean-square error and converges to a set of coordinates which satisfy the distance constraints (see <ref type="bibr" target="#b33">[34]</ref> for proof).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Energy-Efficient Peer Localization</head><p>As with any system targeted at mobile devices, energy consumption is a critical concern. If the lifetime of the device is severely impacted, users will eschew applications that rely on our system. Virtual Compass depends on frequent communication between peers to provide timely updates to changes in the social graph. As has been observed in prior work <ref type="bibr" target="#b38">[39]</ref>, communication consumes a significant portion of a mobile phone's energy budget. To place our work in a common frame of reference, we include Table <ref type="table" target="#tab_0">1</ref> which shows the energy consumption of our implementation platform. With no communication, a typical phone will last for 203 hours on a single battery charge. However, if it continuously scans for other peer devices, the battery is completely exhausted within 10 hours when using Bluetooth, and under 4 hours using Wi-Fi.</p><p>To mitigate this, Virtual Compass must balance the energy devoted to sensing and maintaining the social graph against the accuracy of the system. Scans that are too frequent will drain energy, and scans that are too infrequent will increase the latency for peer localization -device arrival or departure will go undetected until the next scan interval. Virtual Compass uses three techniques to reduce the number of scans without significantly degrading localization accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Adaptive Bluetooth Scanning</head><p>We observe that repeated scans are unnecessary in a static environment, such as when there are no other devices around, or when none are moving. Virtual Compass uses this observation to adapt the scan interval. Every device keeps track of changes in its neighbor graph and accordingly adjusts its scan interval -aggressively scanning the environment when the neighbor graph changes, and increasing the scan interval otherwise. To track the change in its neighbor graph, a device calculates the number of one hop, N 1 (2 paths in Figure <ref type="figure" target="#fig_2">3</ref>), and two hop paths, N 2 (1 path in Figure <ref type="figure" target="#fig_2">3</ref>), that have changed between successive scans. We compute a change metric as p * N 1 + (1 -p) * N 2 , where p is a constant. When this metric is less than a threshold x, we increase the inter-scan interval by 10 seconds. If the metric is above a threshold y, we halve the scan interval. We do not scan more frequently than once every 10 seconds and we do not allow the scan interval to increase beyond 10 minutes. We use values of 0.9, 1 and 1 for p, x and y respectively. While these values are arbitrary and could be tied to an application, they work well in our experiments. The results of a simple experiment showing the behavior of this technique are shown in Figure <ref type="figure" target="#fig_3">4</ref>. The scan interval additively increases until new devices are introduced or removed in the neighbor graph, at which point the scan interval is halved. This method can be easily extended to other metrics. For instance, an application may care about sensing small changes in the distance between peers or may want to weight different peers based on their significance in the social network.</p><p>Between two successive scans, which can be as long as 10 minutes, we leave the Bluetooth radio on since the idle energy consumption of Bluetooth is small (see Table <ref type="table" target="#tab_0">1</ref>). Moreover, with the Bluetooth radio on, it can respond to its peer's scans and the corresponding neighborhood graph is always complete. In contrast, the idle power consumption for Wi-Fi is comparable to scanning. Therefore, the radio needs to be turned off between scans. However, this implies that adaptive scanning for Wi-Fi is infeasible-if different peers wake up at different times, their scans will result in incomplete neighbor graphs. Therefore, for Wi-Fi we periodically (every 1 minute at wall clock time) turn on the radio and put it  in scan mode. Mobile phones synchronize their wall clock time with the cellular infrastructure. Even if disconnected from the cellular network, clock drift in the order of one or two seconds is not a significant issue since Wi-Fi scanning takes several seconds (see § 6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Cloud Coordination</head><p>There are significant periods of time when a device is completely alone. Figure <ref type="figure">5</ref> shows how often Bluetooth scans by 150 participants <ref type="bibr" target="#b39">[40]</ref> found other devices. On average, each mobile phone found no other Bluetooth devices 41% of the time. While it is possible that other devices were present but did not have Bluetooth discovery enabled, or were discoverable over the longer range of Wi-Fi, this finding fuels our belief that there are periods of time when a device is completely alone. Hence we can save energy on devices during these periods by keeping Wi-Fi off and not initiating Bluetooth scans until a new device arrives. However, the primary challenge is to detect device arrival without using Bluetooth and Wi-Fi. We observe that many mobile devices are almost always connected to the Internet via a cellular data connection such as 3G. Hence, a simple service running on the Internet can inform the device when there are other devices in the vicinity.</p><p>In Virtual Compass, each mobile device uploads its approximate geographic location to this service. This location is calculated using low-energy, coarse grained GSM localization. The list of GSM cellular towers that are in the vicinity and the RSSI values are used to compute a rough geographic location. Each time its location changes, the device updates the service. When the device believes it is alone (no neighbors in Bluetooth and Wi-Fi scans), it will periodically ask this Web service whether there are any other devices in the vicinity running Virtual Compass. If there are no peers around it, the device will keep its Wi-Fi radio off and not scan on Bluetooth. Otherwise, it adjusts its scan interval and Wi-Fi wakeup interval as described previously. Since periodic polling on a radio such as 3G consumes a considerable amount of energy, Virtual Compass uses a pushbased technique to notify the device when other nodes are around. Inspired by Cell2Notify <ref type="bibr" target="#b40">[41]</ref>, a Virtual Compass device uploads a Request-for-Notification (RFN) bit to the Web service when it thinks it is alone. For each device with the RFN bit set, the Web service keeps track of other device arrivals in the vicinity of the sleeping device and will notify it, which then resumes Wi-Fi and Bluetooth scanning. We describe our implementation of this notification in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Leveraging Application Behavior</head><p>In addition to exploiting user mobility to reduce energy consumption, a cloud service allows us to also exploit application behavior. Some applications that use peer localization may not need the neighbor graph maintained all the time, even though the applications are still running. For example, an application that shows the user a map of nearby friends and how to get to them does not need the neighbor graph if the user is not interacting with the phone. Scanning in this scenario wastes energy. However, not scanning, and hence not participating in multi-hop discovery, could degrade localization accuracy for other devices where their users are actively interacting with the phone. We suspect that there are significant periods of time when every phone in the vicinity is simultaneously not in use. To detect this scenario, Virtual Compass detects when the back-light for the screen on a mobile device turns off. We then assume that the user is not using the application and upload this bit of information to the Web service along with the device's rough geographic location. When Virtual Compass polls the Web service to find out how many devices are in the vicinity or uses the notification service, it also learns how many of them have the back-light on. If no devices are actively being used, then it keeps the Wi-Fi radio off and does not scan on Bluetooth. If any one device in the vicinity has the back-light on, then it resumes normal discovery behavior. Unfortunately, if an application uses peer localization to log social interaction in the background, instead of displaying an interactive map, then this technique cannot be used. We have implemented Virtual Compass on the Windows Mobile 6.0 operating system that runs on a variety of mobile phones. While we have also ported Virtual Compass to the Windows Vista operating system, we focus on the mobile phone version in this section. Virtual Compass runs entirely at the application layer, and does not require modifications to the Bluetooth and Wi-Fi drivers, nor to the network stack. Our software architecture, depicted in Figure <ref type="figure">6</ref>, consists of four main components: native radio modules, cloud services, peer localization service and applications.</p><p>Native radio modules: Virtual Compass interacts with many radios (GPS, Bluetooth, Wi-Fi, and GSM) using native APIs exposed by the Windows Mobile OS. To access the Wi-Fi radio when the device is in suspension state S3, we use a PPN UNATTENDED state. This consumes slightly more energy than S3, but allows us to access the Wi-Fi radio.</p><p>For device discovery and propagating the neighbor graph, as described in § 3, Virtual Compass requires every device to periodically broadcast its ID and the IDs of and distance to each of its peers. The application layer provides the ID to be used in Virtual Compass. To broadcast this information without the additional latency of explicitly forming a network, we use the Beacon-Stuffing approach <ref type="bibr" target="#b41">[42]</ref> for Wi-Fi, and a similar technique for Bluetooth. Our beacon formats for Bluetooth and Wi-Fi are in Figure <ref type="figure">7</ref>. For Bluetooth beacons we modify the 2048 bytes available for the device name, while for Wi-Fi beacons we embed this information in the 32 byte SSID. The small size of the Wi-Fi SSID limits the size of the neighbor graph that can be encoded in the beacon. To solve this problem, we could use two techniques proposed by Beacon-Stuffing <ref type="bibr" target="#b41">[42]</ref>: use 256 byte IE blobs, or fragment large strings across beacons that are then reassembled at the receiver. We have not implemented either solution, and in our current implementation, we limit the neighbor graph embedded in beacons to immediate one-hop peers, thus effectively limiting peer localization to a maximum of two-hops.</p><p>One problem with using the Bluetooth radio for peer localization is that it may interfere with Bluetooth headset usage during phone conversations. A scan in the middle of a conversation will disrupt the phone call. To avoid this problem, we trap the incoming phone call and phone call talking events from the Windows Mobile OS and stop Bluetooth scanning if either event is active. We resume scanning once these events have ended.</p><p>Cloud services: Virtual Compass uses the SQL Server Database Service (SSDS) <ref type="bibr" target="#b42">[43]</ref> over the Internet for coordinating Wi-Fi radio wake-ups and Bluetooth scans, as described in § 4.2. SSDS has the following components: (a) Authority: this is the top-most level of containment hierarchy under which all the data for a particular SSDS login is stored. (b) Container: an authority is a collection of containers. (c) Entities: each entity inside a container stores any number of user-defined properties and values. Virtual Compass uses a single authority, under which there is a separate container for each geographic region, under which there is a separate entity for each device. The peer localization service moves the device's entity to the appropriate container based on cellular tower IDs and RSSIs from the GSM radio and updates a bit indicating whether the screen back-light is on. Virtual Compass can use a push (notification-based) and polling scheme to download information on neighbor positions. For polling it periodically downloads the contents of the containers to determine if it is alone.</p><p>When using the notification scheme, each Virtual Compass device uploads its current position based on cell tower IDs and RSSIs. When a device does not find any neighbors on a Bluetooth and Wi-Fi scan it uploads a RFN (Request for Notification) bit and the device's phone number to the cloud and stops scanning on Bluetooth and switches off Wi-Fi. A notification service runs on an Internet server which constantly downloads the location of all Virtual Compass devices using SSDS. It calculates whether any Virtual Compass device is near a node with its RFN bit set. If so, it uses a Skype client on the server to make a phone call to the device using a special caller ID number. The device traps the incoming phone call event, and if it recognizes the special caller ID number, it ends the call and resumes scanning on Bluetooth and Wi-Fi.</p><p>Peer localization service: The location service runs the distance estimation and spatial placement algorithms from § 3 to produce a 2D map of where peer devices are. The distance estimation model that we use to convert a RSSI measurement to distance and uncertainty is described in our technical report <ref type="bibr" target="#b36">[37]</ref>. We used extensive measurements in two office environments at Microsoft Research Redmond, and University of Massachusetts Amherst to derive these models. The service also manages the Wi-Fi radio sleep and scan schedule, Bluetooth scanning interval and interfaces with the cloud services to reduce energy consumption as described in § 4. It feeds the entire map to the application layer.</p><p>Applications: We have implemented the FriendMeter application using Virtual Compass. FriendMeter uses Virtual Compass to sense the distances between the user and her friends who are in the vicinity. Several applications such as gaming and file transfer amongst friends can be considered as instances of FriendMeter. FriendMeter is designed with two purposes in mind -a short-term use and a long-term use for the sensed information. In the short-term, the results from Virtual Compass are used to show the user a map that can be used to find and meet her friends. In the long-term, the time-varying distances measured between the user and her friends can be used to infer social interactions. These inferences can be used to cluster friends in social applications, such as Facebook, based on proximity. Each friend can be metered by the amount of physical social interaction. Our implementation shows the user a map and records a history of the map, but currently does not alter their friends list.</p><p>FriendMeter uses the Facebook API to connect to Facebook, authenticate the user and get her list of friends. It uses a unique numerical Facebook login id-provided by Facebook as the mobile device's ID. This facilitates identifying the user on each peer device, but as we note in § 7, there are some privacy implications. FriendMeter displays a map of all the user's friends in the vicinity. It also displays the photographs of the nearby users and their interests, hobbies, and other information. Screen shots from the application are in Figure <ref type="figure">8</ref>. Even though the underlying peer localization service provides a map with many devices, FriendMeter filters out those that are not in the user's friend list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">System Evaluation</head><p>We evaluate the performance of Virtual Compass by focusing on the following three key questions: (1) How accurate are Virtual Compass's distance estimates and spatial placement? (2) How much energy does Virtual Compass consume? (3) How quickly does Virtual Compass adapt to changes (e.g., when a new device arrives, or one departs)? In answering these questions, we also examine the impact of scale: how does the number of devices affect Virtual Compass? Experimental Setup: We evaluate Virtual Compass on the Windows Mobile and Windows Vista operating systems. Our testbed consists of ten devices -an HTC TyTNII mobile phone, an HTC Touch Cruise mobile phone, four laptops, and four desktops. All ten devices have IEEE 802.11b and Bluetooth interfaces, and are connected to the Internet via 3G cellular on the phones or Ethernet on the laptops and desktops. In most experiments, we deploy the devices in a 100m 2 indoor office area, but we also evaluate larger areas of 900m 2 and 2500m 2 where indicated. Many experiments involve statically-placed nodes, but in those evaluating latency, we move a device into or out of the deployment area. When evaluating energy consumption, we measure the lifetime of the fully charged mobile phones while running Virtual Compass and leaving the GSM radio on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Accuracy of Localization:</head><p>The primary goal of Virtual Compass is to accurately localize nearby peers. We evaluate this accuracy in two ways - <ref type="bibr" target="#b0">(1)</ref> error in pairwise distance between nodes -what is the difference between the physical distance and the distance that Virtual Compass predicts? (2) spatial placement: for a number of nodes, how different is the 2D placement that Virtual Compass presents from their actual placement?</p><p>Pairwise distance accuracy: Figure <ref type="figure">9</ref> shows how well Virtual Compass estimates the distance between two nodes as their physical distance is varied. Virtual Compass comes very close to perfectly estimating distance. When Virtual Compass does deviate from the actual distance, it does so by a small amount as the  error bars indicate. Figure <ref type="figure" target="#fig_0">10</ref> shows the CDF of this error over a large number of placements. The median error is only 0.9 meters, and over 90% of the time, the error is under 2.7 meters. To examine why Virtual Compass is so accurate in pairwise distance estimation, we present Table <ref type="table" target="#tab_1">2</ref>, which shows the advantage of our multi-radio approach. If Virtual Compass were to use only Bluetooth radios, the average error would be quite high at 3.40 meters, or 3.91 with just Wi-Fi radios. However, by simultaneously using both Bluetooth and Wi-Fi, Virtual Compass reduces the average error to 1.41 meters. Spatial placement accuracy: We evaluate spatial placement in Figure <ref type="figure" target="#fig_0">11</ref>. Virtual Compass's 2D spatial placement (dark dots) almost exactly matches the actual placement (light dots) -the average distance between a light dot and the Fig. <ref type="figure" target="#fig_0">11</ref>. This figure shows a map of 9 devices using light dots. We overlay the spatial placement map from Virtual Compass on this figure using dark dots. The spatial placement was generated at the node on the desk between "3" and "4". corresponding dark dot is 1.9 meters. Our accuracy is dependent on two factors: our multi-radio RSSI-based distance estimation, and our 2D spatial placement algorithm. To tease apart these two factors, we applied our 2D spatial placement to the actual pairwise distances between these nodes (as opposed to the RSSIbased estimates) and the average error is 0.6 meters. The accuracy of our 2D placement algorithm also depends on the density of devices -the more devices we have, the more constraints we have that allow the placement to converge faster. In Figure <ref type="figure" target="#fig_1">12</ref>, we repeat our placement experiments while varying the number of devices, and the placement of these devices. As the number of devices is lowered, the error increases because every node is constrained by fewer neighbors. With just 2 nodes (with one placed at the origin), the average error is purely a reflection of the RSSI-based distance estimation error.</p><p>Energy Consumption: While accuracy in localization is the primary goal of Virtual Compass, energy consumption is a critical concern for mobile devices. We now evaluate the benefits of the energy saving techniques from § 4. Figure <ref type="figure" target="#fig_2">13</ref> shows the lifetime as the number of nearby peers is varied. The "no energy mgmnt" bars, the lifetime of a mobile phone with Wi-Fi and Bluetooth always on and scanning every 1 minute and 10 seconds respectively is dismal, at 4.8 hours with no peers and 3.8 hours with 9 peers. The slight drop in lifetime with the number of peers is because Virtual Compass has to connect over Bluetooth to every peer to get the RSSI value (this is a limitation of the Windows Mobile Bluetooth API). However, when we turn Wi-Fi on and off every 1 minute and adaptively change the Bluetooth scan interval, we see significant energy savings in the "adaptive scan" bars, from 18.0 hours with no peers to 14.8 hours with 9 peers. Even though the devices do not move, there is a drop in lifetime with the number of peers because of the Bluetooth connect issue and because with more devices, variations in the environment can temporarily appear as slight neighbor graph changes. When we include the cloud coordination scheme in the "adaptive scan + cloud" bars, the lifetime actually reduces. Periodically polling the Web service when alone (0 peers) is a significant drain on the battery. Even when not alone, our devices keep uploading their location to the Web service because of variations in the RSSI from GSM cell towers and re-association with a different GSM cell tower, despite the nodes being static in this experiment. GSM localization that is more robust to such variations should help.</p><p>In Figure <ref type="figure" target="#fig_3">14</ref>, we show the advantage of using a notification system instead of polling. When there are no other devices around, the savings are tremendouslifetime increases from 15.7 hours to 35 hours. Since there are no devices around, the device keeps Wi-Fi off and does not scan over Bluetooth, and does not need to poll the service over 3G. We now evaluate the improvement offered by the back-light optimization from § 4.3. The previous experiments do not use this optimization because we lack accurate usage models of our application. Hence in Table <ref type="table" target="#tab_2">3</ref>, we present an evaluation of this optimization based on emulation of the Reality Mining data <ref type="bibr" target="#b43">[44]</ref>. The data covers a large number of users across many days and indicates when their phones are idle versus in use. We pick 10 users at random and focus on their behavior for a random day. For periods of time when all the devices are idle, we follow our technique from § 4.3 and keep Wi-Fi off and do not scan on Bluetooth. We repeat these emulations multiple times by picking 3 different days at random, and 3 different sets of 10 users, and present average numbers in Table <ref type="table" target="#tab_2">3</ref>. While this emulation may not perfectly match real usage, these results show that this optimization has the potential to increase lifetime by 30%.</p><p>Finally, we present Table <ref type="table" target="#tab_3">4</ref> where we evaluate the energy consumption of Virtual Compass as we vary the density of deployment. The lifetime does not significantly vary with density. There is a slight increase in lifetime as density decreases, and this is because there are fewer peers that are directly reachable over Bluetooth, and hence fewer connections need to be setup to measure RSSI. Latency: Latency is another important metric -Virtual Compass should sense changes in the neighbor graph fast enough for applications that want to detect social interactions, and for those that provide maps in real-time to users. Figure <ref type="figure" target="#fig_8">15</ref> shows the overhead of different components of Virtual Compass. Bluetooth scanning is particularly slow, and we discuss this in more detail in § 7. Bluetooth pairing is needed to work around a limitation of the Bluetooth interface in Windows Mobile. The Windows Vista Bluetooth stack does pass up   RSSI values from a Bluetooth scan without having to pair and connect, and so we are confident that this problem is not inherent to Bluetooth.</p><p>The time taken to detect the arrival of a new peer depends not only on the latency of Wi-Fi and Bluetooth scans, but also on how reliable scanning is. In Table <ref type="table" target="#tab_4">5</ref>, we present the probability of finding a peer device with a Bluetooth scan, Wi-Fi scan and both. Bluetooth is particularly poor because when two adjacent devices are scanning (and hence frequency-hopping) simultaneously, the probability of both being on the same channel and hence discovering each other is very low. This problem is specific to Bluetooth, as the stability of Wi-Fi is much higher. Since Virtual Compass uses both radios, it can detect the presence of a peer device more reliably than either alone.</p><p>We now evaluate how quickly Virtual Compass detects peer movement. In particular, we consider: (1) time elapsed between a peer entering the vicinity of a device and the peer showing up on the map, and (2) time elapsed between a peer leaving the vicinity and it disappearing from the map. We evaluate both latencies in Figure <ref type="figure" target="#fig_0">16</ref>. The latency of detecting a new peer is dominated by the frequency of scanning -in steady state, Bluetooth scanning occurs once every 10 minutes, but Wi-Fi occurs every minute. Since the graph shows the average across many runs, the average latency for detecting a new peer is 30 seconds, because of Wi-Fi scanning. Peer departure can be a higher latency operation as the number of peers increases because all peers have to remove the exiting peer from their neighbor graph, else it will still appear in the map due to multi-hop discovery. Hence Bluetooth's slower scan time dominates peer departure latency.</p><p>Reducing the scan interval of Wi-Fi and Bluetooth can reduce latency, but it comes at the cost of energy. Figure <ref type="figure" target="#fig_9">17</ref> explores this trade-off. The second set of bars at 11.36 hours corresponds to the 5 peers bars from Figure <ref type="figure" target="#fig_0">16</ref>. We can double the lifetime to 23.28 hours at the cost of doubling latency. However, halving the lifetime to 6.35 hours does not significantly reduce latency. Hence we believe that our choice of the Wi-Fi wake-up and scan interval of 1 minute and the Bluetooth limits of 10 seconds to 10 minutes offer the best trade-off.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Discussion</head><p>We now discuss performance optimizations for Virtual Compass.</p><p>Improving accuracy: While Virtual Compass uses a single RSSI-distance profile, we could use different profiles for different environments, such as outdoors versus indoors. This would require a mobile device to determine if it is outdoors, and then apply the corresponding RSSI-distance profile. We are exploring two ways to solve the problem of detecting that the user is outdoors. First, if a GPS signal is available, then we can assume the user is outdoors. Second, we can use user feedback.</p><p>Reducing Latency: Virtual Compass's latency in detecting node movement is significantly impacted by Bluetooth scanning. Two devices that simultaneously scan over Bluetooth can miss each other because each may use a different frequency hopping sequence such that the two devices never end up on the same channel at the same time. To alleviate this problem, we are investigating certain Bluetooth 1.2 chipsets that allows enhanced inquiry which is supposed to make discovery reliable and fast (less than 5 seconds).</p><p>Reducing energy consumption: Not all mobile devices have similar energy budgets. A laptop has a larger battery than a mobile phone. Furthermore, some environments may have desktops with wireless interfaces. We posit that it is beneficial for mobile phones to offload the task of aggressively scanning for device movement to nomadic infrastructure that is energy rich. The nomadic infrastructure can scan very frequently, and if it detects that a new device has come into range, or a device has moved or left, then it can signal other devices to scan and re-compute the neighbor graph. We are presently investigating schemes for efficiently offloading computation to more powerful infrastructure.</p><p>Privacy and security: There are privacy and security issues that we have not addressed in Virtual Compass. In our current implementation, a user's numeric Facebook ID is her mobile device's ID in peer localization. In our application, she only sees her Facebook friends. However, our underlying peer localization component has a complete map of all the devices in the vicinity. A wily user could potentially misuse this information. As a solution, we could use a periodically changing random number for the device ID. Each device would register this ID with an applet on Facebook. Any device that wants to discover the user identity will have to query the applet, which can verify if that user is a friend.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>Most of today's mobile social applications use absolute location to locate nearby peers, which is often difficult to obtain with reasonable accuracy in indoor environments. In this paper, we describe Virtual Compass, a peer-based localization system for mobile phones, which provides relative positioning by placing peers in a 2D plane without requiring any infrastructure support. Virtual Compass enables many emerging mobile applications that want the ability to sense social interactions: it provides the distance between different people which can then be combined with external information about those people's social relationships.</p><p>A key area of future work is to use this information to build applications that automatically infer of social context of such interactions.</p><p>Virtual Compass leverages the multiple radios available on today's smartphones to provide the accuracy needed for the above applications. It uses several energy management techniques that frugally use radios without compromising location accuracy. We have implemented Virtual Compass for Windows Mobile phones. We have implemented a simple application, FriendMeter, which uses Virtual Compass to sense the distances between a user and her Facebook friends who are in the vicinity. We evaluate Virtual Compass on a nine node testbed, and our results show that it places a device with an average distance error of only 1.9 meters. Virtual Compass's energy management algorithms produce a battery lifetime that is four to nine times that of a device that does not use sophisticated energy management to provide peer localization.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Each line represents a mobile node's ability to directly communicate between the two end-points using a radio such as Bluetooth or Wi-Fi. A,B,C and D are in communication range of each other, while E is only in range of C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. An example of using RSSI measurements from multiple radios (Bluetooth and Wi-Fi) to reduce the error in computing distance</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. An example illustrating the calculation of the change metric for adapting the Bluetooth scan interval. In this example, the change metric between T1 and T2 is 1.9, which is high enough to trigger a reduction in the scan interval.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig.4. This graph shows the Bluetooth scan interval for a device over time. After 10 minutes, we introduced a second peer device, and at 12 minutes a third peer device. At 18 minutes we removed one device, and then a second one at 20 minutes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig.5. CDF of the number of Bluetooth devices seen in periodic scans from 150 Nokia N95s<ref type="bibr" target="#b39">[40]</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Packet format for beacons in Virtual Compass Fig. 8. Screen shots of the simple UI in FriendMeter</figDesc><graphic coords="11,234.06,51.03,138.73,88.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .Fig. 10 .</head><label>910</label><figDesc>Fig. 9. Distance and deviation predicted by Virtual Compass</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 12 .Fig. 13 .Fig. 14 .</head><label>121314</label><figDesc>Fig. 12. Using multiple experiments similar to Figure 11, we calculate the average error in 2D placement as we vary the number of devices</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. This graph shows the latency of various tasks in Virtual Compass, along with error bars indicating variance across several runs. A total of 10 stationary devices were placed in a 100m 2 area. "app initialization" is dominated by communication with the Facebook Web site.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17.This graph shows the trade-off between the latency of detecting a peer moving into or moving out of the vicinity, against the lifetime of Virtual Compass . We varied the Wi-Fi scan interval between 30 seconds and 4 minutes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Energy consumption of radios on fully-charged HTC Touch Cruise phones</figDesc><table><row><cell>Radio</cell><cell cols="2">Power (mW) Lifetime (hours)</cell></row><row><cell>GSM (idle)</cell><cell>24.4</cell><cell>203.0</cell></row><row><cell>Bluetooth (idle)</cell><cell>45.5</cell><cell>109.8</cell></row><row><cell>Bluetooth (scanning)</cell><cell>507.6</cell><cell>9.8</cell></row><row><cell>Wi-Fi (idle)</cell><cell>849.9</cell><cell>5.9</cell></row><row><cell>Wi-Fi (scanning)</cell><cell>1305.4</cell><cell>3.8</cell></row><row><cell>GPS (idle)</cell><cell>859.9</cell><cell>5.8</cell></row><row><cell>GPRS (transfers)</cell><cell>1031.2</cell><cell>4.8</cell></row><row><cell>HSDPA (transfers)</cell><cell>1099.6</cell><cell>4.5</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Average error for nine devices in a 100m 2 indoor area reported by the different systems</figDesc><table><row><cell>System</cell><cell>Average Error (meters)</cell></row><row><cell>Bluetooth</cell><cell>3.40</cell></row><row><cell>Wi-Fi</cell><cell>3.91</cell></row><row><cell>Virtual Compass</cell><cell>1.41</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>This figure shows the lifetime of Virtual Compass on a fully-charged mobile phone, with the back-light optimization from § 4.3 turned off or on. We used a synthetic workload based on the Reality Mining data<ref type="bibr" target="#b43">[44]</ref> to emulate phone usage</figDesc><table><row><cell cols="2">back-light optimization lifetime (hours)</cell></row><row><cell>off</cell><cell>12.07</cell></row><row><cell>on</cell><cell>15.42</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 .</head><label>4</label><figDesc>This Figure shows the lifetime of Virtual Compass on a fully-charged mobile phone, with 9 peers nearby, across different sizes of regions. In each experiment, the devices did not move.</figDesc><table><row><cell cols="5">Density Lifetime 1-hop 2-hop 3-hop</cell></row><row><cell cols="5">(meter 2 ) (hours) peers peers peers</cell></row><row><cell>100</cell><cell>11.19</cell><cell>9</cell><cell>0</cell><cell>0</cell></row><row><cell>900</cell><cell>11.92</cell><cell>5</cell><cell>4</cell><cell>0</cell></row><row><cell>2500</cell><cell>12.05</cell><cell>5</cell><cell>3</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 .</head><label>5</label><figDesc>This figure shows the stability of the neighbor graph when using just Bluetooth, just Wi-Fi, or both. We placed 2 devices 10m apart, and ran experiments for 2 hours.</figDesc><table><row><cell>System</cell><cell>Neighbor graph stability</cell></row><row><cell>Bluetooth</cell><cell>14%</cell></row><row><cell>Wi-Fi</cell><cell>90%</cell></row><row><cell>Virtual Compass</cell><cell>94%</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. We would like to thank our shepherd, Alexander Varshavsky, and the anonymous reviewers for their useful feedback. Part of this work was supported under awards NSF CNS-0519881, NSF CNS-0447877, and DARPA HR0011-09-1-0020.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Sensing meets mobile social networks: The design, implementation and evaluation of the CenceMe application</title>
		<author>
			<persName><forename type="first">E</forename><surname>Miluzzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Fodor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Musolesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Eisenman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://loopt.com" />
		<title level="m">Loopt</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<author>
			<persName><forename type="first">A</forename><surname>Varshavsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>De Lara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lamarca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Otsason</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GSM indoor localization</title>
		<imprint>
			<date type="published" when="2007-12">December 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Place Lab: Device Positioning using radio beacons in the Wild</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lamarca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chawathe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Consolvo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Sohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Potter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tabert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Powledge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schilit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PERVASIVE 2005</title>
		<editor>
			<persName><forename type="first">H.-W</forename><surname>Gellersen</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><surname>Want</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Schmidt</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3468</biblScope>
			<biblScope unit="page" from="116" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Practical robust localization over large-scale 802.11 wireless networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Haeberlen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Flannery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ladd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rudys</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wallach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kavraki</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>MobiCom</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Radio interferometric geolocation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Maroti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kusy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Balogh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Volgyesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nadas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Molnar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ledeczi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>SenSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Location systems: An introduction to the technology behind location awareness</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lamarca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>De Lara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Synthesis Lectures on Mobile and Pervasive Computing</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Adaptive on-device Location Recognition</title>
		<author>
			<persName><forename type="first">K</forename><surname>Laasonen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Raento</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Toivonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PERVASIVE 2004</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Ferscha</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">F</forename><surname>Mattern</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3001</biblScope>
			<biblScope unit="page" from="287" to="304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Database Correlation method for GSM Location</title>
		<author>
			<persName><forename type="first">H</forename><surname>Laitinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lahteenmaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Nordstrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">VTC</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<ptr target="http://ekahau.com" />
		<title level="m">Ekahau Wi-Fi-based Real-time Tracking and Site Survey Solutions</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">RADAR: An in-building RF-based User Location and Tracking System User Location and Tracking System</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">N</forename><surname>Padmanabhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFOCOM</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">WALRUS: Wireless Acoustic Location with Room-Level Resolution Using Ultrasound</title>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Offer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Palistrant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sharp</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>MobiSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">The Cricket Location-Support System</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Priyantha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chakraborty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>MOBICOM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The Active Badge System</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Harter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Blackie</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>InterCHI</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<ptr target="http://versustech.com" />
		<title level="m">Versus Technologies</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName><surname>Ubisense</surname></persName>
		</author>
		<ptr target="http://ubisense.net" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Supporting group collaboration with interpersonal awareness devices</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">E</forename><surname>Holmquist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wigström</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Personal Technologies</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="13" to="21" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The NearMe Wireless Proximity Server</title>
		<author>
			<persName><forename type="first">J</forename><surname>Krumm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hinckley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UbiComp 2004</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Davies</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Mynatt</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Siio</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">3205</biblScope>
			<biblScope unit="page" from="283" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tan</surname></persName>
		</author>
		<title level="m">Beep Beep: A High Accuracy Acoustic Ranging System Using COTS Mobile Devices</title>
		<imprint>
			<publisher>SenSys</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName><surname>Bluehoo</surname></persName>
		</author>
		<ptr target="http://bluehoo.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Peopletones: A system for the detection and notification of buddy proximity on mobile phones</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">A</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">Y</forename><surname>Sohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">G</forename><surname>Griswold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>MobiSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">A Relative Positioning System for Co-located Mobile Devices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hazas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Gellersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Agbota</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kortuem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Krohn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>MobiSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">DOLPHIN: A Practical Approach for Implementing a fully Distributed indoor Ultrasonic Poisitioning System</title>
		<author>
			<persName><forename type="first">L</forename><surname>Holmquist</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wigstrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UbiComp 2004</title>
		<editor>
			<persName><forename type="first">N</forename><surname>Davies</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Mynatt</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Siio</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">3205</biblScope>
			<biblScope unit="page" from="347" to="365" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">MSP: Multi-Sequence Positioning of Wireless Sensor Nodes</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">GPS-Less Low-Cost Outdoor Localization for Very Small Devices</title>
		<author>
			<persName><forename type="first">N</forename><surname>Bulusu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>IEEE Personal Communications</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Sextant: a unified node and event localization framework using non-convex constraints</title>
		<author>
			<persName><forename type="first">S</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Murty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Sirer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>MobiHoc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Calibree: Calibration-free Localization using Relative Distance Estimation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Varshavsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pankratov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Krumm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Lara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PERVASIVE 2008</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Indulska</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Patterson</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Rodden</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Ott</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">5013</biblScope>
			<biblScope unit="page" from="146" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Locale: Collaborative localization estimation for sparse mobile sensor networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Martonosi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IPSN</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Robust distributed network localization with noisy range measurements</title>
		<author>
			<persName><forename type="first">D</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Leonard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Teller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>SenSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">High-accuracy, low-cost localization system for wireless sensor network</title>
		<author>
			<persName><forename type="first">R</forename><surname>Stoleru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>SenSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Vivaldi: A decentralized network coordinate system</title>
		<author>
			<persName><forename type="first">F</forename><surname>Dabek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Kaashoek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>SigComm</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Experimental comparison of rssi-based localization algorithms for indoor wireless sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Zanca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zorzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zanella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zorzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">REALWSN</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A Location-based Management System for Enterprise Wireless LANs</title>
		<author>
			<persName><forename type="first">R</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Padhye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NSDI</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Virtual compass: relative positioning to sense mobile social interactions</title>
		<author>
			<persName><forename type="first">N</forename><surname>Banerjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Alec Wolman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">The Rise of Nonlinear Mathematical Programming</title>
		<author>
			<persName><forename type="first">D</forename><surname>Mcallester</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Micro-Blog: Sharing and Querying Content Through Mobile Phones and Social Participation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gaonkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Choudhary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schmidt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>MobiSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Nokia Nokoscope Data obtained via private communication</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Wireless wakeups revisited: energy management for VoIP over Wi-Fi smartphones</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gupta</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<publisher>MobiSys</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Padhye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ravindranath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolman</surname></persName>
		</author>
		<title level="m">Beacon-Stuffing: Wi-Fi without Associations</title>
		<imprint>
			<publisher>HotMobile</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<ptr target="http://microsoft.com/azure/data.mspx" />
		<title level="m">Microsoft Azure SQL Data Service</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<ptr target="http://reality.media.mit.edu/" />
		<title level="m">Reality Mining Dataset</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
