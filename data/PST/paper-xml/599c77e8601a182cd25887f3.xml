<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Traceability Analysis of Monero&apos;s Blockchain</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Amrit</forename><surname>Kumar</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Clément</forename><surname>Fischer</surname></persName>
							<email>cfischer@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Shruti</forename><surname>Tople</surname></persName>
							<email>shruti90@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Prateek</forename><surname>Saxena</surname></persName>
							<email>prateeks@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Monero</forename><forename type="middle">•</forename><surname>Cryptocurrency</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Blockchain</forename><forename type="middle">•</forename><surname>Traceability</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<settlement>Singapore</settlement>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Traceability Analysis of Monero&apos;s Blockchain</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F844BF793A58D832870B53AC09DD4F82</idno>
					<idno type="DOI">10.1007/978-3-319-66399-9</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Privacy and anonymity are important desiderata in the use of cryptocurrencies. Monero-a privacy centric cryptocurrency has rapidly gained popularity due to its unlinkability and untraceablity guarantees. It has a market capitalization of USD 290M. In this work, we quantify the efficacy of three attacks on Monero's untraceability guarantee, which promises to make it hard to trace the origin of a received fund, by analyzing its blockchain data. To this end, we develop three attack routines and evaluate them on the Monero blockchain. Our results show that in 88% of cases, the origin of the funds can be easily determined with certainty. Moreover, we have compelling evidence that two of the attack routines also extend to Monero RingCTs-the second generation Monero that even hides the transaction amount. We further observe that over 98% of the results can in fact be obtained by a simple temporal analysis. In light of our findings, we discuss mitigations to strengthen Monero against these attacks. We shared our findings with the Monero development team and the general community. This has resulted into several discussions and proposals for fixes.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Since the seminal work by Chaum <ref type="bibr" target="#b2">[3]</ref>, privacy and anonymity properties have become important desiderata for any e-cash system. Bitcoin, the most popular decentralized cryptocurrency fairs poorly in terms of privacy and anonymity as evidenced by several analyses in the past <ref type="bibr" target="#b4">[6,</ref><ref type="bibr" target="#b10">13,</ref><ref type="bibr" target="#b15">19,</ref><ref type="bibr" target="#b17">21]</ref>. In light of the privacy issues in Bitcoin, a new cryptocurrency called Monero (XMR) was launched on April 18 th 2014. Monero currently has a market capitalization of USD 290M <ref type="bibr">[12]</ref> and has the most momentum of all the live privacy-enhancing cryptocurrency projects (e.g., Zcash <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b19">24]</ref>, Dash <ref type="bibr" target="#b3">[4]</ref>, Mimblewimble <ref type="bibr" target="#b7">[9]</ref>, etc.), see <ref type="bibr" target="#b1">[2]</ref>. The value of Monero in terms of USD increased by 27 times in the year 2016 from its value in 2015, making it a valuable example of privacy-enhancing cryptocurrencies to study. Its rise to popularity is mainly due to strong privacy properties (compared to Bitcoin) and design simplicity (compared to Zcash).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Background on Monero.</head><p>As in any other distributed cryptocurrency (such as Bitcoin), Monero coins are spent in the form of a transaction, where a sender transfers the coins to a recipient, both often called the users of the system.</p><p>Each sender and the recipient has a public and private key pair. The public key uniquely defines the payment address. The transaction transfers funds held in the sender's public key to the recipient's public key. A transaction contains a set of inputs and outputs, wherein inputs consume coins from the sender and outputs transfer them to the recipient, while conserving the total balance. The transaction is digitally signed by the sender to authorize the transfer. It is then broadcast to the network that groups several transactions in the form of a block and validates it. Once accepted, the block gets appended to a public ledger called the blockchain and in the process a new coin is minted (as a block reward ). The consensus on which blocks to append is determined by a proof-of-work puzzle. Later the recipient can redeem the funds by creating a new transaction that references the previous output as an input. The public blockchain also prevents the double spend -i.e., the ability to spend a coin owned more than once.</p><p>An adversary can observe linkages between the addresses involved in transactions on the public blockchain, as evidenced by previous work on Bitcoin, allowing unintended inference of relationships between pseudonymous users <ref type="bibr" target="#b4">[6,</ref><ref type="bibr" target="#b10">13,</ref><ref type="bibr" target="#b15">19,</ref><ref type="bibr" target="#b17">21]</ref>. Monero aims to address this privacy issue by requiring the currency to ensure the following two properties (see <ref type="bibr" target="#b18">[22]</ref>), paraphrased here:</p><p>1. Unlinkability: For any two transactions, it should be impossible to deduce that they were sent to the same recipient. 2. Untraceability: Given a transaction input, the real output being redeemed in it should be anonymous among a set of other outputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>In amount In amount Inkey 1 Inkey 2 y</head><p>In amount</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tx inputs</head><p>Inkey 3</p><p>In </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ring sig</head><p>Fig. <ref type="figure">1</ref>. A schematic representation of a simplified Monero non-RingCT transaction. It has two inputs and three outputs. The first input uses two mix-ins (hence three input keys), while the second one uses one. The sum of all output amounts must be equal to the sum of all input amounts. Ring signatures hide the real input key corresponding to the output being spent.</p><p>In order to guarantee unlinkability, Monero by design introduces the notion of one-time random addresses (see Fig. <ref type="figure">1</ref>). The idea is that each sender of a transaction generates a new one-time random address for the recipient per output in a way that only the recipient can spend it using a long-term secret key. If each address is generated using fresh randomness and is used only once, then it should be hard for an adversary to link two addresses. Monero enforces untraceability using a cryptographic primitive called ring signatures <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b16">20]</ref>. The primitive allows a sender (the signer) to anonymously sign the transaction (the message) on behalf of a "ring" or group of other users. As a result, the real output being redeemed remains anonymous amongst the chosen set of outputs (of the same amount) belonging to other users. The extra outputs used to create the ring signature are referred to as the mix-ins. As each mix-in is an output of a previous transaction, it is uniquely identified by the corresponding public key. Throughout this paper, we interchangeably use the term output and the public key. The guarantee that Monero aims to achieve through ring signatures is privacy à la anonymity-set size <ref type="bibr" target="#b18">[22]</ref>. An input using m mix-ins has an anonymity-set size of m + 1.</p><p>Since January 2017, Monero has further strengthened its privacy guarantees by incorporating ring confidential transactions (RingCTs) <ref type="bibr" target="#b12">[16]</ref> that also hide the transaction amount preventing several inference attacks. RingCTs are currently optional but are slated to become obligatory starting from September 2017.</p><p>Problem Statement. In this work, we focus on Monero's untraceability guarantee. While Monero does provide strong privacy features in theory, it is not known how well it does in real usage scenario, our work attempts to fill this gap. In other words, we aim to study the gap between the desired anonymityset size (from user's perspective) and the effective anonymity-set size (from the attacker's perspective) in the presence of a passive adversary. To this end, we develop three attack routines and evaluate them on the Monero blockchain data. Monero designers and developers are aware of the theoretical possibility of the attacks <ref type="bibr" target="#b9">[11,</ref><ref type="bibr" target="#b13">17]</ref> and have put in place some measures to mitigate the risks. In light of <ref type="bibr" target="#b9">[11,</ref><ref type="bibr" target="#b13">17]</ref>, our work has three goals:</p><p>1. Quantify through concrete attack strategies both past and existing risks. 2. Demonstrate that the existing measures often fall short in mitigating the risks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Propose better mitigation strategies.</head><p>Contributions. We give below our contributions and main findings:</p><p>1. One of the most important findings is that over 65% of inputs have an anonymity-set size of one, thereby making them trivially traceable. Attack I leverages this finding to show that such inputs in fact lead to a cascade effect, where they affect the untraceability of other inputs with which they have a non-empty anonymity-set intersection. Our evaluation shows that the cascade effect renders another 22% of inputs traceable. The result here is conclusive as Attack I only yields true positives. 2. Attack II exploits the fact that several outputs from a previous transaction are often merged to aggregate funds when creating a new transaction. Such idioms of use leak information on the real outputs being redeemed. On non-RingCTs, Attack II has a true positive rate of 95% when compared to results from Attack I (that provides "ground truth"). We further observe merging of outputs among 1% of RingCTs. We believe that Attack II should extrapolate well even to RingCTs, but the ground truth is not available to scientifically deduce this.</p><p>3. Attack III considers an attack based on the temporal analysis of transaction outputs. It considers the most recent output (in terms of block height) in the anonymity-set as the real one being redeemed. Attack III has a true positive rate of 98.5% on non-RingCTs, where the comparison to the Attack I as ground truth is feasible. In light of the results, we propose a better sampling strategy to choose mix-ins. Our method takes into account the actual spending habit of users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Monero Network and Usage Statistics</head><p>In this section, we discuss the network and usage statistics of Monero. Our goal is to gain insight into how Monero is used in practice and its ensuing privacy impact. The results obtained here also determine the efficacy of the traceability attacks (presented in Sect. 3). Below, we present the dataset for our statistical analysis. The same dataset will also be used to evaluate the impact of the attack routines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Dataset Collection</head><p>We acquired the entire Monero history from the first transaction on April 18 th 2014 up to and including the last transaction on February 6 th 2017. The resulting dataset comprises of a total of 961,463 non-coinbase transactions<ref type="foot" target="#foot_0">1</ref> included in 418,910 blocks. The first non-coinbase transaction appears in the block with height<ref type="foot" target="#foot_1">2</ref> 110. Our dataset also includes 47,428 RingCTs. The first RingCT appears in the block with height 1,220,517 (on January 10 th 2017). We include RingCTs so as to have a more representative dataset. Throughout our analysis, we maintain the raw data in the form of a blockchain and use Monero daemon (monerod) to access it <ref type="bibr">[15]</ref>. In the remainder of the section, we present results of our statistical analysis on the dataset. Unless otherwise stated, we do not include coinbase transactions. Our analysis focuses on three important aspects: (1) available liquidity-the number of outputs that have the same amount. A Monero output can only be mixed with other outputs of the same amount. Hence, a low liquidity implies that it may not always be possible to find sufficient number of mix-ins for a given amount. As a consequence, a desired anonymity-set size may not be achieved. <ref type="bibr" target="#b1">(2)</ref> the number of mix-ins used. Clearly, the larger it is the higher is the anonymity;</p><p>(3) number of input and outputs in a transaction. Roughly speaking larger is the number of inputs and outputs, the higher is the probability that Attack II would work, hence we measure these.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Available Liquidity</head><p>Since an output can only be mixed with other outputs having the same amount, it is important to have sufficiently large liquidity for each output amount. In order to ensure that sufficient liquidity is maintained, Monero incorporates the notion of denominations. A non-RingCT output amount is A × 10 B , where 1 ≤ A ≤ 9 and B ≥ -12 <ref type="bibr" target="#b9">[11]</ref>.</p><p>There are 1,339,733 different output amounts in the dataset, the largest is 500,000 XMR. We also observe that approximately 85% of all outputs have an amount less than 0.01 XMR (≈0. <ref type="bibr">13 USD [5]</ref>). We refer to them as dust values. This shows that lower denominations dominate the dataset, and users often transact with small amounts. We further observe that a total of 1,244,165 (93%) output amounts have a frequency of 1. This means that when these outputs have to be redeemed, they cannot be mixed with any other non-RingCT output. The only possible way to create an untraceable transaction redeeming these outputs is to create a RingCT which hides individual mix-in amounts cryptographically (each amount is '0', denoting unknown). These output amounts sum to 1,012,231.3 XMR. Moreover, 84.5% of these outputs correspond to dust values.</p><p>Another important observation is regarding the number of output amounts that do not respect the usual denomination format in Monero. We found that 99.98% of these are not denomination compliant. Moreover, 92.8% of these amounts appear only once in the dataset. The total monetary value of the outputs that appear only once and are non-denomination compliant is 12231.27 XMR. The large number of non-denomination compliant output amounts can be attributed to the fact that denomination was not enforced on coinbase transactions in the early years. Moreover, the block reward in Monero is often not denomination compliant by the way it evolves over time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Number of Mix-ins</head><p>Generally speaking, larger is the number of mix-ins used, the better is the privacy achieved (due to the larger anonymity-set size). However, using a large number of mix-ins leads to a linear increase in the transaction size (in terms of bytes) and a larger transaction size means larger fees. Hence, there is an incentive for users to use low number of mix-ins at the cost of sacrificing privacy. Since March 23 rd 2016, Monero enforced a network-wide minimum mix-in of 2.</p><p>In fact, a total of 115 different number of mix-ins have been used in our dataset, the minimum and the maximum being 0 and 851 respectively. Table <ref type="table" target="#tab_1">1</ref> presents the cumulative frequency of the number of mix-ins used in an input. One may observe that lower number of mix-ins, i.e., 0, 1, 2, 3 and 4 correspond to roughly 96% of all mix-ins. Moreover, 65.9% of all inputs have zero mix-ins. Such inputs are traceable by default. In fact, as we show in Sect. 3.1, these inputs may render other inputs traceable as well even if the latter use higher number of mix-ins (through a cascade effect ). There are two possible explanations on why smaller mix-ins dominate the dataset. First, it could be possible that at the time a user creates a transaction, he may not find enough suitable outputs to mix with and hence is forced to choose a lower number of mix-ins. This may indeed happen since a majority of the output amounts are non-denomination compliant. Second, even though enough outputs are available at any given time, users deliberately choose a low number of mix-ins, for instance, to lower transaction fees. In order to distinguish the cause, we also provide in Table <ref type="table" target="#tab_1">1</ref>, the cumulative frequency of the anonymity-set size varying from 1 to 11 (i.e., number of mix-ins between 0 and 10). The table also presents the percentage of cases when it was possible to choose a higher number of mix-ins. In order to compute these data, we include coinbase transactions. A coinbase transaction output cannot be used as a mix-in for 60 blocks due to system constraints. We observe that in the case of inputs with zero mixins, 85.9% of them could have been spent using a higher number of mix-ins. As for the rest, over 99% of the inputs could have been spent using a higher number of mix-ins. These results clearly show that users deliberately create a small anonymity-set (by choosing a small number of mix-ins), which could be to avoid paying a larger transaction fee.</p><p>In public communication, it has been mentioned by the Monero developers that Poloniex <ref type="bibr" target="#b14">[18]</ref> (an exchange) used to pay to its clients using zero mix-ins (to save on transaction fees) and hence must have contributed to the total number of inputs with zero mix-ins. However, the exact percentage of transactions contributed by Poloniex is hard to obtain without an explicit disclosure from its part.</p><p>Lastly, we also observe that there are 9 different mix-in values (7.8%) that are unique in the sense that these many mix-ins are used in only one input (across the entire dataset). The corresponding transactions can be attributed to unique users. In other words, the number of mix-ins used may become an identifying trait of Monero users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Number of Inputs and Outputs</head><p>The existence of denominations in Monero has a direct impact on the number of inputs and outputs that a transaction can have. To see this, consider a user Alice paying 11 XMR to another user Bob. Since 11 is not denomination compliant, Alice cannot pay 11 XMR in a single output. She has to create two outputs for 10 XMR and 1 XMR. Now, when Bob wishes to redeem the funds, he now needs to create a transaction with two inputs instead of one. Bob's transaction now merges the two previous outputs. Output merging in case of Bitcoin is well known to leak information on the owner of the funds <ref type="bibr" target="#b10">[13]</ref>. We show through Attack II (Sect. 3.2) that Monero suffers from a similar privacy leakage. In fact, the efficacy of Attack II depends on the number of inputs and outputs that a transaction can have.</p><p>To this end, we present in Fig. <ref type="figure" target="#fig_0">2a</ref>, the evolution of the number of inputs and outputs per transaction. We observe that the average number of inputs and outputs per transaction are 19 and 17 respectively. Smaller number of inputs and outputs at the tail can be attributed to RingCTs, which made denominations redundant. With RingCTs, the number of outputs in a transaction can be limited to two: one for the payment to the recipient, the other for the change. We now focus on the impact of RingCTs on the number of inputs and outputs. On an average, a RingCT has 3.7 inputs and only 1.2 output. Figure <ref type="figure" target="#fig_0">2b</ref> shows the evolution of these values over time. Clearly, with the advent of RingCTs, the number of outputs per transaction was consistently around 2. The number of inputs however does not show a stable and consistent pattern. The peaks in the curve do however tend to lower. It could be due to the existence of denominations from non-RingCTs. As a result, users were still forced to merge a large number of inputs to reach a desired transaction amount.</p><p>To summarize the statistical analysis of this section, we observed that over 65% of inputs use zero mix-ins and that the average number of inputs/outputs per transaction is large for non-RingCTs but considerably small for RingCTs. Attack I and Attack II discussed in the following section leverage these findings. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Traceability Attacks and Evaluation</head><p>In this section, we present three attack strategies on existing Monero transactions. The attacks only assume access to the entire public blockchain. The transactions on the public blockchain are accessible to anyone and hence it justifies our model. We do not assume any active adversary that actively participates in the protocol to undermine the privacy of users. Albeit weak, we show this passive adversary can trace 88% of inputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Attack I: Leveraging Zero Mix-ins</head><p>Attack I exploits the presence of inputs spent using zero mix-ins (over 65% in our dataset). Consider the case, where, a user Alice creates a transaction Tx-a with an input that she spends without using any mix-in. Alice's input key can clearly be identified as spent. Now, consider a later transaction Tx-b created by another user Bob who uses Alice's input key as a mix-in for his input. If the number of mix-ins used by Bob is one. Then, any adversary can identify the real input key being spent in Bob's transaction and his input becomes traceable too. More generally, if the number of mix-ins used by Bob is m &gt; 1, then the effective anonymity-set size now becomes m (instead of the desired size of m + 1). A closer look reveals that use of zero mix-in leads to a cascade effect where the traceability of an input affects the traceability of another input in a later transaction. Figure <ref type="figure" target="#fig_1">3</ref> schematically presents this cascade effect triggered by Tx-a that uses no mix-in. The cascade effect may not always make an input fully traceable, if for instance, the effective anonymity-set size reduces to a value greater than one.</p><p>Our attack routine due to memory restrictions, runs a number of iterations denoted by η. In each iteration, the algorithm makes a pass over the entire blockchain data and finds a set of traceable inputs. In the next iteration, it uses the set of previously found traceable inputs to obtain new set of traceable inputs. Results. The impact of Attack I on the traceability of inputs is shown in Figs. <ref type="bibr" target="#b3">4</ref>, 5 and 6. The success of Attack I is due to the fact that 65.9% of inputs do not use any mix-ins and are trivially traceable. This cascades to traceability of another 22% of the inputs, leading to a total of 87.9% of traceable inputs. In Fig. <ref type="figure">4</ref>, we present the percentage of traceable inputs for number of mix-ins less than or equal to 10. These together cover 99.8% of all inputs in our dataset. We present histograms for three values of η (1, 3 and 5). With η = 5, we observe that the set of traceable inputs almost reaches a fixed point. Just after the first iteration (η = 1), the number of traceable inputs using one mix-in reaches as high as 81%. For η = 5, this percentage of traceable inputs using one mix-in becomes 87%. The plot also shows the cascade effect as inputs using a high number of mix-ins such as 10 also have a considerable percentage of traceable inputs (27% for η = 5).</p><formula xml:id="formula_0">Tx-a Tx-b Tx-c Tx-d . . . #mix-in = 0 #mix-in = 1 #mix-in = 2 . . . #mix-in = m</formula><p>Figure <ref type="figure" target="#fig_3">5a</ref> shows how deep (in terms of number of mix-ins) does the cascade effect propagate. It presents the cumulative percentage of traceable inputs as a function of the number of mix-ins. Clearly, as the number of mix-ins increases, the cascade effect deteriorates and roughly 88% of all inputs become traceable. It is interesting to note that the cascade effect leads to one traceable input that uses 153 mix-ins. This is the largest number of mix-ins that gets affected by the cascade effect.</p><p>Figure <ref type="figure" target="#fig_3">5b</ref> shows how long (in terms of days) does the cascade effect propagate. It presents the evolution of the percentage of traceable inputs over time grouped by week. Since, the initial transactions did not use any mix-in, a large majority (over 95%) of the inputs were traceable. The maximum percentage of traceable inputs per week is 98.9% (in the 10 th week). In fact, the percentage dropped to roughly 62% in the 105 th week when the network-wide minimum mix-in of 2 could come into effect. Since then, the percentage of traceable inputs has seen a consistent decline. For the last week, only 8% of all inputs were found to be traceable. Attack I did not find results on RingCTs.</p><p>We found several instances where Attack I could not identify a traceable input, but it did nevertheless succeeded in reducing the effective anonymityset size. Figure <ref type="figure">6</ref> presents these findings. For the sake of completeness, it also includes the results presented in Fig. <ref type="figure">4</ref>. We observe that for η = 5, roughly 24% of inputs that use 10 mix-ins have an effective anonymity-set size of two. This shows how close Attack I can be in identifying the real input. Moreover, the plot shows that as the number of mix-in increases, the percentage of inputs on η: #mix-ins:</p><formula xml:id="formula_1">2 -1 2 0 2 1 2 2 2 3 2 4 2 5 2 6 2 7</formula><p>1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 1 3 5 Fig. <ref type="figure">6</ref>. Results on effective anonymity-set size using Attack I. In x-axis, we have the number of mix-ins from 0 to 10. For each of these mix-ins we plot three stacked bars corresponding to η = 1, 3, 5. Each stacked bar for a fixed η represents the percentage of inputs that have an effective anonymity-set size between 1 to 11. For instance, for inputs using only 2 mix-ins, and for η = 5, the percentage of inputs with effective anonymity-set size of 1 is 59%, the percentage of inputs with effective anonymity-set size of 2 is 21% and the percentage of inputs with effective anonymity-set size of 3 is 20%.</p><p>which Attack I does not work at all tends to decrease. In fact, for inputs using 10 mix-ins, Attack I does not affect the effective anonymity-set size for only 0.9% of all such inputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Attack II: Leveraging Output Merging</head><p>Consider a scenario where a user creates a transaction Tx-a having one input and two outputs O 1 , O 2 (Cf. Fig. <ref type="figure" target="#fig_4">7</ref>). Without loss of generality, let us assume that only 1 mix-in is used. Attack II functions under the assumption that while creating a transaction, it is unlikely to choose several mix-ins that are outputs of a single previous transaction. Hence, if a transaction includes keys (possibly across several inputs) that are outputs of a single previous transaction, then they are likely to be the real ones being spent. Intuitively, this is true for non-RingCTs, where, due to denominations, several outputs in a transaction may belong to the same recipient. As a result, those outputs will get merged to aggregate funds in a later transaction. Since, mix-ins are randomly chosen, the probability that Attack II gives incorrect result should be small. For RingCTs, denominations are redundant and hence output merging should be less prevalent.</p><p>Due to the randomness involved in choosing mix-ins, results obtained from Attack II however cannot always be conclusive and may admit false positives. In this sense, Attack II is weaker than Attack I as the latter does not admit any false positives. As our evaluation later shows, Attack II has a true positive rate of 87.3% on non-RingCTs.</p><p>In order to simplify the discussion of Attack II, we refer to transactions of type Tx-a (as in Fig. <ref type="figure" target="#fig_4">7</ref>) as a source transaction, while, those of type Tx-b as a destination transaction. Hence, a destination transaction uses two or more outputs of a source transaction across its inputs. A minimum number of two or more outputs is needed so as to capture the merging of outputs. Attack II may encounter the following scenarios:</p><p>-S1: It may not find any destination for a given source.</p><p>-S2: It may find several destinations for a given source.</p><p>-S3: It may find one (or more) destination for a given source, where the same source output appears in more than one destination input. -S4: It may find one (or more) destination for a given source, where more than one source outputs appear in a single destination input.</p><p>S1 means that Attack II failed to yield any result on the given source instance. While, S2 means that the attack has false positives at the transaction level, hence it is hard to ascertain the real destination for a given source. S3 presents the worst case for the attack. It means that the attack has false positives even at the input level. Hence, it is hard to even ascertain the input where the source output was indeed spent. Lastly, S4 yields a set of candidate keys, one of which is probably being spent in the input.</p><p>In the following, we conduct experiments to estimate how well Attack II performs. We first measure how frequently the above scenarios occur and then estimate the false positive rate by relying on the results obtained from Attack I as a comparison point. Note that because Attack I yields results only on non-RingCTs, this comparison is limited to non-RingCTs, but the inference extends to RingCTs as well.</p><p>Results. Attack II found results on 410,237 different source transactions, which is roughly 43% of all transactions in our dataset. These source transactions also include 636 RingCTs, which is 1% of all RingCTs in the dataset. The low fraction of RingCTs is due to the fact that the average number of inputs and outputs per RingCT is only 3.7 and 1.2 respectively. Recall that Attack II exploits the use of outputs of source transactions in a destination transaction. Hence, a low number of inputs and outputs directly affects the applicability of the attack. Even though, Attack II affects only 1% of RingCTs, it is a serious concern for the Monero developers as exchanges and mining pools are now actively merging RingCT outputs (See Sect. 5 for their feedback).</p><p>In Fig. <ref type="figure" target="#fig_5">8a</ref>, we present the results obtained on 409,601 non-RingCT sources. Around 60% of all source transactions have only 1 matching destination. The maximum number of destinations found for a source was 146. However, the percentage of source drops exponentially as the number of destinations increases. Similarly, Fig. <ref type="figure" target="#fig_5">8b</ref> presents the results obtained on 636 RingCT sources. We observe that a source has at most 3 destinations and a majority of the source transactions (95.1%) have only one destination. The small number of destinations in case of RingCT sources is due to the low number of inputs in RingCTs.</p><p>We estimate the accuracy of Attack II by comparing its results with those obtained by Attack I (that yields "ground truth"). Since Attack I does not yield any result on RingCTs, we cannot determine the corresponding accuracy. However, if it performs well on non-RingCTs, then we may extrapolate this result over RingCTs and expect similar accuracy. In order to compare the two attacks, we use the following terms: Now that the terms TP, FP and UP are established, we are ready to present the results on the accuracy of Attack II. The overall accuracy of Attack II computed over all non-RingCT inputs for which it returns a result is given in Fig. <ref type="figure" target="#fig_5">8c</ref>. The result shows that Attack II has an overall true positive rate of 87%, while the false positive rate is as low as 0.78%, while the result is inconclusive for around 12% of inputs. The high true positive rate on non-RingCTs clearly demonstrates that it should do equally well even on RingCTs. However, due to the lack of ground truth it is impossible to verify this. A breakdown of TP, FP and UP as a function of number of mix-ins is given in Fig. <ref type="figure" target="#fig_6">9</ref>. The plot shows that as the number of mix-in increases, the percentage of TP decreases, while the percentage of UP increases. Moreover, irrespective of the number of mix-ins used, the number of FP remains very close to 0. All of this is due to the fact that the result of Attack I deteriorates as the number of mix-ins increases and hence it becomes hard to verify the result of Attack II due to a lack of ground truth.</p><p>Remark 1. Attack II can also be used to break the unlinkability guarantee of Monero. To see this, refer to Fig. <ref type="figure" target="#fig_4">7:</ref> If O 1 and O 2 have been determined to be the real input keys being spent in I 1 and I 2 , then, they must belong to the same Monero user, hence breaking unlinkability. Since, the focus of this work is on traceability, we do not develop this any further and leave it as a future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Attack III: Temporal Analysis</head><p>The third attack leverages the fact that an output does not remain unspent for an infinite time. In general, its probability of being spent should increase with time (eventually becoming 1). Indeed, an output that has been on the blockchain for 100,000 blocks is much more likely to have already been spent than an output that has been on the blockchain for only 100 blocks. In light of this, the Attack III strategy is defined in the following manner: Given a set of input keys used to create a ring signature, the real key being spent is the one with the highest block height, where it previously appeared as an output. The strategy applies on both non-RingCTs and RingCTs.</p><p>Results. We employed Attack III on our dataset and compared its results with the ones obtained from Attack I (η = 5). Globally, we observed that Attack III has a true positive rate of 98.1%. This clearly shows that Attack III is very accurate and very often the most recent output is the real one being spent. In theory, Attack III can be prevented by mixing with only those outputs that are yet to be redeemed. This would however require the ability to distinguish a spent output from an unspent one. Monero's main aim is to make this hard using a ring signature. In order to circumvent this problem, Monero developers have decided since April 5 th 2015 to sample mix-ins from a variant of triangular distribution <ref type="bibr">[23]</ref>. The distribution gives higher probability to newer outputs than to ones that are old and hence can potentially mitigate the attack. Prior to April 5 th 2015, mixins were sampled from a uniform distribution, i.e., each output had the same probability of being a mix-in for any input at any given time. We evaluate how well the current sampling strategy mitigates Attack III. The results are shown in Table <ref type="table" target="#tab_2">2</ref>. While, using the current sampling strategy does help in reducing the number of true positives, the gain over uniform distribution is however marginal, i.e., only 3.5%. Our results clearly show that the existing sampling strategy drastically fails in mitigating Attack III-that is, user spending patterns do not follow the expected (variant of) triangular distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Mitigation Strategies and Recommendations</head><p>As argued in the Monero Research Lab (MRL) report MRL-004 <ref type="bibr" target="#b9">[11]</ref>, without a non-interactive zero-knowledge (NIZK) approach, traceability is inevitable. Moreover, it is argued that since NIZK based techniques are computationally intensive, privacy issues should be addressed without employing those techniques. Under these constraints, we propose a mitigation strategy for Attack III that performs better than the variant of the triangular distribution currently employed in Monero. We also propose recommendations to reduce the potential risks associated with Attack I and Attack II.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Recommendations for Attack I and Attack II</head><p>Since Attack I could not find any traceable input on RingCTs, we recommend the Monero development team to make RingCTs obligatory as soon as possible. As long as RingCTs are optional, the possibility of a user creating a non-RingCT cannot be ruled out. Hence, the cascade effect may continue to propagate.</p><p>One may argue that enforcing RingCTs must be subject to its acceptance by the community. To this end, we present in Fig. <ref type="figure" target="#fig_7">10</ref>, the fraction of RingCTs after its launch. In the fourth day after the launch, the percentage of RingCTs rose as high as 70%. But, in the following two weeks, it remained less than 62%. Looking at the last few days, it appears that RingCTs got well accepted by the Monero users. Indeed, the last day saw a record value of 98%. This is an encouraging result showing the acceptance of RingCTs and hence consolidates our argument that it can be made obligatory. As for Attack II, it is hard to prevent it completely at the protocol level due to the one-time output addresses. One way to reduce output merging is to warn users when they attempt to do so. Warning can be displayed either when a user creates 2 or more outputs paying the same recipient or when he merges 2 or more outputs from the same transaction. This wallet level solution is certainly not the ideal fix. As a modified version of Attack II can subvert this mitigation measure. To see this, imagine a more general version of Attack II that also considers merging of outputs stemming from different transactions within the same block. We reiterate that information leakage is very hard (if not impossible) to be absolutely prevented without a NIZK based approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Mitigating Threat from Attack III</head><p>As we have seen the current sampling strategy for mix-ins fails drastically in preventing temporal analysis. There are two possible strategies towards mitigating the ensuing risks: (a) mimic users' spending behavior or, (b) force mix-ins to be picked according to some "unknown" distribution. Solution (b) can be achieved by employing primitives such as ORAM <ref type="bibr" target="#b6">[8]</ref> that will provide cryptographic guarantees on the impossibility to learn information from a passive analysis of the blockchain. However, their applicability to distributed cryptocurrencies seems to require either a trusted party <ref type="bibr" target="#b8">[10]</ref> or NIZK proof. We consider them to be important future work. Here, we will focus on (a).</p><p>We use the results of Attack I to extract information on when an output (in terms of block height) is created and when it gets spent. We then compute the difference of the two block heights. Since a coinbase output is locked for 60 blocks, its block difference can only be greater than or equal to 60. There is no such restriction on non-coinbase outputs though. Results from Attack I also include a considerable fraction of coinbase outputs (28.9%). This further motivates studying them independently of non-coinbase outputs. We first observe that users' spending habits can be roughly grouped into four distinct categories characterized by the difference in the block heights (Cf. Table <ref type="table" target="#tab_3">3</ref>). As we see, the percentage of outputs that are spent within the first 1000 blocks is larger among coinbase outputs than among non-coinbase outputs. As a general conclusion, coinbase outputs have a larger probability of being spent quickly once unlocked.</p><p>The actual frequency distribution on the entire population is shown in Fig. <ref type="figure" target="#fig_8">11a</ref>. The curve clearly shows three distinct clusters identified by the block differences: [0, 10], ]10, 100] and &gt;100. Figure <ref type="figure" target="#fig_8">11b</ref> presents a breakdown according to coinbase and non-coinbase. We observe that both the curves have a long tail starting from a difference of 1000 blocks. In order to mitigate the risks of temporal analysis, we propose replacing the existing sampling method to choose mix-ins. In fact, a better sampling strategy would consist in sampling from the distribution identified by the probability density functions of Fig. <ref type="figure" target="#fig_8">11b</ref>. The sampling distribution should moreover depend on whether the output being spent is coinbase or non-coinbase. We estimate the probability density function (PDF) using descdist() function of the R statistical tool. For each of the dataset, the underlying heuristic based on the Cullen and Frey graph suggests that the PDF is closest to the gamma distribution (Γ (α, β)) with different parameters α and β. For coinbase outputs, the estimated parameters are α = 0.24, β = 7.97 × 10 -6 , while for non coinbase outputs, the estimated parameters are α = 0.27, β = 5.15 × 10 -6 .</p><p>Hence, we hereby recommend Monero developers to employ the corresponding PDFs. However, it should be noted that choosing any static distribution renders the system insensitive to social and economic factors that may influence users' spending behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Responsible Disclosure and Feedback</head><p>As a part of responsible disclosure, we shared our findings both with the Monero development team and the general community. We received varied feedback through diverse channels including but not limited to e-mail, Twitter and Reddit. Monero development team found our result on Attack II insightful: "We hadn't had it [Attack II] accompanied by a model before, i.e., we've been approaching the problem more generally. It's NOT trivially solvable. Because most users will receive additional outputs and need to combine them; the combination betrays a small amount of correlation data."</p><p>Our findings on Attack II further resulted into the creation of a Github issue on Monero's project repository. The issue was initially termed as a bad user behavior, where, a user merges several outputs together falsely believing it to bring more privacy. The proposed fix was to develop a wallet-based warning system to dissuade users from doing so. The limitations of this mitigation strategy, in particular, the possibility of eventual modifications of the wallet software were also discussed. Later, the issue was identified as non-trivial to solve as output merging is apparently done deliberately by pools and exchanges who want to break up their outputs so payments can be made with locking less change.</p><p>Our work has also led to discussions on several Reddit threads accumulating over 50 comments from the Monero community including the development team. Our results on Attack III has also catalyzed the ongoing work on developing better mitigation strategies. Several mitigation measures have been discussed: (1) Sampling mix-ins using our proposed approach of taking into account actual spending behavior, (2) Sampling mix-ins using Zipf distribution, (3) Developing a dynamic sampling procedure, (4) Wallet-specific sampling procedure, etc. The ensuing limitations have also been discussed at length. For instance, a dynamic sampling procedure being costly; wallet-specific sampling leading to potential fingerprinting, etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Our work is motivated by two prior unpublished works on the privacy analysis of Monero: MRL-001 <ref type="bibr" target="#b13">[17]</ref> and MRL-004 <ref type="bibr" target="#b9">[11]</ref>. Both of these have been authored by Monero researchers and developers. The two prior works report on the theoretical possibility of mounting the attacks studied in this paper. However, the impact of the attacks in real usage scenario was unknown. Our work fills this gap by quantifying the existing and the past threat on the blockchain data. It provides a data backed analysis that shows (1) The risks of using no mix-in in practice, (2) How often the risks may arise? (3) How far the cascade effect can propagate? and (4) How the impact has evolved over time? For instance, our work quantifies the severity of cascade effect: it propagates up to 153 mix-ins over a span of three years.</p><p>Since the prior works were theoretical and were not backed by real usage behavior, the developers decided on employing a triangular distribution to sample the mix-ins expecting it to mitigate Attack III. Our work shows that a triangular distribution fails drastically in mitigating the attack. This further highlights the difference between the prior work and the new results put forth by our work. Moreover, our work studies the spending habit of users and empirically provides the desired probability distribution function. Our results can be used to improve the current sampling method.</p><p>Finally, we are aware of a concurrent work with similar results <ref type="bibr" target="#b11">[14]</ref>. The work studies Attack I and Attack III and a countermeasure of Attack III based on real spending behavior. Our work is different from <ref type="bibr" target="#b11">[14]</ref> in three contributions: (1) Attack II is not studied in <ref type="bibr" target="#b11">[14]</ref> (2) Mitigation for Attack III does not consider coinbase and non-coinbase outputs separately. This may result in a bias as coinbase and non-coinbase outputs have different spending behavior (3) Our network and usage statistics reveal new potential privacy issues in Monero (unknown in <ref type="bibr" target="#b11">[14]</ref>) that 7.8% of users are unique in the way they choose their anonymity-set size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>This work performs a passive blockchain analysis of Monero and evaluates the efficacy of several attacks on its untraceability guarantees. These attacks are effective as around 88% of inputs are rendered traceable. We also found some traceability results on RingCTs and finally discuss a better strategy (than the one currently employed) to mitigate temporal analysis. Our results hereby reaffirm the weaknesses of anonymity-set size as a privacy metric when implemented in practice. As a future work, we aim to study traceability under active attacks on Monero, where the adversary can take part in the protocol to undermine users' privacy. We are further investigating the use of cryptographic primitives such as zero knowledge proofs and ORAM to strengthen the traceability guarantees beyond the current solutions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. (a) Average number of inputs and outputs in a transaction. The x-axis represents the number of weeks after the launch of Monero. (b) Average number of inputs and outputs in a RingCT. The x-axis represents the number of days after the launch of RingCTs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Attack I: cascade effect due to zero mix-ins. Each transaction has only one input (left of the transaction) and one output (on the right). The number of mix-ins used increases from left to right. Dashed lines represent the input keys identified as a mix-in. Lines in bold are the real input keys being spent.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>0 1 2 3 4 5 6 7 Fig. 4 .</head><label>74</label><figDesc>Fig. 4. Results on Attack I: the percentage of traceable inputs as a function of the number of mix-ins.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Results on traceability using Attack I. (a) The cumulative percentage of traceable inputs as a function of the number of mix-ins. (b) The evolution of the percentage of traceable inputs over time. In the x-axis, we have the number of weeks after the launch of Monero.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Attack II. Tx-a is a transaction with one input that uses one mix-in. It has two outputs O1 and O2. Tx-b is another transaction that has two inputs I1 and I2. Each input again has one mix-in. Both I1 and I2 include outputs of Tx-a. According to Attack II, the input keys O1 and O2 represented using the dashed line are the real keys being spent in Tx-b.</figDesc><graphic coords="11,133.98,191.33,201.52,64.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .-</head><label>8</label><figDesc>Fig. 8. (a) Result of employing Attack II on non-RingCTs. The x-axis presents all the observed number of destination transactions for a given source transaction. In y-axis, we show the number of source transactions that admit a given number of destination transactions. The number is given as a fraction of 409,601 non-RingCT source transactions. (b) Result of employing Attack II on RingCTs. The x-axis presents all the observed number of destination transactions for a given source transaction. In y-axis, we show the number of source transactions that admit a given number of destination transactions. The number is given as a fraction of 636 RingCT source transactions. (c) Overall observed percentage of TP, FP and UP.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Observed percentage of TP, FP and UP as a function of number of mix-ins. The result corresponds to non-RingCTs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. The percentage of RingCTs among all transactions submitted in a day. The plot only shows data for the days after the launch of RingCT on January 10 th 2017.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Spending habit of Monero users. In x-axis, we have the difference between the block height where the output was created and the block height where the output was spent. It measures the duration for which the output remained unspent. In y-axis, we plot the fraction of outputs that share the same difference. Only 1 out of every 100 data points are shown. (a) Combined result on the entire dataset including both coinbase and non-coinbase outputs. (b) Separate results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Cumulative frequency of the number of mix-ins (only the first 11 are shown). The last column counts the number of instances where it was possible to choose a higher number of mixins.</figDesc><table><row><cell cols="2">#Mix-ins Freq</cell><cell>Cumul.</cell><cell>Higher #mix-ins</cell></row><row><cell></cell><cell></cell><cell cols="2">freq. (in %) possib. (in %)</cell></row><row><cell>0</cell><cell cols="2">12148623 65.9</cell><cell>10434988 (85.9)</cell></row><row><cell>1</cell><cell>707788</cell><cell>69.7</cell><cell>701252 (99.1)</cell></row><row><cell>2</cell><cell cols="2">2908304 85.5</cell><cell>2902246 (99.8)</cell></row><row><cell>3</cell><cell cols="2">1313596 92.6</cell><cell>1313530 (99.9)</cell></row><row><cell>4</cell><cell>709686</cell><cell>96.5</cell><cell>709681 (99.9)</cell></row><row><cell>5</cell><cell>141800</cell><cell>97.3</cell><cell>141797 (99.9)</cell></row><row><cell>6</cell><cell>365720</cell><cell>99.2</cell><cell>365718 (99.9)</cell></row><row><cell>7</cell><cell>9616</cell><cell>99.3</cell><cell>9614 (99.9)</cell></row><row><cell>8</cell><cell>8593</cell><cell>99.3</cell><cell>8593 (100)</cell></row><row><cell>9</cell><cell>5369</cell><cell>99.4</cell><cell>5366 (99.9)</cell></row><row><cell>10</cell><cell>76524</cell><cell>99.8</cell><cell>76523 (99.9)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 .</head><label>2</label><figDesc>TP: True Positive and FP: False Positive. Breakdown of traceable inputs obtained using Attack I. In the first row, we show the total number of traceable inputs that employ uniform distribution and the variant of triangular distribution (hence *). The second and third row show the true and false positive rate observed on Attack III.</figDesc><table><row><cell cols="2">#Inputs Uniform dist.</cell><cell>Triangular dist.  *</cell></row><row><cell></cell><cell>(until April 4, 2015)</cell><cell>(since April 5, 2015)</cell></row><row><cell></cell><cell>9885810</cell><cell>6174801</cell></row><row><cell>TP</cell><cell>99.5%</cell><cell>96%</cell></row><row><cell>FP</cell><cell>0.5%</cell><cell>4%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>Percentage of outputs that remain unspent with a given block interval. The percentage on coinbase is given over coinbase outputs only. Similarly for non-coinbase.</figDesc><table><row><cell cols="3">Block difference Percentage of outputs</cell><cell></cell></row><row><cell></cell><cell cols="3">Coinbase Non-coinbase Overall</cell></row><row><cell>[0, 10]</cell><cell>0%</cell><cell>0.2%</cell><cell>0.17%</cell></row><row><cell>]10, 100]</cell><cell>11.1%</cell><cell>8.4%</cell><cell>9.2%</cell></row><row><cell>]100, 1000]</cell><cell>42.6%</cell><cell>22.6%</cell><cell>28.4%</cell></row><row><cell>&gt;1000</cell><cell>46.3</cell><cell>68.8%</cell><cell>62.2%</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Transactions that do not create any new coin. The opposite of coinbase transactions that create new coins.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Height is defined as the number of blocks preceding a particular block on the blockchain.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. Authors would like to thank the anonymous reviewers for their feedback. Amrit Kumar was supported by the research grants R-252-000-560-112 and R-252-000-565-720 from MOE Singapore.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Zerocash: decentralized anonymous payments from bitcoin</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ben-Sasson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chiesa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Miers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tromer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Virza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE Symposium on Security and Privacy</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-05">2014. 18-21 May 2014. 2014</date>
			<biblScope unit="page" from="459" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://bit.ly/2pVnaJb" />
		<title level="m">Meet the Best Performing Digital Currency of 2016: Monero</title>
		<imprint>
			<date type="published" when="2017-04-22">22 Apr 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Blind signatures for untraceable payments</title>
		<author>
			<persName><forename type="first">D</forename><surname>Chaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology: Proceedings of CRYPTO 1982</title>
		<meeting><address><addrLine>Santa Barbara, California, USA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>Plenum Press</publisher>
			<date type="published" when="1982-08">August 1982. 1982</date>
			<biblScope unit="page" from="199" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName><surname>Dash</surname></persName>
		</author>
		<ptr target="https://www.dash.org/" />
		<imprint>
			<date type="published" when="2017-04-07">2017. 7 Apr 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Bitcoin transaction graph analysis</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fleder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Kester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pillai</surname></persName>
		</author>
		<idno>CoRR abs/1502.01657</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Traceable ring signature</title>
		<author>
			<persName><forename type="first">E</forename><surname>Fujisaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Suzuki</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-71677-8_13</idno>
	</analytic>
	<monogr>
		<title level="m">PKC 2007</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Okamoto</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4450</biblScope>
			<biblScope unit="page" from="181" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Software protection and simulation on oblivious RAMs</title>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ostrovsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="431" to="473" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">E</forename><surname>Jedusor</surname></persName>
		</author>
		<ptr target="https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.txt" />
		<imprint>
			<date type="published" when="2016-04-07">2016. 7 Apr 2017</date>
			<publisher>Mimblewimble</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">OblivP2P: an oblivious peer-to-peer content sharing system</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Moataz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tople</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Saxena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">25th USENIX Security Symposium, USENIX Security</title>
		<meeting><address><addrLine>Austin, TX, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016-08">2016. 10-12 August 2016. 2016</date>
			<biblScope unit="page" from="945" to="962" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Monero Core Team: Improving obfuscation in the CryptoNote protocol</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mackenzie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Noether</surname></persName>
		</author>
		<idno>MRL-0004</idno>
	</analytic>
	<monogr>
		<title level="j">Research Bulletin</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
		<respStmt>
			<orgName>Monero Research Lab</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A fistful of bitcoins: characterizing payments among men with no names</title>
		<author>
			<persName><forename type="first">S</forename><surname>Meiklejohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pomarole</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Levchenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mccoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 Internet Measurement Conference, IMC 2013</title>
		<meeting>the 2013 Internet Measurement Conference, IMC 2013<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013-10-25">23-25 October 2013. 2013</date>
			<biblScope unit="page" from="127" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Moeser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Narayanan</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/1704.04299" />
		<title level="m">An Empirical Analysis of Linkability in the Monero Blockchain</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">S</forename><surname>Noether</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mackenzie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monero research lab: ring confidential transactions. Ledger</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">A note on chain reactions in traceability in CryptoNote 2.0. Research Bulletin MRL-0001</title>
		<author>
			<persName><forename type="first">S</forename><surname>Noether</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Noether</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mackenzie</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014-09">September 2014</date>
		</imprint>
		<respStmt>
			<orgName>Monero Research Lab</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><surname>Poloniex</surname></persName>
		</author>
		<ptr target="https://poloniex.com" />
		<imprint>
			<date type="published" when="2017-04-22">22 Apr 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An analysis of anonymity in the bitcoin system</title>
		<author>
			<persName><forename type="first">F</forename><surname>Reid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Harrigan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Third International Conference on Privacy, Security, Risk and Trust (PAS-SAT) and 2011 IEEE Third International Conference on Social Computing (Social-Com)</title>
		<meeting><address><addrLine>Boston, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011-09-11">2011. 2011. 9-11 October 2011. 2011</date>
			<biblScope unit="page" from="1318" to="1326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">How to leak a secret</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tauman</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-45682-1_32</idno>
	</analytic>
	<monogr>
		<title level="m">ASIACRYPT 2001</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Boyd</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2248</biblScope>
			<biblScope unit="page" from="552" to="565" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Quantitative analysis of the full bitcoin transaction graph</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-39884-1_2</idno>
	</analytic>
	<monogr>
		<title level="m">FC 2013</title>
		<editor>
			<persName><forename type="first">A.-R</forename><surname>Sadeghi</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">7859</biblScope>
			<biblScope unit="page" from="6" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">CryptoNote v2.0</title>
		<author>
			<persName><forename type="first">N</forename><surname>Van Saberhagen</surname></persName>
		</author>
		<ptr target="https://github.com/monero-project/monero/commit/f" />
		<imprint>
			<date type="published" when="2013-10-14">October 2013. 14 Apr 2017</date>
			<biblScope unit="page">23</biblScope>
			<pubPlace>CryptoNote</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>2e8348be0c91c903e68ef582cee687c52411722</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Zerocoin Electric Coin Company: Zcash</orgName>
		</author>
		<ptr target="https://z.cash/" />
		<imprint>
			<date type="published" when="2017-04-07">2017. 7 Apr 2017</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
