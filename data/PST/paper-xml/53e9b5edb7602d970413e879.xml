<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">CSP Gaps and Reductions in the Lasserre Hierarchy</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Madhur</forename><surname>Tulsiani</surname></persName>
							<email>madhurt@cs.berkeley.edu</email>
							<affiliation key="aff0">
								<address>
									<settlement>Bethesda</settlement>
									<region>Maryland</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">U</forename><forename type="middle">C</forename><surname>Berkeley</surname></persName>
							<affiliation key="aff0">
								<address>
									<settlement>Bethesda</settlement>
									<region>Maryland</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">CSP Gaps and Reductions in the Lasserre Hierarchy</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E741686FB2C94EA1251C4B2058F3AF8D</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity Algorithms</term>
					<term>Theory semidefinite programming</term>
					<term>integrality gaps</term>
					<term>constraint satisfaction</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We study integrality gaps for SDP relaxations of constraint satisfaction problems, in the hierarchy of SDPs defined by Lasserre. Schoenebeck [23]  recently showed the first integrality gaps for these problems, showing that for MAX k-XOR, the ratio of the SDP optimum to the integer optimum may be as large as 2 even after Ω(n) rounds of the Lasserre hierarchy. We show that for the general MAX k-CSP problem, this ratio can be as large as 2 k /2k -when the alphabet is binary and q k /q(q -1)k -when the alphabet size a prime q, even after Ω(n) rounds of the Lasserre hierarchy.</p><p>We also explore how to translate gaps for CSP into integrality gaps for other problems using reductions, and establish SDP gaps for Maximum Independent Set, Approximate Graph Coloring, Chromatic Number and Minimum Vertex Cover. For Independent Set and Chromatic Number, we show integrality gaps of n/2 O( √ log n log log n) even after 2 Ω( √ log n log log n) rounds. In case of Approximate Graph Coloring, for every constant l, we construct graphs with chromatic number Ω(2 l/2 /l 2 ), which admit a vector l-coloring for the SDP obtained by Ω(n) rounds. For Vertex Cover, we show an integrality gap of 1.36 for Ω(n δ ) rounds, for a small constant δ.</p><p>The results for CSPs provide the first examples of Ω(n) round integrality gaps matching hardness results known only under the Unique Games Conjecture. This and some additional properties of the integrality gap instance, allow for gaps for in case of Independent Set and Chromatic Number which are stronger than the NP-hardness results known even under the Unique Games Conjecture.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Semidefinite Programming (SDP) hierarchies, such as the ones defined by Lovász and Schrijver <ref type="bibr" target="#b22">[21]</ref> and Lasserre <ref type="bibr" target="#b20">[19]</ref> provide a nice way to formalize the following question: what is the best approximation that can be achieved for a problem using "stronger and stronger" semidefinite programs? Since SDPs are known to provide some of the best known approximation algorithms for many optimization problems, this is a natural question to consider.</p><p>Starting from a basic integer program for the combinatorial problem, in which variables take values only 0 and 1, these hierarchies define a sequence of SDP relaxations (known as "rounds" or "levels" of the hierarchy) for the problem, which are increasingly more constrained. A program obtained by r rounds can be solved in n O(r) time and hence algorithms obtained by a constant number of rounds run in polynomial time. Also, on a starting integer program with n variables, the SDP obtained by n rounds of the hierarchy gives the true optimum of the combinatorial problem (but may take exponential time to solve).</p><p>Most currently known SDP based algorithms can be derived by a constant number of rounds of the Lasserre hierarchy (which is the stronger of the two -see <ref type="bibr" target="#b21">[20]</ref> for a comparison). It was also shown by Chlamtac and Singh <ref type="bibr">[8]</ref>, that for some problems, such as Hypergraph Independent Set, the approximation quality improves as one considers more and more rounds of the Lasserre hierarchy.</p><p>It is then of interest to quantify the tradeoff between approximation achieved by the SDP and the number of rounds of the hierarchy. The quality of approximation (for say, a maximization problem) achieved by the SDP is measured by the ratio of SDP optimum to the optimum of the original combinatorial problem, which is known as the integrality gap<ref type="foot" target="#foot_0">1</ref> of the SDP. Lower bounds showing that the integrality <ref type="bibr" target="#b2">[2]</ref> q k q(q-1)k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ω(n)</head><p>Maximum Independent Set n 2 (log n) 3/4+ <ref type="bibr" target="#b18">[17]</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Problems studied and results</head><p>Taking the analogy of the computational model a bit further, we study if integrality gaps for one problem can be used to show an integrality gap for another problem using reductions (see proof overview for the structure of reductions for integrality gaps). We remark that reductions between integrality gaps were considered before, for example by <ref type="bibr" target="#b1">[1]</ref> and <ref type="bibr" target="#b24">[23]</ref> -we merely show how to do somewhat more complicated ones. We use the arguments from known reductions in hardness of approximation literature, which usually start from the hardness of a constraint satisfaction problem and use it to conclude the hardness of another problem. To this end, we study the following problems:</p><p>1. MAX k-CSP: This is the problem of finding an assignment to binary variables x1, . . . , xn to satisfy the maximum number of constraints in a given set C1, . . . , Cm.</p><p>Each constraint is a boolean function of at most k of the variables and is said to be satisfied when it attains value 1. When the domain of the variables is is allowed to be of size q, we denote the problem by MAX k-CSPq.</p><p>Charikar, Makarychev and Makarychev <ref type="bibr" target="#b6">[6]</ref> give an SDP based algorithm for this problem which provably satisfies a ck/q k fraction of the constraints satisfied by the optimal assignment, for a constant c &gt; 0.44. It was shown by Arora, Alekhnovich and Tourlakis <ref type="bibr" target="#b1">[1]</ref> that the integrality gap for the MAX k-SAT problem, which is a special case of MAX k-CSP, remains 2 k /(2 k -1) even after Ω(n) rounds of the Lovász-Schrijver hierarchy. Schoenebeck <ref type="bibr" target="#b24">[23]</ref> recently showed a gap of factor 2 for MAX k-XOR for Ω(n) and also strengthened the MAX k-SAT results for Ω(n) rounds of Lasserre.</p><p>2. Maximum Independent Set: This is the problem of finding the largest set of vertices in a graph, not containing any edges. The best known approximation algorithm by Boppana and Haldórsson <ref type="bibr" target="#b5">[5]</ref> achieves an approxima-</p><formula xml:id="formula_0">tion ratio of O " n (log n) 2 "</formula><p>. Also, Feige <ref type="bibr" target="#b12">[12]</ref> showed that the integrality gap for the Lovász ϑ-function, which is an SDP relaxation equivalent to 1 round of Lasserre, is at least n/2 c √ log n for some constant c.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Approximate Graph</head><p>Coloring: This is the problem of coloring a graph (with different colors for adjacent vertices) with minimum number of colors, when the graph is known to be colorable with a small constant number of colors. The best known algorithm, due to Chlamtac <ref type="bibr" target="#b7">[7]</ref> colors a 3-colorable graph with at most n 0.2072 colors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>Chromatic Number: This is the general problem of finding the minimum number of colors for coloring a graph when no guarantee as the one above is given. For this problem, Feige, Langberg and Schechtman <ref type="bibr" target="#b15">[14]</ref> show that a gap can be as large as n/polylog(n) for an SDP relaxation which is weaker than 1 round of Lasserre.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Minimum Vertex Cover:</head><p>In this problem, it is required to find the smallest possible subset of vertices in a graph, which touches every edge. Integrality gap of a factor 7/6 for Ω(n) rounds of the Lovász-Schrijver SDP hierarchy were shown by Schoenebeck, Trevisan and Tulsiani <ref type="bibr" target="#b25">[24]</ref>, and later strengthened to the Lasserre hierarchy by Schoenebeck. An integrality gap of factor 2 -was also shown by for Ω( p log n/log log n) rounds of the Lovász-Schrijver hierarchy by Georgiou et. al. <ref type="bibr" target="#b16">[15]</ref>. We prove strong integrality gaps for MAX k-CSP and develop techniques to carry out PCP based reductions between SDPs, to obtain gaps for the other problems above. A summary of the known NP-hardness results and the integrality gap results we obtain, is presented in Table <ref type="table" target="#tab_0">1</ref>.</p><p>Remark 1.1. It was pointed out by Luca Trevisan that for Maximum Independent Set and Chromatic Number the integrality gap can be shown to be at most n/t after t rounds. Hence, the number of rounds in the above results for these problems is optimal up to a polynomial.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PRELIMINARIES AND NOTATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Constraint Satisfaction Problems</head><p>For an instance of Φ MAX k-CSPq, we denote the variables by {x1, . . . , xn}, their domain {0, . . . , q -1} by [q] and the constraints by C1, . . . , Cm. Each constraint is a function of the form Ci : [q] T i → {0, 1} depending only on the values of the variables in an ordered tuple<ref type="foot" target="#foot_1">2</ref> Ti with |Ti| ≤ k. We denote the number of constraints satisfied by the best assignment by OPT(Φ).</p><p>For a given set S ⊆ [n], we denote by [q] S the set of all mappings from the set S to [q]. In context of variables, these mappings can be understood as partial assignments to a given subset of variables. For α ∈ [q] S , we denote its projection to S ⊆ S as α(S ). Also, for α1</p><formula xml:id="formula_1">∈ [q] S 1 , α2 ∈ [q] S 2 such that α1(S1 ∩ S2) = α2(S1 ∩ S2), we denote by maximize X i∈V ˛U{i} ˛2 subject to ˙U{i} , U {j} ¸= 0 ∀ (i, j) ∈ E US 1 , US 2 = US 3 , US 4 ∀ S1 ∪ S2 = S3 ∪ S4 US 1 , US 2 ∈ [0, 1] ∀S1, S2 |U ∅ | = 1 maximize m X i=1 X α∈[q] T i Ci(α) ˛V(T i ,α) ˛2 subject to ˙V(S 1 ,α 1 ) , V (S 2 ,α 2 ) ¸= 0 ∀ α1(S1 ∩ S2) = α2(S1 ∩ S2) ˙V(S 1 ,α 1 ) , V (S 2 ,α 2 ) ¸= ˙V(S 3 ,α 3 ) , V (S 4 ,α 4 ) ¸∀ S1 ∪ S2 = S3 ∪ S4, α1 • α2 = α3 • α4 X j∈[q] ˛V({i},j) ˛2 = 1 ∀i ∈ [n] ˙V(S 1 ,α 1 ) , V (S 2 ,α 2 ) ¸≥ 0 ∀S1, S2, α1, α2 ˛V(∅,∅) ˛= 1</formula><p>Figure <ref type="figure">1</ref>: Lasserre SDPs for Maximum Independent Set (above) and MAX k-CSPq (below). For the t-round SDP, constraints are imposed on sets of size at most t. α1 • α2 the assignment over S1 ∪ S2 defined by α1 and α2. Hence, (α1 • α2)(j) equals α1(j) for j ∈ S1 and α2(j) for j ∈ S2 \ S1. We only use the notation α1 • α2 when it is well defined for α1, α2, S1, S2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Lasserre hierarchy</head><p>The SDP given by t rounds of the Lasserre hierarchy for a 0/1 integer program, introduces a new variable for every product of upto t original variables. We first consider the program for Maximum Independent Set. Given a graph G = (V, E), the integer program would have a variable Xi for each i ∈ V with Xi = 1 if i is in the independent set and 0 otherwise. We would enforce that XiXj = 0 for all (i, j) ∈ E. To obtain the Lasserre relaxation, we consider an integer program which has a variable XS for each S ⊆ V, |S| ≤ t where the intended solution in XS = 1 iff all vertices in S are in the independent set. We can then add the constraint that the product XS 1 • XS 2 must only depend on S1 ∪ S2.</p><p>Replacing the integer variables XS by vectors US gives the semidefinite relaxation shown in Figure <ref type="figure">1</ref>. The vector U ∅ can be thought of as the constant 1.</p><p>Similarly, we can write down a relaxation for the MAX k-CSPq problem. Note that an integer solution to the problem will be given by a single mapping α0 ∈ [q] [n] . Using this, we can define 0/1 variables X (S,α) for each S ⊆ [n] such that |S| ≤ t and α ∈ [q] S . The intended solution is X (S,α) = 1 if α0(S) = α and 0 otherwise. Replacing them by vectors gives the SDP relaxation. Note that we denote the vectors corresponding to a set of variables and a partial assignment by V and a vector for a set (as above) by U to avoid confusion.</p><p>The first constraint says that if X (S 1 ,α 1 ) and X (S 2 ,α 2 ) correspond to contradicting assignments, then only one of them should be 1. The second says that X (S 1 ,α 1 ) • X (S 2 ,α 2 ) should depend only on the joint assignment defined by α1 and α2 over S1 ∪ S2. The third one simply says that each variable of the CSP must get exactly one value.</p><p>For a graph G, we denote the optimum of the independent set SDP by FRAC(G), and for the CSP instance Φ we denote it by FRAC(Φ). The integrality gap of both the SDPs is then given by FRAC(Φ)/OPT(Φ). Note that according to our convention, the integrality gap is always at least 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">OVERVIEW OF PROOFS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">CSP Gaps</head><p>For proving integrality gaps for CSPs, our starting point is the result by Schoenebeck <ref type="bibr" target="#b24">[23]</ref>. Even though the result is stated as an integrality gap for MAX-k-XOR, it is useful to view the argument as having the following two parts:</p><p>1. Given a system of equations over F2 with no "small contradictions", it shows how to construct vectors V (S,α) (satisfying consistency conditions), such that for every set S of variables with |S| ≤ t, ˛V(S,α) ˛&gt; 0 if and only if α satisfies all equations involving variables from S.</p><p>2. If one considers a random instance Φ of a CSP, with every constraint being a linear equation on at most k variables (MAX k-XOR), then the system obtained by combining them has no "small contradictions".</p><p>It can be shown that the first step implies FRAC(Φ) = m (m is the number of constraints) even after t rounds. On the other hand, in a system of equations with each chosen randomly, only about half are satisfiable by any assignment. Hence, one gets an integrality gap of factor 2, for t rounds.</p><p>Here t depends on the size of "small contradictions" for step 2 and can be chosen to be Ω(n). We note that every constraint does not have to be a single equation for the second step to work. In particular, we consider each constraint to be of the form A • (x1, . . . , x k ) T = b for some A ∈ (F2) d×k , which is the same for all constraints and b ∈ F d 2 . The constraint is said to be satisfied only when all these d equations are satisfied. Now, if A is full rank, then one can show that in a random CSP instance Φ, only about 1/2 d fraction of the constraints are satisfiable by any assignment.</p><p>Note that all equations obtained by combining all the ones in the constraints are no longer independent (the ones in each constraint are correlated because of a fixed choice of A). However, one can still show that if A satisfies some extra properties, like any linear combination of the d equations given by A involves at least 3 variables (i.e. A is the generator matrix of a distance 3 code over F2), then the conclusion in the second step can still be made. Step 1 still allows us to conclude that FRAC(Φ) = m, thereby obtaining an integrality gap of factor 2 d . Optimizing over d gives the claimed results for MAX k-CSP. We also generalize the first step, to work for equations over arbitraty prime fields Fq, to obtain a gap for MAX k-CSPq.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Reductions</head><p>Consider a reduction from a constraint satisfaction problem, to another problem, say Maximum Independent Set for concreteness. Starting from a CSP instance Φ, this reduction creates a graph GΦ and one needs to argue the following two things:</p><p>• Completeness: If Φ has an assignment satisfying many constraints, then GΦ has a large independent set.</p><p>• Soundness: If Φ has no good assignment, then GΦ has no large independent sets.</p><p>If Φ is an integrality gap instance for an SDP, then Φ has no good assignment but has a good SDP solution. Showing that GΦ is an integrality gap instance, amounts to making the following two claims simultaneously:</p><p>• Vector Completeness: Since Φ has a good SDP solution, so does GΦ.</p><p>• Soundness: Since Φ has no good assignment, GΦ has no large independent sets.</p><p>Notice that if we are using a known NP-hardness reduction, then the soundness condition is already available. Showing an integrality gap reduces to generalizing "completeness" to "vector completeness". We do this by giving various transformation, that transform an SDP solution for Φ, into one for the problem we are reducing to.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Maximum Independent Set</head><p>The transformations for independent set are conceptually the simplest and form a basis for our other results as well. We consider a graph GΦ obtained from Φ (called the FGLSS graph), which has vertices of the form (Ci, α), where Ci is a constraint and αi is a partial assignment to variables in Ci. Vertices corresponding to contradicting assignments are connected.</p><p>Since Φ has an SDP solution for t rounds of Lasserre (say for a large t), we have vectors V (S,α) where S is a set of at most t variables and α is a partial assignment to those variables. We need to produce vectors US where S is a set of vertices in the FGLSS graph. However, a set of vertices is simply a set of constraints and partial assignments to all the variables involved. Let S be the set of all variables in all the constraints in S and let α be the joint partial assignment defined by all vertices in S (assuming for now, that no partial assignments in S contradict). We take US = V (S ,α ) .</p><p>The reduction (by <ref type="bibr" target="#b3">[3]</ref>) proceeds by taking products of the graph GΦ to get G r Φ and randomly sampling a certain vertexinduced subgraph. It turns out to be sufficient however, to create an SDP solution for G r Φ . Each vertex in G r Φ is an r-tuple of vertices in GΦ with an edge between two r-tuples if vertices in any of the r coordinates are adjacent in GΦ. A set S of vertices in G r Φ is a set of r-tuples and we consider sets S1, . . . , Sr where Sj is the projection of S to the jth coordinate. For G r Φ , we simply take U S = US 1 ⊗ . . . ⊗ US r . This corresponds to the intuition that every independent set in G r Φ corresponds to picking one independent set in each copy of GΦ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Approximate Graph Coloring and Chromatic Number</head><p>To obtain a gap for Approximate Graph Coloring, we modify the FGLSS reduction slightly. The gap for Chromatic Number is derived from this by taking graph products and tensoring vectors as before. The modified reduction below is in the spirit of randomized PCPs of Feige and Killian <ref type="bibr" target="#b14">[13]</ref>.</p><p>Consider an instance Φ when the constraints are known to be of the type A • (x1, . . . , x k ) T = b and consider GΦ as before. Supposing that we had an assignment satisfying all constraints, this would give a large independent set. For the graph to be l colorable, we need l independent sets covering the graph. Let l be the nullity of the matrix A and consider the vectors w1, . . . , w l such that A • w l = 0. If α is a partial assignment to variables (x1, . . . , x k ) which satisfies the above constraint, then so is α + wj for 1 ≤ j ≤ l.</p><p>The problem is this does not give us an independent set. If x1, . . . , xn was an assignment, and we looked at the restriction of this assignment to every constraint and added wj to every restriction, this does not give a consistent assignment to x1, . . . , xn. However, this is an independent set if we slightly modify the FGLSS graph. Every constraint Ci is on an ordered tuple Ti of vertices. For assignment α1 to Ti i and α2 to Ti 2 , we connect them only if α1, α2 differ on a variable in the same coordinate in Ti 1 , Ti 2 . One can then verify that the transformation above takes us from one independent set to another. Changing the graph may affect the soundness, but it is possible to choose Φ so that the resulting graph still has no large independent sets.</p><p>Using this intuition, we now need to produce a vector every for small set of vertices and every assignment of colors to these vertices. For a vertex (Ci, α) in GΦ, we take the vectors corresponding to the l colors as V (T i ,α+w 1 ) , . . . , V (T i ,α+w l ) . The vectors for sets can be created similarly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Minimum Vertex Cover</head><p>For Minimum Vertex Cover, we use the reduction by Dinur and Safra <ref type="bibr" target="#b9">[9]</ref>, which is a little complicated to describe. However, an interesting point comes up in analyzing a (small) step which is not "local", as opposed to all the steps in the previous reductions. The step is a simple Chernoff bound in the completeness part, showing how large independent sets intersect certain other sets of vertices in a graph. Generalizing this to "vector-completeness" seems to require analyzing the "local distributions" defined by the vectors, and combining the bounds globally using properties of the SDP solution. Another component of the proof is a transformation of vectors for long-code based reductions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">GAPS FOR CSPS</head><p>Let A ∈ (Fq) d×k be a matrix with linearly independent rows. An instance of MAX k-CSP(PA) is specified by constraints C1, . . . , Cm where each constraint Ci is a system of linear equations over Fq of the form A</p><formula xml:id="formula_2">• (xi 1 . . . xi k ) T = b (i) .</formula><p>In this section, we prove an integrality gap for general instances of MAX k-CSP(PA) when A is the generator matrix of a distance 3 code (i.e. all linear combinations of the rows of A contain at least 3 non-zero entries). Specializing these to Hamming codes will then give the claimed results for MAX k-CSPq.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Lasserre vectors for linear equations</head><p>We shall need a generalization of a theorem by Schoenebeck <ref type="bibr" target="#b24">[23]</ref> (proved in the full version), which allows us to construct CSP vectors corresponding to a system of linear equations. We denote an equation in Fq over variables x1, . . . , xn by ω • x = r where ω ∈ F n q is a vector of coefficients and r ∈ F n q .</p><p>-→ 0 denote the vector with all coefficients 0. For a system of linear equations Λ, let Res(Λ, t) denote the new system in which each equation involves at most t variables, and can be derived by a linear combination of at most 2 equations from Λ. Let AS denote the set of assignments to variables in S, which satisfy all equations in Λ containing variables only from S. We then have the following theorem Theorem 4.1. Let q be a prime. Suppose Λ is a system of linear equations in Fq such that ( -→ 0 • x = r) ∈ Λ ⇔ r = 0 and Res(Λ, 2t) = Λ. Then there are vectors V (S,α) , for all S with |S| &lt; t and for all α ∈ [q] S , such that 1. ˙V(S 1 ,α 1 ) , V (S 2 ,α 2 ) ¸≥ 0 for all S1, S2, α1, α2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">˙V(S</head><formula xml:id="formula_3">1 ,α 1 ) , V (S 2 ,α 2 ) ¸= 0 if α1(S1 ∩ S2) = α2(S1 ∩ S2). 3. If αi ∈ [q] S i , 1 ≤ i ≤ 4 are such that α1 •α2 and α3 •α4</formula><p>are both defined and equal, then</p><formula xml:id="formula_4">˙V(S 1 ,α 1 ) , V (S 2 ,α 2 )</formula><p>¸= ˙V(S 3 ,α 3 ) , V (S 4 ,α 4 ) 4.</p><p>V (S,α) = 0 for α / ∈ AS and P α∈A S ˛V(S,α) ˛2 = 1</p><p>Note that the theorem is stated in terms of a system Λ, which is closed under the applications of the operator Res(•, 2t). Our proof essentially follows Schoenebeck's proof except for one modification, which allows the generalization to the q-ary case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Deriving the gaps for MAX k-CSPq</head><p>We first show that if an instance Φ of MAX k-CSP(PA) has good expansion, then FRAC(Φ) = m even after large number of rounds. The integrality gap will then follow as an easy consequence. Theorem 4.2. Let A ∈ (Fq) d×k be the generator matrix of a distance 3 code. Let Φ be an instance of MAX k-CSP(PA) with m = βn constraints such that for s ≤ ηn, every set of s constraints contains at least (k -1 -δ)s variables for δ ≤ 1/4. Then, FRAC(Φ) = m for the SDP relaxation of MAX k-CSP(PA) obtained by ηn/16 rounds of the Lasserre hierarchy.</p><p>Proof. We take Λ0 to the set of all linear equations appearing in Φ, and take Λ to be the closure of it under Res(•, t) for t = ηn/8. It will follow easily from Theorem 4.1 that FRAC(Φ) = m once we establish that Λ satisfies the necessary conditions to apply the theorem i.e. ( -→ 0 • x = r) ∈ Λ ⇔ r = 0. Expansion based arguments have often been used in previous works in proof complexity. For example, <ref type="bibr" target="#b24">[23]</ref> used the argument due to Ben-Sasson and Wigderson <ref type="bibr" target="#b4">[4]</ref>. We will show that even when the equations are not independent as in <ref type="bibr" target="#b4">[4]</ref> and <ref type="bibr" target="#b24">[23]</ref> (equations for every constraint come from A), the property that A has distance 3 shall turn out to be sufficient for (a modification of) the argument. Let us assume that ( -→ 0 • x = r0) ∈ Λ for some r0 = 0. We shall show that any derivation of this must have an intermediate equation involving too many variables, thus deriving a contradiction. Consider a minimal derivation tree of ( -→ 0 • x = r0) for r0 = 0. By definition of Res(•, t), this will be a binary tree with the equation ( -→ 0 • x = r0) at the root and equations in Λ0 at the leaves.</p><p>Let (ω • x = r) be any intermediate equation in the tree. We denote the node by (ω, r). We denote by ν(ω, r) the number of constraints of Φ used in deriving (ω, r). It is immediate that if (ω3, r3) can be derived from (ω1, r1) and (ω2, r3), then ν(ω3, r3) ≤ ν(ω1, r1) + ν(ω2, r2). We first observe that ν( -→ 0 , r0) must be large.</p><formula xml:id="formula_5">Claim 4.3. ν( -→ 0 , r0) ≥ ηn Proof. Let ν( -→ 0 , r0) = s.</formula><p>Then, the derivation for ( -→ 0 , r0) involves a linear combination of equations from s constraints. Since every constraint comes from a distance 3 code, every linear combination of equations within a constraint must involve at least 3 variables. Hence, the linear combination required to derive ( -→ 0 , r0) must include at least 3 variables from each of the s constraints. However, to derive -→ 0 each of these variables must occur an even number of times and hence the s contraints can involve at most ks -3s/2 variables in total. Since every set of up to ηn constraints is highly expanding, this is only possible when s ≥ ηn.</p><p>In the spirit of <ref type="bibr" target="#b4">[4]</ref>, we show that one can find a node (ω, r) with ηn/2 ≤ ν(ω, r) ≤ ηn. Since for less than ηn constraints we can use expansion, we will be able to argue that this node has an equation involving many variables. Claim 4.4. There is a node (ω, r) in the tree such that ηn/2 ≤ ν(ω, r) ≤ ηn Proof. Let (ω1, r1), (ω2, r2) be the two children of the root ( -→ 0 , r0). Since ν(ω1, r1) + ν(ω2, r2) ≥ ν( -→ 0 , r0) ≥ ηn, at least one of them, say (ω1, r1), must require more than ηn/2 constraints to derive it.</p><p>If ν(ω1, r1) ≤ ηn then we are done. Else at least one of the children of (ω1, r1) must require more than ηn/2 constraints for its derivation and we can continue the argument on this node. Since we always go down one level in the tree and find a node requiring at least ηn constraints, we must stop at some node as the leaves require only one constraint. The node we stop at can be taken to be (ω, r) as required.</p><p>Consider the number of variables in ω as given by Claim 4.4. Each one of the constraints used in deriving it, contributes at least 3 variable occurrences. Also, since ν(ω, r) ≤ ηn, all the constraints must contain at least (k-1-δ)ν(ω, r) variables in total, which gives that at most (1 + δ)ν(ω, r) variables occuring in more than one constraint. Out of all the variable occurrences in ω, the ones that can cancel out are the ones occurring in more than one constraint. Hence, ω must have at least (3 -2(1 + δ))ν(ω, r) variables. For δ ≤ 1/4, this is greater than ηn/8 which is a contradiction.</p><p>Hence, Λ cannot contain an equation of the form -→ 0 •x = r0 for r0 = 0. Since Λ is closed under Res(•, ηn/8) by definition, we can apply Theorem 4.1 to get vectors for all sets of size upto ηn/8. The vectors also satisfy all the required consistency conditions. Finally, we note that</p><formula xml:id="formula_6">m X i=1 X α∈[q] T i Ci(α) ˛V(T i ,α) ˛2 = m X i=1 X α∈A T i ˛V(T i ,α) ˛2 = m X i=1 1 = m which shows that FRAC(Φ) = m.</formula><p>We shall need the (well known) lemma saying that random instances of CSPs are both expanding and highly unsatisfiable.</p><p>Lemma 4.5. Let , δ &gt; 0 and a full-rank matrix A ∈ (Fq) d×k be given. Then there exist β = O(q k log q/ 2 ), η = Ω((1/β) 5/δ ) and N ∈ N, such that if n ≥ N and Φ is a random instance of MAX k-CSP(PA) with m = βn constraints, then with probability 1 -o(1)</p><formula xml:id="formula_7">1. OPT(Φ) ≤ 1 q d (1 + ) • m. 2.</formula><p>For all s ≤ ηn, every set of s constraints involves at least (k -1 -δ)s variables.</p><p>We can now conclude the gap for MAX k-CSP(PA).</p><p>Theorem 4.6. Let A ∈ (Fq) d×k be the generator matrix of a distance 3 code and let ζ &gt; 0 be given. Then there is a constant c = c(q, k, ζ) such that for large enough n, the integrality gap for the Lasserre SDP relaxation of MAX k-CSP(PA) on n variables obtained by cn rounds is at least q d -ζ.</p><p>Proof. We take = ζ • 1 q d , δ = 1/4 and consider a random instance Φ with m = βn constraints as in Lemma 4.5, such that the Φ satisfies both the properties in the conclusion of the lemma. Then, by Theorem 4.2 FRAC(Φ) = m even after ηn/16 rounds of the Lasserre hierarchy. On the other hand, by Lemma 4.5, OPT(Φ) ≤</p><formula xml:id="formula_8">|P -1 A (1)| q k (1 + ) • m = 1 q d (1+ )•m. Hence, the integrality gap is at least q d /(1+ ) ≥ 1/q d -ζ.</formula><p>We state below the corollary we shall need for applications later. It can be easily proved by taking A to be the generator matrix of the Hamming code over F2, which is a code with distance 3 and dimension d = k-2 log(k+1) (Hamming codes over Fq also give the optimal gaps for CSPs with larger alphabet). Over F2, the system of equations given by Hamming codes is identical to the CSPs considered by Samorodnitsky and Trevisan <ref type="bibr" target="#b23">[22]</ref>.</p><p>The constants in the statement of the following corollary are arbitrary, but we shall need the nature of the tradeoffs between k, β and c to get the gaps for Independent Set and Chromatic Number. </p><formula xml:id="formula_9">1. OPT(Φ) ≤ 2k 2 k (1 + ) • m 2.</formula><p>For the SDP given by cn rounds of the Lasserre hierarchy, FRAC(Φ) = m.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">GAPS FOR INDEPENDENT SET</head><p>To obtain the integrality gaps for Maximum Independent Set we use the reductions by Feige et. al. <ref type="bibr" target="#b11">[11]</ref> and by Bellare, Goldreich and Sudan <ref type="bibr" target="#b3">[3]</ref>. However, before getting to the proof of the integrality gap, we describe how to transform vectors for a general FGLSS reduction. This transformation shall be useful for our other results as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Vectors for products of the FGLSS graph</head><p>Let Φ be an instance of MAX k-CSP with constraints C1, . . . , Cm on tuples T1, . . . , Tm and the domain of variables as {0, 1}. Assume that each constraint has exactly l satisfying assignments. We describe below the reduction by <ref type="bibr" target="#b3">[3]</ref> from Φ to an independent set problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Given Φ, create the FGLSS graph GΦ = (VΦ, EΦ)</head><p>with a vertex for every constraint Ci and every partial assignment to variables in the corresponding tuple Ti which satisfies the constraint Ci. Two vertices (Ci 1 , α1), (Ci 2 , α2) are connected if α1 and α2 assign different values to some variable. Formally</p><formula xml:id="formula_10">VΦ ={(Ci, α) | α ∈ {0, 1} T i , Ci(α) = 1} EΦ ={{(Ci 1 , α1), (Ci 2 , α2)} | α1(Ti 1 ∩ Ti 2 ) = α2(Ti 1 ∩ Ti 2 )} 2.</formula><p>Construct the product graph G r Φ = (V r Φ , E ) with vertices its being r-tuples of vertices in GΦ. Two vertices {(Ci 1 , α1), . . . , (Ci r , αr)} and {(C i 1 , α 1 ), . . . , (C i r , α r )} are connected if for some j, {(Ci j , αj), (C i j , α j )} ∈ EΦ.</p><p>Note that if Φ had m constraints, then G r Φ has l r • m r vertices, with there being m r disjoint cliques of l r vertices, corresponding to every r-tuple of constraints. Let C(i1, . . . , ir) denote the clique corresponding to constraints Ci 1 , . . . , Ci r . Formally, C(i1, . . . , ir) = ˘{(Ci 1 , α1), . . . , (Ci r , αr)}| ∧j Ci j (αj) = 1</p><p>The largest independent set in G r Φ can have at most m r vertices. We claim that a good SDP solution for Φ can be transformed into a good solution for the independent set SDP on G r Φ .</p><p>Lemma 5.1. Let Φ be an instance of MAX k-CSP as above with m constraints. If FRAC(Φ) = m after t rounds of the Lasserre hierarchy, then FRAC(G r Φ ) ≥ m r for the independent set SDP obtained after t/k rounds. Moreover, the contribution to the SDP value from vertices in each clique C(i1, . . . , ir) is 1.</p><p>Proof. We first define an independent set solution for t/k rounds on GΦ and then show how to extend it to G r Φ . Consider a set S of h ≤ t/k vertices in GΦ. S is specified by h constraints and partial assignments {(Ci 1 , α1), . . . , (Ci h , α h )}. Define US as</p><formula xml:id="formula_11">US = 8 &gt; &lt; &gt; : 0 if there exist j1, j2 ≤ h s.t. αj 1 (Ti j 1 ∩ Ti j 2 ) = αj 2 (Ti j 1 ∩ Ti j 2 ) V (∪ j T i j ,α 1 •...•α h ) otherwise</formula><p>We now consider a set S of vertices in G r Φ . It is a set of r-tuples of vertices in GΦ. Let Sj denote the set of vertices of GΦ which occur in the jth coordinate of the r-tuples in S. Define the vector U S as</p><formula xml:id="formula_12">U S = US 1 ⊗ . . . ⊗ US r</formula><p>Let U ∅ denote the vector for the empty set of vertices in G r Φ . We take U ∅ = U ∅ ⊗ . . . ⊗ U ∅ . The vectors U S are defined for all sets S with at most t/k vertices. The following claim (proved in the full version) show that the vectos satisfy all Lasserre constraints. Claim 5.2. The vectors U S satisfy all conditions of the (t/k)-round independent set SDP on G r Φ . It remains to show that the value for all the vertices in any clique C(i1, . . . , ir) is 1. Letting α1, . . . , αr range over all satisfying assignments to Ci 1 , . . . , Ci j , the contribution of vertices in this clique to the SDP objective value is</p><formula xml:id="formula_13">X α 1 ,...,αr r Y j=1 D V (T i j ,α j ) , V (∅,∅) E = r Y j=1 * X α j V (T i j ,α j ) , V (∅,∅) + = r Y j=1<label>(1) = 1</label></formula><p>where D P α j V (T i j ,α j ) , V (∅,∅) E = 1 since the contribution of the constraint Ci j to the SDP for MAX k-CSP is 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Obtaining the Integrality Gap</head><p>We can now prove the following integrality gap for Maximum Independent Set.</p><p>Theorem 5.3. There exist constants c1, c2 &gt; 0 and graphs on N vertices for arbitrarily large N , such that the integrality gap for the independent set SDP obtained by 2 c 2 √ log N log log N rounds of the Lasserre hierarchy, is at least</p><formula xml:id="formula_14">N 2 c 1 √ log N log log N .</formula><p>Proof. Our integrality gap instance will be a subgraph of G r Φ for appropriate choices of Φ and r. We construct the graph G = (V, E) by randomly picking M cliques of the form C(i1, . . . , ir), and taking G to be the subgraph induced by the vertices in these cliques. An easy Chernoff bound shows that if only a small fraction of constraints in Φ were satisfiable, then the size of the largest independent set in G is small. We now make the choices for all the parameters involved. For a large n, let k = δ log n for some small constant δ, and let r = log n/(log log n). Consider an instance Φ of MAX k-CSP as given by Corollary 4.7. By choosing = 1/2, we can get that k/2 k ≤ s ≤ 3k/2 k . Also, since the constraints are based on the Hamming code, the number of satisfying assignments to each constraint is at most l ≤ 2k. We pick M = 100nr • (2 kr /k r ).</p><p>By the previous claim, the size of the maximum independent set in G is at most 2M s r (w.h.p. over the choice of G). We take the SDP solution to be the same as constructed for G r Φ . By Lemma 5.1, the contribution of the vectors in each clique to the SDP value is 1. Hence, the value of the SDP solution for G is M , which gives an integrality gap of (1/2s r ) ≥ (1/2) • (2 k /3k) r . On the other hand, the number of vertices in G is</p><formula xml:id="formula_15">N = M • l r ≤ (100nr • 2 kr /k r ) • (2k) r = O(nr • 2 (k+1)r )</formula><p>With our choice of parameters, the integrality gap is at least N 2 c 1 √ log N log log N for some constant c1.</p><p>To verify the number of rounds, note that Corollary 4.7 gives β = O(2 k ) = O(n δ ) and c = Ω((1/n δ ) 25 ). Hence, we have SDP solutions for cn = Ω(n 1-25δ ) rounds for Φ and consequently for Ω(n 1-25δ /k) rounds for the independent set SDP on G. For δ &lt; 1/25, this is at least 2 c 2 √ log N log log N for some constant c2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">GAPS FOR GRAPH COLORING</head><p>In this section, we show that SDPs in the Lasserre hierarchy fail to approximate the chromatic number of a graph. Gaps for chromatic number are syntactically different from the usual integrality gaps for SDPs because the value of the chromatic number is not a linear function of the inner products of vectors in an SDP. Instead for any l, one can write down an SDP for which a feasible solution gives a vector l-coloring of the graph. We construct graphs for which an l-coloring remains feasible even after many rounds of the Lasserre hierarchy, even though the actual chromatic number of the graph is much larger than l.</p><p>We will show that for any constant l, there are graphs with chromatic number at least 2 l/2 4l 2 which admit a vector l-coloring even after Ω(n) rounds of the Lasserre hierarchy. For Chromatic Number, we will show that the ratio of the chromatic number of the graph and the number of colors in the vector coloring obtained by 2 Ω( √ log n log log n) rounds of the Lasserre hierarchy can be as high as n 2 O( √ log n log log n) . We can write the Lasserre SDP for l-coloring as a constraint satisfaction problem, with the additional restriction that all the constraints which say colors of two adjacent vertices must be different, are satisfied. This formulation (shown in Figure <ref type="figure" target="#fig_2">2</ref>) is equivalent to the one considered by Chlamtac <ref type="bibr" target="#b7">[7]</ref>. <ref type="foot" target="#foot_2">3</ref>To avoid confusion with the SDP for MAX k-CSP we denote the sets of vertices here by S, partial assignments by γ and vectors for coloring by V (S,γ) .</p><p>The reduction we describe in this section is a slightly modified version of the reduction for independent set and is specifically designed to work for problems of the type MAX k-CSP(PA), where the constraints being linear equations in F2. It is inspired by what could be a "zero-knowledge protocol" for such predicates, in the sense of Feige and Killian <ref type="bibr" target="#b14">[13]</ref>.</p><p>Here, we describe the reduction without going through the protocol, at the cost of defining the following additional (and somewhat unnatural) solution concept for a CSP instance. Minimize l s.t. there exist vectors V (S,γ) for all |S| ≤ t, γ ∈ Note that the above definition crucially uses the fact that the constraint is defined on an ordered tuple of variables as we read the value of the first variable from Π1, the second from Π2 and so on. By slightly strengthening the notion of unsatisfiability for a random CSP instance in Lemma 4.5, we can strengthen Corollary 4.7 as below. Corollary 6.2. Let a number k and &gt; 0 be given and let A be the generator matrix for the Hamming code of length k. Then there exist β = O(k2 k / 2 ) and c = Ω((1/β) 25 ) such that if Φ is a random instance of MAX k-CSP(PA) on n 1/c variables and m = βn constraints, then with probability 1 -o(1)</p><formula xml:id="formula_16">[l] S satisfying ˙V({u 1 },γ) , V ({u 2 },γ) ¸= 0 ∀(u1, u2) ∈ E, γ ∈ [l] ˙V(S 1 ,γ 1 ) , V (S 2 ,γ 2 ) ¸= 0 ∀ γ1(S1 ∩ S2) = γ2(S1 ∩ S2) ˙V(S 1 ,γ 1 ) , V (S 2 ,γ 2 ) ¸= ˙V(S 3 ,γ 3 ) , V (S 4 ,γ 4 ) ¸∀ S1 ∪ S2 = S3 ∪ S4, γ1 • γ2 = γ3 • γ4 X j∈[l] ˛V({u},j) ˛2 = 1 ∀u ∈ V ˙V(S 1 ,γ 1 ) , V (S 2 ,γ 2 ) ¸≥ 0 ∀S1, S2, γ1, γ2 ˛V(∅,∅) ˛= 1</formula><formula xml:id="formula_17">1. OPT k (Φ) ≤ 2k 2 k (1 + ) • m 2.</formula><p>For the SDP given by cn rounds of the Lasserre hierarchy, FRAC(Φ) = m.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Approximate Graph Coloring</head><p>We reduce from a CSP instance Φ as in Corollary 6.2. For an instance Φ of MAX k-CSP(PA), consider the vectors w ∈ {0, 1} k such that A•w T = 0 over F2. If A is the generator matrix of the Hamming code of length k, there are 2 log(k+1) such vectors. We shall show that the graph produced by our reduction has a vector coloring with l = 2 log(k+1) colors, where we shall identify the domain [l] of the coloring CSP with the vectors w1, . . . , w l satisfying A • w T j = 0. We now give the reduction from Φ as above, to Approximate Graph Coloring. Similar to the case of independent set, we create the FGLSS graph with a vertex for every constraint and every satisfying partial assignment to the variables in that constraint. However, we have fewer edges: we connect two vertices (Ci 1 , α1) and (Ci 2 , α2) iff α1 and α2 disagree on a variable that occurs at the same position in the ordered tuples Ti 1 and Ti 2 . Formally, we create the graph GΦ = (VΦ, EΦ) such that VΦ ={(Ci, α) | α ∈ {0, 1} T i , Ci(α) = 1} EΦ ={{(Ci 1 , α1), (Ci 2 , α2)} | ∃j ∈ {1, . . . , k} s.t.</p><p>[Ti 1 ,j = Ti 2 ,j ] ∧ [α1(Ti 1 ,j ) = α2(Ti 2 ,j )]} where Ti,j is used to denote the variable in the jth position in the ordered tuple corresponding to the ith constraint. The chromatic number of GΦ can be shown to be large by noting that all independent sets in GΦ are small. Claim 6.3. The size of the maximum independent set in GΦ is OPT k (Φ).</p><p>On the other hand, the following lemma exhibits a vector coloring for G with l-colors. Lemma 6.4. Let Φ be an instance of MAX k-CSP(PA), with m constraints such that each constraint has exactly l satisfying assignments. If FRAC(Φ) = m after t rounds of the Lasserre hierarchy, then there is a feasible solution to the SDP for l-coloring of GΦ obtained by t/2k rounds of the Lasserre hierarchy.</p><p>Proof. We now define the vectors V (S,γ) for a set S ⊆ VΦ, |S| ≤ t/k and γ ∈ [l] S . Let S = {(Ci 1 , α1), . . . , (Ci h , α h )}. Recall that the domain [l] is identified with the vectors w1, . . . , w l ∈ {0, 1} k which satisfy A • w T j = 0 for 1 ≤ j ≤ l. Hence the partial assignment γ assigns a vector in F k 2 to each vertex (Ci j , αj). We use the vectors given by γ to modify the assignments to each Ci j . This can be viewed as the zero-knowledge step of randomizing over all the satisfying assignments to each constraint. Formally, we change αj to αj + γ((Ci j , αj)) where γ((Ci j , αj)) is the vector in F k 2 (the "color") assigned by γ to the vertex (Ci j , αj) and the '+' is over F2. Let [αj, γ] denote this assignment to Ti j which is shifted by γ.</p><p>With this interpretation, we define the vectors as 0 if these shifted partial assignments contradict, and otherwise as the Lasserre vectors corresponding to the assignment defined collectively by all the shifted assignments. For all |S| ≤ t/k and γ ∈ [l] S , we define V (S,γ) = 8 &gt; &lt; &gt; : 0 if there existj1, j2 s.t.</p><p>[αj 1 , γ](Ti j 1 ∩ Ti j 2 ) = [αj 2 , γ](Ti j 1 ∩ Ti j 2 )</p><formula xml:id="formula_18">V (∪T i j ,[α 1 ,γ]•...•[α h ,γ]) otherwise</formula><p>The following claim (proved in the full version) completes the proof of the full version.</p><p>Claim 6.5. The vectors V (S,γ) satisfy all conditions of the (t/2k)-round SDP for l-coloring of GΦ.</p><p>This now gives the claimed gap for Approximate Graph Coloring.</p><p>The proof uses the reduction by Dinur and Safra <ref type="bibr" target="#b9">[9]</ref> and gives vector transformation for each step of the reduction. We defer the details to the full version of the paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Corollary 4 . 7 .</head><label>47</label><figDesc>Let a number k and &gt; 0 be given and let A be the generator matrix for the Hamming code of length k. Then there exist β = O(2 k / 2 ) and c = Ω((1/β) 25 ) such that if Φ is a random instance of MAX k-CSP(PA) on n 1/c variables and m = βn constraints, then with probability 1 -o(1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Claim 5 . 4 .</head><label>54</label><figDesc>Let s = OPT(Φ)/m. Then for M ≥ 100nr s r , with probability 1 -o(1), all independent sets in G have size at most 2s r M .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: t-round Lasserre SDP for l-coloring of graph G = (V, E)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Summary of gaps obtained and comparison with known hardness results gap remains large after many rounds of the hierarchy can be viewed as unconditional lower bounds in a strong computational model, which captures most known SDP algorithms.</figDesc><table><row><cell>2 c 1</cell><cell>n log n log log n √</cell><cell>2 c 2</cell><cell>√ log n log log n</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>We always define integrality gaps so they are at least 1.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>We will often ignore the order of the variables in Ti and also refer to Ti as a set of variables.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>In fact, the SDPs in Lasserre hierarchy are fairly independent of the representation used. It is easy to switch between different SDPs for a problem, by losing at most a constant factor in the number of rounds.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>I thank Per Austrin, Paul Beame, Grant Schoenebeck and Luca Trevisan for helpful discussions, and the anonymous referees for their comments and suggestions. Part of this work was done while visiting Microsoft Research India and Tsinghua University, and I thank them both for their kind hospitality.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>† Supported by the NSF grants CCF-0515231 and CCF-0729137 and by US-Israel BSF grant 2006060.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Theorem 6.6. For every constant l there is a c = c(l) and an infinite family of graphs G = (V, E) with chromatic number Ω "</p><p>, and such that G has a vector coloring with l colors for the SDP obtained by c•|V | rounds of the Lasserre hierarchy.</p><p>Proof. For any l, there is a k such that l/2 ≤ 2 log(k+1) ≤ l. For this k, consider an instance Φ of MAX k-CSP with n variables and m = βn constraints as given by Corollary 6.2, choosing = 1/2. We take our graph G to be GΦ as defined above. Claim 6.3 shows that the largest independent set has size at most OPT k (Φ), which is at most (3l/2 k+1 ) • m by Corollary 6.2. Since the number of vertices in G (say</p><p>On the other hand, we have SDP solutions for Φ for c n rounds (with c = c (k)) with FRAC(Φ) = m. By Lemma 6.4 G has a vector coloring 2 log(k+1) colors for the SDP obtained by c n/k = cN rounds of Lasserre, where c depends only on k (which depends only on l).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Chromatic Number</head><p>We now modify the graph and the SDP solution constructed in the previous section to get strong gaps for Chromatic Number. As in the case of independent sets, we define the product graph G r Φ = (V r Φ , E ) for GΦ as above. Two vertices {(Ci 1 , α1), . . . , (Ci r , αr)} and {(C i 1 , α 1 ), . . . ,</p><p>Φ are connected if for some j, {(Ci j , αj), (C i j , α j )} ∈ EΦ. Note that the edge set EΦ is slightly different than it was in the case of independent set. C(i1, . . . , ir) is defined as before</p><p>We argue that if GΦ has a vector coloring with l colors, then GΦ has a vector coloring with l r colors. We think of the l r colors as r-tuples of values in <ref type="bibr">[l]</ref>. Hence, a partial assignment assigns to each vertex a tuple in [l] r . Claim 6.7. If there is a feasible solution for the l-coloring SDP for GΦ obtained by t rounds of the Lasserre hierarchy, then there is also a feasible solution for the SDP for l r -coloring the graph G r Φ obtained by t rounds.</p><p>Proof. We define the vector V (S,γ) for all S ⊆ V r Φ , |S| ≤ t and γ ∈ ([l] r ) S . Each vertex v ∈ S is of the form {((Ci 1 , α1), . . . , (Ci r , αr))}. For a such vertex v, let [v]j denote the element in jth coordinate of v i.e. (Ci j , αj). Also, γ(v) is an r-tuple (l1, . . . , lr) and we denote the jth coordinate lj by [γ(v)]j. Given a pair (S, γ), we break it into different projection sets Pj for each 1</p><p>Each element in Pj corresponds to a vertex in GΦ (given by [v]j) and a color in [l] for the vertex (given by [γ(v)]j). Note that there can be two different elements ((Ci, α), lj) and ((Ci, α), l j ) which assign different colors to the same vertex. If this is the case for any set Pj, we take V (S,γ) = 0. Otherwise, for each set Pj, we can define the set Sj of vertices of GΦ that are contained in Pj and also a partial assignment γj ∈ [l] S j , since every vertex of Sj gets a unique color by assumption. In this case, we define V (S,γ) by tensoring assignment vectors in each coordinate. Formally,</p><p>The following claim completes the proof of the lemma.</p><p>Claim 6.8. The vectors V (S,γ) satisfy all conditions of the t-round SDP for l r -coloring of G r Φ .</p><p>We now prove the integrality gap for Chromatic Number by similar arguments as in Theorem 5.3. Theorem 6.9. There exist constants c1, c2, c3 &gt; 0 and graphs G on N vertices, for arbitrarily large N such that 1. The chromatic number of G is Ω "</p><p>2. The SDP for coloring G given by Ω "</p><p>rounds of the Lasserre hierarchy admits a vector coloring with O "</p><p>Proof. We construct the graph G by sampling M cliques of the form C(i1, . . . , ir) from G r Φ , and considering the subgraph induces by their vertices. The size of the independent sets is small w.h.p. over the choice of G. Claim 6.10. Let s = OPT k (Φ)/m. Then for M ≥ 100nr s r , with probability 1 -o(1), all independent sets in G have size at most 2s r M .</p><p>We again choose k = δ log n for some small constant δ, and let r = log n/(log log n) for a large n. Applying Corollary 6.2 with = 1/2 gives an instance Φ of MAX k-CSP(PA) with k/2 k ≤ s ≤ 3k/2 k . (Note that here s = OPT k (Φ)/m). The number of assignments to each constraint is exactly l = 2 log(k+1) ≤ 2k. We again pick M = 100nr • (2 kr /k r ).</p><p>With high probability over the choice of G, the size of the maximum independent set in G is at most 2M s r . The number of vertices in G is</p><p>and hence the chromatic number of G is at least (l r /2s r ), which is N 2 c 1 √ log N log log N for some constant c1, with our parameters.</p><p>We can again take the Lasserre vectors corresponding to sets of vectors in G, to be the same as the vectors for the corresponding sets in G r Φ . By Claim 6.7 the number of colors in the vector coloring is l r , which is at most 2 c 2 √ log N log log N for some constant c2. Also, the number of rounds is Ω "</p><p>for c3 &gt; 0, if δ (in choosing k = δ log n) is small enough.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">GAPS FOR VERTEX COVER</head><p>We show the following integrality gap for Minimum Vertex Cover.</p><p>Theorem 7.1. For any given &gt; 0, there exists δ = δ( ) &gt; 0 and an infinite family of graphs such that for graphs in the family, with N vertices, the integrality gap for the SDP relaxation for Minimum Vertex Cover obtained by Ω(N δ ) rounds of the Lasserre hierarchy, remains at least 1.3606-.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Towards strong nonapproximability results in the Lovasz-Schrijver hierarchy</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Alekhnovich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Iannis</forename><surname>Tourlakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37th ACM Symposium on Theory of Computing</title>
		<meeting>the 37th ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="294" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Approximation resistant predicates from pairwise independence</title>
		<author>
			<persName><forename type="first">Per</forename><surname>Austrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elchanan</forename><surname>Mossel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd IEEE Conference on Computational Complexity</title>
		<meeting>the 23rd IEEE Conference on Computational Complexity<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="249" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Free bits, PCP&apos;s and non-approximability -towards tight results</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bellare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sudan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Preliminary version in Proc. of FOCS&apos;95</title>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="804" to="915" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Short proofs are narrow: Resolution made simple</title>
		<author>
			<persName><forename type="first">Eli</forename><surname>Ben-Sasson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Avi</forename><surname>Wigderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Approximating maximum independent set by excluding subgraphs</title>
		<author>
			<persName><forename type="first">R</forename><surname>Boppana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Halldórsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bit</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="180" to="196" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Near-optimal algorithms for maximum constraint satisfaction problems</title>
		<author>
			<persName><forename type="first">Moses</forename><surname>Charikar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Konstantin</forename><surname>Makarychev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yury</forename><surname>Makarychev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th ACM-SIAM Symposium on Discrete Algorithms</title>
		<meeting>the 18th ACM-SIAM Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="62" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Approximation algorithms using hierarchies of semidefinite programming relaxations</title>
		<author>
			<persName><forename type="first">Eden</forename><surname>Chlamtac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="691" to="701" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Improved approximation guarantees through higher levels of sdp hierarchies</title>
		<author>
			<persName><forename type="first">Eden</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gyanit</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">APPROX-RANDOM</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="49" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On the hardness of approximating minimum vertex-cover</title>
		<author>
			<persName><forename type="first">Irit</forename><surname>Dinur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shmuel</forename><surname>Safra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Mathematics</title>
		<imprint>
			<biblScope unit="volume">162</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="439" to="486" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">More efficient queries in PCPs for NP and improved approximation hardness of maximum CSP</title>
		<author>
			<persName><forename type="first">Lars</forename><surname>Engebretsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Holmerin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22th Symposium on Theoretical Aspects of Computer Science</title>
		<meeting>the 22th Symposium on Theoretical Aspects of Computer Science</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="194" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Approximating clique is almost NP-complete</title>
		<author>
			<persName><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovász</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Safra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd IEEE Symposium on Foundations of Computer Science</title>
		<meeting>the 32nd IEEE Symposium on Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="2" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Randomized graph products, chromatic numbers, and the lovász vartheta-funktion</title>
		<author>
			<persName><forename type="first">Uriel</forename><surname>Feige</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="79" to="90" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Zero knowledge and the chromatic number</title>
		<author>
			<persName><forename type="first">Uriel</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joe</forename><surname>Kilian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="187" to="199" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Graphs with tiny vector chromatic numbers and huge chromatic numbers</title>
		<author>
			<persName><forename type="first">Uriel</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Langberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gideon</forename><surname>Schechtman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1338" to="1368" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Integrality gaps of 2 -o(1) for vertex cover SDPs in the Lovász-Schrijver hierarchy</title>
		<author>
			<persName><forename type="first">Konstantinos</forename><surname>Georgiou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Avner</forename><surname>Magen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Toniann</forename><surname>Pitassi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Iannis</forename><surname>Tourlakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 48th IEEE Symposium on Foundations of Computer Science</title>
		<meeting>the 48th IEEE Symposium on Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="702" to="712" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Improved inaproximability results for maxclique, chromatic number and approximate graph coloring</title>
		<author>
			<persName><forename type="first">Subhash</forename><surname>Khot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="600" to="609" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Better inapproximability results for maxclique, chromatic number and min-3lin-deletion</title>
		<author>
			<persName><forename type="first">Subhash</forename><surname>Khot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ashok</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ponnuswami</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP (1)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="226" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Vertex cover might be hard to approximate to within 2</title>
		<author>
			<persName><forename type="first">Subhash</forename><surname>Khot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oded</forename><surname>Regev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th IEEE Conference on Computational Complexity</title>
		<meeting>the 18th IEEE Conference on Computational Complexity</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">An explicit exact sdp relaxation for nonlinear 0-1 programs</title>
		<author>
			<persName><forename type="first">Jean</forename><forename type="middle">B</forename><surname>Lasserre</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="volume">01</biblScope>
			<biblScope unit="page" from="293" to="303" />
			<pubPlace>London, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Mathematisch Centrum (smc, The Dutch Foundation, and Monique Laurent. A comparison of the Sherali-Adams, Lovász-Schrijver and Lasserre relaxations for 0-1 programming</title>
		<author>
			<persName><forename type="first">M</forename><surname>Laurent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Operations Research</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="470" to="496" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Cones of matrices and set-functions and 0-1 optimization</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lovász</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. on Optimization</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="166" to="190" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Gowers uniformity, influence of variables, and PCPs</title>
		<author>
			<persName><forename type="first">Alex</forename><surname>Samorodnitsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Trevisan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th ACM Symposium on Theory of Computing</title>
		<meeting>the 38th ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Linear level Lasserre lower bounds for certain k-csps</title>
		<author>
			<persName><forename type="first">Grant</forename><surname>Schoenebeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th IEEE Symposium on Foundations of Computer Science</title>
		<meeting>the 49th IEEE Symposium on Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A linear round lower bound for Lovász-Schrijver SDP relaxations of vertex cover</title>
		<author>
			<persName><forename type="first">Grant</forename><surname>Schoenebeck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Trevisan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Madhur</forename><surname>Tulsiani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd IEEE Conference on Computational Complexity</title>
		<meeting>the 22nd IEEE Conference on Computational Complexity</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
