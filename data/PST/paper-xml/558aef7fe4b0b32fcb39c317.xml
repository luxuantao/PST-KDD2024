<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Statistical Threat Assessment for General Road Scenes Using Monte Carlo Sampling</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Andreas</forename><surname>Eidehall</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Lars</forename><surname>Petersson</surname></persName>
						</author>
						<title level="a" type="main">Statistical Threat Assessment for General Road Scenes Using Monte Carlo Sampling</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A76FAF0C7D7B527923EAA3AAF84668F0</idno>
					<idno type="DOI">10.1109/TITS.2007.909241</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Decision making</term>
					<term>Monte Carlo</term>
					<term>road vehicle safety</term>
					<term>threat assessment</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a threat-assessment algorithm for general road scenes. A road scene consists of a number of objects that are known, and the threat level of the scene is based on their current positions and velocities. The future driver inputs of the surrounding objects are unknown and are modeled as random variables. In order to capture realistic driver behavior, a dynamic driver model is implemented as a probabilistic prior, which computes the likelihood of a potential maneuver. A distribution of possible future scenarios can then be approximated using a Monte Carlo sampling. Based on this distribution, different threat measures can be computed, e.g., probability of collision or time to collision. Since the algorithm is based on the Monte Carlo sampling, it is computationally demanding, and several techniques are presented to increase performance without increasing computational load. The algorithm is intended both for online safety applications in a vehicle and for offline data analysis.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>choosing warning thresholds in different deterministic methods is presented by Yang et al. <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Stochastic Threat Assessment</head><p>A stochastic threat-assessment algorithm is demonstrated by Jansson <ref type="bibr" target="#b4">[5]</ref> in a collision mitigation by braking system. The estimated probability density from the Kalman filter is predicted using Kalman filter time updates; thus, it also predicts the distribution and then uses this distribution to find the future point in time where the probability of collision is equal to one. However, this method is only suitable for short-time predictions since the uncertainty quickly increases. Polychronopoulos et al. <ref type="bibr" target="#b3">[4]</ref> suggest in using several different models for prediction, representing possible future maneuvers. The different possibilities are then condensed into a single prediction without considering them as distinct possibilities. Broadhurst et al. <ref type="bibr" target="#b6">[7]</ref> take this one step further and consider many (thousands) different possibilities for all objects by trying to approximate the true probability density function (pdf) of the predictions with Monte Carlo sampling. The current state of all objects is assumed to be known, and the control inputs that determine the future trajectories are modeled as stochastic variables which can then be used to compute a pdf for future positions.</p><p>This paper is based on the framework presented in <ref type="bibr" target="#b6">[7]</ref>, with some modifications and uses this to define a new threatassessment method. One of the contributions is a new way to create a more efficient use of the samples. This is achieved not only by using a dynamic model that is designed with the Monte Carlo sampling in mind but also by an iterative-sampling process which removes and replaces samples that generate collisions at an early stage. We have also added visibility constraints to highlight the fact that drivers have most of their attention focused forward and, thus, are less likely to detect and consider objects in other regions.</p><p>The main goal of the threat-assessment algorithm is to detect general threats, i.e., threats that are not necessarily connected to a particular safety function. For example, an extension compared to most conventional safety systems is the ability to detect indirect threats. These are threats from objects that may not be on a direct collision course but are forced onto a collision course by other elements in the traffic situation. An example illustrating this is when an oncoming vehicle has to swerve to avoid an obstacle, and because of that, it becomes a threat to the host vehicle. The vehicles may not be on a direct collision course from the beginning, but the situation still poses a threat because of the obstacle. This example is shown Fig. <ref type="figure">1</ref>. Situation where the host vehicle (lower of the two vehicles) is moving from the left to right in a straight line, and an oncoming vehicle (upper of the two vehicles) is moving from the right to the left. The system predicts that it is likely that the oncoming vehicle will have to swerve left in order to avoid the obstacle; thus, it becomes a threat to the host vehicle.</p><p>in Fig. <ref type="figure">1</ref>. Another example is a tailgating situation. Again, the vehicles are not on a collision course from the beginning, but in this case, there is a certain probability that the leading vehicle will brake.</p><p>In order to be able to use the threat-assessment algorithm with general road scenes, a demonstration is provided showing how it can be combined with a road-aligned curved coordinate system. This significantly simplifies the model when the road bends. Another contribution is a modified dynamic model which allows accelerations and dynamic forces to be accurately computed directly in the curved coordinate system. By using this, acceleration limitations due to road friction or engine torque can be incorporated without having to switch to Cartesian coordinates.</p><p>The result is an algorithm that currently runs offline in Matlab and has been evaluated, both using a small set of simulated scenarios and using a large set of recorded sensor data. The intended use is not only for online safety applications with execution at every time update of the system but also for offline analysis of the recorded sensor data.</p><p>The statistical model is formulated in Section II, and the road-aligned coordinate system is presented in Section II-E. Implementation aspects, such as time discretization and collision detection, are discussed in Section IV. Results and conclusions are given in Sections V and VI, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. MODEL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Stochastic Model</head><p>The future paths of other objects are determined by their current position and their future control inputs such as steering, braking, etc. In a real application, their current positions can be measured using a sensor or a combination of sensors. However, their future control inputs are unknown, which is why, in this paper, they are modeled using a stochastic variable</p><formula xml:id="formula_0">U = [u 1 , . . . , u m ]</formula><p>which consists of the control input for m number of objects in the scene. u i contains the control input for a time interval I t = [0, T max ] for object i, i.e., u i = (u 1 (t), . . . , u n c (t)) i . T max is the prediction horizon, i.e., the period of time when the predictions are made, and n c is the number of control inputs for each object. This means that, given a control input U, the entire system can be simulated, using motion models for all objects, to reach a state X(U). X(U) will contain the position and other states for all objects for the entire time interval I t , given the control input U, and can be written as</p><formula xml:id="formula_1">X(U) = [x 1 (u 1 ), . . . , x m (u m )] .</formula><p>In this paper, a prior distribution π(U) is used to model driver preference, i.e., that certain maneuvers are more likely than others. Details are given in Section II-C. This framework is inspired by the work done by Broadhurst et al. <ref type="bibr" target="#b6">[7]</ref> in that the control inputs of other objects are considered stochastic and that we also use the Monte Carlo sampling to compute the threat quantities. However, the method suggested in <ref type="bibr" target="#b6">[7]</ref> does not consider the fact that almost always, drivers try to avoid colliding with other objects. This is further addressed in Section III.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Dynamic Model</head><p>1) Cars/Bicycles: A car or a bicycle is geometrically described as a rectangle, <ref type="foot" target="#foot_0">1</ref> and two control inputs (u 1 , u 2 ) are used for longitudinal and lateral control, respectively.</p><p>In any Monte Carlo application, there is a tradeoff between computational performance and accuracy. More samples means higher accuracy but also higher computational load. In this application, the samples will be spread out over an interval of the control inputs, and we claim that it is important to have the sampling process in mind at an early stage when choosing the dynamic model.</p><p>For example, in <ref type="bibr" target="#b6">[7]</ref>, Broadhurst et al. propose using steeringwheel angles as control input. However, for high velocities, the limiting factor for lateral movement is not the steering angle but rather a tyre-to-road friction. In order to deal with this, Broadhurst et al. <ref type="bibr" target="#b6">[7]</ref> propose to simply remove samples with higher lateral acceleration than what is physically allowed. We believe that better results could be obtained by distributing the samples according to this maximum level from the beginning, and thus, we get a higher concentration of samples within the allowed control-input set.</p><p>A simple friction model is used, where the maximal friction force is proportional to the normal force and thus limits the acceleration. To simplify the model, the accelerations in the lateral and longitudinal directions are treated separately. The model that will be used is</p><formula xml:id="formula_2">ẋ = v cos θ (1a) ẏ = v sin θ (1b) v = u 1 a f , if v ≤ v long u 1 k/v+a f 2 + k/v-a f 2 , if v &gt; v long (1c) θ = v sin(ϕ max u 2 )/L, if v ≤ v lat a f u 2 /v, if v &gt; v lat<label>(1d)</label></formula><p>where (x, y) is the position, v is the velocity, and θ is the heading angle of the modeled vehicle. Furthermore, the maximum acceleration due to road friction is denoted as a f , ϕ max is the maximum steering angle, L is the wheelbase, and k is a parameter describing engine power. v long and v lat are the breakpoint velocities at which the limit of the longitudinal acceleration switches from tire-to-road friction to engine power and from maximum steering angle to tyre-to-road friction. By using this model, the control-input sets u 1 , u 2 ∈ [-1, 1] can be used for all velocities.</p><p>2) Pedestrians: The motion model for pedestrians is a simple constant-velocity model</p><formula xml:id="formula_3">ẋ = v x ẏ = v y vx = a f u 1 vy = a f u 2 .</formula><p>The input set u 1 , u 2 ∈ [-1, 1] can also be used in this case.</p><p>3) Obstacles: To emulate other obstacles and road boundaries, general convex polygons will be used. Each polygon also has a motion vector, which allows moving objects to be generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Prior Distribution</head><p>The prior distribution π(U) is used to model the fact that drivers have a goal with their driving. For instance, they want to get from points A to B and maintain a desired velocity. Typically, drivers also strive for a comfortable ride by minimizing acceleration forces in all directions. In <ref type="bibr" target="#b6">[7]</ref>, Broadhurst et al. suggest a driver-preference distribution that models four different aspects:</p><p>1) distance to intended path; 2) deviation from desired velocity; 3) longitudinal acceleration; 4) steering angle. We use the same distribution except that the steering angle is replaced with lateral acceleration, which seems to be a more relevant measure. The distribution is defined as</p><formula xml:id="formula_4">π(U) = ae -f (U,X(U)) (<label>2</label></formula><formula xml:id="formula_5">)</formula><p>where a is a normalizing constant, and</p><formula xml:id="formula_6">f (U, X(U)) = m i=1 ω i g (u i , x i (u i )) . (<label>3</label></formula><formula xml:id="formula_7">)</formula><p>The sum runs over all objects in the scene, i.e., f is the total cost of the maneuvers of all objects. The weights ω i can be used to prioritize the prior driver preference between different objects, something that is utilized when implementing the visibility constraints in Section II-D. We then define which represents the cost of a maneuver for a single object over the entire time interval I t , where l x x(t) + l y y(t)l z measures the distance to the line l = (l x , l y , l z ), and v 0 is the initial (desired) velocity. The line l represents the desired path and can be any line, but it usually coincides with the tangent of the object at time t = 0. Note that for the pedestrian object class, v(t) has to be computed from v x (t) and v y (t). The signals a lat (t) and a long (t) are computed from the control inputs. The weights λ i are chosen to balance the costs of these different behavioral aspects in (4) and have so far been calibrated by visually inspecting the distributions. <ref type="foot" target="#foot_2">2</ref>These values are significantly higher than those presented in <ref type="bibr" target="#b6">[7]</ref> which gives a narrower distribution. In order to avoid numerical problems at the "tails" of the distribution, a logarithmic representation of π(U) has been implemented. A more systematic approach to calibrating these parameters, for example, by adapting the distribution to authentic recorded data, would certainly be interesting, and this may lie ahead in our future work.</p><formula xml:id="formula_8">g (u i , x i (u i )) = I t (l x x(t)+l y y(t)-l z ) 2 λ 1 +(v(t)-v 0 ) 2 λ 2 + a long (t) 2 λ 3 +a lat (t) 2 λ 4 dt (4)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Visibility Constraints</head><p>In this section, a method is formulated for incorporating the fact that drivers have most of their attention directed forward and are more likely to detect other objects in this region. Furthermore, drivers are much more inclined to adapt their driving behavior with respect to other vehicles in front of them rather than behind. For example, in Fig. <ref type="figure" target="#fig_1">3</ref>, if vehicle 1 approaches vehicle 2 from behind with a high relative velocity, then vehicle 1 is much more likely to change course in order to avoid colliding with vehicle 2, compared to vehicle 2 that changes course in order to let vehicle 1 pass, even though this might have been a more comfortable maneuver for both vehicles overall.</p><p>The first step is to define regions around each object and then assign an attention level to each region. The regions and corresponding attention levels we have chosen are shown in Fig. <ref type="figure" target="#fig_0">2</ref>. These values are just an example and are not scientifically justified; the main contribution here is the way these constraints can be implemented. A matrix V is constructed which contains the visibility levels within all object pairs, where element V ij indicates how well object i can be seen or how much it is registered by object j. The example in Fig. <ref type="figure" target="#fig_1">3</ref> will generate the following V matrix:</p><formula xml:id="formula_9">j = 1 j = 2 j = 3 i = 1 - 50% 99% i = 2 99% - 70% i = 3 99% 70% -</formula><p>The weights ω i in (3) are then chosen as</p><formula xml:id="formula_10">ω i = j =i Vij (<label>5</label></formula><formula xml:id="formula_11">)</formula><p>where V is a normalized version of V, i.e., the sum of all elements is equal to one. For example, this means that in a situation where one vehicle follows another, the leading vehicle will have a high weight in order to represent the fact that this vehicle is more likely to follow its own preferences rather than adapting its behavior to the vehicle approaching from behind.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Road-Aligned Coordinates and Tracking</head><p>Many automotive tracking systems recently presented have proposed using a curved road-aligned coordinate system for tracking <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref>. Such a curved coordinate system would also be very suitable to use with the threat-assessment algorithm proposed in this paper. For instance, if the road boundaries of a curved road are to be modeled in a Cartesian coordinate system, they would either have to be approximated with a number of polygon shapes, or a more general class of obstacles with curved edges would have to be introduced. If a road-aligned coordinate system is used, the road boundary could be modeled as a straight line instead. Furthermore, the driver-preference function, which is represented by the prior in Section II-C, could also be greatly simplified. The straight line representing the desired path would automatically follow the curved road in such a coordinate system.</p><p>However, before the threat-assessment algorithm can be implemented, the effects of the curved coordinate system on the physical limitations of the vehicle and the dynamic model need to be investigated. For example, when driving along a curve, a certain amount of the lateral force available is already used just to follow the road, thus reducing the amount of remaining friction force in that direction. This is not automatically incorporated, and how to handle this is analyzed in Section II-E2.</p><p>1) Tracking: The position of objects in the road coordinates is often already available since tracking is typically done in that frame of reference. It has been shown that tracking in the curved road-aligned coordinates has many advantages <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref>. The main feature is that the estimate of the road shape can be improved by studying the motion of leading vehicles and by using a model of their motion in relation to the road. There are also other advantages when it comes to modeling and prediction. In the system presented, a road model with the shape of a circle segment is used, as is suggested in <ref type="bibr" target="#b7">[8]</ref>.</p><p>The positions of objects are expressed in (x, y) coordinates, where x is the longitudinal position along the road, and y is the lateral position measured from the center of the host-vehicle lane. In order to carry out tracking, these positions need to be related to the coordinate systems of the sensors attached to the host vehicle, which is why a host-vehicle coordinate system (x, ỹ) is introduced (see Fig. <ref type="figure" target="#fig_2">4</ref>).</p><p>A relationship between (x, y) and (x, ỹ) can be expressed as</p><formula xml:id="formula_12">x ỹ = R(-Ψ rel ) (1 + cy) sin(cx) (1 + cy) cos(cx) -1 -cy off 1 c</formula><p>where R is a rotational matrix, i.e., R(α) = cos αsin α sin α cos α and the other variables are defined in Fig. <ref type="figure" target="#fig_2">4</ref>. This relationship is then used to construct a measurement equation in an extended Kalman filter. For the purpose of tracking, a simpler dynamic model than the one described in Section II-B is used. One of the advantages of the road-aligned coordinate system is that modeling motion in relation to the road becomes greatly simplified. For example, the equation ẏ = 0 can be used to express the fact that vehicles will keep to their lanes even if the road bends. For longitudinal dynamics, the equation ẍ = 0 is used, i.e., constant velocity.</p><p>2) Vehicle Dynamics in Curved Coordinates: In this section, the effects from the curved coordinate system on the dynamics of the vehicles are analyzed, which is one of the main contributions of this paper. A problem with a non-Cartesian frame of reference is that Newton's laws of motion cannot be directly applied. Instead, they need to be applied in Cartesian coordinates and then transformed to the curved space. Thus, we introduce Cartesian coordinates (ξ, η) which are attached at the center of the host-vehicle lane and coincide with (x, y) at the origin (see Fig. <ref type="figure" target="#fig_2">4</ref>). Then, the accelerations ẍ and ÿ as functions of ξ and η are computed. The physical limits in the (ξ, η) space can then be translated to the (x, y) space. Starting with ξ, the relationship for velocity is found as</p><formula xml:id="formula_13">ξ = ∂ξ ∂x ẋ + ∂ξ ∂y ẏ.</formula><p>Acceleration can then be obtained as</p><formula xml:id="formula_14">ξ = d dt ∂ξ ∂x ẋ + ∂ξ ∂y ẏ = ∂ 2 ξ ∂x 2 ẋ + ∂ 2 ξ ∂x∂y ẏ ẋ + ∂ξ ∂x ẍ + ∂ 2 ξ ∂x∂y ẋ + ∂ 2 ξ ∂y 2 ẏ ẏ + ∂ξ ∂y ÿ = ∂ 2 ξ ∂x 2 ẋ2 + ∂ 2 ξ ∂y 2 ẏ2 + 2 ∂ 2 ξ ∂x∂y ẋ ẏ + ∂ξ ∂x ẍ + ∂ξ ∂y ÿ = v T H ξ v + J ξ a<label>(6)</label></formula><p>where v and a represent the velocity and acceleration in the (x, y) coordinates, i.e., v = ẋ ẏ , a = ẍ ÿ .</p><p>J ξ is the Jacobian</p><formula xml:id="formula_15">J ξ = ∂ξ ∂x ∂ξ ∂y</formula><p>and H ξ is the Hessian matrix</p><formula xml:id="formula_16">H ξ = ∂ 2 ξ/∂x 2 ∂ 2 ξ/∂x∂y ∂ 2 ξ/∂x∂y ∂ 2 ξ/∂y 2 .</formula><p>The η coordinate can be treated analogously</p><formula xml:id="formula_17">η = v T H η v + J η a.<label>(7)</label></formula><p>Equations ( <ref type="formula" target="#formula_14">6</ref>) and <ref type="bibr" target="#b6">(7)</ref> show a general relationship between accelerations in two coordinate systems. A circular road segment has the following coordinate transformation:</p><formula xml:id="formula_18">ξ η = (1 + cy) sin(cx) (1 + cy) cos(cx) -1 1 c .</formula><p>Inserting this into ( <ref type="formula" target="#formula_14">6</ref>) and ( <ref type="formula" target="#formula_17">7</ref>), preferably using a symbolic software package, and collecting the trigonometric terms give</p><formula xml:id="formula_19">ξ = sin(cx) ÿ -c ẋ2 (1 + cy) + cos(cx) [(1 + cy)ẍ + 2c ẋ ẏ] (8) η = cos(cx) ÿ -c ẋ2 (1 + cy) -sin(cx) [(1 + cy)ẍ + 2c ẋ ẏ] . (<label>9</label></formula><formula xml:id="formula_20">)</formula><p>The movement of objects along the y-axis is small (about ± 5 m) compared to the typical road radius (typically above 100 m), which implies that |cy| 1, and thus, 1 + cy ≈ 1. Furthermore, ( <ref type="formula">8</ref>) and ( <ref type="formula" target="#formula_19">9</ref>) can jointly be expressed as a rotation, again using the rotational matrix R</p><formula xml:id="formula_21">ξ η = R(-cx) ẍ + 2c ẋ ẏ ÿ -c ẋ2 ⇔ ẍ ÿ = R(cx) ξ η + -2c ẋ ẏ c ẋ2 . (<label>10</label></formula><formula xml:id="formula_22">)</formula><p>However, ẍ and ÿ do not necessarily coincide with the longitudinal and lateral directions for the individual vehicles. That is why a rotation of the accelerations ẍ and ÿ with θ radians is needed, where θ is the heading angle of the vehicle relative to the road, as explained in Section II-B. The Cartesian accelerations ξ and η also need to be rotated for the same reason since the acceleration limitations are expressed in the vehicle reference frame. These need to be rotated: first with cx radians to be aligned with the road, cx being the angle between the xand ξ-axes, and then with an additional θ rad to become aligned with the vehicle. The following variables are introduced:</p><formula xml:id="formula_23">a long a lat = R(θ) ẍ ÿ<label>(11)</label></formula><formula xml:id="formula_24">a long a lat = R(θ + cx) ξ η<label>(12)</label></formula><p>where "long" and "lat" refer to the longitudinal and lateral directions of the vehicle modeled. To explain the notation, a long and a lat are accelerations in the curved coordinate system, and a long and a lat are the corresponding accelerations in a fixed Cartesian coordinate system, where Newton's laws of motion can be applied. Multiplying <ref type="bibr" target="#b9">(10)</ref> with R(θ) immediately gives</p><formula xml:id="formula_25">a long a lat = a long a lat + R(θ) -2c ẋ ẏ c ẋ2<label>(13)</label></formula><p>and by introducing the variables</p><formula xml:id="formula_26">a long,off a lat,off = R(θ) -2c ẋ ẏ c ẋ2 . (<label>14</label></formula><formula xml:id="formula_27">)</formula><p>Equation ( <ref type="formula" target="#formula_25">13</ref>) can be rewritten as</p><formula xml:id="formula_28">a long = a long + a long,off a lat = a lat + a lat,off . (<label>15</label></formula><formula xml:id="formula_29">)</formula><p>The subscript "off" suggests that these act as an offset on the accelerations to compensate for the fact that the coordinate system is non-Cartesian. By using ẋ = v cos θ and ẏ = v sin θ, the acceleration offsets can be computed by evaluating (14) a long,off =cos 2 θ sin θcv 2  (16)</p><formula xml:id="formula_30">a lat,off = (cos 3 θ -2 cos θ sin 2 θ)cv 2 . (<label>17</label></formula><formula xml:id="formula_31">)</formula><p>To illustrate these offsets, consider a special case where a vehicle drives along a curve and stays at a constant lateral position in relation to the lane. In this case, ẏ = θ = 0, and thus, a long,off = 0 and a lat,off = cv 2 . cv 2 acts as an acceleration offset in the lateral direction, exactly describing the phenomenon in the example mentioned earlier, i.e., when negotiating a curve, a certain amount of the available friction force in one direction is already used to stay in the lane, thus reducing the remaining room for maneuverability in the same direction. According to typical guidelines for road construction <ref type="bibr" target="#b9">[10]</ref>, a 90-km/h road has a minimum radius of 550 m, which gives a off = 1.25 m/s 2 . A road of 50 km/h has a minimum radius of 140 m, which gives a off = 1.38 m/s 2 . Thus, under good road conditions, the offset can be up to about 15% of the lateral acceleration available, which indicates that this effect should not be neglected.</p><p>The minimum turning radius is also affected by the fact that the coordinates are curved. A similar offset for the turning rate is thus introduced</p><formula xml:id="formula_32">θ = θ + θoff (<label>18</label></formula><formula xml:id="formula_33">)</formula><p>where θ is the turning rate in the curved coordinates, and θ is the turn rate in the fixed Cartesian coordinates. First, define</p><formula xml:id="formula_34">v = ξ η and v = |v |. (<label>19</label></formula><formula xml:id="formula_35">)</formula><p>The following well-known relationships between turn rate and acceleration under a circular motion in the two reference frames are used:</p><formula xml:id="formula_36">a lat = v θ and a lat = v θ . (<label>20</label></formula><formula xml:id="formula_37">)</formula><p>Note that a lat can be computed from a lat using (15). In order to find v , the Jacobian is evaluated as</p><formula xml:id="formula_38">J ξ,η = J ξ J η = (1 + cy) cos(cx) sin(cx) -(1 + cy) sin(cx) cos(cx) . (21)</formula><p>Again, by using 1 + cy ≈ 1, it is noted that J ξ,η ≈ R(-cx). Thus, the following relationship holds:</p><formula xml:id="formula_39">v = J ξ,η v ≈ R(-cx)v ⇒ v = |v| ≈ |v | = v . (<label>22</label></formula><formula xml:id="formula_40">)</formula><p>By using this and inserting (20) into (18) give</p><formula xml:id="formula_41">a lat /v = a lat /v + θoff<label>(23)</label></formula><p>and thus, from the definition of a lat,off</p><formula xml:id="formula_42">θoff = (a lat -a lat )/v = a lat,off /v. (<label>24</label></formula><formula xml:id="formula_43">)</formula><p>The model can then be modified by adding a long,off to the longitudinal dynamics and a lat,off and θoff to the lateral dynamics, replacing (1c) and (1d) with To demonstrate how these modifications affect the model, consider the example in Fig. <ref type="figure" target="#fig_3">5</ref>. A vehicle approaches an obstacle at high velocity and has to swerve right in order to avoid it. When the road is straight, this is possible, but if the same scenario takes place on a road that bends to the right, the lateral friction force available is not sufficient.</p><formula xml:id="formula_44">v = u 1 a f + a long,off , if v ≤ v long u 1 k/v+a f 2 + k/v-a f 2 + a long,off , if v &gt; v long (25) θ = v sin(ϕ max u 2 )/L + θoff , if v ≤ v lat (a f u 2 + a lat,off )/v, if v &gt; v lat .<label>(26)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. THREAT ASSESSMENT</head><p>In this section, "host vehicle" refers to the vehicle equipped with the potential safety system, i.e., the vehicle that is warned of potential danger. The host vehicle is modeled as a deterministic object, not in the stochastic framework. The reason for this is that even though the future actions of the host vehicle are not known, the threat of the current trajectory can be computed. The driver of the host vehicle can then, for example, be informed if he or she needs to act or not in order to avoid a collision.</p><p>As was discussed earlier, drivers most often try to avoid collisions. Trying to incorporate this in the model, we will create a mix of two distributions: one where other vehicles try to avoid the host vehicle and one where they do not see or consider the host vehicle. These distributions are then weighted based on the visibility relation between the host vehicle and the objects. We start by computing the posterior distribution of U, given that there are no collisions during I t . Mathematically, a collisionfree event is expressed as the complement C c , where C is the event of a collision. The posterior distribution of U can then be computed using Bayes theorem</p><formula xml:id="formula_45">P (U|C c ) = P (C c |U) π(U) X M P (C c |U) π(U)dU (27)</formula><p>where X M is the set of physically allowed steering inputs, P (C|U) ∈ {0, 1} is the probability of collision given a steering input, and π(U) is the prior distribution of U, which was explained in Section II-C. In order to compute the final distribution of U, a certain risk that other objects might disregard or not see the host vehicle will be included. The following events are defined: C A = collision between any objects, including the host vehicle, and C B = collision between any objects, excluding the host vehicle. A new merged distribution for U is then defined as</p><formula xml:id="formula_46">P (U) = w A P (U|C c A ) + w B P (U|C c B ) . (<label>28</label></formula><formula xml:id="formula_47">)</formula><p>The weights are chosen based on the visibility calculations in Section II-D in order to capture the fact that the probability of the host vehicle being disregarded or not seen by another vehicle depends on their relative positions and orientations.</p><p>We propose the following weights, where k is the object index of the host vehicle</p><formula xml:id="formula_48">w A = min j { Vkj : j = k} (29)</formula><p>and then w B is chosen such that w A + w B = 1. This makes sense since w A is then the minimum visibility of the host vehicle by other objects, i.e., it represents the worst case of how little the host vehicle is regarded or how little it is seen by others.</p><p>Whether a situation is judged to be dangerous or not depends on how much of the probability mass of U is conflictfree. This will be determined by forming a set U α ⊂ X M which is defined to be the most likely set of control inputs with probability mass α. Mathematically, it is obtained by first defining U (δ) = {U ∈ X M : P (U) &gt; δ} and then δ α = sup{δ ∈ R + : P (U (δ)) &gt; α}. This means that U α = U (δ α ) = {U ∈ X M : P (U) &gt; δ α } has P (U α ) ≥ α, but depending on the behavior of the distribution, we often actually have P (U α ) = α. Furthermore, we are guaranteed that U α does not have a lesser probability than α. The set U α is shown in Fig. <ref type="figure" target="#fig_4">6</ref>.</p><p>A final threat level of the host vehicle can then be computed as</p><formula xml:id="formula_49">P (C B |U α ) ∈ {0, 1}<label>(30)</label></formula><p>by choosing α at an appropriate level, depending on how much probability mass to include. This can be interpreted as the amount of probability mass the host vehicle should avoid, i.e., by using α = 99%, the probability of avoiding a collision is greater than 99%. If a threat is detected, i.e., P (C B |U α ) = 1, TTC can be computed and used as a warning level for taking countermeasures or alerting the driver.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. IMPLEMENTATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Collision Detection and Time Discretization</head><p>This section deals with the computation of P (C|U) in ( <ref type="formula">27</ref>), i.e., given a combination of control inputs U, compute whether it will result in a collision. The first step is to insert the time variable t using the marginalization formula</p><formula xml:id="formula_50">P (C|U) = I t P (C|U, t) P (t)dt (<label>31</label></formula><formula xml:id="formula_51">)</formula><p>where P (t) is constant, since all times in I t will appear with equal probability. However, computing P (C|U, t) for a continuous time variable t is difficult; thus, discretization of the time variable is needed. First, define a sampling time T s and a time interval I s (n) = [nT s , (n + 1)T s ]; then, (31) can be rewritten as</p><formula xml:id="formula_52">P (C|U) = n I s (n) P (C|U, t) P (t)dt (<label>32</label></formula><formula xml:id="formula_53">)</formula><p>where the sampling time T s is chosen to be small enough so that the integral can be approximated as</p><formula xml:id="formula_54">I s (n) P (C|U, t) dt ≈ P (C|U, t = nT s ) . (<label>33</label></formula><formula xml:id="formula_55">)</formula><p>The appropriate size of T s depends on the expected sizes and velocities of objects; if it is too large, there is a chance that objects can pass through each other and that the detection of a collision is missed. In order to compute P (C|U, t = nT s ), the system is simulated, using the dynamic model in Section II-B, to reach time nT s . Then, the polygon shape of all objects is computed, and a polygon-intersection algorithm is applied. If a nonempty intersection between any two polygons is detected, we have P (C|U, t = nT s ) = 1.</p><p>Similarly, a time discretization for the control input is defined, with a sampling time T c and a corresponding time interval I c (k) = [kT c , (k + 1)T c ]. The reason for discretizing the control input differently is that the frequency content of a typical driver input is much lower in comparison to the sampling frequency required to detect collisions. <ref type="foot" target="#foot_5">3</ref> The discrete time trajectories of the dynamic model from Section II-B are computed using the Runge-Kutta method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Monte Carlo Sampling</head><p>In order to evaluate the integral (27), the Monte Carlo sampling is used, where N samples of the control-input space X M are generated. The prior probability discussed in Section II-C is then computed, and the collision-detection algorithm from Section IV-A is applied for each sample. The result is a set of samples that represent the distribution of U, which can then be used to compute the threat quantities.</p><p>We found that a uniform sampling worked well; the main reason for this is a technique referred to as iterative sampling, Fig. <ref type="figure">7</ref>. Scenario where two vehicles are moving from the left to the right, with one approaching the other from behind with a higher velocity. The large long rectangles are used to model road boundaries. This overtaking maneuver was found as the most likely path, i.e., arg max U∈X M P (U|C c ), among 1000 samples using iterative sampling with uniform sampling only.</p><p>discussed in Section IV-C, which makes the final sample density very high. It thus becomes unnecessary to emphasize special maneuvers or sets of the control-input space, which has to be done in the method proposed in <ref type="bibr" target="#b6">[7]</ref>. Fig. <ref type="figure">7</ref> shows an example of an overtaking maneuver that was found as the most likely path, i.e., arg max U∈X M P (U|C c ), using the uniform sampling only. Typically, without the iterative-sampling process, 1000 samples would not be enough to find a single collisionfree sample while the iterative process generates 600 to 700 samples.</p><p>Moreover, a Monte Carlo-based threat-assessment algorithm, such as the one proposed, would be an ideal complement to a Monte Carlo-based filter, i.e., the particle filter <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b11">[12]</ref>. In a particle filter, the distribution of the current positions of objects is already represented by samples. These samples could then be fed straight into the threat-assessment algorithm, creating a seamless statistical connection between filtering and threat assessment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Iterative-Sampling Process</head><p>A straightforward approach in obtaining a set of conflict-free samples would be as follows: first, to generate a random set of control inputs; second, to compute the trajectories of all objects using the dynamic model; and, finally, to apply the collisiondetection scheme proposed in Section IV-A. Here, we propose an iterative process which will increase the density of the final set of samples by iteratively removing and replacing samples that generate conflicts at an early stage in the simulation.</p><p>Let X M be the set of physically allowed control inputs, and let X k F be the set of inputs free from conflict at time step k, which refers to the time interval I c (k), as defined in Section IV-A. Formally</p><formula xml:id="formula_56">X k F = {U ∈ X M : P (C|U, t ∈ I c (k)) = 0} . (<label>34</label></formula><formula xml:id="formula_57">)</formula><p>The algorithm starts by generating a set U 1 ∈ X M of N control inputs for time step k = 1. Then, for k = 1, 2, . . ., repeat the following steps.</p><p>1) Simulate the system during time interval k using the control inputs U k .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Compute</head><formula xml:id="formula_58">Ũ k = U k ∩ X k F ⇒ | Ũ k | = N k ≤ N (35)</formula><p>that is, remove the control inputs that will generate a conflict in the time interval k.</p><formula xml:id="formula_59">3) Now, form U k+1 by resampling Ũ k such that |U k+1 | = N .</formula><p>We propose using a mixed distribution where new samples are drawn both from a uniform distribution and Fig. <ref type="figure">9</ref>. Revisiting the scenario in Fig. <ref type="figure">1</ref>, in these two simulations, the host vehicle (lower of the two vehicles) moves from left to right in a straight line, and an oncoming vehicle (upper of the two vehicles) moves from the right to the left. In the top scenario, no danger is detected, whereas in the bottom scenario, there is an obstacle that the oncoming vehicle has to avoid; thus, it becomes a threat to the host vehicle. In the bottom scenario, a threat is detected. TTC is 1.4 s.</p><p>from the prior distribution. The resampling is done using a replacement, which means that there will be multiple copies of some elements in U k+1 . Then, new random control inputs in X M for time step k + 1 are generated and adjoined to the control inputs from U k+1 so that even if some control inputs are repeated up to time step k, they are all different at time step k + 1. The algorithm is terminated after Step 2) when the final time step has been reached. An example of the difference between iterative and noniterative samplings can be seen in Fig. <ref type="figure" target="#fig_5">8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. RESULTS</head><p>The results are given as the output of the threat-assessment algorithm for a number of simulated and real traffic scenarios. The algorithm currently runs on a standard desktop PC in a nonoptimized Matlab code, and the threat level of a typical scenario using 1000 samples takes 2 to 3 s to compute. In an optimized C code, increasing the performance by a factor of 100 to reach 30-50 Hz does seem realistic. In all these experiments, 1000 samples and a prediction horizon of 3 s were used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Simulated Data</head><p>Fig. <ref type="figure">9</ref> shows a scenario where an oncoming vehicle is forced into the lane of the host vehicle by an obstacle. Fig. <ref type="figure">10</ref> shows that the algorithm correctly identifies a situation as dangerous where the host vehicle is tailgating another vehicle. The two vehicles are not on a direct collision course, but there is a certain probability that the host vehicle will brake. Fig. <ref type="figure">11</ref> shows a situation where the host vehicle drives next to a bicycle. Fig. <ref type="figure">10</ref>. Host vehicle is driving extremely close to another vehicle, both moving from left to right in the image. The system recognizes this as a dangerous situation even though the vehicles have the same velocity and are, thus, not on a direct collision course. The reason for this is that there is a certain probability that the leading vehicle will brake. Expected TTC is 2.8 s. Fig. <ref type="figure">11</ref>. Simulation in which a car and a bicycle travel from the left to the right. In the top scenario, there is no threat, but in the lower scenario, a vehicle is reversing, and the bicycle has to swerve to avoid it and, thus, becomes a threat to the host vehicle. In the bottom scenario, a threat is detected by the algorithm. TTC is 1.5 s. Fig. <ref type="figure" target="#fig_0">12</ref>. Simulation demonstrating the properties of the visibility constraints. The (lower) host vehicle and (upper) another vehicle approach a narrow passage, moving right in the images. In the top scenario, no threat is identified since the host vehicle can be seen by the other vehicle and is likely to adapt its behavior to avoid a collision. The result is that the other vehicle stops or slows down to let the host vehicle pass first. In the bottom scenario, there is a higher probability that the host vehicle is not seen by the other vehicle and that it will steer toward the host vehicle. Here, a threat is detected, and the TTC in this scenario is 1.6 s.</p><p>The bicycle passes a parked vehicle, which suddenly starts to reverse, and the bicycle has to swerve and, thus becomes a threat to the host vehicle. Fig. <ref type="figure" target="#fig_0">12</ref> shows the effects of the visibility constraints. Two vehicles approach a narrow passage, and the threat depends on whether the host vehicle can be expected to be seen by the other vehicle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Real Data</head><p>The system has been tested on recorded sensor data to evaluate the performance in authentic traffic situations. The data contain an information about the host vehicle, such as velocity and yaw rate, positions of other objects obtained from a fused vision/radar system, and information about the road shape and road boundaries that is given by the vision system. The radar system is a standard 77-GHz unit mounted in the grille of the vehicle that is typically used for adaptive cruise control application. The vision system is a black-andwhite monosystem mounted at the rear-view mirror inside the windscreen. The data are filtered using an extended Kalman filter based on dynamic models of vehicles and the road (see, for instance, <ref type="bibr" target="#b8">[9]</ref>). Currently, only vehicles can be detected with the radar/vision sensor combination, i.e., no other type of obstacle, which somewhat limits the variation in the types of scenarios that are assessed. All data are sampled at 10 Hz.</p><p>Another "problem" is that, although we are very thankful for it, the data do not contain any accidents. Instead, the idea is to get the threat-assessment algorithm to identify threatening situations, for example, situations where the host vehicle is driving close to a leading vehicle or is about to change lanes in the direction of a vehicle in the adjacent lane. A correct alarm is thus defined as an alarm that coincides with a traffic situation that might not be very dangerous but still poses some sort of threat. An alarm that does not correspond to a threatening situation is defined as a false alarm.</p><p>Fig. <ref type="figure" target="#fig_6">13</ref> shows an example of a 5-min sequence from the data set, where three threatening situations have been identified. A video clip of one of them is shown in Fig. <ref type="figure" target="#fig_7">14</ref>, which is a situation where the host vehicle approaches a leading vehicle at a high relative velocity. The stochastic nature of the Monte Carlo-based algorithm becomes evident here. The threat value clearly has an increasing trend as the traffic scene evolves, but there is a large variance in the threat values. In fact, when applying the threat algorithm to the same scenario several times, the output threat level will vary slightly. The reason for this is the limited number of samples that are used. An example where more samples have been added is shown in Fig. <ref type="figure" target="#fig_8">15</ref>.   For 10 000 samples, the stochastic behavior is significantly reduced, but of course, the computational cost is much higher; it increases linearly with the number of samples. In a real application, however, these problems can be reduced by the fact that the system will have access to the threat levels from subsequent time steps. Thus, time averaging can be used to reduce noise.</p><p>For long-term performance evaluation, the algorithm has been run on a recorded data set of 4.5 h from a dense German autobahn traffic. A prediction horizon of 3 s and a sample set of 1000 samples were used. The number of alarms is shown in the first column in Table <ref type="table" target="#tab_0">I</ref>. The first and second rows state the total number of correct and false alarms. The quantities T correct and T false , which are the average times between correct and false alarms, are presented on the last two rows. However, many of these alarms have a relatively high TTC value; thus, they do not pose a very high threat. If, for example, only alarms with TTC lower than 2 s are considered, the number of alarms will be significantly reduced (see column two of Table <ref type="table" target="#tab_0">I</ref>).</p><p>A limitation in this paper is that there is not a lot of variation in the data set since all of it was taken from motorway traffic.</p><p>A result of this is that all the alarms that were given can be put into three different categories.</p><p>1) The host vehicle approaches a leading vehicle at high velocity.</p><p>2) The host vehicle drives close to a leading vehicle at about the same speed.</p><p>3) The host vehicle drifts out of its lane in the direction of a vehicle in the adjacent lane. The false alarms are typically caused by vehicles in adjacent lanes. Their future positions are represented by a stochastic distribution, and sometimes, this distribution is a bit too spread out in the lateral direction. It is interesting to note that the alreadyexisting automotive safety functions (forward collision warning <ref type="bibr" target="#b2">[3]</ref> and emergency lane assist <ref type="bibr" target="#b12">[13]</ref>) appear as special cases within this framework. These correspond to the aforementioned categories 1 and 3.</p><p>However, the reader is reminded that this paper does not suggest a new collision warning system; it merely demonstrates that the statistical framework that has been derived can be used to distinguish between threatening and nonthreatening situations in some respect. In a real-life application, one alarm every 4 min during normal driving is unacceptable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>A general threat-assessment algorithm is proposed that is able to incorporate many future hypotheses by regarding the control inputs of other vehicles as stochastic variables. Monte Carlo sampling is then used in order to compute a threat level. A method for creating dense sample sets without increasing computational load is also presented. For example, a result of this is that it becomes unnecessary to include domain-specific knowledge, such as emphasizing specific maneuvers or sets of maneuvers for vehicles when sampling.</p><p>The algorithm was tested both on simulated data and on authentic sensor data, and it successfully distinguishes between threatening and nonthreatening road scenes.</p><p>It was also noted that already existing automotive safety functions, such as forward collision warning and emergency lane assist, emerge as special cases within the general framework. This paper argues that reaching real-time performance regarding computational complexity seems feasible. The framework would thus be suitable both for online use in a safety application and for offline use to distinguish between threatening and nonthreatening situations in recorded data sets.</p><p>The first thing that would be interesting to improve is how the evaluation on real data is done. Whether a road scene is considered dangerous or not is currently based on a visual inspection of the recorded video, and it is, thus, not completely objective. A clear definition of what a dangerous situation is would be very desirable. Another alternative would be to have a panel of several people independently judging the same situations.</p><p>Another aspect that needs further investigation is the distribution of samples. The iterative-sampling process iteratively removes samples with conflicts and replaces them with copies of the conflict-free ones. Occasionally, a few of the initial samples are overrepresented in the final distribution. This means that even though the number of samples in the final distribution is high, many of the samples are based on the same "parents," and thus, the statistical variation can be somewhat limited. This is one of the sources of the stochastic noise in the threat level. How it is possible to reduce these problems and to create better variation in the final distributions is an interesting topic for further investigations. There are also many other possible future research topics, for instance, evaluating the algorithm on data with varying road and weather conditions. It would also be interesting to include "soft" obstacles to model lane markings. Another interesting topic would be to investigate if the visibility map could be improved using studies of driver behavior.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Probability that the host vehicle will observe/regard a vehicle within different regions.</figDesc><graphic coords="3,371.24,70.18,109.08,92.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. Scenario used as an example to illustrate the method for incorporating visibility constraints.</figDesc><graphic coords="4,68.93,69.98,198.12,63.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Definition of the coordinate systems (x, y), (x, ỹ), and (ξ, η) and the parameters c, y off , and Ψ rel .</figDesc><graphic coords="4,331.95,70.02,197.64,244.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Vehicle approaching an obstacle at a high velocity. In the top scenario, the vehicle can barely pass the obstacle. The lower scenario has no conflict-free solution since the lateral friction force available is not sufficient to avoid the obstacle.</figDesc><graphic coords="6,316.95,69.70,228.12,135.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. How the set Uα is defined.</figDesc><graphic coords="7,63.23,70.10,198.36,102.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Set of conflict-free particles based on 500 initial samples obtained (top) with and (bottom) without iterative sampling. The iterative-sampling algorithm generates much denser sample sets.</figDesc><graphic coords="8,307.95,70.38,246.12,97.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Example of a 5-min data sequence. The top plot shows the threat levels for the entire time interval, and the two bottom plots show the detailed behavior for two interesting time intervals.</figDesc><graphic coords="9,302.75,70.26,246.12,208.44" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Video clip at about time 235 s from the data set in Fig. 13. The host vehicle is approaching a leading vehicle as it is about to overtake it.</figDesc><graphic coords="10,77.93,70.46,180.12,135.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 15 .</head><label>15</label><figDesc>Fig.15. Two sequences from Fig.13here run with 10 000 samples. The stochastic behavior is significantly reduced but, of course, at an increased computational cost.</figDesc><graphic coords="10,44.94,256.48,245.88,105.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I LONG</head><label>I</label><figDesc></figDesc><table /><note><p>-TERM PERFORMANCE</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Figures for a typical car: The size is 1.8 × 4.8 m, L =</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>2.4 m, ϕmax = 0.5 rad, a f = 9.1 m • s -2 , and k = 66.6 m 2 • s -3 . This gives v lat = 6.76 m/s and v long = 7.32 m/s. For a bicycle, the size is 0.6 × 2 m, L = 1.6 m, ϕmax = 0.5 rad, a f = 4 m • s -2 , and k = 0.75 m 2 • s -3 . This gives v lat = 3.7 m/s and v long = 0.2 m/s.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>λ 1 = 60/Tmax, λ 2 = 0.5/Tmax/(1 + |v 0 |), λ</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>= 1/Tmax/a 2 f , λ</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>= 75/Tmax/ϕmax, where Tmax is the length of the time interval It.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_5"><p>We use Ts = 0.1 s and Tc = 0.5 s.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>ACKNOWLEDGMENT National ICT Australia is funded by the Australian Department of Communications, Information Technology, and the Arts and the Australian Research Council through Backing Australia's ability and the ICT Centre of Excellence Program.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the Intelligent Vehicle Safety Systems of the Swedish National Road Authorities and in part by Volvo Car Corporation. The Associate Editor for this paper was W. Scherer. A. Eidehall is with Linköping University, 581 83 Linköping, Sweden, and also with Volvo Car Corporation, 405 08 Göteborg, Sweden. L. Petersson is with the Vision Science, Technology, and Applications Group, National ICT Australia, Sydney, N.S.W. 1430, Australia.</p><p>Lars Petersson received the M.Sc. degree in engineering physics and the Ph.D. degree in robotics and autonomous systems from the Royal Institute of Technology, Stockholm, Sweden, in 1997 and 2002, respectively.</p><p>Prior to joining the Vision Science, Technology, and Applications Group, National ICT Australia, Sydney, Australia, as a Project Leader for the Smart Cars project, he was a Researcher with the Australian National University, Canberra, Australia. His research interests are mainly in the area of advanced driver-assistance systems as well as computer-vision-based perceptive systems.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A collision mitigation system using laser scanner and stereovision fusion and its assessment</title>
		<author>
			<persName><forename type="first">R</forename><surname>Labayrade</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Royere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Aubert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06">Jun. 2005</date>
			<biblScope unit="page" from="441" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Forward collision warning with a single camera</title>
		<author>
			<persName><forename type="first">E</forename><surname>Dagan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Mano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shashua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Parma, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06">Jun. 2004</date>
			<biblScope unit="page" from="37" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Automotive Collision Avoidance System Field Operational Test</title>
		<ptr target="www.nhtsa.dot.gov/people/injury/research/pub/ACAS/ACAS-fieldtest" />
	</analytic>
	<monogr>
		<title level="m">Washington DC: Nat. Highway Traffic Safety Admin</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dynamic situation and threat assessment for collision warning systems: The euclide approach</title>
		<author>
			<persName><forename type="first">A</forename><surname>Polychronopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tsogas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Amditis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Scheunert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Andreone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Tango</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Parma, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06">Jun. 2004</date>
			<biblScope unit="page" from="636" to="641" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Collision avoidance theory with application to automotive collision mitigation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Jansson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005-06">Jun. 2005</date>
		</imprint>
		<respStmt>
			<orgName>Linkping Univ., Linkping, Sweden</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Development of a performance-based approach for a rear-end collision warning and avoidance system for automobiles</title>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Feron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kulkarni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Columbus, OH</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-06">Jun. 2003</date>
			<biblScope unit="page" from="316" to="321" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Monte Carlo road safety reasoning</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Broadhurst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kanade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06">Jun. 2005</date>
			<biblScope unit="page" from="319" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Combined road prediction and target tracking in collision avoidance</title>
		<author>
			<persName><forename type="first">A</forename><surname>Eidehall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gustafsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Parma, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06">Jun. 2004</date>
			<biblScope unit="page" from="619" to="624" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sensor fusion for improved vision based lane recognition and object tracking with range-finders</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zomotor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf</title>
		<meeting>IEEE Conf</meeting>
		<imprint>
			<date type="published" when="1997-11">Nov. 1997</date>
			<biblScope unit="page" from="595" to="600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Vägutformning 94 version s-2</title>
		<author>
			<persName><forename type="first">T</forename><surname>Bergh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Moberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Strömberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Fridh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swedish Nat. Road Admin</title>
		<imprint>
			<biblScope unit="page">113</biblScope>
			<date type="published" when="1994">1994. 2002</date>
			<pubPlace>Borlaenge, Sweden</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The marginalized particle filter for automotive tracking applications</title>
		<author>
			<persName><forename type="first">A</forename><surname>Eidehall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">B</forename><surname>Schon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gustafsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell. Veh. Symp</title>
		<meeting>IEEE Intell. Veh. Symp<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-06">Jun. 2005</date>
			<biblScope unit="page" from="369" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A novel approach to nonlinear/non-Gaussian Bayesian state estimation</title>
		<author>
			<persName><forename type="first">N</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Salmond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Inst. Electr. Eng.-F, Radar Signal Process</title>
		<imprint>
			<biblScope unit="volume">140</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="107" to="113" />
			<date type="published" when="1993-04">Apr. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A new approach to lane guidance systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Eidehall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gustafsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Intell</title>
		<meeting>IEEE Intell<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-09">Sep. 2005</date>
			<biblScope unit="page" from="108" to="112" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
