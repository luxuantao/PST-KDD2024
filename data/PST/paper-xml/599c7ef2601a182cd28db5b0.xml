<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Rise of Bots: A Survey of Conversational Interfaces, Patterns, and Paradigms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Cuno</forename><surname>Lorenz</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Pure and Applied Sciences</orgName>
								<orgName type="institution">Urbino University of Urbino &quot;Carlo Bo&quot;</orgName>
								<address>
									<addrLine>Piazza della Repubblica 13</addrLine>
									<postCode>61029</postCode>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><surname>Klopfenstein</surname></persName>
							<email>cuno.klopfenstein@uniurb.it</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Pure and Applied Sciences</orgName>
								<orgName type="institution">Urbino University of Urbino &quot;Carlo Bo&quot;</orgName>
								<address>
									<addrLine>Piazza della Repubblica 13</addrLine>
									<postCode>61029</postCode>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Silvia</forename><surname>Malatini</surname></persName>
							<email>silvia.malatini@uniurb.it</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Pure and Applied Sciences</orgName>
								<orgName type="institution">Urbino University of Urbino &quot;Carlo Bo&quot;</orgName>
								<address>
									<addrLine>Piazza della Repubblica 13</addrLine>
									<postCode>61029</postCode>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alessandro</forename><surname>Bogliolo</surname></persName>
							<email>alessandro.bogliolo@uniurb.it</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Pure and Applied Sciences</orgName>
								<orgName type="institution">Urbino University of Urbino &quot;Carlo Bo&quot;</orgName>
								<address>
									<addrLine>Piazza della Repubblica 13</addrLine>
									<postCode>61029</postCode>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Rise of Bots: A Survey of Conversational Interfaces, Patterns, and Paradigms</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">45694A6B1015178236DE278C85DAB8A0</idno>
					<idno type="DOI">10.1145/3064663.3064672</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.5.2 Information Interfaces and Presentation: User Interfaces Conversational UI</term>
					<term>mobile UI</term>
					<term>botplication</term>
					<term>bots</term>
					<term>messaging</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work documents the recent rise in popularity of messaging bots: chatterbot-like agents with simple, textual interfaces that allow users to access information, make use of services, or provide entertainment through online messaging platforms. Conversational interfaces have been often studied in their many facets, including natural language processing, artificial intelligence, human-computer interaction, and usability. In this work we analyze the recent trends in chatterbots and provide a survey of major messaging platforms, reviewing their support for bots and their distinguishing features. We then argue for what we call "Botplication", a bot interface paradigm that makes use of context, history, and structured conversation elements for input and output in order to provide a conversational user experience while overcoming the limitations of text-only interfaces.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>The reach of third-party applications for mobile operating systems-usually marketed as "apps"-has grown dramatically over the last years. A decade after the launch of the App Store for iPhone in 2008, the number of apps available to smartphone users now reaches into the order of millions. Their reach, impact, and economic significance cannot be ignored.</p><p>However, recent statistics have shown that users frequently make use of a limited set of popular apps. Moreover, most smartphone owners are accustomed to installing nearly zero new apps on their devices on a monthly basis <ref type="bibr" target="#b7">[8]</ref>. For app developers it has become more and more difficult to make Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.</p><p>Instant messaging (IM) and social network applications consistently take up the top spots among the most used applications. IM apps in particular have shown tremendous growth over the last years, recently taking over the lead in terms of number of users, growth, and user engagement <ref type="bibr" target="#b34">[35]</ref>. Messaging platforms are getting immense attention and-as their success depends on the network effect of their users-ferociously compete for market share.</p><p>Starting in 2014, many messaging systems have introduced support for so-called "bots": enhanced conversational agents that can chat with users, right inside the messaging app itself. These bots live inside a very familiar place: in a conversation thread, right next to private conversations with friends and relatives, which is increasingly the most used feature of a user's smartphone. Most users in fact use messaging apps several times a day and have a well-rounded understanding of their interface and manner of working.</p><p>Instead of trying to attract people to new apps, bots provide an incredibly convenient way for services and developers to engage with users where they already are, making use of the existing conversational paradigm. Even if the conversation follows the familiar and recognizable conventions of a messaging system, the exchange does not need to be text-based. Thanks to the richness of the development frameworks made available by many messaging platforms, bots can also exchange information using complex messages and UI primitives, which allow the conversation to be more efficient.</p><p>Bots are growing fast in number and many IM platforms have started offering bot stores, just like mobile OS platforms do for apps. In fact, the robustness of the messaging ecosystemencompassing its existing user base and distribution channelsmake bots the perfect bridgehead to transform instant messaging systems into software delivery platforms. This could be a lucrative endeavor for messaging apps, bringing them into competition with the mobile platforms on which they operate.</p><p>However, to the best of our knowledge, a thorough and detailed appraisal of this phenomena is still missing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contribution</head><p>Our work examines this trend with a history of existing chatbots and a survey of popular IM platforms. We then propose the definition of "Botplications": conversational agents designed to follow a set of guidelines that can serve as functional replacements of apps. The distinguishing characteristics of such agents are identified, including differences and advantages over traditional applications. We then speculate about the future trends of these technologies and conversational interfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HISTORY OF CONVERSATIONAL INTERFACES</head><p>The idea of building a computer-or better, a program-able to talk with humans, giving the illusion of a true human-tohuman interaction, can be dated back to the '50s, when Alan Turing proposed his seminal "Imitation Game" <ref type="bibr" target="#b30">[31]</ref>. Better known as the Turing test, it aims to determine if a machine can give the impression to other humans of being human itself. Today the Turing test is still used as a test for evaluating to which extent a program, a bot, is human-like: the Loebner Prize is annually assigned to the best computer system pretending to be human.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chatterbots</head><p>One of the first examples of such a program was ELIZA, created by Weizenbaum in 1966 <ref type="bibr" target="#b33">[34]</ref>. ELIZA did simply answer all the user's utterances with other vague questions, giving a rough impression of a Rogerian psychotherapist. Weizenbaum's first example of a so-called "chatterbot", and its crude attempts at fooling users into believing they were interacting with another human, laid the foundations for chatterbots and bots in the following 50 years, until today.</p><p>Another example of a popular and more recent chatbot is AL-ICE (Artificial Linguistic Internet Computer Entity), which won the Loebner prize in 2000, 2001, and 2004. It was developed by Wallace in 1995, inspired by ELIZA. ALICE relies on a simple pattern-matching algorithm: it uses pattern templates to represent input and output and makes use of recursive techniques to apply different rules <ref type="bibr" target="#b32">[33]</ref>. The underlying intelligence is based on the Artificial Intelligence Markup Language (AIML), which makes it possible for developers to define the building blocks of the bot's knowledge <ref type="bibr" target="#b31">[32]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Personification</head><p>From the initial attempts with ELIZA and ALICE, to the ambition of developing "intelligent" agents able to fully converse with humans using natural language, bots have been increasingly employed in many fields with a discrete success, yet with limited spread. They have been applied in e-commerce applications <ref type="bibr" target="#b16">[17]</ref>, like Nicole, a virtual assistant with customer service tasks, or Anna by IKEA; in education, like CHAR-LIE <ref type="bibr" target="#b22">[23]</ref>, a bot that lets students communicate with the online learning platform INES, or TQ-bot <ref type="bibr" target="#b9">[10]</ref>, dedicated to student tutoring and evaluation; information retrieval <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b28">29]</ref>, and e-government services <ref type="bibr" target="#b20">[21]</ref>. Most of those bots are based on AIML and ALICE <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b29">30]</ref>.</p><p>Along with chatterbots, supported by the evolution of Automatic Speech Recognition (ASR) systems in the '80s, Spoken Dialog Systems (SDS) started drawing the attention of academics and the industry <ref type="bibr" target="#b21">[22]</ref>. The conversation did move from a textual to a spoken channel, as a presumably easier and more natural interface for humans. ATIS <ref type="bibr" target="#b12">[13]</ref> was a telephone-based flight reservation system, funded by DARPA, developed in 1990, in the USA; in the same years, SUNDIAL was developed in Europe <ref type="bibr" target="#b24">[25]</ref>, with the same aim of giving information about flights via telephone. The latter system was able to understand between 1.000 and 2.000 words in four different languages. Mercury was a similar, more recent, undertaking in this field <ref type="bibr" target="#b27">[28]</ref>. These systems addressed several difficult technological issues, including speech recognition, understanding the user's requests, and giving the system the means of offering satisfactory answers.</p><p>A further step toward the "personification" of intelligent systems has been achieved with the development of Embodied Conversational Agents (ECA) <ref type="bibr" target="#b21">[22]</ref>, in the late '90s In a real world study it was observed that users were inclined to use human-like communication strategies and that they perceived the agent as being sociable <ref type="bibr" target="#b18">[19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Instant messaging</head><p>After the success of browser chats at the beginning of the '90s, like IRC (Internet Relay Chat), the end of that decade has seen the spread of instant messaging services, such as AOL Instant Messaging (known as AIM), Yahoo! Messenger, and MSN Messenger. Many of these platforms allowed users to add bots to their contact lists as if they were real people: they could then exchange simple text messages and receive different kind of information <ref type="bibr" target="#b16">[17]</ref>. A famous example of such a bot was SmarterChild, that could converse about breaking news and the weather.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Virtual Private Assistants</head><p>Only few years ago, "smart assistants" have started drawing the attention of the greater public. Most notably, the reasons of the growing success of VPAs could also be explained by the many differences in respect to older personal assistants. First of all, smartphones have become pervasive in everyday life and are perceived as more personal than any other device. The same goes with the assistants, which are always present for the user. Modern assistants are perceived as more flexible: they are not limited to a very narrow task, but are able to interact with a plethora of applications, internal and external to the device <ref type="bibr" target="#b2">[3]</ref>. The interaction is more "human-like", using simple, yet impressive tricks: the effort made to provide direct answers, in integrated and often spoken dialogs; improvements to the inference of the user's intents and the correction of ambiguities; better interpretations of the input's semantics; the capability of answering sassy questions, giving the illusion of a synthetic and likable personality. All these factors have probably made the luck of modern VPAs and the failure of older ones, like for instance Wildfire, a VPA of the mid '90s, multi-modal and phone based, but with poor human-like interaction capabilities <ref type="bibr" target="#b14">[15]</ref>.</p><p>Even though basic services of the aforementioned personal assistants are somewhat similar (including web search capabilities, event planning, voice calls and messaging, music playback, personalized notifications, weather information retrieval, etc.), some peculiar aspects can differentiate them. Siri and Cortana are the more similar ones, acting as personal assistants with a well defined "personality" that transpires in many of their answers. Google Now is also similar to these first two, but lacks a well defined personality and pulls information directly from the user's online Google Account, possibly raising some privacy questions. Samsung S Voice is probably the more "classical" one among the others and may not be perceived as personal like the other ones. Lastly, Amazon Alexa is going in a somewhat different direction: developed for Amazon Echo, a smart speaker, it brings the Internet of Things (IoT) closer to everyday life and it can be integrated with different other devices and services, especially in regard to home automation and entertainment.</p><p>It is also worth mentioning the IBM statistical responding agent called "Watson" <ref type="bibr" target="#b8">[9]</ref>, which stepped into the limelight in 2010 for participating in the "Jeopardy" television program.</p><p>In that occasion Watson beat both his two human competitors only relying on an off-line database of unstructured contents.</p><p>In more recent years, IBM further developed Watson, turning it into a powerful Artificial Intelligence (AI) assistant employed in health-care and custom-care scenarios. Watson can also be exploited as a cloud-based cognitive services of composable AI building blocks <ref type="bibr" target="#b36">[37]</ref>. Developers can train the Watson AI to answer to answer questions posed in plain natural language about particular intent, and use it to build applications like chatbots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Rise of Bots</head><p>In the last couple of years a new approach to conversational interfaces has been reclaiming prominence: an apparent return to the classic chatterbot texting interfaces has been observed, with the main difference that these new bots have gained additional capabilities and now "live" in the cloud.</p><p>Starting in 2014, many online messaging systems (like Kik, Telegram, and WeChat) have opened up to third-party developers, offering the means to building bots and programmatically exchanging messages with users through their platforms. Application Programming Interfaces (APIs) for bots expose high level services (messaging, payments, bot directory, authentication, etc.) and UI elements (buttons, locations, images, etc.) giving developers the possibility of implementing innovative services through a conversational user experience.</p><p>Services offered by these new bots are of a higher level than the ones offered by their predecessors. Bots often feature access to other services that have utility in everyday life, such as ordering food, managing an e-commerce purchase, booking restaurants, ordering a cab, and so on. Examples include health care bots such as Nombot <ref type="bibr" target="#b10">[11]</ref>, a bot helping users to track their daily food consumption on Telegram; educational bots, like the one by Chaniago et al. that let parents track their children's presence at school <ref type="bibr" target="#b4">[5]</ref>; educational help, like MOOCBuddy that proposes MOOC courses over Messenger <ref type="bibr" target="#b13">[14]</ref>.</p><p>It is also of note that the possibility of building more helpful and practical bots is in good part due to the increased availability of service APIs open to third-parties and the rise of the "platform" business model <ref type="bibr" target="#b6">[7]</ref>. The recent decade has seen a growing attention to open data as well, which is increasingly made available by governments or administrative entities, also providing a useful foundation for many bots.</p><p>Since data and services are more and more accessible through programmatic interfaces, and given that bots often offer a simpler development platform than apps in terms of development and maintenance efforts, the task of offering access to such services through a conversation interface is very approachable.</p><p>Many of the major messaging platforms lately have started offering bot directories: repositories similar to app stores, listing the available bots that can be accessed through the platform.</p><p>Beyond "Chatbots"</p><p>In light of the recent resurgence in popularity of chatbots, we argue for a new and more significant taxonomy of autonomous conversational agents.</p><p>Firstly, the very nature of the term "chatbot" sets certain expectations about the agent's interactions: users may assume that a chatbot will be able to "chat" with them using natural language, but only a subset of autonomous agents are designed to simulate natural conversations. Agents that are not will inevitably fall short in their understanding of humans, who have been generally shown to tend to impatience when interacting with software agents <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>In fact, the "chat" verb trivializes the potential of bots, leading back to chatterbots as silly novelties with which to exchange messages on a command-line, mimicking human idiosyncrasies without any further purpose, just like with the aforementioned ELIZA chatterbot. Instead, as we discuss in the next section, bots have the potential to be a powerful and efficient software platform, only incidentally accessible through text messages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK BOTPLICATIONS Among the plethora of new and old conversational interfaces, we identify a category of conversational agents that, having been designed according to principles of simplicity and effectiveness, can serve as functional replacements of mobile applications.</p><p>We call them "Botplications".</p><p>A Botplication is an agent that is endowed with a conversational interface accessible through a messaging platform, which provides access to data, services, or enables the user to perform a specific task.</p><p>In particular, a Botplication is generally characterized by the following distinguishing features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Thread as app</head><p>Botplications are stepping stones in the evolution from an app-centric mobile OS experience-where the whole user experience of the device is concentrated in mostly independent applications that serve as an enclave of unique services and functions-to a thread-centric experience. That is, a user experience where services and information are provided as streams of messages and notifications, presented using a coherent and consistent set of interface paradigms.</p><p>Messaging threads are independent conversations that enclose personal relationships. Exchanging messages is in fact the primary method for users of a mobile OS to keep up relations with other people, in a very natural and intimate way. These personal conversations and relations can be naturally extended to services and businesses.</p><p>Each one of these threads is an entity that can send updates and notifications to the user, even in multiple parallel conversations, while taking advantage of the built-in facilities of the messaging system.</p><p>Among these facilities, for instance, the ability of users to retain total control over each single thread: they can chose to reply, mute the conversation, or even to permanently delete the thread. Also, threads have the capacity of keeping track of read/unread status and message drafts on multiple devices or platforms. The user has the ability to search for a message across all open threads, instead of having to remember in which particular app or service the information is hidden. Incoming messages on any thread are notified to the user in a familiar way.</p><p>Most modern messaging apps are in fact presented as a threaded "inbox", automatically grouping messages from the same sender and surfacing recently updated conversations that may be of interest. Instead of having new information dispersed across a number of isolated apps, each with its own custom interaction modes, users can rely on the fact that frequently or recently used services are automatically promoted to a visible position.</p><p>A user's "inbox" acts as a replacement for the app-centric homescreen of a mobile OS, where the most recent threads serve the same purpose of a dynamic list of favorite apps.</p><p>Conversation threads make it easy to provide integrated tools and services that make it easy to accomplish regular tasks, but in a recognizable and familiar place: a personal relationship developed through the exchange of text messages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>History awareness</head><p>Just like mobile apps, Botplications are designed to solve a specific and circumscribed issue. However, unlike most apps, Botplications inherently keep an exhaustive chronological log of past interactions with the user in their thread.</p><p>This ingrained feature of a thread of messages allows the user to explore past information in a familiar way, by scrolling through a timeline or by using built-in temporal search. Users can approach the service with more confidence, since past state appears frozen in previous messages and data does not unexpectedly vanish.</p><p>History can only change with familiar and explicit user actions, deep-seated in muscle memory for the majority of users used to receive and send text messages. New messages are appended to the history in a predictable and well-known way, while past interactions can be deleted through explicit action of the user.</p><p>History also serves as guidance to users, since past commands (and the results they generated) can be easily used as a template for future requests.</p><p>Also, past history provides the context in which all future interactions can be evaluated. Information collected by a Botplication should be maintained and used in order to streamline requests, skipping questions and automatically disambiguating between different choices if possible. A conversation is a natural and effective way to collect personal information, interests, purpose, and preferences of the user, all of which can be employed in order to improve the quality and accuracy of the service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Enhanced UI</head><p>Despite the fact that Botplications derive from chatterbot-like conversational interfaces, their UI does not have to consist of mere plain text messages.</p><p>Modern messaging platforms support a variety of messages, including pictures, "stickers" (preset or custom images that convey emotion), videos, and audio. Most platforms also allow the transmission of packaged data, as in the case of geo-locations or contact information, in addition to generic data files. While these platforms of course do not offer the graphical capabilities of apps, it is important to make use of the features available and to exploit the conventions of the messaging platform. For instance, instead of printing out a raw URL, some platforms may display links as nicely formatted cards with a preview.</p><p>Moreover, on many messaging platforms even plain text messages can be enriched with a limited subset of rich text formatting. Bold, italic, and embedded links are the most common formatting options, available through markup languages such as a subset of HTML or Markdown. Unicode-encoded emoji characters can also be used to efficiently transmit additional meaning or to convey emotion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK</p><p>Typing should be reduced to a minimum: ideally it should be limited to very short and concise commands and replies, of few characters. A fitting comparison can be done with UNIX commands, which are an example in terseness, as they were designed to efficiently work over teletypewriters-the primeval example of text-based interfaces-and reward users with powerful functionalities through very little typing.</p><p>Even if it can be argued that younger generations are getting more accustomed to typing on touch-based soft keyboards, the practice of shortening common words or using abbreviations in everyday messaging by itself demonstrates why full-fledged and verbose conversations should be avoided if possible. Interactions with Botplications should follow linear conversation routes and avoid complicated branching or multiple complex dialogs: anything that cannot be accessed through a couple of taps on the screen will become tiresome to most users. In a user study by Azenkot et al. the average text entry for all participants on a popular mobile OS keyboard was of 41.01 Words per Minute (WPM) <ref type="bibr" target="#b0">[1]</ref>. Also, the theoretical maximum typing rate predicted by MacKenzie et al. was of 43.2 WPM for expert users on QWERTY keyboards <ref type="bibr" target="#b19">[20]</ref>, which is of course far lower to what can be achieved by expert typists on a physical keyboard <ref type="bibr" target="#b11">[12]</ref>. Text interactions for mobile users should therefore be kept short and precise.</p><p>Many messaging platforms also feature advanced structured message forms, which can further enhance the flow of conversation. Structured messages may, for instance, contain buttons for preset "canned" replies, show different alternatives in a rich representation, or show a list of available commands. Examples of such messages are shown in the next section. The advantages of structured messages are manifold: (1) They constrain the conversation into a limited number of expected outcomes, reducing the possibility of users feeling trapped in a dead end where they have to "guess" their way out. (2) They push the user to use the service, suggesting how the conversation can continue. They also reduce the need for the users to "explore" the interface, making it easier to learn and use.</p><p>(3) Buttons and quick replies reduce interactions to a single tap instead of requiring complex typing. (4) The service can be implemented more easily.</p><p>Botplications try to fill the gap between plain conversational interfaces-which are inherently inefficient to use and offer little way in terms of user experience customization-and the world of the full graphical interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Limited use of Natural Language Processing (NLP)</head><p>Given the aforementioned rising interest in Virtual Private Assistants (VPAs), voice appears to be a natural fit for conversational interfaces. However, to the best of our knowledge, existing bots on messaging platforms avoid voice processing and choose digital text as the most direct and unambiguous form of communication, possibly adopting NLP systems in order to extract commands and intent from the user's messages.</p><p>Even if natural language understanding is getting progressively more advanced <ref type="bibr" target="#b2">[3]</ref>, in many scenarios complex dialogs break down because of simple misunderstandings, because of unexpected turns of phrase (human language shows incredible variation and rarely follows a script), or because the user's context cannot be fully elicited from the conversation <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b1">2]</ref>.</p><p>Botplications should not attempt to provide the complex experience of a full VPA. Instead, in keeping true to the principles of simplicity and effectiveness, Botplications should almost completely avoid natural language where possible. At the scale of a single bot, going after AI is mostly excessive and counterproductive, when the same results can be obtained with simple text commands using a limited structured language.</p><p>Botplications should in fact not pretend to be human: except in cases where this is desirable (e.g., for customer support or as a barrier before an actual conversations with a human operator is activated), it should be clear to users that they are talking to a machine. Even if artificial delays or "is typing" indicators can be used in order to make the conversation more familiar to the user, faking human responses risks to increase the perceived distance between service and user instead of decreasing it. Texting a computer that doesn't understand what the user is saying can be a frustrating experience, in particular when the computer hides its failures inside a dialog that is artificially kept "natural" and "human-like". This hides failure points in the conversation and makes the user feel less in control of the interaction.</p><p>However, this does not imply that bots shouldn't show a personality or take advantage of humor and emotional responses to provide a charming and likable interaction with users.</p><p>Botplications should rely on the limited-but accurateinteraction tools the messaging platform makes available, while NLP frameworks can optionally be employed to accommodate unforeseen user requests. AI and deep human-like dialogs are red herrings in the current development of conversational interfaces: Botplications should be about accessing services efficiently, a command-line-like interface to cloudbased APIs, not talkers. The scope of each message must be clear, its intent must be explicit, and what action must be taken by the user-if any-must be explicit and unequivocal. Indeed, a message delivered by a Botplication should be conceptually seen as a micro application, while the conversation is a timeline of past application screens. As mentioned before, structured forms of messages, which include buttons or commands, should be used where appropriate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Message self-consistency</head><p>Some messaging platforms have, in fact, the ability to alter messages after they have been delivered. In that case, messages can be changed based on the availability of new data or other changes in state, giving the impression of a living view on the service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK Kik code identifiers, browser integration via Javascript.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slack 3 M</head><p>File. † Monthly Active Users, based on most recent quarterly report published at the end of 2016. Numbers for Slack are an approximation based on known Daily Active Users. ‡ In the form of custom defined menus shown in the conversation UI. § WeUI, HTML/Javascript library that provides web-based UI elements coherent with the WeChat app: https://weui.io/0.4.x/.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Guided conversation</head><p>An important part of an application's user experience is based on user guidance and, likewise, the same care should be applied when designing conversational interfaces through text messages. In fact, because of the free-form nature of the medium, it is easy for bot users to get lost and not to be certain of what commands or what exact syntax is required to perform the desired action.</p><p>A successful Botplication guides the user through a task in order to avoid this impasse. The service proactively suggests actions that are likely to follow up after the current interaction, offers alternative choices when needed, and generally offers a framework in which user interactions feel reliable. This can be achieved using the same UI enhancements mentioned before, that is through the use of buttons, formatted messages, or builtin menus that offer interface guard rails to the conversation. Also, notice that when starting the first interaction with a bot, many messaging platforms offer a way to show a welcome message to the user. The design of the onboarding experience must take into account the initial user guidance and ensure that all functionalities are readily available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TECHNOLOGICAL SURVEY</head><p>In this section the most popular messaging platforms that support bots through their APIs will be taken into exam, describing distinguishing features of each one.</p><p>All of the platforms mentioned allow third-party developers to register an identity for a virtual agent and to programmatically receive messages from any user of the platform, either by accessing an API end-point (pull mode) or by being called back by the platform itself using a "web-hook" (push mode). All platforms, in any mode, make use of the HTTP protocol.</p><p>The Kik messenger service launched in 2010 and introduced bots in 2014. On April 2016 the platform launched a "botshop", which includes a directory of available service bots. WeChat is a popular IM system in China, first launched in 2011, that always included more features than simple messaging. The platform includes support for "Official accounts", which can provide services to users. It includes a payment system that allows the exchange of monetary gifts, known as "red envelopes". Telegram published its bot support API on July 2015, further expanding it with the 2.0 API in April 2016. Line also launched its first messenger API in 2015, while Facebook's Messenger and Skype joined the game only later, including support for bots in April 2016. The former also added support for payments in September 2016.</p><p>Given the rising interest in bots, most platforms are rapidly iterating and evolving their APIs and services to third-party developers. This survey is updated to March 2017.</p><p>In Table <ref type="table" target="#tab_2">1</ref> the platforms considered in this study are listed, firstly reporting the amount of Monthly Active Users (MAU), which gives an approximation of the relative popularity of each system. Furthermore, the table shows whether the platform supports group messaging (i.e., if one or more bots can be added to a group conversation between real users) and mentions (i.e., if bots can be "called into" a conversation using a special combination of characters). Both of these features allow bots to be used in order to perform specific tasks for a group of users instead of only one. The table also reports the different message types supported by the platform (includ-Futures DIS 2017, June 10-14, 2017, Edinburgh, UK ing pictures, voice, video, stickers, and structured messages, discussed in the next section) and other significant features. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Interface features</head><p>Messaging platforms distinguish themselves not only for their underlying technical aspects, but also because of the different user interface elements they offer to bot developers and, ultimately, to the end-users. While sending and receiving text and basic multimedia messages is a common feature, more structured messages are available only on some platforms and often differ in key aspects.</p><p>Many platforms offer a way to suggest canned replies, which can be sent with a single tap. For instance, on Messenger bots may display a selection of quick replies that appear on the bottom of the conversation and remain valid for one interaction, as shown in Figure <ref type="figure" target="#fig_1">1a</ref>. On Telegram and Kik, bots have the ability to replace the keyboard with suggested responses, as shown in Figure <ref type="figure" target="#fig_1">1b</ref>.</p><p>While these preset replies can change in the course of the conversation, other UI features can immutably be added to the chat. In Figure <ref type="figure" target="#fig_2">2a</ref> a list of commands are shown. On Telegram, like on Slack, commands are characterized by starting with a '/' character and are always available to the user to perform tasks in a command line-like experience. A similar system, but with a hierarchical structure, is shown in Figure <ref type="figure" target="#fig_2">2b</ref>: WeChat allows developers to add a fixed menu to the chat interface, showing a maximum of 3 first-level options and several second-level ones. The same system has been also adopted by Messenger in March 2017. Commands and menus alike give direct access to a bot's main features.</p><p>Other UI features are not bound to the overall conversation, but are instead tied to a specific message. For instance, carousel messages shown in Figure <ref type="figure" target="#fig_3">3a</ref> make it possible to include multiple rich cards, provided with an image, a description, and a button, and make them horizontally scrollable to the user.</p><p>In Figure <ref type="figure" target="#fig_3">3b</ref> a message with embedded buttons is shown: in this case the actions provided to the user are not persistent throughout the conversation, but are limited to one single interaction. Both message formats allow bot developers to show available alternatives to the user, providing a well defined path for the conversation.</p><p>Several other message formats are available to specific platforms, among which messages including a "Buy" link for shopping-oriented bots, messages with music support in WeChat, and flight travel itinerary messages on Messenger.</p><p>In terms of making bots interoperate with external systems, it is noteworthy that several messaging platforms have included support for QR Codes or variations thereof. On WeChat, code scanning can be used internally to the system in order to send payments of a preset value to a given contact, which makes the platform compelling for sellers of physical goods as well.</p><p>On the other hand, Skype, Telegram, and Messenger allow web sites and apps to launch conversations through the use of a specially marked URL. Such URLs include a custom data payload that is sent to the bot in order to track user entry points or to invoke specific actions. This mechanism-also known as "deep linking"-can be used to embed bots in innovative and complex workflows <ref type="bibr" target="#b17">[18]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Advantages of Bots for users</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Instant availability</head><p>Bots do not need to be downloaded and installed: they are immediately up and running as soon as a conversation is started inside the messaging app. Device storage capacity, installation, and complex configuration steps are not required. This makes bots fast and lightweight, if compared to traditional mobile apps. Futures DIS 2017, June 10-14, 2017, Edinburgh, UK "Instant Apps", a technology for Android still in development, will bring a similar experience to apps as well, making them instantly available to users without installations<ref type="foot" target="#foot_0">1</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Gentle learning curve</head><p>Texting has been used since the dawn of mobile phones and this makes it quite natural for users of any skill level. Provided that the bot provides adequate guidance through its features, learning how to interact with it is never an outlandish experience.</p><p>Since all bots on the same messaging platform rely on the same UI building-blocks (such as buttons, carousels, quickreplies, and so forth, down to the basic text messages), all bots share a common UI vocabulary. Knowledge in the use of one bot can easily be transfered to the usage of other bots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Notifications</head><p>Many mobile applications implement their own notification system, used as a mean to re-engage inactive users. Instant messaging applications however already include an efficient and functional push notification system, which is available by default without any additional implementation effort.</p><p>According to statistics by Localytics<ref type="foot" target="#foot_1">2</ref> , more than 50% of users find push notifications annoying. However, receiving notifications through the messaging apps could be perceived as being less invasive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Social graph and contacts</head><p>Users are already accustomed to voluntarily sharing and storing contact information in messaging apps. In fact, as soon as a bot conversation is initiated, the bot automatically receives the user's basic personal data. When participating in a group conversation with multiple users, bots also gain access to the contact information of all participants.</p><p>Moreover, all contents generated by an interaction with the bot exist in the form of messages, which can be directly forwarded and shared with friends. Thus contact to the bot can be spread through a user's social graph, without leaving the messaging app or installing new applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Platform independence</head><p>Bots live inside instant messaging applications without having to worry about which mobile platform they are running on. This makes bots independent from the underlying host operating system: each bot is inherently available on all operating systems the messaging app supports, without any graphical or functional adjustment.</p><p>On the contrary, native mobile applications must be adapted or rewritten for each mobile operating system, often with great effort. Users sometimes perceive the same application as being different if they are using it on different operating systems, which can frustrate user engagement. Also, mobile applications must be frequently updated in order to keep up with upgrades to the host system and its features. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Authentication</head><p>Usually, for each new application or service, users need to register and go through the steps of creating a new account. This is a known obstacle to user onboarding, who notably dislike long registration processes and often do not remember new account credentials.</p><p>In contrast, user authentication is not needed in bots. The hosting messaging platform already provides and guarantees the user's identity reliably. Users are uniquely identified by default and they do not have to create additional accounts and passwords in order to interact with the service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Payment support</head><p>Some of the analyzed platforms include payment services, integrated in the messaging system. Often users will have already connected their credit cards or bank accounts to such services, allowing bots to use the existing payment methods in a safe and reliable manner, for both user and developer. In contrast, for each brand new app requiring payment capabilities, users have to re-connect their payment accounts and have to trust the newly installed app.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discoverability</head><p>As seen previously, discoverability is a very real problem for mobile application on application stores: fierce competition and very small economic margins often make it very hard to compete and gain visibility. The same issues exist for bots. Even if many messaging platforms offer "bot stores" with a selection of available bots, emerging and gaining a solid user base remains one of the main development issues. However, bots have some advantages considering that they can be easily integrated in group conversations or shared just like any other contact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Asynchronicity</head><p>Exchanging instant messages is an asynchronous task: after sending a message, users do not have to wait for a reply. Con-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK versation threads store the context, letting user free of leaving a conversation and going back to it later, picking up the dialog from the very last interaction. Multiple conversations can be easily carried forward in parallel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Limited data requirements</head><p>Downloading a new app can have a sizable impact on a limited mobile data plan, whereas starting to use a new bot only requires to initiate a new thread in an existing messaging app, with a negligible impact in terms of data traffic. The data size of exchanged messages in an instant messaging app is limited and usually more predictable. This makes bots very attractive for users with limited data plans or in countries with less developed technological infrastructure <ref type="bibr" target="#b23">[24]</ref>. In fact, Facebook recently developed "Lite" versions of its applications, specifically targeted at emerging markets, where limited data plans are more common <ref type="bibr" target="#b35">[36]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Advantages of Bots for developers</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Communication reliability</head><p>Instant messaging applications are naturally designed for fast and efficient message delivery. They are capable of dealing with all kinds of network issues, automatically retrying transmissions and ensuring that the message is either delivered or that failure is handled adequately or correctly reported to the user. Security and privacy of transmitted messages are also guaranteed by many platforms.</p><p>On the other hand, mobile applications must implement most of these networking features independently, incurring in the likely risk of bugs or security issues. These issues are multiplied in case of multi-platform applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fast iteration</head><p>Since a bot's logic is implemented server-side and no code must be deployed onto user devices, deployment is effectively effortless. Similarly to what happens for web pages or web apps, bot updates are also almost immediately propagated to all users. This form of deployment also completely avoids issues with app stores, for instance due to rejections or delays during application review. This allows for fast and uncomplicated development iterations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lack of version fragmentation</head><p>The immediate propagation of updates to all users also means that no user risks staying stuck with an old version of a mobile application: just like web apps, bots are always updated to the latest version.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Limited design efforts</head><p>Bots heavily rely on the instant messaging application UI and usually have quite limited possibilities of graphical customization. This reduces the interface design time, limiting it to minor customizations of interface elements and focusing on a rich user experience using few simple building-blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Development ease</head><p>As seen in the previous sections, several important and demanding services are already implemented by the messaging platform. Services such as user authentication or payments normally require major efforts and attention by mobile app developers. Bots however already include many of these services, which are ready to use through developer APIs.</p><p>Moreover, having a generally smaller API surface-which can be used through any development platform and languagedeveloping a bot is generally cheaper and less time demanding than the development of a mobile application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DISCUSSION</head><p>As previously examined, the mobile device ecosystem has been characterized by the popularity of mobile apps and app stores as a software distribution platform in the last decade.</p><p>Recent statistics have however shown that users tend to rely almost exclusively on a very restricted set of consolidated, preferred apps, instead of trying out new ones, leading the number of new downloaded apps nearly to zero in the shortmedium period <ref type="bibr" target="#b7">[8]</ref>. Moreover, a 2014 report has also shown the surprising overtake of online messaging platforms usage over social network apps <ref type="bibr" target="#b34">[35]</ref>.</p><p>Bots on instant messaging platforms have recently started gaining widespread interest. As discussed above, not only do bots rely on very popular messaging apps, they also eschew many of the difficulties of mobile app development and distribution. In fact, bots can increasingly be considered as a novel approach to the software distribution problem.</p><p>From this point of view, bots show many similarities with mobile web apps, as a distribution system competing with native mobile applications <ref type="bibr" target="#b5">[6]</ref>:</p><p>1. they allow the development of multi-platform services using a commonly available platform (messaging apps or the web), 2. they are partly limited in terms of what features of the mobile device they have access to (this is particularly true for bots, which however have a different usage paradigm with different expectations from users), 3. the "look and feel" is different from a native app (however, while the user experience of mobile web apps may be different from what users are accustomed to, bots offer a very familiar interface that feels native to the messaging app at least), 4. both approaches favor developers in terms of development, distribution, and maintenance efforts, however bots also ensure a high ease of use to end-users.</p><p>These advantages notwithstanding, there are different drawbacks to bots that must be taken into consideration when evaluating their merits as a software platform.</p><p>In the first place, not every application is well suited for conversational interfaces. There are several tasks that are inherently more convenient to be tackled by means of a dedicated app, with access to local computational resources and data storage, instead of a remote bot. Other tasks simply work better with a rich visual interactions that goes beyond what a conversational interface can offer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Futures</head><p>DIS 2017, June 10-14, 2017, Edinburgh, UK</p><p>Even if bot development is very approachable by developers and offers many advanced features at essentially very little effort, a bot is tightly bound to its messaging platform, which may lead to design constraints. There are, very noticeably, inherent limits to the customization of UI elements, the look and feel, and finer details of the user experience.</p><p>Bots require an active Internet connection in order to work (in contrast to modern mobile web apps, which may provide an offline experience). This can create discontinuities in service availability and negatively affect the bot's perceived reliability, in case of lacking network coverage or limited data plans, especially in growing markets <ref type="bibr" target="#b23">[24]</ref>.</p><p>Despite the appearance of "bot directories", discoverability is still a crucial issue that must be tackled both by developers and bot platforms. Also, the risk of an overpopulation of bots that hinders the discovery of new services, like for app stores, is equally likely.</p><p>Many recent efforts in the field of bots have made use of natural language processing in order to create a generic conversational interface, supporting natural human-like interactions.</p><p>There is however an inherent distinction between conversational virtual assistants (such as Amazon Alexa or Apple's Siri), which are well-suited to interactions through spoken natural language, and service-oriented bots, that currently benefit from structured input. While the first kind of bots may provide a more convenient, and in some cases instinctive, interface, the latter can focus on providing a more efficient and lean experience. Also, NLP capabilities are presently not always sufficient to fulfill natural-feeling conversations and they still impose a learning curve on users <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref>.</p><p>Even though some of these issues can be addressed and mitigated in the near future, there are inherent limitations to what bots can offer, which limit how far they can serve as a replacement to native and web apps.</p><p>The relative novelty of bots must also be taken into account: the first roots for the spread of bots have been put down, but we are still in the very early days of this new era. A "killer application" for bot platforms, which goes "viral" and fully justifies the rising interest by clearly showing the full potential of bots, is yet to be seen.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>In this work the spread of the new generation of bots on messaging platforms has been discussed, describing how the concept of "bot" has changed from its very first stages to the present days.</p><p>A definition of Botplications has been given, as a conversational agent living on existing messaging platforms, that follows a set of principles of simplicity and purposefulness in providing access to services and data.</p><p>Features and limitations of the most prominent messaging platforms have been presented and compared. A technological survey, depicting in detail the peculiar available user interface mechanisms, and advantages of bots, for both users and developers, were discussed in detail.</p><p>In conclusion, even if bots will not substitute the whole mobile application ecosystem in the near future, close attention must be paid to the "rise of bots", as a new software platform for delivering services and data to users.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Each single message sent by a Botplication should contain the full context of the conversation and should embody what a single UI screen represents for mobile apps. Users should not have to browse through their conversation history in order to figure out what they are attempting to do and what the service is expecting. Each message has an atomic meaning and stands on its own.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Features that allow users to pick suggested replies. (a) Quick replies on Messenger. (b) Button keyboard on Telegram.</figDesc><graphic coords="7,71.32,97.67,97.21,172.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Structured commands available during the whole conversation. (a) Commands on Telegram. (b) Custom defined menu (with an open second-level menu) on WeChat.</figDesc><graphic coords="7,338.49,483.73,97.21,172.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Structured message templates in Messenger. (a) Carousel presenting multiple choices through horizontal scrolling. (b) Message buttons embedded in a message.</figDesc><graphic coords="8,338.49,62.36,97.21,172.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Features of major messaging platforms that support bots (as of October 2016).</figDesc><table><row><cell cols="3">Platform MAU † Groups Mentions Message types</cell><cell>Buttons Carousel Quick reply Payment</cell></row><row><cell>Messenger</cell><cell>800 M</cell><cell>Picture, video, file, voice.</cell><cell></cell></row><row><cell></cell><cell cols="3">Persistent menus, several message templates (Airline trip, Buy, Receipt, Web link, etc.).</cell></row><row><cell>WeChat</cell><cell>700 M</cell><cell>Picture, video, sticker, voice, location.</cell><cell>‡</cell></row><row><cell></cell><cell cols="3">Deep-links through QR codes, Rich media and Music messages. Integrated web views  § .</cell></row><row><cell>Skype</cell><cell>300 M</cell><cell>Picture, video.</cell><cell></cell></row><row><cell></cell><cell cols="3">Several message templates (Hero image, Thumbnail, Receipt, Sign-in, etc.), phone call support.</cell></row><row><cell>Line</cell><cell>220 M</cell><cell>Picture, video, sticker, voice, location.</cell><cell></cell></row><row><cell></cell><cell cols="2">Imagemap message template (picture with multiple hot-spots).</cell><cell></cell></row><row><cell>Telegram</cell><cell>100 M</cell><cell>Picture, video, sticker, file, voice, location.</cell><cell></cell></row><row><cell></cell><cell cols="2">Persistent commands. Deep-links to conversations.</cell><cell></cell></row><row><cell>Kik</cell><cell>80 M</cell><cell>Picture, video, sticker, voice.</cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://developer.android.com/topic/instant-apps/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http:/info.localytics.com/blog/the-inside-view-howconsumers-really-feel-about-push-notificationsAccessed: 2016-10-10. (a) (b)</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Touch behavior with different postures on soft smartphone keyboards</title>
		<author>
			<persName><forename type="first">Shiri</forename><surname>Azenkot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shumin</forename><surname>Zhai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th international conference on Human-computer interaction with mobile devices and services</title>
		<meeting>the 14th international conference on Human-computer interaction with mobile devices and services</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Speaky for robots: the development of vocal interfaces for robotic applications</title>
		<author>
			<persName><forename type="first">Emanuele</forename><surname>Bastianelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniele</forename><surname>Nardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlucci</forename><surname>Luigia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabrizio</forename><surname>Aiello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolamaria</forename><surname>Giacomelli</surname></persName>
		</author>
		<author>
			<persName><surname>Manes</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10489-015-0695-5</idno>
		<ptr target="http://dx.doi.org/10.1007/s10489-015-0695-5" />
	</analytic>
	<monogr>
		<title level="j">Applied Intelligence</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="43" to="66" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Spoken language understanding for natural interaction: The Siri experience</title>
		<author>
			<persName><surname>Jerome R Bellegarda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Natural Interaction with Robots, Knowbots and Smartphones</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="3" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Embodiment in conversational interfaces: Rea</title>
		<author>
			<persName><forename type="first">Justine</forename><surname>Cassell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Bickmore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Billinghurst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lee</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenny</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hannes</forename><surname>Vilhjálmsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hao</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human Factors in Computing Systems</title>
		<meeting>the SIGCHI conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="520" to="527" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Student Presence Using RFID and Telegram Messenger Application. 8th Widyatama International Seminar on Sustainability</title>
		<author>
			<persName><forename type="first">Muhammad</forename><surname>Benny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chaniago</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Apri</forename><surname>Junaidi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
			<publisher>Widyatama University and IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Mobile Application Development: Web vs. Native</title>
		<author>
			<persName><forename type="first">Andre</forename><surname>Charland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Leroux</surname></persName>
		</author>
		<idno type="DOI">10.1145/1941487.1941504</idno>
		<ptr target="http://dx.doi.org/10.1145/1941487.1941504" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="49" to="53" />
			<date type="published" when="2011-05">2011. May 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Platform revolution: How networked markets are transforming the economy-and how to make them work for you</title>
		<author>
			<persName><forename type="first">Sangeet</forename><surname>Paul Choudary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marshall</forename><forename type="middle">W</forename><surname>Van Alstyne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><forename type="middle">G</forename><surname>Parker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<ptr target="https://www.comscore.com/Insights/Presentations-and-Whitepapers/2014/" />
		<title level="m">The U.S. Mobile App Report</title>
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
			<biblScope unit="page" from="2016" to="2026" />
		</imprint>
	</monogr>
	<note type="report_type">US-Mobile-App-Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Building Watson: An overview of the DeepQA project</title>
		<author>
			<persName><forename type="first">David</forename><surname>Ferrucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jennifer</forename><surname>Chu-Carroll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Gondek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><forename type="middle">A</forename><surname>Kalyanpur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adam</forename><surname>Lally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Murdock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eric Nyberg, John Prager, and others</title>
		<imprint>
			<date type="published" when="2010">2010. 2010</date>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="59" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">TQ-Bot: an AIML-based tutor and evaluator bot</title>
		<author>
			<persName><forename type="first">Juan</forename><surname>Fa Fonte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Burguillo</forename><surname>Carlos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martín</forename><surname>Rial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nistal</forename><surname>Llamas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Universal Computer Science</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1486" to="1495" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Nombot: simplify food tracking</title>
		<author>
			<persName><forename type="first">Bettina</forename><surname>Graf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maike</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Felix</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Ruhland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Zech</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Mobile and Ubiquitous Multimedia</title>
		<meeting>the 14th International Conference on Mobile and Ubiquitous Multimedia</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="360" to="363" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Reduced QWERTY Keyboard for Mobile Text Entry</title>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jan</forename><surname>Kruger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chirag</forename><surname>Faldu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>St</surname></persName>
		</author>
		<author>
			<persName><surname>Amant</surname></persName>
		</author>
		<idno type="DOI">10.1145/985921.986082</idno>
		<ptr target="http://dx.doi.org/10.1145/985921.986082" />
	</analytic>
	<monogr>
		<title level="m">CHI &apos;04 Extended Abstracts on Human Factors in Computing Systems (CHI EA &apos;04)</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="1429" to="1432" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The ATIS spoken language systems pilot corpus</title>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">J</forename><surname>Charles T Hemphill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><forename type="middle">R</forename><surname>Godfrey</surname></persName>
		</author>
		<author>
			<persName><surname>Doddington</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the DARPA speech and natural language workshop</title>
		<meeting>the DARPA speech and natural language workshop</meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="96" to="101" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">MOOCBuddy: a chatbot for personalized learning with MOOCs</title>
		<author>
			<persName><forename type="first">Adrian</forename><surname>Iftene</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jean</forename><surname>Vanderdonckt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RoCHI-International Conference on Human-Computer Interaction</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page">91</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A multimodal, multilingual telephone application: the wildfire electronic assistant</title>
		<author>
			<persName><forename type="first">Philippe</forename><surname>Jeanrenaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Cockroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Allard</forename><surname>Vanderheidjen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
	<note>In EUROSPEECH</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An experiment in the design of software agents</title>
		<author>
			<persName><forename type="first">Henry</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bart</forename><surname>Selman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Coen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Ketchpel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Ramming</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="438" to="443" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Bots, babes and the californication of commerce. University of Ottawa Law and</title>
		<author>
			<persName><forename type="first">Ian</forename><forename type="middle">R</forename><surname>Kerr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technology Journal</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="2" />
			<date type="published" when="2004">2004. 2004. 20004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The Quiz-Master Bot: a persistent augmented quiz delivered through online messaging</title>
		<author>
			<persName><forename type="first">Lorenz</forename><surname>Cuno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Klopfenstein</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Alessandro</forename><surname>Bogliolo</surname></persName>
		</author>
		<idno type="DOI">10.21125/inted.2017.2328</idno>
		<ptr target="http://dx.doi.org/10.21125/inted.2017.2328" />
	</analytic>
	<monogr>
		<title level="m">INTED2017 Proceedings (11th International Technology</title>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="9806" to="9811" />
		</imprint>
	</monogr>
	<note>Education and Development Conference)</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A conversational agent as museum guide-design and evaluation of a real-world application</title>
		<author>
			<persName><forename type="first">Stefan</forename><surname>Kopp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lars</forename><surname>Gesellensetter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicole</forename><forename type="middle">C</forename><surname>Krämer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ipke</forename><surname>Wachsmuth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Intelligent Virtual Agents</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="329" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Text entry using soft keyboards</title>
		<author>
			<persName><forename type="first">Mackenzie</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shawn</forename><forename type="middle">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Soukoreff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behaviour &amp; Information technology</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="235" to="244" />
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Adding interactive interface to E-Government systems using AIML based chatterbots</title>
		<author>
			<persName><forename type="first">Naresh</forename><surname>Rp Mahapatra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aakash</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chitransh</forename><surname>Trivedi</surname></persName>
		</author>
		<author>
			<persName><surname>Aman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Engineering (CONSEG), 2012 CSI Sixth International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">Michael</forename><surname>Mctear</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoraida</forename><surname>Callejas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Griol</surname></persName>
		</author>
		<title level="m">The Conversational Interface</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">CHARLIE: An AIML-based Chatterbot which Works as an Interface among INES and Humans</title>
		<author>
			<persName><forename type="first">Juan</forename><forename type="middle">C</forename><surname>Fernando A Mikic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martín</forename><surname>Burguillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Llamas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eduardo</forename><surname>Rodríguez</surname></persName>
		</author>
		<author>
			<persName><surname>Rodríguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EAEEIE Annual Conference</title>
		<imprint>
			<date type="published" when="2009">2009. 2009</date>
			<biblScope unit="volume">IEEE</biblScope>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Mobile apps in Africa</title>
		<author>
			<persName><forename type="first">San</forename><surname>Murugesan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IT Professional</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="8" to="11" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Speech Understanding and Dialogue over the telephone: an overview of the ESPRIT SUNDIAL project</title>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>Peckham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
	<note>In HLT</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">A Chat-bot based Multimodal Virtual Guide for Cultural Heritage Tours</title>
		<author>
			<persName><forename type="first">Antonella</forename><surname>Santangelo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Agnese</forename><surname>Augello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Antonio</forename><surname>Gentile</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Pilato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salvatore</forename><surname>Gaglio</surname></persName>
		</author>
		<idno>PSC. 114-120</idno>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Review of integrated applications with AIML based chatbot</title>
		<author>
			<persName><forename type="first">Md</forename><surname>Shahriare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Satu</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 International Conference on Computer and Information Engineering (ICCIE)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="87" to="90" />
		</imprint>
	</monogr>
	<note>Md Hasnat Parvez, and others</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Dialogue Management in the Mercury Flight Reservation System</title>
		<author>
			<persName><forename type="first">Stephanie</forename><surname>Seneff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Polifroni</surname></persName>
		</author>
		<idno type="DOI">10.3115/1117562.1117565</idno>
		<ptr target="http://dx.doi.org/10.3115/1117562.1117565" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2000 ANLP/NAACL Workshop on Conversational Systems</title>
		<meeting>the 2000 ANLP/NAACL Workshop on Conversational Systems<address><addrLine>Stroudsburg, PA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="11" to="16" />
		</imprint>
	</monogr>
	<note>ANLP/NAACL-ConvSyst &apos;00)</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">FAQchat as in Information Retrieval system</title>
		<author>
			<persName><forename type="first">Abu</forename><surname>Shawar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Atwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human Language Technologies as a Challenge for Computer Science and Linguistics: Proceedings of the 2nd Language and Technology Conference. PoznanÌ Ą: Wydawnictwo PoznanÌ Ąskie: with co-operation of Fundacja Uniwersytetu im. A. Mickiewicza</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="274" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Chatbots: are they really useful?</title>
		<author>
			<persName><forename type="first">Abu</forename><surname>Bayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eric</forename><surname>Shawar</surname></persName>
		</author>
		<author>
			<persName><surname>Atwell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LDV Forum</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="29" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Computing machinery and intelligence</title>
		<author>
			<persName><forename type="first">Alan</forename><forename type="middle">M</forename><surname>Turing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mind</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="433" to="460" />
			<date type="published" when="1950">1950. 1950</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">The elements of AIML style</title>
		<author>
			<persName><forename type="first">Richard</forename><surname>Wallace</surname></persName>
			<affiliation>
				<orgName type="collaboration">Alice AI Foundation</orgName>
			</affiliation>
		</author>
		<imprint>
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The anatomy of ALICE</title>
		<author>
			<persName><forename type="first">Wallace</forename><surname>Richard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Parsing the Turing Test</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="181" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">ELIZA -a Computer Program for the Study of Natural Language Communication Between Man and Machine</title>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Weizenbaum</surname></persName>
		</author>
		<idno type="DOI">10.1145/365153.365168</idno>
		<ptr target="http://dx.doi.org/10.1145/365153.365168" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="36" to="45" />
			<date type="published" when="1966-01">1966. Jan. 1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">Will</forename><surname>Mckitterick</surname></persName>
		</author>
		<title level="m">The Messaging App Report: How instant messaging can be monetized</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Facebook is a Luxury&quot;: An Exploratory Study of Social Media Use in Rural Kenya</title>
		<author>
			<persName><forename type="first">Susan</forename><forename type="middle">P</forename><surname>Wyche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sarita</forename><forename type="middle">Yardi</forename><surname>Schoenebeck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Forte</surname></persName>
		</author>
		<idno type="DOI">10.1145/2441776.2441783</idno>
		<ptr target="http://dx.doi.org/10.1145/2441776.2441783" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 Conference on Computer Supported Cooperative Work (CSCW &apos;13)</title>
		<meeting>the 2013 Conference on Computer Supported Cooperative Work (CSCW &apos;13)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="33" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Building a Chatbot with Serverless Computing</title>
		<author>
			<persName><forename type="first">Mengting</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Perry</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vatche</forename><surname>Ishakian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Workshop on Mashups of Things and APIs</title>
		<meeting>the 1st International Workshop on Mashups of Things and APIs</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page">5</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
