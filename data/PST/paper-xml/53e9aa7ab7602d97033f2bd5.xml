<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Bluetooth scatternet formation: A survey</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2004-03-03">3 March 2004</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Roger</forename><forename type="middle">M</forename><surname>Whitaker</surname></persName>
							<email>r.m.whitaker@cs.cf.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="laboratory">Centre for Mobile Communications</orgName>
								<orgName type="institution">Cardiff University</orgName>
								<address>
									<addrLine>Queen&apos;s Buildings, 5 The Parade</addrLine>
									<postBox>P.O. Box 916</postBox>
									<postCode>CF24 3XF</postCode>
									<settlement>Cardiff</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Leigh</forename><surname>Hodge</surname></persName>
							<email>l.e.hodge@cs.cf.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="laboratory">Centre for Mobile Communications</orgName>
								<orgName type="institution">Cardiff University</orgName>
								<address>
									<addrLine>Queen&apos;s Buildings, 5 The Parade</addrLine>
									<postBox>P.O. Box 916</postBox>
									<postCode>CF24 3XF</postCode>
									<settlement>Cardiff</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Imrich</forename><surname>Chlamtac</surname></persName>
							<email>chlamtac@utdallas.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Erik Jonsson School of Engineering and Computer Science</orgName>
								<orgName type="institution">The University of Texas at Dallas</orgName>
								<address>
									<postBox>P.O. Box 830688</postBox>
									<postCode>75083-0688</postCode>
									<settlement>Richardson</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Bluetooth scatternet formation: A survey</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2004-03-03">3 March 2004</date>
						</imprint>
					</monogr>
					<idno type="MD5">DCCA25129FF9B0A4B7AD1B8D0A53ECBB</idno>
					<idno type="DOI">10.1016/j.adhoc.2004.02.002</idno>
					<note type="submission">Received 1 October 2003; accepted 1 February 2004</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Bluetooth</term>
					<term>Scatternets</term>
					<term>MAC</term>
					<term>Routing</term>
					<term>Scheduling</term>
					<term>Connectivity</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper describes the issue of piconet interconnection for Bluetooth technology. These larger networks, known as scatternets, have the potential to increase networking flexibility and facilitate new applications. While the Bluetooth specification permits piconet interconnection, the creation, operation and maintenance of scatternets remains open. In this paper, the research contributions in this arena are brought together, to give an overview of the stateof-the-art. First, operation of the Bluetooth system is explained, followed by the mechanism for link formation. Then, the issue of piconet interconnection is considered in detail. Processes for network formation, routing and intra-and inter-piconet scheduling, are explained and classified. Finally, the research issues arising are outlined.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The Bluetooth (BT) technology, as specified in the Bluetooth System Version 1. <ref type="bibr">1 [29]</ref>, is the first flexible, mass market protocol for wireless ad hoc operation. This means that global control of the network is relinquished, permitting spontaneous deployment without dependence on fixed infrastructure. However, decentralised network organisation is required to enable self-planning and management, which is a key challenge in developing fourth generation technology.</p><p>The BT specification has been converted into IEEE standard 802.15 <ref type="bibr" target="#b15">[16,</ref><ref type="bibr">88]</ref>. From the outset, the specification has been mass-market oriented, driven by a special interest group (SIG) of major manufacturers, keen to develop a robust, flexible, 1570-8705/$ -see front matter Ã“ 2004 Elsevier B.V. All rights reserved. doi:10.1016/j.adhoc.2004.02.002 and economically viable technology that can be easily incorporated into a multitude of devices to enhance their functionality via short connectivity, using low power radio links (10-100 m) in the unlicensed 2.4 GHz industrial, scientific and medical (ISM) band. Most current Bluetooth devices offer the modest range of 10 m using the (low) power class 2. This is a deliberate action, as Bluetooth is currently primarily a technology for personal area networks (PAN), where device battery power is limited. However, in the long term, higher power and extended range could lead to a range of further applications, beyond personal area networks. Additionally the technology may well prove a useful starting point for the development of other applications, and systems, such as those in the military arena.</p><p>In its current form, Bluetooth is well on the way to reaching impressive levels of penetration, helped by its royalty free status. It is estimated that 35 million chip-sets were produced in 2002, with an estimated rise to 510 million by 2006 <ref type="bibr">[35]</ref>. The characteristics of the Bluetooth chip <ref type="bibr" target="#b92">[96]</ref> have facilitated this, based on an occupancy of 90 mm 2 , power consumption of 25 lA when idle with a peak of 25 mA, and a cost of less than 4 USA dollars per terminal for high volume production.</p><p>Since the conception of the Special Interest Group (SIG) in 1998 and the release of specification (v1.1 in February 2001), Bluetooth has received a considerable amount of attention, being vigorously marketed by the SIG who promise a technology to ''seamlessly connect all your mobile devices''. Commercial interest frequently centres around its application (potential future application is given in <ref type="bibr" target="#b19">[20]</ref> for example). An important limiting factor in developing future applications are the networking possibilities that the technology can facilitate. As currently specified, Bluetooth self-organises networks of up to eight active devices in piconets, but the specification permits much more. Piconet interconnection is possible, permitting multi-hop links between out-of-range devices. However, mechanisms for establishing and maintaining such scatternets remain open, challenged by the need to provide totally decentralised, high performance solutions for potentially dynamic environments. Consequently, the extent to which the Bluetooth networking capabilities can be advanced are receiving particular attention, and this is the focus of our survey on the state-of-the-art. The rapid pace of research in this area has led to a large, dispersed and fragmented literature, which broadly seeks to further investigate and extend the operation of Bluetooth at the equivalent of the network layer in the traditional OSI model. This constitutes development for network formation, maintenance, scheduling and routing in the context of Bluetooth.</p><p>We begin by introducing the Bluetooth specification and the operation of the system for a single piconet. To support scatternets, we then consider the extension of functionality in the BT specification. The broad issues involved in defining a protocol to support scatternet operation are described in Section 2. In Section 3, we describe the general issues which influence the design of protocols in the context of Bluetooth. In Section 4, we consider the different possible topologies that have been proposed for scatternet applications. In Section 5 we consider the problem of forming and maintaining a scatternet, specifically the process of establishing device role. In Section 6, we describe the different techniques that have been applied to assess network performance. In Section 7, we consider the issue of routing. Finally, in Section 8 we address the problem of scheduling inter-and intra-piconet communication.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.">Moving from piconets to scatternets</head><p>The original and first use of Bluetooth technology has been for small clusters of devices, which operate using the concept of a piconet. This is a collection of devices sharing the same communication channel. Devices such as laptops, mobile phones, PDAs are currently the main proponents of the technology, and it is likely to remain this way in the short term. However, there are a number of arguments which support the development of the technology for inter-connecting piconets to form scatternets. Like many technological developments, scatternets may precede concrete applications. However, high levels of market penetration will increase the density of Bluetooth en-abled devices, thereby increasing the potential for scatternet based applications.</p><p>Scenarios requiring a greater amount of connectivity have received limited attention. In <ref type="bibr" target="#b35">[38]</ref>, the authors argue that scatternet functionality is important to allow flexible formation of Bluetooth personal area networks. Additionally, it is argued that scatternet functionality may also be used to improve the performance of a group of nodes that are either already part of a scatternet, or part of separate piconets. The roles of devices in such nodes may be rearranged to adapt to a new traffic distribution.</p><p>Bluetooth also can be used in a cellular fashion via access points for wireless LAN applications, which creates further opportunities for scatternet applications. Bluetooth WLANs are already in service for large scale commercial IP applications, such as conference scenarios like ''Cebit 2003'', where 150 Bluetooth access points were provided for piconet formation <ref type="bibr" target="#b44">[47]</ref>. Critics may be quick to dismiss the use of Bluetooth in this context, due to superior performance of the dominant wireless LAN technology, WiFi <ref type="bibr">(IEEE 802.11b</ref>). This offers a higher data rate over a much greater distance (50 m versus 10 m for Class 2 Bluetooth devices). In <ref type="bibr" target="#b19">[20]</ref>, it is pointed out that while these comparisons are technically correct, Bluetooth has a much more powerful business model associated with it, based on two key points. Firstly, Bluetooth is designed for a myriad of wireless PAN applications. Secondly, the cost and size of the technology means that it is being included in equipment by default. These points mean that opportunities will exist to further network devices, including access points, for Bluetooth applications.</p><p>Finally, the low cost, power efficient specification of the technology means that there are potential Bluetooth applications in other ad hoc scenarios such as sensor networks <ref type="bibr" target="#b0">[1]</ref>. These networks involve a large number of densely deployed wireless sensors, which need to be low power and low cost devices. The current literature acknowledges Bluetooth as being too expensive and too power consuming for sensor network application. However, there are a number of additional points which need to also be considered. The cost of a sensor network node should be less than 1 dollar to make the network feasible <ref type="bibr" target="#b71">[74]</ref>. Clearly, the current Bluetooth production cost of 4 dollars <ref type="bibr" target="#b92">[96]</ref> exceeds this, but it is feasible that this cost will fall further. In <ref type="bibr" target="#b26">[27]</ref>, it is argued that Bluetooth is not currently efficient for sensor networks because turning them on and off adds to the energy consumption. However, this has to be contrasted against the additional features that a Bluetooth sensor network could provide, including higher data rates than many sensor network solutions <ref type="bibr" target="#b0">[1]</ref>, off-the-shelf specification and compatibility with any other Bluetooth enabled device. This would enable direct access to other wired and wireless services. There may be scenarios where these advantages out weigh the increase in cost and additional power consumption. If Bluetooth were adopted in this context, scatternet formation for large networks would be essential.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The Bluetooth specification</head><p>Although it is not the purpose of our paper to describe the BT specification in detail, we do provide an overview to set the context of research activities. The Bluetooth radio system is defined to resolve the following fundamental issues in an ad hoc communication scenario, concerning application of the radio spectrum, discovery of devices, connection establishment, channel allocation, medium access control, interference and power consumption. These aspects are the focus of our description of BT. In Fig. <ref type="figure" target="#fig_0">1</ref>, we present the organisation of the Bluetooth stack. There are now many detailed expositions of various aspects of the BT system including books <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b59">62,</ref><ref type="bibr" target="#b67">70]</ref> and general articles <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b29">31,</ref><ref type="bibr" target="#b30">32,</ref><ref type="bibr" target="#b35">38]</ref>, from which we provide a brief summary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Radio layer</head><p>At the lowest level, the radio layer of the core specification defines the wireless interface. Spread spectrum frequency-hopping occurs in the 2.4 GHz ISM band using either 79 or 23 radio frequencies in countries with restrictions in the ISM band. A fast hopping rate of 1600 hops per second occurs, using pseudo-random hopping sequences, which provide an automatic method for controlling interference from other sources in the unregulated ISM band. These frequencies are located at (2402 + a) MHz, for a = 0,1, . . . ,78. The modulation technique is Gaussian Frequency Shift Keying (GFSK) which enables a simple low cost radio chip design and a transmission speed of up to 1 Mb/s. The baud rate is 1 Msymbols per second. Three power classes are defined for transmission, 20 dBm (100 mW), 4 dBm (2.5 mW) and 0 dBm (1 mW). A service threshold of Ã€70 dBm or better, is required. For further details of the radio layer, the reader is referred to <ref type="bibr" target="#b30">[32]</ref>, which provides a description of the system including link budget characteristics and signal-to-interference ratio information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1.">Hopping sequences</head><p>Frequency hopping provides interference diversity gain and frequency diversity gain, which are required for multiple channels to co-exist independently. The frequency hopping mechanism used by each device operates in a ''black box'' fashion, with a device identity and clock as input, and a frequency as output. More specifically, the sequence is selected by the unit identity, and the phase by the clock. A huge number of sequences are available to each unit, with each covering about 23 h. This prevents repetition of an interference pattern when hopping sequences support different communication channels in the same proximity. Thirty two hops are designed to span about 64 MHz of spectrum. This is designed to maximise interference immunity by spreading as much as possible over a short time interval. Over a larger time interval, each frequency in the sequence has equal chance of occurrence, and perturbation of the clock and/or identity leads to an instantaneous change in the selected hop. This permits devices to switch between different hop sequences and permits devices to time share between two or more communication channels. This requirement means that storage of sequences in memory is infeasible. Sequences must be generated on the fly using logical circuitry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Baseband</head><p>The baseband specifies how the radio layer should be employed to facilitate communication between Bluetooth devices. This layer defines the concept of a piconet, which is BTÃ•s fundamental logical topology for organising group-wise communication, under decentralisation. At this point, homogeneous devices are distinguished by their Bluetooth device address which is a unique 48-bit address, hard-coded into the Bluetooth chip. Additionally, each device holds a free-running clock which ticks every half time-slot for a hopping rate of 1600 hops per second. Exchange of clocks and BT addresses is fundamental to the formation of a piconet. This is defined as a group of devices that share the same communication channel. The key innovation is that piconets are formed in decentralised ad hoc manner, without intervention or assistance. Homogeneous devices take on one of two different roles: master or slave. Each piconet consists of exactly one device whose role is the master, and at most seven other active devices whose roles are slaves. The role of master and slave are relative to one piconet, at one point in time. It is the master who defines the communication channel used by all members of the piconet. The first device to initiate the formation of a piconet becomes the master. Every other device in range is assigned a locally unique active member address. These take up the role of the slave within the masterÃ•s piconet. At most seven active slaves participate in each piconet, but additional slaves can be registered with the master and sustain the parked mode. Devices outside of any piconet sustain the stand-by mode.</p><p>The master functions to co-ordinate the intrapiconet communication. The master may communicate with any member of the piconet, but slaves in the piconet may only communicate with the master. This means that the communication between slaves may only occur via the master. The principle role of the master is maintenance of synchronisation. This is organised by referencing slots in piconets as odd or even, according to the second least significant bit of the clock of the master. To determine the frequency hopping sequence in a piconet, slaves maintain the offset time between their clock and that of the master, using a slot dwell time of 625 ls, and apply pseudo-random sequencing of frequencies. The master uses each time slot in the sequence to communicate with a slave, before moving onto the next slave in the sequence. However, multi-slot packets requiring three or five slots are permitted. When these are transmitted, the transmit frequency remains constant. The master then resumes transmission with the slaves whose turn it would have been under single slot transmission.</p><p>Uplink and downlink between master and slave occurs using time division duplex, with the master only communicating in even numbered slots, and slaves in odd numbered slots. Furthermore, slaves may only transmit to the master if the master has just transmitted to the slave, giving the master control over the slave for purposes of controlling multiple slot transmissions. Note that the piconets transmission channel is fundamentally dependent on the clock of the master. Consequently a device cannot be a master in two piconets simultaneously, since this would result in two piconets having the same communication channel, resulting in significant co-channel interference between piconets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1.">Device admission</head><p>Prior to commencing communication in a piconet, the slaves need to identify the address and clock of the master, and similarly the master needs to know the identity of slaves. This is organised by inquiry and paging phases defined at the baseband layer. A scan procedure is carried out by listening devices who are idle.</p><p>The device carrying out the inquiry phase becomes the master in a future piconet. The inquiry process is used to discover other devices and paging is used to establish connection with them, via invitation. These are uni-directional processes which require the participation of both the inquired and inquirer. Each needs to commence from a different initial state to ensure discovery. The principle problem that inquiry involves is collision avoidance between receiver and sender. Two devices cannot exchange messages until they synchronise the channel (i.e., frequency hopping sequencing) for communication. Bluetooth uses the simple approach of defining a globally adopted hopping sequence known to all devices. However the inquirer hops at a greater speed than the inquired, and the inquirer listens in between transmissions for a response.</p><p>A further complication exists concerning multiple listeners. To avoid collision between responses from different inquired devices, a randomised back-off time is set by each device to stagger reply times. Eventually the sender device collects the basic information (such as device address and clock) from the listeners, which is then used in the paging process. This procedure is performed by the inquirer, and is an invitation to join the piconet. With the information sent by the paging device, the enquired device can join the piconet as a slave. After joining a piconet, the slave may negotiate role reversal, where the original master becomes the new slave and vice versa.</p><p>The scan process is used by idle devices which periodically become active and listen for devices trying to make a connection. Every time a device wakes up, a different hop carrier is scanned for a period of approximately 10 ms. The hop carrier scanned is defined by the wake-up sequence. This is a cyclic sequence of 32 hops, in a pseudo-random order defined uniquely for each device. Here there is a trade-off between power consumption and response time.</p><p>More complex steps exist for admitting a new slave into an existing piconet. There are two processes by which this may occur, either active or passive. The master may inquire on new nodes in its transmission range and invite them to join the piconet. Alternatively the master may wait to be discovered, by performing the scan phase. For both options, communication in the piconet must be suspended. Therefore a trade-off exists between piconet capacity and latency of device admission.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Medium access control</head><p>The BT specification has been developed to permit co-existence of a large number of unco-ordinated communications. This is enabled by a large number of independent channels, each of which is used by a restricted number of devices. Each channel is defined by a master device. For the modulation technique adopted, a single frequency hopping channel in the ISM supports 1 Mb/s, and theoretically, the channel with 79 carriers can support 79 Mb/s. However, the non-orthogonality of the hop sequences means that this limit is unlikely to be reached. Channel capacity must be shared between members of the piconet, and so the number of active slaves is deliberately limited to seven. When the number of piconets is large relative to the number of devices, channel capacity will be exploited.</p><p>The master/slave role within a piconet only exists for the duration of the piconet. Once disbanded, each device could potentially resume as a master or slave. As well as defining a piconet, the device with master status controls all traffic across the piconet and admission control. Slots are used alternatively for master-slave and slave-master communication. To avoid collision of multiple slave transmissions, the master adopts a polling technique, which involves the master defining which slave is to transmit in each slave-to-master slot. Only the slave addressed in a master-to-slave slot may communicate in proceeding slot. If the master has information to send a specific slave, the slave is polled implicitly and can return information. If the master has no information to send, it polls the slave with a short polling packet. As the master schedules bi-directional traffic, scheduling algorithms need to be applied to efficiently use channel capacity. Although masters operating in the same area use different channels, there is the probability of loosing a packet due to another transmission using the same carrier hop. Information is transmitted without listening for a clear carrier. If data is received incorrectly, it is resent at the next opportunity. This does not occur for voice calls. The simplicity of BT and the fast hopping speed makes collision avoidance schemes inappropriate.</p><p>As portable low power devices are envisaged for BT operation, control of power consumption is important. A number of modes of operation have been defined to minimise power consumption. In idle mode, the device performs the scan operation for less than 1% of the time. The park mode reduces device activity further, but can only be applied to slave devices after a piconet has been formed. In park mode, devices remain synchronised with the master but do not return a packet with a payload. Park mode permits more than seven slaves to participate in a piconet. A further low power mode is the sniff mode, where the slave does not scan in every master-slave time slot, but has a low duty cycle. Effectively the device only wakes up periodically to communicate with the master. Finally, the hold mode is used to put devices to sleep. This is used to suspend intra-piconet communication while the master searches for new devices to admit to the piconet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1.">Link types and packet format</head><p>Two types of link can be supported. A single asynchronous connectionless link (ACL) is supported between a master and a slave, for services such as bursty data traffic. Additionally, up to three synchronous connection-oriented (SCO) links may be supported in a piconet, for services such as voice traffic. The SCO link is a point-to-point link supported by reservation of duplex slots (odd and even). The ACL link is a point-tomulti-point link from the master to all slaves. An ACL link can use all of the remaining slots on the channel not used for SCO links. The slotted structure of the piconet channel means that ACL and SCO links can be mixed.</p><p>BT streams the information into packets, with a single packet being sent in each slot. Each packet consists of an access code (72 bits), packet header (54 bits) and payload (0-2745 bits). The access code is used to ensure to identify the piconet to which the packet belongs. Only if the access code matches that of the piconet master will the packet be accepted by the recipient. This prevents packets from one piconet being falsely accepted in another piconet. The packet header contains link control information, a 3 bit slave address to distinguish slaves in the piconet, a 1 bit acknowledgement for repeat request, a 4 bit packet type code to define 16 different payload types and an 8 bit header error check code used to detect errors during transmission. The header has maximum size of 18 information bits which are protected by further coding.</p><p>Four control packets are defined. These are the identification packet, consisting of only the access code and used for signalling; the null packet which contains the access code and a packet header, being sent only to convey link control information; the poll packet, sent by the master to force a response from the slaves; and the synchronisation packet, used to exchange real-time clock and identity information between devices.</p><p>Both forward error correcting and packet retransmission schemes are included in BT. For FEC, a 1/3-rate code and a 2/3-rate code are used. The 1/3-rate code is a simplistic approach where a 3-bit repeat is used with a majority decision at the recipient. This is used on the packet header and can additionally be used on the payload for SCO links. The 2/3 rate FEC code consists of a shortened Hamming code which can be applied to the payloads of either SCO or ACL links.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2.">Link manager and host controller interface</head><p>The baseband state machine is principally controlled by the BT link manager. This firmware is provided with the link control hardware, and handles link setup, security and control. Its remit includes control of paging, changing slave modes, and handling required changes in master/slave roles. It also supervises the link and controls handling of multi-slot packets. Link managers communicate with each other using the link management protocol (LMP). This is organised by LMP packets which are sent in the payload of packets on asynchronous connectionless links and are flagged by a bit in the ACL header. Some link controller hardware may include a host controller interface (HCI) layer above the link manager. This is a firmware layer which is used to separate the BT baseband and link manager from a transport protocol. The HCI defines a standard interface independent method of communicating with the firmware. Three standard transport mechanisms are supported in BT: USB, RS-232 and UART. The HCI allows a Bluetooth application to access BT hardware in the absence of the transport layer or other hardware implementation details. The HCI layer forms a component in the BT stack, but it does not constitute a peer-to-peer communication layer since the HCI command and response messages do not flow across the physical link.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3.">Link layer and L2CAP</head><p>All BT protocols above the link manager and HCI are software based. The lowest level is the logical link control and adaptation protocol (L2CAP) specification which is effectively BTs link layer. The L2CAP delivers packets received at higher layers to the other end of the link. It is required because baseband packet size is too small for transporting higher layer packets. The L2CAP resolves this, and operates over an ACL link provided by the baseband. It performs segmentation, re-assembly and multiplexing of high level applications above the HCI. The L2CAP supports the multiplexing of several logical channels over the devices ACL links. A single ACL link is always available between the master and any active slave. This provides a point-to-multi-point link supporting data transfer. A detailed description of the channels, channel state machine, connection, configuration, disconnection and L2CAP packets is given in <ref type="bibr" target="#b75">[78]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.4.">The service discovery protocol and profile specification</head><p>The service discovery protocol (SDP) is used to determine which BT services are available on a particular device. Each Bluetooth device can act as a client or server in discovering services with SDP. The SDP only provides information about the different services which are available. Further protocols (either from BT or elsewhere) must be used in order to use a service. In order to preserve the efficiency of the process and minimise the amount of information which needs to be carried across the BT link between devices, universally unique identifiers (UUIDs) are used. The SDP operates with each server cataloguing the all available services provided by the device, and each server operates search and browse facilities.</p><p>To support interoperability for a range of applications, profile specifications define how a fundamental range of operations should be organised. These define usage for generic access, service delivery, mobile telephony interconnection, intercom, serial ports, headsets, dial-up networking, fax services, LAN access, and usage models for generic object exchange, object push, file transfer and synchronisation. Of particular interest are the arrangements for serial port and LAN access. The former case is facilitated by adopting the RFCOMM protocol. This emulates the signals on an RS-232 interconnection cable and is based on the ESTI 07.10 standard. This permits the emulation and multiplexing of several serial ports over a single channel. The key benefit from adopting the RFCOMM is that it enables legacy applications that have been written to operate using serial cables, to run over a BT link.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Inter-piconet communication</head><p>As well as permitting piconets to co-exist independently, the BT specification makes provision for connectivity between piconets. A collection of connected piconets is called a scatternet. Inter-piconet communication is facilitated due to packet based communication over slotted links. This means that particular Bluetooth devices can time slice communication between the channels of multiple piconets. Recall that a device can instantaneously change hopping scheme with knowledge of master identity and master clock. In order to allow jumps to be feasible, a guard time occurs in the traffic scheduling to allow for slot misalignment between different piconets. Accordingly a hold mode is used to allow a unit to temporarily leave one piconet and visit another piconet. The hold mode may also be used as an additional power control mechanism. The role of the device in each piconet is flexible, with the constraint that a device cannot be a master in more than one piconet, by definition. However, it is acceptable for a device to be a master in at most one piconet and a slave in multiple other piconets. Beyond the functionality for devices to time-slice between multiple piconets, support for the creation, operation and maintenance of scatternets remains open.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Factors influencing scatternet protocol design</head><p>Bluetooth networks are distinguished from other networks currently associated with ubiquitous and pervasive computing in a range of ways: spontaneous network formation, isolation from infrastructure, simple low cost devices with power constraints and links with states that permit low power. The decentralised formation, maintenance and operation of fully connected networks is specified for small numbers of devices, organised via the concept of a piconet. The pre-requisite in establishing a piconet is that all devices are in range at least one device, which is required to operate as the master. This precludes obtaining fully connected networks in scenarios where</p><p>â€¢ a larger number of devices (i.e., greater than 8) require connectivity; â€¢ not all devices requiring connectivity are within range of at least one member.</p><p>In both these scenarios, scatternets are required: that is multiple interconnected piconets. An important paper fully exposing the possibilities of inter-piconect communication is <ref type="bibr" target="#b35">[38]</ref>. Here it is stressed that in the context of personal area networks (PANs), although a single piconet may be sufficient, the possibility for a device in the PAN to be present in multiple piconets is essential to allow the combination of various Bluetooth usage cases, examples of which are provided.</p><p>Although scatternets are supported in the BT specification, protocols are not explicitly defined for creation, maintenance and operation. The complexity of these tasks significantly increases, when moving from single piconets to multiple connected piconets. The fundamental issues to be addressed concern:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Device status</head><p>Each device needs to determine its role with respect to (possibly) multiple piconets, specifically is role(s) as master and/or slave. This defines the links between devices and therefore the topology of the network, which influences the performance of the network. There is a large degree of freedom in the number of feasible alternative scatternets (see <ref type="bibr" target="#b11">[12]</ref>), which defines a significant combinatorial optimisation problem. This is made more difficult by the decentralised nature of the problem, characterised by a lack of a centralised entity with global knowledge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Routing</head><p>In a single piconet, any pair of devices are at most two hops apart. The master has total knowledge of all slaves, and controls their ability to send and receive messages. Therefore in a single piconet, packet delivery between any pair of devices becomes trivial. However, complexity is significantly increased in scatternets, since a packet may have to transverse multiple piconets to reach its destination. Additionally there may be a number of alternative routes, the knowledge of which must be organised and distributed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Intra-and inter-piconet communication schedules</head><p>The master in a piconet is required to share time between slaves. Some slaves will become significantly more important than others, particularly if they perform a relay function between distinct piconets. Consequently schemes for scheduling become increasingly important. Additionally, devices involved in multiple piconets can only participate in one at a time. Consequently resource sharing schemes need to minimise potential conflicts.</p><p>Mechanisms to determine device status, scheduling and routing are influenced by many factors. These include distribution of devices, scalability, device differentiation, environmental dynamism, integration between co-ordination issues and level of centralisation. These factors are important because they serve as a guide in protocol design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Distribution of devices</head><p>A commonly applied assumption in the design of protocols is that all devices are in mutual range (e.g., <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b46">[49]</ref><ref type="bibr" target="#b47">[50]</ref><ref type="bibr" target="#b48">[51]</ref><ref type="bibr" target="#b50">53,</ref><ref type="bibr" target="#b53">56,</ref><ref type="bibr" target="#b73">76,</ref><ref type="bibr" target="#b77">80]</ref>). Under this assump-tion, the primary aim is to increase the number of devices which can connect and form a network. This assumption simplifies scatternet formation, because local (i.e., 1 hop) neighbourhood knowledge at each device constitutes global network knowledge. This assumption is applied, based on the observation that the current expectations for Bluetooth are focussed on personal area networking, where a maximum network diameter of 10-15 hops is envisaged.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Scalability</head><p>In the role of WPAN, network scalability is a limited concern. However, network protocols which scale will be of use if applications are developed involving a large number of nodes, such as in sensor networks, as surveyed in <ref type="bibr" target="#b0">[1]</ref>. The scenarios which are considered range from personal area networks (such as in <ref type="bibr" target="#b77">[80]</ref> with up to 36 devices) to the largest scenarios involving 2000 devices (e.g., <ref type="bibr" target="#b98">[102]</ref>). The issue of scalability is best addressed by protocols which do not assume that all devices are in range. For some protocols, analytical results can be derived on time complexity and messaging complexity, relative to number of devices. In these approaches, some properties of scaling are effectively guaranteed (e.g., <ref type="bibr" target="#b46">[49]</ref>). As noted in <ref type="bibr" target="#b28">[30]</ref>, simple protocols may have good scaling properties but at the expense of overall network quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Device differentiation</head><p>It is likely that the most appropriate scatternet for a given collection of devices will depend on characteristics of the device such as battery life, computational abilities and likely traffic load. In <ref type="bibr" target="#b21">[22]</ref> for example, these factors have been incorporated into the protocol to create the network. However the predominant stance involves assuming devices are homogeneous. This follows from the specification, and the fact that any Bluetooth device can take a role as master or slave. However a number of authors make further logical hierarchies between devices, particularly for the creation of scatternets. These devices take leading roles, frequently through acquiring and using greater knowledge of other devices (e.g., <ref type="bibr" target="#b77">[80,</ref><ref type="bibr" target="#b98">102]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Environmental dynamism</head><p>As each device is autonomous in an ad hoc scenario, synchronisation between devices, in terms of device start-up and activity time, cannot be assumed. This means that scatternet membership is likely to change and the network will need to repair or heal under conditions of failure. The cases under which failure occurs, for example, are addressed in <ref type="bibr" target="#b53">[56]</ref>. Mechanisms will need to rapidly react in particularly dynamic environments, such as those considered in <ref type="bibr" target="#b91">[95]</ref>. On-demand techniques are one solution to environmental change. This approach is used in <ref type="bibr" target="#b54">[57,</ref><ref type="bibr" target="#b55">58]</ref>, for example, but operates at the cost of increased overhead. Additionally, creation of networks with high levels of fault tolerance are desirable, as sought in <ref type="bibr" target="#b91">[95]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.">Integration between co-ordination issues</head><p>Each of the co-ordination issues can be addressed in isolation, or with integration. However, intra-and inter-piconet scheduling is dependent on routing, which is dependent on the network topology (i.e., collective device status), and this could potentially be exploited in protocol design and operation. Consequently, some authors have argued for significant integration via cross layer optimisation. A range of solutions and approaches can be undertaken. For example, <ref type="bibr" target="#b1">[2]</ref> seeks to determine network topologies which maximise the number of device pairs which can operate simultaneously. The integration between scatternet structure and inter-piconet communication is addressed in <ref type="bibr" target="#b40">[43]</ref>. The development of protocols which form particular topologies can aid routing. For example, <ref type="bibr" target="#b23">[24]</ref> adopts ring structures only, while in <ref type="bibr" target="#b86">[90]</ref>, a tree structure is adopted with Bluetooth device addresses carefully used to aid packet navigation. In <ref type="bibr" target="#b54">[57,</ref><ref type="bibr" target="#b55">58]</ref>, on demand network formation is developed where routing is implicit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6.">Level of centralisation</head><p>A key issue in protocol design is the reliance on centralisation, where one entity (e.g., single device or subset of devices) gains total network knowledge. The benefit is that such knowledge makes higher performance solutions achievable. However, this induces potentially greater overhead, against which increases in network quality must be assessed. Greater overhead is more likely to be permissible in environments with little dynamism. In fully decentralised protocols (e.g., <ref type="bibr" target="#b94">[98]</ref>) no device has greater knowledge than any other. In partially decentralised protocols, hierarchies exist based on the level of knowledge devices attain (e.g., <ref type="bibr" target="#b77">[80]</ref>). The extreme case is when one node gains total total knowledge to create the network. Independent of use as a protocol, entirely centralised problem solutions have been considered (e.g., <ref type="bibr" target="#b57">[60]</ref>) and are challenging computational problems in their own right.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Link formation and network topology</head><p>The fundamental step in setting up a scatternet is local device discovery and the formation of point-to-point links, where pairs of devices learn of each otherÃ•s identities and synchronise hopping sequences to form piconets. In scatternet scenarios, a number of devices are required to participate in more than one piconet to facilitate networkwide connectivity. We describe the basic link establishment process provided in the Bluetooth specification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Bluetooth link establishment</head><p>Link establishment in Bluetooth is controlled by four processes:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Inquiry</head><p>This process consists of broadcasting inquiry packets, which do not contain the senders identity or other any information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Inquiry scan</head><p>In this state, devices listen for inquiry packets, and upon detection of an inquiry packet, the device broadcasts an inquiry response packet. This contains the devices identity and clock of the device in inquiry scan mode.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Page</head><p>Under this process, a device tries to establish a connection with a device whose identity and clock are known. Page packets are sent, which contain the sending devices address and clock for synchronisation. The packets sent can only be received by those devices with particular identities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Page scan</head><p>In this state, a device listens for a page packet.</p><p>Receipt is acknowledged and synchronisation between the page and page scan devices is established.</p><p>These four processes need to be co-ordinated and controlled in order to establish and maintain piconets and scatternets. From the baseband specification (see Section 2.2), Bluetooth defines a simple process for link formation between a pair of devices. This process is asymmetric since the protocol distinguished the devices as a sender and receiver. The sender starts in the inquiry state while the receiver is in the inquiry scan state. Initially there is a frequency synchronisation delay until the sender transmits on the frequency on which the receiver is currently listening (recall that the senders and receivers are hopping at different rates). When the inquiry packet is received, the receiver backs off for a random time period (uniformly distributed in the range 0-639.375 ms). Hopping then resumes at the hop it was listening to, immediately prior to back-off. A second frequency synchronisation delay then occurs, and a second inquiry packet is received from the sender.</p><p>The receiver replies with a frequency hopping synchronisation (FHS) packet containing the receivers address and clock value and the receiver enters the page-scan state. Upon receipt of the FHS packet, the sender enters the page state. In the page state, the sender transmits a Device Access Code (DAC) packet, that can be uniquely heard by the receiver. The senders address contained in the FHS packet, is used to estimate the phase of the receiver, in order to eliminate the frequency synchronisation delay. The receiver responds with a DAC packet, and the sender replys with a FHS packet. The receiver then uses this information to determine the channel hopping sequence and the phase of the sender. At this point the receiver becomes the slave in the communication channel and replys with another DAC packet.</p><p>As soon as the sender receives this DAC packet, the sender becomes the master in the connection, and both devices are now synchronised across the same hopping sequence.</p><p>The delay components of link formation are random back-off delay and the frequency synchronisation delay, which occurs twice. In <ref type="bibr" target="#b77">[80]</ref>, this is shown to be at most 659.375 ms when 32-hops are available for the universal frequency hopping set used in the inquiry process, and 649.375 ms when 16-hops are used. This connection establishment delay, however, depends on the pre-assignment of roles for the devices. In an ad hoc scenario, no pre-assignment of roles will be available, making this link establishment process problematic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1.">Symmetric link formation protocol</head><p>In <ref type="bibr" target="#b76">[79,</ref><ref type="bibr" target="#b77">80]</ref>, a protocol for symmetric link formation is developed, which is analysed in <ref type="bibr" target="#b78">[81]</ref>. The approach is symmetric in the sense that no sender or receiver allocation is required. This is achieved by ensuring that the two nodes (nominally the sender and receiver) alternate node status between inquiry and inquiry scan states, in an unco-ordinated manner. When the devices meet for a sufficiently long time interval in opposite states, they try to connect according to the asymmetric link formation protocol.</p><p>Clearly the schedules for state alternation are crucial in determining the link formation delay. In <ref type="bibr" target="#b78">[81]</ref>, it is shown that a random schedule with state residence times following a common random distribution are preferable to deterministic solutions, following intuitive logic. The mean and variance of link delay formation for random state alternation are derived in <ref type="bibr" target="#b78">[81]</ref>.</p><p>Salonidis et al. <ref type="bibr" target="#b78">[81]</ref> propose the scheme as a tool which can be generally used by protocols for scatternet formation ''on the fly'', which are built above this. Such an example is <ref type="bibr" target="#b98">[102]</ref>, where the protocols are developed on the assumption that devices know the identifiers of their one-hop neighbours. The approach introduced in <ref type="bibr" target="#b77">[80]</ref> is well used, with this and similar mechanisms being adopted by a range of authors including <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b50">53,</ref><ref type="bibr" target="#b69">72,</ref><ref type="bibr" target="#b73">76,</ref><ref type="bibr" target="#b80">83,</ref><ref type="bibr" target="#b90">94]</ref>. The symmetric protocol for link formation is a suitable mechanism for device discovery of single-hop neighbours, when a temporary piconet is formed specifically for this purpose. The general issue of device discovery in a multi-hop rather than single-hop scenario has been addressed in <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Network topology</head><p>Scatternet formation protocols are mainly required to control the states of inquiry, inquiry scan, page and page scan at each device, so that groups of devices synchronise on common hopping sequences, to form interconnected piconets. This determines the device status as a master or slave in possibly multiple piconets. Additionally, the protocol is required to account for the dynamic nature of the ad hoc environment, where scatternet membership is variable, and device residence in the scatternet is unpredictable.</p><p>The role that devices take in the scatternet determines the network topology and consequently the performance of the network. For example, the number of piconets a device belongs to, particularly in situations where are many potential master nodes, has significant implications on characteristics of the network. Of crucial importance are bridges, which are devices that reside in more than one piconet. There are two types of bridge. If the bridge is a master in one piconet, the bridge is of a master-slave type. Otherwise the bridge is a slave in all piconets to which it belongs and is a slave-slave type.</p><p>Bridge location and distribution is important since participating multiple piconets leads to increases in processing and communication overhead. Note that bridges can only be active is one piconet at a time. Switching between piconets can reduce throughput, and increases the demands on inter-piconet scheduling. However, traded against this, bridge devices improve connectivity and thereby reduce path length between devices which can improve throughput. An example of a possible scatternet topology with a variety of possible bridges is displayed in Fig. <ref type="figure">2</ref>. The protocols introduced for scatternet formation frequently use heuristics to control possible configurations which can be formed, including:</p><p>â€¢ Bridge devices must never be masters. This reduces the scheduling burden on masters, who then only need to consider intra-piconet communication.</p><p>â€¢ The number of bridges per piconet is restricted.</p><p>This restricts the number of potential inter-piconet conflicts for bridging devices, but at the expense of limited potential alternative routes. â€¢ The number of piconets must be kept as small as possible. This reduces the number of communication channels used, and the potential for interference.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Master in one piconet</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Master in one piconet and slave in another</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slave in one piconet</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slave in two piconets</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Disjoint Piconets Connected Scatternet</head><p>Fig. <ref type="figure">2</ref>. Examples of piconet and scatternet topologies.</p><p>â€¢ Piconets must not be linked by more than one bridge. This minimises the co-ordination issues which need to be addressed by scheduling. â€¢ A device must participate in a limited number of piconets. This controls the amount of interpiconet scheduling at the device level.</p><p>The way in which these assumptions have been applied are summarised in Table <ref type="table" target="#tab_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Modeling</head><p>In order to represent the Bluetooth system for scatternet formation, a model is required. This abstracts the problem to some extent, and frequently involves graph theory, where devices represent the vertices and links between devices represent edges. A range of graph theoretic structures can be used in the modeling process so that the resultant scatternets have topologies with particular characteristics.</p><p>Nodes may be labelled according to their particular role in the scatternet. Indeed, this is a central task in formation of a scatternet, and is a pre-requisite for routing and scheduling. In addition to being labelled as a master or slave with respect to a single piconet, a node may be labelled as a bridge (master-slave or slave-slave). For slave nodes, the degree of a vertex determines the number of piconets to which it belongs. The degree of a master determines the size of the piconet it defines.</p><p>Control of degree has been a central issue in many scatternet formation models and algorithms, particularly in <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b28">30,</ref><ref type="bibr" target="#b50">53,</ref><ref type="bibr" target="#b53">56,</ref><ref type="bibr" target="#b57">60,</ref><ref type="bibr" target="#b68">71,</ref><ref type="bibr" target="#b77">80,</ref><ref type="bibr" target="#b85">89]</ref>.</p><p>Protocols for scatternet formation frequently use the concept of a visibility graph. This represents the graph of all possible links which could be formed between devices in range. In this context, the protocols for scatternet formation must label nodes and select edges from the visibility graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Classes of topology</head><p>Beyond applying particular characteristics in Table <ref type="table">2</ref>, protocols can be designed to create particular network topologies, based on a graph theoretic structure. In this section we review the frequently used structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1.">Trees</head><p>A tree is a connected graph with no cycles. This means that a Bluetooth network which forms a tree has a minimal number of edges for connectivity. However this also means that there is no choice of route for traffic between nodes: only a single path exists. Additionally this topology is susceptible to partitions when links and devices fail.</p><p>In <ref type="bibr" target="#b40">[43]</ref>, a two level hierarchical tree structure is formed, composed of a root, followed by leaves. The root is the initiating piconet, and the slaves  in this piconet then form bridges (and masters) in the new piconet. The authors find that this approach has lower throughput than a non-tree alternative topology where bridges are only master nodes, but performs better in terms of average system delays. Routing considerations for tree based structures have been considered in <ref type="bibr" target="#b86">[90]</ref>. Routing in trees is simplified because there is a unique path between source and destination devices. This means that the routing considerations need only address dissemination of this particular route. Sun et al. <ref type="bibr" target="#b86">[90]</ref> propose a protocol to create and maintain routing table information, through extending the idea of a binary tree search to sub-trees in the network. Protocols are also introduced to create such tree structures.</p><formula xml:id="formula_0">â€¢ â€¢ â€¢ â€¢ Baatz et al. [2] â€¢ â€¢ â€¢ â€¢ â€¢ â€¢ Basagni and Petrioli [9,72] â€¢ â€¢ â€¢ Chiasserini et al. [22] â€¢ â€¢ â€¢ â€¢ â€¢ â€¢ â€¢ â€¢ Chun et al. [24] â€¢ â€¢ â€¢ Cuomo et al. [25] â€¢ â€¢ â€¢ â€¢ Law et al. [51] â€¢ â€¢ â€¢ â€¢ â€¢ Li et al. [54] â€¢ â€¢ â€¢ â€¢ â€¢ â€¢ Li et al. [53]</formula><p>In <ref type="bibr" target="#b90">[94]</ref> the use of a tree topology is justified by simplified routing, and the authors explicitly mention the tension between connectivity and latency. It is argued that minimising the total number of links in the topology reduces the contention for transmission slots in the time division duplex scheme. The protocol proposed achieves a minimum number of average piconets per bridge by ensuring that bridges participate in exactly two nodes. In <ref type="bibr" target="#b91">[95]</ref>, the tree formation algorithm is evaluated in dynamic conditions.</p><p>A protocol to form so-called Bluetrees is proposed in <ref type="bibr" target="#b98">[102]</ref>. This operates using two phases, in the first of which sub-trees are formed using particular nodes. The second phase concerns spanning these sub-trees. The paper makes a number of interesting observations concerning tree structures and Bluetooth. In particular, in an open, interference and obstacle-free environment, if a node n has more than five neighbours then there are at least two nodes among the neighbours that are themselves neighbours. Additionally, it is noted that most distributed algorithms (and consequently protocols) for finding a spanning tree in a network operate by creating subtrees and then expanding them to form a single spanning tree.</p><p>The advantages of the tree structure are based in simplicity. A minimal number of links leads to simple routing issues. However, this structure can only be applied in dynamic environments if the protocol can quickly respond to link failures, which in the case of a tree, are certain to partition the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2.">Gabriel and Yao graphs</head><p>These structures are closely related to the concept of a unit disk graph (UDG), in which nodes in the Euclidean plane are considered to define a disk of unit radius. In a UDG, an edge is defined between a pair of vertices if their Euclidean distance is at most one. A constrained Gabriel graph over a graph G contains an edge uv if and only if:</p><formula xml:id="formula_1">â€¢ uv 2 G;</formula><p>â€¢ the open disk when using uv as diameter does not contain any node w from G such that both uw and wv are in G.</p><p>Consequently a Gabriel graph produced from a graph G has vertices with a sparse geographical dispersion. The Yao graph from a graph G selects edges based on the proximity of associated nodes.</p><p>A Yao graph with an positive integer parameter k is defined as follows. At each node u, any k equally separated rays originate and define k separate cones. In each cone, a shortest directed edge is selected.</p><p>The Yao and Gabriel graphs are used in <ref type="bibr" target="#b51">[54]</ref> to construct and analyse general network topologies for wireless communication. One useful point is that these graphs can easily be constructed in a decentralised manner. The investigation considers the power efficiency of the shortest paths between source and destination, and the tolerance of node movement using a power stretch factor. In <ref type="bibr" target="#b50">[53]</ref>, the approach is extended specifically for scatternet formation, and the authors propose a new sparse geometric structure for this purpose.</p><p>In <ref type="bibr" target="#b85">[89]</ref>, Gabriel and Yao graph structures also feature in a dominating set based approach for formation and maintenance of scatternets. A dominating set in a graph G is a subset of nodes who, collectively, are adjacent with all other nodes in the graph. Consequently these sets are useful for purposes of connectivity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.3.">1-Factors</head><p>In <ref type="bibr" target="#b1">[2]</ref>, the authors seek to construct scatternet topologies to ease the problem of inter-piconet scheduling. A matching in a graph G is a subset of edges such that no two are incident. A perfect matching has n/2 edges, where n is the number of vertices. When n is odd, a near perfect matching describes a matching with (l Ã€ 1)/2 edges. Note that (near-) perfect matchings are best possible. A graph which can be partitioned into (near-) perfect matchings is 1-factorizable, as these matchings are also known as (near-) 1-factors.</p><p>It is pointed out that a matching determines a possible communication pattern in the scatternet. This is because each edge represents a communicating master-slave pair, so the size of a matching (i.e., number of edges) determines the number of simultaneously active piconets. Consequently (near-) 1-factors are desirable. Baatz et al. <ref type="bibr" target="#b1">[2]</ref> briefly describe how to build scatternets from 1-factors of complete graphs, which occur when all devices are in transmission range.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.4.">Ring structures</head><p>In contrast to purposely avoiding topologies containing cycles (i.e., Section 4.4.1) some scatternet topologies advocate their use, principally due to increasing reliability. In <ref type="bibr" target="#b23">[24]</ref>, ring structure scatternets called Bluerings are proposed, consisting of n devices where each device belongs to two piconets and has two links in total. Each device is both a master and a slave, and a BlueRing supports a maximum of b n 2 c active links. This leads to a structure where there are exactly two mutually disjoint paths between source and destination for all pairs of devices. Since there is a minimal number of devices for a master to switch between, the authors point out that switching overheads will be limited. Additionally, routing is very simple since incoming packets are merely forwarded. However, the authors also point out two disadvantages of the ring structure. Firstly large diameter rings could have high packet delay, and secondly, not all visibility graphs will have the necessary 2-connectivity to create a BlueRing.</p><p>In <ref type="bibr" target="#b53">[56]</ref>, the use of more general ring structures is explored, via the BlueRing protocol (unrelated to that in <ref type="bibr" target="#b23">[24]</ref>). In this approach, relatively small numbers of piconets are sought, which are interconnected to form a ring. A set of principles guide the protocol: specifically, nodes participate in no more than two piconets and two piconets are inter-connected by at most one bridge. Additionally, bridges are never masters, and piconets are required to contain at least two slaves. This is because the protocol requires that distinct slaves are used to communicate with the adjacent piconets in the ring.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Scatternet formation and maintenance protocols</head><p>Protocols for scatternet formation are regarded by many authors as finite state machines, controlling states including inquiry, inquiry scan, page and page scan. The protocol ideally needs to function independently at each device, without any synchronisation between devices (e.g., <ref type="bibr" target="#b28">[30]</ref>). But this makes it difficult to control the network produced, or guarantee particular properties of the network, such as end-to-end connectivity. A compromise to this approach are staged or phased protocols, where all devices perform activities with a loose degree of synchronisation. For example, three common phases are device discovery, piconet formation, and subsequent interconnection of piconets. Time intervals are defined in which each device must perform each phase (such as neighbourhood discovery), but the devices are unsynchronised within phases. This loose degree of synchronisation makes it possible to prove properties of the resultant network (e.g., <ref type="bibr" target="#b69">[72]</ref>). Phased protocols for formation frequently assume enmasse device start-up to establish these properties, since it is difficult to establish global results on network characteristics otherwise.</p><p>In this section, we consider the principle contributions concerning protocol development for scatternet formation. We describe how the protocols operate, and the rationale behind them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">BlueStars and BlueMesh</head><p>In <ref type="bibr" target="#b69">[72]</ref> the concept of BlueStars is introduced. This is a three-phase protocol which operates by discovering topology, creating piconets and then configuring these to form a scatternet. Piconets are referred to as BlueStars and the connected scatternet is termed a BlueConstellation. Topology discovery is dependent on the symmetric knowledge of neighbouring devices. This is explicitly engineered using temporary piconets. Weights of neighbours are built up when device identities are exchanged.</p><p>In the second phase, individual piconets are formed using a dynamically computed weight which expresses the suitability of a node for the master role. This leads to the selection of the master and slaves in disjoint piconets. Nodes are selected when they have the biggest weight in their own neighbourhood. Once a node has decided on the role of master, it pages neighbours to become slaves. The receiving node will join its first biggest neighbour who provides an invitation.</p><p>Finally, in the last phase, gateway devices (i.e., bridges) are selected for interconnection of piconets. This uses information gathered during the formation of piconets. Each master determines its neighbouring (i.e., 2-hop or 3-hop) master devices. A master is designated as an init master if it has the highest weight among all its neighbouring masters. The init masters control the scatternet formation, selecting bridges with the largest weight among alternatives. In the case of three hop neighbours, pairs of intermediate bridges with the highest weight sum are chosen. Proof that the properties of the protocol are fully specified, and analysis of this approach is given in <ref type="bibr" target="#b6">[7]</ref>.</p><p>The approach is novel in its criteria for device self-selection: a device selects itself given knowledge of its own weight, and that of its neighbours. Weights are built up at the device discovery stage and represent the degree of a vertex in the visibility graph. The resulting scatternet has a mesh structure in which there are multiple paths between source and destination pairs. Additionally the protocol does not require devices to be in each others range. It is assumed that the location of devices remains static throughout, and maintenance of the scatternet is not considered. An important point is made concerning the considerable device discovery time, which is caused by three factors: (1) the need to adopt stochastic mechanisms so that neighbouring pairs of devices can each discover each other using uni-directional inquiry functions;</p><p>(2) the impossibility of identifying the inquirer leads to the construction of temporary piconets between neighbours which have already discovered each other; (3) lengthy back-off times as stipulated in the BT specification. Simulation results in <ref type="bibr" target="#b6">[7]</ref> show that significant improvements are possible after reducing the back-off time.</p><p>In BlueStars, the number of slaves is not bounded and the consequence of this is that some slaves may need to be parked, resulting in delays. This is resolved by a further protocol <ref type="bibr" target="#b68">[71]</ref> called BlueMesh, which produces scatternets with a number of interesting properties. The protocol provides multiple paths, the lengths of which are reported to perform well in comparison with that best possible in the visibility graph. Additionally masters have at most seven slaves, and on average, each node does not assume more than 2.3 roles.</p><p>BlueMesh operates in two phases, the first of which involves discovery of one and two hop neighbours. The second phase is an iterative procedure which consists of role selection followed by gateway selection. As with BlueStars, weights are applied to determine which nodes are to be masters, and the slaves in a piconet are selected as a dominating set over the masters two hop neighbours. Numerous properties of the BlueMesh protocol are proven in <ref type="bibr" target="#b68">[71]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Scatternets via node insertion and removal</head><p>In <ref type="bibr" target="#b21">[22]</ref>, formation of scatternets is considered by defining procedures to handle topology changes in a Bluetooth network. These are based on the insertion and removal of nodes, and the cases when these operations need to be performed. The aim of these procedures is to provide feasible scatternets which have desirable properties such as full connectivity, high throughput, and in particular, reduced overheads due to control messages. The method can also be used both to form and maintain scatternets and has a high level of flexibility in this regard.</p><p>For node insertion, a node wishing to join starts the process by broadcasting identity packets. Nodes in proximity, which are listening, respond with a FHS (frequency hop synchronisation) packet if they are willing to accept the new neighbour. Possibly more than one neighbour may reply, in which case a decision may be required for connection choice. The authors of <ref type="bibr" target="#b21">[22]</ref> propose criteria to make this decision, using classification of devices and their status. A generic node class is defined by a triple (x,y,z) where x is an identifier for computational capabilities and battery capacity, y records the devices role (e.g., unspecified, slave, master etc.) and z indicates traffic load of the node. These triples are passed between devices using short encoding. The inquiring device then selects its neighbour(s) for connection. The inquiring device is given an ordered range of alternative nodes to page, choosing the highest ranking alternative which is permissible. The criteria for permission are defined using the triple (x,y,z).</p><p>For node removal, the changes in network topology caused by the nodes absence depend on the role it played. Four different possibilities are considered based on the role of the device. The most challenging scenarios are when bridges and/ or masters stop participating. The removal procedures in these cases are structured so that alternatives are sought using variations on insertion procedures. The rules provided by the protocol ensures that no negotiation or collective decision making between subsets of nodes, is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">BlueRings</head><p>The BlueRing protocol designed in <ref type="bibr" target="#b23">[24]</ref> is designed to create a circular chain of devices, each with bridge status. Two alternative algorithms, NODE-ID and HEAD-SEEK-SCAN, are introduced to build up the required topology, principally controlled by identifying and updating the head and tail of chains of nodes, as they are formed. The principal difficulty in forming the required ring structure is premature formation of a ring consisting of only some of the nodes in the network. The algorithms proposed overcome this by first forming a linear structure consisting of all nodes in the network, and then closing the ring by forming the last link only after a time out period.</p><p>Both of the proposed algorithms operate iteratively for a fixed time in each round, using two procedures, SEEK and SCAN. SEEK is the authors notation for the inquiry procedure. The former process denotes a device actively attempting to discover other neighbouring devices. A seeker sends out Bluetooth inquiry messages in the hope of getting a response from other devices. SCAN is the process of listening, and replies with an inquiry message when it detects a seeker. The SCAN and SEEK mechanisms emulate the processes presented in <ref type="bibr" target="#b46">[49]</ref>.</p><p>The NODE-ID algorithm operates with isolated nodes having equal chance of performing SEEK or SCAN. At the same time, the head of any line of nodes performs SCAN and the tail performs SEEK. All intermediate nodes in the chain remain idle. Criteria are defined such that the BT identity of the head of any chain is always the largest identifier in that component. This is enforced by ensuring a seeker component connects to a scanner component if and only if the identity of the seeker or head of the seeker component is larger than the identifier of the scanner. The algorithm terminates when the seeker tail of a connected component gets the first response from the scanner head for a consecutive number of iterations.</p><p>In the HEAD-SEEK-SCAN algorithm, only the head of a line and isolated nodes perform SEEK or SCAN operations. This means that only one device in each connected component performs scatternet formation in each round. This prevents premature cycle formation in each iteration of the algorithm. Unlike the NODE-ID algorithm, device identifiers do not play a role in operation of the algorithm. At each iteration, the isolated nodes and the head of chains perform SEEK or SCAN operations, with equal probability. These devices maintain two variables, componentLength and tailInfo which respectively detail the number of devices in the component and the identifier of the tail of the component. When a seeker obtains its first response from a scanner, the seeker pages the scanner to form a temporary connection, to enable the seeker and the scanner to exchange componentLength and tailInfo variables. The temporary connection becomes permanent if one or more of the seeker or scanner are isolated nodes. Otherwise the tail of the shorter component is broken and the tail of the shorter component forms a link with the head of the other component. The algorithm terminates when the head of a line receives no response after a set number of iterations.</p><p>For both algorithms, it is assumed that all devices are in mutual range, and that the processes are synchronised. It is shown that the HEAD-SEEK-SCAN algorithm outperforms the NODE-ID algorithm, and is comparable to the approach proposed in <ref type="bibr" target="#b46">[49]</ref>. The main advantage of the Blue-Ring approach is that it provides a degree of routing reliability (i.e., an alternative path) if a node or link fails. Routing is simplified by packets being forwarded around the ring. However there are disadvantages. Firstly, although it may be possible to have a single operational piconet, the location of devices can prohibit the formation of a ring. Only in cases where the visibility graph has 2-connectivity can BlueRing formation take place. Secondly, network diameter will be necessarily high, leading potential packet delays. A further observation concerns the number of piconets used. Contradictory to many other approaches which seek to minimise the number of piconets (and consequently the number of communication channels and bridges), the ring approach uses a maximal number of piconets, assuming devices are restricted to piconets only.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">Distributed scatternet formation procedure</head><p>In <ref type="bibr" target="#b24">[25]</ref>, a distributed approach is defined in the distributed scatternet formation procedure (DSFP), which forms a scatternet incrementally and sequentially. Devices are Ã”inspectedÃ• by the DSFP, in sequence. Each device takes the decision on whether to join the current network, based on the decisions made by devices which have already joined. For a node to make a decision, at least one other node in its neighbourhood must already have joined the DSFP, and is therefore part of the scatternet. The main steps in the procedure are: (1) neighbourhood discovery; (2) organisation of devices into sequential order; (3) inclusion of devices in the scatternet, based on this order, deciding which connections to establish with those already active, and which role to assume, with the aim of optimising a target metric.</p><p>The approach uses adjacency matrices for checking the performance of network configurations, and a range of different performance measures are considered. The approach is inspired by centralised approaches for network configuration, and specific details of the distributed algorithm are not fully described due to the short paper length of <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.">Simple and lightweight scatternet formation</head><p>In <ref type="bibr" target="#b28">[30]</ref>, a process is introduced based on randomisation. The approach is intentionally simple and lightweight, with each device using only neighbourhood information for decision making. This minimises overhead, increasing the protocols ability to rapidly adapt to changes. The approach is used to gain a better understanding of when more sophisticated approaches are required.</p><p>The protocol operates using a range of cases. Synchronisation is defined as a cycle of inquiry and scan between a pair of nodes. All nodes have one of four states (unassigned, master, slave, bridge) and initially all are unassigned.</p><p>When two nodes synchronise for the first time, and both are unassigned, the one with the highest degree becomes master, and the other becomes a slave in the piconet defined by the highest degree node. When two nodes synchronise and one is unassigned and one is a master, the unassigned node joins the piconet of the master if it has less than seven slaves. When two nodes synchronise and one is unassigned and the other is a slave, the unassigned node becomes the master of a new piconet, and the other node joins the piconet as a slave unless it is already a bridge in b piconets. Finally, if two nodes discover each other and neither is unassigned, then a range of cases are considered. If the both are masters then neither changes state. If one is a master and the other is a slave in a different piconet, then the slave becomes a bridge unless it is already a bridge in b piconets. Optionally the master may refuse the new slave if it already has a bridge to the slaveÃ•s piconet.</p><p>This approach represents a simple way of creating and interconnecting piconets. No phased approach is required and all devices need not be in range. The protocol can also be easily extended to permit device removal. However properties of the scatternet (such as connectivity) cannot be guaranteed and are explored empirically in <ref type="bibr" target="#b28">[30]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6.">Scatternets via merging, moving and migration</head><p>In <ref type="bibr" target="#b46">[49]</ref><ref type="bibr" target="#b47">[50]</ref><ref type="bibr" target="#b48">[51]</ref> various aspects of a new scatternet formation protocol are introduced. The protocol is designed to operate on isolated but in range devices, and operates under synchronisation. The algorithm operates with devices being partitioned into components, with a component constituting a set of interconnected devices. A component can be a single device, a piconet or scatternet. In each component there is one device which is leader. There is no freedom in choice of leader for the single device case. For a piconet, a master is leader. For a scatternet, one master is leader. Leaders perform a centralised role over the partition, and may come in and out of retirement as required.</p><p>All leaders iteratively perform a MAIN procedure in synchronisation, and initially all devices are leaders. In the MAIN procedure, a leader calls SEEK (i.e., inquiry) on a probabilistic basis (1/3 &lt; p &lt; 2/3). Otherwise the leader activates SCAN. This means that each leader has more chance of running SCAN than SEEK. Also during each round, the leader structure means that only one device in each component is running SEEK or SCAN.</p><p>When a leader executes SEEK, it tries to acquire a new slave which is running SCAN. However, the probabilistic nature of the protocol means that this is not always successful. Therefore, if a leader is unable to contact a slave after a certain time, the leader gives up and tries again with the MAIN procedure in the next round. In each round, a graph theoretic matching may be found between the SEEK devices and SCAN devices. The time required in SEEK and SCAN modes is investigated in <ref type="bibr" target="#b46">[49]</ref>.</p><p>When a leader u running SEEK connects to a slave v running SCAN, a procedure CON-NECTED is invoked. The new link leads to a larger connected component, and reorganisation of the piconets and leader occurs via three operations: MOVE, MERGE and MIGRATE. These operations involve ensuring that new, larger connected components have only one leader, and involve the redistribution of slaves to masters without leader status, as far as possible. This requires the assumption that every pair of devices are within range. However in <ref type="bibr" target="#b47">[50]</ref>, extensions are proposed which do not require this assumption, and operations are defined which permit the protocol to be applied in dynamic environments. The protocol is shown to have O(log n) time complexity and O(n) message complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.7.">Partial Delaunay triangulation scatternet formation</head><p>In <ref type="bibr" target="#b50">[53]</ref>, a decentralised geometric algorithm is introduced which creates a degree-limited scatternet. The approach seeks to consider the geographical dispersion of devices and select links so that the resultant topology has a planar property. Unusually, the protocol requires knowledge of the geographic location of devices, and GPS is posed as a solution to this problem. Other authors (e.g., <ref type="bibr" target="#b6">[7]</ref>) have criticised this assumption as being unrealistic. The protocol is synchronous in its operation and ensures that no piconet has more than seven slaves. The approach is conceptually complex, involving a series of phases in which the topology is built up by selection of links subject to graph topology. We briefly describe these.</p><p>Initially the neighbourhood discovery phase renders each node with knowledge of potential neighbours within transmission range. The next optional phase involves partial Delaunay triangulation. This is a new class of graph topology, which is planar and more dense than other common subgraphs. In the next phase, the degree of each node is limited to seven, by applying the Yao structure, and master-slave relationships are formed in subgraphs. Subsequently a clustering based approach follows, consisting of several iterations. In each iteration, nodes with unallocated role having higher keys than any of their unallocated-role neighbours apply the Yao structure to bound the degree, decide master-slave relations and inform all neighbours about either deleting an edge or their master-slave decision. Two ways of defining the master-slave relation are considered: node with initially higher degree becomes master or a cluster based approach. In the cluster-based approach, a dominating set of masters in the degree limited subgraph is implicitly constructed, and some gateway piconets are added to preserve connectivity. It is mentioned that creation and maintenance require small overhead.</p><p>In <ref type="bibr" target="#b85">[89]</ref>, further geometric approaches are proposed for formation and maintenance based on the concept of the dominating set. Geometric solutions to scatternet formation can potentially lead to higher quality scatternets because they use more information on the distribution of the devices. However, gaining location information is potentially expensive and out of context with the mission of Bluetooth as a low cost technology. Realistically, the cost of location information establishment will need to fall substantially before geometric approaches could be applied to scatternet formation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.8.">BlueRing of trees</head><p>Although of the same name as the protocol introduced in <ref type="bibr" target="#b23">[24]</ref>, the BlueRing protocol introduced in <ref type="bibr" target="#b53">[56]</ref> has an entirely different format. In <ref type="bibr" target="#b23">[24]</ref>, all devices in the scatternet were contained in the ring topology. In <ref type="bibr" target="#b53">[56]</ref>, the protocol involves a ring of masters and slaves, and can be viewed as a ring of piconets. The structure of this topology makes possible easy schemes for uni-cast and broadcast communication. These schemes are stateless in the sense that no routing information needs to be defined and recorded. Single point and multi-point failures are tolerated by the protocol. It is assumed that all devices are in range of each other for start up of the protocol.</p><p>A centralised formation mechanism, similar to that in <ref type="bibr" target="#b77">[80]</ref>, is proposed, which involves the identification of leaders, which control the setup of the scatternet. A binary parameter, RING-MEM, is maintained by each device, to indicate whether it has become a member of the BlueRing. Construction involves two phases. In stage one, each device chooses to operate inquiry with a probability p and perform inquiry scan with probability 1 Ã€ p. When inquiry meets inquiry scan, the two devices set up a temporary piconet to exchange RING-MEM and device address information. A so-called winning device is established at this stage. The device with RING-MEM = 1 wins when the other device has RING-MEM = 0. In the case of a tie, the device which holds the most information on other device identities wins. The loser also provides the winner with all its information on other BT device identities. Subsequently the temporary piconet is removed. The winner becomes a leader if no further inquiry or inquiry scan message is received within an inquiry timeout period. The leaders enter a page stage, trying to collect other non-leaders, which forms stage two of the procedure.</p><p>In stage two, the leader designates several devices as masters by paging them and setting up a temporary piconet. The process for achieving this is not fully detailed in <ref type="bibr" target="#b53">[56]</ref>. For each designated master, the leader provides its information of its slaves, including downstream and upstream bridges. The mechanism for selecting the bridges is not described. Criteria for maintaining a formed scatternet are detailed, based on two scenarios: single-point failure and multi-point failure. The latter case is more demanding as it could require reformation of the ring structure if bridges are missing or masters are missing. Case-by-case analysis is given on how to resolve all possible failures. This protocol is specifically designed to integrate the issues of formation, maintenance and routing, but may be limited by the distribution of the devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.9.">Scatternet formation via clustering</head><p>In <ref type="bibr" target="#b73">[76]</ref>, scatternet formation is approached from the problem of clustering in ad hoc networks. Two approaches to clustering are proposed: a randomised distributed linear complexity algorithm which constructs a minimal set of star-shaped clusters and a deterministic algorithm. The algorithms are developed generally and then applied to Bluetooth. The assumption is that all devices are within mutual transmission range. The goal of the algorithms is to maximise the number of nodes in each cluster so that the number of piconets is minimised.</p><p>The randomised algorithm operates in two phases, the first of which results in devices being provisionally designated as master or slave. The second phase corrects the effect of randomness introduced previously, by using a deterministic algorithm to decide on the final set of masters and slaves. A super-master is elected which collects information about all the nodes. The super-master can then run a centralised algorithm to form a network of desired topology between piconets resulting from the clusters. Each node conducts t rounds of Bernoulli trials with a defined probability of success p. A node which is successful at least once becomes a master designate, otherwise the node is a slave designate. In the second phase, the designated masters select designated slaves which participate in electing the super-master node. A large amount of information is passed between devices during the election process which implicitly builds up the knowledge of the network.</p><p>In the deterministic algorithm, the initial phase uses the idea that nodes discovering each other form a tree of responses, the root of the tree being a master, who collects information about other devices which connect to the component. Criteria are formulated which ensure that the component necessarily has a tree structure. Subsequently the second phase of the randomised algorithm is repeated to elect the super-master, who again is given this label due to having centralised knowledge of the topology. The authors do not propose particular methods for inter-connection of the piconets given the knowledge of the master. Throughout, the algorithms operate using careful control of the inquiry, inquiry-scan, page and page-scan modes. Both algorithms are synchronous in the sense that device failure is not permitted, and new devices will not be connected if they become active after the initial phase. The authors conclude that the randomised algorithm outperforms the deterministic approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.10.">Scatternet formation and extension for maintenance</head><p>A protocol is introduced in <ref type="bibr" target="#b80">[83]</ref> which performs three separate processes: neighbour discovery, formation and adjustment for changing location of a fixed number of devices. Neighbourhood discovery is performed by setting up temporary links which are removed once identities are exchanged. This process continues for a fixed amount of time and then all nodes start the formation phase. Each device sets a random timer to start this phase, to prevent competition by all devices trying to construct piconets simultaneously. A device remains in page scan state until the timer is expired. When expired, the device enters the page state, and tries to construct a piconet as master. The device pages the devices previously discovered, and contacts them one-by-one. If the paging is successful, the master-slave relationship is established, and the slave cancels its formation timer and does not try to construct a piconet. A master continues paging neighbours until it has seven slaves, or there are no neighbours to page. In the process of piconet formation, it is ensured that no piconets share more than one device and no device belongs to more than two piconets.</p><p>In subsequent phases, the aim is to increase the connectivity by making connections between disconnected but local piconets, using neighbourhood information held by slaves from the neighbourhood discovery phase. Again, a random back-off is used to stagger the each piconets activities. When activated, the master identifies slaves that belong to an other piconet, and the master obtains the addresses of devices in the adjoining piconet(s). Then the master identifies all neighbours of slaves which are not connected to the adjoining piconet(s). The master selects the minimum number of slaves covering the disconnected devices, and instructs those devices to go into piconet formation phase. This results in a bridge between disconnected components.</p><p>Finally, a scatternet adjustment protocol is defined to deal with device movement within the scatternet. This involves the slaves belonging to exactly one piconet periodically going into inquiryscan state, and disconnected nodes which were formally masters maintaining inquiry state to form a piconet, and former slaves perform the inquiry scan state. This means that the network will maintain a fixed number of masters. It is not assumed that all devices are in mutual range of each other. The scatternet adjustment protocol is shown to maintain a degree of network connectivity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.11.">Bluetooth topology construction protocol</head><p>In <ref type="bibr" target="#b77">[80]</ref>, a symmetric protocol is defined, without the need for sender or receiver role to be prede-fined. This is achieved by forcing the two nodes to alternate independently between the inquiry state and the inquiry-scan state, and when there is sufficient time overlap between opposing states, the connection will be established between devices. The schedules for alternation are explored in <ref type="bibr" target="#b78">[81]</ref>, where analytical calculation of the mean and variance for link formation delay are presented when state residence times follow a common random distribution.</p><p>This symmetric link establishment procedure is extended to a distributed scatternet formation protocol. The protocol seeks to collect information about all nodes in the network prior to forming the scatternet. The aim is to ensure that scatternets are formed which are appropriate to the devices which participate. The Bluetooth topology construction protocol (BTCP) consists of three phases: initially a leadership election process which is chosen to permit asynchronous operation of devices in the network; role determination is then performed and finally actual connection establishment is performed.</p><p>In the co-ordinator election, an asynchronous, distributed election of a co-ordinator node occurs. This node will ultimately hold centralised information on the count, identities and clocks of all network devices. The process requires all nodes to have a variable recording the number of votes, initialised as 1. Each node then alternates between inquiry and inquiry-scan states. When a node pair discover each other, they compare votes. The device with the largest number of votes in the pair is classed as the winner. In the case of a tie the device with the largest address is the winner. The loser device sends to the winner, all the device FHS packets of the nodes it has won so far. The loser then terminates the connection to the winner in the pair and enters the page-scan state. This means that it will not be able to hear inquiry messages and will only page messages from nodes that page it in the future, thereby removing the loosing device from the election process, and preparing it for subsequent protocol phases. At this point the winning device has increased its votes by the number of votes carried by the looser, and it continues the election process by resuming the alternation between inquiry and inquiry scan. The process continues until one device remains as winner, and all others are in page-scan state, awaiting to be paged by a node with information about them.</p><p>The second phase concerns role determination. The unique remaining winner acts as co-ordinator and has the FHS packets of all nodes. Initially the co-ordinator checks if more than one piconet is required. If not the case, the co-ordinator becomes master and connections with all other nodes are made, who become slaves. If more than one piconet is required, the co-ordinator must decide on the role that each device must perform in the final scatternet. In <ref type="bibr" target="#b78">[81]</ref>, for n devices, it is shown that for the scatternet to be fully connected, the minimum number of masters p satisfies</p><formula xml:id="formula_2">p Â¼ 17 Ã€ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi 289 Ã€ 8n p 2 &amp; '</formula><p>; 1 6 n 6 36:</p><p>Note that number of devices is fixed at a maximum of 36. The co-ordinator selects itself and p Ã€ 1 other devices as masters. [p(p Ã€ 1)]/2 other nodes are defined as the scatternet bridges, and the remaining devices are distributed equally among the masters for slave-only designation. A temporary piconet is created between all masters and the co-ordinator to distribute the allocation of slaves per piconet. Finally in the third phase, actual connection establishment occurs.</p><p>The election mechanism is a novel approach to creating and identifying devices with superior network topology knowledge. Throughout, the underlying assumption is that all devices are within transmission range of each other. Also, setting up the temporary piconet between masters in the second phase caps the number of piconets which are permissible in the final scatternet. The formation algorithm assumes en-masse device start up.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.12.">Self-routing Bluetree scatternet formation</head><p>In <ref type="bibr" target="#b86">[90]</ref>, a tree-shaped scatternet formation protocol is introduced which seeks to minimise the number of piconets involved, and facilitate simple routing. The protocol operates using only the ordering of device addresses and a number of operations are defined based on this information. An important concept in the protocol is the definition of range. For a given device i in a tree, this is a pair containing the smallest and largest device addresses rooted by i. The tree is structured so that a device i has range (x i ,y i ), then any device with identity greater than x i and less than y i must be routed at i. This permits easy navigation around the tree.</p><p>Under this protocol, all devices, independent of their status or connectivity, infinitely cycle through a range of modes which perform inquiry, inquiry scan, page, page scan and connection. These are incorporated with a range of bespoke operations to join, update range and prune connected components as they grow. However in order to maintain the range property, a lock mechanism is used which permits only one connected component at a time, to be admitted to any particular tree. A feature of the protocol is that when two connected components join, disconnection (i.e., pruning) of nodes may be required to ensure that the resultant tree has the required range property. It is the role of the root in the inquired tree to find the correct position to incorporate another connected component and update the range values in the tree. The protocol does not specify the point at which device role (master/slave) is established in creating the piconets. The protocol operates in an asynchronous manner and does not require all devices to be in mutual range. The operation of the protocol is not always guaranteed under changing membership (node failure), and the particular circumstances under which problems occur are documented in <ref type="bibr" target="#b86">[90]</ref>. The protocol seeks to integrate network formation with routing issues, so that routing induces minimal overhead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.13.">Tree scatternet formation</head><p>In <ref type="bibr" target="#b90">[94,</ref><ref type="bibr" target="#b91">95]</ref>, a protocol is presented for forming scatternets with a tree structure. The authors focus on designing the protocol to deal with frequent changes in scatternet membership. In particular, the protocol seeks to converge to a steady state, in which the scatternet is fully connected. The protocol handles both nodes arriving incrementally and en-masse, and similarly for departure. Randomisation is used to ensure a balance between each nodes data communication and communication to maintain the scatternet. At any point in time, the tree scatternet formation (TSF)-generated scatternet is a forest of connected tree components. A connected component with only a single device is called a free-node. Each node operates autonomously with only local communication, and alternates between two states: FORM and COMM. In the COMM state, the node is involved in data communication with other nodes in its connected component.</p><p>The FORM state has two sub-states, composed of inquiry and inquiry scan, as advocated in <ref type="bibr" target="#b77">[80]</ref> for symmetric link formation. The protocol permits either free nodes to connect to free nodes, free nodes to connect with non-root nodes, root nodes to connect only to root nodes, and non-root nodes to connect only to free nodes. These properties ensures that TSF produces loop-free topologies. The joining node takes its role (master/slave) to preserve the current structure of device roles in the inquired component. Time division between FORM and COMM states is important. If the connected component large, more time is spent in the COMM state, and conversely so. The amount of time in the COMM state is set proportionally to the degree of the node, dependent on the nodes age, which is checked via a threshold. Consideration is given to the optimal value for the random interval in which devices should stay in the FORM state.</p><p>The protocol also gives consideration to healing properties and link loss. When a master losses connection to a slave, it only need check whether it is a free node. When a slave loses connection to a master, it updates its node type and sets its age to zero. A leaf node in this situation becomes a free node and an internal node becomes a root node. The authors note that any root is only permitted to have seven slaves and consequently this restricts the total size of the scatternet, but it is reported that this does not impede the performance of the protocol for tests involving up to 100 nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.14.">Bluenet scatternet formation scheme</head><p>The scatternet formation scheme proposed in <ref type="bibr" target="#b94">[98]</ref> is designed to produce a flat network structure without any hierarchy. In comparison with a tree structure, it is shown that although the protocol spends more resources on maintaining scatternet links, more communications traffic can be carried. The protocol does not require all devices to be in range, and is designed for the setup of the network.</p><p>The phased procedure begins by each node locally building up the visibility graph. Then the nodes follow by randomly entering the page state, to try and invite a fixed number of neighbours to joint its future piconet. The invited nodes become slaves and stop paging. Devices which remain isolated follow in the next phase by paging all neighbours, to try and gain connection in at least one piconet. If more than one piconet is found in which it can participate, then the device becomes a bridge. In the final phase, the formed piconets, which at this stage are largely disjoint, seek interconnection. The master of each piconet instructs slaves to set up outgoing links. The mechanism for achieving this is not provided. The resultant scatternet is not guaranteed in the sense that not all BlueNets are connected even when the initial topologies are. However the probability of connectivity occurring increases with device density.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.15.">Blueroot and distributed Bluetrees</head><p>In <ref type="bibr" target="#b98">[102]</ref>, two scatternet formation protocols are introduced for the creation of tree topologies. The first protocol, Blueroot, creates a tree structure using a designated node, called the Blueroot. It is assumed that each node knows whether or not it is the Blueroot, the identifiers of the one-hop neighbours, and whether they are currently part of a piconet. The Blueroot node pages its neighbours, one by one, implying that the Blueroot will be master. If a node is paged and it is not currently part of any piconet, it accepts the page, thus becoming a slave to the paging node. Once a node has been assigned the role of slave, it initiates paging all of its neighbours one by one, and so on.</p><p>When building a Bluetree as described, it is possible that a master is assigned too many slaves. A geometric observation is used to reconfigure the Bluetree, to ensure that no master has more than five slaves. It is observed that in an interferenceand obstacle-free environment, if a node has more than five neighbours, then there are at least two nodes among the neighbours which are themselves neighbours. Based on this observation, an algorithm is executed at each master node. If a master m has more than five slaves, the master polls the slaves to find the identifiers of neighbours, and to find out how many slaves they handle themselves. Using this information, the master can find two slaves, say s 1 and s 2 , which could possibly connect. Node s 1 establishes a connection with s 2 , where s 2 becomes a master, while s 2 is instructed to disconnect from m. This operation retains the tree property and ensures than piconets have a limited, feasible number of active slaves.</p><p>In an extension to Blueroot, a protocol called distributed Bluetrees, is introduced. This is a tree formation protocol with further distribution, saving on setup time. As with the protocol described above, connectivity is established while maintaining a limited number of roles per device. Initially a collection of nodes, called init nodes, are selected in a distributed manner. These are selected as nodes with the highest identifier in its neighbourhood. These nodes initiate the Blueroot protocol in parallel, with two modifications. Firstly, when a piconet connection is established, the slave will be informed about the identifier of the root of the tree. Secondly, when paging neighbourhood nodes which are already part of a Bluetree, information on respective roots is exchanged. The information collected via these modifications is used in the second phase of the protocol. This connects sub-tree scatternets into one spanning the entire visibility graph. This is performed using a virtual graph, whose virtual nodes are the Bluetrees formed in the first phase of the protocol. An edge exists between virtual nodes in the virtual graph if the respective Bluetrees can be connected via an edge from the visibility graph. On dedicating one of these virtual nodes the Blueroot, the Blueroot algorithm can be run on the virtual graph.</p><p>The protocols are principally designed for enmasse formation of the scatternet, but they are unusual in being performed on a large number (up to 2000) of devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.16.">Blue-star island scatternets</head><p>The Blue-star island protocol <ref type="bibr" target="#b100">[104]</ref> operates with each device continuously cycling through inquiry, inquiry-scan states, on a randomised basis. When a handshake takes place between totally isolated nodes, a link is established and the master/ slave status is allocated. After joining a piconet, slave nodes periodically enter the inquiry-scan state to facilitate discovery by other masters. Bridge status is permitted for slaves up to a predefined limit on the number of interconnecting piconets. Nodes with master status periodically enter the inquiryscan state, until a limit on the number of slaves per piconet is reached. If a master node scans another master node, it breaks all current links and joins the piconet as a slave. All slaves in the broken piconet become totally isolated devices without either master or slave status, and start the cycle of inquiry, inquiry scan to find new links. This simple protocol does not guarantee connectivity, but is highly flexible, with no device synchronisation required, is fully decentralised. It is also sufficient to deal with changes in scatternet membership and dynamic scenarios. The approach gives some consideration to scheduling (via minimising the number of piconets) and also mentions the issue of route discovery in this context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.17.">Centralised scatternet formation</head><p>A number of authors have dealt with the problem of scatternet formation with centralised knowledge. This is of limited use for the application of a protocol, but is useful for two purposes: 1. finding the best possible performance for a given visibility graph; 2. gaining knowledge on scatternet configurations and performance.</p><p>The considerable size of the search space (see <ref type="bibr" target="#b11">[12]</ref>), in terms of number of feasible scatternets, precludes analytical or exhaustive treatment of this problem. An alternative is to take a distribution of devices, and consider the best possible performance which can be achieved, using the global knowledge (i.e., visibility graph). On application of optimisation techniques, the resultant scatternet can be directly compared with the scatternet formed by the decentralised protocol. This approach was first advocated in <ref type="bibr" target="#b58">[61]</ref>, using sim-ple heuristic algorithms to generate feasible scatternets, which were then analysed in detail. Subsequently, more sophisticated optimisation approaches have been introduced. In <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b57">60]</ref>, a mathematical programming formulation is used. This involves minimisation of the traffic load at the most congested node, subject to constraints concerning full network connectivity, piconet size and number of piconets, specified traffic requirements (desired source-destination flows), and the number of roles devices perform. The approach assumes that routes are specified between the source and destinations, and the amount of traffic is also specified. This input reduces the search space (i.e., number of possible solutions) because edges along the routes must necessarily be included in the scatternets produced. Therefore the approach focuses on specifying the roles of devices.</p><p>In other papers considering centralised scatternet formation <ref type="bibr" target="#b50">[53,</ref><ref type="bibr" target="#b51">54,</ref><ref type="bibr" target="#b98">102]</ref>, the thrust has been to adapt centralised approaches for decentralised application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.18.">Summary</head><p>In Table <ref type="table">2</ref>, we present a classification of approaches for scatternet formation and maintenance. Characteristics of each approach are characterised in terms of control mechanisms, topology and optimisation objectives. Below we define the terms used in Table <ref type="table">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Control mechanism</head><p>Global control--control is centralised at a single device. This node gains full knowledge of all other devices in the area and performs scatternet formation, informing each node of its role and the links between them.</p><p>Local control--scatternet formation is decentralised. Devices determine their roles in the absence of a fully centralised co-ordinator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Topology</head><p>Radio range--all devices are in radio range of each other. Fixed positions--the positions of devices are fixed.</p><p>Gateway--allows piconets to be interconnected only by common slaves. Intermediate gateway--bridges are allowed to be masters in one piconet. Geometric approach--uses location information (theoretically via GPS) to determine topology.</p><p>Graph based approach--uses a specific graph to determine the topology, other than ring or tree.</p><p>Ring structure--devices are formed into a ring graph based structure.</p><p>Tree structure--devices are formed into a tree graph based structure. Hierarchical structure--nodes form a logical hierarchy (other than slave/master). Mesh structure--nodes form a graph with the explicit requirement of at least two paths between device pairs. Limited number of nodes--the approach is applicable to a limited numbers of devices only.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Optimisation and control of the topology</head><p>Minimise/limit the number of piconets--to control interference and inter-piconet communication.</p><p>Power management--to minimise consumption in the network formation process. Weighting of nodes--to reflect the suitability for use as masters. Optimise capacity--the approach directly considers this aspect. Optimise throughput--the approach directly considers this aspect. Dynamic/maintenance--a repair response to changes in scatternet membership. Max-min optimisation--explicit optimisation of quantifiable multiple objectives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Topology performance measurement</head><p>Evaluating the communication performance of an ad hoc wireless network is a challenging problem in its own right <ref type="bibr" target="#b93">[97]</ref>. A single, overall best protocol for scatternet formation and maintenance does not exist. Firstly, different scenarios require different performance properties. Secondly, there are various different ways to assess the performance characteristics of both the protocol and the topology it creates and maintains. We consider the alternative approaches for assessing scatternet performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Properties of the protocol</head><p>Properties of the protocol relate to its ability to create and maintain scatternets. Low time complexity is particularly important in situations of en-masse start-up. Low message complexity is particularly important in highly dynamic environments were scatternet membership is frequently changing, and generally important for minimising power consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Time complexity</head><p>Time complexity describes the protocols ability to scale in terms of time taken to create a fully connected scatternet. This is particularly relevant for en-masse device start up, where big Ã”OÃ• notation can be used to describe the worsecase effects of doubling the number of devices on the proportion of time taken. In many simple protocols, it is not possible to derive this analytically (e.g., <ref type="bibr" target="#b28">[30]</ref>), since network connectivity is not guaranteed. In these situations, empirical observation is necessary. However, some authors have developed formation protocols from which time complexity can be analytically derived. For example, <ref type="bibr" target="#b46">[49]</ref> determines network formation in O(log n), (assuming n nodes). In <ref type="bibr" target="#b73">[76]</ref>, O(n) time complexity is established. A range of authors <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b46">49,</ref><ref type="bibr" target="#b77">80,</ref><ref type="bibr" target="#b80">83,</ref><ref type="bibr" target="#b91">95]</ref> make empirical measurements on this aspect.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Message complexity</head><p>Messaging complexity describes the protocols ability to scale in terms of number of messages required for purposes of creating a fully connected scatternet. As messaging for network formation precludes use of the network for communication purposes, it is important to minimise messaging, particularly in dynamic environments where only a small time window exists for exchanging set up messages. In <ref type="bibr" target="#b47">[50]</ref>,</p><p>messaging is considered explicitly, and it is established that for n devices, the protocol has messaging complexity of O(n). The same result is established for the protocol introduced in <ref type="bibr" target="#b73">[76]</ref>. For other protocols, empirical observation of the total number of messages is not considered, because this is better suited to analytical treatment. In preference, time complexity is normally empically observed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Environmental dynamism</head><p>The performance of scatternet formation and maintenance protocols in dynamic environments is important for ad hoc operation. Protocol efficiency in dynamic scenarios has received little attention other than in <ref type="bibr" target="#b91">[95]</ref>, where a range of critical cases are considered. These focus on healing partitions and dealing with en-masse and incremental departures and arrivals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Properties of the scatternet</head><p>The performance of a scatternet topology can be evaluated using measures which are either traffic dependent or traffic independent. Traffic dependent measures require the specification of a traffic profile, defining source and destination of packets, and packet flows are considered. This needs specification of routing techniques (see Section 7) and scheduling techniques (see <ref type="bibr">Section 8)</ref>. If studying Bluetooth topology in isolation, as with many scatternet formation protocols, this makes evaluation difficult. Consequently, traffic independent performance measures are frequently used. We consider the range of traffic independent measures used in the literature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Average shortest path length</head><p>In the absence of a pre-defined routing protocol and without definition of traffic flow, the potential for high quality routes can be assessed by shortest path length between source and destination devices. This can be benchmarked against the best-possible shortest path between corresponding devices in the visibility graph. The disparity between shortest path length in the scatternet and that in the visibility graph can be taken as a performance measure. A range of authors (e.g., <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b53">56,</ref><ref type="bibr" target="#b57">60,</ref><ref type="bibr" target="#b68">71,</ref><ref type="bibr" target="#b69">72,</ref><ref type="bibr" target="#b91">95,</ref><ref type="bibr" target="#b94">98,</ref><ref type="bibr" target="#b98">102,</ref><ref type="bibr" target="#b100">104]</ref>) use this approach. However, the measure has to be considered in a wider context, by noting that shortest paths may not necessarily lead to high levels of throughput, particularly if multiple paths use common devices which effectively form a bottleneck. The authors <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b46">49,</ref><ref type="bibr" target="#b100">104]</ref> contrast the shortest path approach by considering maximum network diameter. Shortest path assessment is likely to be a realistic measure in the case of light traffic loads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Traffic flow across a bottleneck</head><p>A couple of authors <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b57">60]</ref> have directly addressed the potential drawback of shortest path length by considering the performance of traffic flow at bottlenecks identified in the network. This is potentially useful but in practice, the identification of such bottlenecks is likely to depend on the flow of traffic across the network. Consequently assumptions must be introduced concerning routing across the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Average number of slaves per piconet</head><p>This is an important metric because the number of slaves per piconet dictates the quantity of piconets required across the network. In a connected scatternet of n devices, with each piconet containing k devices, there must be at least d(n Ã€ 1)/ke piconets (see <ref type="bibr" target="#b48">[51]</ref>). As each piconet has its own channel, the number of piconets also dictates the number of channels per scatternet. When the number of piconets is high, the potential for collisions and channel degradation is increased. However, within a piconet, a potentially higher link capacity is experienced. Consequently protocols generally seek to maximise piconet size (up to seven devices), with the exception of <ref type="bibr" target="#b23">[24]</ref>, which maximises the number of piconets by forming a ring structure in which every piconet contains exactly two devices. A range of authors <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b46">49,</ref><ref type="bibr" target="#b50">53,</ref><ref type="bibr" target="#b68">71,</ref><ref type="bibr" target="#b69">72,</ref><ref type="bibr" target="#b100">104]</ref> monitor the performance of protocols taking into account the average number of devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Average number of roles per device</head><p>A range of authors <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b46">49,</ref><ref type="bibr" target="#b50">53,</ref><ref type="bibr" target="#b68">71,</ref><ref type="bibr" target="#b69">72,</ref><ref type="bibr" target="#b98">102]</ref> note that this factor impacts on the performance of the network by the switching overhead that it induces. Consequently a number of authors constrain this, while others choose to measure this factor as a minimisation objective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Capacity and throughput</head><p>Scatternet capacity broadly relates to the networks ability to carry traffic, and this is interpreted in various ways by different authors. In <ref type="bibr" target="#b23">[24]</ref>, this is approximated by measuring the maximum number of successful simultaneous device-pair communications possible. In <ref type="bibr" target="#b24">[25]</ref>, the effect of piconet polling and number of slaves per piconet are used to estimate per-link capacity. Traffic dependent metrics based on the residual capacity are introduced which are dependent on assumptions for routing. The paper <ref type="bibr" target="#b81">[84]</ref> derives an approximate function for capacity based on a range of characteristics that relate to the network. Throughput describes the maximum flow which can be achieved between source and destination devices and has been adopted for analysing scatternet performance in <ref type="bibr" target="#b53">[56,</ref><ref type="bibr" target="#b54">57,</ref><ref type="bibr" target="#b57">60,</ref><ref type="bibr" target="#b70">73,</ref><ref type="bibr" target="#b90">94,</ref><ref type="bibr" target="#b94">98]</ref>. Well known algorithms (such as the Ford-Fulkerson approach as described in <ref type="bibr" target="#b94">[98]</ref>) can be readily applied. The paper <ref type="bibr" target="#b90">[94]</ref> is unusual in deriving approximate functions for assessing throughput in the context of a scatternet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Average path latency</head><p>This metric seeks to approximate the communication latency between device pairs in the scatternet. Tan et al. <ref type="bibr" target="#b90">[94]</ref> attribute this to three factors: hop count, intra-piconet scheduling delay and inter-piconet bridging delay. These factors are dependent on the policy adopted for scheduling and routing, which poses problems given the current lack of consensus on these issues, and lack of realistic scatternet traffic patterns. Consequently in <ref type="bibr" target="#b90">[94]</ref>, a metric is introduced which is independent of scheduling and traffic, and approximates the average path latency between all pairs of source and destinations for a given scatternet, by observing the latency contributions from inter-and intrapiconet scheduling. This approach is also adopted in <ref type="bibr" target="#b23">[24]</ref>. Alternative to this is direct simulation of delay (e.g., <ref type="bibr" target="#b40">[43]</ref>). However this requires the assumptions on traffic, scheduling and routing. These are present in some approaches to scatternet formation, particularly when there is a well-defined underlying topology structure such as a tree or ring. In such cases (e.g., <ref type="bibr" target="#b54">[57]</ref>) fewer approximate metrics need to be imposed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Interference</head><p>It is widely acknowledged that the fast frequency hopping scheme adopted by Bluetooth is resilient to interference. Consequently most authors choose to neglect interference when assessing scatternet performance. The only authors to include this factor for neighbouring piconets are Lin et al. <ref type="bibr" target="#b53">[56]</ref>. As 79 frequencies are used for hopping, each of which is equally likely, the probability that a time slot suffers interference is approximated as (78/79) RÃ€1 where R is the number of piconets in transmission range of each other. Similar analysis is applied in <ref type="bibr" target="#b30">[32]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Network lifetime</head><p>As mobile devices are likely to be power restricted, energy efficiency is important to enhance network lifetime. Few authors directly address this issue. The only paper to consider this directly for BT is <ref type="bibr" target="#b70">[73]</ref>, which defines the network lifetime as the time until at least one device exhausts all battery power. Two power saving techniques are introduced (one using battery power based master/slave switch and the other using distance based power control) to manage traffic flow across the scatternet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â€¢ Reliability of the network</head><p>If a protocol can rapidly respond to link and device failure, then the protocol will be able to ensure reliability, via the provision of potential routes across the network. However, the extent to which outage causes critical failures will depend on the provision of alternative routes in the scatternet. Flat network structures (e.g., <ref type="bibr" target="#b69">[72]</ref>) have been advocated for increased reliability, and the provision of alternative paths has been considered in <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b53">56]</ref>. Specific network topologies, or networks with certain characteristics, are frequency sought since properties such as reliability may be guaranteed to a certain extent, such as in a mesh configuration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Performance simulation</head><p>To assess performance in the presence of traffic, simulation is required. The IBM extension to the network-simulator Ã”nsÃ• <ref type="bibr" target="#b66">[69]</ref> is termed BlueHoc <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b45">48]</ref>, and is open-source, written in C++. This emulates the Bluetooth stack and the operations which are available in the Bluetooth specification, and has been adopted in <ref type="bibr" target="#b47">[50,</ref><ref type="bibr" target="#b54">57,</ref><ref type="bibr" target="#b90">94,</ref><ref type="bibr" target="#b91">95,</ref><ref type="bibr" target="#b100">104]</ref>. BlueHoc is a useful starting point for protocol performance measurement and has been subsequently enhanced in <ref type="bibr" target="#b6">[7]</ref> for example, by additional mechanisms to handle collisions and enable devices to alternate between inquiry and inquiry scan. In <ref type="bibr" target="#b32">[34]</ref>, further development is reported, to consider node movement. A Java alternative to BlueHoc is Simjava <ref type="bibr" target="#b82">[85]</ref>, which is adopted in <ref type="bibr" target="#b65">[68]</ref> for purposes of simulating service discovery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Routing</head><p>To facilitate multi-hop communication, a packet will need to be relayed via a number of masters and bridges before it reaches its intended destination. A number of authors (e.g., <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b95">99]</ref>) point out that routing in the context of Bluetooth differs to that for general ad hoc network scenarios. Consequently, a different set of design compromises are required for routing techniques, as compared to those being developed for general ad hoc applications (see <ref type="bibr" target="#b74">[77]</ref> for an overview) by the Internet Engineering Task Force (IETF) mobile ad hoc network (MANET) working group. For example, in <ref type="bibr" target="#b12">[13]</ref>, it is pointed out that due to packet size limitation at the baseband layer, MANET style solutions will require fragmentation and packets at each relay device. Consequently, there will be an increased buffering requirement at each device leading to a higher delay at each hop. This means that it is advantageous to support forwarding across the network at the slot level, as it will reduce the buffering that is required.</p><p>It is likely that the Internet protocol (IP) will be commonplace in the context of scatternets, and therefore it is possible that this layer could be used for routing. However, a number of arguments are proposed in <ref type="bibr" target="#b35">[38]</ref> against sole reliance on this layer, for scatternet routing. In particular, a routing function on the IP layer would need to be adapted, so that routing function can be integrated into the scatternet formation function. This violates the principle of keeping the IP layer independent from the link layer. Additionally, the IP routing approach would preclude other non-IP based applications. Bluetooth devices are not compelled to host an IP layer to be part of an operational piconet. It is concluded in <ref type="bibr" target="#b35">[38]</ref> that the best way to manifest routing functionality is at the layer beneath IP.</p><p>The context in which Bluetooth scatternets are likely to operate, also affects the design requirements. For personal area network applications, traffic characteristics, mobility patterns and scaling requirements will also differ from classic ad hoc networks. It is likely that in many instances, scatternets will be quasi-static, short lived and small. Therefore, scalability and adaptivity features may not always be essential. Instead, protocol simplicity, power and bandwidth conservation are particularly important. Additionally, for efficiency purposes, integration with scatternet formation processes is desirable.</p><p>As for other scenarios, choices for routing strategies fall into the broad categories of pro-active and re-active approaches. Traditional routing protocols, used for Internet routing for example (and also in ad hoc networks), are pro-active in that they maintain routes to all nodes. This type of approach requires storage for routing tables, and procedures are required to generate the routing tables and ensure that they are up to date, as the ad hoc nature of scatternets means that links will be temporary. In a reactive protocol, routes are determined dynamically. We describe the ways in which these approaches have been proposed in the context of Bluetooth scatternets. It is notable that very limited development has occurred in this area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">A reactive protocol</head><p>The protocol proposed in <ref type="bibr" target="#b12">[13]</ref> is a source-oriented approach, which creates routes only when desired by the source device. The commonly used method of representing routes in source routing headers is to include a list of the node identities. This would be a wasteful approach in Bluetooth scatternets. To avoid this, Bhagwat et al. <ref type="bibr" target="#b12">[13]</ref> seek to reduce the overhead by introducing an efficient route representation for uni-cast and multi-cast traffic. This approach is called the routing vector method (RVM), and relies on representing piconets by a local identification number (LocID), selected locally by bridges. Within a piconet, a 3-bit MAC address (MacAddr) is used to identify the slaves. The sequence of LocID and MacAddr values is used to identify routes, as opposed to using a sequence of Bluetooth identities. This leads to a substantial reduction in the number of bits per hop, induced as an overhead.</p><p>When a packet is sent, the sequence of addresses corresponding to the route to be followed is written to the route vector field of the header. A source routing algorithm is employed to determine the path between the source and destination nodes. Since scatternets are mobile units, a protocol is proposed where two or more maximally disjoint routes are determined, and each packet is sent via all routes. Discovery of the first route occurs using a flooding approach across the entire scatternet, using search packets. Each bridge that propagates a search packet appends the piconet identities from which it has received the packet and also appends the packets next destination. When the final destination first receives a search packet, it returns a reply packet along the reverse path. The second route is built similarly to the first. Once routes have been defined, a packet is sent from the source to the destination via the RVM route. When a relay receives a packet, it sends the packet to the master of the piconet corresponding to the first LocID, to be forwarded to the unit whose MAC address is given by the first MacAddr. Before sending, the first pair (LocID, MacAddr) are removed from the list.</p><p>On demand route discovery is recommended by the authors on the assumption that only a small set of devices will need to communicate at once. The route is kept in the packets, not routing tables, to minimise storage overheads. The authors indicate there will be a limit beyond which such networks cannot be scaled, through they expect this approach to suffice in the majority of applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">Hybrid protocols</head><p>Hybrid protocols combine the characteristics of reactive and pro-active protocols. In <ref type="bibr" target="#b22">[23]</ref>, an approach is presented, derived from a Dynamic Source Routing (DSR) approach <ref type="bibr" target="#b37">[40]</ref> designed for ad hoc networks, which has been adjusted to fit Bluetooth characteristics. When forming a route, this approach considers the delay that may be expected at masters due to connections to many slaves. A Blueroute layer manages a cache at each Bluetooth unit, which may contain routes from this unit to other units. When performing route discovery, the source checks its cache to see if it has a route to the destination. A process is repeated where a unit floods the packet to its neighbours when it is not the packets destination and does not have a cached route to the destination. If the unit has a cache of the destination route, this is used to determine the route. No detail is given regarding the size of cache at each Bluetooth node.</p><p>In <ref type="bibr" target="#b41">[44]</ref>, a hybrid reactive-pro-active Zone Routing Protocol approach that employs a combination of pro-active and reactive schemes is proposed. Since Bluetooth nodes are expected to have low resources, schemes that require storage of large routing tables, may not be viable. Using a hybrid approach allows Bluetooth masters to store smaller routing tables that provide routing information for nodes within a maximum number of hops (denoted MAXHOPS). Similarly to <ref type="bibr" target="#b22">[23]</ref>, if a node does not have a full path to the destination, reactive path discovery is employed by flooding the scatternet with a route request. The first node that has a path to the requested node, sends a route reply packet back to the source. This packet follows the route taken to reach this node and this information along with the nodes path knowledge is used to define the route.</p><p>The parameter MAXHOPS determines the performance of the scheme. Simulations show that the pro-active part of the scheme was able to communicate large amounts of routing information at low overheads. A high value of MAXHOPS leads to small route acquisition latencies, but at the expense of higher routing overhead and higher information storage costs. It is also shown that in networks with large numbers of idle nodes, the pro-active part may cause unnecessary overhead, particularly for large values of MAXHOPS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.">Power conserving routing</head><p>Many wireless network scenarios require energy efficient network protocols. A general survey of this area is given in <ref type="bibr" target="#b38">[41]</ref>. Recently, several Bluetooth specific routing methods have been proposed that aim to conserve power.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.1.">Power dependent routing</head><p>In <ref type="bibr" target="#b70">[73]</ref>, a reactive routing approach is proposed which is aimed at providing energy efficient techniques by utilising knowledge of the available battery power of the Bluetooth devices as a cost metric in choosing the routes. It is assumed that during scatternet formation, each piconet is given a unique piconet ID (PID). When a device wants to discover a route to a destination, a flooding approach is employed in which it sends a route request packet to its master. The master appends its PID and its available battery power to the request packet and forwards it to all associated bridge points in the piconet. Each bridge appends its Bluetooth address and adds its available power level to the cost field and forwards the packet to all other piconets it is associated with. This process continues until the request packet reaches the destination device. The destination may get multiple copies of the route request packet through different routing paths each having different costs. The destination waits for a specified amount of time to get multiple copies of the route request packet through different paths. It then selects the path that has the maximum cost field (i.e., maximum cumulative battery power in the path). The destination then sends a route reply packet to the source device. The route reply packet contains the selected route vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.2.">On demand routing</head><p>In <ref type="bibr" target="#b55">[58]</ref>, an on demand approach to the building, routing and scheduling of a Bluetooth scatternet is presented. The most common approach for scatternet formation protocols is to interconnect all Bluetooth devices at the initial network startup stage and maintain all Bluetooth links thereafter.</p><p>In reality, the physical and data link only need to be created and supported when two Bluetooth devices wish to communicate. If no communication is required between Bluetooth devices, they can go into a low power standby state. This power saving principle has been ignored by most scatternet formation algorithms, which tend to interconnect all Bluetooth devices as a complete scatternet at the initial startup stage, and maintain the full connectivity of the network at the data link level. Instead of forming a complete scatternet, the authors propose a scatternet-route structure that enables the dynamic establishment of Bluetooth links only along the traffic routes. The differences between this approach and the complete scatternet approach are similar to those between table driven routing protocols and on-demand routing protocols. The former maintains network-wide route information for fast setup, but incurs substantial signalling traffic and power consumption. The latter suffers long route setup delays, but is more power efficient in a mobile ad hoc environment. Where power is a concern, as in a Bluetooth scenario, the on demand approach may be favourable.</p><p>As with reactive routing approaches, a route discovery packet (RDP) is flooded to the whole network to find a route to the destination. Upon receiving the first RDP packet, the destination node sends a route reply packet (RRP) back to the source along the discovered route. When transferring the RRP, point-to-point Bluetooth links are created to connect the members of the new route and at the same time, the routing tables of these devices are filled with the new route discovery information. When the RRP arrives at the source device, the scatternet route is ready for the first data packet to be sent from the source. Analysis and simulation show that whilst this approach has non-negligible setup delay, it achieves high link utility, stable network throughput, and fast packet transmission.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4.">Self-routing structures</head><p>One approach to simplifying the potentially complex issue of routing is to create a topology in which there are unique paths between source and destination. Such structures necessarily have to be trees. In <ref type="bibr" target="#b86">[90]</ref>, this approach has been extended further by structuring the hierarchy in the tree so that messages are self-routing in the sense that they need carry no routing information, only simple rules to guide their way through the topology, which can be regarded as a search tree. Further details of this approach are given in Section 5.12. Slightly more complex than the tree topology is the cycle or ring structure, which also leads to very simple routing. This has been tackled in <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b53">56]</ref>, as described in Sections 5.3 and 5.8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Scheduling</head><p>Scheduling is required to transfer packets between devices which may reside in the same or different piconets. The Bluetooth specification contains only limited information on how scheduling is to be performed. The nature of Bluetooth scatternets means that whilst existing scheduling approaches used in wireless networks are applicable for intra-piconet communications, more consideration is required to effectively apply them in topologies involving interconnected piconets.</p><p>Within a piconet, scheduling is undertaken by master devices, and controls the devices choice for communication with (and therefore from) a slave in the time division duplex. The master decides which slave is the one to next access the channel. A slave is authorised to deliver a packet to the master only if it has received a polling packet from the master. The polling cycle determines the order in which the slave are polled, and the number of slots for data transmission. To manage message forwarding between piconets, consideration must be given to the effects of scheduling on bridge devices, which reside in multiple piconets. An amicable relationship must be established between schedules in overlapped piconets to avoid conflicts: a master should only poll a bridge when it is not engaged in communication in another piconet. Furthermore, inter-piconet scheduling must satisfy inter-piconet traffic demand, so that bottlenecks are minimised. This requires consideration of how best to divide a bridges time between multiple piconets. The queue at a device refers to the num-ber of packets awaiting transmission. A schedule is exhaustive if the queue at each device is cleared before the next device is polled. We consider the advances which have been made concerning intraand inter-piconet scheduling for Bluetooth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.">Intra-piconet scheduling</head><p>Intra-piconet scheduling only considers the scheduling problem for a single piconet. Three issues need to be addressed in the design of an intra-piconet scheduler:</p><p>1. slave activity: avoidance of polling slaves which have no data to transmit; 2. fairness: give preference to slaves based on their relative importance; 3. efficiency: minimise the delay for slaves who are waiting to transmit data.</p><p>This section begins with an examination of intra-piconet schedulers that build upon an existing scheduling approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.1.">Round Robin based scheduling</head><p>Round Robin (RR) is one of the simplest and most widely used scheduling algorithms, most commonly used to schedule CPU time. Applying this to intra-piconet scheduling means that slaves are polled in a cyclic fashion. A variety of RR based approaches have been proposed and evaluated. These are distinguished by the criteria for defining the cycle, and the length of time (slots) each master-slave pair is permitted for communication. In <ref type="bibr" target="#b20">[21]</ref>, Capone et al. consider the problem of designing an efficient and simple polling and scheduling scheme for Bluetooth. Three RR scheduling schemes are proposed:</p><p>â€¢ Pure Round Robin (PRR): A fixed cyclic order is defined and a single chance to transmit is given to each master-slave queue pair according to the cyclic order. This scheme is not exhaustive and each slave is granted a fixed number of slots. â€¢ Exhaustive Round Robin (ERR): As with PRR a fixed order is defined, but the scheme is exhaustive and it does not switch to the next slave until both the master and the slave queues are empty.</p><p>â€¢ Exhaustive Pseudo-cyclic Master queue length (EPM): A dynamic cycle order is defined at the beginning of each cycle (each slave is visited exactly once per cycle) according to a decreasing master to slave queue length order.</p><p>The difference in performance between ERR and EPM is shown to be negligible, and this suggests that the use of a pseudo-cyclic dynamic scheme based on partial information of the queue status is not necessary since the fixed cycle scheme gives good performance. The PRR scheme performs the poorest, in general. While exhaustive schemes such as ERR are shown to be effective in symmetric scenarios, they may be less appropriate where traffic demand is asymmetric. An additional drawback of exhaustive schemes is that slaves with large amounts of data to transmit may capture the channel, leading to unfair relative distribution of bandwidth. Whilst it clearly makes sense to offer more bandwidth to slaves with high loads, some attempt must be made to do this fairly. The simplest way is to modify the ERR scheme, limiting the number of slots that can be performed each pair cycle. This functionality is employed in the Limited Round Robin (LRR) approach. At low loads, the delays of the LRR scheme are higher than that of ERR. At higher loads, LRR can achieve lower delay than ERR due to the wastage of slots by the ERR scheme.</p><p>A further proposed enhancement to the LRR scheme, defined in <ref type="bibr" target="#b20">[21]</ref>, extends it to consider the activeness of slaves. A performance gain is made by reducing the rate of visit to queues which have been empty in the last visits and hence, should have a lower probability of being the longer queues. This should also reduce the time wasted polling idle slaves. This leads to extension of the LRR scheme to the Limited Weight Round Robin (LWRR) scheme <ref type="bibr" target="#b20">[21]</ref>. LWRR adopts a weighted round robin algorithm with weights dynamically changed according to the observed queue status. At the beginning, each slave is assigned a weight equal to maximum priority (MP), which constitutes a variable which is set within the scheduler.</p><p>The weight is used to calculate how many cycles a slave must wait before it is next polled, where the number of cycles to wait is given by the MP slave weight. Each time a slave is polled and no data is exchanged between master and slave, the weight of the slave is reduced by 1, until a minimum weight of 1 is reached. In this case, the slave has to wait a maximum of MP Ã€ 1 cycles before it gets a chance to send data. When an exchange occurs between a slave and its master, the weight of the slave is increased to the MP value. Evaluation of LWRR shows that it always performs better than the other schemes, and is usually very close to that of the ERR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.2.">Extended Round Robin scheduling</head><p>The work of Lee et al. <ref type="bibr" target="#b49">[52]</ref> extends that in <ref type="bibr" target="#b20">[21]</ref>. A new polling scheme is proposed, called Pseudo-Random Cyclic Limited slot-Weighted Round Robin (PLsWRR). This has two important properties. Firstly, as in LWRR, it attempts to distinguish between slaves on the basis of their ''activeness'', which constitutes their traffic history. Secondly, the polling order for each cycle is determined in a pseudo-random manner. LWRR has two disadvantages due to the number of slots in a polling cycle being variable. Firstly, an inactive slave needs to wait for a long time to get a chance to exchange data packets, if the previous polling cycles have large numbers of slots. This can lead to high delay for an idle slave. Secondly, an idle slave is polled frequently if the previous polling cycles have a small number of slots. This may reduce the efficiency of the system. The PLsWRR scheme extends the LWRR scheme by employing a RR algorithm in which the weights of slots are changed according to the activeness of the slave in the previous cycle.</p><p>Initially, each slave is assigned a slot-weight equal to Max-Slot Priority (MSP). This value is a variable which can be set in the system, taken to be 160 slots in the simulation, which equates to a maximum waiting time of 100 ms. When a slave is polled and no data is exchanged, the slot weight of the slave is reduced by the number of slots in the previous cycle. As with LWRR, the lowest weight value is 1 and if data is exchanged between the slave and the master, the slot-weight of the slave is increased to the MSP. PLsWRR uses the number of slots as opposed to number of cycles (as in LWRR) to reduce the polling to less active slaves. PLsWRR guarantees that slaves wait a maximum of MSP slots to get a chance to be polled. This makes the behaviour more reliable than LWRR, in which the slave waits for a bounded number of cycles, but the length of these cycles may be variable. As a result, unlike LWRR, PLsWRR works effectively regardless of the length of the previous polling cycles, avoiding the two disadvantages of LWRR.</p><p>Evaluations show that PLsWRR outperforms LWRR. It is also shown that the pseudo-random cyclic order polling in PLsWRR provides fairness to the flows, with all flows in the piconet having equal shares of the total capacity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.3.">Efficient double cycle scheduling</head><p>The efficient double cycle (EDC) scheduling approach introduced in <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref> seeks to preserve the fairness of a typical round robin technique but increase efficiency by avoiding wasted polling of devices with no data to send. Polling only the active devices leads to a polling sub-cycle, which was initially addressed in <ref type="bibr" target="#b34">[37]</ref>. The EDC approach extends the application of a polling sub-cycle to a separation of up-link and down-link scheduling. In the downlink direction, the master has knowledge of packet queues for slaves. In the other direction, it can be assumed that the master has a probabilistic knowledge based on the feedback the master gets when polling the slaves. This means that the master can only estimate the probability of an inactive slave by exploiting knowledge of slave transmissions in previous cycles.</p><p>A partial decoupling in the scheduling of downlink and uplink transmissions is achieved by defining a double polling cycle, which consists of an uplink polling sub-cycle (cycle up ) and a downlink polling cycle (cycle dw ). During both these cycles the master updates a subset of slaves that are eligible for polling. For the downlink cycle, these are defined as E(DW), and E(UP) denotes the members eligible for the uplink cycle. Different rules are applied for the selection of slaves in E(UP) and E(DW). These rules unsure that there is fairness separation for the different directions: specifically cycle up ensures fairness in the uplink direction, and similarly for cycle dw in the downlink direction. The sets E(UP) and E(DW) are simulta-neously updated at the beginning of each cycle, with knowledge of traffic loads gained from the previous cycle. The set E(DW) is determined by the master, using knowledge of queue lengths. For the uplink polling cycle, if a slave has sent a packet with a null payload in the previous cycle, then its polling window is doubled (until a maximum value is reached). Otherwise a polling window of 1 is used, and therefore the device is polled in the next cycle. Simulation results presented in <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref> show that EDC significantly improves the throughput of TCP connections when compared to a round robin scheduling approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.4.">Adapting to flow and utilising multiple slots</head><p>In addition to reducing the polling frequency to slaves with no data to transmit, improvements can be gained from reducing the polling frequency for slaves with low volumes of data to transmit. Das et al. <ref type="bibr" target="#b25">[26]</ref> describe three algorithms that each adjust the polling rate of slaves, based on the amount of data they have to transmit.</p><p>In the first approach, called Adaptive Flow based Polling (AFP), the polling rate is increased for slaves that have more than a threshold value (bufthresh) of data in the buffer, and decrease the polling rate for those slaves that have no data to send. This is controlled by updating the polling interval for each device. Initially this is a uniform (default) value, but subsequently changes according to the number of packets in the slaves buffer. If there are more than buf-thresh packets in the buffer, the packet is sent and the polling interval is set to the default value. In this case, there is a high flow rate for this slave, and hence its polling interval is reduced so that it can be served more frequently. If there are less than buf-thresh packets in the buffer, the packet is transmitted and the polling interval is unchanged. If a poll packet is transmitted and a null packet is received, the current polling interval at the device is doubled (up to a defined limit).</p><p>In the second algorithm, the Sticky algorithm, the rate of polling is not affected, but slaves with high levels of data to transmit are allowed to transmit multiple packets. Each slave is serviced in a cyclic fashion and if the slave has more than bufthresh packets in its buffer, a maximum level of num-sticky packets are transmitted. If the number of packets in the buffer is less than buf-thresh, a single packet is transmitted as in RR scheduling.</p><p>The final algorithm, Sticky Adaptive Flow based Polling (Sticky AFP) combines aspects of AFP and Sticky, such that when the slave has more than buf-thresh packets to send, a maximum of numsticky packets are transmitted.</p><p>A simulation is used in <ref type="bibr" target="#b25">[26]</ref> to assess the the TCP throughput for different values of num-sticky, and a comparison is performed between the three algorithms. Both AFP and Sticky algorithms give significantly better performance than RR. The Sticky algorithm is found to have the lowest endto-end delay, whilst Sticky AFP has the highest. Sticky reduces queue occupancy by transmitting multiple packets from queues with high backlog, thereby preventing queue overflow and reducing end-to-end delay. On the other hand, Sticky AFP causes a marked increase in end-to-end delay of intermittent constant bit rate traffic, because flow is set infrequently for such bursty sources. It is concluded in <ref type="bibr" target="#b25">[26]</ref> that either AFP or Sticky (with a high value of num-sticky) result in the best overall performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.5.">Predictive fair polling</head><p>The predictive fair polling (PFP) approach is based on consideration of best effort traffic <ref type="bibr" target="#b96">[100]</ref>. This means that the slaves get the same fraction of their fair share resources, where a fair share is equal to the share that the slaves would have been given when a generalised processor sharing system was used. This is opposed to the case where fairness determines that slaves get the fraction of their negotiated quality of service requirements.</p><p>The scheduling operates without information about the offered load. This means that neither packet size nor arrival times are known for scheduling purposes. Consequently a range of estimators are used, the output from which is fed into a decision making process. The estimators used approximate traffic demand and data availability. The traffic demand estimator calculates a moving average of inter-arrival times of packets. The data availability predictor calculates the probability P i of each slave i having a baseband packet waiting for transmission to the master. This leads to a fair share measure fs i for each slave i, defined as</p><formula xml:id="formula_3">fs i Â¼ P i P n kÂ¼1 P k ;</formula><p>where n is the number of slaves. The fair share measure is compared with the number of polls since the last poll to slave i (denoted s i ). For each slave i, this is called the fraction of fair share denoted Ffs i . If s i P fs i , this is defined as 1. Otherwise</p><formula xml:id="formula_4">Ffs i Â¼ s i fs i :</formula><p>The decision on whom to poll next is determined using fraction of fair share and P i . Clearly, the polling of a slave i with P i = 1 and Ffs i = 0 is urgent, while polling a slave with P i = 0 and Ffs i = 1 isnÃ•t urgent. In between these extremes, the polling decision is made using a measure of urgency, denoted U i , for each slave i. This is defined as</p><formula xml:id="formula_5">U i Â¼ aP i Ã¾ Ã°1 Ã€ aÃžÃ°1 Ã€ Ffs i Ãž; 0 6 a 6 1:</formula><p>Tuning the setting of parameter a affects the relative impact of the fraction of share compared to P i , in the measure of urgency. The decision on whom to poll next is determined by the slave with the highest U i value. The authors find that tuning the value of a to 0.1 leads to the low response times (sum of waiting times and service times of packets) when such packets are generated under Poisson processes. The authors also propose extensions to deal with quality of service traffic handling and duplex traffic handling.</p><p>8.1.6. Prioritising links where master and slave have data to transmit In <ref type="bibr" target="#b39">[42]</ref>, the proposed approach to polling is motivated by three issues: (1) state of the queues at the master and slaves; (2) the traffic arrival process at these queues; and (3) the packet length distribution at the master and slave. Two scheduling policies are introduced, Priority and K Fairness, which are master-slave queue state dependent. In these approaches, master-slave pairs are distinguished based on the state of the queues at the master and slaves, the master having a separate queue for each slave. If a node (master or slave) has data to send, the node is in mode 1, otherwise mode is 0. This leads to four distinct states for a master-slave pair. It is assumed that binary infor-mation regarding the status of the queue at a slave is known at the master, with transfer using free bits in the payload packet header.</p><p>In the Priority Policy (PP), higher priority is given to master-slave connections in the 1-1 state over master-slave pairs in the 0-1 or 0-1 states (which have equal priority), with exclusion of the 0-0 state. The PP policy achieves higher throughput than a pure round robin policy since connections in the 1-1 state are given a proportionally higher number of time slots.</p><p>The K Fairness policy imposes a fairness bound, where waiting is limited by the factor K slots. Round robin scheduling is performed among all master-slave connection pairs that are in 1-1, 0-1 or 1-0 states. When the scheduler is at a 0-1 or 1-0 pair, its service is sacrificed to a 1-1 connection provided that the difference between the service provided by any two back-logged connections does not exceed K slots. Counters are maintained to track the excess or deficit service received for the queue across each master-slave pair. The master-slave pair that has received the maximum excess service (service sacrificed to it) from other pairs is denoted q max and the masterslave pair that has sacrificed the maximum service to other master-slave pairs is denoted q min . Both q min and q max are defined with respect to each of the back-logged queue pairs (i.e., 1-0, 0-1, or 1-1). When scheduling a 0-1 or 1-0 type connection, if the difference received by q max and q min exceeds K, no further service is sacrificed by the pair being scheduled. This ensures that the max-min fairness bound <ref type="bibr" target="#b43">[46]</ref> is maintained. This policy achieves higher throughput than RR and also maintains fairness. KFP gives better throughput than PP with more fairness. In PP the unfairness rises quadratically with an increase in p. In KFP, the unfairness is bounded and increases linearly. The fairness bound is potentially useful in defining a QoS guarantee for KFP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.7.">Queue management based on capacity and multi-slot framing</head><p>The performance of a scheduling approach is reflected in the profile of queues, since this is indicative of speed and flow. It is essential to control the length of the queue and also the amount of time any packet remains delayed in the queue. Ideally the scheduler should smooth traffic fluctuation and avoid long delays. The use of multi-slot framing can be advantageous for a number of reasons. Firstly, multi-slot framing benefits effective payload transmission as a 1-slot frame has associated overheads besides the payload. The subsequent slots in a multi-slot frame can avoid overheads such as the frame header. Secondly, different speeds can be used for different link directions.</p><p>Luo et al. <ref type="bibr" target="#b56">[59]</ref> present a scheduling algorithm which seeks to address these issues. They show that in a scenario with exact knowledge of queue status for each slave at the master, high performance can be achieved. However, this is not practical in an applied scenario, due to the overheads required to obtain this information at the master. Consequently, the authors introduce the notion of predictive capacity assignment as a replacement to the real time queue analysis. The result is Adaptive Capacity Ratio with Intelligent Frame Scheduling (ACRIFS). In ACRIFS, the master is assumed to have a queue for each slave. The capacity threshold of these queues is calculated periodically based on equations that consider the traffic and the propagation delay of the link. The scheduler uses the maximum queue length at the master to select the queue for transmission, and in addition, sees if the transmitted slot is within the capacity threshold. A predictive capacity ratio is used to encourage the master to determine multi-slot framing without requiring knowledge about queue status from the slaves, making ACRIFS a practical solution. Simulation and analysis of this approach shows that it significantly outperforms the benchmark RR approach, when considering packet delay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.8.">Packet-type priority approach</head><p>The scheduling approach in <ref type="bibr" target="#b79">[82]</ref> is unique in considering a mix of voice and data packet types, each of which may have different levels of priority. A mixed data and voice traffic profile is simulated, modelled by an interrupted Bernoulli process. Performance is considered based on mean packet delay and probability of packet loss for data traffic. A Bluetooth frame is used in which eight SCO slots are reserved for voice traffic and 16 ACL slots are reserved for data traffic. For the ACL slots, scheduling of packets of two possible different data types is considered (denoted D1 and D2).</p><p>Three schemes are considered. New schemes called priority (PR), alternating priority (AP) are compared against a round robin scheme. In the PR scheme, voice has the highest priority, D1 has the second priority and D2 has the lowest priority. In the AP scheme, slots are reserved for both data traffic components in a round robin manner, but the unused slots can be used by other data traffic. The round robin approach uses 3-slot cycles.</p><p>The effectiveness of these scheduling methods are studied by varying the traffic load and burstiness of the data streams and varying queue capacity. The results show, that with an infinite queue, the length of the queue grows dramatically when offered load and burstiness are high. In all three scheduling schemes, queue capacity has an essential impact on loss and mean delay for all studied traffic cases. Empirical results show that PR and AP have approximately equal probability of packet loss, significantly lower than that of the RR approach. The AP scheme also has the advantage of fairness and efficiency in comparison to the other schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.9.">Bin packing</head><p>Yang et al. <ref type="bibr" target="#b97">[101]</ref> apply the concept of bin packing to the scheduling problem. The aim of the general bin packing problem is to pack items of various sizes into a set of bins of fixed capacity such that the number of bins required is minimised. In off-line bin packing, the size of all items is known and (near) optimum solutions can be found through the use of exhaustive or meta heuristic approaches. In online bin packing, the size of items is not known and they must be packed as they arrive (items already packed cannot be removed or rearranged). Scheduling in Bluetooth can be viewed as an online bin packing problem with a limited amount of look ahead, since the scheduler can potentially determine the size of queued packets at the head of the line (HOL) for each slave, and decide which to pack (i.e., include in the current frame).</p><p>Two scheduling strategies are considered--Look Ahead (LA) and Look Ahead Limited Round Robin (LARR). In LA, a Next Fit (NF) approach is used in which bins are filled in sequence (analogous to filling frames in sequence). The NFD extension to NF involves arranging HOL packets in non-increasing order of size before they are packed in frames. Problems with this approach are two-fold. Firstly, every time a packet is scheduled, the new largest HOL packet must be determined. Secondly, since the algorithm always attempts to schedule the largest packet, it may be some time before packets from some slaves are scheduled (starvation).</p><p>Look Ahead Round Robin attempts to overcome these problems. It combines the simplicity of RR with the LA approach to avoid starvation and reduce the computational complexity by no longer attempting to find the largest HOL packet. Instead, slaves are serviced in a RR fashion, and if the packet fits the frame, it is scheduled. This approach differs from round robin because when the packet does not fit, instead of waiting for the next frame, the algorithm looks ahead and attempts to schedule a packet from the next slave in the RR sequence. Analysis and simulation show that LA and LARR perform significantly better than RR. Since LARR is less complex and avoids starvation whilst maintaining a similar level of performance, the authors advocate this scheduling approach for Bluetooth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.10.">Interference aware scheduling</head><p>The only approach to scheduling which tries to minimise the effects of interference is that in <ref type="bibr" target="#b27">[28]</ref>. In this paper, an IEEE 802.11 system operating in direct spread spectrum mode is considered as the source of interference, though the approach may be adapted to any source of interference. The approach exploits the fact that devices in the same piconet will not be subject to the same level of interference on all channels. The approach distributes channels to devices to maximise throughput whilst maintaining fairness of access. The algorithm, called Bluetooth Interference Aware Scheduling (BIAS), has three components, namely, a channel estimation procedure, a procedure that weights devices based on channel access priority, and a credit function that controls fair access to bandwidth.</p><p>The channel estimation procedure is used to detect the presence of interference in the frequency band. Each slave maintains a table that indicates if a frequency is used or clear, depending on whether the bit error rate exceeds a threshold. Since the master controls all transmissions, the slaves send their frequency usage table to the master which can then make use of this data in the channel estimation phase to optimise the frequency allocation on each time slot, to avoid packet transmission on a channel with high interference. A credit system is used to control the bandwidth allocated to each device, in order to ensure that no device gets more than its fair share of the available bandwidth. Priority is given to devices with few good channels over those with higher channel availability. Simulation results show that BIAS can reduce the probability of packet loss where interference exists, but with a slight increase in the mean access delay for the worst-case scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">Inter-piconet scheduling</head><p>Inter-piconet scheduling is required to co-ordinate the activities of bridge devices which reside in multiple piconets. Such bridge devices must switch between piconets to enable inter-piconet communication. The switching process induces an overhead due to guard time: each switch may cost up to two slots, which are not available for communication. This occurs as a consequence of the clock, the speed of which may differ slightly between masters. Bluetooth permits a clock drift of 20 parts per million against the ideal timing during activity. In low power modes this is extended to 250 parts per million.</p><p>Within a piconet, the master always expects a slave to be available. This means that conflicts can arise, in which a master polls a bridge when the bridge is engaged in another piconet, causing slot wastage. Therefore the scheduling algorithm must ensure that slaves are available to a master when it wishes to communicate with them. A simple solution to this problem uses slot reservation, in which specific slots used in the piconet are reserved for particular master-slave pairs. Two masters sharing a common slave cannot reserve the same slot to poll the same bridge. These slots are called rendezvous points. As with intra-piconet scheduling, inter-piconet scheduling must be responsive to the network capacity considerations. In particular, it is essential that bridge device are able to focus capacity on the piconet with the greatest load at any moment in time.</p><p>All approaches to inter-piconet scheduling are required to tackle common issues. The rendezvous points must be determined, and the rendezvous window must be controlled. Also, this needs to be integrated with intra-piconet scheduling, the dynamic nature of traffic, quality of service requirements, and interference considerations (if applied). There are many different ways of approaching these issues, from the creation of deterministic processes based on simple heuristics, to controlled, randomised processes.</p><p>The Bluetooth sniff state is commonly employed to determine rendezvous points. This is a power saving mode that allows the slave device to reduce the duty cycle. Instead of listening to the master in every downlink slot, the sniff mode allows a slave to listen to a master in a reduced number of time slots. Thus the sniff mode relieves a slave from its full duty cycle, permitting the bridge to switch between piconets. Additionally, hold mode approaches have been proposed, along with a call for a new Bluetooth mode called jump. We begin by looking at approaches which are non-load adaptive. Then we consider how these have been extended to adaptive scheduling which supports QoS based approaches. Finally we conclude with an overview of an interference aware approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.1.">Non-load-adaptive scheduling</head><p>Johansson et al. <ref type="bibr" target="#b36">[39]</ref> propose a periodic rendezvous approach, called the Maximum Distance Rendezvous Point (MDRP) algorithm. The basis of the MDRP algorithm is that redenzvous points (RPs) are as far away from each other as possible. The MDRP algorithm uses a periodic super frame, that is common to all nodes in the scatternet, and denotes the time period between two RPs for any master-bridge pair. For a pair of masters connected via a bridge, the distance between the RPs indicates the amount of time the bridge spends in each piconet, referred to as the rendezvous window.</p><p>The MDRP algorithm attempts to distribute the time spent in each piconet by a bridge equally, by maximising the distance between each RP of a bridge. A master node assigns RPs to bridges as follows. Suppose the bridge belongs to i other piconets, and has RPs r 1 , r 2 , . . . , r i with these piconets. The master node has j other bridges to which it has assigned RPs r i+1 , r i+2 , . . . , r i+j . These RPs define slot numbers in the super-frame and are in every super frame period. Based on the list of i + j RPs already defined, new RPs are defined at the middle slot in the largest interval between successive existing RPs. This is a simple mechanism for allocation of time between piconets. However, the authors point out that such simplicity and robustness comes at a price, since the algorithm is not load adaptive to temporary changes in network traffic: simply the RV allocation is dependent on the number of piconets a bridge is associated with. Other authors have tried to define adaptive methods capable of changing with the dynamic nature of the traffic. We consider these in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.2.">Adaptive scheduling using a RV max-min optimisation approach</head><p>In <ref type="bibr" target="#b42">[45]</ref>, Kazantzidis et al. seek to extend the rendezvous point approach introduced in <ref type="bibr" target="#b36">[39]</ref> by not only selecting non-conflicting rendezvous points, but seeking optimal choices of RV point. This is addressed in the context of mobility, where new piconets join existing piconets, at which point RV point selection needs to be considered. The aim is to select RV points so that the minimum forwarding throughput between piconets is close to optimal. The underlying rationale is to avoid establishing RV points that take away forwarding throughput from other piconet pairs. In this way, bottleneck links are avoided and overall forwarding throughput across the scatternet is maintained.</p><p>Note that the establishment of a new RV point for a visiting piconet not only affects the throughput between the home-visiting piconet pair, but it also affects the throughput of all connections of the visiting piconet. The proposed approach involves optimising forward throughput equations at bridge devices. This has a potentially expensive overhead, involving the optimisation of local forwarding throughput equations. However the overall aim in this instance is determination of high quality solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.3.">Adapting to wasted polls and traffic load</head><p>Zhang et al. <ref type="bibr" target="#b99">[103]</ref> propose a Flexible Scatternetwide Scheduling (FSS) scheme that can adapt scheduling based on wasted polls and traffic load. The scheme is based on a switch table concept, which is formed when the scatternet is created. This table directs bridge devices to switch between the multiple piconets to which it belongs. Conflicts are avoided by the master polling slaves only at slots when the bridge device is synchronised with the master.</p><p>The switch table is maintained and updated, to adjust for load and improve system performance. When the scatternet is initiated, a switch table is generated for each bridge, where master nodes are considered in round robin order and a switch occurs every frame. The FSS scheme acts upon the scheme using two algorithms: a flexible (intra-piconet) scheduling algorithm and a switch table modification algorithm.</p><p>In the scheduling algorithm, the master polls the slaves in a weighted round robin manner. Initially, the weight of each slave is computed based on the estimated traffic load in each master-slave link. This means that in a cycle, only a subset of its slaves may be polled. In order to decide the frequency of polling of slaves for a master, each slave has a polling weight tuple (P,R), where P indicates that the slave should be polled every P cycles, and R represents the maximum frequency that a slave can be polled in a cycle. A master can dynamically change the polling weights based on estimation of traffic load, based on previously wasted polls. If a poll is wasted (both slots allocated for polling are not used), the offending slave has P increased (up to a certain threshold), otherwise P is decreased until it reaches 1. For slaves where P = 1, if a poll is wasted, R is decreased (until it reaches 1) and P is increased. If a poll is not wasted, R is increased until it reaches an upper bound.</p><p>While the scheduling algorithm is able to flexibly schedule slots used to poll slaves and bridge nodes, it cannot change the quantity or positions of slots that a bridge node can use. To address this problem, the switch table modification algorithm permits a bridge device to dynamically update its switch table, based on the traffic load. This allows a device to change its switching pattern between piconets. The switch table update can be initiated by the master or slave. For the slave, the bridge monitors the outgoing queue length and incoming queue length for each of its master-slave links. The master with the longer queue length should get more time slots compared to a master with a relatively low queue length. Based on this idea, the master with the larger queue length borrows slots from the master with the relatively low queue length. The authors define detailed data structures and processes by which the borrowing process is implemented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.4.">Adaptive scheduling using a credit scheme and adaptive presence point density</head><p>Baatz et al. <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref> present an adaptive scheduling which approach utilises the concept presence points. These are defined points where communication between a master and slave may commence. Presence points are used as an alternative to defining local schedules, and enable each device to quickly determine whether its peer is in the same piconet. If so, communication may begin between the devices, otherwise another presence point may be tried, without loosing a significant amount of bandwidth. Additionally, the length of a particular communication period is not pre-determined, but depends on current link utilisation and the amount of data ready to exchange. As the communication schedule is determined online rather than a priori, simple calculations are required to determine how long to stay in specific piconets. Additionally, presence points must be relatively dense so that there are still some available, even in the presence of interference.</p><p>The authors integrate presence points with slots used by the sniff mode of operation. Sniff slots are regarded as possible presence points at which peers may start communicating. In order to decide when to abort an ongoing sniff event in order to use an upcoming sniff slot, a priority scheme is introduced, where each device associates a particular priority for each of its links. These priorities are device centric, and different devices may give different priorities to the same link. A link has higher priority relative to another link if it has previously been untreated unfairly, relative to other links supported by the device. This is quantified by tracking the number of slots used by each device.</p><p>A potential problem that the authors address with this approach is the frequent switching, and therefore bandwidth wastage, that it might induce. Consequently in <ref type="bibr" target="#b3">[4]</ref>, the density of sniff slots is reduced exponentially over time, by deliberate skipping of presence points. This scheme is called the Adaptive Presence Point Density (APPD) scheme, where each device manages an internal parameter, which determines the time between use of sniff slots. Each device may increase this parameter if, for example, sniff slots are not taken or no data transmission occurs. 8.2.5. Inter-and intra-piconet scheduling using pseudo-random sequences of RV points Racz et al. <ref type="bibr" target="#b72">[75]</ref> propose a lightweight approach to scheduling known as the Pseudo-Random Coordinated Scatternet Scheduling (PCSS) algorithm. The approach involves bridge devices assigning meeting points with their peers such that the sequence of meeting points follows a pseudo-random sequence which is different for each pair of devices. Consequently uniqueness of the pseudorandom sequence guarantees that meeting points with different peers of the same node will collide only occasionally. The key advantage is that this removes the need for explicit information exchange between peer devices, which significantly reduces complexity.</p><p>The algorithm uses checkpoints, equivalent to RV points. Checkpoints are assigned for a pair of devices, based on the Bluetooth clock of the master and the MAC address of the slave. This scheme guarantees that the checkpoint sequence generated by the master and the slave is the same (without need for communicating the sequence), while also ensuring the sequences belonging to different node pairs will be different. The probability of a collision, where a device can attend only one of the checkpoints, is dependent on the frequency of checkpoints. This is chosen dependent on the free capacities of the node or on the amount of data to transmit. Dynamic adjustment is permitted, with an increase or decrease the intensity of checkpoints depending on the amount of user data to be transmitted and on the capacity of the device. In <ref type="bibr" target="#b72">[75]</ref>, PCSS was verified in having higher throughput than the equivalent approach without the protection using pseudo-random sequencing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.6.">Dynamically scheduled meetings</head><p>The advantage of PCSS as proposed in <ref type="bibr" target="#b72">[75]</ref> is that it achieves scheduling with little overhead. However, because it is based on a randomised scheme, as the density of nodes grows, scheduling conflicts will arise where one node is actively waiting for another node that is busy communication with some other node. Tan et al. <ref type="bibr" target="#b89">[93]</ref> present a Locally Coordinated Scheduling (LCS) approach that is able to co-ordinate nodes in a manner that eliminates all scheduling conflicts, but with associated additional overhead.</p><p>The LCS approach is designed to dynamically adjust the schedule based on workload conditions. It is based on the concept of scheduled meetings, at which devices meet to exchange data. At the end of each meeting, the nodes negotiate the start time and minimum duration of the next meeting. At each occurrence, a parent device sends a list of possible future meeting start and finish times to a child device, and the child device replies with desired start and finished times of one future meeting, which fall within one of the meeting periods suggested by the parent.</p><p>The role of LCS is to monitor traffic characteristics associated with each link and arrive at an efficient scatternet-wide schedule based on them. Computation of start time is based on whether the data rate is increasing, decreasing or stable. This enables LCS to respond to varying traffic conditions quickly, without wasting resources. The duration of the next meeting is based on queue size, and the past history of transmissions, in order to set a duration that is just large enough to exchange all back-logged data. Similarly, the meeting recess interval is adjusted according to the data rate and the nature of traffic flows.</p><p>LCS is comprehensive in the sense that it utilises a range of further techniques to achieve efficient scheduling. For example, meetings with similar characteristics are grouped to reduce bandwidth wastage and end-to-end latency. Additionally, meetings at various parts of the scatternet are scheduled in a hierarchical fashion to exploit the use of parallel communications, to improve throughput. LCS also tries to tolerate disruption in connectivity, by providing a fall back communication mechanism where nodes are not able to communicate during agreed meeting periods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.7.">QoS</head><p>Son et al. <ref type="bibr" target="#b83">[86,</ref><ref type="bibr" target="#b84">87]</ref> develop two inter-piconet scheduling approaches, based on satisfying measures for quality of service (QoS). In <ref type="bibr" target="#b83">[86]</ref>, the aim of inter-piconet scheduling is to provide just enough capacity for quality of service, via the bridge devices time sharing activities. Quality of service in this context is defined generally, and could be included as measurements on buffer size, packet delays, and numbers of packets queueing at devices in the network. Such traffic information is periodically sent via the link manager to masters which take part in inter-piconet communication. The offered traffic is estimated and predicted from a record of the collected information. This is compared with the allocated capacity, and the interpiconet scheduler decides whether the QoS can be satisfied. If not, the QoS is changed accordingly. This process is performed at regular intervals. The QoS calculation is quite complex and consequently look-up tables are proposed for real time application.</p><p>In the second approach <ref type="bibr" target="#b84">[87]</ref>, resource allocation for inter-piconet scheduling is formulated as a convex optimisation problem, with multiple objectives that characterise the maximisation of total network flows and the minimisation of the total cost of flows. A distributed iterative capacity allocation scheme is proposed to perform the optimisation. This seeks to divide network capacity to links in such a way that maximises the network flows and satisfies the QoS requirements (such as time delays, queueing sizes, etc.) as formulated in the governing convex optimisation equations. Once allocation of capacity has occurred at a device, allocations of link capacities are iterated along each link for routes across the network. Capacity to support the longest route paths is allocated as a priority. The authors indicate that there are some open issues that need to be addressed, such as the amount of messaging required by this approach, and issues that arise due to mobility of nodes in scatternets.</p><p>8.2.8. Load adaptive and hold mode inter-piconet scheduling for small scatternets Har-Shai et al. <ref type="bibr" target="#b31">[33]</ref> restrict their focus to small scatternets using a load adaptive algorithm (LAA). Under LAA, the algorithm determines the duration of the bridge activity in the different piconets such that the delay incurred by packets requiring inter-piconet connection is reduced. The algorithm adapts based on a range of factors related to the network performance, including device activity and queue size. Progression above defined thresholds for any of the factors prompts a switch between piconets (it is assumed that only a pair of piconets are operating). The hold mode utilized is at the bridge to enable one Bluetooth device to leave a piconet. The main difference between commonly used sniff and hold modes is that the duration of the hold period must be set every time the slave is placed into hold mode, whereas the parameters of sniff mode are set once and can be used repeatedly. Consequently the parameter setting for the hold mode determines the performance of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.9.">A new Bluetooth mode--jump mode</head><p>Jonasson et al. <ref type="bibr" target="#b33">[36]</ref> propose an additional Bluetooth mode called jump. This mode includes a set of communication rules that enable efficient scatternet operation by offering flexibility for a device to adapt its activity in different piconets, under different traffic conditions. The jump mode operates in a distributed manner, allowing each device to jump in and out of the jump mode link. By default, a jumping node is absent from a link. When a jumping node wants to be present in a link, it has to signal its presence to the peer node of the link.</p><p>The basic premise is that each jumping node divides its time into time windows of pseudorandom length, denoted rendezvous (RV) windows, spending one or more RV windows in a piconet before jumping to another piconet, and signals its decision to all concerned nodes. When a jumping node is present on a jump mode link during an RV window, capacity is distributed by the intrapiconet scheduling mechanism. A jumping master polls its slaves as usual, and jumping slaves that have signalled their presence are incorporated into the masters polling scheme.</p><p>The essence of this scheme is that a jumping node uses the same sequence of RV windows in all of its piconets. Employing such sequences of RV windows in conjunction with the simple signalling protocol makes it possible for all the jumping nodes peers to know whether it will be present on their link during each RV window. One advantage is that under this approach, the dependencies between the inter-and intra-piconet schedulers are be kept to a minimum, enabling more or less independent evolution in both fields. The paper describes only the mechanisms of the jump mode, and consequently algorithms can be further developed to implement the mode in scheduling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.10.">Interference aware scheduling</head><p>Sun et al. <ref type="bibr" target="#b87">[91]</ref> point out that the in situations where inter-piconet scheduling is required, piconets are within range of each other, and therefore interference considerations are important. Although the effects of interference are minimised by fast frequency hopping, it cannot be completely avoided. The simulation reported by Sun et al. <ref type="bibr" target="#b87">[91]</ref> shows that interference can degrade system performance by 30%.</p><p>However, if the master of a piconet knows the hopping sequence of an adjacent piconet, it can avoid interference by not sending packets when both piconets hop to the same frequency. Any bridge has the information on the hopping sequence of each master, and can distribute this between adjacent piconets. Interference can then be avoided by careful scheduling as described in <ref type="bibr" target="#b87">[91]</ref>. Assuming that a slaves reply is a single slot, when a master intends to send an n-slot packet, it can first check if any of the adjacent piconets will use the frequency in the next n + 1 slots. If some adjacent piconets will use the frequency, the master checks to see if its device address is greater than those of masters in the other adjoining piconets. If it is (or no other adjacent piconets hop to the frequency) then the master can safely transmit. Otherwise, the master suppresses transmission, waits for the next time slot and starts the whole process again.</p><p>This scheme avoids interference between adjacent piconets, and can potentially be implemented with a range of scheduling approaches. A small communication overhead is required when the gateway node sends the masters information to the adjacent piconets masters. Additionally, some computational overhead is required where the master pre-calculates the hopping sequence of the adjacent piconets along with its own. Also, when traffic load is not heavy, this scheme may reduce bandwidth utilisation since the master may suppress its transmission, although other piconets on the same frequency, do not transmit. However, when traffic load is medium to high, this scheme should help alleviate the interference, thus increasing bandwidth utilisation. This scheme does not consider interference from piconets that are physically close, but topologically far away (i.e., those that are physically close but do not share a bridge with the piconet).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.11.">Queue theoretic analysis</head><p>The performance of a range of bridging strategies have been assessed analytically in <ref type="bibr" target="#b60">[63]</ref><ref type="bibr" target="#b61">[64]</ref><ref type="bibr" target="#b62">[65]</ref><ref type="bibr" target="#b63">[66]</ref><ref type="bibr" target="#b64">[67]</ref>. Queueing theory has been applied to a range of difference scenarios, each scenario focusing on a different topology configuration at the point of bridging. In <ref type="bibr" target="#b60">[63,</ref><ref type="bibr" target="#b64">67]</ref>, the scenario where bridges have a master and slave role has been considered. In <ref type="bibr" target="#b62">[65,</ref><ref type="bibr" target="#b64">67]</ref>, the scenario where bridges have only roles as a slave are considered. These contributions focus on modelling access delay, and consider the associated probability distribution of end-to-end delay times for both local (intra-piconet) and non-local traffic. Sensitivity of various parameters, on piconet performance, is also considered. Analysis suggests that the main criteria in minimising end-to-end packet delay should be in minimising the end-to-end delay for inter-piconet rather than intra-piconet traffic. This is suggested as a practical alternative to minimising a weighted average of local and non-local delays. Analysis also indicates that the optimum value for the time interval between bridge exchanges is dependent on current values of traffic parameters, such as burst arrival rate and mean burst size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Conclusions</head><p>Bluetooth is an interesting development in pervasive and ubiquitous communication because it represents the first mass market, low cost technology, with opportunities for high levels of penetration. Developing protocols for scatternet formation and maintenance is important, as this opens up increased possibilities for flexible networking and new applications. The state-ofthe-art in this area has developed rapidly, and a number of significant contributions have already been made. However, a number of challenging key issues remain, and the following observations can be made.</p><p>Firstly, simplifying assumptions, particularly in scatternet formation (e.g., en-masse device startup) limit the applicability of numerous proposed protocols. Further development is this area would be beneficial. Secondly, it is largely the case that issues of network formation, scheduling and routing have been studied in isolation. Given the dependencies between these issues, further integration of the issues may lead to higher performance solutions. Thirdly, there has been limited systematic benchmarking applied to the proposed techniques. This makes it difficult to draw conclusions on the relative effectiveness of alternative approaches. Finally, the operation of the technology under mobility has received little attention. The extent to which the operation of interconnected piconets can be sustained under mobility, is important given that potential applications may occur for geographically dynamic devices. Consideration of limits of device mobility on network operation, including the limits of mobility speed that could be sustained from the networking (not just transmission) point of view, is an interesting open question. The ongoing development of methodologies for scatternet formation is being documented at www.scatternet.org.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Organisation of the BT stack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 A</head><label>1</label><figDesc>summary of topological features imposed in scatternet formation</figDesc><table><row><cell>Paper</cell><cell>Bridge devices</cell><cell>Number of</cell><cell>Number of</cell><cell>Piconets must</cell><cell>A device must</cell></row><row><cell></cell><cell>must never be</cell><cell>bridges per</cell><cell>piconets must</cell><cell>not be linked</cell><cell>participate in a</cell></row><row><cell></cell><cell>masters</cell><cell>piconet</cell><cell>be kept as small</cell><cell>by more than</cell><cell>limited number</cell></row><row><cell></cell><cell></cell><cell>restricted</cell><cell>as possible</cell><cell>one bridge</cell><cell>of piconets</cell></row><row><cell>Barriere et al. [5]</cell><cell>â€¢</cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell></row><row><cell>Law et al. [51]</cell><cell></cell><cell></cell><cell>â€¢</cell><cell></cell><cell>â€¢</cell></row><row><cell>Lin et al. [56]</cell><cell></cell><cell>â€¢</cell><cell>â€¢</cell><cell>â€¢</cell><cell>â€¢</cell></row><row><cell>Petrioli et al. [71]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell></row><row><cell>Ramachandran et al. [76]</cell><cell>â€¢</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Sato et al. [83]</cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell><cell>â€¢</cell></row><row><cell>Salonidis [80]</cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell><cell>â€¢</cell></row><row><cell>Stojmenovic et al. [89]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell></row><row><cell>Wange et al. [98]</cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell><cell></cell></row><row><cell>Zaruba et al. [102]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell></row><row><cell>Zhang et al. [103]</cell><cell>â€¢</cell><cell>â€¢</cell><cell></cell><cell></cell><cell>â€¢</cell></row><row><cell>Zhen et al. [104]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>â€¢</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>R.M. Whitaker et al. / Ad Hoc Networks 3 (2005) 403-450</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>R.M. Whitaker et al. / Ad Hoc Networks 3 (2005) 403-450</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"> <ref type="bibr" target="#b0">1</ref> <p>Supported by the EPSRC (GR/S23155/01).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sankarasubramaniam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cayirci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless sensor networks: a survey</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="393" to="422" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Building efficient bluetooth scatternet topologies from 1-factors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Baatz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bieschke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Martini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Scholz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Khul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IASTED International Conference on Wireless and Optical Communications</title>
		<meeting>the IASTED International Conference on Wireless and Optical Communications<address><addrLine>Banff, Alberta, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Adaptive scatternet support for bluetooth using sniff mode</title>
		<author>
			<persName><forename type="first">S</forename><surname>Baatz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kuhl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Martini</surname></persName>
		</author>
		<author>
			<persName><surname>Scholz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Annual IEEE Conference on Local Computer Networks, LCN</title>
		<meeting>the 26th Annual IEEE Conference on Local Computer Networks, LCN</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="112" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Bluetooth scatternets: An enhanced adaptive scheduling scheme</title>
		<author>
			<persName><forename type="first">S</forename><surname>Baatz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kuhl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Martini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Scholz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st Annual Joint Conference of the IEEE Computer and Communications Societies, INFOCOM</title>
		<meeting>the 21st Annual Joint Conference of the IEEE Computer and Communications Societies, INFOCOM</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="782" to="790" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Dynamic construction of blue-tooth scatternets of foxed degree and low diameter</title>
		<author>
			<persName><forename type="first">L</forename><surname>Barriere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Fraigniaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Opatrny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms</title>
		<meeting>the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Device discovery in bluethooth networks: a scatternet perspective</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bruno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">2345</biblScope>
			<biblScope unit="page" from="1087" to="1092" />
			<date type="published" when="2002">2002</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Performance evaluation of a new scatternet formation protocol for multi-hop bluetooth networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bruno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 5th International Symposium Wireless Personal Multimedia Communications</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="208" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A performance comparison of scatternet formation protocols for networks of bluetooth devices</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bruno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First IEEE International Conference on Pervasive Computing and Communications</title>
		<meeting>the First IEEE International Conference on Pervasive Computing and Communications</meeting>
		<imprint>
			<date type="published" when="2003">2003. 2003</date>
			<biblScope unit="page" from="341" to="350" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multihop scatternet formation for bluetooth networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 55th IEEE Vehicular Technology Conference, VTC Spring</title>
		<meeting>the 55th IEEE Vehicular Technology Conference, VTC Spring</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="424" to="428" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A scatternet formation protocol for ad hoc networks of bluetooth devices</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 55th IEEE Vehicular Technology Conference</title>
		<meeting>the 55th IEEE Vehicular Technology Conference</meeting>
		<imprint>
			<publisher>VTC Spring</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Bluetooth: technology for short-range wireless apps</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="96" to="103" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">On the characterization of bluetooth scatternet topologies</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Rao</surname></persName>
		</author>
		<ptr target="&lt;http://www.winlab.rutgers.edu/~pravin/publications/publist.htm&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Segall</surname></persName>
		</author>
		<title level="m">Proceedings of the 1999 IEEE International Workshop on Mobile Multimedia Communications (MoMuC Ã•99)</title>
		<meeting>the 1999 IEEE International Workshop on Mobile Multimedia Communications (MoMuC Ã•99)</meeting>
		<imprint>
			<biblScope unit="page" from="375" to="379" />
		</imprint>
	</monogr>
	<note>A routing vector method (RVM) for routing in bluetooth scatternets</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Bluetooth scatternet formation using proximity information of an election protocol</title>
		<author>
			<persName><forename type="first">V</forename><surname>Bhatnagar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kesidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint 2nd IEEE International Conference on Net Working and IEEE International Conference on Wireless LANs and Home Networks (ICNÃ•02 and ICWLHNÃ•02)</title>
		<meeting>the Joint 2nd IEEE International Conference on Net Working and IEEE International Conference on Wireless LANs and Home Networks (ICNÃ•02 and ICWLHNÃ•02)<address><addrLine>Atlanta</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">August 26-29, 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><surname>Bluehoc</surname></persName>
		</author>
		<ptr target="&lt;http://www.oss.software.ibm.com/developerworks/opensource/bluehoc/&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Wireless personal area networks: an overview of the ieee p802</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Braley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">C</forename><surname>Gifford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Heile</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mobile Computing and Communications Review</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="26" to="33" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Bray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Sturman</surname></persName>
		</author>
		<title level="m">Bluetooth: Connect Without Cables</title>
		<meeting><address><addrLine>Englewood Cliffs, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Wireless access to Internet via bluetooth: performance evaluation of the edc scheduling algorithm</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bruno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gregori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st Workshop on Wireless Mobile Internet</title>
		<meeting>the 1st Workshop on Wireless Mobile Internet</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="43" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Bluetooth: architecture, protocols and scheduling algorithms</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bruno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gregori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cluster Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="117" to="131" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Future applications of bluetooth</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buttery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sago</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BT Technology Journal</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="48" to="55" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Efficient polling schemes for bluetooth picocells</title>
		<author>
			<persName><forename type="first">A</forename><surname>Capone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kapoor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications</title>
		<meeting>the IEEE International Conference on Communications</meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="1990" to="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Chisasserini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Marsan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Baralis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Garza</surname></persName>
		</author>
		<title level="m">Proceedings of the 36th Annual Hawaii International Conference on Systems Sciences</title>
		<meeting>the 36th Annual Hawaii International Conference on Systems Sciences</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="313" to="322" />
		</imprint>
	</monogr>
	<note>Towards feasible topology formation algorithms for bluetooth-based wpans</note>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Dsr based bluetooth scatternet</title>
		<author>
			<persName><forename type="first">C.-S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-W</forename><surname>Choi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>ITC-CSCC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Bluerings--bluetooth scatternets with ring structures</title>
		<author>
			<persName><forename type="first">F</forename><surname>Chun-Choong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kee-Chaing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IASTED International Conference on Wireless and Optical Communication</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A general methodology and key metrics for scatternet formation in bluetooth, in: Proceedings of the IEEE Global Telecommunications Conference</title>
		<author>
			<persName><forename type="first">F</forename><surname>Cuomo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Melodia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GLOBECOM Ã•02</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="941" to="945" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Enhancing performance of asynchrounous data traffic over the bluetooth wireless ad hoc network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Razdan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sarab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Shorey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Energy efficient link layer for wireless microsensor networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chandrakasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Shih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Calboun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Computer Society Annual Workshop on VSLI (WVLSIÃ•OO)</title>
		<meeting>the IEEE Computer Society Annual Workshop on VSLI (WVLSIÃ•OO)<address><addrLine>Orlando, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="16" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Interference of bluetooth and IEEE 802.11: simulation modeling and performance evaluation</title>
		<author>
			<persName><forename type="first">N</forename><surname>Golmie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Van Dyck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Soltanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th ACM international workshop on modeling, analysis and simulation of wireless and mobile systems</title>
		<meeting>the 4th ACM international workshop on modeling, analysis and simulation of wireless and mobile systems</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Guerin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sakar</surname></persName>
		</author>
		<title level="m">Proceedings of the Conference on Network and Distributed Simulations</title>
		<meeting>the Conference on Network and Distributed Simulations</meeting>
		<imprint/>
	</monogr>
	<note>Bluetooth technology: key challenges and initial research</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The bluetooth radio system</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Haartsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="28" to="36" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Bluetooth--a new lowpower radio interference providing short-range connectivity</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Haartsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mattisson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1651" to="1661" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Inter-piconet scheduling in bluetooth scatternets</title>
		<author>
			<persName><forename type="first">L</forename><surname>Har-Shai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kofman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Segall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the OPNETWORK Conference</title>
		<meeting>the OPNETWORK Conference</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An ns-based bluetooth toplogy construction simulation environment</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Joung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th Annual Simulation Symposium</title>
		<meeting>the 36th Annual Simulation Symposium</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Jump mode--a dynamic window-based scheduling framework for bluetooth scatternets</title>
		<author>
			<persName><forename type="first">N</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Alriksson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Jonsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of MOBIHOC 2001</title>
		<meeting>MOBIHOC 2001</meeting>
		<imprint>
			<biblScope unit="page" from="204" to="211" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Evaluation of scheduling algorithm for bluetooth</title>
		<author>
			<persName><forename type="first">N</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Korner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Johansson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IFIP Broadband Communications</title>
		<meeting>IFIP Broadband Communications<address><addrLine>Hong Kong</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Bluetooth and enabler for personal area networking</title>
		<author>
			<persName><forename type="first">P</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kazantzidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kapoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="28" to="37" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Rendezvous sheduling in bluetooth scatternets</title>
		<author>
			<persName><forename type="first">R</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kapoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kazantzidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications (ICC 2002)</title>
		<meeting>the IEEE International Conference on Communications (ICC 2002)</meeting>
		<imprint>
			<biblScope unit="page" from="318" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Dynamic source routing in ad hoc networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<ptr target="&lt;http://www.ietf.org/inter-net-drafts/draft-ietf-manet-dsr-05.txt&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A survey of energy efficient network protocols for wireless networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Sivalingam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Networks</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="343" to="358" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Data scheduling and sar for bluetooth MAC</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kalia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Shorey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 51st IEEE Conference on Vehicular Technology</title>
		<meeting>the 51st IEEE Conference on Vehicular Technology</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="716" to="720" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Scatternet structure and inter-piconet communication in the bluetooth system</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kalia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Garg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Shorey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE National Conference on Communications</title>
		<meeting>IEEE National Conference on Communications</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">A zone routing protocol for bluetooth scatternets</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kapoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Wireless Communications and Networking Conference</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="1459" to="1464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">On the impact of inter-piconet scheduling in bluetooth scatternets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kazantzidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Internet Computing, IC 2002</title>
		<meeting>the International Conference on Internet Computing, IC 2002</meeting>
		<imprint>
			<biblScope unit="page" from="37" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<title level="m">An Engineering Approach to Computer Networking: ATM Networks, the Internet, and the Telephone Network</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">personal communication with ceo of lesswire</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kraemer</surname></persName>
		</author>
		<ptr target="&lt;http://www.lesswire.com&gt;" />
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Kumar</surname></persName>
		</author>
		<ptr target="&lt;http://oss.software.ibm.com/bluehoc/tutorial/docpage.html&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Performance of a new bluetooth scatternet formation protocol</title>
		<author>
			<persName><forename type="first">C</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Siu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Mobile Ad Hoc Networking and Computing</title>
		<meeting>the ACM Symposium on Mobile Ad Hoc Networking and Computing<address><addrLine>Long Beach, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">2001. October 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A new bluetooth scatternet formation protocol</title>
		<author>
			<persName><forename type="first">C</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Siu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of ACM Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="485" to="498" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A bluetooth scatternet formation algorithm</title>
		<author>
			<persName><forename type="first">C</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Siu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Global Telecommunications Conference, IEEE GLOBECOM Ã•01</title>
		<meeting>the Global Telecommunications Conference, IEEE GLOBECOM Ã•01</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="2864" to="2869" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">An efficient and fair polling scheme for bluetooth</title>
		<author>
			<persName><forename type="first">Y.-Z</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of MILCOM</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1062" to="1068" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Partial Delaunay triangulation and degree limited localized bluetooth multihop scatternet formation</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Draft</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Sparse power efficient topology for wireless networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Frieder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th Annual Hawaii International Conference on System Sciences (HICSS Ã•02)</title>
		<meeting>the 35th Annual Hawaii International Conference on System Sciences (HICSS Ã•02)</meeting>
		<imprint>
			<biblScope unit="page" from="3871" to="3880" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Wireless home networks based on a hierarchical bluetooth scattenet architecture</title>
		<author>
			<persName><forename type="first">W</forename><surname>Lilakiatsakun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Seneviratne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth IEEE International Conference on Networks</title>
		<meeting>the Ninth IEEE International Conference on Networks</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="481" to="485" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Formation, routing and maintenance protocols for the bluering scatternet of bluetooths</title>
		<author>
			<persName><forename type="first">T</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tseng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Hawaii International Conference on System Science (HICSS-36)</title>
		<meeting>the Hawaii International Conference on System Science (HICSS-36)<address><addrLine>Big Island, Hawaii</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-01-06">January 6, 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">On demand formation of bluetooth scatternet</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Saadawi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of MILCOM</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1069" to="1074" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A bluetooth scatternetroute structure for multihop ad hoc networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Saadawi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="229" to="239" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Enhancing bluetooth scheduler with predictive link capacity assignment plus multi-slot framing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Edwards</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Manson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th International Conference on Telecommunications (ICT 2003)</title>
		<meeting>the 10th International Conference on Telecommunications (ICT 2003)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="959" to="964" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Optimizing the topology of bluetooth personal area networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Marsan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Chiasserini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Carello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">De</forename><surname>Giovani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Infocom</title>
		<meeting>the IEEE Infocom</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Performance aspects of bluetooth scatternet formation</title>
		<author>
			<persName><forename type="first">G</forename><surname>Miklos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Racz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Turanyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Valko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Johansson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Annual Workshop on Mobile and Ad Hoc Net working and Computing</title>
		<meeting>the First Annual Workshop on Mobile and Ad Hoc Net working and Computing<address><addrLine>MobiHOC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="147" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Bluetooth Revealed: The InsiderÃ•s Guide to an Open Specification for Global Wireless Communications</title>
		<author>
			<persName><forename type="first">B</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bisdikian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Bluetooth scatternet with a master/ slave bridge: a queueing theoretic analysis</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Misic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Global Telecommunications Conference, GLO-BECOM Ã•02</title>
		<meeting>the IEEE Global Telecommunications Conference, GLO-BECOM Ã•02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="207" to="211" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Bridges of bluetooth county: topologies, scheduling and performance</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Misic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Global Telecommunications Conference, GLO-BECOM Ã•02</title>
		<meeting>the IEEE Global Telecommunications Conference, GLO-BECOM Ã•02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="207" to="211" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Minimzing end-to-end delays in bluetooth scatternet with a slave/slave bridge</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Misic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh International Conference on Computer Communications and Networks</title>
		<meeting>the Eleventh International Conference on Computer Communications and Networks</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="634" to="639" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Modelling bluetooth piconet performance</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Misic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Letters</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="18" to="20" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Performance of bluetooth bridges in scatternets with exhastive service scheduling</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">B</forename><surname>Misic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Misic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th Annual Hawaii International Conference on System Sciences</title>
		<meeting>the 36th Annual Hawaii International Conference on System Sciences</meeting>
		<imprint>
			<date type="published" when="2003-09">January 6-9, 2003</date>
			<biblScope unit="page" from="311" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">Service discovery in bluetooth scatternets</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">A</forename><surname>Nordbotten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Sekie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename><surname>Aavaag</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<monogr>
		<title/>
		<author>
			<persName><surname>Ns</surname></persName>
		</author>
		<ptr target="&lt;http://www.isi.edu/nsnam/ns/&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<title level="m">Ad Hoc Networking</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Degree-constrained multihop scatternet formation for bluetooth networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Globecom</title>
		<meeting>the IEEE Globecom<address><addrLine>Taipei, Taiwan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-11-17">2002. November 17-21, 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Bluemesh: Degreeconstrained multihop scatternet formation for bluetooth networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM/Kluwer/SPIE Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="47" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">A routing protocol and energy efficient techniques in bluetooth scatternets</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Prabhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chocklingham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications, ICC 2002</title>
		<meeting>the IEEE International Conference on Communications, ICC 2002</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="3336" to="3340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Picoradio: ad hoc wireless sensor networking of ubiquitous low-energy sensor/monitor nodes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Rabaey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ammer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Da Silva Jr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Patel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Computer Society Annual Workshop on VSLI (WVLSIÃ•00)</title>
		<meeting>the IEEE Computer Society Annual Workshop on VSLI (WVLSIÃ•00)<address><addrLine>Orlando, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="9" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">A pseudo random coordinated scheduling algorithm for bluetooth scatternets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Racz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Miklos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bubinszky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Valko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 ACM International Symposium on Mobile Ad Hoc Networking &amp; Computing</title>
		<meeting>the 2001 ACM International Symposium on Mobile Ad Hoc Networking &amp; Computing</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="193" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Clustering algorithms for ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ramachandran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kapoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the DIAL-M Workshop</title>
		<meeting>the DIAL-M Workshop</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="54" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">A review of current routing protocols for wireless networks</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="46" to="55" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Bluetooth in wireless communication</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">V S S S S</forename><surname>Sairam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Gunasekaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Redd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="90" to="96" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Proximity awareness and fast connection establishment in bluetooth</title>
		<author>
			<persName><forename type="first">T</forename><surname>Salonidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Annual Workshop on Mobile and Ad Hoc Networking and Computing</title>
		<meeting>the First Annual Workshop on Mobile and Ad Hoc Networking and Computing<address><addrLine>MobiHOC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="141" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Distributed topology construction of bluetooth personal area networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Salonidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lamaire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twentieth Annual Joint Conference of the IEEE Computer and Communications Societies, INFOCOM</title>
		<meeting>the Twentieth Annual Joint Conference of the IEEE Computer and Communications Societies, INFOCOM</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1577" to="1586" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
		<title level="m" type="main">Performance issues of bluetooth scatternets and other asynchronous tdma ad hoc networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Salonidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
		<idno>CSHCN TR 2002- 23</idno>
		<imprint>
			<date type="published" when="2002">2002</date>
			<pubPlace>USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Centre for Satellite and Hybrid Communication Networks, University of Maryland</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Research Report</note>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Traffic scheduling in bluetooth network</title>
		<author>
			<persName><forename type="first">V</forename><surname>Sangvornvetphan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Erke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth IEEE International Conference on Networks</title>
		<meeting>the Ninth IEEE International Conference on Networks</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="355" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">A scatternet operation protocol for bluetooth ad hoc networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mase</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Symposium on Wireless Personal Multimedia Communications</title>
		<meeting>the 5th International Symposium on Wireless Personal Multimedia Communications</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="223" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<title level="m" type="main">Capacity of bluetooth scatternets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Seth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kashyap</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<monogr>
		<title/>
		<author>
			<persName><surname>Simjava</surname></persName>
		</author>
		<ptr target="&lt;http://www.dcs.ed.ac.uk/home/hase/simjava&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Predictive scheduling approach in inter-piconet communications</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">T</forename><surname>Son</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schioler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">B</forename><surname>Madsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Symposium on Wireless Personal Multimedia Communications</title>
		<meeting>the 4th International Symposium on Wireless Personal Multimedia Communications</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Hybrid distributed iterative capacity allocation over bluetooth network</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">T</forename><surname>Son</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schioler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">B</forename><surname>Madsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Conference on Communication Systems (ICCS 2002)</title>
		<meeting>the 8th International Conference on Communication Systems (ICCS 2002)</meeting>
		<imprint>
			<biblScope unit="page" from="583" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Dominating set based bluetooth scatternet formation with localized maintenance</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Parallel and Distributed Processing Symposium, IPDPS</title>
		<meeting>the International Parallel and Distributed Processing Symposium, IPDPS</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="148" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">A self-routing topology for bluetooth scatternets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Parallel Architectures, Algorithms and Networks, I-SPAN Ã•02</title>
		<meeting>the International Symposium on Parallel Architectures, Algorithms and Networks, I-SPAN Ã•02</meeting>
		<imprint>
			<biblScope unit="page" from="13" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Interference aware mac scheduling and sar policies for bluetooth scatternets</title>
		<author>
			<persName><forename type="first">M.-T</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-K</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-H</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sawatari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Okada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Global Telecommunications Conference (GLO-BECOM Ã•02)</title>
		<meeting>the IEEE Global Telecommunications Conference (GLO-BECOM Ã•02)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="11" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Interconnecting bluetooth-like personal area networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st Annual Oxygen Workshop</title>
		<meeting>the 1st Annual Oxygen Workshop</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">A locally coordinated scatternet scheduling algorithm</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guttag</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th Annual IEEE Conference on Local Computer Networks, LCN Ã•02</title>
		<meeting>the 27th Annual IEEE Conference on Local Computer Networks, LCN Ã•02</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title level="m" type="main">Forming scatternets for bleutooth personal area networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Miu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guttah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<idno>MIT-LCS-TR-826</idno>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
	<note type="report_type">MIT Technical Report</note>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">An efficient scatternet formation algorithm for dynamic environments</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Miu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guttah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IASTED Communications and Computer Networks (CNN)</title>
		<meeting>the IASTED Communications and Computer Networks (CNN)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Texas Instruments</orgName>
		</author>
		<ptr target="&lt;http://www.ti.com/rd/brf6100&gt;" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Evaluating the communication performance of an ad hoc wireless network</title>
		<author>
			<persName><forename type="first">C.-K</forename><surname>Toh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Delwar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Allen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="402" to="414" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">Bluenet--a new scatternet formation scheme</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Haas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th Annual Hawaii International System Sciences, HICSS Ã•02</title>
		<meeting>the 35th Annual Hawaii International System Sciences, HICSS Ã•02</meeting>
		<imprint>
			<biblScope unit="page" from="779" to="787" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Ad hoc routing in bluetooth</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P F</forename><surname>Willekens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">2213</biblScope>
			<biblScope unit="page" from="130" to="144" />
			<date type="published" when="2001">2001</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Polling best effort traffic in bluetooth</title>
		<author>
			<persName><forename type="first">R</forename><surname>Yaid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Heijenk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Personal Communications</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="195" to="206" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Round robin with look ahead: a new scheduling algorithm for bluetooth</title>
		<author>
			<persName><forename type="first">D</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Nair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sivaramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jayakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Parallel Processing Workshops</title>
		<meeting>the International Conference on Parallel Processing Workshops</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="45" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Bluetrees--scatternet formation to enable bluetooth-based ad hoc networks</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">V</forename><surname>Zaruba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications, ICC</title>
		<meeting>the IEEE International Conference on Communications, ICC</meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="273" to="277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">A flexible scatternet-wide scheduling algorithm for bluetooth networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st IEEE International Performance, Computing, and Communications Conference</title>
		<meeting>the 21st IEEE International Performance, Computing, and Communications Conference</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="291" to="298" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Scatternet formation of bluetooth ad hoc networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Zhen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Parj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th Annual Hawaii International Conference on System Sciences, HICSS Ã•03</title>
		<meeting>the 36th Annual Hawaii International Conference on System Sciences, HICSS Ã•03</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="312" to="319" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
