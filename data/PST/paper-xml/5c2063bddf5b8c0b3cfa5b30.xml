<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Distributed Learning for Computation Offloading in Mobile Edge Computing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Tony</forename><surname>Quek</surname></persName>
							<email>tonyquek@sutd.edu.sg</email>
						</author>
						<author>
							<persName><forename type="first">Hyundong</forename><surname>Shin</surname></persName>
							<email>hshin@khu.ac.kr</email>
						</author>
						<author>
							<persName><forename type="first">)</forename><forename type="middle">T Q</forename><surname>Dinh</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Q</forename><forename type="middle">D</forename><surname>La</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Singapore University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Singapore University of Technology and Design</orgName>
								<address>
									<postCode>487372</postCode>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Electronic Engineering</orgName>
								<orgName type="institution">Kyung Hee University</orgName>
								<address>
									<postCode>17104</postCode>
									<settlement>Yongin-si, Gyeonggi-do</settlement>
									<country key="KR">South Korea</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Department of Electronic Engineering</orgName>
								<orgName type="institution">Kyung Hee University</orgName>
								<address>
									<postCode>17104</postCode>
									<settlement>Yongin-si, Gyeonggi-do</settlement>
									<country key="KR">South Korea</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Distributed Learning for Computation Offloading in Mobile Edge Computing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4875DA85410DD4122EFB8E87A0E17DAC</idno>
					<idno type="DOI">10.1109/TCOMM.2018.2866572</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TCOMM.2018.2866572, IEEE Transactions on Communications received November 07, 2017; revised March 10, 2018, June 30, 2018; accepted August 11, 2018.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Mobile edge computing</term>
					<term>computation offloading</term>
					<term>Q-learning</term>
					<term>exact potential game</term>
					<term>unknown noisy payoff game</term>
					<term>strategy learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Mobile edge computing (MEC) is expected to provide cloud-like capacities for mobile users (MUs) at the edge of wireless networks. However, deploying MEC systems faces many challenges, one of which is to achieve an efficient distributed offloading mechanism for multiple users in time-varying wireless environments. In this paper, we study a multi-user multi-edgenode computation offloading problem. Since edge nodes' communication and computing capacities are limited which leads resource contention when many MUs offload to the same edge node at the same time, we formulate this problem as a noncooperative exact potential game (EPG), where each MU, in each time slot, selfishly maximizes its number of processed central processor unit (CPU) cycles and reduces its energy consumption. Assuming that channel information is static and available to MUs, we show that MUs could achieve a Nash Equilibrium via a best response based offloading mechanism. Next, we extend the problem to a practical scenario, where the number of processed CPU cycles is time-varying and unknown to MUs because of the uncertain channel information. In this case, we adopt an unknown payoff game framework and prove that the EPG properties still hold. Then, we propose a modelfree reinforcement learning offloading mechanism which helps MUs learn their long-term offloading strategies to maximize their long-term utilities. Numerical results illustrate that our proposed algorithm for unknown CSI outperforms other schemes, such as Local Processing and Random Assignment, and achieves up to 87.87% average long-term payoffs compared to the perfect CSI case.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>S MARTPHONE usage has been widely popular in mod- ern life, bringing various types of services to people, from basic applications like texting and calling to complex ones like gaming and voice/face recognition. According to Ericsson's Mobility Report, the number of global smartphone subscriptions had reached 3.4 billion as of 2015, and is predicted to dramatically increase to 6.3 billion by 2021, without considering other portable smart devices' subscriptions <ref type="bibr" target="#b0">[1]</ref>. Although the computing capacities of mobile devices have increased over recent years, they are still relatively limited in computational and battery resources in comparison to mobile applications' requirements which have become more and more complex and energy-hungry. Conventionally, Mobile Cloud Computing (MCC), which promotes offloading computationintensive tasks to cloud servers, could enhance mobile devices' battery lifetime and users' application experience <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>. In order to support computation offloading, mobile devices and servers are required to operate offloading frameworks, such as MAUI <ref type="bibr" target="#b3">[4]</ref>, CloneCloud <ref type="bibr" target="#b4">[5]</ref>, SAMI <ref type="bibr" target="#b5">[6]</ref>, and ThinkAir <ref type="bibr" target="#b6">[7]</ref>. With these frameworks, tasks can be executed on edge nodes with different hardware architectures. MAUI allowed mobile users (MUs) to offload .NET applications to cloud servers to save MUs' energy consumption <ref type="bibr" target="#b3">[4]</ref>. CloneCloud allowed cloud servers to execute a MU's Virtual Machine (VM) clone image <ref type="bibr" target="#b4">[5]</ref>. With SAMI <ref type="bibr" target="#b5">[6]</ref>, authors proposed a multi-tier Infrastructure as a Service (IaaS) to execute computational intensive applications on behalf of MUs. With ThinkAir, MUs can offload their parallel tasks to cloud servers by using multiple VM images <ref type="bibr" target="#b6">[7]</ref>. However, MCC has a critical disadvantage. Cloud servers are usually logically and spatially far from MUs, which leads to huge communications latency. Mobile Edge Computing (MEC) is a promising solution for this problem <ref type="bibr" target="#b7">[8]</ref>. By having storage and computing capacities at edge nodes, MEC is envisioned to deliver cloud computing services at the edge of wireless networks with low latency.</p><p>Offloading to edge nodes showed attractive theoretical results in academic works. Most early works considered singleuser scenarios, for example, in Wang et al. <ref type="bibr" target="#b8">[9]</ref> where a MU partially offloads to a femtocloud, or in our earlier work <ref type="bibr" target="#b9">[10]</ref> where a user can offload to multiple edge nodes. Offloading in multi-user scenarios have also been considered in several works. Some authors looked for centralized solutions <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b11">[12]</ref>, while others looked for decentralized approaches based on game theory <ref type="bibr" target="#b12">[13]</ref>- <ref type="bibr" target="#b14">[15]</ref>. Sardellitti et al. in <ref type="bibr" target="#b10">[11]</ref> proposed 0000-0000/00$00.00 c 2017 IEEE an energy-saving framework which jointly optimizes MUs' precoding matrices and the cloud's computing resource. You et al. in <ref type="bibr" target="#b11">[12]</ref> proposed a multi-user MEC system where a MU can harvest energy from a base station or offload to it. Meskar et al. in <ref type="bibr" target="#b12">[13]</ref> proposed a Gauss-Seidel based offloading algorithm to minimize MUs' energy consumption under a shared channel while satisfying latency constraints. Chen in <ref type="bibr" target="#b13">[14]</ref> formulated a potential game framework and proposed a decentralized offloading algorithm for multiple users in a shared communication channel. Then, the author extended his work to a multi-channel setting in <ref type="bibr" target="#b14">[15]</ref>. However, most of the above works assumed that channel state information (CSI) is static and known before making decisions <ref type="bibr" target="#b10">[11]</ref>- <ref type="bibr" target="#b14">[15]</ref>, which implies that the wireless channel's coherence time is much larger than applications' execution time. In practice, it is quite the opposite. For instance, at a carrier frequency of 5860 MHz under Orthogonal Frequency-Division Multiplexing (OFDM) scheme, the channel's coherence time is 2.5 ms and 0.2 ms for devices moving at 6 mph and 75 mph speeds, respectively <ref type="bibr" target="#b15">[16]</ref>. Meanwhile, some tasks such as virus scanning can last for several hours. Thus, it is necessary to have offloading mechanisms which can dynamically and robustly adapt to time-varying wireless environments.</p><p>Very few works have addressed the issue of time-varying CSI in MEC. Zhang et al. in <ref type="bibr" target="#b16">[17]</ref> derived offloading policies under stochastic wireless channels where computation is either offloaded to a cloud clone or locally executed. Mao et al. in <ref type="bibr" target="#b17">[18]</ref> proposed dynamic offloading algorithms based on Lyapunov optimization and periodic channel estimation. However, they either required channel statistics <ref type="bibr" target="#b16">[17]</ref>, or needed to periodically estimate the channel condition <ref type="bibr" target="#b17">[18]</ref>. In practice, these approaches incur huge signal overhead to precisely measure and to update the whole network's channel information to every mobile user. Therefore, it is more practical to devise a multi-user offloading mechanism which can allow users to learn and adapt their offloading strategies throughout time based only on their observed payoffs and without requiring any real-time channel information or statistics.</p><p>Motivated by that, in this work, we look at a mechanism where multiple MUs can adapt their offloading strategies in a time-varying MEC environment. We first model a game theoretical framework where each MU selects their targeted edge nodes and transmission powers to maximize their processed CPU cycles in each timeslot while saving their energy consumption. Given the static CSI, we prove that this model is an exact potential game (EPG) and establish the convergence of MUs' offloading strategies to a Nash Equilibrium (NE) via best-response dynamics. These results later serve as a performance benchmark when we investigate the dynamic offloading scenario. Subsequently, when the CSI becomes time-varying, users' payoffs, e.g., the number of processed CPU cycles, will also be random and unknown to MUs before making decisions. The expected-payoff game is then shown to maintain the properties of EPG. To design an offloading policy for the players, unlike existing works that required predefined stochastic dynamics of channels for learning the strategies, we will instead adopt a model-free reinforcement learning mechanism <ref type="bibr" target="#b18">[19]</ref>. In this technique, MUs interact among themselves and with the environment and their behaviors can be reinforced through such interactions without prior knowledge of wireless channel information <ref type="bibr" target="#b18">[19]</ref>. We propose an offloading algorithm based on Q-learning and better-response with inertia, which will be robust to unknown and time-varying channels. The NE convergence properties of MUs' offloading strategies can be derived theoretically. Our numerical results show that the proposed scheme can help MUs adapt their offloading strategies to dynamic wireless environments and achieve an efficient performance.</p><p>The contribution of this work is summarized as follows. 1) Starting with static channels, we formulate a distributed computation offloading problem among the MUs as an EPG and show that MUs' strategies can converge to a NE via best-response dynamics. 2) Under time-varying and unknown CSI, we show that an expected-payoff game is also an EPG. We propose a distributed offloading dynamic based on Q-learning and better-response with inertia and prove the NE convergence. 3) We provide extensive simulation results to verify the convergence of the proposed algorithm and evaluate its performance, compared to the full-CSI case. The rest of the paper is organized as follows. The system model is introduced in Section II. Then, we formulate the multi-user offloading problem in the ideal case of static CSI in Section III. Next, the results for the practical case of unknown time-varying channels are discussed in Section IV. We then present the numerical results in Section V and final conclusion in Section VI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. SYSTEM MODEL A. Notations</head><p>Let us introduce the system model. We consider a set of N MUs, denoted by N = {1, • • • , N }, co-located with K access points. In fact, our access points can be modeled after a Fog-Radio Access Network (F-RAN) node in <ref type="bibr" target="#b19">[20]</ref> where an equipment has communications and computing capacities. Thus, they are so-called computational access points (CAPs). As in <ref type="bibr" target="#b19">[20]</ref>, a F-RAN node makes use of the computing resources of the existing macro or small cells infrastructure. The emerging LTE-A is a potential technology for this architecture, where communications and computing elements are clearly defined <ref type="bibr" target="#b19">[20]</ref>. Hence, our CAPs are based on cellular networks which work on licensed band. We define the set of CAPs as K = {1, • • • , K}. It is assumed that each user can be associated with one or more CAPs. For example, in Fig. <ref type="figure" target="#fig_0">1</ref>, MU 4, which lies in the overlapping coverage areas of CAP 1 and CAP 2, can offload to either one of these CAPs. The system operates in a time-slotted fashion. In each single time slot, each MU decides whether it should offload its computation task to one of the CAPs or locally process them. In this section, we describe the system and the offloading problem in a single time slot <ref type="foot" target="#foot_0">1</ref> . We let a n = {a n,0 , a n,1 , • • • , a n,K } denote the (K + 1)dimensional edge-node-selection vector of MU n, where</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DhƐ</head><formula xml:id="formula_0">a n,k = 1 if MU n offloads to CAP k, ∀k ∈ K, 0 otherwise. (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>For k = 0, the variable a n,0 represents whether MU n locally processes its computational units (i.e., CPU cycles), i.e. a n,0 = 1 when MU n locally processes its CPU cycles. We assume that MU n either locally processes tasks or offloads to only one CAP during a time slot; therefore, we have</p><formula xml:id="formula_2">K k=0 a n,k = 1, ∀n ∈ N .<label>(2)</label></formula><p>From ( <ref type="formula" target="#formula_0">1</ref>) and ( <ref type="formula" target="#formula_2">2</ref>), if MU n chooses to offload its tasks to CAP k, then a n,k = 1 and a n,l = 0, ∀l ∈ K \ {k}. In addition to the edge-node-selection decision, we assume also that a MU can adapt its transmission power level when sending data to a CAP via wireless transmission. Hence, we define the offloading strategy of MU n as</p><formula xml:id="formula_3">s n = {p n , a n }<label>(3)</label></formula><p>where p n ∈ [0, P max ] is the transmission power of MU n. Let S n denote the set of strategies of MU n.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Offloading Protocol</head><p>We divide each time slot into four non-overlapping periods corresponding to four operation modes, i.e., CAP broadcasting, MU offloading, CAP processing, and result returning. The length of one time slot is a design parameter which is application-dependent as mentioned in <ref type="bibr" target="#b20">[21]</ref>. Fig. <ref type="figure">2</ref> depicts the offloading protocol.</p><p>• CAP broadcasting: CAPs announce their presence, which also serves to synchronize time among their served MUs for subsequent MU offloading. • MU offloading: After knowing the presence of CAPs, a MU offloads its tasks to a desired CAP. A MU's uplink signal interferes with the other MUs offloading to the same CAP. We assume that the MUs transmitting to the same CAP can be synchronized, which means that they all transmit simultaneously during the transmitting period. Let T Off be the duration of "MU offloading" period. Since this parameter should be specified by the protocol, it is identical for all users. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Communications Model</head><p>We now introduce the communication model for wireless access. The CAPs are assumed to operate in nonoverlapping frequency bands such that inter-cell interference can be avoided in the uplink. This assumption is valid with a proper frequency planning when CAPs are coordinated by a network operator (NO) or they are cooperative via intercell coordination <ref type="bibr" target="#b21">[22]</ref>. Users are assumed they know and can operate on the bands that CAPs are operating on. However, uplink intra-cell interference can occur between two MUs that are simultaneously transmitting to the same CAP which could lead to reduced link quality and performance. As a result, we have a situation of conflict of interest where selfish MUs compete for the computational resources.</p><p>Given the decision profile S = (s 1 , s 2 , . . . , s N ) of all the MUs, we can compute the uplink data rate of a MU n as</p><formula xml:id="formula_4">R n (S) = k∈K W k log 2 1 + a n,k p n h n,k ω 0 + m∈N \{n} a m,k p m h m,k<label>(4)</label></formula><p>2 Each CAP has a maximum number of batches it can process each time slot. If this number is greater than or equal to the number of wireless connections a CAP can hold, the CAP processes all batches sent from users. Otherwise, in order to maintain its queue's stability, the CAP drops batches which are not processed. Our subsequent game model and proposed algorithms can however be modified to allow a MU whose batch is dropped to remove a CAP from its strategy set as a preventive measure. By doing so, the properties of the game are still preserved. We omit the detailed analysis here.</p><p>where W k is the channel bandwidth; and ω 0 represents the background noise power. Furthermore, h n,k is the channel gain between MU n and CAP k. Across different MU-CAP links and different time slots, the channel gains are assumed to be independent and identically distributed (i.i.d.) random variables, and can be computed as</p><formula xml:id="formula_5">h n,k = g n,k d -r n,k ,<label>(5)</label></formula><p>where g n,k accounts for possible fading; and d -r n,k accounts for the path loss part. Here, d n,k is the distance between MU n and CAP k; and r is the path loss exponent. Each MU offloads to a CAP in a fixed duration T Off which is assumed to be smaller than the coherence time of the transmission environment. Hence, the value of h n,k can be seen as unchanged while MU n is sending data to CAP k.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Computation Model</head><p>We then introduce the computation model. In our work, we considered data partitioned oriented applications, in which the amount of data to be processed is known beforehand. Typical examples are virus scanning and file/photo compression applications <ref type="bibr" target="#b8">[9]</ref>. For virus scanning and file/photo compression, execution time may last for 20-30 minutes, or even hours. Meanwhile, each time slot's duration is in ms. As a result, it is equivalent to have a sufficiently large number of CPU cycles to be processed. In other words, in each time slot, it is not possible to offload all data but it makes sense for a MU to opportunistically send as much data as possible. The more offloaded data, the earlier the task can be completed.</p><p>1) Processing at MUs' CPUs: Let f n be the number of CPU cycles that MU n can process per second. Let T l denote the duration of local execution. It is assumed at most equal to the duration of one time slot 3 . The energy consumption of local execution in each time slot is defined as</p><formula xml:id="formula_6">E l n = P Comp n T l ,<label>(6)</label></formula><p>where P Comp n is the computational power which is a constant. If MU n locally processes its tasks, the number of processed CPU cycles is</p><formula xml:id="formula_7">D l n = T l f n .<label>(7)</label></formula><p>Meanwhile, as in <ref type="bibr" target="#b22">[23]</ref>,</p><formula xml:id="formula_8">P Comp n = ρf ζ n ,</formula><p>where ρ is a constant that depends on the average switched capacitance and the average activity factor ζ ≥ 2 is a constant (usually close to 3). Thus,</p><formula xml:id="formula_9">D l n = a n,0 T l P Comp n ρ 1 ζ . (<label>8</label></formula><formula xml:id="formula_10">)</formula><p>2) Processing at CAPs' CPU: As mentioned above, MUs offload their CPU cycles to CAPs in "MU offloading" periods and receive their results in "Result returning" periods. The energy when MU n offloads is defined as</p><formula xml:id="formula_11">E CAP n = p n T Off . (<label>9</label></formula><formula xml:id="formula_12">)</formula><p>3 We assume that the time for decision making is much smaller that the time for computation processing. Thus, that duration is ignored in our work.</p><p>The actual energy consumed by MU n in each time slot is therefore</p><formula xml:id="formula_13">E n (s n ) = E l n if MU n locally processes its CPU cycles E CAP n otherwise. (<label>10</label></formula><formula xml:id="formula_14">)</formula><p>The number of offloaded CPU cycles is assumed to be proportional to the number of offloaded bits <ref type="bibr" target="#b8">[9]</ref>, i.e.,</p><formula xml:id="formula_15">D CAP n (S) = κT Off R n (S),<label>(11)</label></formula><p>where κ is a positive constant known as the computation to data ratio; and R n (S) is the uplink data rate. Here, we note that the number of offloaded CPU cycles in ( <ref type="formula" target="#formula_9">8</ref>) and ( <ref type="formula" target="#formula_15">11</ref>) for the two cases are not identical. Also in <ref type="bibr" target="#b10">(11)</ref>, the objective is to let users offload as much as possible, unlike existing work <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref> which assumed a fixed data load in a timeslot. Overall, from ( <ref type="formula" target="#formula_9">8</ref>), ( <ref type="formula" target="#formula_15">11</ref>) and ( <ref type="formula" target="#formula_4">4</ref>), the actual number of CPU cycles that are processed of MU n in each offloading duration can be expressed in ( <ref type="formula" target="#formula_19">14</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Utility Function</head><p>Since each MU has a very large number of CPU cycles to process, each MU wants to maximize the number of processed CPU cycles. To do so, each MU will be inclined to increase its transmission power. Since all players increase their powers, they will eventually transmit at maximum power which makes the overall performance inefficient. In practical scenarios, however, energy consumption induces a cost, so we will instead consider the energy-aware utility model <ref type="bibr" target="#b23">[24]</ref> U</p><formula xml:id="formula_16">n (S) = λ D D n (S) -λ E q(E n (s n ))<label>(12)</label></formula><p>where q(E n ) is the cost of energy consumption; and λ D , λ E ∈ [0, +∞) are scalar weights. The weights themselves reflect the relative importance (preference) between the processed CPU cycles and energy consumption. For example, when the MU's battery is full and the user only cares about maximizing processed CPU cycles, the MU can set λ D = 1 and λ E = 0.</p><p>The cost function q(E n ) is assumed to have the following properties <ref type="bibr" target="#b24">[25]</ref>, <ref type="bibr" target="#b25">[26]</ref> 1. It is a strictly monotonically increasing function of energy consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">When</head><formula xml:id="formula_17">E n (s n ) = 0, q(E n (s n )) = 0.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The cost function is a convex and differentiable function</head><p>with respect to E n . As in <ref type="bibr" target="#b26">[27]</ref>, there are two candidates for the cost function: linear function and exponential function. In this work, for simplicity, we use a linear function</p><formula xml:id="formula_18">q(E n (s n )) = E n (s n ) = I(a n,0 = 0)p n T Off + I(a n,0 = 1)P Comp n T l ,<label>(13)</label></formula><p>where I(.) is the indicator function. In summary, ( <ref type="formula" target="#formula_16">12</ref>) and ( <ref type="formula" target="#formula_18">13</ref>) allow each MU to maximize the number of CPU cycles while minimizing the energy consumption. As explained before, this proposed objective is feasible under the assumption that there are a nearly infinite number of CPU cycles to be processed at the beginning, especially within the first few minutes of</p><formula xml:id="formula_19">D n (S) = T Off κ k∈K W k log 2 1 + a n,k p n h n,k ω 0 + m∈N \{n} a m,k p m h m,k + a n,0 T l P Comp n ρ 1 ζ . (<label>14</label></formula><formula xml:id="formula_20">)</formula><p>offloading when NE has not been reached, due to the nature of data partitioned oriented applications. As such, our utility function will provide the best performance that users can achieve. After a sufficient duration, NE will be achieved and the utilities of MUs have stabilized, this assumption will no longer have an impact on the decision making process of MUs.</p><p>In the final few time slots, the remaining computational units to be processed are finite and our objective will instead provide the upper bound of the offloading performance. However, in the typical aforementioned applications, the impact of a final few seconds could be insignificant with regard to the entire duration of the application's run.</p><p>In Section III, we present the solution under static CSI assumption which takes place in a given time slot. Subsequently, Section IV expands the game into a dynamic setting where each MU tries to maximize its long-term payoff.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MULTI-USER COMPUTATION OFFLOADING GAME UNDER STATIC CSI</head><p>In this section, we study a model where MUs decide their offloading strategies, formulated as a non-cooperative game. As an ideal scenario, MU n is assumed to know its channel gains h n,k beforehand during the broadcast and synchronization period. Given this information, each MU tries to maximize its payoff</p><formula xml:id="formula_21">∀n ∈ N , max sn U n s.t p n ≤ P max , K k=0 a nk = 1.<label>(15)</label></formula><p>We can characterize this game by the tuple G 1 = {N , {S n } n∈N , {U n } n∈N }, in which each MU n ∈ N has a set of strategies S n and utility function U n : S → R, where S = S 1 × • • • × S N denotes the domain of the strategy profile or the strategy space. The game G 1 is considered as a one-shot game.</p><p>A strategy profile S * = (s * 1 , . . . , s * N ) is a Nash equilibrium of the multi-user computation offloading game if at the equilibrium S * , no MU can further maximize its utility by unilaterally changing its strategy, i.e.,</p><formula xml:id="formula_22">U n (s * n , s * -n ) ≥ U n (s n , s * -n ), ∀s n ∈ S n , n ∈ N .<label>(16)</label></formula><p>For each MU n, the best-response correspondence for it is a set-valued mapping B n (s -n ) : S -n → S n such that</p><formula xml:id="formula_23">B n (s -n ) = {s * n |s * n ∈ arg max sn∈Sn U n (s n , s -n )}.<label>(17)</label></formula><p>From ( <ref type="formula" target="#formula_22">16</ref>) and ( <ref type="formula" target="#formula_23">17</ref>), a strategy profile is NE if and only if</p><formula xml:id="formula_24">s n ∈ B n (s -n ), ∀n ∈ N .</formula><p>In what follows, we will prove G 1 is an EPG, which means there exists a potential function such that the change in a MU's utility due to its strategy deviation results in exactly the same amount of change in the potential function <ref type="bibr" target="#b27">[28]</ref>. If a game is an EPG, it has at least one pure NE and possesses the finite improvement path property, which means a NE can be achieved by any sequential best-response/better-response dynamic in a finite number of iterations <ref type="bibr" target="#b27">[28]</ref>.</p><formula xml:id="formula_25">Definition 1. A game G is an EPG if and only if a potential function ψ(S) : S → R exists, such that U n (s n , s -n ) -U n (s n , s -n ) = ψ(s n , s -n ) -ψ(s n , s -n ) (<label>18</label></formula><formula xml:id="formula_26">)</formula><p>where s n is a different action of MU n from s n .</p><p>Theorem 1. G 1 is an EPG with the following potential function:</p><formula xml:id="formula_27">ψ (1) (S) = λ D T Off κ k∈K W k log 2 ω 0 + m∈N a m,k p m h m,k + λ D n∈N a n,0 T l P Comp n ρ 1 ζ -λ E n∈N q(E n (s n )).<label>(19)</label></formula><p>Proof. From ( <ref type="formula" target="#formula_19">14</ref>) and ( <ref type="formula" target="#formula_16">12</ref>), we have <ref type="bibr" target="#b19">(20)</ref>. Thus, <ref type="bibr" target="#b20">(21)</ref>. Because the last term of ( <ref type="formula" target="#formula_31">20</ref>) depends only on other MUs' strategies s -n , U n (s n , s -n ) -U n (s n , s -n ) cancels out this term. Similarly, ψ (1) (s n , s -n )ψ (1) (s n , s -n ) can be derived as in <ref type="bibr" target="#b21">(22)</ref>. From the definition of q(E n (s n )) in ( <ref type="formula" target="#formula_18">13</ref>), i.e.,</p><formula xml:id="formula_28">U n (s n , s -n )- U n (s n , s -n ) is derived as in</formula><formula xml:id="formula_29">q(E n (s n )) = E n (s n ) = I(a n,0 = 0)p n T Off + I(a n,0 = 1)P Comp n T l ,</formula><p>the cost of energy consumption of each users depends only on its transmission power and its offloading strategy, and not other MUs' strategies. Therefore, the part m∈N \{n} q(E m (s m ))- <ref type="formula" target="#formula_33">22</ref>) can be cancelled. Clearly, from ( <ref type="formula" target="#formula_32">21</ref>) and ( <ref type="formula" target="#formula_33">22</ref>), we can verify that ψ (1) (S) satisfies ( <ref type="formula" target="#formula_25">18</ref>) in Definition 1. Thus, G 1 is an EPG with potential function ψ (1) (S) in <ref type="bibr" target="#b18">(19)</ref>.</p><formula xml:id="formula_30">m∈N \{n} q(E m (s m )) in (</formula><p>Corollary 1. For the game G 1 , a pure-strategy Nash equilibrium exists and can be obtained through sequential best/betterresponse dynamics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Distributed Best-Response Based Multiuser Offloading Algorithm</head><p>We introduce an offloading algorithm based on bestresponse dynamics for finding a NE of the game G 1 . This kind of dynamic was well studied in potential games <ref type="bibr" target="#b27">[28]</ref> and also adopted in recent works in computational offloading <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref>. We summarize the best-response based offloading mechanism in Algorithm 1. In the beginning, each MU n randomly selects its action s n and receives its initial reward.</p><formula xml:id="formula_31">U n (S) = D n (S) -q(E n (s n )) = λ D T Off κ k∈K W k log 2 1 + a n,k p n h n,k ω 0 + m∈N \{n} a m,k p m h m,k + λ D a n,0 T l P Comp n ρ 1 ζ -λ E q(E n (s n )) = λ D T Off κ k∈K W k log 2 ω 0 + m∈N a m,k p m h m,k + λ D a n,0 T l P Comp n ρ 1 ζ -λ E q(E n (s n )) -λ D T Off κ k∈K W k log 2   ω 0 + m∈N \{n} a m,k p m h m,k   . (<label>20</label></formula><formula xml:id="formula_32">) U n (s n , s -n ) -U n (s n , s -n ) = λ D T Off κ k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k ) -λ D T Off κ k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k ) + λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ E q(E n (s n )) -λ E q(E n (s n )) .<label>(21)</label></formula><formula xml:id="formula_33">ψ (1) (s n , s -n ) -ψ (1) (s n , s -n ) = λ D T Off κ k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k ) -λ D T Off κ k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k ) + λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ E m∈N \{n} q(E m (s m )) + λ E q(E n (s n )) -λ E m∈N \{n} q(E m (s m )) -λ E q(E n (s n )) .<label>(22)</label></formula><p>At each iteration, a MU is randomly chosen to perform bestresponse to other MUs' offloading strategies. To perform best-response offloading strategies, given other MUs' previous strategies s -n , the MU n computes the optimal transmission power pn (k, a</p><formula xml:id="formula_34">(k) n , s -n ) for each possible edge-node-selection decision a (k)</formula><p>n such that a n,k = 1 and a n,l = 0, ∀l ∈ K \ {k}, i.e., for a given CAP k, ∀k ∈ K, as follows.</p><formula xml:id="formula_35">pn (k, a (k) n , s -n ) = λ D κW k log 2 (λ E ) - ω 0 + m∈N \{n} a m,k p m h m,k h n,k .<label>(23)</label></formula><p>Eq. ( <ref type="formula" target="#formula_35">23</ref>) can be derived from the first-order condition ∂Un ∂pn = 0 as U n can be shown to be concave in</p><formula xml:id="formula_36">p n . Let s n (k) = {p n (k, a (k) n , s -n ), a (k)</formula><p>n }, and s n (0) be the local execution decision. Then, we can obtain the best-response of MU n as follows.</p><formula xml:id="formula_37">s * n = arg max sn(k),∀k∈K {0} U n (s n (k), s -n ).<label>(24)</label></formula><p>Next, MUs update their rewards. The algorithm terminates when the joint actions S holds in T ter iterations. The value</p><formula xml:id="formula_38">Algorithm 1 Distributed Best-Response Based Multi-User Offloading Algorithm Input: K, N , h n,k , W k , κ, λ D , λ E , P Comp n</formula><p>, T Off , T l ; 1: ∀n ∈ N , sn is selected with probability 1 |Sn| ; 2: while S is not a NE do S must be held for at least Tter iterations to be a NE.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3:</head><p>MU n is randomly selected to alter its action; 4:</p><p>for k = 1 to |K| do 5:</p><formula xml:id="formula_39">a nl ← 0, ∀ l ∈ K\{k} and a nk ← 1; 6: Compute pn(k, a<label>(k)</label></formula><p>n , s -n ) according to (23); 7:</p><formula xml:id="formula_40">sn(k) ← {pn(k, a (k) n , s -n ), a<label>(k)</label></formula><p>n }; 8:</p><p>end for 9:</p><p>Compute s * n according to (24); 10:</p><p>∀n ∈ N , Un ← Un(S). 11: end while of T ter is a design parameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Price of Anarchy</head><p>Since MUs act selfishly, the equilibrium point of offloading strategies is not necessarily the best operating point from a social point of view which encourages efficient sharing of resources instead of aggressive competition. A NE which improves social welfare over another NE is therefore more preferable. There are two points of views in social welfare, i.e. utilitarianism and egalitarianism <ref type="bibr" target="#b28">[29]</ref>. The former measures social welfare as the total individual payoff, while the latter considers the least individual payoff. In this work, we consider the former approach, i.e., the sum utilities of all players Υ(S) = n∈N U n as our social welfare measure. The price of anarchy (PoA) provides a measure of the efficiency associated with the proposed algorithm <ref type="bibr" target="#b27">[28]</ref>. We use the PoA to measure the efficiency of equilibria which is defined as follows.</p><formula xml:id="formula_41">PoA = min S∈Ξ Υ(S) max S∈S Υ(S) , (<label>25</label></formula><formula xml:id="formula_42">)</formula><p>where Ξ is the set of NE strategy profiles. We also define the performance ratio of an algorithm as follows.</p><formula xml:id="formula_43">θ( S) = Υ( S) max S∈S Υ(S)</formula><p>,</p><p>where S is the converged strategy profile obtained by an algorithm. This definition is similar to optimization-related works where it is common to consider the ratio of the optimal utility over the utility of a given algorithm' obtained solution <ref type="bibr" target="#b29">[30]</ref>. θ is proposed to compare how close the performance of an algorithm is with respect to the optimal point. Let s n (0) denote the strategy of MU n when it processes tasks locally.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 1.</head><p>Given</p><formula xml:id="formula_44">C 1 = max n∈N max max k∈K λ D T Off κ log 2 1 + p * n (k)h n,k ω 0 -λ E q(T Off p * n (k)) , U n (s n (0), s -n ) (<label>26</label></formula><formula xml:id="formula_45">)</formula><p>and C 2 = min n∈N U n (s n (0), s -n ), the PoA of game G 1 and the performance ratio of Algorithm 1 are bounded by</p><formula xml:id="formula_46">1 ≥ θ( SAlg.1 ) ≥ PoA ≥ C 2 C 1 (<label>27</label></formula><formula xml:id="formula_47">)</formula><p>where C 1 is the maximum achievable payoff and C 2 is the minimum payoff due to local processing by every possible MU in the system. Also,</p><formula xml:id="formula_48">p * n (k) is the solution of ∂ ∂pn (λ D T Off κ log 2 (1 + pnh n,k ω0 ) -λ E q(T Off p n )) = 0, ∀k ∈ K.</formula><p>Proof. We have</p><formula xml:id="formula_49">min S∈Ξ Υ(S) max S∈S Υ(S) = min S∈Ξ 1 |N | n∈N U n (S) max S∈S 1 |N | n∈N U n (S) . (<label>28</label></formula><formula xml:id="formula_50">)</formula><p>Similarly,</p><formula xml:id="formula_51">Υ( SAlg.1 ) max S∈S Υ(S) = 1 |N | n∈N U n ( SAlg.1 ) max S∈S 1 |N | n∈N U n (S) . (<label>29</label></formula><formula xml:id="formula_52">)</formula><p>At a NE, all the MUs play the best-response strategies towards each other. Because local processing is a strategy which a MU needs to consider when it performs best-response,</p><formula xml:id="formula_53">∀S ∈ Ξ, U n (S) ≥ U n (s n (0), s -n ) ⇒ ∀S ∈ Ξ, 1 |N | n∈N U n (S) ≥ min n∈N U n (s n (0), s -n ) = C 2 . Since SAlg.1 ∈ Ξ, 1 |N | n∈N U n ( SAlg.1 ) ≥ min S∈Ξ 1 |N | n∈N U n (S) ≥ C 2 . (<label>30</label></formula><formula xml:id="formula_54">)</formula><p>Given a single MU, its offloading's payoff is highest when all other MUs locally process due to no contention in the wireless environment. Then, by selecting the best channel at corresponding optimal power level, it can therefore achieve</p><formula xml:id="formula_55">max k∈K λ D T Off κ log 2 1 + p * n (k)h n,k ω 0 -λ E q(T Off p * n (k))<label>(31)</label></formula><p>where p * n (k) denotes the solution when we solve</p><formula xml:id="formula_56">∂ ∂p n λ D T Off κ log 2 1 + p n h n,k ω 0 -λ E q(T Off p n ) = 0, ∀k ∈ K.<label>(32)</label></formula><p>Thus,</p><formula xml:id="formula_57">max S∈S 1 |N | n∈N U n ≤ max n∈N max max k∈K λ D T Off κ log 2 1 + p * n (k)h n,k ω 0 - λ E q(T Off p * n (k)) , U n (s n (0), s -n ) .<label>(33)</label></formula><p>By substituting ( <ref type="formula" target="#formula_57">33</ref>) and ( <ref type="formula" target="#formula_53">30</ref>) into ( <ref type="formula" target="#formula_49">28</ref>) and ( <ref type="formula" target="#formula_51">29</ref>), ( <ref type="formula" target="#formula_46">27</ref>) follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. MULTI-USER COMPUTATION OFFLOADING GAME UNDER TIME-VARYING AND UNKNOWN CSI</head><p>In practice, the assumption of known static CSI of the previous section is hardly feasible. This section expands our investigation to the case of unknown, time-varying wireless environment where we also study our offloading game across multiple time slots. Notation-wise, in time slot t, certain variables are now with a superscript t, e.g., the throughput of MU n can therefore be written as</p><formula xml:id="formula_58">R t n (S) = k∈K W k log 2 1 + a t n,k p t n h t n,k ω 0 + m∈N \{n} a t m,k p t m h t m,k .<label>(34)</label></formula><p>Here, h t n,k is the realization of the channel link between MU n and CAP k in each time slot, which differs across multiple time slots. We assume block-fading channel, in which the value of h t n,k is random but unchanged in a time slot. We define</p><formula xml:id="formula_59">H = [h t 1,1 . . . h t 1,|K| . . . h t |N |,1 . . . h t |N |,|K| ]</formula><p>as the vector containing all channel gains; and H is the domain of channel gains. In practice, it is costly to update full CSI to each MU every time slot. Hence, we will assume that h t n,k is unknown to MUs at the start of each time slot; and thus, the exact value of R t n (S) in ( <ref type="formula" target="#formula_58">34</ref>) cannot be obtained. As a result, in our game formulation, the utility values U t n (S) are unknown to MUs before making decisions at the beginning of each time slot. To address the above considerations, we will adopt a repeated game with unknown payoff framework in which each stage IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. XX, NO. XX, XXXX game is similar to the previous one-shot game, but instead with unknown utility <ref type="bibr" target="#b30">[31]</ref>.</p><p>First, we define two notions, game stage and strategy of a player. Game stages correspond to instances at which players can choose their actions in a one-shot fashion and subsequently the outcomes are known to them. In this work, a game stage is a time slot. Meanwhile, a strategy of MU n in the repeated game is the sequence of actions τ n = {s t n } T t=1 , where T &lt; ∞ is the number of considered time slots. The vector of strategies τ = (τ 1 , . . . , τ N ) will be called a joint strategy and lie in the set T = T 1 × • • • × T N , where T n refers to the domain of τ n .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Analysis of the Game's Properties</head><p>We now introduce the repeated game model. Each MU independently adjusts its strategy to maximize its time-average payoff, which can be expressed as</p><formula xml:id="formula_60">Ûn (τ ) 1 T T t=1 U t n (s t n , s t -n ).<label>(35)</label></formula><p>We define a game G 2 = {N , {T n } n∈N , { Ûn } n∈N }, where each MU tries to find a strategy which maximizes its long-term average payoff Ûn (τ ) : T → R. This game can be formulated as</p><formula xml:id="formula_61">∀n ∈ N , max sn Ûn s.t s t n ∈ S n .<label>(36)</label></formula><p>The instantaneous utility each MU achieves in each time slot is time-varying, which can be written as</p><formula xml:id="formula_62">U t n (s n , s -n ) = Ūn (s n , s -n ) + e n ,<label>(37)</label></formula><p>where Ūn (s n , s -n ) is the true mean value of instantaneous reward U t n (s n , s -n ); and e n is a random fluctuation with zero mean and bounded variance 4 . Here, we have</p><formula xml:id="formula_63">Ūn (s n , s -n ) E H [U t n (s n , s -n )].<label>(38)</label></formula><p>According to the law of large numbers and from ( <ref type="formula" target="#formula_60">35</ref>) and (38), we have (40) 4 In reality, the value of received transmission power cannot be infinite. Thus, there exists the upper bound h max n,k of h t n,k . Hence, with</p><formula xml:id="formula_64">lim T →∞ Ûn (s n , s -n ) = Ūn (s n , s -n ).<label>(39</label></formula><formula xml:id="formula_65">C 3 n = max k∈K λ D T Off κ log 2 1 + p * n (k)h max n,k ω 0 -λ E q(T Off p * n (k)) and C 4 n = Un(sn(0), s -n ), 0 ≤ U t n ≤ max{C 3 n , C 4 n }. Hence, E[U t n ] is a finite number. As a result, Var[U t n ] = E[(U t n ) 2 ] -E[U t n ] 2 is a finite number.</formula><p>Theorem 2. The game G 2 is an EPG, whose potential function is (44), where f H is the joint probability density function of H.</p><p>Proof. From ( <ref type="formula" target="#formula_19">14</ref>) and ( <ref type="formula" target="#formula_16">12</ref>), we have (45), where H -n is vector H without {h t n,1 , . . . , h t n,K }; and f H and f H-n are the joint distribution of H and H -n , respectively. Thus, Ūn (s n , s -n ) -Ūn (s n , s -n ) can be derived as in (46). Because the last term of (45) depends only on other MUs' strategies s -n , Ūn (s n , s -n ) -Ūn (s n , s -n ) cancels out this term. Similarly, ψ (2) (s n , s -n ) -ψ (2) (s n , s -n ) can be derived as in (47). Clearly, from (46) and (47), we can verify that ψ (2) (S) satisfies <ref type="bibr" target="#b17">(18)</ref> in Definition 1. Thus, G 2 is an EPG with potential function ψ (2) (S) in (44).</p><p>According to the law of large numbers, we have</p><formula xml:id="formula_66">ψ (2) (s n , s -n ) = lim T →∞ 1 T T t=1 ψ (1) (s n , s -n ).<label>(41)</label></formula><p>Hence, we could consider the potential function of the oneshot game ψ (1) as an "instantaneous" potential value for each time slot (game stage) when analyzing the dynamic game.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Discretized Power Domain</head><p>Since G 2 is an EPG, we can theoretically achieve its NE through a sequential best-response. However, to find the bestresponse power allocation of a MU in a continuous domain, a MU requires full information of channel and other MUs' actions. Here, since CSI is unknown, the optimal power allocation cannot be computed beforehand. Thus, we address this issue by quantizing the domain of transmission power (with which we will subsequently apply some learning mechanisms such as Q-learning in order to allow MUs to learn their approximate best-response power allocation effectively). That is, we consider L discrete power levels</p><formula xml:id="formula_67">p n (l) = l L -1 × P max , l = 0, . . . , L -1.<label>(42)</label></formula><p>Obviously, there will be some trade-off between the number of power levels L and the optimality level. We subsequently re-designate</p><formula xml:id="formula_68">s n = {l, a n }.<label>(43)</label></formula><p>We also define G 3 = {N , {T n } n∈N , { Ûn } n∈N }, and the noisy-free case G 3 = {N , {S n } n∈N , { Ūn } n∈N }. T n and S n are the strategy sets of MU n after quantizing which correspond to the multi-stage and expected-payoff games, respectively. We can see that G 3 and G 3 are the quantized versions of G 2 and G 2 , respectively; and we deal with G 3 and G 3 from now on. Proposition 2. G 3 is still an EPG.</p><p>Proof. Since G 3 is the quantized version of G 2 , with S n ⊂ S n , G 3 is an EPG with whose potential function is still ψ (2) . This is a property of EPG following Theorem 2.23 of <ref type="bibr" target="#b27">[28]</ref>.</p><p>The procedure of the following part is presented as follows. We start by showing that a particular strategy learning policy</p><formula xml:id="formula_69">ψ (2) (s n , s -n ) = λ D T Off κ H k∈K W k log 2 ω 0 + m∈N \{n} a m,k p m h t m,k + a n,k p n h t n,k f H dh t 1,1 . . . dh t |N |,|K| +λ D m∈N a n,0 T l P Comp n ρ 1 ζ -λ E m∈N q(E n (s n )). (<label>44</label></formula><formula xml:id="formula_70">)</formula><formula xml:id="formula_71">Ūn E H [U t n ] = H λ D T Off κ k∈K W k log 2 1 + a n,k p n h t n,k ω 0 + m∈N \{n} a m,k p m h t m,k f H (•)dh t 1,1 . . . dh t |N |,|K| +λ D a n,0 T l P Comp n ρ 1 ζ -λ E q(E n (s n )) = λ D T Off κ H k∈K W k log 2 ω 0 + m∈N a m,k p m h t m,k f H (•)dh t 1,1 . . . dh t |N |,|K| + λ D a n,0 T l P Comp n ρ 1 ζ -λ E q(E n (s n )) -λ D T Off κ H-n k∈K W k log 2   ω 0 + m∈N \{n} a m,k p m h t m,k   f H-n (•)dh t 1,1 . . . dh t n-1,1 . . . dh t n-1,|K| dh t n+1,1 . . . dh t |N |,|K|<label>(45)</label></formula><formula xml:id="formula_72">Ūn (s n , s -n ) -Ūn (s n , s -n ) = λ D T Off κ H W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k )f H (•)dh t 1,1 . . . dh t |N |,|K| -λ D T Off κ H W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k + p n a n,k h n,k )f H (•)dh t 1,1 . . . dh t |N |,|K| + λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ E q(E n (s n )) -λ E q(E n (s n )) . (<label>46</label></formula><formula xml:id="formula_73">)</formula><formula xml:id="formula_74">ψ (2) (s n , s -n )-ψ (2) (s n , s -n ) = λ D T Off κ H k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k +p n a n,k h n,k )f H (•)dh t 1,1 . . . dh t |N |,|K| -λ D T Off κ H k∈K W k log 2 (ω 0 + m∈N \{n} p m a m,k h m,k +p n a n,k h n,k )f H (•)dh t 1,1 . . . dh t |N |,|K| + λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ D a n,0 T l ( P Comp n ρ ) 1 ζ -λ E q(E n (s n )) -λ E q(E n (s n )) . (<label>47</label></formula><formula xml:id="formula_75">)</formula><p>known as better-response with inertia (BRI) dynamics can converge to a NE of G 3 when Ūn (S), ∀S ∈ S is known. Then, for G 3 , a Q-learning variant of BRI can be proposed which is then shown to learn the expected reward Ūn (S) and to obtain equivalent convergence results to that of G 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Distributed Learning Based Multi-User Offloading Algorithm</head><p>Beside best-response dynamics, BRI dynamics are proven to converge a NE of weakly acyclic games, which potential games are a subset of <ref type="bibr" target="#b31">[32]</ref>. However, these results have not considered the case where the utility is time-varying and unknown to players. Next, we present a variant of BRI when utilities are fixed and known to MUs, and subsequently an offloading mechanism based on Q-learning and BRI which is able to adapt to the time-varying environment. In the proposed Qlearning mechanism, full CSI or full reward information is not required, and so is the prior knowledge of the inherent stochastic dynamics of the channels. Hence, MUs adapt their strategies via trial-and-error interactions with the dynamic wireless environment and other MUs. This aligns with the principles of model-free learning which has recently been increasingly popular in communication problems due to the need of adaptive, efficient and self-organized solutions <ref type="bibr" target="#b18">[19]</ref>.</p><p>First, we introduce the notation B n as the set of better-response for MU n given other MUs' strategy s -n , i.e.,</p><formula xml:id="formula_76">B n (s -n ) = {s n |s n ∈ S n , Ūn (s n , s -n ) &gt; Ūn (s n , s -n )}. (<label>48</label></formula><formula xml:id="formula_77">)</formula><p>We consider a variant of BRI <ref type="bibr" target="#b31">[32]</ref> as follows.</p><p>Definition 2. In the proposed BRI algorithm, all MUs follow the subsequent procedures. At t = 1, all MUs start with a random strategy. Then, at time t, each MU selects its new action s t n as follows: • With probability η n , s t n = s t-1 n ; where η n is the inertia probability that player n repeats its previous action <ref type="bibr" target="#b31">[32]</ref>.</p><p>• With probability 1 -η n , s t n is uniformly sampled from its better-response set B n (s t-1</p><p>-n ). If the set is empty, s t-1 n is repeated.</p><p>Remark 1. Since G 3 is an EPG, which is also a weakly acyclic under better replies game (WABRG), a better-response process with inertia can converge to a pure NE of G 3 <ref type="bibr" target="#b31">[32]</ref>.</p><p>Remark 2. The better-response dynamic with inertia generates a sequence of strategy profiles where the current joint action only depends on the joint action of one time slot before in a probabilistic manner. Hence, a sequence of strategy profiles generated by the better-response dynamic can be considered as a Markov process where each strategy profile is a state, with a transition matrix denoted by P 0 <ref type="bibr" target="#b32">[33]</ref>. Since a better-response dynamic always converges to a NE, we denote the stationary distribution of P 0 by µ 0 , where µ 0 puts positive probabilities on the strategy profiles which are NE of G 3 .</p><p>We have considered a better-response dynamic which can converge to a NE without environment's randomness. Since the environment is time-varying in practice, the previous method should be modified. Q-learning is a robust approach for dealing with such uncertainty where players can learn their utilities over time <ref type="bibr" target="#b30">[31]</ref>. Now, we introduce a Q-learning variant of better-response dynamic with inertia in Algorithm 2. In this algorithm, each MU independently maintains and periodically updates a function Q n 5 : S → R, which is used to learn the strategies' rewards. This function is updated period-by-period as follows.</p><formula xml:id="formula_78">Q t n ( Ŝ) = Q t-1 n ( Ŝ) + ν t I{S t = Ŝ}(U t n (S t ) -Q t-1 n ( Ŝ)),<label>(49)</label></formula><p>where ν t is a learning parameter; Ŝ is an arbitrary strategy profile; and I is the indicator function. Coupling with Q-learning, each MU performs better-response dynamic with inertia, but also with added exploration (see Line 3 of Algorithm 2). That is, at each iteration t, each MU is first allowed to explore by randomly sampling its strategy space with probability t n . Else with probability 1 -t n , each MU performs BRI. Within the "MU Offloading" duration in each timeslot, MUs make decisions and execute their chosen actions. Then, in the "Result Returning" duration, MUs observe their true payoffs U t n (S t ) by acknowledging the number of CPU cycles that is processed and use U t n (S t ) update their Q-functions as in (49).</p><p>5 Q-function stands for the Quantity of Action-State function <ref type="bibr" target="#b33">[34]</ref>.</p><p>Algorithm 2 Distributed Learning Based Multi-User Offloading Algorithm</p><p>Input: K, N , ηn, Cν , c , ρν , L; 1: s 0 n is selected with probability 1 |Sn| and MUs initialize their Q 0 n (S 0 ). 2: for t = 1, . . . , Tmax do 3:</p><p>for n = 1, . . . , N do • With probability t n ∈ (0, 1), s t n is chosen with probability 1 |Sn| .</p><p>• With probability 1 -t n , each MU -With probability ηn, s t n ← s t-1 n ; -With probability 1 -ηn, s t n is chosen with probability</p><formula xml:id="formula_79">1 |Bn(s t-1 -n )| . If |Bn(s t-1 -n )| = ∅, s t n ← s t-1 n . 4:</formula><p>end for 5:</p><p>Each MU observes U t n (S t ) in the "Result Returning" duration. 6:</p><p>Each MU updates its Q-function by following (49). 7: end for Q-learning, MUs' aim is to learn their expected payoffs Ūn ( Ŝ) for a strategy profile Ŝ if Ŝ is played a sufficient number of times. It should be noted that learning expected payoffs is different from estimating the channel statistics for H, as implemented by some existing works <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b34">[35]</ref>. <ref type="foot" target="#foot_2">6</ref>Moreover, learning payoffs allows for distributed model-free implementation and avoids costly channel estimations and signaling overheads. This algorithm is run in T max time slots, which is a hyper-parameter.</p><p>There is a trade-off between exploration and exploitation in Q-learning. Exploration aims to continually try new strategies, while exploitation aims to capitalize on already high-payoff strategies. One of the key challenges of Q-learning is that the exploration/exploitation processes need to be balanced in such way that the system performance as well as convergence speed are optimized.</p><p>Next, we will show that Algorithm 2 converges to a NE of G 3 . Theorem 3. Utilizing Algorithm 2 for G 3 , we achieve the same convergence behavior as the BRI dynamic in Definition 2 does for G 3 , under the following conditions <ref type="bibr" target="#b30">[31]</ref> 1.</p><formula xml:id="formula_80">ν t = (C ν + # t ( Ŝ)) -ρν where C ν &gt; 0, ρ ν ∈ ( 1 2 ,<label>1</label></formula><p>]; and # t ( Ŝ) is the number of times the strategy profile Ŝ has been selected up to time t.</p><formula xml:id="formula_81">2. t n = t = c t -1 |N | , ∀n ∈ N where c &gt; 0 is a positive constant.</formula><p>Proof. This theorem is proven as follows. We observe that Algorithm 2 results in a sequence of strategy profiles which is a Markov process with a time-varying transition matrix P t due to the presence of t . Thus, it is a non-stationary Markov process. We will show that after a large number of periods T max , Algorithm 2's reward estimation Q n (S) under aforementioned conditions will be sufficiently close to the true mean rewards Ūn (S) for a given S. Moreover, Algorithm 2 creates a perturbed process P t corresponding to the original unperturbed process P 0 <ref type="bibr" target="#b32">[33]</ref>, i.e., the BRI without exploration in Def. 2. The Markov process P t will be proven to have a stationary distribution which has positive probabilities on the stochastically stable states <ref type="bibr" target="#b32">[33]</ref>, which are basically strategy profiles * that form a subset of the strict Nash equilibria of G 3 . Firstly, the convergence to true means of strategies' rewards estimated by Q-learning follows from Lemma 4.1 in <ref type="bibr" target="#b30">[31]</ref>. That is, lim t→∞ |Q t n (S) -Ūn (S)| = 0 with probability 1 when the two aforementioned conditions are satisfied.</p><p>Next, the Markov process generated by Algorithm 2 can be shown to be strongly ergodic <ref type="bibr" target="#b35">[36]</ref> (proof omitted for brevity). As a result, the transition matrix P (50)</p><p>Then, based on the theory of regular perturbed Markov process <ref type="bibr" target="#b32">[33]</ref>, we prove that the strategies selected by Algorithm 2 converge to a NE of G 3 . In fact, for any fixed t = , ∀t, the transition matrix of the perturbed Markov process P has following characteristics <ref type="bibr" target="#b32">[33]</ref>: (a) P is aperiodic and irreducible, (b) lim →0 P S,S = P 0 S,S , and (c) P S,S &gt; 0 for some . Hence, by definition, P is a regular perturbed process of P 0 . As a result, P also has a steady-state distribution µ ; and the limit lim →0 µ , which equals µ * in (50), is in fact also µ 0 in Remark 1 according to Theorem 4 of <ref type="bibr" target="#b32">[33]</ref>. Also by this theorem, µ * has positive probabilities on the stochastically stable states, which are a subset of the strict Nash equilibria of G 3 . Thus, as t → ∞, G 3 shares the same convergence behavior as that of G 3 .</p><p>In summary, we have shown that under practical conditions, where the channel information is time-varying and unknown to players, the expected-payoff game in which each MU maximizes the long-term average payoff is an EPG. Subsequently, we propose the strategy learning dynamic based on Q-learning which can help MU learn their utilities and converge their strategies to a NE of the expected-payoff game. In the next section, we will provide numerical results investigating the proposed algorithms. V. NUMERICAL RESULTS</p><p>Our simulations are run on Matlab using a computer with Intel Xeon CPU E5-1620 @ 3.6 Ghz processor. In this section, we evaluate the performance of our proposed algorithms based on the parameters specified in <ref type="bibr" target="#b36">[37]</ref>, <ref type="bibr" target="#b37">[38]</ref>. We summarize our default simulation parameters in Table <ref type="table" target="#tab_2">I</ref>, if not specified. In particular, we consider the device N810 with a CPU frequency of 400 × 10 6 cycles/sec and computational power 0.8W. To show the relationship between the number of computational cycles and the input bits, we choose κ = 8900 cycles/byte for pdf2text application. The fast fading element of each channel between a CAP and the MD g t n,k is assumed to follow Rayleigh distribution. The weights are set at λ D = 2 × 10 -6 and λ E = 600. All simulation results are obtained by averaging over 2×10 5 channel realizations. The values of T Off and T l in Table <ref type="table" target="#tab_2">I</ref> are custom-designed to be compatible with existing mobile networks (e.g., in LTE FDD where a radio subframe is 1 ms long <ref type="bibr" target="#b38">[39]</ref>) and to meet the quality of experience requirements for specific applications (e.g., 80 ms for mobile gaming <ref type="bibr" target="#b20">[21]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Convergence Analysis</head><p>We investigate the convergence of Algorithm 1 and Algorithm 2 using the following topology shown in Fig. <ref type="figure">3</ref>. There are 17 MUs and 7 CAPs. We assume that a CAP coverage is about 7m, while the CAP-to-CAP distance is 10m. MU can associate with a CAP if the MU is in its coverage.</p><p>1) Multi-User Computation Offloading Game under Static CSI: We first show the dynamics of MUs' offloading strategies and potential function value of the one-shot game G 1 using Algorithm 1 in Fig. <ref type="figure" target="#fig_3">4</ref>. Algorithm 1 terminates after holding a strategy profile in T ter = 100 iterations, which is approximately equal to 4 × N . To further verify that the converged point is a NE, we look at the dynamics of the potential value ψ (1) of the game G 1 in Fig. <ref type="figure" target="#fig_3">4(a)</ref>. The result illustrates that the value of potential function ψ (1) monotonically increases and saturates at one of its maximum, which is a NE according to the property of potential game. In addition, for illustration purpose, we show the strategy and power adaptation of only a few selected players in Figs. 4(b) and 4(c). Note that, in Fig. <ref type="figure" target="#fig_3">4</ref>(b), decisions 1-7 are CAPs' indices and 0 is for local processing. We observe that the strategy profiles of selected MUs remain unchanged after 25 iterations. In short, the game achieves a NE within a small number of iterations.</p><p>2) Multi-User Computation Offloading Game under Time-Varying and Unknown CSI: We also investigate the convergence of MUs' offloading strategies and potential function values of the dynamic game G 3 . We use the same simulation set up as the previous part, except the number of periods is 6×10 5 . Algorithm 2 is used to obtain the final solution for G 3 . To verify that the algorithm approaches the NE, Fig. <ref type="figure" target="#fig_6">5</ref>(b) looks at the dynamics of the time-average potential function ψ (2)  in (44) of the game G 3 . We observe that ψ (2) also increases monotonically over time and converges to a stable point at approximately -8.54, which approaches a NE of the expectedpayoff game G 3 . Fig. <ref type="figure" target="#fig_6">5</ref>(a) illustrates the dynamics of the instantaneous potential function ψ (1) in (19) of the system, which also seems to fluctuate around -8.54 in most of the periods. Moreover, we can observe that its value frequently drops in earlier stages of the game because the probability that MUs perform exploration t is high. After a sufficiently large number of periods, the frequency of fluctuation is rarer because t decreases which means that MUs perform exploitation more often. Next, Fig. <ref type="figure" target="#fig_6">5(c</ref>) investigates the Q-values of one selected MU (MU 1) on a few sampled actions 7 . As we can see, the Q-values of these strategy profiles eventually converge as predicted by Theorem 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Algorithm Comparison 1) Performance with Respect to the Number of MUs:</head><p>We compare the performance of the proposed Algorithm 2 (labeled Unknown CSI) for the dynamic game with three baselines, i.e., (a) Full CSI: each MU knows the full CSI as in the one shot and deviates its strategies in every period by following Algorithm 1, (b) Random Assignment: each MU randomly chooses its offloading decision and power allocation without 7 Regarding actions 1 and 4, MU 1 offloads to CAP 1 at 0 and 0.05 W, respectively, while simultaneously, MU 2 also offloads at 0.1 W. Regarding actions 2 and 3, MU 1 is the only one MU that offloads to CAP 1 at 0.05 and 0.1 W, respectively. further adaptation in each period, and (c) Local Processing: all MUs process their computation locally without further adaptation. We compare the four algorithms in three metrics: average payoff per MU, average energy consumption per MU, and average processed cycles per MU. We use the same simulation setups as the previous simulations except the network topology. Here, we set the number of CAPs at three. The positions of the three CAPs are those of CAPs 1, 2 and 3 in Fig. <ref type="figure">3</ref>. vary the number of MUs from 3 to 30 whose positions are random. As can be seen from Fig. <ref type="figure" target="#fig_7">6</ref>(a), the average payoff per MU of Full CSI are the highest but Unknown CSI can also achieve reasonably close results. Within the investigated range of MUs, Unknown CSI can achieve at least 87.87% average payoff of Full CSI. Meanwhile, the average payoffs decrease for all algorithms except Local Processing when the number of MUs increases, since there is increasing resource contention. Regarding Random Assignment, while starting higher than that of Local Processing, its payoff declines as the number of MUs grows and becomes lower than that of Local Processing as N ≥ 12. On the other hand, regarding Figs. 6(b) and 6(c), since more MUs locally execute their tasks as N increases, the energy consumptions and average processed cycles of Full CSI and Unknown CSI tend to approach those of local execution, similarly to behaviors of their payoffs. In short, offloading generally helps MUs reduce energy consumption and increase the number of processed cycles compared to local execution, but the improvement is lessened as N gets higher.</p><p>2) Performance with Respect to Applications: We investigate the performance of various algorithms with respect to  Instantaneous Potential Value, ψ  different applications. We consider five applications of varying computation to data ratio κ as in Table <ref type="table" target="#tab_2">II</ref>. For the other parameters, we use the same simulation setups as the section V-A including the topology. The MUs' average payoffs across the 5 applications are plotted for the previous four algorithms in Fig. <ref type="figure" target="#fig_9">7</ref>. We see that when κ is low (e.g., with gzip), the optimal decision for the MUs is to locally process their CPU cycles. When the ratio increases, the number of processed CPU cycles (and hence, payoffs) if MUs offload increases. As a result, MUs offload more tasks to CAPs. For a much higher κ such as the case of pdf2text (E72 data sheet), all schemes including Random Assignment are better than Local Processing, which implies that the MU's utilities, if computation is offloaded, are high even though there is severe interference.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of MUs</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Impacts of Weight Factors</head><p>In this section, we investigate the change in performance ratio's lower bound, energy consumption and the percentage of MUs offloading as we vary the ratio λ E λ D for different algorithms above. We set λ D at the default value. The value of λ E is chosen such that λ E λ D = 10 q , where q ∈ [7.4, 9.4]. We also set κ and W k at 1900 cycles/byte and 0.2MHz, respectively. For the other parameters, we use the same simulation setups as the section V-B1, except we use the same topology of Fig. <ref type="figure">3</ref>. For each λ E , since it is highly complex  to find the socially optimal solution, we take the performance ratio's lower bound of algorithms to be , following (33) of Proposition 1. In Fig. <ref type="figure" target="#fig_12">8</ref>(a), we observe that the performance ratio's bound of Algorithm 2 (Unknown CSI) is only slightly lower than that of Full CSI. Moreover, for both algorithms, the gaps between their lower bounds and the upper bound of 1 are acceptable. That is, when the ratio is from 10 7.4 to 10 8.5 , the performance ratio's lower bound values of Full CSI and Unknown CSI decrease from 0.77 to 0.53 and from 0.72 to 0.48, respectively. We can imply that the actual performance ratios of these two algorithms are effectively above 50% in IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. XX, NO. XX, XXXX λ E / λ D  VI. CONCLUSION In this paper, we investigate a multi-user multi-edge-node computation offloading problem, where each MU can increase their processed cycles and save their energy consumption by offloading rather than local processing. To tackle the severe interference due to the resource contention, we formulate the problem as a non-cooperative game where each user selfishly maximizes its own utility. Assuming that the channel information is static and given to MUs, we show that the game is an EPG and has at least one NE. We also design a best-response based offloading mechanism that can achieve a NE of the game and compute its PoA. Next, under practical conditions where the channel gain is time-varying and unknown to users, we show that the game where each MU selfishly maximizes its long-term average payoff is also an EPG. We then propose an offloading mechanism based on Q-learning and BRI in order to help MUs finding their long-term offloading strategies. Numerical results show that by performing the proposed Qlearning algorithm MUs' offloading strategies can converge to a stationary distribution and provide efficient offloading performance. In our future work, we may consider more general scenarios with user mobility taken into account.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The system model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>7 Fig. 3 .</head><label>73</label><figDesc>Fig. 3. The topology of CAPs and MUs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. The dynamics of (a) the potential value; (b) the offloading decision; and (c) transmission power of G 1 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Periods</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. The dynamics of (a) the instantaneous potential function of G 3 ; (b) the time-average potential function of G 3 ; and (c) Q-value of four sample actions of MU 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Algorithm comparison in three metrics, averaged over all MUs and periods: (a) payoff; (b) energy consumption; and (c) processed CPU cycles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Algorithm comparison in different applications.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Algorithm comparison over different weight ratios averaged over all MUs and periods in three metrics: (a) performance ratio's bound; (b) energy consumption; and (c) % MUs offloading.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE I DEFAULT</head><label>I</label><figDesc>PARAMETER SETUP.</figDesc><table><row><cell>Parameter</cell><cell>Value</cell></row><row><cell>N</cell><cell>17</cell></row><row><cell>K</cell><cell>7</cell></row><row><cell>r</cell><cell>7 m</cell></row><row><cell>CAP to CAP distance</cell><cell>10 m</cell></row><row><cell>Pmax</cell><cell>0.1 W</cell></row><row><cell>P Comp</cell><cell>0.8 W</cell></row><row><cell>T Off</cell><cell>1 ms</cell></row><row><cell>T l</cell><cell>3 ms</cell></row><row><cell>W k</cell><cell>0.1 MHz</cell></row><row><cell>fn</cell><cell>400 × 10 6 cyc/s</cell></row><row><cell>κ</cell><cell>8900 cycles/byte</cell></row><row><cell>ω 0</cell><cell>10 -13 W</cell></row><row><cell>inertia probability ηn</cell><cell>1/N</cell></row><row><cell>Cν</cell><cell>0.01</cell></row><row><cell>c</cell><cell>1</cell></row><row><cell>ρν</cell><cell>0.9</cell></row><row><cell>λ E</cell><cell>600</cell></row><row><cell>λ D</cell><cell>2 × 10 -6</cell></row><row><cell>No. channel realizations</cell><cell>2 × 10 5</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>In this section, as our discussion is restricted to within one single time slot, the time indicator is not present in the variable in order to simplify the notations. In subsequent sections where time dynamics are considered, a superscript t will be added to the variable where necessary.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>DINH et al.: DISTRIBUTED LEARNING FOR COMPUTATION OFFLOADING IN MOBILE EDGE COMPUTING</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_2"><p>In fact, estimating the average channels H does not translate to obtaining the mean payoff E H [U t n (S)] as E H [U t n (S)] = U t n (S| H) for general functions Un.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Date of publication xx xx, xxxx. This work was supported in part by the MOE ARF Tier 2 under Grant MOE2015-T2-2-104, the SUTD-ZJU Research Collaboration under Grant SUTD-ZJU/RES/01/2016, the SUTD-ZJU Research Collaboration under Grant SUTD-ZJU/RES/05/2016, and the National Research Foundation of Korea Grant funded by the Korea Government (MSIP) under Grant 2016R1A2B2014462. The associate editor coordinating the review of this paper and approving it for publication was V. Wong</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Ericsson mobility report: On the pulse of the networked society</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Ericsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ericsson, Sweden, Tech. Rep. EAB</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page">61078</biblScope>
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Heterogeneity in mobile cloud computing: Taxonomy and open challenges</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Sanaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Abolfazli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Buyya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys Tuts</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="369" to="392" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>First Quarter</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Joint optimization of radio and virtual machine resources with uncertain user demands in mobile cloud computing</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Multimedia, Early Access</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">MAUI: Making smartphones last longer with code offload</title>
		<author>
			<persName><forename type="first">E</forename><surname>Cuervo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Balasubramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wolman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Saroiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bahl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM MobiSys</title>
		<meeting>ACM MobiSys<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-06">Jun. 2010</date>
			<biblScope unit="page" from="49" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">CloneCloud: Elastic execution between mobile device and cloud</title>
		<author>
			<persName><forename type="first">B.-G</forename><surname>Chun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ihm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Maniatis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Patti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM EuroSys</title>
		<meeting>ACM EuroSys<address><addrLine>Salzburg, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011-04">Apr. 2011</date>
			<biblScope unit="page" from="301" to="314" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">SAMI: Service-based arbitrated multi-tier infrastructure for mobile cloud computing</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Sanaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Abolfazli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Shiraz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICCC</title>
		<meeting>IEEE ICCC<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-08">Aug. 2012</date>
			<biblScope unit="page" from="14" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">ThinkAir: Dynamic resource allocation and parallel execution in the cloud for mobile code offloading</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kosta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Aucinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mortier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM<address><addrLine>Orlando, FL, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-03">Mar. 2012</date>
			<biblScope unit="page" from="945" to="953" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Mobile edge computing: Survey and research outlook</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">B</forename><surname>Letaief</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/1701.01090" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Mobile-Edge Computing: Partial computation offloading using dynamic voltage scaling</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="4268" to="4282" />
			<date type="published" when="2016-10">Oct. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Offloading in Mobile Edge Computing: Task Allocation and Computational Frequency Scaling</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">Q</forename><surname>Dinh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">D</forename><surname>La</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">Q S</forename><surname>Quek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="3571" to="3584" />
			<date type="published" when="2017-08">Aug. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Joint optimization of radio and computational resources for Multicell Mobile-Edge Computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sardellitti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scutari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Barbarossa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Inf. Process. Netw</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="89" to="103" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Energy-efficient resource allocation for mobile-edge computation offloading</title>
		<author>
			<persName><forename type="first">C</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chae</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1397" to="1411" />
			<date type="published" when="2017-03">Mar. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Energy aware offloading for competing users on a shared communication channel</title>
		<author>
			<persName><forename type="first">E</forename><surname>Meskar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Todd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karakostas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Mobile Comput</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="87" to="96" />
			<date type="published" when="2017-01">Jan. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Decentralized computation offloading game for mobile cloud computing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="974" to="983" />
			<date type="published" when="2015-04">Apr. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Efficient multi-user computation offloading for mobile-edge cloud computing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Fu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="2795" to="2808" />
			<date type="published" when="2016-10">Oct. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A differential OFDM approach to coherence time mitigation in DSRC</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">L</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Laberteaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bahai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Int. Workshop VANET</title>
		<meeting>ACM Int. Workshop VANET<address><addrLine>CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Collaborative task execution in mobile cloud computing under a stochastic wireless channel</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">O</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="81" to="93" />
			<date type="published" when="2015-01">Jan. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Dynamic computation offloading for mobile-edge computing with energy harvesting devices</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">B</forename><surname>Letaief</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Sel. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="3590" to="3605" />
			<date type="published" when="2016-12">Dec. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A survey on applications of model-free strategy learning in cognitive wireless networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kwasinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Niyato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys Tuts</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1717" to="1757" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Enabling low-latency applications in fog-radio access networks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">Y</forename><surname>Shih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Chiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">Y</forename><surname>Wei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="52" to="58" />
			<date type="published" when="2017-01">Jan. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An evaluation of QoE in cloud gaming based on subjective tests</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jarschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schlosser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Scheuring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hossfeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Conf. IMIS</title>
		<meeting>IEEE Int. Conf. IMIS</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="330" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interference avoidance with dynamic inter-cell coordination for downlink LTE system</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yanikomeroglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE WCNC</title>
		<meeting>IEEE WCNC<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-04">Apr. 2009</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">On the interplay between global DVFS and scheduling tasks with precedence constraints</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gerards</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hurink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kuper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1742" to="1754" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient power control via pricing in wireless data networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">U</forename><surname>Saraydar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Mandayam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Goodman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="291" to="303" />
			<date type="published" when="2002-02">Feb. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Distributed uplink power control in multiservice wireless networks via a game theoretic approach with convex pricing</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Tsiropoulou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">K</forename><surname>Katsinis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Papavassiliou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="68" />
			<date type="published" when="2012-01">Jan. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A power control game based on outage probabilities for multicell wireless data networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Alpcan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Basar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Dey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="890" to="899" />
			<date type="published" when="2006-04">Apr. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Adaptive transmit policies for cost-efficient power allocation in multi-carrier systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>D'oro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mertikopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Moustakas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Palazzo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int. Symp. Workshops Model. WiOpt</title>
		<meeting>12th Int. Symp. Workshops Model. WiOpt<address><addrLine>Tunisia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-05">May 2014</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">D</forename><surname>La</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">H</forename><surname>Chew</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B.-H</forename><surname>Soong</surname></persName>
		</author>
		<title level="m">Potential Game Theory</title>
		<meeting><address><addrLine>Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International</publisher>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Utilitarianism, egalitarianism, and the timing effect in social choice problems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Myerson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Econometrica</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="883" to="897" />
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Leiserson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>The MIT Press</publisher>
		</imprint>
	</monogr>
	<note>Introduction to Algorithms, Third Edition, 3rd ed</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Convergent learning algorithms for unknown reward games</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Chapman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Leslie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rogers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">R</forename><surname>Jennings</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Control Optim</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="3154" to="3180" />
			<date type="published" when="2013-08">Aug. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Strategic learning and its limits</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>Young</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Oxford University Press</publisher>
			<pubPlace>Oxford, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The evolution of conventions</title>
	</analytic>
	<monogr>
		<title level="j">Econometrica</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="57" to="84" />
			<date type="published" when="1993-01">Jan. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Learning from delayed rewards</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J C H</forename><surname>Watkins</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<pubPlace>University of Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Energyoptimal mobile cloud computing under stochastic wireless channel</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kilper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">O</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="4569" to="4581" />
			<date type="published" when="2013-09">Sep. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Ergodicity in parametric nonstationary Markov chains: An application to simulated annealing methods</title>
		<author>
			<persName><forename type="first">S</forename><surname>Anily</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Federgruen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="867" to="874" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Energy efficiency of mobile clients in cloud computing</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Miettinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Nurminen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd USENIX Conference on Hot Topics in Cloud Computing</title>
		<meeting>2nd USENIX Conference on Hot Topics in Cloud Computing<address><addrLine>Boston, MA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-06">Jun. 2010</date>
			<biblScope unit="page" from="4" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Practical power modeling of data transmission over 802.11g for wireless applications</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Savolainen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karppanen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Siekkinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ylä-Jääski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Int. Conf. Energy-Efficient Comput</title>
		<meeting>1st Int. Conf. Energy-Efficient Comput<address><addrLine>Passau, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="75" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">LTE: the evolution of mobile broadband</title>
		<author>
			<persName><forename type="first">D</forename><surname>Astely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Dahlman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Furuskär</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jading</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lindström</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Parkvall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="44" to="51" />
			<date type="published" when="2009-04">Apr. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
