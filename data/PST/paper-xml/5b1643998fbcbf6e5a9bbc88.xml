<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Scalable and Privacy-Preserving Data Sharing Based on Blockchain</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Bao-Kun</forename><surname>Zheng</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">School of Information Management for Law</orgName>
								<orgName type="institution">China University of Political Science and Law</orgName>
								<address>
									<postCode>102249</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Lie-Huang</forename><surname>Zhu</surname></persName>
							<email>liehuangz@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>CCF, IEEE</roleName><forename type="first">M</forename><surname>Ember</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Meng</forename><surname>Shen</surname></persName>
							<email>shenmeng@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Feng</forename><surname>Gao</surname></persName>
							<email>gaofengbit@foxmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Chuan</forename><surname>Zhang</surname></persName>
							<email>chuanz@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yan-Dong</forename><surname>Li</surname></persName>
							<email>leeyandong@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jing</forename><surname>Yang</surname></persName>
							<email>jingy@bit.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Beijing Institute of Technology</orgName>
								<address>
									<postCode>100081</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Scalable and Privacy-Preserving Data Sharing Based on Blockchain</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">14C9C91898B2C5CD08E16C673FC44F8F</idno>
					<idno type="DOI">10.1007/s11390-018-1840-5</idno>
					<note type="submission">Received November 20, 2017; revised March 28, 2018.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>data sharing</term>
					<term>privacy-preserving</term>
					<term>cloud computing</term>
					<term>blockchain</term>
					<term>Paillier cryptosystem Regular Paper Special Section on Blockchain and Cryptocurrency Systems</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>With the development of network technology and cloud computing, data sharing is becoming increasingly popular, and many scholars have conducted in-depth research to promote its flourish. As the scale of data sharing expands, its privacy protection has become a hot issue in research. Moreover, in data sharing, the data is usually maintained in multiple parties, which brings new challenges to protect the privacy of these multi-party data. In this paper, we propose a trusted data sharing scheme using blockchain. We use blockchain to prevent the shared data from being tampered, and use the Paillier cryptosystem to realize the confidentiality of the shared data. In the proposed scheme, the shared data can be traded, and the transaction information is protected by using the (p, t)-threshold Paillier cryptosystem. We conduct experiments in cloud storage scenarios and the experimental results demonstrate the efficiency and effectiveness of the proposed scheme.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>With the development of network technology, the amount of personal data grows rapidly <ref type="bibr" target="#b0">[1]</ref> . To store and share the data, it is attractive to shift the data storage and sharing applications into the cloud for resources and economic savings <ref type="bibr" target="#b1">[2]</ref> , which however brings challenges to information security, such as data loss and privacy leakage <ref type="bibr" target="#b2">[3]</ref> . Moreover, by storing the data in the cloud, people loss full control to their personal data, which makes it essential to ensure the confidentiality, integrity and privacy of the data. Besides the above challenges, in some data sharing applications, the data is usually required to be maintained by multiple parties, such as in certification authorities to protect the private root certificate keys <ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref> . How to solve the information security problem under this new situation is still an urgency and one of the most concerned issues in the field of data sharing <ref type="bibr" target="#b6">[7]</ref> .</p><p>Inspired by the idea of shared economy <ref type="bibr" target="#b8">[8]</ref> , we can imagine such a scenario that users with similar data can conduct data transactions according to their needs or get meaningful results through computation. They can make an alliance without a trusted center authority (CA), which is supported by a novel technology, called blockchain <ref type="bibr" target="#b0">1</ref> â—‹ . Blockchain inspires us that data sharing can maintain a tamper-proof ledger shared by the participating users without the need of a trusted third party. In this way, data sharing can be effectively integrated and utilized. In our scenario, users can use blockchain to prevent the shared data from being tampered, and can use blockchain to carry out transactions that can be tracked. Using cryptographic techniques is powerful to preserve the privacy of the sensitive data. In 1979, Shamir <ref type="bibr" target="#b9">[9]</ref> and Blakley <ref type="bibr" target="#b10">[10]</ref> proposed a (p, t)-threshold secret sharing scheme designed to protect the secret by distributing a secret among a group of p participants. The ciphertexts can be decrypted accurately only if more than t participants cooperate with one another. The (p, t)-threshold secret sharing scheme has been used in various applications, such as certification authorities to protect the private root certificate keys <ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref> .</p><p>In this context, it is very meaningful to study the privacy security research of data sharing based on the combination of the blockchain and (p, t)-threshold encryption technology. To solve the above-mentioned challenges, we propose a scheme to implement scalable and privacy-preserving data sharing based on blockchain. The main purpose is to realize the privacy protection of data shared by multiple parties. To summarize, the contributions of our work are as follows.</p><p>1) We propose a new scalable and privacypreserving data sharing scheme based on blockchain. In the proposed scheme, blockchain is used to prevent the shared data from being tampered, and carry out transactions which can be tracked. The data is encrypted and stored in the cloud, and the key is allocated by CA. Moreover, in the scheme, the shared data can be traded, and the transaction information is encrypted among multiple users to ensure its security and reliability.</p><p>2) We propose a new method to protect multi-party data privacy in blockchain. In this new method, the (p, t)-threshold Paillier cryptosystem is applied to the blockchain. The private key sk is separated (denoted as sk 1 , sk 2 , ..., sk p ) and distributed to p participants. If one party wants to decrypt the ciphertext c, at least (t -1) private keys of other parties are needed to be aggregated.</p><p>3) We analyze the security of the proposed scheme, and the analysis proves that our scheme can capture the privacy preservation. Moreover, performance evaluation via extensive experiments demonstrates the efficiency and effectiveness of the proposed scheme.</p><p>The remainder of this paper is organized as follows. Section 2 introduces preliminaries of our work. Section 3 gives a concrete description of our method model. The detailed design of privacy-preserving protocol is presented in Section 4. Section 5 and Section 6 carry out privacy and performance analysis respectively. Section 7 summarizes related work. Section 8 concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminary</head><p>In this section, we introduce blockchain, homomorphic encryption, and the Paillier cryptosystem because they are important components of our proposed scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Blockchain</head><p>Blockchain is essentially a peer-to-peer (P2P) network distributed ledge database, which is a series of data blocks generated by cryptography. Each transaction is approved by the majority of the participants in the system <ref type="bibr" target="#b5">[6]</ref> . A complete blockchain system contains a lot of technologies, such as a P2P network, distributed ledger, asymmetric encryption, consensus mechanism, and smart contract <ref type="bibr" target="#b11">[11]</ref> . It is these technologies that make the blockchain a continuous engine on distributed networks, providing a steady flow of power to the transaction validation links on the blockchain.</p><p>Blockchain has the characteristics of decentration, timing data, collective maintenance, programmability, security, trust, etc. <ref type="bibr" target="#b11">[11]</ref> 1) Decentralization. The validation, bookkeeping, storage, maintenance, and transmission of blockchain data are based on a distributed system structure. The blockchain uses pure mathematical methods instead of central institutions to establish trust relations among distributed nodes, thus forming a decentralized and trustworthy distributed system.</p><p>2) Timing Data. Blockchain stores data with a timestamped block structure. Thus, it adds time dimension to data, and has extremely strong verifiability and traceability.</p><p>3) Collective Maintenance. The blockchain system adopts specific economic incentive mechanism to ensure that all nodes in the distributed system can participate in the verification process of data blocks (such as bitcoin mining process). The new block is added to blockchain through the consensus algorithm.</p><p>4) Programmability. Blockchain can provide flexible script code system, and support users to create advanced smart contracts, currencies or other decentralized applications. For example, Ethereum<ref type="foot" target="#foot_0">2</ref> </p><p>â—‹ that provides Turing-complete script language for the user to build any smart contract or transaction type can be precisely defined. 5) Security and Trust. Blockchain adopts asymmetric cryptography principle to encrypt data. The consen-sus algorithm forms a computing power to resist external attack, and prevent the blockchain data from being tampered. Thus, blockchain has higher security.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Homomorphic Encryption and Paillier Cryptosystem</head><p>Homomorphic encryption is first proposed by Rivest et al. <ref type="bibr" target="#b12">[12]</ref> in 1978. Homomorphic encryption allows users to directly perform algebraic operations specific to ciphertext, get results, and perform the same operation on the same plaintext encrypted result. The public key pk and the private key sk are generated by the security parameter Î». pk is used to encrypt plaintext and sk is used to decrypt the ciphertext. Supposing a plaintext m âˆˆ Z n , where n is a large positive integer and Z n is the set of integers modulo n, we denote the encryption of m as E pk (m). Homomorphic encryption has the properties</p><formula xml:id="formula_0">E pk (m 1 + m 2 ) = E pk (m 1 ) E pk (m 2 ), E pk (a Ã— m 1 ) = a E pk (m 1 ),</formula><p>where m 1 and m 2 are the plaintexts that need to be encrypted and a is a constant. The Paillier cryptosystem is a kind of encryption systems based on the high order residue class problem proposed by Pailler in 1999 <ref type="bibr" target="#b13">[13]</ref> . The homomorphism properties <ref type="bibr" target="#b14">[14]</ref> of the system can be used to construct many practical and efficient cryptographic algorithms. In this paper, we mainly study to protect multi-party data privacy, thereby the threshold Paillier cryptosystem is used in our scheme, as it not only has additive homomorphic properties but also satisfies the design of a threshold cryptosystem.</p><p>In this paper, we adopt the (p, t)-threshold Paillier cryptosystem, in which the private key sk is divided (denoted as sk 1 , sk 2 , ..., sk p ) and distributed to p parties. Each party has an incomplete private key. If a party wants to decrypt the ciphertext, at least (t -1) parties are needed.</p><p>Specifically, in the step of decryption, each party i (1 &lt; i &lt; p) is required to compute its partial decryption c i by using its private key sk i , as</p><formula xml:id="formula_1">c i = c 2âˆ†ski ,<label>(1)</label></formula><p>where âˆ† = p!. Then based on the combining algorithm in [12], at least t partial decryptions can be combined together to get the plaintext m.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Scalable Storage and Privacy-Preserving Model</head><p>In this section, we first formalize the entities and operations involved in our scalable storage and privacypreserving model in blockchain. Second, we give the privacy assumption, and then show the design objectives. User Layer. Users in the user set have the same kind of data, and they trade data through data sharing, or get meaningful results by computing. Users can use blockchain to prevent the shared data from being tampered, and can further use blockchain to carry out transactions that can be tracked.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">System Model</head><p>Data Layer. Data represents information that users want to protect and share. Users in the user set can collectively maintain the data. To protect data privacy, the data is encrypted using the Paillier cryptosystem. After that, the encrypted data is uploaded to the cloud for sharing. Because the threshold homomorphic cryptosystem is used, users in the user set can perform calculations on the data to decrypt the ciphertexts if needed.</p><p>Cloud Layer. The cloud is used to store encrypted data from users. The cloud provides encrypted data for uploading and downloading services, as well as reading and writing interactions with the block chain.</p><p>Blockchain Layer. Blockchain provides a powerful abstraction for the design of distributed protocols. The cloud can write contents into the blockchain and read the contents from it. Once a block is collectively accepted, it is practically impossible to change it or remove it, which is guaranteed by the nature of the blockchain <ref type="bibr" target="#b11">[11]</ref> . User data can also be traded through the blockchain. In our scheme, the transaction information is encrypted using the Paillier cryptosystem, and it can be decrypted with the consent of the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Privacy Assumption</head><p>In this paper, we adopt two assumptions: there are at most (t -1) parties colluding with one another and all the parties are semi-honest <ref type="bibr" target="#b14">[14]</ref> . The collusion model assumes a user cannot collude with other more than (t -1) users, which means a user cannot decrypt the ciphertexts by colluding with other parties. The semihonest model assumes that all parties are honest but curious, which means they strictly abide by our protocol design, but each party will try to deduce the private information of other parties during the execution of the protocol. These assumptions are reasonable in most blockchain transaction scenarios, since 1) all parties wish to get the right results and abide by the common benefits of the protocol, and 2) users usually do not know one another, and even if they know one another, they may not want to divulge their private information to others.</p><p>Before entering the details of our privacy requirements, we observe that the main purpose of blockchain is to protect privacy. More importantly, we aim to protect data privacy and transaction information privacy at the same time. The definition of data privacy and transaction information privacy is given below.</p><p>Definition 1 (Threshold). Suppose there are p users, denoted as p = {1, 2, ..., P }, and t users, represented as t = {1, 2, ..., T }(t p). At least, t users can decrypt the encrypted data. In this procedure, each value should be confidential to any party except the user who provides this value.</p><p>Definition 2 (Data Privacy). Some user data which occupies a large amount of storage space will be stored in the cloud, but the hash value of the data is stored on the blockchain. The data stored in the cloud is encrypted using the Paillier cryptosystem. The key is distributed to p users, and each user has only one part of the key, and a threshold user key combination can be used to decrypt the data, so as to ensure the privacy of user data.</p><p>Definition 3 (Transaction Information Privacy). When user A wants to send some coins to user B, user A does not want anyone to know with certainty that the coins go to user B. The transaction information is encrypted using the Paillier cryptosystem, so that other users cannot know the information. Thus, the privacy of the transaction information is protected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Design Goals</head><p>In this paper, we mainly aim to protect data privacy and transaction information privacy as defined in Subsection 3.2. Meanwhile, it is necessary that the servers can still provide high-quality service when operating on data storage.</p><p>Besides the objective on privacy preservation, the system should have the following design goals.</p><p>High Accuracy Service. CA completes key distribution and verification with high accuracy.</p><p>Low Response Time Service. The cloud completes the data storage, key distribution and verification process in an acceptable period of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation</head><p>In this section, we discuss the details of our novel privacy-preserving scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Privacy-Preserving Scheme Overview</head><p>Fig. <ref type="figure">1</ref> shows our scalable storage and privacypreserving scheme in blockchain. We assume that a semantically secure (p, t)-threshold Paillier cryptosystem has been established by the third party. Here p refers to the number of parties including CA and users, and t is the minimum number of parties required to complete the decryption. Thus, the public encryption key pk = (g, n) is public to each party in this scheme; however, the matching private decryption key sk is divided and distributed to all parties (i.e., party i can get his private key sk i ). In Fig. <ref type="figure">1</ref>, the scheme can be divided into four phases.</p><p>Phase 1: Encrypt and Decrypt User Data. The user's privacy data is encrypted by the Paillier cryptosystem, CA is responsible for the distribution of privacy keys, and the encrypted data can be decrypted with at least t users.</p><p>Phase 2: Upload and Download Files. The cloud supports the following operations: upload and download. In addition, the cloud generates data hash values, which are used to generate a proof of data.</p><p>Phase 3: Record in Blockchain and Read from Blockchain. The cloud can write contents into the blockchain and read the contents from it.</p><p>Phase 4: Transaction. Users in the user set can trade their shared data through the blockchain. The transaction information is encrypted with the Paillier cryptosystem and it can be decrypted with at least t users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Data Privacy-Preserving Protocol</head><p>In order to protect the privacy and tamper resistance of user data, it is necessary to encrypt the data. In this paper, since the data is maintained by multiple parties, the encrypted data requires a certain number of users to consent to decrypt it. We adopt the (p, t)threshold Paillier cryptosystem. The private key sk is separated (denoted as sk 1 , sk 2 , ..., sk p ) and distributed to p users. If one party wants to decrypt the ciphertext c, at least (t -1) private keys of other parities need to be aggregated.</p><p>The specific process is as follows.</p><p>â€¢ Step 1. According to</p><formula xml:id="formula_2">c = E pk (m) = g m r n mod n 2 ,</formula><p>where the plaintext m âˆˆ Z n with the public key pk = (g, n) and r âˆˆ Z * n (Z * n denotes the multiplicative group of invertible elements of Z n ) are selected randomly and privately by this user. Each user k âˆˆ K encrypts value v k and sends the ciphertext E pk (v k ) to the data center.</p><p>â€¢ Step 2. According to the homomorphic property</p><formula xml:id="formula_3">E pk (m 1 + m 2 ) = E pk (m 1 ) + E pk (m 2 ) = g m1+m2 (r 1 r 2 ) n mod n 2 ,</formula><p>where m 1 , m 2 are the plaintexts that need to be encrypted, and r 1 , r 2 âˆˆ Z * n are the private random. Cloud calculates</p><formula xml:id="formula_4">C = E pk ( K k=1 v k ) = K k=1 E pk (v k ).</formula><p>CA selects t users as needed and sends C to them.</p><p>â€¢ Step 3. Each selected user k â€² calculates the partial decryption C k â€² of C based on (1) and sends C k â€² to cloud.</p><p>â€¢ Step 4. Cloud combines it with (t -1) partial decryptions received from users to get the result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Data Uploading and Downloading Protocol</head><p>The operation between the user and the cloud is to upload and download data.</p><p>1) Uploading Protocol. The uploading protocol is executed between the cloud and users who aim to upload a file f . Let H : {0, 1} * â†’ {0, 1} l be a cryptographic hash function, where l represents the token size. The specification of the uploading procedure is shown as follows.</p><p>â€¢ Step 1. For a file f to be uploaded, user 1 first generates a hash key K f = H(f ), where H is a hash function. K f can identify the local location of the file f .</p><p>â€¢ Step 2. To achieve confidentiality, user 1 encrypts the data file f as f * = E pk (f ). user 1 then saves K f in the local place, computes a digital fingerprint K * f = H(f * ) of f , and saves it in the local place.</p><p>â€¢ Step 3. U ser 1 sends f * and K * f to the cloud.</p><formula xml:id="formula_5">â€¢ Step 4. Upon receiving K * f , the cloud will compute K * * f = H(K * f ).</formula><p>Each user can upload their own data in this way.</p><p>2) Downloading Protocol. The specification of the downloading procedure is shown as follows.</p><p>â€¢ Step 1. A client user 2 issues a request to cloud to download a file f attached to K * * f . â€¢ Step 2. Upon receiving the package (f * , K * * f ), user 2 fist computes if H(H(f * )) = K * * f . If not, the user requests. If the equation is established, then user 2 can decrypt it to f with sk.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Record in Blockchain Protocol</head><p>1) Data Block. To ensure that the record content is trusted and untampered, the data hash value is stored in the item structure we built. The hash value of each item is put into the item block structure, which can effectively reduce the search space and speed up the users' checking speed of the record. The data block is made up of multiple item blocks, and the hash value is calculated to get the Merkle root of the data block. Merkle root is submitted to the blockchain so that the data cannot be tampered. Each item block stores only the hash value of item and a header information, which not only facilitates the propagation of each block in the P2P network, but also reduces the cost of data validation. Each item can store 10 pieces of data, each containing three kinds of information: the data owner public key, the metadata, and the hash value. The storage structure and the item data structure of Merkle tree are shown in Fig. <ref type="figure">2</ref> and Fig. <ref type="figure">3</ref>  2) Smart Contract. The smart contract is used to write data information to the blockchain. The spec-ification of the smart contract procedure is shown as follows.</p><p>â€¢ Step 1. The user records the request and presents the public key as the identity.</p><p>â€¢ Step 2. A representative node accepts the request.</p><p>â€¢ Step 3. A representative node broadcasts the request that has accepted.</p><p>â€¢ Step 4. The user submits the record.</p><p>â€¢ Step 5. The representative node adds the record to the item according to the users' public key.</p><p>â€¢ Step 6. The representative node broadcasts item validation information.</p><p>â€¢ Step 7. The representative node verifies the record, and other nodes update the data.</p><p>â€¢ Step 8. Check the number of item blocks every 1 minute, up to 10 to make up a data block, and calculate the Merkle root of the block.</p><p>â€¢ Step 9. Anchor the Merkle root of all newly generated data blocks to the blockchain.</p><p>â€¢ Step 10. Return to step 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Transaction Information Privacy-Preserving Protocol</head><p>Our protocol also supports the partial anonymity of the transaction by using the blind property of the Paillier cryptosystem. Image that Alice wants to send some coins to Bob, but she does not want anyone else to know that the coins are for Bob. To do this, she chooses a certain number of accounts to form an anonymous set, and supposes the number is n. Then we pick (n -1) random addresses from the anonymity set. Finally, she executes a transfer, where she sends the certain number of coins to Bob's address and zero coins to all the other (n -1) random addresses. Now, the ciphertexts of the balances of the (n -1) random accounts that Alice chooses will change but the actual balances will not because the Paillier cryptosystem has the blinding property.</p><p>1) To create a key pair, we first choose two primes, g and n, with an equal length. The encryption key pk will be N = g Ã— n and the decryption key sk will be Î» = (g -1) Ã— (n -1).</p><p>2) To encrypt a message m âˆˆ Z n with the public key pk = (g, n), we pick a random integer r âˆˆ Z * n and compute the ciphertext as</p><formula xml:id="formula_6">E pk (m, r) = (N + 1) m Ã— r N mod N 2 .</formula><p>3) To decrypt, we calculate the original message as</p><formula xml:id="formula_7">m = (E pk (m, r) Î» mod N 2 ) -1 N Ã— Î» -1 mod N.</formula><p>We can also recover the random integer r used in a given ciphertext by the formulas</p><formula xml:id="formula_8">r = c N -1 mod Î» mod N, c = E pk (m, r) Ã— (N + 1) -m mod N,</formula><p>according to the homomorphic properties.</p><formula xml:id="formula_9">E pk (m 1 , r 1 ) Ã— E pk (m 2 , r 2 ) = E pk (m 1 + m 2 , r 1 Ã— r 2 ), E pk (m, r) k = E pk (k Ã— m, r k ).</formula><p>Since the Pailier cryptosystem has the blinding property</p><formula xml:id="formula_10">E pk (m, r 1 Ã— r 2 ) = E pk (m, r 1 ) Ã— E pk (0, r 2 ),</formula><p>it can change a ciphertext without changing the corresponding plaintext.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Privacy Analysis</head><p>As discussed before, the privacy threats mainly come from the parties themselves in practical systems. Thus, the goal of our scheme is to protect the data of each user from being disclosed to other parties. Since our scheme is built upon the proposed data privacypreserving protocol, we analyze the security of the proposed protocol in this section.</p><p>In the data privacy-preserving protocol, the data is exchanged only between the data center and users, and all the exchanged data is ciphertexts. Although some users get the ciphertext of summation</p><formula xml:id="formula_11">E pk ( K k=1 v k ),</formula><p>they cannot decrypt it because we use the (p, t)threshold Paillier cryptosystem and assume that a user cannot collude with more than (t -1) other users. Therefore, after the protocol is executed, the user will learn nothing. Moreover, the ciphertext E pk (v k ) cannot be decrypted by the data center, and what the data center can know at last is just the summation K k=1 v k , based on which it cannot deduce the private key v k of each user. Therefore, the privacy of each user's private key is guaranteed by this protocol.</p><p>Then we can summarize the data privacy-preserving goal of our scheme as follows.</p><p>Assume K 3 and for each part m âˆˆ M , there are at least two users k 1 , k 2 âˆˆ K giving different values (i.e.,</p><p>x k1 m = x k2 m ). Also suppose the parties are semi-honest and there is no collusion among them. Then after the execution of the data privacy-preserving protocol, the values of each user will not be disclosed to others.</p><p>Next, in the transaction information privacypreserving protocol, an attacker who knows a transfer will not be able to know whether Alice really transfers coins to a given address. In fact, only Alice knows to which addresses the coin was transferred. Even Bob only knows that he received some coins, and knows nothing about the amount of coins transferred to another address. Therefore, if an attacker knows that Alice transferred coins to the n accounts in the transfer, only the probability of <ref type="bibr" target="#b0">1</ref> n is chosen for the Bob account. However, if Alice intends to send some transfers to Bob, she needs to always use her anonymous account set used in the first transaction. Otherwise, the attacker will see multiple transactions where Bob's address appears together with other addresses that never appear again (or not often) and will assume that Alice made those transfers to Bob's address while trying to hide it by using different anonymity sets for each transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Performance Evaluation</head><p>In our implementation, we set the security parameter n = 256. All the users are implemented in Java and the experiment is conducted on some desktop computers which are running Windows 10 and equipped with Intel Core TM I7 processor with 2.40 GHz and 4 GB RAM. As for blockchain, we select the Fabric<ref type="foot" target="#foot_1">3</ref> â—‹ as the underlying technology of the blockchain-based settlement system, which is an open source permissioned blockchain technique hosted by the Linux Foundation. We use zero-knowledge proof to identify encrypted transaction information in fabric. Our implementation of cloud interfaces with Aliyun servers, which are equipped with Intel Xeon processor with 2.60 GHz and 8 GB RAM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Evaluation of Key Generation Efficiency</head><p>In the Paillier cryptosystem, the public key is (g, n), where n = p Ã— q, and the private key is Î» = lcm((p -1), (q -1)).</p><p>In our experiments, we generate 64, 128, 256, 512 and 1 024 bits keys and corresponding g and Î» respectively to calculate the public key and the private key. As the length of the generated key grows gradually, the amount of computation required in the generation process increases gradually, and the increase rate increases gradually as shown in Fig. <ref type="figure" target="#fig_1">4</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Evaluation of Encryption and Decryption Efficiency</head><p>Fig. <ref type="figure" target="#fig_3">5</ref> shows the time spent encrypting 32 bits data in the case that the public key n is 64, 128, 256, 512 and 1024 bits respectively. As shown in Fig. <ref type="figure" target="#fig_3">5</ref>, with the increase of the length of the key n, the time consumed in the process of encryption and decryption is gradually increasing, and the amount of computation in the process of encryption and decryption is increasing gradually too.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Efficiency Analysis of Homomorphic Properties of the Paillier Cryptosystem</head><p>The public key n is 64, 128, 256, 512 and 1 024 bits respectively, and the size of data m is 32 bits. Under the same conditions, we evaluate the time consumption of homomorphic properties of the Paillier public key cryptosystem, which are listed as follows:</p><formula xml:id="formula_12">1) E pk (m, r) k , 2) E pk (m 1 , r 1 ) Ã— E pk (m 2 , r 2 ), 3) E pk (m, r 1 Ã— r 2 ), 4) E pk (a Ã— m 1 ),<label>and</label></formula><formula xml:id="formula_13">5) E pk (m 1 + m 2 ).</formula><p>The evaluation results are exhibited in Fig. <ref type="figure" target="#fig_5">6</ref>. The results show that additive homomorphism is more timeconsuming than multiplicative homomorphism.  We run the test 30 times and record the time-consuming average as the result. Note that when the volume of concurrent transactions is relatively small, the system has to wait for the predefined batch time to pack a block. When the number of concurrent transactions per second ranges from 100 to 300, the transaction confirmation time decreases with the increase of concurrent transactions. This is because the number of transactions is reaching the threshold of quantity to pack a block in Fabric. When the transaction volume exceeds the processing capability, some transactions cannot be confirmed in a timely manner which causes that the transaction confirmation time begins to grow. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Related Work</head><p>The related work can be classified into two categories: data storage via blockchain and the Paillier cryptosystem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Data Storage via Blockchain</head><p>In order to solve the problem of blockchain storage capacity, some researchers have put forward some solutions. Gaetani et al. <ref type="bibr" target="#b15">[15]</ref> designed and implemented the cloud computing environment database system based on blockchain, using blockchain to ensure data integrity, improve the performance, and enhance the stability. Ali et al. <ref type="bibr" target="#b16">[16]</ref> proposed the Blockstake naming storage system, and the system where the four-tier architecture is designed, which fully utilized the decentralization characteristics of the blockchain to ensure the high security of the data. Liang et al. <ref type="bibr" target="#b17">[17]</ref> proposed a distributed and trusted cloud data traceability using blockchain. Storage-oriented blockchains like Filecoin <ref type="bibr" target="#b18">[18]</ref> , Storj <ref type="bibr" target="#b18">[18]</ref> , and Permacoin <ref type="bibr" target="#b19">[19]</ref> store distributed files into blocks as a series of transactions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Paillier Cryptosystem</head><p>A few studies focus on protecting the blockchain privacy problem by using the Paillier cryptosystem. The Paillier cryptosystem is a way to divide a secret information into serval parts that can be given to different parties, with two properties.</p><p>1) Any part of information can reconstruct the secret, as long as the size of the part equals or exceeds a specified threshold.</p><p>2) Any part of the information whose size is less than this threshold will not get information about this secret.</p><p>Frikken <ref type="bibr" target="#b20">[20]</ref> proposed a scheme of threshold signature. A key characteristic of threshold signature is that the private key does not need to be rebuilt. Even after multiple signatures, no one knows any information about the private key, which allows users to generate signatures without threshold size groups. Threshold cryptography is a special case, which can make secure multi-party computation get more extensive development. Shamir <ref type="bibr" target="#b9">[9]</ref> showed how to divide data D into n pieces in such a way that D is easily reconstructable from any k pieces, but even complete knowledge of (k -1) pieces reveals absolutely no information about D. In most schemes, the secret information can be encoded as a (t -1)-order polynomial, a random point on the polynomial is given to each of n parties, and any t of the parties can be used to accurately rebuild the polynomial using Lagrange interpolation. Fouque et al. <ref type="bibr" target="#b21">[21]</ref> and Baudron et al. <ref type="bibr" target="#b22">[22]</ref> proposed a multi-party threshold Paillier cryptosystem scheme. The scheme solves the problem of malicious attack, and is proved to be complex and elusive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>In this paper, we proposed a scalable and privacypreserving data sharing scheme based on blockchain. The Paillier cryptosystem was applied to blockchain, which could effectively protect sensitive information and solve the privacy protection problem of blockchain. The security analysis proved that the proposed scheme holds high security. We conducted experiments in cloud storage scenarios. The experimental results demonstrated that the Paillier cryptosystem homomorphism has high efficiency in ciphertext operations.</p><p>In the future, we will focus on improving system efficiency and exploring the application of this method in different fields.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 Fig. 1 .</head><label>11</label><figDesc>Fig.1 shows our system model. Entities in our model are as follows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 .</head><label>4</label><figDesc>Fig.4. Paillier key generation time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig.5. Paillier encryption and decryption time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig.6. Paillier homomorphic properties time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig.7. Relation between confirmation time and the number of concurrent transactions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>respectively.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="3">Root Hash</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Hash</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">(1+2+3+4)</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">Hash12 Hash12</cell><cell></cell><cell cols="3">Hash34 Hash34</cell></row><row><cell></cell><cell></cell><cell cols="2">Hash</cell><cell></cell><cell></cell><cell>Hash</cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">(1+2)</cell><cell></cell><cell cols="2">(3+4)</cell><cell></cell></row><row><cell></cell><cell>Hash 1</cell><cell></cell><cell>Hash 2</cell><cell></cell><cell>Hash 3</cell><cell></cell><cell cols="2">Hash 4</cell></row><row><cell></cell><cell>Hash</cell><cell></cell><cell>Hash</cell><cell></cell><cell>Hash</cell><cell></cell><cell>Hash</cell></row><row><cell></cell><cell cols="2">(Block 1)</cell><cell cols="2">(Block 2)</cell><cell>(Block 3)</cell><cell cols="3">(Block 4)</cell></row><row><cell cols="9">Item Block 1 Item Block 2 Item Block 3 Item Block 4</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">Data Block</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="7">Fig.2. Merkle tree of storage structure.</cell></row><row><cell></cell><cell>Item</cell><cell></cell><cell></cell><cell>Item</cell><cell></cell><cell></cell><cell>Item</cell></row><row><cell></cell><cell>Header</cell><cell></cell><cell></cell><cell>Header</cell><cell></cell><cell></cell><cell>Header</cell></row><row><cell cols="2">PK Meta Data</cell><cell>Hash</cell><cell>PK</cell><cell>Meta Data</cell><cell>Hash</cell><cell>PK</cell><cell>Meta Data</cell><cell>Hash</cell></row><row><cell>PK</cell><cell cols="2">Meta Data Hash ...</cell><cell cols="3">... PK Meta Data Hash</cell><cell>PK</cell><cell>... Meta Data</cell><cell>Hash</cell></row><row><cell></cell><cell>Body</cell><cell></cell><cell></cell><cell>Body</cell><cell></cell><cell></cell><cell>Body</cell></row><row><cell></cell><cell></cell><cell cols="5">Fig.3. Item data structure.</cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>â—‹ https://github.com/ethereum/wiki/wiki/White-Paper, Mar. 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1"><p>â—‹ Hyperledger Fabric. https://arxiv.org/pdf/1801.10228v1.pdf, Mar. 2018.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Expanded cloud plumes hiding big data ecosystem</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sharma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="63" to="92" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Comments on a public auditing mechanism for shared cloud data service</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H A</forename><surname>Man</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Mu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Services Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="998" to="999" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Cloud security issues</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Kandukuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P V</forename><surname>Ramakrishna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rakshit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE International Conference on Services Computing (SCC )</title>
		<meeting>IEEE International Conference on Services Computing (SCC )</meeting>
		<imprint>
			<date type="published" when="2009-09">September 2009</date>
			<biblScope unit="page" from="517" to="520" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An explication of secret sharing schemes. Designs</title>
		<author>
			<persName><forename type="first">D</forename><surname>Stinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Codes and Cryptography</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="357" to="390" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Secret-sharing schemes: A survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Beimel</surname></persName>
		</author>
		<author>
			<persName><surname>Cryptology</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y M</forename><surname>Chee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">B</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Shao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">S</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<editor>X, Xing C P</editor>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="11" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Critical survey of existing publicly verifiable secret sharing schemes</title>
		<author>
			<persName><forename type="first">K</forename><surname>Peng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET Information Security</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="249" to="257" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Structural framing of protocol for secure multiparty cloud computation</title>
		<author>
			<persName><forename type="first">N</forename><surname>Maheshwari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kiyawat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the 5th</title>
		<meeting>the 5th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m">Asia Modelling Symp. (AMS )</title>
		<imprint>
			<date type="published" when="2011-07">July 2011</date>
			<biblScope unit="page" from="187" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The sharing economy: Why people participate in collaborative consumption</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hamari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>SjÃ¶klint</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ukkonen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="page" from="2047" to="2059" />
		</imprint>
	</monogr>
	<note>Journal of the Association for Information Science and Technology</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">How to share a secret</title>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="612" to="613" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Safeguarding cryptographic keys</title>
		<author>
			<persName><forename type="first">G</forename><surname>Blakley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. AFIPS 1979 National Computer Conf</title>
		<meeting>AFIPS 1979 National Computer Conf</meeting>
		<imprint>
			<date type="published" when="1979-06">June 1979</date>
			<biblScope unit="page" from="313" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Mastering Bitcoin: Unlocking Digital Crypto-Currencies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Antonopoulos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
			<pubPlace>O&apos;Reilly Media</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">A method for obtaining digital signatures and public-key cryptosystems. Communications of the ACM</title>
		<author>
			<persName><forename type="first">R</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Adleman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1978">1978</date>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="96" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Public-key cryptosystems based on composite degree residuosity classes</title>
		<author>
			<persName><forename type="first">P</forename><surname>Paillier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology, Stern J</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="223" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Privacy preserving data mining</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lindell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Pinkas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="177" to="206" />
		</imprint>
	</monogr>
	<note>Journal of Cryptology</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Blockchain-based database to ensure data integrity in cloud computing environments</title>
		<author>
			<persName><forename type="first">E</forename><surname>Gaetani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Aniello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Baldoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Lombardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Margheri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Sassone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the 1st International Italian Conference on Cybersecurity</title>
		<meeting>the 1st International Italian Conference on Cybersecurity</meeting>
		<imprint>
			<date type="published" when="2017-01">January 2017</date>
			<biblScope unit="page" from="146" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A global naming and storage system secured by blockchains</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Shea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Freedman</surname></persName>
		</author>
		<author>
			<persName><surname>Blockstack</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. USENIX Annu. Technical Conf. (ACT )</title>
		<meeting>USENIX Annu. Technical Conf. (ACT )</meeting>
		<imprint>
			<date type="published" when="2016-06">June 2016</date>
			<biblScope unit="page" from="181" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">ProvChain: A blockchain-based data provenance architecture in cloud environment with enhanced privacy and availability</title>
		<author>
			<persName><forename type="first">X P</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shetty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kamhoua</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kwiat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Njilla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the 17th IEEE/ACM International Symposium on Cluster Cloud and Grid Computing (CC-GRID)</title>
		<meeting>the 17th IEEE/ACM International Symposium on Cluster Cloud and Grid Computing (CC-GRID)</meeting>
		<imprint>
			<date type="published" when="2017-05">May 2017</date>
			<biblScope unit="page" from="468" to="477" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Towards trustworthy and private keyword search in encrypted decentralized storage</title>
		<author>
			<persName><forename type="first">C</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE International Conference on Communications (ICC )</title>
		<meeting>IEEE International Conference on Communications (ICC )</meeting>
		<imprint>
			<date type="published" when="2017-05">May 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Permacoin: Repurposing bitcoin work for data preservation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Parno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symp. Security and Privacy (SP )</title>
		<meeting>IEEE Symp. Security and Privacy (SP )</meeting>
		<imprint>
			<date type="published" when="2014-05">May 2014</date>
			<biblScope unit="page" from="475" to="490" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Secure multiparty computation. In Algorithms and Theory of Computation Handbook</title>
		<author>
			<persName><forename type="first">K</forename><surname>Frikken</surname></persName>
		</author>
		<editor>Atallah M J</editor>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>Chapman and Hall/CRC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Sharing decryption in the context of voting or lotteries</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Fouque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Poupard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Financial Cryptography, Frankel Y</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="90" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Practical multi-candidate election system</title>
		<author>
			<persName><forename type="first">O</forename><surname>Baudron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Fouque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pointcheval</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Poupard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the 20th Annu. ACM Symp. Principles of Distributed Computing (PODC )</title>
		<meeting>the 20th Annu. ACM Symp. Principles of Distributed Computing (PODC )</meeting>
		<imprint>
			<date type="published" when="2001-08">August 2001</date>
			<biblScope unit="page" from="274" to="283" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
