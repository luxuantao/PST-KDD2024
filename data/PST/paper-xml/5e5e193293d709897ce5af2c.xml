<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">K-BERT: Enabling Language Representation with Knowledge Graph</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Weijie</forename><surname>Liu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Peking University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Peng</forename><surname>Zhou</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Tencent Research</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zhe</forename><surname>Zhao</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Tencent Research</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zhiruo</forename><surname>Wang</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Beijing Normal University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Qi</forename><surname>Ju</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Tencent Research</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Haotang</forename><surname>Deng</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Tencent Research</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ping</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Peking University</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">K-BERT: Enabling Language Representation with Knowledge Graph</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Pre-trained language representation models, such as BERT, capture a general language representation from large-scale corpora, but lack domain-specific knowledge. When reading a domain text, experts make inferences with relevant knowledge. For machines to achieve this capability, we propose a knowledge-enabled language representation model (K-BERT) with knowledge graphs (KGs), in which triples are injected into the sentences as domain knowledge. However, too much knowledge incorporation may divert the sentence from its correct meaning, which is called knowledge noise (KN) issue. To overcome KN, K-BERT introduces softposition and visible matrix to limit the impact of knowledge. K-BERT can easily inject domain knowledge into the models by equipped with a KG without pre-training by-self because it is capable of loading model parameters from the pretrained BERT. Our investigation reveals promising results in twelve NLP tasks. Especially in domain-specific tasks (including finance, law, and medicine), K-BERT significantly outperforms BERT, which demonstrates that K-BERT is an excellent choice for solving the knowledge-driven problems that require experts.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Unsupervised pre-trained Language Representation (LR) models like BERT <ref type="bibr" target="#b6">(Devlin et al. 2018</ref>) have achieved promising results in multiple NLP tasks. These models are pre-trained over large-scale open-domain corpora to obtain general language representations and then fine-tuned in specific downstream tasks for absorbing specific-domain knowledge. However, due to the domain-discrepancy between pre-training and fine-tuning, these models do not perform well on knowledge-driven tasks. For example, the Google BERT pre-trained on Wikipedia can not give full play to its value when dealing with electronic medical record (EMR) analysis task in the medical field.</p><p>When reading a text from a specific-domain, ordinary people can only comprehend words according to its context, while experts are able to make inferences with relevant domain knowledge. Publicly-provided models, like BERT, <ref type="bibr">GPT (Radford et al. 2018)</ref>, and XLNet <ref type="bibr" target="#b19">(Yang et al. 2019)</ref>, *Corresponding author: Ping Wang (pwang@pku.edu.cn) and Qi Ju (damonju@tencent.com) who were pre-trained over open-domain corpora, act just like an ordinary people. Even though they can refresh the state-of-the-art of GLUE <ref type="bibr" target="#b17">(Wang et al. 2018)</ref> benchmark by learning from open-domain corpora, they may fail in some domain-specific tasks, due to little knowledge connection between specific and open domain. One way to solve this problem is to pre-train a model emphasizing domain-specific by ourselves, instead of using the publicly-provided ones. However, pre-training is time-consuming and computationally expensive, making it unacceptable to most users.</p><p>Moreover, although injecting domain-specific knowledge during pre-training is possible for LR models, this process of knowledge acquisition can be inefficient and expensive. For example, if we want the model to acquire the knowledge of "Paracetamol can treat cold", a large number of cooccurrences of "Paracetamol" and "cold" are required in the pre-training corpus. Instead of this strategy, what else can we do to make the model a domain expert? The knowledge graph (KG), which was called ontology in early research, serves as a good solution. As knowledge refined into a structured form, KGs over many fields have been constructed, e.g., SNOMED-CT <ref type="bibr" target="#b0">(Bodenreider 2008</ref>) in medical field, HowNet <ref type="bibr" target="#b6">(Dong, Dong, and Hao 2006)</ref> in Chinese conception. If KG can be integrated into the LR model, it will equip the model with domain knowledge, enhancing the model's performance over domain-specific tasks, while reducing the cost of pre-training on a large scale. Besides, the resulting models posses greater interpretability, for the injected knowledge is manually editable.</p><p>However, there are two challenges lies in the road of this knowledge integration: (1) Heterogeneous Embedding Space (HES): In general, the embedding vectors of words in text and entities in KG are obtained in separate ways, making their vector-space inconsistent; (2) Knowledge Noise (KN): Too much knowledge incorporation may divert the sentence from its correct meaning. To overcome these challenges, this paper propose a Knowledge-enabled Bidirectional Encoder Representation from Transformers (K-BERT). K-BERT is capable of loading any pre-trained BERT models due to they are identical in parameters. In addition, K-BERT can easily inject domain knowledge into the models by equipped with a KG without pre-training. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Work</head><p>Since Google Inc. launched BERT in 2018, many endeavors have been made for further optimization, basically focusing on the pre-training process and the encoder.</p><p>In optimizing pre-training process, Baidu-ERNIE (Sun et al. 2019) and BERT-WWM <ref type="bibr" target="#b4">(Cui et al. 2019</ref>) adopt wholeword masking rather than single character masking for pretraining BERT in Chinese corpora. SpanBERT <ref type="bibr" target="#b8">(Joshi et al. 2019)</ref> extended BERT by masking contiguous random spans and proposed a span boundary objective. RoBERTa <ref type="bibr">(Liu et al. 2019</ref>) optimized the pre-training of BERT in three ways, i.e., deleting the target of the next sentence prediction, dynamically changing the masking strategy and using more and longer sentences for training. In optimizing the encoder of BERT, XLNet <ref type="bibr" target="#b19">(Yang et al. 2019</ref>) replaced the Transformer in BERT with Transformer-XL <ref type="bibr" target="#b5">(Dai et al. 2019)</ref> to improve its ability to process long sentences. THU-ERNIE <ref type="bibr" target="#b20">(Zhang et al. 2019</ref>) modified the encoder of BERT to an aggregator for the mutual integration of word and entities.</p><p>While the pre-trained LR model is an emerging direction, there is little work on its fusion with KG. THU-ERNIE <ref type="bibr" target="#b20">(Zhang et al. 2019</ref>) is a pioneer in this direction by fusing entity information, but the relations between entities are ignored by it. COMET <ref type="bibr" target="#b1">(Bosselut et al. 2019)</ref> employed the triples in KG as corpus to train <ref type="bibr">GPT (Radford et al. 2018)</ref> for common sense learning, which is very inefficient.</p><p>Before the emergence of pre-trained LR models, there were several studies that combined KG with word vectors. <ref type="bibr" target="#b16">Wang et al. (2014)</ref> proposed a novel method of jointly embedding entities and words into the same continuous vector space basing on the idea of word2vec <ref type="bibr" target="#b12">(Mikolov et al. 2013)</ref>. <ref type="bibr" target="#b14">Toutanova et al. (2015)</ref> proposed a model that captures the compositional structure of textual relations, and optimize entity, knowledge base, and textual relation representations in a joint manner. <ref type="bibr" target="#b7">Han, Liu, and Sun (2016)</ref> applied a convolutional neural network and a KG completion task to learn the representation of text and knowledge jointly. <ref type="bibr" target="#b2">Cao et al. (2018)</ref> carried out cross-lingual representation learning for words and entities via attentive distant supervision.</p><p>The major weakness of these methods is that they are still based on the idea of "word2vec + transE" (Bordes et al. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>…</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tasks</head><p>Figure <ref type="figure">1</ref>: The model structure of K-BERT: Compared to other RL models, the K-BERT is equipped with an editable KG, which can be adapted to its application domain. For example, for electronic medical record analysis, we can use a medical KG to grant the K-BERT with medical knowledge.</p><p>2013), rather than the pre-trained LR model. Although they use the method of joint representation to make the vector space of entities and words closer, there are still HES problems. What's more, for KGs with millions of entities, this idea makes the entity table very large, making it unusable because it exceeds the GPU's memory size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methodology</head><p>In this section, we detail the implementation of K-BERT and its overall framework is presented in Figure <ref type="figure">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Notation</head><p>We denote a sentence s = {w 0 , w 1 , w 2 , ..., w n } as a sequence of tokens, where n is the length of this sentence. In this paper, English tokens are taken at the word-level, while Chinese tokens are at character-level. Each token w i is included in the vocabulary V, w i ∈ V. KG, denoted as K, is a collection of triples ε = (w i , r j , w k ), where w i and w k are the name of entities, and r j ∈ V is the relation between them. All the triples are in KG, i.e., ε ∈ K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Model architecture</head><p>As shown in Figure <ref type="figure">1</ref>, the model architecture of K-BERT consists of four modules, i.e., knowledge layer, embedding layer, seeing layer and mask-transformer. For an input sentence, the knowledge layer first injects relevant triples into it from a KG, transforming the original sentence into a knowledge-rich sentence tree. The sentence tree is then simultaneously fed into the embedding layer and the seeing </p><formula xml:id="formula_0">0 0 0 A A A A A A A A A A A A A + + + + + + + + + + + + + + + + + + + + + + + + + +</formula><p>Token embedding</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Soft-position embedding</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Segment embedding</head><p>Sentence Tree <ref type="table" target="#tab_6">0 1 2 3 4 5 6 7 8</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Embedding Representation</head><p>Figure 2: The process of converting a sentence tree into an embedding representation and a visible matrix. In the sentence tree, the red number is the soft-position index, and the gray is the hard-position index. (1) For token embedding, the tokens in the sentence tree are flattened into a sequence of token embedding by their hard-position index; (2) The soft-position index is used as position embedding along with the token embedding; (3) In segment embedding, all the tokens in the fist sentence are tagged as "A"; (4) In the visible matrix, red means visible, and white means invisible. For example, the cell at row 4, column 9 is white means that the "Apple(4)" cannot see "China( <ref type="formula">9</ref>)". layer and then converted to a token-level embedding representation and a visible matrix. The visible matrix is used to control the visible area of each token, preventing changing the meaning of the original sentence due to too much knowledge injected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge layer</head><p>The knowledge layer (KL) is used for sentence knowledge injection and sentence tree conversion. Specifically, given an input sentence s = {w 0 , w 1 , w 2 , ..., w n } and a KG K, KL outputs a sentence tree t = {w 0 , w 1 , ..., w i {(r i0 , w i0 ), ..., (r ik , w ik )}, ..., w n }. This process can be divided into two steps: knowledge query (K-Query) and knowledge injection (K-Inject).</p><p>In K-Query, all the entity names involved in the sentence s are selected out to query their corresponding triples from K. K-Query can be formulated as ( <ref type="formula" target="#formula_1">1</ref>),</p><formula xml:id="formula_1">E = K Query(s, K),<label>(1)</label></formula><p>where E = {(w i , r i0 , w i0 ), ..., (w i , r ik , w ik )} is a collection of the corresponding triples.</p><p>Next, K-Inject injects the queried E into the sentence s by stitching the triples in E to their corresponding position, and generates a sentence tree t. The structure of t is illustrated in Figure <ref type="figure" target="#fig_2">3</ref>.</p><p>In this paper, a sentence tree can have multiple branches, but its depth is fixed to 1, which means that the entity names in triples will not derive branches iteratively. K-Inject can be formulated as (2), t = K Inject(s, E).</p><formula xml:id="formula_2">𝑤 " 𝑤 # 𝑤 $ 𝑤 % 𝑤 &amp; '# 𝑤 &amp; 𝑟 ## 𝑤 ## 𝑟 #$ 𝑤 #$ 𝑟 %# 𝑤 %# … …</formula><p>(2)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Embedding layer</head><p>The function of the Embedding Layer (EL) is to convert the sentence tree into an embedding representation that can be fed into the Mask-Transformer. Similar to BERT, the embedding representation of K-BERT is the sum of three parts: token embedding, position embedding, and segment embedding, but differs in that the input of the K-BERT's embedding layer is a sentence tree, rather than a token sequence. Therefore, how to transform a sentence tree into a sequence while retaining its structural information is the key to K-BERT.</p><p>Token embedding In this work, the token embedding is consistent with BERT, and the vocabulary provided by Google BERT is adopted in this paper. Each token in the sentence tree is converted to an embedding vector of dimension H via a trainable lookup table. In addition, K-BERT also uses [CLS] as a classification tag and uses [M ASK] to mask tokens. The difference between the token embeddings of K-BERT and BERT is that the tokens in the sentence tree require re-arrangement before the embedding operation.</p><p>In our re-arrange strategy, tokens in the branch are inserted after the corresponding node, while subsequent tokens are moved backwards. As the example illustrated in Figure <ref type="figure">2</ref>, the sentence tree is rearranged as "Tim Cook CEO Apple is visiting Beijing capital China is a City now". Although this procedure is simple, but it makes the sentence unreadable and lost correct structural information. Fortunately, it can be solved by the soft-position and visible matrix.</p><p>Soft-position embedding For BERT, if there is no position embedding, it will be equivalent to a bag-of-word model, resulting in a lack of structural information (i.e., the order of tokens). All the structural information of the BERT's input sentence is contained in the position embedding, which allows us to add the missing structural information back to the unreadable rearranged sentence. Taking the sentence tree in Figure <ref type="figure">2</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Seeing layer</head><p>Seeing layer is the biggest difference between K-BERT and BERT, and also what make this method so effective. The input to K-BERT is a sentence tree, where the branch is the knowledge gained from KG. However, the risk raised with knowledge is that it can lead to changes in the meaning of the original sentence, i.e., KN issue. For example, in the sentence tree in Figure <ref type="figure">2</ref> matrix M is defined as (3),</p><formula xml:id="formula_3">M ij = 0 w i w j −∞ w i w j (3)</formula><p>where, w i w j indicates that w i and w j are in the same branch, while w i w j are not. i and j are the hard-position index.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mask-Transformer</head><p>To some degree, the visible matrix M contains the structural information of the sentence tree. The Transformer <ref type="bibr" target="#b15">(Vaswani et al. 2017</ref>) encoder in BERT cannot receive M as an input, so we need to modify it to Mask-Transformer, which can limit the self-attention region according to M . Mask-Transformer is a stack of multiple mask-self-attention blocks. As BERT, we denote the number of layers (i.e., mask-self-attention blocks) as L, the hidden size as H, and the number of mask-self-attention heads as A.</p><p>Mask-Self-Attention: To prevent false semantic changes by taking advantage of the sentence structure information in M , we propose a mask-self-attention, which is an extension of self-attention. Formally, the mask-self-attention is (4).</p><formula xml:id="formula_4">Q i+1 , K i+1 , V i+1 = h i W q , h i W k , h i W v ,<label>(4)</label></formula><formula xml:id="formula_5">S i+1 = sof tmax( Q i+1 K i+1 + M √ d k ),<label>(5)</label></formula><formula xml:id="formula_6">h i+1 = S i+1 V i+1 ,<label>(6)</label></formula><p>where W q , W k and W v are trainable model parameters. h i is the hidden state of the i-th mask-self-attention blocks. d k is the scaling factor<ref type="foot" target="#foot_0">1</ref> . M is the visible matrix calculated by the seeing layer. Intuitively, if w k is invisible to w j , the M jk will mask the attention score S i+1 jk to 0, which means w k make no contribution to the hidden state of w j .</p><p>As the example illustrated in Figure <ref type="figure" target="#fig_4">4, h</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experiments</head><p>In this section, we present the details of the K-BERT finetuning results on twelve Chinese NLP tasks, among which eight are open-domain, and four are specific-domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pre-training corpora</head><p>In this paper, we adopt two Chinese corpora for pre-training, i.e., WikiZh<ref type="foot" target="#foot_2">2</ref> and WebtextZh<ref type="foot" target="#foot_3">3</ref> .</p><p>• WikiZh WikiZh refers to the Chinese Wikipedia corpus, which is used to train Chinese BERT in <ref type="bibr" target="#b6">(Devlin et al. 2018)</ref>. WikiZh contains a total of 1 million well-formed Chinese entries with 120 million sentences and size of 1.2G. • WebtextZh WebtextZh is a large-scale, high-quality Chi-</p><p>nese question and answer (Q&amp;A) corpus with 4.1 million entries and a size of 3.7G. Each entry in WebtextZh belongs to a topic, with a total of 28,000 topics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge graph</head><p>We employ three Chinese KGs, CN-DBpedia<ref type="foot" target="#foot_4">4</ref> , HowNet<ref type="foot" target="#foot_5">5</ref> and MedicalKG.</p><p>• CN-DBpedia CN-DBpedia <ref type="bibr" target="#b18">(Xu et al. 2017)</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Baselines</head><p>In this paper, we compare K-BERT to two baselines:</p><p>• Google BERT<ref type="foot" target="#foot_6">6</ref> The model was pre-trained on WikiZh and released by Google <ref type="bibr" target="#b6">(Devlin et al. 2018</ref>). • Our BERT Our reimplementation of BERT with pretraining on WikiZh and WebtextZh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Parameter settings and training details</head><p>To reflect the role of KG in the RL model, we configure our K-BERT and BERT to the same parameter settings according to the basic version of Google BERT <ref type="bibr" target="#b6">(Devlin et al. 2018)</ref>. We denote the number of (mask-)self-attention layers and heads as L and A respectively, and the hidden dimension of embedding vectors as H. In detail, we have the following model configuration: L = 12, A = 12 and H = 768. The total amounts of trainable parameters of both BERT and K-BERT are the same (110M), which means that they are compatible with each other in model parameters.</p><p>For K-BERT pre-training, all settings are consistent with <ref type="bibr" target="#b6">(Devlin et al. 2018)</ref>. One thing to emphasize is that we don't add any KG to K-BERT during the pre-training phase. Because KG binds two related entity names together, thus making the pre-trained word vectors of the two are very close or even equal and resulting in a semantic loss. Therefore, in the pre-training phase, K-BERT and BERT are equivalent, and the latter's parameters can be assigned to the former. KG will be enabled during the fine-tuning and inferring phases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Open-domain tasks</head><p>In this paper, we first compare the performance of K-BERT with the BERT on eight Chinese open-domain NLP tasks. Among these eight tasks, Book review<ref type="foot" target="#foot_7">7</ref> , Chnsenticorp<ref type="foot" target="#foot_8">8</ref> , Shopping<ref type="foot" target="#foot_9">9</ref> , and Weibo<ref type="foot" target="#foot_10">10</ref> are single-sentence classification tasks:</p><p>• Book review This dataset contains 20,000 positive and 20,000 negative reviews collected from Douban<ref type="foot" target="#foot_11">11</ref> ; • Chnsenticorp Chnsenticorp is a hotel review dataset with a total of 12,000 reviews, including 6,000 positive reviews and 6,000 negative reviews; • Shopping Shopping is a online shopping review dataset that contains 40,000 reviews, including 21,111 positive reviews and 18,889 negative reviews; • Weibo Weibo is a dataset with emotional annotations from Sina Weibo, including 60,000 positive samples and 60,000 negative samples. XNLI <ref type="bibr" target="#b3">(Conneau et al. 2018)</ref>, LCQMC <ref type="bibr" target="#b10">(Liu et al. 2018</ref>) are two-sentence classification tasks, NLPCC-DBQA<ref type="foot" target="#foot_12">12</ref> is a Q&amp;A matching task, and MSRA-NER <ref type="bibr" target="#b9">(Levow 2006</ref>) is a Named Entity Recognition (NER) task: • XNLI XNLI is a cross-language language understanding dataset in which each entry contains two sentences and the task is to determine their relation ("Entailment", "Contradict" or "Neutral" );</p><p>• LCQMC LCQMC is a large-scale Chinese question matching corpus. The goal of this task is to determine if the two questions have a similar intent;</p><p>• NLPCC-DBQA NLPCC-DBQA is a task to predict answers to each question from the given document;</p><p>• MSRA-NER MSRA-NER is a NER dataset published by Microsoft. This task is to recognize the entity names in the text, including person names, place names, organization names, etc.</p><p>Each of the above datasets is divided into three parts: train, dev, and test. We use the train part to fine-tune the model and then evaluate its performance on the dev and test parts. The experimental results are shown in Table <ref type="table" target="#tab_4">1</ref> and 2, from which the results can be divided into three categories: (1) The KG has no significant effect on the tasks of sentiment analysis (i.e., Book review, Chnsenticorp, Shopping and Weibo) because the sentiment of a sentence can be judged based on emotional words without any knowledge;</p><p>(2) The language KG (HowNet) performs better than the encyclopedic KG in terms of semantic similarity tasks (i.e., XNLI and LCQMC); (3) For Q&amp;A and NER tasks (i.e., NLPCC-DBQA and MSRA-NER), the encyclopedic KG (CN-DBpedia) is more suitable than the language KG. Therefore, it is important to choose the right KG based on the type of task.</p><p>In addition, it can be observed that the use of an additional corpus (WebtextZh) can also bring performance boost, but not as significant as KG. As MSRA-NER shown in Table <ref type="table" target="#tab_5">2</ref>, the CN-DBpedia improves F 1 from 93.6% to 95.7%, while the WebtextZh only increases it to 94.6%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Specific-domain tasks</head><p>In fact, the task where K-BERT really shines is in specificdomain. Because KG is good at giving LR model with domain knowledge.</p><p>Domain Q&amp;A We crawl about 770,000 and 36,000 Q&amp;A samples from Baidu Zhidao<ref type="foot" target="#foot_13">13</ref> in financial and legal domains, including questions, netizen answers, and best answers. Based on this, we built two datasets, i.e., Finance Q&amp;A and Law Q&amp;A. The task is to choose the best answer for the question from the netizen's answers. Domain NER Finance NER<ref type="foot" target="#foot_14">14</ref> is a dataset including 3000 financial news articles manually labeled with over 65,000 name entities (people, location and organization). Medicine NER is the Clinical Named Entity Recognition (CNER) task released in CCKS 2017<ref type="foot" target="#foot_15">15</ref> . The goal is to extract medical-related entity names from electronic medical records.</p><p>Similarly, the specific-domain datasets are split into three parts: train, dev, and test, which are used to fine-tune, select and test model, respectively. The test results of various models are illustrated in Table <ref type="table" target="#tab_6">3</ref>, where P., R. and F 1 refer to Precision, Recall and F1-score, respectively. Compared with BERT, K-BERT has a significant performance improvement in terms of domain tasks. As for F 1, K-BERT with CN-DBpedia can improve the performance of all tasks by 1∼2%. The unique gain benefits from the domain knowledge in KG. Furthermore, it can be observed from the Medicine NER in Table <ref type="table" target="#tab_6">3</ref> that the performance improvement using the MedicalKG is very obvious. From these results, we can conclude that KG, especially the domain KG, is very helpful for domain-specific tasks. In this subsection, we explore the effects of the softposition and visible matrix for K-BERT using two domain-specific tasks (Law Q&amp;A and Medicine NER). "w/o softposition" refers to fine-tuning K-BERT with hard-position instead of soft-position. "w/o visible matrix" means that the all tokens are visible to each other. BERT is equivalent to the K-BERT without KG. As shown in Figure <ref type="figure" target="#fig_5">5</ref>, we have the following observations: (1) In both tasks, without soft-position or visible matrix, the performance of K-BERT has declined;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ablation studies</head><p>(2) In Law Q&amp;A (Figure <ref type="figure" target="#fig_5">5</ref>(a)), K-BERT without visible matrix is worse than BERT, which confirms the existence of KN, i.e., improperly adding knowledge can lead to performance degradation; (3) In Figure <ref type="figure" target="#fig_5">5</ref>(a), K-BERT reaches its peak at epoch 2, while BERT is at epoch 4, which proves that K-BERT converges faster than BERT. In general, we can conclude that the soft-position and the visible matrix can make K-BERT more robust to KN interference and thus make more efficient use of knowledge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>In this paper, we propose K-BERT to enable language representation with knowledge graphs, achieving the capability of commonsense or domain knowledge. Specifically, K-BERT first injects knowledge from KG into a sentence, making it a knowledge-rich sentence tree. Next, soft-position and visible matrix are adapted to control the scope of knowledge, preventing it from deviating from its original meaning.</p><p>Despite the challenges of HES and KN, our investigation reveals promising results on twelve open-/specific-domain NLP tasks. Empirical results demonstrate that KG is especially helpful for knowledge-driven specific-domain tasks and can be used to solve problems that require domain experts. Besides, K-BERT is compatible with the model parameters of BERT, which means that users can directly adopt the available pre-trained BERT parameters (e.g., Google BERT, Baidu-ERNIE, etc.) on K-BERT without pre-training by themselves.</p><p>These positive results point to future work in (1) improving K-Query to enable filtering of unimportant triples based on context; (2) extending this approach to other LR models such as ELMo <ref type="bibr" target="#b13">(Peters et al. 2018)</ref>, XLNet <ref type="bibr">(Yang et al. 2019), etc;</ref><ref type="bibr"></ref> </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Structure of the sentence tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>as an example, after rearranging, [CEO] and [Apple] are inserted between [Cook] and [is], but the subject of [is] should be [Cook] instead of [Apple]. To solve this problem, we only need to set the position number of [is] to 3 instead of 5. So when calculating the self-attention score in the transformer encoder, [is] is at the next position of [Cook] by the equivalent. However, another problem arises: the position numbers of [is] and [CEO] are both 3, which makes them close in position when calculating self-attention, but in fact, there is no connection between them. The solution to this problem is Mask-Self-Attention, which will be covered in the next subsection.Segment embedding Like BERT, K-BERT also uses segmentation embedding to identify different sentences when multiple sentences are included. For example, when two sentences {w 00 , w 01 , ..., w 0n } and {w 10 , w 11 , ..., w 1m } are inputed, they are combined into one sentence {[CLS], w 00 , w 01 , ..., w 0n , [SEP ], w 10 , w 11 , ..., w 1m } with [SEP ]. For the combined sentence, it is marked with a sequence of segment tags, {A, A, A, A, ..., A, B, B, ..., B}.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Illustration of the Mask-Transformer, which is a stack of multiple mask-self-attention blocks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Ablation studies: (a) Law Q&amp;A with CN-DBpedia; (b) Medicine NER with MedicalKG;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>arXiv:1909.07606v1 [cs.CL] 17 Sep 2019This characteristic of K-BERT is very convenient for users with limited computing resources. Experimental results on twelve Chinese NLP tasks demonstrate that the K-BERT gains superior performances on domain-specific tasks. The main contributions of this paper can be summarized as fol-</figDesc><table><row><cell>lows:</cell></row><row><cell>• This paper proposes a knowledge-enabled LR model,</cell></row><row><cell>namely K-BERT, which is compatible with BERT and can</cell></row><row><cell>incorporate domain knowledge without HES and KN is-</cell></row><row><cell>sues;</cell></row><row><cell>• With the delicate injection of KG, K-BERT significantly</cell></row><row><cell>outperforms BERT not only on domain-specific tasks, but</cell></row><row><cell>also plenty of those in the open-domain;</cell></row><row><cell>• The codes of K-BERT and our self-developed knowl-</cell></row><row><cell>edge graphs are publicly available at https://github.com/</cell></row><row><cell>autoliuweijie/K-BERT.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>-BERT Knowledge Graph</head><label></label><figDesc></figDesc><table><row><cell>Input sentence:</cell><cell>Tim Cook is currently visiting Beijing now</cell></row><row><cell></cell><cell>Apple</cell><cell>City</cell></row><row><cell cols="3">Tim Cook CEO capital Beijing China is_a Beijing now City is_a capital currently visiting Knowledge layer Apple is China Embedding layer CEO Cook Sentence tree: Tim Seeing layer Mask-Transformer Encoder Embeddings Visible matrix KClassification Sequence labeling</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>i [Apple] has no effect on h i+1 [CLS] , because [Apple] is invisible to [CLS]. However, h i+1 [CLS] can obtain the information of h i−1 [Apple] indirectly through h i+1 [Cook] , because [Apple] is visible to [Cook] and [Cook] is visible to [CLS]. The advantage of this process is that [Apple] enriches the representation of [Cook], but does not directly affect the meaning of the original sentence.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 1 :</head><label>1</label><figDesc>Results of various models on sentence classification tasks on open-domain tasks (Acc. %)</figDesc><table><row><cell>Models\Datasets</cell><cell cols="4">Book review Chnsenticorp Dev T est Dev T est</cell><cell cols="8">Shopping Dev T est Dev T est Dev T est Dev T est Weibo XNLI LCQMC</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">Pre-trainied on WikiZh by Google.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Google BERT</cell><cell>88.3</cell><cell>87.5</cell><cell>93.3</cell><cell>94.3</cell><cell>96.7</cell><cell>96.3</cell><cell>98.2</cell><cell>98.3</cell><cell>76.0</cell><cell>75.4</cell><cell>88.4</cell><cell>86.2</cell></row><row><cell>K-BERT (HowNet)</cell><cell>88.6</cell><cell>87.2</cell><cell>94.6</cell><cell>95.6</cell><cell>97.1</cell><cell>97.0</cell><cell>98.3</cell><cell>98.3</cell><cell>76.8</cell><cell>76.1</cell><cell>88.9</cell><cell>86.9</cell></row><row><cell cols="2">K-BERT (CN-DBpedia) 88.6</cell><cell>87.3</cell><cell>93.9</cell><cell>95.3</cell><cell>96.6</cell><cell>96.5</cell><cell>98.3</cell><cell>98.3</cell><cell>76.5</cell><cell>76.0</cell><cell>88.6</cell><cell>87.0</cell></row><row><cell></cell><cell></cell><cell cols="6">Pre-trained on WikiZh and WebtextZh by us.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Our BERT</cell><cell>88.6</cell><cell>87.9</cell><cell>94.8</cell><cell>95.7</cell><cell>96.9</cell><cell>97.1</cell><cell>98.2</cell><cell>98.2</cell><cell>77.0</cell><cell>76.3</cell><cell>89.0</cell><cell>86.7</cell></row><row><cell>K-BERT (HowNet)</cell><cell>88.5</cell><cell>87.4</cell><cell>95.4</cell><cell>95.6</cell><cell>96.9</cell><cell>96.9</cell><cell>98.3</cell><cell>98.4</cell><cell>77.2</cell><cell>77.0</cell><cell>89.2</cell><cell>87.1</cell></row><row><cell cols="2">K-BERT (CN-DBpedia) 88.8</cell><cell>87.9</cell><cell>95.0</cell><cell>95.8</cell><cell>97.1</cell><cell>97.0</cell><cell>98.3</cell><cell>98.3</cell><cell>76.2</cell><cell>75.9</cell><cell>89.0</cell><cell>86.9</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2 :</head><label>2</label><figDesc>Results of various models on NLPCC-DBQA (M RR %) and MSRA-NER (F 1 %).</figDesc><table><row><cell>Models\Datasets</cell><cell cols="4">NLPCC-DBQA MSRA-NER Dev T est Dev T est</cell></row><row><cell cols="3">Pre-trained on WikiZh by Google.</cell><cell></cell><cell></cell></row><row><cell>Google BERT</cell><cell>93.4</cell><cell>93.3</cell><cell>94.5</cell><cell>93.6</cell></row><row><cell>K-BERT (HowNet)</cell><cell>93.2</cell><cell>93.1</cell><cell>95.8</cell><cell>94.5</cell></row><row><cell cols="2">K-BERT (CN-DBpedia) 94.5</cell><cell>94.3</cell><cell>96.6</cell><cell>95.7</cell></row><row><cell cols="4">Pre-trained on WikiZh and WebtextZh by us.</cell><cell></cell></row><row><cell>Our BERT</cell><cell>93.3</cell><cell>93.6</cell><cell>95.7</cell><cell>94.6</cell></row><row><cell>K-BERT (HowNet)</cell><cell>93.2</cell><cell>93.1</cell><cell>96.3</cell><cell>95.6</cell></row><row><cell cols="2">K-BERT (CN-DBpedia) 93.6</cell><cell>94.2</cell><cell>96.4</cell><cell>95.6</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 3 :</head><label>3</label><figDesc>Results of various models on specific-domain tasks (%).</figDesc><table><row><cell>Models\Datasets</cell><cell cols="3">Finance Q&amp;A P. R. F 1</cell><cell>P.</cell><cell>Law Q&amp;A R.</cell><cell>F 1</cell><cell cols="3">Finance NER P. R. F 1</cell><cell>Medicine NER P. R. F 1</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">Pre-trained on WikiZh by Google.</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Google BERT</cell><cell cols="10">81.9 86.0 83.9 83.1 90.1 86.4 84.8 87.4 86.1 91.9 93.1 92.5</cell></row><row><cell>K-BERT (HowNet)</cell><cell cols="10">83.3 84.4 83.9 83.7 91.2 87.3 86.3 89.0 87.6 93.2 93.3 93.3</cell></row><row><cell cols="11">K-BERT (CN-DBpedia) 81.5 88.6 84.9 82.1 93.8 87.5 86.1 88.7 87.4 93.9 93.8 93.8</cell></row><row><cell>K-BERT (MedicalKG)</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>94.0 94.4 94.2</cell></row><row><cell></cell><cell></cell><cell cols="6">Pre-trained on WikiZh and WebtextZh by us.</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Our BERT</cell><cell cols="10">82.1 86.5 84.2 83.2 91.7 87.2 84.9 87.4 86.1 91.8 93.5 92.7</cell></row><row><cell>K-BERT (HowNet)</cell><cell cols="10">82.8 85.8 84.3 83.0 92.4 87.5 86.3 88.5 87.3 93.5 93.8 93.7</cell></row><row><cell cols="11">K-BERT (CN-DBpedia) 81.9 87.1 84.4 83.1 92.6 87.6 86.3 88.6 87.4 93.9 94.3 94.1</cell></row><row><cell>K-BERT (MedicalKG)</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>94.1 94.3 94.2</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">In(Vaswani et al.  </note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2017" xml:id="foot_1">), the author scale the dot products by1 √ d kto counteract the effect of the dot products grow large in magnitude.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2">https://dumps.wikimedia.org/zhwiki/latest/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3">https://github.com/brightmart/nlp chinese corpus</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4">http://kw.fudan.edu.cn/cndbpedia/intro/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_5">http://www.keenage.com/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_6">https://github.com/google-research/bert</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_7">https://embedding.github.io/evaluation/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_8">https://github.com/pengming617/bert classification</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_9">https://share.weiyun.com/5xxYiig</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_10">https://share.weiyun.com/5lEsv0w</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_11">https://book.douban.com/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_12">http://tcci.ccf.org.cn/conference/2016/dldoc/evagline2.pdf</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_13">https://zhidao.baidu.com</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_14">https://embedding.github.io/evaluation/#extrinsic</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_15">https://biendata.com/competition/CCKS2017 2/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work is funded by 2019 Tencent Rhino-Bird Elite Training Program.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Biomedical ontologies in action: role in knowledge management, data integration and decision support</title>
		<author>
			<persName><forename type="first">O</forename><surname>Bodenreider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bordes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Usunier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Garcia-Duran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Yakhnenko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2008">2008. 2013</date>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="2787" to="2795" />
		</imprint>
	</monogr>
	<note>Translating embeddings for modeling multi-relational data</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">COMET: Commonsense transformers for automatic knowledge graph construction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bosselut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Rashkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Malaviya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Celikyilmaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Choi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.05317</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Joint representation learning of cross-lingual words and entities via attentive distant supervision</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing</title>
				<meeting>the 2018 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">XNLI: Evaluating cross-lingual sentence representations</title>
		<author>
			<persName><forename type="first">A</forename><surname>Conneau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lample</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rinott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Bowman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schwenk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Stoyanov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing</title>
				<meeting>the 2018 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Che</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.08101</idno>
		<title level="m">Pre-training with whole word masking for chinese bert</title>
				<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Transformer-xl: Attentive language models beyond a fixed-length context</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Carbonell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1901.02860</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">BERT: Pre-training of deep bidirectional transformers for language understanding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Toutanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.04805</idno>
		<imprint>
			<date type="published" when="2006">2018. 2006</date>
			<publisher>Citeseer</publisher>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Hownet and the computation of meaning</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Joint representation learning of text and knowledge for knowledge graph completion</title>
		<author>
			<persName><forename type="first">X</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sun</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.04125</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Weld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Levy</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1907.10529</idno>
		<title level="m">SpanBERT: Improving pretraining by representing and predicting spans</title>
				<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The 3rd international chinese language processing bakeoff</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Levow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Sighan Workshop on Chinese Language Processing</title>
				<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">LCQMC:a large-scale chinese question matching corpus</title>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Tang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note>International conference on computational linguistics 1952-1962</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Stoyanov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1907.11692</idno>
		<title level="m">RoBERTa: A robustly optimized bert pretraining approach</title>
				<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1301.3781</idno>
		<title level="m">Efficient estimation of word representations in vector space</title>
				<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Improving language understanding by generative pre-training</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Iyyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zettlemoyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Narasimhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename></persName>
		</author>
		<idno type="arXiv">arXiv:1802.05365</idno>
		<idno>arXiv:1904.09223</idno>
	</analytic>
	<monogr>
		<title level="m">ERNIE: Enhanced representation through knowledge integration</title>
				<imprint>
			<date type="published" when="2018">2018. 2018. 2019</date>
		</imprint>
		<respStmt>
			<orgName>OpenAI. Sun,</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Deep contextualized word representations</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Representing text for joint embedding of text and knowledge bases</title>
		<author>
			<persName><forename type="first">K</forename><surname>Toutanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pantel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Poon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Choudhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gamon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing</title>
				<meeting>the 2015 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1499" to="1509" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Attention is all you need</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Parmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Uszkoreit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ł</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Polosukhin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="5998" to="6008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Knowledge graph and text jointly embedding</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2014 conference on empirical methods in natural language processing</title>
				<meeting>the 2014 conference on empirical methods in natural language processing</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1591" to="1601" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Bowman</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1804.07461</idno>
		<title level="m">Glue: A multi-task benchmark and analysis platform for natural language understanding</title>
				<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Cn-dbpedia: A never-ending chinese knowledge extraction system</title>
		<author>
			<persName><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International conference industrial, engineering and other applications applied intelligent systems</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="428" to="438" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Xlnet: Generalized autoregressive pretraining for language understanding</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Carbonell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.08237</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.07129</idno>
		<title level="m">ERNIE: Enhanced language representation with informative entities</title>
				<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
