<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">GraphAttacker: A General Multi-Task Graph Attack Framework</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2021-01-18">18 Jan 2021</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jinyin</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Dunjie</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zhaoyan</forename><surname>Ming</surname></persName>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Kejie</forename><surname>Huang</surname></persName>
						</author>
						<title level="a" type="main">GraphAttacker: A General Multi-Task Graph Attack Framework</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2021-01-18">18 Jan 2021</date>
						</imprint>
					</monogr>
					<idno type="arXiv">arXiv:2101.06855v1[cs.LG]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:05+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>graph neural network</term>
					<term>general attack</term>
					<term>generative adversarial network</term>
					<term>multi-task</term>
					<term>attack platform</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Graph Neural Networks (GNNs) have been successfully exploited in graph analysis tasks in many real-world applications. However, GNNs have been shown to have potential security issues imposed by adversarial samples generated by attackers, which achieved great attack performance with almost imperceptible perturbations. What limit the wide application of these attackers are their methods' specificity on a certain graph analysis task, such as node classification or link prediction. We thus propose GraphAttacker, a novel generic graph attack framework that can flexibly adjust the structures and the attack strategies according to the graph analysis tasks. Based on the Generative Adversarial Network (GAN), GraphAttacker generates adversarial samples through alternate training on three key components, the Multi-strategy Attack Generator (MAG), the Similarity Discriminator (SD), and the Attack Discriminator (AD). Furthermore, to achieve attackers within perturbation budget, we propose a novel Similarity Modification Rate (SMR) to quantify the similarity between nodes thus constrain the attack budget. We carry out extensive experiments and the results show that GraphAttacker can achieve state-of-the-art attack performance on graph analysis tasks of node classification, graph classification, and link prediction. Besides, we also analyze the unique characteristics of each task and their specific response in the unified attack framework. We will release GraphAttacker as an open-source simulation platform for future attack researches.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>O UR lives are surrounded by various graphs, such as social networks <ref type="bibr" target="#b57">[58]</ref>, e-commence networks <ref type="bibr" target="#b50">[51]</ref>, biological networks <ref type="bibr" target="#b32">[33]</ref>, traffic networks <ref type="bibr" target="#b26">[27]</ref>, which produce abundant graph data. In recent years, a large number of Graph Neural Networks (GNNs) <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b23">[24]</ref> have been proposed to better analyze the various information contained in the graph data. Compared with the traditional graph embedding methods <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b37">[38]</ref>, <ref type="bibr" target="#b43">[44]</ref>, GNNs have achieved superior performance.</p><p>The development of GNNs has promoted wide applications of graph analysis in the real world tasks, i.e. node classification <ref type="bibr" target="#b42">[43]</ref>, <ref type="bibr" target="#b53">[54]</ref>, graph classification <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b58">[59]</ref>, link prediction <ref type="bibr" target="#b46">[47]</ref>, <ref type="bibr" target="#b52">[53]</ref>, and community detection <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b31">[32]</ref>. Kipf et al. <ref type="bibr" target="#b23">[24]</ref> proposed GCN as a basic graph convolution method for semi-supervised learning, which provides an effective means for node classification task. Since then, a number of GCN based models are proposed as effective graph embedding tools, i.e. GraphSAGE <ref type="bibr" target="#b19">[20]</ref>, FastGCN <ref type="bibr" target="#b4">[5]</ref>, T-MGCN <ref type="bibr" target="#b30">[31]</ref>. DIFFPOOL <ref type="bibr" target="#b58">[59]</ref> uses a differential graph pooling module to adapt to various graph neural network architectures in an end-to-end manner, which is designed for graph classification task. In <ref type="bibr" target="#b51">[52]</ref>, a hierarchical GNN is proposed to learn the similarity between graphs, which is successfully applied to malware detection. For link prediction task, Kipf et al. <ref type="bibr" target="#b24">[25]</ref> proposed a graph auto-encoder model. It can effectively predict the possible links that may exist in the future by layer-wise propagation rules. Besides, in order to analyze the community attributes of graph, several works <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b35">[36]</ref> have been proposed to realize community detection task of graph data.</p><p>However, the researches of adversarial attacks on GNN have raised concerns about its potential security issues, i.e. GNN models may easily be fooled by carefully-crafted adversarial examples. More particular, in social networks, malicious users may pose a threat to social and political security by hiding their criminal behavior <ref type="bibr" target="#b25">[26]</ref>. In biological networks, certain biological protein structures may be purposefully misclassified to mislead researchers <ref type="bibr" target="#b38">[39]</ref>. In the recommendation system, the purposelydesigned products are recommended to the customers, which will significantly damage the interest of the customers <ref type="bibr" target="#b10">[11]</ref>. In various online data, de-anonymization attacks <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[23]</ref> expose users' private information, which leads to the issues of privacy leakage. Therefore, the attacks <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b56">[57]</ref>, <ref type="bibr" target="#b59">[60]</ref>, <ref type="bibr" target="#b62">[63]</ref> and possible defenses <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b28">[29]</ref>, <ref type="bibr" target="#b40">[41]</ref>, <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b61">[62]</ref> research on GNNs has become the hot spot.</p><p>Although existing graph adversarial attack methods have diverse attack strategies, they can be mainly modeled as a constraint optimization problem, which successfully mislead the classifiers through various optimizer, such as gradient learning <ref type="bibr" target="#b8">[9]</ref>, evolutionary computing <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b59">[60]</ref>, meta-learning, and other optimizer <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b56">[57]</ref>. The existing works are usually based on a certain optimizer and construct their attack methods for specific graph analysis task. Additionally, they adopt specific modification strategies and stealthiness constraints, without considering the diversity of attack targets and strategies. We believe that constructing a general graph attack framework is helpful to explore the the generality and specificity of different graph analysis tasks, and then enhance their robustness in a targeted manner according to the characteristics of different tasks.</p><p>Generative Adversarial Network (GAN) <ref type="bibr" target="#b17">[18]</ref>, a highly generality method that can flexibly modify the structure of the generator and discriminator according to different tasks to generate diverse adversarial samples. Recently, some works <ref type="bibr" target="#b49">[50]</ref>, <ref type="bibr" target="#b55">[56]</ref> have successfully applied GAN to graph data. Wang et al. <ref type="bibr" target="#b49">[50]</ref> learned the distribution of potential connectivity in graph data and generate adversarial samples based on alternate training of the generator and discriminator in GraphGAN. In the study of the vulnerability of graph analysis tasks, Wang et al. <ref type="bibr" target="#b55">[56]</ref> carried out a fake node attack on node classification based on the absolute gradient of the links or node attributes, and designed a discriminator as the constraint of the perturbations. Different from the existing works, we adopt GAN as the backbone of a general attack framework. After iterative training with the discriminator, adversarial samples are generated for different graph analysis tasks, and implement a general attack through an attack module based on the target graph analysis task.</p><p>Address to the problem that most existing attack methods can only attack a single task, we design a Multi-strategy Attack Generator (MAG), a Similarity Discriminator (SD) and an Attack Discriminator (AD) to form a three-player game. After alternate training, MAG can generate massive adversarial samples with high similarity to the original graph. In attack stage, we only need to modify the optimization function of AD to achieve effective attacks on different graph analysis tasks.</p><p>The main contributions of this paper are summarized as follows:</p><p>• To the best of our knowledge, it is the first general attack framework for multiple graph analysis tasks, namely GraphAttacker. It combines different modification strategies, attack scale, and stealthiness constraints according to different attack downstream tasks to achieve general graph analysis tasks attacks. • We propose a novel Similarity Modification Rate (SMR) constraint. On the basis of attack budget and node degree distribution statistics Λ, it ensures that the perturbations do not significantly change the similarity of the node pairs, and further enhances the stealthiness of adversarial perturbations.</p><p>• Several types of attack experiments carried on node classification, graph classification, and link prediction demonstrate that GraphAttacker can achieve state-of-the-art attack performance under a certain task. Besides, we also explore the unique characteristics of each task when conducting unified attacks and put forward some insights.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Graph Attack</head><p>In order to improve the security of graph analysis tasks, various attack methods have been proposed, aiming to discover the vulnerability of the graph embedding methods before malicious attackers, and help to find corresponding defense methods. According to the different attack graph analysis tasks, the existing adversarial attack methods on graph mainly focus on: node classification attack, graph classification attack, link prediction attack, and community detection attack.</p><p>In node classification attack, Zugner et al. <ref type="bibr" target="#b62">[63]</ref> proposed the first adversarial attack against the graph data to generate the adversarial samples iteratively, namely NETTACK. This method focuses on the attack effect in the node classification, and achieves an effective attack with a limited budget. They further proposed Meta-Self <ref type="bibr" target="#b60">[61]</ref>, when the node classification model and its training weights are unknown, regarding the graph as an optimistic hyper parameter, and using meta-gradients to solve the bi-level problem underlying training-time attacks. In <ref type="bibr" target="#b55">[56]</ref>, Wang et al. used a greedy algorithm to generate the links and corresponding attributes of malicious nodes, and designed a discriminator based on GAN to ensure that the perturbations are unperceptible. GF-Attack <ref type="bibr" target="#b3">[4]</ref> constructed the corresponding graph filter to realize the black box attack on the graph embedding method.</p><p>Several works have explored attacks on graph classification tasks. Dai et al. <ref type="bibr" target="#b11">[12]</ref> regarded the decision-making process of the adversarial attack as a Markov Decision-making Process (MDP), and first proposed an attack method based on Reinforcement Learning (RL-S2V) to study the attack on graph classification. Tang et al. <ref type="bibr" target="#b41">[42]</ref> took the pooling operation of the hierarchical GCN model as the attack target, which preserves the wrong node information.</p><p>For link prediction attacks, Chen et al. <ref type="bibr" target="#b6">[7]</ref> implemented Iterative Gradient Attack (IGA) by using the gradient information of the trained Graph Auto-Encoder (GAE) <ref type="bibr" target="#b24">[25]</ref>. They further considered the dynamic nature of real-world systems and proposed the first adversarial attack <ref type="bibr" target="#b9">[10]</ref> based on Dynamic Link Prediction (DNLP). Besides the above graph analysis task, Chen et al. <ref type="bibr" target="#b5">[6]</ref> regarded community detection attacks as an optimization problem and proposed an attack strategy based on genetic algorithm and Q modularity. Yu et al. <ref type="bibr" target="#b59">[60]</ref> proposed an attack method based on Genetic Algorithm, which disturbed the Euclidean distance between node pairs in the embedding space.</p><p>These works mainly target a specific graph analysis task, in this work, different attack targets and strategies are freely combined based on GAN, and preliminary analyzed the weaknesses of different graph analysis tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Graph Defense</head><p>With the development of the attacks on the graph analysis tasks, the research of the defense of the graph analysis tasks is also under intensive development. Defense strategies such as adversarial training, smooth defense, graph purification defense, and attention mechanisms have been proposed to deal with malicious attacks on graph analysis tasks.</p><p>Adversarial training is one of the most common defense methods. Dai et al. <ref type="bibr" target="#b12">[13]</ref> designed perturbations with different L2-Norm constraints according to different positive target-context pairs, and prevent the perturbations from spreading on the graph through adversarial training. Feng et al. <ref type="bibr" target="#b15">[16]</ref> designed a virtual adversarial regularizer, which smoothens the prediction distribution in the most sensitive direction to enhance the robustness of the model. Sun et al. <ref type="bibr" target="#b40">[41]</ref> added a virtual adversarial loss to the basic loss function of GCN to improve the generalization of GCN.</p><p>Besides adversarial training, Chen et al. <ref type="bibr" target="#b7">[8]</ref> trained a distillation GCN model by using the output confidence of the initial GCN as a soft label. Based on graph purification defense, <ref type="bibr" target="#b14">[15]</ref> performed low-rank approximation on the graph to reduce the impact of NETTACK. Several defense methods <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b61">[62]</ref> distinguish between adversarial perturbations and clean samples through attention mechanisms, and train robust models by penalizing weights on adversarial nodes or edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PRELIMINARY</head><p>Definitions of several graph analysis tasks and our general attack problem are provided in this section. A graph is represented as G = {V, E, X} , where V = {v 1 , • • • , v n } is the node set with |V | = N , e i,j =&lt; v i , v j &gt;∈ E denotes that there is a link between node v i and node v j . The node topology of the graph is generally represented by the adjacency matrix A ∈ {0, 1} N ×N , where A i,j = 1 if node v i directly connected with v j . X ∈ {0, 1} N ×D is the node attribute matrix, and D denotes the dimension of X . Generally, the adjacency matrix A contains the information of V and E in the graph data, so we use G = (A, X) to represent a graph more concisely. DEFINITION 1 (Node classification). Given a graph G = (A, X) and node set V = {v 1 , • • • , v n }, V l , and V u ⊂ V denote the labeled and unlabeled nodes, respectively. F = y 1 , • • • , y |F | is the category set of nodes. The purpose of the node classification task is to train a model f node Our proposed GraphAttacker conducts attack on multiple graph analysis tasks by combining different modification strategies, attack scale, and stealthiness constraints. Fig. <ref type="figure">1</ref> shows the process of GraphAttacker on different graph analysis tasks, which consists of three modules: Multi-strategy Attack Generator (MAG), Similarity Discriminator (SD), and Attack Discriminator (AD). Through the alternating training of MAG, SD, and AD, GraphAttacker modifies the graph structure and node attributes within a given stealthiness constraints to effectively attack the corresponding target model. In this part, we take the node classification attack task as an example to introduce our GraphAttacker.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Multi-Strategy Attack Generator (MAG)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Structure of MAG</head><p>The proposed MAG achieves the adversarial samples generation through different attack strategies. MAG contains two modules, a feature extractor and a graph reconstructor.</p><p>Feature extractor. To better learn the feature of graph structure and node attributes, we consider using the graph convolutional layer to extract the information of the graph data. Here, the hidden layer l + 1 is defined as </p><formula xml:id="formula_0">H (l+1) = σ( ÂH (l) W (l) )<label>(2)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graph analysis tasks GraphAttacker</head><formula xml:id="formula_1">△ Stealthiness constraints Λ SMR Attack result • • • • • • • • • • • • • • • • Fig. 1:</formula><p>The framework of GraphAttacker. We manually select different modification strategy and attack scale according to the attack requirements (here we perform unlimited attack on the graph structure), then generate adversarial samples through iterative training of MAG, SD, and AD. Finally, the samples that satisfy both the attack effect and the stealthiness constraints are regarded as the final adversarial samples.</p><p>where</p><formula xml:id="formula_2">Â = D− 1 2 Ã D− 1 2</formula><p>, A is the adjacency matrix, and Ã = A + I N is the adjacency matrix of the real graph G with self-connections. I N is the identity matrix and Dii = j Ãij denotes the degree matrices of Ã. In the first layer, we use the node attributes as input, i.e. H (0) = X. σ is the Relu active function. Specifically, we consider a two-layer Graph Convolution Network (GCN) <ref type="bibr" target="#b23">[24]</ref> as the graph feature extractor. It maps the graph structure and node attribute information to a d-dimensional features, which is defined as:</p><formula xml:id="formula_3">Z = f (X, A) = f Âσ ÂXW (0) W (1)<label>(3)</label></formula><p>where W (0) ∈ R N ×H and W (1) ∈ R H×d denote the trainable weight matrix of hidden layer and output layer with H feature maps, respectively. N is the number of nodes in the graph, and d denotes the dimension of low-dimensional representation. f is the softmax function.</p><p>Graph reconstructor. After obtaining the low-dimensional representation Z of the graph data through the graph feature extractor, we use a dimension expansion matrix W ex to reconstruct Z into the continuous adversarial example G c :</p><formula xml:id="formula_4">G (c) = A (c) = S ZW A ex + ZW A ex T /2 X (c) = S ZW X ex<label>(4)</label></formula><p>where Z ⊂ R N ×d . W A ex ⊂ R d×N and W X ex ⊂ R d×D are the dimension expansion matrices of graph structure A and node attributes X, respectively. Sigmoid function S maps the element values of generated data between [0,1]. Then we obtains discrete G by the sign function:</p><formula xml:id="formula_5">G = A = sign(A (c) ) X = sign(X (c) )<label>(5)</label></formula><p>Adjacency A   Here we choose an unlimited attack on the graph structure. We obtain the low-dimensional features of the graph through the feature extractor, and then obtain our adversarial graph structure through the graph reconstructor.</p><formula xml:id="formula_6">0 1 0 1 0 1 • • • • • • •••••• •••••• •••••• 0 0 1 0 1 0 0 • • • • • • •••••• •••••• ••••••</formula><formula xml:id="formula_7">• • • • • •••••• •••••• •••••• 0 0 1 0 1 0 0 • • • • • • •••••• •••••• ••••••</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Multiple attack strategies</head><p>Fig. <ref type="figure" target="#fig_1">2</ref> shows how MAG in GraphAttacker generates graph structure A or node attributes X based on different graph analysis attack strategies. In the attack of the graph analysis task, we can manually combine different modification strategies and attack scale to satisfy our different attack requirements.</p><p>Modify strategy. In MAG, we implement various attack strategies by modifying graph structure A, node attributes X, or a combination of both.</p><p>Graph structure attack: We use the low-dimensional features Z obtained from the feature extractor and the graph structure expansion matrix W A ex to generate the adversarial adjacency matrix A by Eq.4 and Eq.5, and preserve the original node attributes X = X.</p><p>Node attribute attack: In some cases, we want to preserve the original adjacency matrix A = A, we only use Z and the node attribute expansion matrix W X ex to generate the adversarial node attributes X by Eq.4 and Eq.5.</p><p>Hybrid attack: Combining graph structure attack and node attribute attack, we generate the adversarial adjacency matrix A and node attributes X at the same time to achieve the best attack effect.</p><p>Attack scale. However, when the size of the graph data is too large, directly generating a whole A or X through MAG will consume massive computing resources. Considering the effective implementation of adversarial attacks on the graph and reducing the cost of the attack, we use K-hop subgraph instead of the original graph in the attack process to achieve an efficient and low-cost attack.</p><p>Specifically, we select the target node and its K-hop neighbors from the original graph G to form a K-hop subgraph G K−sub (A snb , X sub ). To prevent the node categories in the subgraph from becoming too concentrated, 20% subgraph nodes are randomly selected from other categories and added to the G K−sub , which is then converted to the adversarial subgraph G K−sub (A sub , X sub ) by MAG to have the same size as G K−sub . When the attack on subgraph is successful, we will replace the subgraph G K−sub with G K−sub in the original graph G to obtain the adversarial sample G = (A , X ). We consider the following three different attack scale k ∈ N + :</p><p>Direct attack (k = 0): Only delete the existing links of the target node, or add a new one, or modify the attributes of the target node.</p><p>Indirect attack (k ≤ K, k = 0): Delete or add links in the 1-to-K hop node pairs except the target node in subgraph, or modify the attributes of these nodes.</p><p>Unlimited attack (k ≤ K): Combining the above two attack scales, delete or add links between any pair of nodes in subgraph, or modify the attributes of any node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Multiple stealthiness constraints</head><p>While achieving efficient and effective attacks, it is also necessary to ensure that there are unperceptible perturbations in our adversarial samples. Most existing works pre-set stealthiness constraints in their attack methods, and generate adversarial perturbation step by step under these constraints. Different from the existing works, our GraphAttacker can freely choose different stealthiness constraints. Since MAG can generate massive adversarial samples, we make perturbation stealthiness judgments on the generated adversarial samples, and finally output the expected adversarial samples. In this work, we consider the following stealthiness constraints:</p><p>Attack budget : It accumulates the changes of adjacency matrix and node attributes, and limits them within the budget to constrain the overall perturbation size of the adversarial sample.</p><p>Test statistic Λ: <ref type="bibr" target="#b62">[63]</ref> points out that the most prominent characteristic of the graph structure is its degree distribution. They provide a test statistic Λ to limit the changes of node degree distribution.</p><p>Similarity Modification Ratio (SMR): Link prediction tasks usually use similarity score to infer the possibility of link existence <ref type="bibr" target="#b29">[30]</ref>. The higher the similarity score between two nodes indicates a higher probability that they are linked. In other words, the links that exist between node pairs with low similarity scores may be abnormal. Based on this speculate, we constrain the perturbations at the similarity level of the node pairs. Here we consider using cosine similarity to measure the similarity score between nodes v i and v j :</p><formula xml:id="formula_8">s ij = z i • z j z i z j (6)</formula><p>where v i is our target node and v j ∈ S i is the node that has link with v i . z i and z j are the i-th and j-th rows of Z, denoting the lowdimensional representations of node v i and node v j , respectively. Using these similarity scores, we calculate the average similarity between the target node and its connected nodes to estimate the difference between G and G at the node similarity level. It is worth noting that since the graph structure in G has changed, we need to use z i and z i to calculate s ij in G . The final SMR is:</p><formula xml:id="formula_9">SM R i = ( j∈Si s ij )/ |S i | − ( j∈S i s ij )/ |S i | ( j∈Si s ij )/ S i<label>(7)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Similarity Discriminator (SD)</head><p>The generated adversarial sample should be highly similar to the original one. For this consideration, we design a Similarity Discriminator (SD). SD aims to learn the difference between G K−sub and G K−sub , and distinguish the two as much as possible. SD also provides feedback to the MAG and guides it to generate the adversarial subgraph that is more similar to the original one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Structure of SD</head><p>We use a classical Multi-Layer Perception (MLP) with one hidden layer as our SD, whose output layer is set to an one-dimensional sigmoid function. The hidden layer and the output layer in SD can be generally expressed as:</p><formula xml:id="formula_10">h (l+1) = sigmoid W (l) SD h (l) + b (l)<label>(8)</label></formula><p>where</p><formula xml:id="formula_11">W (l)</formula><p>SD and b (l) are the trainable weight matrix and bias term of l layer, respectively. We use the subgraph structure A sub or the node attributes X sub as the input h (0) of the SD according to the modification strategy, and calculate the hidden layers output h (1)  as the input of the output layer, then get a one-dimensional value h (out) ∈ [0, 1] from the sigmoid function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Training steps</head><p>During the training process, MAG tries to generate a more realistic subgrpah to fool the SD, and the SD needs to maximize the difference between G K−sub and G K−sub . The optimization objective of alternating training of the SD and the MAG can be defined by : min</p><formula xml:id="formula_12">M AG max SD E G∼preal [log SD (G K−sub )] +E G ∼p M AG log 1 − SD G K−sub<label>(9)</label></formula><p>where G K−sub ∼ p real and G K−sub ∼ p M AG denote original subgraph and adversarial subgraph generated by MAG, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Attack Discriminator (AD)</head><p>Through alternate training of MAG and SD, we can get an adversarial subgraph similar to the real one, but this does not satisfy our attack requirement. We add an Attack Discriminator (AD) to the game between MAG and SD to form a three-player game to make the generated adversarial samples have effective attack capability.</p><p>In node classification attack, we use the GCN model as the AD, which has the same structure with the feature extractor of MAG. AD provides feedback to MAG and guides it to generate adversarial subgraph which can mislead the target model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Training steps</head><p>For an effective attack on the target model, AD performs the following two steps in each iteration:</p><p>Step1. To make AD have a stronger guidance ability so that MAG can generate effective adversarial samples, we first freeze the weights of MAG and SD, train the weights of the AD using the real subgrpah G K−sub , and then optimize the AD by minimizing the cross-entropy loss function to improve the accuracy of AD in classifyling nodes in real subgraph:</p><formula xml:id="formula_13">arg min L AD = − |V l | l=1 |F | k=1 C lk In (Z lk (A sub , X sub )) (10)</formula><p>where V l is the set of labeled nodes and</p><formula xml:id="formula_14">F = y 1 , • • • , y |F |</formula><p>denotes the category set of nodes. C lk = 1 if node v l belongs to category y k and C lk = 0 otherwise. Z lk (A, X) is the category prediction confidence output calculated by Eq.3 when d = |F |.</p><p>Step2. The training of AD in step1 ensures its effective classification ability, then we freeze the weights of SD and AD, and use the AD obtained to fine-turn train the MAG. We get the predicted category confidence of the adversarial subgraph through the AD trained in Step1. The attack loss function is defined as: <ref type="bibr" target="#b10">(11)</ref> where V tar is the set of attack nodes, C lk = 1 if node v l belongs to category y k and C lk = 0 otherwise. Z (c)lk is the category prediction confidence output of the continuous subgraph obtained by Eq.3. The optimization objective of alternating training of the AD and the MAG can be defined by:</p><formula xml:id="formula_15">arg min LMAG = − |V tar | l=1 |F | k=1 C lk In 1 − Z (c)lk A (c)sub , X (c)sub</formula><formula xml:id="formula_16">min M AG max AD E G K−sub ∼preal [log AD (G K−sub )] +E G (c)K−sub ∼p M AG log 1 − AD G (c)K−sub<label>(12)</label></formula><p>The pseudo code of the GraphAttacker training process is given in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">General Graph Analysis Attack</head><p>In GraphAttacker, the structure of MAG and SD is general to different graph analysis tasks. We can easily implement attacks on other graph analysis tasks by modifying AD as target graph analysis task model and modifying the corresponding optimization functions. In this part, we describe GraphAttacker's optimization function for graph classification and link prediction tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1">Graph classification attack</head><p>In the graph classification task attack, we modify the AD loss function in step1 to:</p><formula xml:id="formula_17">arg min L AD = − |G l | l=1 |Y | k=1 C lk In f graph k (A l , X l )<label>(13)</label></formula><p>similarly, we modify the attack loss function in step2 to:</p><formula xml:id="formula_18">arg min L M AG = − |Gtar| l=1 |Y | k=1 C lk In 1 − f graph k A (c)l , X (c)l<label>(14)</label></formula><p>Algorithm 1: GraphAttacker: General multi-task graph attack input : Original graph G = (A, X) or graph set </p><formula xml:id="formula_19">G set = {G 1 , • • • , G n },</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2">Link prediction attack</head><p>The link prediction task takes the existence of the link instead of the node category as the prediction target. We first optimize the prediction effect of AD on the original graph in step1:</p><formula xml:id="formula_20">arg min L AD = − |E l | l=1 |I| k=1 C lk In f graph lk (A, X)<label>(15)</label></formula><p>then we optimize MAG through AD to achieve an effective attack in step2:</p><formula xml:id="formula_21">arg min L M AG = − |Etar| l=1 |I| k=1 C lk In 1 − f graph lk A (c) , X (c)<label>(16</label></formula><p>) where I = {0, 1} is the category of the link, category "1" means the link exists, and "0" means the link does not exist. C lk = 1 if the predicted category of link E l/tar is the same as the original category, and C lk = 0 otherwise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXPERIMENTS</head><p>In this section, we apply GraphAttacker to different graph analysis tasks, and compare the achieved attack results with other baselines. The main research questions of this section are: RQ1 For a specific graph analysis task, how does the attack performance of GraphAttacker compared with existing attack methods? RQ2 Will the perturbations generated by the existing attack methods significantly change the average similarity value of node pairs? If there is such a defect, can GraphAttacker make up for it? RQ3 What is the impact of different graph datasets for attack performance? RQ4 What insights can we gain from the attack results on different graph analysis tasks through GraphAttacker?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experiment Setting</head><p>In each attack, we set the ratio of training times of MAG, SD, and AD to 1: 1: 1. For each attacked instance, we generate 20 adversarial examples. Once an adversarial example can successfully mislead the target graph analysis task, we consider that the attack is successful. At this time, we stop the attack process and output the adversarial example. Our experimental environment consists of i7-7700K 3.5GHzx8 (CPU), TITAN Xp 12GiB (GPU), 16GBx4 memory (DDR4) and Ubuntu 16.04 (OS).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Datasets</head><p>We evaluate GraphAttacker on 11 real-world datasets, including Cora <ref type="bibr" target="#b33">[34]</ref>, Citeseer <ref type="bibr" target="#b45">[46]</ref>, Pol.Blogs <ref type="bibr" target="#b34">[35]</ref>, PROTEINS/PROTEINSfull <ref type="bibr" target="#b2">[3]</ref>, DD <ref type="bibr" target="#b13">[14]</ref>, ENZYMES <ref type="bibr" target="#b39">[40]</ref>, NCI1 <ref type="bibr" target="#b48">[49]</ref>, NS <ref type="bibr" target="#b36">[37]</ref>, Yeast <ref type="bibr" target="#b47">[48]</ref>, and Facebook <ref type="bibr" target="#b27">[28]</ref>. We divide these datasets according to different graph analysis tasks. Among them, the Cora, Citeseer, and Pol.Blogs datasets are used for node classification attack, PROTEINS/PROTEINS-full, DD, ENZYMES, and NCI1 are chemical datasets, which are used for graph classification attack.</p><p>The other three datasets are used for link prediction attack. Some datasets do not have original node attributes, such as Pol.Blogs, NS, Yeast, and Facebook. In PROTEINS, DD, and NCI1, the node categories of each graph constitutes their node attributes.</p><p>The basic statistics of these datasets are summarized in TABLE 1. Among them, for the datasets used in graph classification task, we show the average number of nodes and links in each dataset. We randomly select 20% instances (V, G or E) in each dataset as the labeled instances, which are equally divided into training sets and validation sets. The rest 80% instances are used for testing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Evaluation Metrics</head><p>To evaluate the performance of attack, we use the following four metrics:</p><p>• Attack Success Rate (ASR): It represents the ratio of the targets which will be successfully attacked under a given constraints, which is defined as: Fig. <ref type="figure">3</ref>: Node similarity distribution of different datasets, it reflects the frequency of similarity between linked and unlinked node pairs. We can observe that more than 90% of the linked node pairs have a similarity higher than 0.8. </p><formula xml:id="formula_22">ASR = Number of</formula><p>• Average Modified Attributes (AMA): Different from AML, AMA is designed for node attribute attack, which indicates the average attribute perturbation size of each attack process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AMA = Number of modified attributes Number of attacked nodes (19)</head><p>• L2-Norm • 2 : In graph classification attack, the node attributes of PROTEINS-full and ENZYMES are continuous values. We use the L2-Norm to measure the magnitude of the perturbations in this case.</p><formula xml:id="formula_24">X, X 2 = N i D j x ij − x ij 2<label>(20)</label></formula><p>where X/X denotes the original/adversarial node attributes, N is the number of nodes in the graph, D is the dimension of the node attributes, and x ij /x ij is the j−th original/adversarial node attribute value of the i−th node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Node Similarity Analysis</head><p>To explore the relationship between the similarity of node pairs and the probability of the existence of links, we take the datasets of Cora, Citseer, and Pol.Blogs as examples to plot several figures about the similarity frequency between their linked and unlinked node pairs in Fig. <ref type="figure">3</ref>. We use the low-dimensional representation of the nodes obtained from Eq.3 to calculate the cosine similarity (by Eq.6) between node pairs. The x-axis is the similarity value of the node pairs, and the y-axis is the similarity frequency. It is obvious that linked node pairs tend to have higher similarity, and the similarity of more than 90% linked node pairs is greater than 0.9. In other words, two nodes with low similarity are unlikely to have a link.</p><p>Based on this phenomenon, we conclude that we should pay more attention to how to generate effective adversarial perturbations between those nodes with high similarity. Therefore, we restrict the Similarity Modification Ratio (SMR) to preserve the node similarity distribution of the original graph. In the attack of node classification and link prediction, we construct the K-hop subgraph as the attack target to reduce the cost of the attack, we added two types of nodes in the process of constructing the K-hop subgraph. 1) Random nodes: We randomly add some nodes with different categories to the original subgraph; 2) High similarity nodes: Only the nodes who have more than 0.9 similarity with the target node are added to the original subgraph. In this way, we limit the influence of the perturbation candidate set on node similarity. Specifically, the number of added nodes is 20% of the size of the original subgraph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Multi-Task Graph Attack</head><p>In this subsection, we mainly discuss question RQ1, and take node classification attack as an example to make a detailed analysis of question RQ2. To better demonstrate the graph attack performance of GraphAttacker in multi-task, we conducted attack experiments on tasks of node classification, graph classification, and link prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.1">Node classification attack</head><p>We compare our GraphAttacker with several attack methods on node classification. Our baseline attack methods, parameter analysis, average node similarity analysis, and attack performance are introduced as follows.</p><p>Baseline. Three attack methods are used as our baselines, which are briefly described as follows.</p><p>DICE <ref type="bibr" target="#b56">[57]</ref>: DICE randomly disconnect b links of target node, and then randomly connect the target node to M − b nodes of different categories, where M is the original number of links of the target node.</p><p>NETTACK <ref type="bibr" target="#b62">[63]</ref>: NETTACK generates adversarial perturbations for graph structure and node attributes, and it ensure the perturbations are unperceptible by preserving the degree distribution and attributes co-occurrence probability.</p><p>GF-Attack: <ref type="bibr" target="#b3">[4]</ref>: GF-Attack attacks graph embedding models by constructing corresponding graph filters in a black box background.</p><p>Parameter analysis. In node classification attack, K-hop subgraph is used in the attack process to achieve an efficient and lowcost attack. Here, we mainly examine the impact of the chosen of the number of selected hops K and attack scale k on the performance of GraphAttacker.</p><p>We select K ∈ N + to get proper G K−sub . As illustrated in Fig. <ref type="figure" target="#fig_3">4</ref>(a), when K is less than 3, the subgraph of the Cora and Citeseer datasets only contain less than 50 nodes, which is only about 2% of the original nodes. In this case, we consider the information contained in the subgraph is insufficient. As K increases, the size of the subgraph also increases rapidly. When K = 5, the size of the subgraph has reached more than 10% of the original graph. To achieve a more efficient attack, we set the maximum number of subgraph hops as K = 5.</p><p>We further combine different modification scales k to observe the attack effect. We choose K = 3 as the initial setting of three types of attack scales, i.e. direct attack, indirect attack, and unlimited attack. Here we constrain the attack budget &lt;0.05 * |E| to get ASR. When the number of perturbations is greater than 100, AML is set to 100. When K increases, we will also increase k to perform the corresponding scale attacks. Fig. <ref type="figure" target="#fig_3">4(b)</ref> shows the ASR under different attack scales. The solid lines represent the unlimited attack results, and the dotted lines indicate the results of indirect attack. Since the initial value of K is 3, we are actually conducting a direct attack when k = 0. At this time, we set the ASR and AML of indirect attack to 0.</p><p>We can see that our unlimited attack has better results than indirect attack. When k = 1, i.e. performing a direct attack, the highest ASR and the lowest AML are obtained. Interestingly, with the increase of the scale k, ASR is decreased significantly in Fig. <ref type="figure" target="#fig_3">4</ref>(b), while in contrast AML is increased in Fig. <ref type="figure" target="#fig_3">4(c)</ref>. We consider that because in G K−sub , the effect of indirect links on the target node is different from that in G. Modifying the indirect links in the G K−sub can misclassify the target node, but the impact of these perturbations may not be effective in G.</p><p>Attack performance. We refer to our GraphAttacker under the attack budget &lt;0.05 * |E| as B-GA, and the GraphAttacker under &lt;0.05 * |E| and Λ&lt;0.004 as D-GA. The node similarity modification ratio constraint is realized by adding high similarity nodes to G K−sub with the constraint as &lt;0.05 * |E|, Λ&lt;0.004, and SM R&lt;0.05, which we call S-GA. According to the experimental results above, we set K = 3 in GraphAttacker and use direct attack, i.e. k = 0 to obtain ASR and AML, and compare the attack results with several other attack methods in TABLE <ref type="table" target="#tab_5">2</ref>.</p><p>We can see that B-GA outperforms the baseline attack methods with higher ASR in all the cases. Even under the constraints of degree distribution statistics Λ, D-GA can still superior to baseline methods with lower AML in most cases. When attacking the random walk based graph embedding methods, GraphAttacker also have a higher ASR, which proves its strong transferability.</p><p>An interesting result is that attacks under higher stealthiness constraints, such as D-GA and S-GA, have lower AML than B-GA. The reason is that in the iterative optimization process of GraphAttacker, once a generated adversarial sample can successfully achieve the attack under the given constraints, GraphAttacker will stop the attack. Therefore, although the adversarial examples generated by GraphAttacker can meet our attack requirements, they are usually not the optimal. Higher stealthiness constraints will increase the cost of attacks. However, once the attack is successful, it can bring the benefits of lower AML.</p><p>Due to stronger stealthiness constraints, S-GA has smaller ASR than B-GA and D-GA. Especially in the dataset Pol.Blog, the ASR of S-GA dropped significantly. That is because the nodes in Pol.Blogs have obvious differentiation, only a few nodes have high similarity with other categories of nodes, which makes it difficult for GraphAttacker to generate effective attack perturbations in the subgraph. To verify whether S-GA sacrifices the ASR for higher stealthiness, we plot the average similarity distribution of the target node before and after the attack with different attack methods in Fig. <ref type="figure" target="#fig_5">5</ref>, where the x-axis denotes the Average Similarity (AS) value between the target node and its linked nodes, and the y-axis is the frequency of nodes with different average similarity. Obviously, D-GA, NETTACK, and GF-Attack have significantly changed the average similarity value of the target nodes. In particular, in Pol.Blogs, the AS of the nodes is roughly concentrated at 0 or 1, and the nodes with AS = 0 are actually isolated nodes. Under S-GA attack, these isolated nodes are connected with highly similar nodes so that they can be better hidden in normal nodes. Combining TABLE 2 and Fig. <ref type="figure" target="#fig_5">5</ref>, although S-GA sacrifices part of ASR, it generally maintains the original average similarity value of the target node, which is successfully attacked under the constraint of , Λ, and SM R. We believe that our GraphAttacker can further enhances the stealthiness of the perturbations.</p><p>Different modification strategies. We also implement node attribute attack and hybrid attack and compare them with the GraphAttacker-ori without adding random nodes to the G K−sub . Here we also set K to 3 and use direct attack. When attacking node attributes, we set the stealthiness constraint as &lt;0.05 * |E|. In each epoch of the hybrid attack, the MAG generates the adversarial subgraph adjacency matrix A sub , and then generates the adversarial node attributes X sub based on A sub . From TABLE <ref type="table" target="#tab_6">3</ref>, we can find that the attack on node attributes can only obtain less than 50% ASR. This may be that the node attributes of the citation datasets are relatively sparse, and the node categories are more determined by the graph structure. In hybrid attack, we can get the highest ASR while reducing the AML by modifying the node attributes. Similar results can be observed in GraphAttackerori, however, the ASR of GraphAttacker-ori is much lower than that of GraphAttacker. It confirms our conjecture that the category distribution of the nodes is relatively concentrated in the original neighbor subgraph of the target node, which makes the attack become very difficult, and the strategy of randomly adding nodes to the subgraph is effective. Time efficiency of attack. Most existing methods iteratively generate adversarial perturbations step by step. Different from them, GraphAttacker directly generates adversarial examples by its generator. In Fig. <ref type="figure" target="#fig_6">6</ref>, we show the training time of GraphAttacker for different size of data structure. As the size of graph structure increases, the training time also increases greatly. Since our Khop neighbor subgraph size is smaller than 20% of the original graph, which means that our strategy of attacking K-hop neighbor subgraph can effectively reduce the attack cost.     The size ratio of graph data structure(%) </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.2">Graph classification attack</head><p>In previous part, we introduce the node similarity stealthiness constraints and attack performance of GraphAttacker on node classification task. In this part, we mainly explore the attack performance of GraphAttacker on graph classification task under different modification strategies.</p><p>Model configurations. In our experiment, we use Diffpool <ref type="bibr" target="#b58">[59]</ref> built on the GCN architecture as our target attack model. We construct two embedding GCNs and one pooling GCN by using a three-layer GCN module. Among them, the first embedding GCN and the pooling GCN generate a node embedding and an assignment matrix respectively according to the original graph.  Attack strategy. From the dataset statistics in  The tendency of GraphAttacker's ASR with different structural perturbation ratio is shown in Fig. <ref type="figure" target="#fig_7">7</ref>. On the one hand, as perturbations increases, the ASR on different datasets also increases. On the other hand, when the max ratio of structural perturbation is less than 10%, the ASR increases rapidly. After that, ASR does not increase significantly. It indicates that in graph classification attack, blindly increasing the attack budget may not achieve higher ASR. We speculate that in those datasets with low ASR, the graph structure may not be the focus of the graph classification model. Attribute and hybrid attacks. According to the types of node attributes, the datasets used for graph analysis are divided into two types. One is to use node category as one-dimensional node attributes, such as PROTEIN, DD, and NCI1. The other has multidimensional continuous node attributes, such as PROTEIN-full and ENZYMES.</p><p>For the first type of datasets, we use ont-hot encoding to express their node attributes: X ∈ {0, 1} N ×|F | , where F denotes the number of categories of nodes, and each node only has one attribute. We can still use to constrain the perturbations generated by GraphAttacker on the node attributes for these datasets. Fig. <ref type="figure" target="#fig_8">8</ref> shows the ASR of the first type of datasets under different perturbation ratios r, and the attack budget is set as: &lt;r * |N |.</p><p>Comparing with the highest values of ASR in Fig. <ref type="figure" target="#fig_6">6</ref> and Fig. <ref type="figure" target="#fig_7">7</ref>, node attribute attack can achieve higher ASR. However, it requires a larger attack budget. For example, on PROTEIN, the ASR can reach 51.35% under 1% structural perturbation ratio constraint, which is higher than the ASR(42.49%) under the 20% node attribute perturbation ratio constraint. Because the node attributes composed of node categories are much more sparse and contain much less information than the graph structure, it is more difficult to influence the prediction results for the target model.</p><p>For the second type of datasets, since the and Λ are not applicable to continuous node attributes, we use L2-Norm to measure the perturbation size of continuous node attributes and use it as an additional optimization item for AD.</p><p>To better understand the difficulty of attack graph structure or node attributes, we compare the attack effects of different modification strategies (including hybrid attack) under the constraint of r&lt;20%. As the results shown in TABLE 4, the hybrid attack achieves the highest ASR on all datasets, which in most cases has lower AML or L2-Norm. For the first type of datasets, their graph structures are relatively dense. Therefore, graph structure attack can achieve higher ASR than node attribute attack under the same constraints. For the second type of datasets, the continuous node attributes are denser, and the above results are in the opposite.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.3">Link prediction attack</head><p>Here we introduce the performance and transferability of GraphAttacker in link prediction attack.</p><p>Model configurations. In link prediction task, we use GAE <ref type="bibr" target="#b24">[25]</ref> as the target attack model. GAE consists of a Graph Convolutional Network (GCN) encoder and a simple inner product decoder. The encoder has the same structure with the feature extractor introduced in Section 4.1.1 and it learns the graph embedding Z. Then the decoder calculates the inner product of Z to obtain the probability of the existence of links.</p><p>Baseline. We compare our GraphAttacker with the following two attack methods: DICE [57]: We have briefly introduced DICE in Section 5.5.1. In link prediction attack, the nodes v i and v j corresponding to the target link e ij are used as target nodes.</p><p>IGA <ref type="bibr" target="#b6">[7]</ref>: IGA extracts the gradient matrix of the GAE model, which flips the link with the largest gradient in each iteration, and obtains adversarial samples through multiple iterations.</p><p>Attack strategy. From TABLE <ref type="table" target="#tab_4">1</ref>, we can see that the datasets used for link prediction attack are similar to those in node classification and only contain one large-size graph. Therefore, we select Khop subgraphs of nodes v i and v j which from the target link as our attack targets. The datasets of Yeast and Facebook have large node degree, when K = 2, G sub already has more than thousands of nodes. To reduce the attack cost, we choose K = 3 for NS, and K = 1 for Yeast, and Facebook. Since there are no node attributes for NS, Yeast and Facebook, we only conduct graph structure attack.</p><p>We find that in link prediction attack, unlimited attack achieves a higher ASR than direct attack, which is different from the situation in node classification attack. We analyze the difference between their attack results. In link prediction attack, NS, Yeast, and Facebook have larger average node degree. We speculate that by only directly adding links to the nodes at both ends of the target link, it may be difficult to cover up the influence of the other links to target link. At the same time, the unlimited attack not only affects the target link itself, but also affects the features of the original links around it, which makes it have a better attack effect. In this case, the impact of the subtle difference between subgraph attack and whole graph attack can be ignored.</p><p>Attack performance. In this part, we compare unlimited attack with other attack methods in link prediction on TABLE 5, including B-GA, D-GA, and S-GA. In most cases, B-GA can achieve the highest ASR. However, under the same constraints, the AML of IGA is lower than B-GA. Considering that IGA achieves adversarial attack by modifying the link with the largest gradient, we think this result is reasonable. Similar to the result in section 5.5.1, we can also observe that S-GA and D-GA have smaller AML when attack link prediction task, although their ASR cannot reach the highest. In our experiments, the ASR of B-GA's transfer attack on the traditional graph embedding methods is higher than that of other baselines, which shows that GraphAttacker has stronger transferability.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Summary And Insight</head><p>Finally, we summarize the experiment results of different graph attack tasks. For the impact of different graph datasets on graph analysis task attacks (question RQ3) and the attack performance of different graph analysis tasks (question RQ4), we put forward our own insights. For question RQ3, since the datasets we used in link prediction attack only contains graph structure information, we compare the attack performance of different modification strategies in node classification attack and graph classification attack. In the datasets of Cora, Citeseer, and Pol.Blog, most node attributes are 0, and their graph structure is relatively dense, which contains more information. Therefore, in node classification attack, graph structure attack has a better attack effect than node attribute attack. In the datasets of PROTEINS,DD, and NCI, the graph structure of each dataset is also dense, and the graph structure attack also achieves better attack effect. In PROTEINS-full and ENZYMES, attacks on continuous node attributes have achieved more significant attack effect. We conclude that graph analysis models may tend to pay more attention to the graph feature (graph structure/node attributes) which contains more information. Relatively dense information may be the weak point of the datasets. Similarly, <ref type="bibr" target="#b54">[55]</ref> extracted the embedding of node attributes by constructing a attribute graph, and proved that the graph structure and node attributes in different graph datasets have different importance in GNN model, which also supports our insights.</p><p>For question RQ4, under the same constraints, graph classification attack is more difficult to achieve successful attack than node classification attack. Considering the scope of information of them, node classification model often only needs to consider the neighborhood information of the target node. For graph classification model, it aggregates the information of all nodes in the graph, so it usually requires a larger attack budget. Similar to the node classification task, link prediction task also predicts an instance (link ) in the graph. However, it is more difficult to attack. The link prediction model calculates the probability of a link between two nodes. For a successfully attack, it usually requires a large difference in the predicted probability. We believe that the classification boundary of link prediction task is more difficult to cross than node classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION</head><p>We have proposed the first general attack framework for multiple graph analysis tasks to better understand the attack characteristics of different graph analysis tasks. Based on the idea of GAN, we use a three-player game of Multi-strategy Attack Generator (MAG), Similar Discriminator (SD) and Attack Discriminator (AD) to achieve general attacks under different modification strategies, attack scale, and stealthiness constraints. We have explored the possible shortcoming of the existing perturbation constraints, and preserved the average similarity distribution of nodes in the adversarial samples, which have further improved the stealthiness of perturbations. We have carried on attack experiments on node classification, graph classification, and link prediction tasks. Extensive experiments have proved that our general attack framework can achieve state-of-the-art attack performance on each graph analysis task. Moreover, when conducting general attacks, we have analyzed the unique characteristics of each task and put forward our own insights.</p><p>The robustness of the graph analysis task model is an important issue. This work have analyzed the different weaknesses for different graph analysis tasks. For future work, we hope to apply the GAN to the defense of graph analysis tasks, and achieve more targeted defense based on the unique characteristics of different graph analysis tasks.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>′Fig. 2 :</head><label>2</label><figDesc>Fig.2: MAG in node classification attack. The red solid line indicates the added links, and the gray dotted line indicates the deleted links. Here we choose an unlimited attack on the graph structure. We obtain the low-dimensional features of the graph through the feature extractor, and then obtain our adversarial graph structure through the graph reconstructor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: The subgraph size under different K and the ASR /AML under different modificantion scales k. The solid/dotted line denotes unlimited/indirect attack. When k = 0, we only modify the links or node attributes of the target node, which is actually a direct attack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: Node similarity distribution on different datasets, it illustrates the change of the average node similarity distribution by different attack methods.</figDesc><graphic url="image-82.png" coords="9,453.56,568.14,110.54,83.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 :</head><label>6</label><figDesc>Fig. 6: The training time in each iteration when attacking different size of graph structure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 :</head><label>7</label><figDesc>Fig. 7: ASR of different structural perturbation ratios.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 :</head><label>8</label><figDesc>Fig.8: ASR of different attribute perturbation ratios.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>target instance τ , stealthiness constraints R = {∆, Λ, SM R}, perturbations δ(G, G ), the number of steps to apply to SD, MAG, AD, which are represented as k SD , k M AG and k AD output: Adversarial examples, G = (A , X ) 1 Train the target model: θ * ← min θ L model (θ, A, X) and feature extractor on original graph G to obtain Z by Eq.3; Randomly initialize the dimension expansion matrix W ex ; 2 for number of training iterations do |Y | denotes the category set of graph, C lk = 1 if graph G l belongs to category y k and C lk = 0 otherwise. A l and X l are adjacency matrix and node attributes of graph G l , respectively.</figDesc><table><row><cell>3</cell><cell>for k SD steps do</cell></row><row><cell>4</cell><cell>generate a adversarial sample G by Eq.4 and</cell></row><row><cell></cell><cell>Eq.5; updata the SD by ascending gradient:</cell></row></table><note>5∇ θ SD log SD(G, τ ) + log 1 − SD(G , τ ) ; 6 for k M AG steps do 7 update the MAG by descending gradient: 8 ∇ θ M AG log 1 − SD(G , τ ) ; 9 for k AD steps do 10 update the AD by ascending gradient: 11 ∇ θ AD log AD(G, τ ); 12 generate a new adversarial sample G ; updata the MAG by ascending gradient: 13 ∇ θ M AG log 1 − AD(G (C) , τ ) ; 14 generate a new adversarial sample G ; 15 if attack success then 16 if δ(G, G )&lt;R then 17 break; 18 return The adversarial sample G . where G l is the set of labeled graph set, Y = y 1 , • • • , y</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE 1 :</head><label>1</label><figDesc>Dataset statisics</figDesc><table><row><cell>Dataset</cell><cell>Task</cell><cell cols="5">#Graph .# Nodes .# Links .# Classes .# Attributes</cell></row><row><cell>Pol.Blogs</cell><cell>Node</cell><cell>1</cell><cell>1490</cell><cell>19090</cell><cell>2</cell><cell>-</cell></row><row><cell>Cora</cell><cell>Node</cell><cell>1</cell><cell>2708</cell><cell>5427</cell><cell>7</cell><cell>1433</cell></row><row><cell>Citeseer</cell><cell>Node</cell><cell>1</cell><cell>3312</cell><cell>4732</cell><cell>6</cell><cell>3703</cell></row><row><cell cols="2">PROTEINS-full Graph</cell><cell>1113</cell><cell>39.06</cell><cell>72.82</cell><cell>2</cell><cell>29</cell></row><row><cell>PROTEINS</cell><cell>Graph</cell><cell>1113</cell><cell>39.06</cell><cell>72.82</cell><cell>2</cell><cell>1</cell></row><row><cell>DD</cell><cell>Graph</cell><cell>1178</cell><cell>284.32</cell><cell>62.14</cell><cell>2</cell><cell>1</cell></row><row><cell>ENZYMES</cell><cell>Graph</cell><cell>600</cell><cell>32.63</cell><cell>62.14</cell><cell>6</cell><cell>18</cell></row><row><cell>NCI1</cell><cell>Graph</cell><cell>4110</cell><cell>29.87</cell><cell>32.3</cell><cell>2</cell><cell>1</cell></row><row><cell>NS</cell><cell>Link</cell><cell>1</cell><cell>1461</cell><cell>2472</cell><cell>2</cell><cell>-</cell></row><row><cell>Yeast</cell><cell>Link</cell><cell>1</cell><cell>2375</cell><cell>11693</cell><cell>2</cell><cell>-</cell></row><row><cell>Facebook</cell><cell>Link</cell><cell>1</cell><cell>4039</cell><cell>88234</cell><cell>2</cell><cell>-</cell></row><row><cell></cell><cell cols="2">AML =</cell><cell cols="3">Number of modified links Number of attacked nodes</cell><cell></cell></row></table><note>• Average Modified Links (AML): AML is designed for graph structure attack, which indicates the average number of modified links of each attack process.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE 2 :</head><label>2</label><figDesc>The ASR and AML obtained by different attack methods on node classification task.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>ASR(%)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>AML</cell><cell></cell><cell></cell></row><row><cell>Dataset</cell><cell>Model</cell><cell></cell><cell>Ours</cell><cell></cell><cell></cell><cell>Baseline</cell><cell></cell><cell></cell><cell>Ours</cell><cell></cell><cell></cell><cell>Baseline</cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="3">B-GA D-GA S-GA</cell><cell cols="3">DICE NETTACK GF-Attack</cell><cell cols="3">B-GA D-GA S-GA</cell><cell cols="3">DICE NETTACK GF-Attack</cell></row><row><cell></cell><cell>GCN</cell><cell>91.67</cell><cell>83.33</cell><cell>51.28</cell><cell>50.27</cell><cell>82.97</cell><cell>19.89</cell><cell>8.62</cell><cell>7.25</cell><cell>6.38</cell><cell>11.85</cell><cell>11.89</cell><cell>20</cell></row><row><cell>Pol.Blogs</cell><cell>Deepwalk LINE</cell><cell>88.89 89.19</cell><cell>80.49 82.93</cell><cell>48.72 50</cell><cell>64.52 66.74</cell><cell>75.41 76.35</cell><cell>12.82 23.48</cell><cell>9.15 8.83</cell><cell>7.41 7.17</cell><cell>6.96 6.62</cell><cell>12.35 12.82</cell><cell>10.06 10.26</cell><cell>20 20</cell></row><row><cell></cell><cell>Average</cell><cell>89.92</cell><cell>82.25</cell><cell>50</cell><cell>60.51</cell><cell>78.25</cell><cell>18.73</cell><cell>18.95</cell><cell>7.28</cell><cell>6.65</cell><cell>12.34</cell><cell>10.74</cell><cell>20</cell></row><row><cell></cell><cell>GCN</cell><cell>100</cell><cell>93.46</cell><cell>80.49</cell><cell>54.95</cell><cell>92.87</cell><cell>82.55</cell><cell>6.09</cell><cell>5.47</cell><cell>4.39</cell><cell>9.13</cell><cell>6.09</cell><cell>20</cell></row><row><cell>Cora</cell><cell>Deepwalk LINE</cell><cell>97.11 98.08</cell><cell>92.81 92.14</cell><cell>80.77 79.81</cell><cell>93.52 88.99</cell><cell>94.06 96.34</cell><cell>63.47 83.19</cell><cell>6.47 6.52</cell><cell>5.41 5.66</cell><cell>5.12 5.34</cell><cell>7.2 7.66</cell><cell>7.24 7.02</cell><cell>20 20</cell></row><row><cell></cell><cell>Average</cell><cell>98.4</cell><cell>92.8</cell><cell>80.36</cell><cell>79.15</cell><cell>94.42</cell><cell>76.4</cell><cell>6.36</cell><cell>5.51</cell><cell>4.95</cell><cell>7.99</cell><cell>6.78</cell><cell>20</cell></row><row><cell></cell><cell>GCN</cell><cell>100</cell><cell>97.44</cell><cell>83.33</cell><cell>70.37</cell><cell>87.5</cell><cell>61.78</cell><cell>5.71</cell><cell>4.04</cell><cell>4.29</cell><cell>9.87</cell><cell>6.88</cell><cell>20</cell></row><row><cell>Citeseer</cell><cell>Deepwalk LINE</cell><cell>98.72 100</cell><cell>97.48 96.58</cell><cell>82.05 83.33</cell><cell>93.44 96.72</cell><cell>96.96 95.82</cell><cell>50.87 60.41</cell><cell>6.46 6.57</cell><cell>4.95 4.99</cell><cell>4.89 5.01</cell><cell>7.08 7.21</cell><cell>7.06 6.02</cell><cell>20 20</cell></row><row><cell></cell><cell>Average</cell><cell>99.57</cell><cell>97.17</cell><cell>82.9</cell><cell>86.84</cell><cell>93.42</cell><cell>57.69</cell><cell>6.25</cell><cell>4.66</cell><cell>4.73</cell><cell>8.05</cell><cell>6.65</cell><cell>20</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE 3 :</head><label>3</label><figDesc>The ASR, AML and AMA obtained by GraphAttacker and GraphAttacker-ori with different attack strategies.</figDesc><table><row><cell></cell><cell></cell><cell>Attack method</cell><cell>Dataset</cell><cell></cell><cell>A</cell><cell>ASR(%) X</cell><cell>Hybrid</cell><cell>A</cell><cell>AML Hybrid</cell><cell>X</cell><cell>AMA Hybrid</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Pol.Blogs</cell><cell>92.5</cell><cell>67.5</cell><cell>95</cell><cell>3.34</cell><cell>2.21</cell><cell>5.63</cell><cell>4.3</cell></row><row><cell></cell><cell></cell><cell>GraphAttacker</cell><cell>Cora</cell><cell></cell><cell cols="2">98.57 49.29</cell><cell>99.29</cell><cell>6.62</cell><cell>5.74</cell><cell>12.88</cell><cell>13.93</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Citeseer</cell><cell cols="2">99.17 61.67</cell><cell>100</cell><cell>4.53</cell><cell>2.99</cell><cell>33.48</cell><cell>34.97</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Pol.Blogs</cell><cell>67.5</cell><cell>47.5</cell><cell>57.5</cell><cell cols="2">18.23</cell><cell>17.12</cell><cell>9.14</cell><cell>10.53</cell></row><row><cell></cell><cell cols="2">GraphAttacker-ori</cell><cell>Cora</cell><cell></cell><cell cols="2">66.43 27.86</cell><cell>35</cell><cell>3.58</cell><cell>3.72</cell><cell>7.48</cell><cell>7.04</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Citeseer</cell><cell cols="2">69.17 45.83</cell><cell>47.5</cell><cell>5.52</cell><cell>4.97</cell><cell>21.97</cell><cell>19.47</cell></row><row><cell>20</cell><cell>40</cell><cell>60</cell><cell>80</cell><cell>100</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>Then use the original graph, node embedding, and assignment matrix to generate a coarsened graph and node attributes, and use them as the input of the second embedding GCN to get a new node embedding. Finally, a fully connected layer is used to obtain the classification result of the target graph.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE 1 ,</head><label>1</label><figDesc>we can see that the datasets used for graph classification usually consists of many graphs, but the average size of these graphs is much smaller than that of citations and social network datasets. Therefore, without considering the difficulty of GAN in generating large-size graph, we use GraphAttacker to directly generate the whole adversarial samples. Since the graph classification task is to predict the graph category by aggregating the information of all nodes in the graph, it pays more attention to the overall characteristics of the graph. Therefore, we don't need to consider direct attack and indirect attack in graph classification attack. Here we have conducted unlimited attack. For modification strategy, similar to the node classification attack, we carry out graph structure attack, node attribute attack, and hybrid attack in graph classification attack.Attack performance. Here we show the attack performance of different modification strategies on graph classification attack.Structure attack. We constrain the attack budget on the</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>TABLE 4 :</head><label>4</label><figDesc>Attack performance of graph classification tasks under different modification strategies.</figDesc><table><row><cell>Dataset</cell><cell>A</cell><cell>ASR(%) X</cell><cell>Hybrid</cell><cell>A</cell><cell cols="2">AML Hybrid</cell><cell>X</cell><cell cols="2">AMA Hybrid</cell><cell>L2 Norm X Hybrid</cell></row><row><cell>PROTEINS-full</cell><cell cols="2">63.42 96.88</cell><cell>98.42</cell><cell cols="2">21.32</cell><cell>14.87</cell><cell>-</cell><cell></cell><cell>-</cell><cell>1.61</cell><cell>1.48</cell></row><row><cell>PROTEINS</cell><cell cols="2">81.17 42.49</cell><cell>84.32</cell><cell cols="2">22.30</cell><cell>24.63</cell><cell>7.27</cell><cell></cell><cell>4.45</cell><cell>-</cell><cell>-</cell></row><row><cell>D&amp;D</cell><cell cols="2">83.92 58.42</cell><cell>97.75</cell><cell cols="2">678.74</cell><cell>612.96</cell><cell cols="2">14.82</cell><cell>13.72</cell><cell>-</cell><cell>-</cell></row><row><cell>NCI1</cell><cell cols="2">78.41 18.33</cell><cell>89.86</cell><cell cols="2">78.79</cell><cell>31.80</cell><cell>3.50</cell><cell></cell><cell>4.42</cell><cell>-</cell><cell>-</cell></row><row><cell>ENZYMES</cell><cell cols="2">59.26 88.62</cell><cell>91.21</cell><cell cols="2">20.82</cell><cell>16.05</cell><cell>-</cell><cell></cell><cell>-</cell><cell>1.57</cell><cell>1.51</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>TABLE 5 :</head><label>5</label><figDesc>The ASR and AML obtained by different attack methods on link prediction task.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>ASR</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>AML</cell><cell></cell><cell></cell></row><row><cell>Dataset</cell><cell>Model</cell><cell></cell><cell>Ours</cell><cell></cell><cell cols="2">Baseline</cell><cell></cell><cell>Ours</cell><cell></cell><cell cols="2">Baseline</cell></row><row><cell></cell><cell></cell><cell cols="3">B-GA D-GA S-GA</cell><cell>IGA</cell><cell>DICE</cell><cell>B-GA</cell><cell>D-GA</cell><cell>S-GA</cell><cell>IGA</cell><cell>DICE</cell></row><row><cell></cell><cell>GAE</cell><cell>56.25</cell><cell>44.33</cell><cell>40.21</cell><cell cols="2">56.20 1.82</cell><cell>21.31</cell><cell>14.83</cell><cell>5.24</cell><cell>8.04</cell><cell>11.29</cell></row><row><cell>NS</cell><cell>Deepwalk Node2vec</cell><cell>97.94 95.83</cell><cell>89.69 89.69</cell><cell>85.57 86.87</cell><cell cols="2">76.83 49.81 71.43 44.44</cell><cell>11.23 10.86</cell><cell>6.12 6.08</cell><cell>4.17 4.21</cell><cell>5.74 3.36</cell><cell>9.63 4.59</cell></row><row><cell></cell><cell>Average</cell><cell>83.34</cell><cell>74.57</cell><cell>70.88</cell><cell cols="2">68.15 32.02</cell><cell>14.47</cell><cell>9.01</cell><cell>4.54</cell><cell>5.71</cell><cell>8.50</cell></row><row><cell></cell><cell>GAE</cell><cell>68.69</cell><cell>60.64</cell><cell>54.84</cell><cell cols="2">69.52 2.03</cell><cell>73.13</cell><cell>48.24</cell><cell>41.82</cell><cell>46.78</cell><cell>67.27</cell></row><row><cell>Yeast</cell><cell>Deepwalk Node2vec</cell><cell>96.93 97.76</cell><cell>94.90 94.90</cell><cell>90.82 89.79</cell><cell cols="2">96.15 76.67 96.15 76.67</cell><cell>45.10 48.35</cell><cell>31.71 33.57</cell><cell>26.14 26.81</cell><cell>22.77 22.46</cell><cell>43.60 45.20</cell></row><row><cell></cell><cell>Average</cell><cell>87.79</cell><cell>83.48</cell><cell>78.48</cell><cell cols="2">87.27 51.79</cell><cell>55.53</cell><cell>37.84</cell><cell>31.59</cell><cell>30.67</cell><cell>52.02</cell></row><row><cell></cell><cell>GAE</cell><cell>56.99</cell><cell>48.96</cell><cell>42.71</cell><cell cols="2">55.84 0.33</cell><cell cols="3">210.61 168.22 120.57</cell><cell cols="2">134.97 189.94</cell></row><row><cell>Facebook</cell><cell>Deepwalk Node2vec</cell><cell>100 100</cell><cell>94.85 94.90</cell><cell>90.72 88.66</cell><cell>100 100</cell><cell>100 100</cell><cell>93.42 93.54</cell><cell>75.10 74.80</cell><cell>68.66 67.98</cell><cell>99.26 80.10</cell><cell>93.33 94.33</cell></row><row><cell></cell><cell>Average</cell><cell>85.66</cell><cell>79.57</cell><cell>74.03</cell><cell cols="2">85.28 66.78</cell><cell cols="3">132.52 106.04 85.74</cell><cell cols="2">104.78 125.87</cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A semi-nmf-pca unified framework for data clustering</title>
		<author>
			<persName><forename type="first">K</forename><surname>Allab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Labiod</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nadif</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Knowledge and Data Engineering</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="2" to="16" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast unfolding of communities in large networks</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Blondel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-L</forename><surname>Guillaume</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lambiotte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Lefebvre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of statistical mechanics: theory and experiment</title>
		<imprint>
			<biblScope unit="volume">2008</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">P10008</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Protein function prediction via graph kernels</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Borgwardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Ong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schönauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vishwanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="56" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A restricted black-box adversarial framework towards attacking graph embedding models</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Rong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="3389" to="3396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Fastgcn: fast learning with graph convolutional networks via importance sampling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Xiao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1801.10247</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Ga-based q-attack on community detection</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computational Social Systems</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="491" to="503" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Link prediction adversarial attack</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zheng</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.01110</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Can adversarial network attack be defended</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xuan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1903.05994</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Fast gradient attack on network embedding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xuan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1809.02797</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Time-aware gradient attack on dynamic network link prediction</title>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xuan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1911.10561</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Adversarial recommendation: Attack of the learned fake users</title>
		<author>
			<persName><forename type="first">K</forename><surname>Christakopoulou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Banerjee</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1809.08336</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Adversarial attack on graph structured data</title>
		<author>
			<persName><forename type="first">H</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Song</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1806.02371</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Adversarial training methods for network embedding</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The World Wide Web Conference</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="329" to="339" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Distinguishing enzyme structures from non-enzymes without alignments</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">D</forename><surname>Dobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Doig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of molecular biology</title>
		<imprint>
			<biblScope unit="volume">330</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="771" to="783" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">All you need is low (rank) defending against adversarial attacks on graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Entezari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Al-Sayouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Darvishzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">E</forename><surname>Papalexakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th International Conference on Web Search and Data Mining</title>
				<meeting>the 13th International Conference on Web Search and Data Mining</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="169" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Graph adversarial training: Dynamically regularizing based on graph structure</title>
		<author>
			<persName><forename type="first">F</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-S</forename><surname>Chua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Knowledge and Data Engineering</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An end-to-end deep learning architecture for classification of malwares binary content</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gibert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mateu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Planes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Artificial Neural Networks</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="383" to="391" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Generative adversarial nets</title>
		<author>
			<persName><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pouget-Abadie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Warde-Farley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ozair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="2672" to="2680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">node2vec: Scalable feature learning for networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining</title>
				<meeting>the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="855" to="864" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Inductive representation learning on large graphs</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1024" to="1034" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Strategies for pre-training graph neural networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zitnik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.12265</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">De-health: All your online health information are belong to us</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Beyah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2020 IEEE 36th International Conference on Data Engineering (ICDE)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1609" to="1620" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">De-sag: On the de-anonymization of structure-attribute graph data</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Beyah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Dependable and Secure Computing</title>
				<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Semi-supervised classification with graph convolutional networks</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welling</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1609.02907</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Variational graph auto-encoders</title>
		<idno type="arXiv">arXiv:1611.07308</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Mapping networks of terrorist cells</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">E</forename><surname>Krebs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Connections</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="43" to="52" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Is the boston subway a small-world network?</title>
		<author>
			<persName><forename type="first">V</forename><surname>Latora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Marchiori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica A: Statistical Mechanics and its Applications</title>
		<imprint>
			<biblScope unit="volume">314</biblScope>
			<biblScope unit="issue">1-4</biblScope>
			<biblScope unit="page" from="109" to="113" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Learning to discover social circles in ego networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Mcauley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="539" to="547" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Smartwalk: Enhancing social network security via adaptive random walks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mittal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security</title>
				<meeting>the 2016 ACM SIGSAC Conference on Computer and Communications Security</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="492" to="503" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Link prediction in complex networks: A survey</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lü</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica A: statistical mechanics and its applications</title>
		<imprint>
			<biblScope unit="volume">390</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1150" to="1170" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Temporal multi-graph convolutional network for traffic flow prediction</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lv</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Intelligent Transportation Systems</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Community detection and classification in hierarchical stochastic blockmodels</title>
		<author>
			<persName><forename type="first">V</forename><surname>Lyzinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Athreya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Priebe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Network Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="13" to="26" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Multilayer flows in molecular networks identify biological modules in the human proteome</title>
		<author>
			<persName><forename type="first">G</forename><surname>Mangioni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Jurman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dedomenico</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Network Science and Engineering</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Automating the construction of internet portals with machine learning</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nigam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rennie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Seymore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Retrieval</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="163" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">The impact of unlinkability on adversarial community detection: effects and countermeasures</title>
		<author>
			<persName><forename type="first">S</forename><surname>Nagaraja</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Privacy Enhancing Technologies Symposium</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="253" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Fast algorithm for detecting community structure in networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">66133</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Finding community structure in networks using the eigenvectors of matrices</title>
	</analytic>
	<monogr>
		<title level="j">Physical review E</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">36104</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Deepwalk: Online learning of social representations</title>
		<author>
			<persName><forename type="first">B</forename><surname>Perozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Al-Rfou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Skiena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
				<meeting>the 20th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="701" to="710" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Node interference and robustness: performing virtual knock-out experiments on biological networks: the case of leukocyte integrin activation network</title>
		<author>
			<persName><forename type="first">G</forename><surname>Scardoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Montresor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tosadori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Laudanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PloS one</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">e88938</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Brenda, the enzyme database: updates and major new developments</title>
		<author>
			<persName><forename type="first">I</forename><surname>Schomburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ebeling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gremse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Heldt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Huhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schomburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic acids research</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="D431" to="D433" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Virtual adversarial training on graph convolutional networks in node classification</title>
		<author>
			<persName><forename type="first">K</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Chinese Conference on Pattern Recognition and Computer Vision (PRCV)</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="431" to="443" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Adversarial attack on hierarchical graph pooling neural networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2005.11560</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Pte: Predictive text embedding through large-scale heterogeneous text networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
				<meeting>the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1165" to="1174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Line: Large-scale information network embedding</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th international conference on world wide web</title>
				<meeting>the 24th international conference on world wide web</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1067" to="1077" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Transferring robustness for graph neural network against poisoning attacks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mitra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th International Conference on Web Search and Data Mining</title>
				<meeting>the 13th International Conference on Web Search and Data Mining</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="600" to="608" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Closeness centrality for networks with overlapping community structure</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Tarkowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Szczepański</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Rahwan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Michalak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wooldridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thirtieth AAAI Conference on Artificial Intelligence</title>
				<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Learning deep representations for graph clustering</title>
		<author>
			<persName><forename type="first">F</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Aaai</title>
				<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="1293" to="1299" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Comparative assessment of large-scale data sets of proteinprotein interactions</title>
		<author>
			<persName><forename type="first">C</forename><surname>Von Mering</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Snel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Cornell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Oliver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fields</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bork</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">417</biblScope>
			<biblScope unit="issue">6887</biblScope>
			<biblScope unit="page" from="399" to="403" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Comparison of descriptor spaces for chemical compound retrieval and classification</title>
		<author>
			<persName><forename type="first">N</forename><surname>Wale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">A</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge and Information Systems</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="347" to="375" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Graphgan: Graph representation learning with generative adversarial nets</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Guo</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.08267</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Billion-scale commodity embedding for e-commerce recommendation in alibaba</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
				<meeting>the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="839" to="848" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Heterogeneous graph matching networks for unknown malware detection</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L.-A</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Philip</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJCAI</title>
		<imprint>
			<biblScope unit="page" from="3762" to="3770" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Signed network embedding in social media</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 SIAM international conference on data mining</title>
				<meeting>the 2017 SIAM international conference on data mining</meeting>
		<imprint>
			<publisher>SIAM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="327" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Linked document embedding for classification</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th ACM international on conference on information and knowledge management</title>
				<meeting>the 25th ACM international on conference on information and knowledge management</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="115" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Am-gcn: Adaptive multi-channel graph convolutional networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
				<meeting>the 26th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1243" to="1253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">Attack graph convolutional networks by adding fake nodes</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Eaton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-J</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.10751</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Hiding individuals and communities in a social network</title>
		<author>
			<persName><forename type="first">M</forename><surname>Waniek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Michalak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Wooldridge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Rahwan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Human Behaviour</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="139" to="147" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Henneberg growth of social networks: Modeling the facebook</title>
		<author>
			<persName><forename type="first">D</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Network Science and Engineering</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Hierarchical graph representation learning with differentiable pooling</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="4800" to="4810" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Unsupervised euclidean distance attack on network embedding</title>
		<author>
			<persName><forename type="first">S</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Xuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.11015</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Adversarial attacks on graph neural networks via meta learning</title>
		<author>
			<persName><forename type="first">D</forename><surname>Zgner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gnnemann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Robust graph convolutional networks against adversarial attacks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
				<meeting>the 25th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1399" to="1407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Adversarial attacks on neural networks for graph data</title>
		<author>
			<persName><forename type="first">D</forename><surname>Zügner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Akbarnejad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Günnemann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
				<meeting>the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="2847" to="2856" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
