<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Robust Branch-and-Cut-and-Price for the Capacitated Vehicle Routing Problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ricardo</forename><surname>Fukasawa</surname></persName>
							<email>rfukasaw@isye.gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="department">School of Industrial and Systems Engineering</orgName>
								<address>
									<region>GeorgiaTech</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jens</forename><surname>Lysgaard</surname></persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Management Science and Logistics</orgName>
								<orgName type="department" key="dep2">Aarhus School of Business</orgName>
								<address>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Marcus</forename><surname>Poggi De Aragão</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Departamento de Informática</orgName>
								<orgName type="institution">PUC Rio de Janeiro</orgName>
								<address>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Marcelo</forename><surname>Reis</surname></persName>
							<email>mreis@inf.puc-rio.br.</email>
							<affiliation key="aff2">
								<orgName type="department">Departamento de Informática</orgName>
								<orgName type="institution">PUC Rio de Janeiro</orgName>
								<address>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Eduardo</forename><surname>Uchoa</surname></persName>
							<email>uchoa@producao.uff.br.</email>
							<affiliation key="aff3">
								<orgName type="department">Departamento de Engenharia de Produção</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Renato</forename><forename type="middle">F</forename><surname>Werneck</surname></persName>
							<email>rwerneck@cs.princeton.edu</email>
							<affiliation key="aff4">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Robust Branch-and-Cut-and-Price for the Capacitated Vehicle Routing Problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">CCEC04D22072B67441F5CFAE72604560</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:17+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The best exact algorithms for the Capacitated Vehicle Routing Problem (CVRP) have been based on either branch-and-cut or Lagrangean relaxation/column generation. This paper presents an algorithm that combines both approaches: it works over the intersection of two polytopes, one associated with a traditional Lagrangean relaxation over q-routes, the other defined by bound, degree and capacity constraints. This is equivalent to a linear program with exponentially many variables and constraints that can lead to lower bounds that are superior to those given by previous methods. The resulting branch-andcut-and-price algorithm can solve to optimality all instances from the literature with up to 135 vertices. This doubles the size of the instances that can be consistently solved.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Let G = (V, E) be an undirected graph with vertices V = {0, 1, . . . , n}. Vertex 0 represents the depot, whereas all others represent clients, each with an associated demand d <ref type="bibr">(•)</ref>. Each edge e ∈ E has a nonnegative length (e). Given G and two positive integers (K and C), the Capacitated Vehicle Routing Problem (CVRP) consists of finding routes for K vehicles satisfying the following constraints: (i) each route starts and ends at the depot, (ii) each client is visited by a single vehicle, and (iii) the total demand of all clients in any route is at most C. The goal is to minimize the sum of the lengths of all routes. This classical NP-hard problem is a natural generalization of the Travelling Salesman Problem (TSP), and has widespread application itself. The CVRP was first proposed in 1959 by Dantzig and Ramser <ref type="bibr" target="#b14">[13]</ref> and has received close attention from the optimization community since then.</p><p>A landmark exact algorithm for the CVRP, presented in 1981 by Christofides, Mingozzi and Toth <ref type="bibr" target="#b12">[11]</ref>, uses a Lagrangean bound from minimum q-route subproblems. A q-route is a walk that starts at the depot, traverses a sequence of clients with total demand at most C, and returns to the depot. Some clients may be visited more than once, so the set of valid CVRP routes is strictly contained in the set of q-routes. The resulting branch-and-bound algorithm could solve instances with up to 25 vertices, a respectful size at the time.</p><p>Several other algorithms using Lagrangean relaxation appear in the literature. Christofides et al. <ref type="bibr" target="#b12">[11]</ref> also describe a lower bound based on k-degree center trees, which are minimum spanning trees having degree K ≤ k ≤ 2K on the depot, plus 2K -k least-cost edges. Lagrangean bounds based on Ktrees (sets of n + K -1 edges spanning V ) having degree 2K in the depot were used by Fisher <ref type="bibr" target="#b15">[14]</ref> and by Martinhon, Lucena, and Maculan <ref type="bibr" target="#b25">[24]</ref>, among others. Miller <ref type="bibr" target="#b26">[25]</ref> presented an algorithm based on minimum b-matchings having degree 2K at the depot and 2 on the remaining vertices. Lagrangean bounds can be improved by dualizing capacity inequalities <ref type="bibr" target="#b15">[14,</ref><ref type="bibr" target="#b26">25]</ref> and also comb and multistar inequalities <ref type="bibr" target="#b25">[24]</ref>.</p><p>Another family of exact algorithms stems from the formulation of the CVRP as a set partitioning problem by Balinski and Quandt <ref type="bibr" target="#b9">[8]</ref>. A column covers a set of vertices S with total demand not exceeding C and has the cost of a minimum route over {0} ∪ S. Unfortunately, the formulation is not practical because pricing over the exponential number of columns requires the solution of capacitated prize-collecting TSPs, a problem almost as difficult as the CVRP itself. Agarwal, Marthur and Salkin <ref type="bibr" target="#b8">[7]</ref> proposed a column generation algorithm on a modified set partitioning problem where column costs are given by a linear function over the vertices yielding a lower bound on the actual route cost. Columns with the modified cost can be priced by solving easy knapsack problems. Hadjiconstantinou et al. <ref type="bibr" target="#b18">[17]</ref> derive lower bounds from heuristic solutions to the dual of the set partitioning formulation. The dual solutions are obtained by the so-called additive approach, combining the q-route and k-shortest path relaxations.</p><p>For further information and comparative results on the algorithms mentioned above, we refer the reader to the surveys by Toth and Vigo <ref type="bibr" target="#b32">[31,</ref><ref type="bibr" target="#b33">32]</ref>.</p><p>Recent research on the CVRP has been concentrated on the polyhedral description of the convex hull of the edge incidence vectors that correspond to K feasible routes and on the development of effective separation procedures <ref type="bibr" target="#b2">[1,</ref><ref type="bibr" target="#b4">3,</ref><ref type="bibr" target="#b6">5,</ref><ref type="bibr" target="#b7">6,</ref><ref type="bibr" target="#b13">12,</ref><ref type="bibr" target="#b21">20,</ref><ref type="bibr" target="#b27">26]</ref>. In particular, Araque et al. <ref type="bibr" target="#b5">[4]</ref>, Augerat et al. <ref type="bibr" target="#b7">[6]</ref>, Blasum and Hochstättler <ref type="bibr" target="#b10">[9]</ref>, Ralphs et al. <ref type="bibr" target="#b31">[30]</ref>, Achuthan, Caccetta, and Hill <ref type="bibr" target="#b3">[2]</ref> and Lysgaard, Letchford, and Eglese <ref type="bibr" target="#b24">[23]</ref> describe complete branch-and-cut (BC) algorithms. These are the best exact methods currently available for the CVRP. However, the addition of several elaborate classes of cuts does not guarantee tight lower bounds, especially for large values of K (K ≥ 7, say). Closing the resulting duality gap usually requires exploring several nodes in the branch-and-cut tree. Even resorting to massive computational power (up to 80 processors running in parallel in a recent work by Ralphs <ref type="bibr" target="#b30">[29,</ref><ref type="bibr" target="#b31">30]</ref>) several instances with fewer than 80 vertices, including some proposed more than 30 years ago by Christofides and Eilon <ref type="bibr" target="#b11">[10]</ref>, can not be solved at all. In fact, branch-and-cut algorithms for the CVRP seem to be experiencing a "diminishing returns" stage, where substantial theoretical and implementation efforts achieve practical results that are only marginally better than those of previous works.</p><p>We present a new exact algorithm for the CVRP that seems to break through this situation. The main idea is to combine the branch-and-cut approach with the q-routes approach (which we interpret as column generation instead of the original Lagrangean relaxation) to derive superior lower bounds. Since the resulting formulation has an exponential number of both columns and rows, this leads to a branch-and-cut-and-price (BCP) algorithm. Computational experiments over the main instances from the literature show that this algorithm is very consistent on solving instances with up to 100 vertices. Eighteen open instances were solved for the first time.</p><p>The idea of combining column and cut generation to improve lower bounds has rarely been used, since new dual variables corresponding to separated cuts may have the undesirable effect of changing the structure of the pricing subproblem. However, if cuts are expressed in terms of variables from a suitable original formulation, they can be incorporated into the column generation process without disturbing the pricing. We refer to branch-and-bound procedures based on such formulations as robust branch-and-cut-and-price algorithms. Poggi de Aragão and Uchoa <ref type="bibr" target="#b29">[28]</ref> present a detailed discussion on this subject, including new reformulation techniques that extend the applicability of robust branch-andcut-and-price algorithms to virtually any combinatorial optimization problem. This article on the CVRP is part of a larger effort to demonstrate that these methods lead to significant improvements on a wide variety of problems. Major advances have already been reported on two other problems: capacitated minimum spanning tree <ref type="bibr" target="#b16">[15]</ref> and generalized assignment <ref type="bibr" target="#b28">[27]</ref>.</p><p>This article is organized as follows. Section 2 describes the integer programming formulation we will deal with. Section 3 gives a general description of our algorithm, including its two main components: column and cut generation. Following the work of Irnich and Villeneuve <ref type="bibr" target="#b19">[18]</ref> on the CVRP with time windows, our column generation procedure eliminates q-routes with small cycles. The separation routines are based on the families of inequalities recently discussed by Letchford, Eglese, and Lysgaard <ref type="bibr" target="#b21">[20,</ref><ref type="bibr" target="#b24">23]</ref>. Section 4 presents an empirical analysis of our method. Final remarks are made in Sect. 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The New Formulation</head><p>A classical formulation for the CVRP <ref type="bibr" target="#b20">[19]</ref> represents by x ij the number of times a vehicle traverses the edge (i, j) ∈ E. The set of client vertices is denoted by V + = {1, . . . , n}. Given a set S ⊆ V + , let d(S) be the sum of the demands of all vertices in S, and let δ(S) be the cut-set defined by S. Also, let k(S) = d(S)/C . Define the following polytope in IR |E| :</p><formula xml:id="formula_0">P 1 =                    e∈δ({i}) x e = 2 ∀ i ∈ V +<label>(1)</label></formula><p>e∈δ( <ref type="formula">{0}</ref>)</p><formula xml:id="formula_1">x e = 2 • K (2) e∈δ(S) x e ≥ 2 • k(S) ∀ S ⊆ V + (3) x e ≤ 1 ∀ e ∈ E \ δ({0}) (4) x e ≥ 0 ∀ e ∈ E .</formula><p>Constraints (1) state that each client is visited once by some vehicle, whereas (2) states that K vehicles must leave and enter the depot. Constraints (3) are rounded capacity inequalities, which require all subsets to be served by enough vehicles. Constraints (4) enforce that each edge not adjacent to the depot is traversed at most once (edges adjacent to the depot can be used twice when a route serves only one client). The integer vectors x in P 1 define all feasible solutions for the CVRP. There are exponentially many inequalities of type (3), so the lower bound given by</p><formula xml:id="formula_2">L 1 = min x∈P 1 e∈E e x e</formula><p>must be computed by a cutting plane algorithm. Alternatively, a formulation with an exponential number of columns can be obtained by defining variables (columns) that correspond to q-routes without 2-cycles (subpaths i → j → i, i = 0). Restricting the q-routes to those without such cycles improves the formulation and does not change the complexity of the pricing <ref type="bibr" target="#b12">[11]</ref>. Let Q be an m × p matrix where the columns are the edge incidence vectors of all p such q-routes. Let q e j be the coefficient associated with edge e in the j-th column of Q. Consider the following polytope in IR |E| , defined as the projection of a polytope in IR p+|E| :</p><formula xml:id="formula_3">P 2 = proj x                      p j=1 q e j • λ j - x e = 0 ∀e ∈ E (5) p j=1 λ j = K (6) e∈δ({i}) x e = 2 ∀ i ∈ V + (1)</formula><formula xml:id="formula_4">x e ≥ 0 ∀ e ∈ E λ j ≥ 0 ∀ j ∈ {1, . . . , p} .</formula><p>Constraints <ref type="bibr" target="#b6">(5)</ref> define the coupling between variables x and λ. Constraint <ref type="bibr" target="#b7">(6)</ref> defines the number of vehicles to use. It can be shown that the set of integer vectors in P 2 also defines all feasible solutions for the CVRP. Due to the exponential number of variables λ, the lower bound given by</p><formula xml:id="formula_5">L 2 = min x∈P2 e∈E</formula><p>e x e must be computed using column generation or Lagrangean relaxation.</p><p>The description of polyhedra associated with column generation or Lagrangean relaxation in terms of two sets of variables, λ and x, used in the definition of P 2 , is called Explicit Master in <ref type="bibr" target="#b29">[28]</ref>. The main contribution of this article is a formulation that amounts to optimizing over the intersection of polytopes P 1 and P 2 . The Explicit Master format describes such intersection as follows:</p><formula xml:id="formula_6">P 3 = P 1 ∩P 2 = proj x                                        e∈δ({i}) x e = 2 ∀ i ∈ V + (1)</formula><p>e∈δ( <ref type="formula">{0}</ref>)</p><formula xml:id="formula_7">x e = 2 • K (2) e∈δ(S) x e ≥ 2 • k(S) ∀ S ⊆ V + (3) x e ≤ 1 ∀ e ∈ E \ δ({0}) (4) p j=1 q e j • λ j - x e = 0 ∀e ∈ E (5) p j=1 λ j = K (6) x e ≥ 0 ∀ e ∈ E λ j ≥ 0 ∀ j ∈ {1, . . . , p} .</formula><p>Constraint ( <ref type="formula">6</ref>) can be discarded, since it is implied by ( <ref type="formula">2</ref>) and ( <ref type="formula">5</ref>). Computing the improved lower bound</p><formula xml:id="formula_8">L 3 = min x∈P 3 e∈E e x e</formula><p>requires solving a linear program with an exponential number of both variables and constraints. A more compact LP is obtained if every occurrence x e in (1)-( <ref type="formula">4</ref>) is replaced by its equivalent given by <ref type="bibr" target="#b6">(5)</ref>. The resulting LP will be referred to as the Dantzig-Wolfe Master problem (DWM):</p><formula xml:id="formula_9">DWM =                                      L 3 = min p j=1 e∈E e • q e j • λ j (7) s.t. p j=1 e∈δ({i}) q e j • λ j = 2 ∀ i ∈ V + (8) p j=1 e∈δ({0}) q e j • λ j = 2 • K (9) p j=1 e∈δ(S) q e j • λ j ≥ 2 • k(S) ∀ S ⊆ V + (<label>10</label></formula><formula xml:id="formula_10">) p j=1 q e j • λ j ≤ 1 ∀ e ∈ E \ δ({0}) (11) λ j ≥ 0 ∀ j ∈ {1, . . . , p} .</formula><p>Capacity inequalities are not the only ones that can appear in the DWM. A generic cut e∈E a e x e ≥ b can be included as p j=1 ( e∈E a e q e j ) • λ j ≥ b. In fact, we added all classes of cuts described in <ref type="bibr" target="#b24">[23]</ref>.</p><p>3 The Branch-and-Cut-and-Price Algorithm Column Generation. The reduced cost of a column (λ variable) is the sum of the reduced costs of the edges in the corresponding q-route. Let µ, ν, π, and ω be the dual variables associated with constraints (8), ( <ref type="formula">9</ref>), <ref type="bibr" target="#b11">(10)</ref>, and <ref type="bibr" target="#b12">(11)</ref>, respectively. The reduced cost ce of an edge e is given by: ce</p><formula xml:id="formula_11">=      e -µ i -µ j - S|δ(S) e π S -ω e e = {i, j} ∈ E \ δ({0}) e -ν -µ j - S|δ(S) e</formula><p>π S e = {0, j} ∈ δ({0}) .</p><p>An additional generic cut p j=1 ( e∈E a e q e j )•λ j ≥ b in DWM, with dual variable α, contributes with the value -a e • α to the computation of ce .</p><p>The pricing subproblem consists of finding q-routes (columns) of minimum reduced cost. Although this problem is NP-hard in general, it can be solved in pseudopolynomial time if all demands are integer <ref type="bibr" target="#b12">[11]</ref>.</p><p>The basic data structure is a C × n matrix M . Each entry M (d, v) will represent the least costly walk that reaches vertex v using total demand exactly d. The entry contains a label consisting of the vertex (v), the cost of the walk, and a pointer to a label representing the walk up to the previous vertex. The matrix is filled by dynamic programming, row by row, starting with d = 1. For each row d, the algorithm goes through each entry v and, for each neighbor w of v, evaluates the extension of the walk represented by</p><formula xml:id="formula_12">M (d, v) to w. If c(M (d, v)) + c(v,w) &lt; c(M (d + d(w), w)), M (d + d(w), w) is updated.</formula><p>Eventually, we will have the most negative walk with accumulated demand at most C that arrives at each vertex v. Extending the walk to the depot (whose demand is zero), we obtain the corresponding q-route. All negative q-routes thus found (there will be at most n) are added to the linear program. There are nC entries in the matrix, and each is processed in O(n) time, so the total running time is O(n 2 C).</p><p>To strengthen the formulation, we look for s-cycle-free q-routes, for small values of s. The algorithm operates as above, using dynamic programming to fill a C × n matrix with partial walks. Each entry in the matrix is no longer a single label, but a bucket of labels. Bucket M (d, v) represents not only the cheapest s-cycle-free walk with total demand d that ends in v, but also alternative walks that ensure that all possible s-vertex extensions from v are considered. Deciding which walks to keep is trivial for s = 2 <ref type="bibr" target="#b12">[11]</ref>, but quite intricate for s ≥ 3. We handle this with the approach originally proposed by Irnich and Villeneuve <ref type="bibr" target="#b19">[18]</ref> (the reader is referred to their paper for details). They show that buckets must have size at least s!, so the method quickly becomes impractical.</p><p>We use three heuristics to accelerate the algorithm. They all find only scycle-free q-routes, but not necessarily the minimum one. Hence, whenever they find no negative route, the exact algorithm must verify that none exists.</p><p>The first acceleration technique we use is scaling, which considers g &gt; 1 units of demand at a time. The exact algorithm is run with a modified demand d v (g) = d v /g for every vertex v, and modified capacity C = C/g for the vehicles. The running time will be proportional to C instead of C, but the solutions found will still be valid in the original setting.</p><p>The second technique is sparsification. Intuitively, small edges in the original graph are more likely to appear in the solution. With that in mind, we precompute a set of five disjoint spanning forests using an extension of Kruskal's algorithm similar to the "edge-greedy heuristic" described in <ref type="bibr" target="#b35">[34]</ref>. By considering only edges in those trees, the dynamic programming will be limited to a restricted set of neighbors when processing each vertex.</p><p>The third acceleration is bucket pruning, which consists of storing only s (instead of s!) labels per bucket. To minimize the number of valid s-extensions blocked, we keep only labels that differ significantly from each other.</p><p>The algorithm starts using all three acceleration techniques. Whenever it fails to find a negative q-route, it turns one of them off. If the algorithm fails with no acceleration, we can safely declare that no negative q-route exists. On the other hand, if only a subset of the heuristics is in use and they do find a negative q-route, other heuristics are turned back on.</p><p>Cut Generation. At first, the LP formulation includes only degree constraints; violated cuts are added as needed. Besides the well-known rounded capacity cuts <ref type="bibr" target="#b11">(10)</ref> and bound cuts <ref type="bibr" target="#b12">(11)</ref>, we also use framed capacity, strengthened comb, multistar, partial multistar, generalized multistar and hypotour cuts, all presented in <ref type="bibr" target="#b24">[23]</ref>. We use the CVRPSEP package <ref type="bibr" target="#b23">[22]</ref> to separate those cuts. Since they are defined in terms of the x * e variables, not readily available in the DWM formulation, we convert λ * j variables into the corresponding x * e variables as needed.</p><p>Branching Rule. The algorithm starts by adding columns to the formulation until there are none with negative reduced costs, then it looks for all violated cuts. This is repeated until both column generation and separation fail. If the node cannot be fathomed at this point, we branch. The branching rule is an adaptation of the rule used in <ref type="bibr" target="#b24">[23]</ref>. We choose as branching candidates sets S such that 2 &lt; x * (δ(S)) &lt; 4 and branch by imposing the disjunction (x(δ(S)) = 2) ∨ (x(δ(S)) ≥ 4).</p><p>We use strong branching to select which set to branch on. Since computing the actual lower bound for each child node can be very time-consuming, we estimate it by performing a small number of column generation iterations. Only p candidate sets (5 ≤ p ≤ max{10 -depth, 5}) are evaluated. This limits the time spent on strong branching, especially when the depth is high. Priority is given to sets with smaller values of |x * (δ(S)) -2.7|/d(S). We use 2.7 because constraint x(δ(S)) = 2 tends to have a greater impact on the LP relaxation than x(δ(S)) ≥ 4, leading to an imbalance in the branch-and-bound tree. Values closer to 2 than 4 increase the impact of imposing x(δ(S)) ≥ 4.</p><p>Node Selection and Primal Bounds. We used as initial primal bound the best previously known solution plus one. The node selection strategy chosen was depth first search, because it requires less memory.</p><p>Dynamic Choice of Column Generation. It usually pays off to combine the strengths of cut and column generation into a single algorithm. However, in some instances, the increase in the lower bound is not worth the additional time spent. In these cases pure branch-and-cut performs better than branch-and-cutand-price. We modified our algorithm to handle such cases. In the root node, we start as in a pure branch-and-cut, without any column generation. After that, the root node is solved again with a branch-and-cut-and-price using the column generation with s = 2. Then we solve it once again, changing s to 3. For the rest of the branch-and-bound tree, the algorithm picks the strategy with the best balance between running time and bound quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Computational Experiments</head><p>We tested our algorithm on most instances available at www.branchandcut.org. All instances with up to 135 vertices were solved to optimality, eighteen of them for the first time. The tests were run on a Pentium IV, 2.4 GHz, with 1GB of RAM. Throughout this section, we will refer to the branch-and-cut-and-price algorithm with dynamic choice of column generation as Dyn-BCP and the branchand-cut-and-price with pre-determined column generation as BCP.</p><p>Tables <ref type="table" target="#tab_0">1</ref> and<ref type="table">2</ref> detail the results obtained by Dyn-BCP. Columns Root LB and Root Time give the lower bound and total CPU time of the root node of the branch-and-bound tree. The running time includes the dynamic choice of column generation and strong branching. The next column represents the size s of the cycles eliminated by the column generation procedure ("-" indicates that column generation was not used). Tree Size represents the total number of branch-and-bound nodes explored, and Total Time is the total CPU time spent by the algorithm. Finally, Prev UB and Our UB indicate the best solution value available in the literature and the one obtained by our procedure. Values in bold indicate proven optimality.</p><p>Table <ref type="table">3</ref> compares several different lower bounds obtained for the CVRP. Lower bounds L1, L2 and L3 (defined in Sect. 2) are presented in the first three columns. Column LLE03 shows the lower bounds obtained by <ref type="bibr" target="#b24">[23]</ref>, which are the best available in the literature. The next three columns contain the lower bounds obtained at the root node of the BCP with s-cycle elimination (for s = 2, 3, 4). Column OPT is the optimal solution value and T(3) is the total CPU time (in seconds) spent at the root node of BCP for s = 3, the value most commonly used. On average, the algorithm for s = 4 was 61% slower than for s = 3, which in turn was 12% slower than for s = 2. The last line shows the average gap of each bound, considering only instances with a known optimum.</p><p>Table <ref type="table">3</ref> shows that major improvements can be obtained by using the BCP approach instead of pure branch-and-cut. Also, eliminating longer cycles often increases the lower bounds significantly.</p><p>The greatest improvements usually happen when the ratio n/K is smallest. In such cases, columns without small cycles are very close to being actual routes, so one can expect the duality gap to be reduced. Figure <ref type="figure" target="#fig_0">1</ref>, created from the instances * An earlier version of our algorithm <ref type="bibr" target="#b17">[16]</ref> found a solution of 1272 but could not prove its optimality. Using that information, K. Wenger <ref type="bibr" target="#b34">[33]</ref> solved this instance. of Table <ref type="table">3</ref> with a known optimal solution, illustrates this observation. The horizontal axis represents the ratio n/K. The value plotted is (s3 -lle)/(opt -lle), where s3 is the bound of the BCP with s = 3, lle is the LLE03 bound and opt is the optimal solution value. This ratio represents the reduction of the duality gap relative to the LLE03 gap. The value is zero whenever both methods produce the same result; positive values mean that BCP gaps are smaller, and negative values favor LLE03. Circles represent instances that were solved by our algorithm for the first time, while crosses indicate instances that were already closed. Only one instance (B-n56-k7) had a negative value (-0.009). The gap was often reduced by more than 50%, enough to close several open instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>This paper has shown that a careful combination of column and cut generation leads to a very effective algorithm for the CVRP. We consider the three main aspects that can lead to further improvements: cut generation, column generation, and the integration between them.</p><p>Consider cutting planes. Rounded capacity cuts are highly effective in our BCP-the efficient heuristic separation for them contributes significantly to the good overall performance. We did try all other families of cuts for the CVRP known to be effective in a pure BC: framed capacities, generalized capacities, strengthened combs, multistars, and extended hypotours. Surprisingly, however, their effect was quite modest in practice-only on E-n101-k8 the root bound increased by more than two units. Any improvement to the cutting part of our BCP will therefore require new families of inequalities. Unfortunately, looking for facet-defining inequalities may not be enough within the BCP framework, since a facet of the CVRP polyhedron can also be a facet of the polyhedron induced by column generation over the q-routes. <ref type="foot" target="#foot_0">6</ref> A new family of inequalities will only be effective in our context if it significantly cuts polyhedron P 2 .</p><p>In the short term, improvements are more likely to come from column generation. The goal is to devise efficient ways of pricing over a set of columns as close to cycle-free q-routes as possible. The s-cycle elimination approach we chose was reasonably effective, at least for s ≤ 4. But other alternatives to further restrict the q-routes can also be tried. One could, for instance, forbid q-routes that visit vertices in a small set S more than once. This set could be dynamically chosen in order to eliminate q-routes with long cycles that are particularly harmful to bound quality.</p><p>In principle, several of the combinatorial relaxations of the CVRP-such as k-degree center trees, K-trees, or b-matchings-could also be used instead of (or even in addition to) q-routes. We think they are unlikely to have a noticeable impact, for two reasons. First, among the relaxations mentioned above, only q-routes take client demands and vehicle capacities into account. These "numerical" elements are precisely what makes the CVRP much harder in practice than a "pure" graph problem such as the TSP. It seems that known families of inequalities for the CVRP, mostly inspired by previous work on the TSP, cannot cope well with this numerical aspect. The inequalities implicitly given by P 2 can do better. The second reason for not using the alternatives above is that only qroutes lead to a pricing problem that is superpolynomial, but still practical. The polyhedra associated with polynomial pricing problems can be fully described and efficiently separated, which usually makes a pure BC (instead of BCP) a faster alternative. For instance, we can separate over the b-matching polyhedron in a very efficient way <ref type="bibr" target="#b22">[21]</ref>. Separation over the q-route polyhedron, on the other hand, is possible only implicitly, with column generation.</p><p>Even if we leave column and cut generation as they are, we can still accelerate the algorithm through better integration. The task of designing, coding and fine-tuning a high performance branch-and-cut or branch-and-price procedure is complex, requiring experience to choose among several possible strategies, and, often, some computational tricks. BCP multiplies the possibilities and, therefore, the difficulties. We believe that there is still plenty of room for such improvements in our BCP.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Gap improvement of BCP with s = 3 (s3) with respect to [23] (lle). The graph represents s3-lle opt-lle as a function of n K . Circles represent instances solved to optimality for the first time and crosses the ones already closed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Results of the Dyn-BCP algorithm for the A and B instances.</figDesc><table><row><cell>Instance</cell><cell>Root</cell><cell>Root</cell><cell cols="2">s Tree</cell><cell>Total</cell><cell>Prev.</cell><cell>Our</cell></row><row><cell></cell><cell>LB</cell><cell>Time (s)</cell><cell></cell><cell cols="2">Size Time (s)</cell><cell>UB</cell><cell>UB</cell></row><row><cell>A-n37-k5</cell><cell>664.8</cell><cell cols="2">16 -</cell><cell>8</cell><cell>19</cell><cell>669</cell><cell>669</cell></row><row><cell>A-n37-k6</cell><cell>932.6</cell><cell cols="2">30 3</cell><cell>74</cell><cell>379</cell><cell>949</cell><cell>949</cell></row><row><cell>A-n38-k5</cell><cell>716.5</cell><cell cols="2">12 -</cell><cell>52</cell><cell>26</cell><cell>730</cell><cell>730</cell></row><row><cell>A-n39-k5</cell><cell>816.6</cell><cell cols="2">107 3</cell><cell>11</cell><cell>167</cell><cell>822</cell><cell>822</cell></row><row><cell>A-n39-k6</cell><cell>822.8</cell><cell cols="2">39 3</cell><cell>11</cell><cell>98</cell><cell>831</cell><cell>831</cell></row><row><cell>A-n44-k6</cell><cell>934.8</cell><cell cols="2">52 2</cell><cell>6</cell><cell>90</cell><cell>937</cell><cell>937</cell></row><row><cell>A-n45-k6</cell><cell>938.1</cell><cell cols="2">52 3</cell><cell>11</cell><cell>170</cell><cell>944</cell><cell>944</cell></row><row><cell>A-n45-k7</cell><cell>1139.3</cell><cell cols="2">88 3</cell><cell>26</cell><cell cols="3">331 1146 1146</cell></row><row><cell>A-n46-k7</cell><cell>914.0</cell><cell cols="2">63 2</cell><cell>3</cell><cell>92</cell><cell>914</cell><cell>914</cell></row><row><cell>A-n48-k7</cell><cell>1069.1</cell><cell cols="2">72 3</cell><cell>8</cell><cell cols="3">166 1073 1073</cell></row><row><cell>A-n53-k7</cell><cell>1003.9</cell><cell cols="2">138 3</cell><cell>16</cell><cell cols="3">611 1010 1010</cell></row><row><cell>A-n54-k7</cell><cell>1153.9</cell><cell cols="2">125 3</cell><cell>90</cell><cell cols="3">1409 1167 1167</cell></row><row><cell>A-n55-k9</cell><cell>1067.4</cell><cell cols="2">32 3</cell><cell>7</cell><cell cols="3">84 1073 1073</cell></row><row><cell>A-n60-k9</cell><cell>1344.4</cell><cell cols="2">161 3</cell><cell>224</cell><cell>3080</cell><cell cols="2">1354 1354</cell></row><row><cell>A-n61-k9</cell><cell>1022.5</cell><cell cols="2">108 3</cell><cell>121</cell><cell cols="3">1883 1034 1034</cell></row><row><cell>A-n62-k8</cell><cell>1280.4</cell><cell cols="2">722 3</cell><cell>101</cell><cell>3102</cell><cell cols="2">1290 1288</cell></row><row><cell>A-n63-k9</cell><cell>1607.0</cell><cell cols="2">238 3</cell><cell>49</cell><cell>1046</cell><cell cols="2">1616 1616</cell></row><row><cell cols="2">A-n63-k10 1299.1</cell><cell cols="2">136 3</cell><cell>387</cell><cell>4988</cell><cell cols="2">1315 1314</cell></row><row><cell>A-n64-k9</cell><cell>1385.3</cell><cell cols="2">265 3</cell><cell>648</cell><cell>11254</cell><cell cols="2">1402 1401</cell></row><row><cell>A-n65-k9</cell><cell>1166.5</cell><cell cols="2">154 3</cell><cell>17</cell><cell cols="3">516 1174 1174</cell></row><row><cell>A-n69-k9</cell><cell>1141.4</cell><cell cols="2">289 3</cell><cell>391</cell><cell>7171</cell><cell cols="2">1159 1159</cell></row><row><cell cols="2">A-n80-k10 1754.0</cell><cell cols="2">1120 3</cell><cell>153</cell><cell>6464</cell><cell cols="2">1763 1763</cell></row><row><cell>B-n38-k6</cell><cell>800.2</cell><cell cols="2">10 -</cell><cell>14</cell><cell>14</cell><cell>805</cell><cell>805</cell></row><row><cell>B-n39-k5</cell><cell>549.0</cell><cell cols="2">3 -</cell><cell>1</cell><cell>3</cell><cell>549</cell><cell>549</cell></row><row><cell>B-n41-k6</cell><cell>826.4</cell><cell cols="2">13 -</cell><cell>8</cell><cell>18</cell><cell>829</cell><cell>829</cell></row><row><cell>B-n43-k6</cell><cell>733.7</cell><cell cols="2">13 -</cell><cell>74</cell><cell>29</cell><cell>742</cell><cell>742</cell></row><row><cell>B-n44-k7</cell><cell>909.0</cell><cell cols="2">9 -</cell><cell>1</cell><cell>9</cell><cell>909</cell><cell>909</cell></row><row><cell>B-n45-k5</cell><cell>747.5</cell><cell cols="2">10 -</cell><cell>19</cell><cell>16</cell><cell>751</cell><cell>751</cell></row><row><cell>B-n45-k6</cell><cell>677.5</cell><cell cols="2">224 3</cell><cell>3</cell><cell>279</cell><cell>678</cell><cell>678</cell></row><row><cell>B-n50-k7</cell><cell>741.0</cell><cell cols="2">5 -</cell><cell>3</cell><cell>6</cell><cell>741</cell><cell>741</cell></row><row><cell>B-n50-k8</cell><cell>1295.0</cell><cell cols="2">97 3</cell><cell>287</cell><cell cols="3">2845 1312 1312</cell></row><row><cell>B-n51-k7</cell><cell>1025.2</cell><cell cols="2">16 -</cell><cell>83</cell><cell cols="3">46 1032 1032</cell></row><row><cell>B-n52-k7</cell><cell>745.8</cell><cell cols="2">7 -</cell><cell>9</cell><cell>9</cell><cell>747</cell><cell>747</cell></row><row><cell>B-n56-k7</cell><cell>704.0</cell><cell cols="2">15 -</cell><cell>9</cell><cell>22</cell><cell>707</cell><cell>707</cell></row><row><cell>B-n57-k7</cell><cell>1149.2</cell><cell cols="2">76 -</cell><cell>133</cell><cell cols="3">168 1153 1153</cell></row><row><cell>B-n57-k9</cell><cell>1596.0</cell><cell cols="2">61 3</cell><cell>15</cell><cell cols="3">193 1598 1598</cell></row><row><cell cols="2">B-n63-k10 1479.4</cell><cell cols="2">231 -</cell><cell>501</cell><cell cols="3">682 1496 1496</cell></row><row><cell>B-n64-k9</cell><cell>859.3</cell><cell cols="2">70 -</cell><cell>7</cell><cell>86</cell><cell>861</cell><cell>861</cell></row><row><cell>B-n66-k9</cell><cell>1307.5</cell><cell cols="2">145 3</cell><cell>126</cell><cell cols="3">1778 1316 1316</cell></row><row><cell cols="2">B-n67-k10 1024.4</cell><cell cols="2">218 -</cell><cell>327</cell><cell cols="3">568 1032 1032</cell></row><row><cell>B-n68-k9</cell><cell>1263.0</cell><cell cols="3">260 3 5912</cell><cell cols="3">87436 1275  *  1272</cell></row><row><cell cols="2">B-n78-k10 1215.2</cell><cell cols="2">193 3</cell><cell>90</cell><cell cols="3">1053 1221 1221</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_0"><p>A. Letchford proved that generalized large multistar inequalities do not cut the polyhedron induced by cycle-free q-routes (personal communication). Although this is not necessarily true when using q-routes without s-cycles, the heuristic separation in our BCP never found a violated GL multistar.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. RF was supported by NSF grant DMI-0245609, having started this work while at Gapso Inc., Brazil. MPA was funded by research grant 300475/93-4 from CNPq. MR was supported by CAPES. EU was funded by scholarships from UFF and CNPq. RW was supported by NSF grant 11201878-123412. We thank Humberto Longo for his help during implementation and with experiments.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>E-N</surname></persName>
		</author>
		<imprint>
			<date>76-k7</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName><surname>E-N</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1008">101-k14 1008.3 1045.1 1051.6 1026.9 1052.2 1053.9 1054.3 1067</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Capacited vehicle routing problem: Some new cutting planes</title>
		<author>
			<persName><forename type="first">N</forename><surname>Achuthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Caccetta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Asia-Pacific J. of Operational Research</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="109" to="123" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An improved branch-and-cut algorithm for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Achuthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Caccetta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transportation Science</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="153" to="169" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Capacitated trees, capacitated routing and associated polyhedra</title>
		<author>
			<persName><forename type="first">J</forename><surname>Araque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Magnanti</surname></persName>
		</author>
		<idno>SOR-90-12</idno>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>Princeton University</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A branch-and-cut algorithm for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Araque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kudva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Morin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pekny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Operations Research</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="37" to="59" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Approche polyèdrale du problème de tournées de véhicles</title>
		<author>
			<persName><forename type="first">P</forename><surname>Augerat</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>Institut National Polytechnique de Grenoble</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Computational results with a branch and cut code for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">P</forename><surname>Augerat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Belenguer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Benavent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Corberán</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Naddef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rinaldi</surname></persName>
		</author>
		<idno>949-M</idno>
		<imprint>
			<date type="published" when="1995">1995</date>
			<pubPlace>Grenoble, France</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Université Joseph Fourier</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A set-partitioning based exact algorithm for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mathur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Salkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="731" to="739" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On an integer program for a delivery problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Balinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Quandt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="300" to="304" />
			<date type="published" when="1964">1964</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Application of the branch and cut method to the vehicle routing problem</title>
		<author>
			<persName><forename type="first">U</forename><surname>Blasum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hochstättler</surname></persName>
		</author>
		<idno>ZPR2000-386</idno>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>Zentrum fur Angewandte Informatik Köln</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An algorithm for the vehicle-dispatching problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Christofides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Eilon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operational Research Quarterly</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="309" to="318" />
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Exact algorithms for the vehicle routing problem, based on spanning tree and shortest path relaxations</title>
		<author>
			<persName><forename type="first">N</forename><surname>Christofides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mingozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="255" to="282" />
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Polyhedral study of the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cornuéjols</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Harche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="21" to="52" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The truck dispatching problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Dantzig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="80" to="91" />
			<date type="published" when="1959">1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Optimal solution of vehicle routing problem using minimum k-trees</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fisher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="626" to="642" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Robust branch-andcut-and-price for the capacitated minimum spanning tree problem</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fukasawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Poggi De Aragão</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Porto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Uchoa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the International Network Optimization Conference</title>
		<meeting>of the International Network Optimization Conference<address><addrLine>Evry, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="231" to="236" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Robust branch-and-cutand-price for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fukasawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Reis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Poggi De Aragão</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Uchoa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technical Report RPEP</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="2003">2003</date>
			<pubPlace>Niterói, Brazil</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Universidade Federal Fluminense, Engenharia de Produção</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A new exact algorithm from the vehicle routing problem based on q-paths and k-shortest paths relaxations</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hadjiconstantinou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Christofides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mingozzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Freight Transportation. Number 61 in Annals of Operations Research</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</editor>
		<imprint>
			<publisher>Baltzer Science Publishers</publisher>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="21" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">The shortest path problem with resource constraints and k-cycle elimination for k ≥ 3</title>
		<author>
			<persName><forename type="first">S</forename><surname>Irnich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Villeneuve</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>Unpublished manuscript</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A branch and bound algorithm for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">G</forename><surname>Laporte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Norbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research Spektrum</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="77" to="85" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Multistars, partial multistars and the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Letchford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eglese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lysgaard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="21" to="40" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A faster exact separation algorithm for blossom inequalities</title>
		<author>
			<persName><forename type="first">A</forename><surname>Letchford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Reinelt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Theis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">This</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">CVRPSEP: A package of separation routines for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lysgaard</surname></persName>
		</author>
		<ptr target="www.asb.dk/∼lys" />
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A new branch-and-cut algorithm for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lysgaard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Letchford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eglese</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A relax and cut algorithm for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">C</forename><surname>Martinhon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lucena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Maculan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European J. of Operational Research</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A matching based exact algorithm for capacitated vehicle routing problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA J. on Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="1" to="9" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Branch-and-cut algorithms for the capacitated VRP</title>
		<author>
			<persName><forename type="first">D</forename><surname>Naddef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rinaldi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Vehicle Routing Problem</title>
		<editor>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="53" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Modelos e algoritmos para o problema de alocação generalizada e aplicações</title>
		<author>
			<persName><forename type="first">A</forename><surname>Pigatti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>Brazil</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Pontifícia Universidade Católica do Rio de Janeiro</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Integer program reformulation for robust branchand-cut-and-price</title>
		<author>
			<persName><forename type="first">M</forename><surname>Poggi De Aragão</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Uchoa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Mathematical Programming in</title>
		<imprint>
			<biblScope unit="page" from="56" to="61" />
			<date type="published" when="2003">2003</date>
			<pubPlace>Rio, Búzios, Brazil</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Parallel branch and cut for capacitated vehicle routing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ralphs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Computing</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="607" to="629" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">On the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ralphs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kopman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Pulleyblank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">T</forename><surname>Jr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="343" to="359" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Models, relaxations and exact approaches for the capacitated vehicle routing problem</title>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="page" from="487" to="512" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">The Vehicle Routing Problem. Monographs on Discrete Mathematics and Applications</title>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vigo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>SIAM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Generic Cut Generation Methods for Routing Problems</title>
		<author>
			<persName><forename type="first">K</forename><surname>Wenger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Institute of Computer Science, University of Heidelberg</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Finding minimum congestion spanning trees</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Werneck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Setubal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM J. of Experimental Algorithmics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
