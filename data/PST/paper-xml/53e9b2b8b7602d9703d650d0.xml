<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Annotating and Searching Web Tables Using Entities, Types and Relationships</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Girija</forename><surname>Limaye</surname></persName>
							<email>girija@cse.iitb.ac.in</email>
							<affiliation key="aff0">
								<orgName type="institution">IIT Bombay</orgName>
								<address>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sunita</forename><surname>Sarawagi</surname></persName>
							<email>sunita@iitb.ac.in</email>
							<affiliation key="aff0">
								<orgName type="institution">IIT Bombay</orgName>
								<address>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Iit</forename><surname>Bombay</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IIT Bombay</orgName>
								<address>
									<country key="IN">India</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">IIT Bombay</orgName>
								<address>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Soumen</forename><surname>Chakrabarti</surname></persName>
							<email>soumen@iitb.ac.in</email>
							<affiliation key="aff0">
								<orgName type="institution">IIT Bombay</orgName>
								<address>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Annotating and Searching Web Tables Using Entities, Types and Relationships</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">68B07BB0643B3ACE4D0C57A39B33B2E2</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T07:09+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Tables are a universal idiom to present relational data. Billions of tables on Web pages express entity references, attributes and relationships. This representation of relational world knowledge is usually considerably better than completely unstructured, free-format text. At the same time, unlike manually-created knowledge bases, relational information mined from "organic" Web tables need not be constrained by availability of precious editorial time. Unfortunately, in the absence of any formal, uniform schema imposed on Web tables, Web search cannot take advantage of these high-quality sources of relational information. In this paper we propose new machine learning techniques to annotate table cells with entities that they likely mention, table columns with types from which entities are drawn for cells in the column, and relations that pairs of table columns seek to express. We propose a new graphical model for making all these labeling decisions for each table simultaneously, rather than make separate local decisions for entities, types and relations. Experiments using the YAGO catalog, DB-Pedia, tables from Wikipedia, and over 25 million HTML tables from a 500 million page Web crawl uniformly show the superiority of our approach. We also evaluate the impact of better annotations on a prototype relational Web search tool. We demonstrate clear benefits of our annotations beyond indexing tables in a purely textual manner.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Relational data is almost universally presented as tables for human consumption. In a recent 500 million page Web crawl, we conservatively estimated <ref type="bibr" target="#b12">[12]</ref> that over 25 million tables express relational information, as against implementing visual layout. A given entity may be mentioned in dozens to thousands of such tables, in syntactically different forms (e.g., "Albert Einstein" vs. "Einstein"). Each table contributes valuable facts about entities, their types, and relationships between them, and does so in a manner that is considerably less diverse and less noisy, compared to how facts are expressed in free-format text.</p><p>Unfortunately, these "organic Web tables" do not adhere to any uniform schema. Captions, contexts, row and column headers, if present, do not use controlled vocabulary. Text in table cells often mention entities, but, being free-form text, the mentions are potentially ambiguous. In particular, there is no direct way to know that two cells in two different tables refer to the same entity, or to associate an attribute with an entity. These limitations lead to under-exploitation of a rich source of structured information on the Web. At best, keywords in queries can match text inside tables, indexed as an undifferentiated blobs of text.</p><p>In recent years, information retrieval (IR) tasks have been enhanced to exploit named entities and types, e.g., in entity ranking tasks. Such queries seek entities of a specified type that are mentioned significantly often near specified words <ref type="bibr" target="#b7">[7]</ref>. This has been further extended <ref type="bibr">[8]</ref> to ad-hoc retrieval of multiple entities that appear to form a logical record, e.g., name, affiliation and email of database researchers. However, the data source remained completely unstructured text.</p><p>Suppose we want to compile a table of footballers (soccer players) and clubs they play for. To extract and reconcile this information from many Web tables, we need to determine that specific columns of these tables mention (subsets of) footballers and clubs. Determining that specific cells mention specific footballers or clubs is also generally useful. Finally, it usually helps to determine that two columns in a table are related in the desired manner. Cell and column annotations of these forms can also boost precision in select queries, e.g., list movies directed by (as against featuring as actor) George Clooney.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Goal</head><p>We are given a catalog comprising a type hierarchy with subtype relations, and entities that are instances of types. We are also given a corpus of tables that are not used for formatting and presentation purposes. (Effective heuristics exist <ref type="bibr" target="#b6">[6]</ref> for screening out formatting tables.) Our goal is to annotate each table in the following ways:</p><p>• Associate one or more types with each column of the table. If a column is deemed not to have any type in our catalog, determine that as well.</p><p>• Annotate pairs of columns with a binary relation in the catalog. If two columns are not involved in any binary relation in our catalog, determine that as well.</p><p>• Annotate table cells with entity IDs in the catalog, when there is reason to believe that the cell makes a mention or reference to said entity.</p><p>These annotation tasks are challenging. When annotating entity mentions in free-form text <ref type="bibr" target="#b14">[14]</ref>, the textual context provides clues for disambiguation. In contrast, table cells referring to entities have negligible amounts of additional text. Given each table cell can map to several entities (or none), it is nontrivial to propose one or few types<ref type="foot" target="#foot_0">1</ref> for a column that "explain" (most of) the cells in the column. Finally, there may be no intrinsic clue in a table as to how entities therein are related.</p><p>Figure <ref type="figure" target="#fig_0">1</ref> shows a typical scenario. Note that the column header 'Title' can refer to books, movies, or music albums, and "written by" has no word overlap with 'author'. Note also that text similarity is a noisy signal (book title containing 'Albert'). Despite these potential pitfalls, it is possible to explain cells in the first column as mentions of book titles and cells in the second column as elements of 'Person' type based on collective signals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Contributions</head><p>In this paper we propose machine learning techniques to annotate table cells with entity, type and relation information. We propose a new probabilistic graphical model for simultaneously choosing entities for cells, types for columns and relations for column pairs. We draw the standard types, relations and entities from the YAGO <ref type="bibr" target="#b21">[21]</ref> catalog, which has about 250,000 types, two million entities and 99 relations. We train our system and evaluate the accuracy of our annotations using ground truth synthesized from Wikipedia, DBPedia and YAGO. Experiments show that attacking the three subproblems collectively and in a unified graphical inference framework give clear accuracy benefits compared to making local decisions. We also use the trained system to annotate tables in a 500 million page Web crawl. The seed tuples we start with in our catalog are only a small fraction of all the tuples we find and annotate in over 25 million Web tables. We then evaluate the impact of table annotations on a prototype relational Web search tool designed to complete one or more missing fields in a binary relationship.</p><p>We demonstrate clear benefits of our annotations beyond modeling tables in a purely textual manner.</p><p>Outline. In Section 2 we survey related work. In Section 3 we give formal models for the catalog and the source table corpus. Section 4 is the central section that proposes the new model, its associated optimization problem, and its solution. In Section 5 we present a search application to motivate the role of table annotations for improved search results. In Section 6 we describe our experimental testbed and results, and conclude in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Recent years have witnessed active research on bridging the gap between unstructured, semistructured and structured data on the Web. Here we review recent ideas that lead up to our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Web tables and lists</head><p>WebTables <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b5">5]</ref> pioneered the study of tables on the Web as a source of high-quality relational data. A key contribution of WebTables is the collection of attribute cooccurrence statistics, which is used to implement a column thesaurus and propose column auto-completion in queries.</p><p>The unit of answer in WebTables is a single source table, and the focus is on the ranking of whole source tables. WebTables has no mechanism for annotating cells with entities and columns with types from a catalog. Column names are derived from source tables alone, in the form of text, which is partly why a column name suggestion engine is valuable.</p><p>Our system differs in a few fundamental ways. First, our primary goal during preprocessing is to annotate columns with standard type identifiers, and not depend on free-text descriptions of columns.</p><p>Second, our goal is to allow more structure in queries, such as the relational expressions R1(e1 ∈ T1, E2 ∈ T2) (i.e., select-project) and R1(e1 ∈ T1, e2 ∈ T2) ∧ R2(e2 ∈ T2, E3 ∈ T3) (i.e., join) where R1, R2 are standard relation names, T1, T2, T3 are type literals, E2, E3 are entity literals, and e1, e2 are entity variables that can be instantiated to literals.</p><p>Third, unlike WebTables, our goal is to return a single synthesized tables with rows ranked by confidence. Beyond the above queries, note that tagging tables with entities and types lets us express precise join queries without depending on fuzzy text matches. This is left for future work.</p><p>A related idea is to curate other Web artifacts like HTML lists into tabular data <ref type="bibr" target="#b12">[12]</ref>. No annotation to a standard type or entity catalog was involved in that work. However, our work can further benefit from such additional sources of information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Collective entity disambiguation</head><p>Another thread of research leading to our work involves annotation of free-form text with references to entities in a catalog. Among the earliest such effort was SemTag <ref type="bibr" target="#b10">[10]</ref>, which tagged Web documents with references to entities in the TAP catalog <ref type="bibr" target="#b11">[11]</ref>. Early work <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b15">15,</ref><ref type="bibr" target="#b3">3]</ref> disambiguated each potential entity mention independent of others. Cucerzan <ref type="bibr" target="#b9">[9]</ref> and Milne et al. <ref type="bibr" target="#b17">[17]</ref> were among the first to recognize and exploit the observation that entities mentioned from a single document are likely to be semantically related. Kulkarni et al. <ref type="bibr" target="#b14">[14]</ref> proposed a precise entity labeling optimization problem that captured local compatibility between mention and entity as well as pairwise similarity between entity labels. Tables with heterogeneous columns violate the basic assumption in all these approaches <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b17">17,</ref><ref type="bibr" target="#b14">14]</ref>, that entities mentioned on a page are topically homogeneous. This assumption clearly does not apply to tabular data with diverse column types. Our work addresses this important genre of source data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Relation extraction</head><p>Another common task is to extract instances of relations between named entities from free-form text, e.g., "company A acquired company B for amount M " (see <ref type="bibr" target="#b19">[19]</ref> for a survey). Early systems focused on extracting fixed relation types from limited source formats such as news articles. Recently, these have been extended to identify more openended relations over the entire Web, based on patterns learned from seed examples or specified manually. A prototypical example is the application of path kernels to dependency parses of sentences <ref type="bibr" target="#b4">[4]</ref>.</p><p>Our data source is very different. On one hand, we seem to have a cleaner source where relations are more explicit, whereas on the other hand, we have little contextual clue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SOURCE MODELS</head><p>We are given two input artifacts: a catalog of entities, types and relations, and a corpus of tables. Here we formally define their representation as used in the rest of the work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Catalog</head><p>The catalog comprises types, entities and relations. The set of types is T . T ∈ T is a type, e.g., Englishlanguage films. We will often use canonical strings from Wikipedia or synset names from WordNet <ref type="bibr" target="#b16">[16]</ref> to denote types. But a type can be described by more than one such string, which we will call lemmas describing the type, L(T ). In general, a lemma can have multiple tokens. Internally, each type has a distinct integer ID.</p><p>Types are related by a subtype relation T1 ⊆ T2. This induces a directed acyclic graph where nodes are types and directed edge T2 → T1 denotes T1 ⊆ T2. We write T1 ⊆ * T2 (respectively, T1 ⊆ + T2) if there is a directed path with zero (respectively, one) or more edges from T2 down to T1. If not already present, we can create a root type that reaches all other types.</p><p>The set of entities is E. Entity E ∈ E may be an instance of one or more types T , written as E ∈ T , if there is no other E ∈ T ⊆ T . This can also be shown as an edge from (the node representing) T to (a node representing) E. If T is transitively reachable from E we write E ∈ + T . It is adequate if the raw catalog attaches entities to the most specific types needed; we can always include all ancestor types before starting out.</p><p>Let E(T ) = {E ∈ E : E ∈ + T } be the subset of entities reachable from type T . Likewise, let T (E) be the subset of types that are ancestors of entity E.</p><p>Each entity E has a set of associated lemmas L(E). E.g., the city of New York has lemmas New York, New York City and Big Apple. A lemma is a (typically short) sequence of tokens. Lemmas of different entities may be the same (e.g. the state of New York is also called New York ) or overlapping (e.g. the maker of iPods is called Apple Computers).</p><p>The set of binary relation names is B. B ∈ B is one relation name. We will want to label pairs of source table columns with these canonical relation names. The schema of B is written as B(T1, T2). A row or tuple of B is written as B(E1, E2), where E1 ∈ T1, E2 ∈ T2. Extending to larger arity is left for future work.</p><p>The specific catalog we use is YAGO <ref type="bibr" target="#b21">[21]</ref>, but many others can be modeled in the same way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Tables</head><p>We preprocess and discard formatting tables as in recent work <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b5">5,</ref><ref type="bibr" target="#b12">12]</ref>. We discard tables that use merged rows, columns or cells. I.e., we consider very regular tables where the number of cells is exactly the product of the number of rows and columns. Each row (and each column) may or may not have a header; this is usually clear from HTML formatting. We also capture some amount of textual context around tables. At the end of this process, a table is abstractly represented as:</p><p>• The table context, modeled as a short text segment.</p><p>• Header cells, if any, denoted by row/column number and cell contents as text segments.</p><p>• Number of non-header rows and columns.</p><p>• Data cells, each with row+column coordinates, and cell contents represented as a short text segment.</p><p>The set of source tables is S and S ∈ S is one source table, with m rows and n columns. By convention we will assume that rows are relation instances and columns are relation attributes, which is the case for all but the smallest tables. We will use 1 ≤ r ≤ m to index rows and 1 ≤ c ≤ n to index columns. The text in cell (r, c) will be called Drc.</p><p>The header text in column c will be called Hc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ALGORITHMS</head><p>We model the table annotation problem using a number of interrelated random variables following a suitable joint distribution, represented by a probabilistic graphical model <ref type="bibr" target="#b13">[13]</ref>; for a quick primer see Appendix B. The task of annotation then amounts to searching for an assignment of values to the variables that maximizes the joint probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Variables</head><p>For a given table S ∈ S, we associate random variables tc to denote the type of a column c, erc to denote the entity label for a cell in row r and column c, and b cc to denote the relation between column pairs c and c . Each tc can be bound to a specific type T ∈ T or na ("no annotation"). Similary, each erc can be either tied to a specific value E ∈ E or na, and each b cc can be tied to a specific relation B ∈ B or na denoting no discernible relation between columns c, c .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Features and potentials</head><p>Intuitively, while assigning values to the variables erc, tc and b cc , we need to take into consideration several signals. Following the framework of graphical models, we represent these signals as features, and train models that learn how to combine these signals with suitable weights. These features and weights are used to define potential functions over subsets of variables, and the product of these potentials gives us the joint distribution over all variables. Thus, our main design problem is choosing a useful set of features.</p><p>In the following subsections we will describe different families of features, each measuring some notion of association between source tables and catalogs. Note that no feature is fired if label na is involved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Cell text and entity label</head><p>Suppose cell (r, c) with cell text Drc is labeled with entity E. How good is this label assignment? Recall that E is known by lemmas in L(E). If any of the lemmas is very similar to Drc then the match is good. Accordingly, we can define a feature max ∈L(E) sim(Drc, ), where sim is the standard TFIDF cosine similarity <ref type="bibr" target="#b18">[18]</ref>. We can also use a number of other similarity measures, such as Jaccard or a soft cosine measure <ref type="bibr" target="#b2">[2]</ref>. These similarities can be made elements in a vector f1(r, c, E).</p><p>To balance between the elements of the feature vector, we will use a weight or model vector w1, and compute w 1 f1(r, c, erc), which is a scalar score. The score can, in principle, be negative. These are then combined to declare a potential over an entity variable erc attached to cell (r, c): φ1(r, c, erc) = exp " w 1 f1(r, c, erc) " .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Column header and type label</head><p>Similar to the previous section, assigning type T to column c is favored if the column header text Hc is similar to one of the lemmas describing T . Again, we can use the standard TFIDF cosine similarity, max ∈L(T ) sim(Hc, ), and other similarity measures. Let f2(c, tc) be the feature vector, w2 be the corresponding weights, and</p><formula xml:id="formula_0">φ2(c, tc) = exp " w 2 f2(c, tc) "</formula><p>be the corresponding potential. φ2 tends to be a weaker signal than φ1, because column headers may be omitted, or not match type lemmas as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Column type and cell entity</head><p>How compatible is it to label a column c with type T and a cell (r, c) in that column with entity E? We wish to create a potential function φ3(T, E) to measure this via features f3(tc, erc) as φ3(tc, erc) = exp " w 3 f3(tc, erc) "</p><p>To get started, we can insist that, unless E ∈ + T , f3(• • • ) must be zero. How about types that do reach E? Should they all get the same feature value? Suppose for a moment that all cells in a table column have been disambiguated with perfect accuracy to entities. One might argue that the type of the column should be the most specific type ancestor of all the entities. We can choose the least common ancestor (LCA). In reality, however, entity labels are uncertain, so insisting on a brittle choice like LCA may be damaging. We will see evidence of this in Section 6. Instead, we will use features to encourage specific column types.</p><p>The first feature is inspired by the inverse document frequency (IDF) in IR systems <ref type="bibr" target="#b18">[18]</ref>. The specificity of a type T can be modeled as |E|/|E(T )|. If this is large, T is specific. This feature does not depend on the specific cell or entity involved.</p><p>The second feature expresses specificity as the distance between E and T . Let dist(E, T ) be the number of edges (∈ followed by ⊆ * ) on the shortest path between E and T . We want dist(erc, tc) to be generally small. We can therefore use 1/dist(erc, tc) as a feature, so that a larger feature value indicates greater favor for tc, similar to the previous categories of features. There is nothing special in the form 1/dist(erc, tc). In information retrieval, damping functions like log or square-root are often used. So we also tried 1/ p dist(erc, tc). This style of feature has one limitation, which we address next.</p><p>Missing links. The above feature "fires" only if erc ∈ + tc, otherwise it is 0. We can rationalize this via the reasonable convention that if erc ∈ + tc, then dist(erc, tc) = ∞. One problem with this policy is that catalogs, especially socially-maintained catalogs like Wikipedia (and by inheritance, YAGO) are rarely complete or perfect. In particular, many ∈ links are missing. For example, at the time of writing, the ∈ link from Entity Satyajit Ray to type Indian film directors, and the ⊆ link from Universities in Toronto to Universities in Ontario, are missing.</p><p>Therefore, we need positive potentials in selected cases where "E ∈ + T " is not known from the catalog but is likely from indirect evidence. Suppose T is the (only) immediate type ancestor of E. Mining work involving social catalogs often use a relatedness measure between two types <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b17">17,</ref><ref type="bibr" target="#b14">14]</ref>. We will use a suitable definition of relatedness to potentially fire a nonzero feature for (E, T ) even if E ∈ + T .</p><p>As defined before, E(T ) is the set of entities reachable from T . Consider the quantity |E(T )∩E(T )|</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>|E(T )|</head><p>. A large value suggests that the link E ∈ + T may have been missed, because most elements in E(T ) are also in E(T ). Note that we are not modeling this as any kind of probability, but just a hint to the collective annotator. When E has multiple immediate parents types T , we modify the above quantity to min E∈T</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>|E(T )∩E(T )| |E(T )|</head><p>. Finally, we use this quantity to modify the reciprocal distance feature for entities E not reachable by T to min</p><formula xml:id="formula_1">E∈T |E(T ) ∩ E(T )| |E(T )| 1 min E ∈E(T ) dist(E , T )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">Relation and pair of column types</head><p>These features model compatibility between pairs of types T, T and binary relations B in the catalog. Thus, between every pair of columns c, c which are likely to be related we get a feature vector f4(b cc , tc, t c ) and the corresponding potential φ4(b cc , tc, t c ) The first feature element in f4 is set to 1 if there is a schema b cc (tc, t c ) in the catalog, and 0 otherwise. The second feature measures the fraction of entities under tc (or t c ) that appear in relationship b cc with an entity in t c (or tc).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.5">Relation and entity pairs</head><p>If we annotate a relationship b cc between columns c and c , the entity annotations erc and e rc corresponding to different rows can vote for or against it in various ways. This gives rise to another potential φ5(b cc , erc, e rc ) defined through features f5. The first feature in f5(b cc , erc, e rc ) is 1 if the catalog contains a tuple b cc (erc, e rc ). The second feature is 1 if relation b cc is one-to-one or many-to-one and the catalog contains b cc (erc, E ) for E = e rc , and symmetrically for a one-to-many relation.</p><p>For example, in Figure <ref type="figure" target="#fig_0">1</ref> the first feature is 1 if the label of the cell "A. Einstein" is P22, the label of the cell "Relativity: The Special . . . " is B96, and author(B96,P22) exists in the catalog, and the column pair is labeled with relation name author.</p><p>Example. We present an example of the resultant graphical model created using the above five kind of potentials in Figure <ref type="figure" target="#fig_11">10</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Collective objectives</head><p>Summarizing, we have variable sets t = {tc}, e = {erc}, b = {b cc }, and potentials φ1, φ2, φ3, φ4, φ5 defined on suitable subsets of these variables. For the moment, we assume that all system parameters w1, w2, w3, w4, w5 have been tuned or trained in advance, and we have to assign values to the above variables so as to maximize our objective: </p><p>The above optimization is called "inference". The space of values over which the variables range is determined as follows: First, for each cell (r, c) we use a text index to collect candidate entities Erc based on overlap between cell and lemma tokens. Let T (E) is the set of all type ancestors of entity E. The space of column labels Tc is S E∈Erc T (E). The space of relation labels B cc is S r {B : B(E, E ) exists , E ∈ Erc, E ∈ E rc }. In all cases, we add an additional value "na" denoting the no annotation option.</p><p>We train the various parameters w1, . . . , w5 using the structured learning framework of <ref type="bibr" target="#b22">[22]</ref>, that generalize Support Vector Machine classifiers to the case when we need to predict multiple variables collectively. The details are skipped because we follow standard machine learning procedures for this training. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Inference</head><p>This objective can be solved in polynomial time because the best label for each column can be settled completely independently of other columns. Moreover, once a column label has been fixed, each cell label can be set independent of other cell labels. The pseudocode is shown in Figure <ref type="figure" target="#fig_3">2</ref>. Primary key or unique constraints on a column can be handled using a min cost flow formulation <ref type="bibr" target="#b1">[1]</ref>. We omit the details, because our real focus is the general case.</p><p>1: for each column c do 2:</p><p>for each type T ∈ Tc do 3:</p><p>AT ← φ2(c, T ) 4:</p><p>for each cell r, c in column c do 5:</p><p>use  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2">The general case</head><p>Inference in the general case (1) is NP-hard, even for a single table; see Appendix C. We resort to an approximate algorithm by drawing on well-known techniques from probabilistic graphical models, specifically, message-passing or belief propagation in factor graphs <ref type="bibr" target="#b13">[13]</ref>. A factor graph has two kinds of nodes: (1) variable nodes which in our case correspond to the union of types tc, entities erc, and relations b cc variables, and (2) factor nodes which correspond to potentials coupling multiple variables. In our case, these are φ3(tc, erc), φ4(b cc , tc, t c ), and φ5(b cc , erc, e rc ).</p><p>Inference proceeds by sending messages back and forth between factor nodes and variable nodes according to a given schedule. A message M (i → f ) from a variable i to a factor f is calculated by multiplying its own potential with all incoming messages from factors other than f . For example, we compute message from an entity variable erc to φ3 as</p><formula xml:id="formula_4">M (erc → φ3) = φ1(r, c, erc) Y c M (φ5(b cc , erc, e rc ) → erc)</formula><p>A message from a factor f to a variable i is obtained by multiplying f 's potential with incoming messages from variables other than i and marginalizing the result on i. For example, a message from φ3 to erc is computed as:</p><formula xml:id="formula_5">M (φ3 → erc) = max tc φ3(tc, erc)M (tc → φ3).</formula><p>Intuitively, this message conveys the belief that factor φ3 has about the label that variable erc should be assigned. We schedule these messages from entities to φ3 to types and back first. Next, we schedule messages from entities to φ5 to relations and back. Finally, from types to φ4 to relations and back. We repeat this schedule until message values converge from one iteration to the next. In practice we found that convergence was achieved within three iterations. (In the special case of no b cc variables, this schedule reduces to the direct optimal algorithm shown in Figure <ref type="figure" target="#fig_3">2</ref>.) The full set of messages and the overall algorithm appear in Appendix D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Baseline annotation algorithms</head><p>We will compare our algorithms against two reasonable baseline approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">Least common ancestor (LCA)</head><p>Let Erc be the candidate entities to which the cell at (r, c) may be assigned. Recall that T (E) is the set of all type ancestors of entity E. Consider S E∈Erc T (E). In words, this is the set of all types that may possibly be ancestors of the entity mentioned in cell (r, c), whatever that might be. Therefore, any type that is an ancestor of all cells in the given column must be in T r S E∈Erc T (E). Any type in this set that that does not have a descendant also in this set is a candidate for labeling the given column. We report all these types, and evaluate using the F1 score (harmonic mean of recall and precision). Once a type is assigned to a column, a locally optimal cell entity assignment can be completed using the idea in Figure <ref type="figure" target="#fig_3">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Majority</head><p>Suppose a cell (r, c) can be assigned entities from set Erc. As before, the cell can potentially belong to any type in S E∈Erc T (E). Let the vote for type T be ˛nE : T ∈ S E∈Erc T (E) oW e pick types that have more than a threshold F% vote. When F is 50% we get the Majority method and when F = 100% we get LCA. We also report numbers with F in between these two values. In the Majority method we perform entity assignment independently for each cell.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">A SEARCH APPLICATION</head><p>A key motivation behind annotating tables with entities, types, and relations is to be able to ask structured, metadatacognizant, relational queries over a less structured source. In this section we discuss how our annotation system can assist this process and enhance the quality of responses.</p><p>A common form of query one would like to ask of Web tables is: Given inputs R, T1, T2, E2 ∈ + T2 where R(T1, T2) is in the catalog, return all E1 ∈ + T1 such that R(E1, E2) holds. This query form is a natural extension of entity search <ref type="bibr" target="#b7">[7,</ref><ref type="bibr">8]</ref> to Web table sources. A common special case of the above query form is to look for entities that have a given value of an attribute.</p><p>Figure <ref type="figure" target="#fig_4">3</ref> shows informally how such a query would be processed by a system that does not perform any entity, type or relation annotations. Unlike WebTables, this baseline returns cell contents, not ranked whole tables.</p><p>In contrast, in our system, columns have been associated with standard types during preprocessing and indexing, and 1: inputs: R, T1, T2, E2 ∈ + T2 2: interpret all inputs as strings 3: look for tables with column headers matching T1, T2 and table context matching R 4: for each qualifying table do 5: look for E2 in the column of T2 6:</p><p>for each qualifying row do 7:</p><p>collect the cell contents in the T1 column of the row 8: cluster, dedup, rank and present collected cell contents 1: inputs: R, T1, T2, E2 ∈ + T2; R, T1, T2 are interpreted using catalog IDs, E2 if present in catalog 2: locate all tables that have at least one column c1 labeled T1 and a column c2 labeled T2, related by R 3: for each qualifying table do 4:</p><p>if E2 is in the catalog then 5: look for cell in column c2 annotated with E2 6: else 7:</p><p>look for cell in column c2 with high text similarity to the string form of E2 8:</p><p>collect cell in column c1 in this row 9: aggregate evidence in favor of known entities 10: cluster, dedup, rank and present unannotated cells this information can be used (typically, interactively <ref type="bibr" target="#b20">[20]</ref>) to "harden" the query to a more precise form. Specifically, R, T1 and T2 can now refer to precise IDs rather than strings. Figure <ref type="figure" target="#fig_5">4</ref> shows informal pseudocode for how this type information can be exploited.</p><p>We will compare these schemes in Section 6.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">EXPERIMENTS</head><p>We report on two kinds of experiments: annotation accuracy and the impact of annotation on the search application of Section 5.</p><p>YAGO <ref type="bibr" target="#b21">[21]</ref> provided the catalog of types (a kind of merger between WordNet synsets and Wikipedia categories), entities, and relations. We used version 2008-w40-2 of YAGO, having 1,941,426 entities, 248,992 types, and 99 relations. We regarded the entity set and their type and relation involvements as sound but potentially incomplete ground truth. Other resources included Wikipedia article text, and a 500million-page Web crawl. We first extracted over 25 million tables from the crawled corpus, and indexed these tables (including nearby text) using Lucene. The typical number of tables we found per page, and the fraction of those that are relational in nature, are in broad agreement with the experience reported in WebTables <ref type="bibr" target="#b6">[6]</ref>. We will call these "Web tables".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Annotation performance</head><p>We collected four table sets with ground truth annotations. A summary of our table sources is shown in Figure <ref type="figure" target="#fig_6">5</ref>.</p><p>Wiki Manual: We chose 36 (non-Infobox) tables from Wikipedia article text, based on large content overlap with many Web tables, and manually annotated them with entities, types, and inter-column relations. Description of a few representative tables appears in Appendix E.</p><p>Web Manual: Using the tables from Wiki Manual as queries, we fetched 371 Web tables similar to them <ref type="bibr" target="#b12">[12]</ref>. These were then manually annotated. The main difference between Wiki Manual and Web Manual is that the cell, header, and context texts in the latter are more noisy.</p><p>Web Relations: The above two datasets provided only 54 relations. We collected 36 more relations, by using Wiki Manual to fetch more Web tables, and manually annotated only the relations between column pairs. Cell entities or column types were not labeled.</p><p>Wiki Link: To specifically test the cell entity annotation accuracy at large scale without laborious human judgment, we selected (non-Infobox) tables from Wikipedia text that had more than 90% of their cells linked internally to entities in Wikipedia.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Annotation Quality</head><p>We measure 0/1 loss, i.e., we lose a point if we get a cell wrong, including choosing na when ground truth was not na. For column type and relation annotations, we report F1 score (harmonic mean of recall and precision). If ground truth is missing for a entity, type, or relation, we drop it from the labeling task.</p><p>Figure <ref type="figure">6</ref> shows the three annotation tasks: entity, type and relation annotation. For each task and each dataset, we show the accuracy (as a percent) of three algorithms: the baseline approaches LCA and Majority, and our algorithm performing collective inference in the full model <ref type="bibr" target="#b1">(1)</ref>. It is immediately evident that Collective gives substantially better accuracy at all tasks. In the entity disambiguation task, the typical number of entities between which the algorithms had to choose for each cell was around 7-8. In the column type assignment task, the typical number of types between which the algorithms had to choose for each column was in the hundreds. The accuracies shown in Figure <ref type="figure">6</ref> thus represent substantial lift beyond random choice, especially in the challenging open Web domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Entity annotation accuracy</head><p>Also note that the accuracy of Collective on column types annotation is better for Wiki Manual compared to Web Manual, reflecting the more noisy nature of text in Web tables compared to Wikipedia. Further failure analysis (see Appendix F for some anecdotes) revealed that LCA performs particularly poorly at the job because it overgeneralizes and Majority suffers because of ambiguities in entities. We hunted for thresholds in-between LCA's 100% and Majority's 50% and obtained the best type accuracy of 46% with a 60% threshold. However, even these numbers are worse than 56% accuracy that Collective offers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Annotation time</head><p>Figure <ref type="figure" target="#fig_8">7</ref> shows time spent in annotating a snapshot of 250,000 tables from our corpus. The average time per table annotation is 0.7 seconds but there is considerable variation depending on the number of rows, the number of non-numerical columns, and the amount of text in a cell. Further drill-down showed that roughly 80% of the time is spent in probing the lemma index and computing various textual similarity measures between candidate lemmas and cell strings. The inference algorithm accounts for less than 1% of the total time.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Training</head><p>For training model parameters w1 through w5, we used the Wiki Manual data using our implementation of a Javabased structured learner <ref type="bibr" target="#b22">[22]</ref>. Testing was done on the Wiki Manual dataset and the Web Manual datasets. Although our training and test data are not disjoint, we did not observe overfitting issues because the number of features was not too large. We trained our model parameters using the manually collected ground truth and for three different settings of measuring type entity compatibility: 1/ √ dist, 1/dist, and IDF, as discussed in Section 4.2.3. The results appear in Figure <ref type="figure">8</ref>. 1/ √ dist appears robust, and IDF on its own performs poorly for type labeling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Search</head><p>We evaluated entity search queries of the kind described in Section 5 under three settings: a baseline that does no annotations, with only type annotations, and with type and relation annotations. We generated a workload from five relations listed in Appendix G and for each relation randomly selected forty E2 values in YAGO that participate in the relation. The query was posed on the Web table corpus described above. The answer is a ranked list of entities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Entity annotation accuracy</head><p>To assess relevance, we used the RDF triples in DBPedia (http://dbpedia.org/About) as ground truth. DBpedia's RDF triples are extracted from Wikipedia's Infoboxes but not 'organic' tables in Wikipedia page text, so this source is different from Wiki Manual and Wiki Link. We score a response using mean average precision (MAP), which is standard in information retrieval (http://en.wikipedia.org/w iki/Information retrieval#Mean Average precision). The results are shown in Figure <ref type="figure" target="#fig_9">9</ref>: adding type labels is better than baseline, and adding both type and relation labels is best. It might be argued that this comparison is not fair on the baseline, because it does not have the benefit of a structured query language. There are two counterarguments. First, our goal is not to offer better responses to keyword queries, but to raise the level of interaction and bring it closer to querying structured data, but without the luxury of a clean data source. Second, the gains from our system are also attributable to corpus annotations, not just query structuring. Separating the two effects would be interesting future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>We have presented a new system that annotates opendomain tables on the Web with entity, type and relation information. Thereby, it can harness the power of 'organic' Web tables to answer simple relational queries, even though the source tables do not have any uniform or identifiable schema. We gave a precise model for the annotation task, balancing local compatibility between entities and their potential mentions in table cells, and global constraints be-tween relations, types and columns. The Web will never have a complete 'schema'. Socially maintained catalogs will always be incomplete. Our work paves the way to augment catalogs with dynamic relational information. We demonstrate that this approach can lead to better responses to relational queries on the unstructured Web.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>T</head><p>Set of all type labels T ∈ T One type label </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. GRAPHICAL MODEL FRAMEWORK</head><p>A probabilistic graphical model provides a convenient and efficient framework for expressing the joint distribution Pr(x) over N variables x = (x1, . . . , xN ). Variables are indexed as xi, xj, etc. For simplicity, assume each xi takes label values in [1, M ], whereas in general each xi can take values from its own space. Label values will be denoted k, , etc. A probabilistic graphical model <ref type="bibr" target="#b13">[13]</ref> captures the dependencies between elements of X, each a node in the graph, with a sparse set of edges as follows:</p><p>We first identify small subsets of variables, called cliques, that are highly dependent on each other. We will be choosing single nodes xi and node pairs xi, xj as cliques.</p><p>Next, we design node potentials φi : [1, M ] → R+. This is a kind of un-normalized measure of compatibility between the variable and each value. We also design edge potentials φi,j : [1, M ] × [1, M ] → R+. This is a kind of un-normalized measure of compatibility between the labels of variables believed to be correlated. Pr A common method to define potentials is as a dot product between a model vector and a feature vector. In case of node potential, we might write φi(xi) = exp `w 1 f (xi)</p><p>´,</p><p>where f : [1, M ] → R k is the feature vector and w1 ∈ R k is the model vector where k is the number of features. Similarly, an edge potential would be defined as φi,j(xi, xj) = exp `w 2 f (xi, xj) ´. The feature vector are designed by the user whereas the model vectors w1, w2 are trained from labeled data.</p><p>Once Pr(x) is defined and the model vectors are trained, the inference problem is to find arg maxx Pr(x).</p><p>In our case, the variables x are a union of tc, erc, b cc variables. The cliques are defined over pairs of variables (tc, erc) and triples (b cc , tc, t c ) (b cc , erc, e rc ). The feature vectors used to define the node potentials, edge potentials and triple potentials are explained in Section 4.2.</p><p>In Figure <ref type="figure" target="#fig_11">10</ref> we show an example graphical model that arises in annotating a table with three rows and three columns. The variables are represented as circles and potentials are shown as φ node. φ1 and φ2 are node potentials respectively on the tc and erc variables. φ3(tc, erc) represents an edge potential between tc and erc variables and φ4 and φ5 are clique potentials among three variables at a time. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. HARDNESS OF INFERENCE</head><p>Inference in the general case (1) is NP-hard, even in case of a single table, via a reduction from graph coloring. We give a rough sketch. The graph coloring instance consists of an undirected graph G = (V, A) and a number K, and asks if G is colorable with at most K colors. We build a single table with |V | columns, each column c corresponding to one node, also called c. We create |V |K types in the catalog: K types T uk for each node u. Column u can be assigned only one of the k types Tu•. For each arc (u, v) ∈ A, we introduce `k 2 ´relation schema with a suitably large potential π into the catalog: Buv(T uk , T vk ), for k = k . All other potentials are zero or one as needed. If there is a K-coloring of G, then the objective for the corresponding graph is π |A| , and the converse also holds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. MESSAGE PASSING ALGORITHM</head><p>Please see Figure <ref type="figure" target="#fig_0">11</ref>. Training follows a very similar message passing scheme that is standard <ref type="bibr" target="#b13">[13]</ref> and is omitted from this version.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. SAMPLE TABLES FROM Wiki Manual</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Illustration of cell entity, column type, and relationship labeling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>cc , tc, t c ) Y r φ5(b cc , erc, e rc )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>4. 4 . 1</head><label>41</label><figDesc>Special case: no b cc , φ4, φ5We first discuss a simplication of optimization (1) where we exclude variables {b cc } and potentials φ4, φ5. c, erc) φ3(tc, erc).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Simplified inference without binary relation variables b cc .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Responding to select-project queries without type annotations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Responding to select-project queries after type and entity annotations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Summary of data sets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Time spent in annotating tables.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Mean Average Precision (MAP) for attributevalue queries without any annotation (Baseline), with only column type annotations (Type), and with both column type and relation annotations (Type+Rel).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>(x) is modeled as Pr(x1, . . . , xn) = 1 Z Q i φi(xi) Q i,j φi,j(xi, xj) where Z = X x∈[1,M ] N Q i φi(xi) Q i,j φi,j(xi, xj),called the partition function, serves to normalize the product of clique potentials to a proper probability.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: A Graphical model representing type, entity, and relationship variables on a table with three columns and three rows. Accordingly, there are three type variables t1, t2, t3, nine entity variables erc, and three relation variables b cc .</figDesc><graphic coords="9,316.81,210.29,239.11,183.93" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>This yielded 131 thousand cells with entity annotations spanning 6 thousand tables. No column type or relation annotations were made.</figDesc><table><row><cell></cell><cell cols="2">#Tables Average</cell><cell cols="3">Total annotations</cell></row><row><cell></cell><cell></cell><cell>#rows</cell><cell cols="3">Entity Type Rel</cell></row><row><cell>Wiki Manual</cell><cell>36</cell><cell>37</cell><cell>1691</cell><cell>73</cell><cell>10</cell></row><row><cell>Web Manual</cell><cell>371</cell><cell>35</cell><cell>9239</cell><cell>674</cell><cell>44</cell></row><row><cell>Web Relations</cell><cell>30</cell><cell>51</cell><cell>-</cell><cell>-</cell><cell>36</cell></row><row><cell>Wiki Link</cell><cell>6085</cell><cell cols="2">20 131807</cell><cell>-</cell><cell>-</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>More than one types are allowed, e.g., German Physicist and Nobel Laureate.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. The work reported here was supported in part by research grants from Yahoo! Research, HP Labs, and IBM Faculty awards.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1: Get candidate entities, types, and relations as described in Section 4.3 2: Initialize all messages to 1. 3: for Iterations=1 to Max-iterations do 4:</p><p>for each column c do 5:</p><p>for each row r do 6:</p><p>M (erc → φ3(tc, erc)) = φ1(r, c, erc) Q c M (φ5(b cc , erc, e rc ) → erc) 7:</p><p>M (φ3(tc, erc) → tc) = maxe rc φ3(tc, erc)M (erc → φ3) 8:</p><p>for each row r do 9:</p><p>M (φ3(tc, erc) → erc) = maxt c φ3(tc, erc)M (tc → φ3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>11:</head><p>for each column pair c, c with candidate relations do 12:</p><p>for each row r do 13:</p><p>M (erc → φ5(b cc , erc, e rc )) = φ1(r, c, erc)</p><p>M (e rc → φ5(b cc , erc, e rc )) = similar to above. 15:</p><p>for each row r do 17:</p><p>M (φ5(b cc , erc, e rc → e rc ) = similar to above. 20:</p><p>M (φ4(b cc , tc, t c → t c ) = similar to above. 26:</p><p>Exit if converged 27: Recall and finalize labels of variables from messages. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. LCA OVER-GENERALIZES</head><p>LCA over-generalizes because of noise in cell-to-entity annotations and missing links in the catalog. We illustrate this with a real example. Figure <ref type="figure">12</ref> shows a Web table with the first column containing titles of Nancy Drew novels. All of these novels appear in YAGO and are correctly labeled with their entity labels. However, the ∈ link from one of the entities, The Clue of the Black Keys to the type Nancy Dr ew books is missing. The two immediate parents of this entity are 1951 novels and Children's novels. Furthermore, the ⊆ link from Nancy Drew books to Children's novels is missing. This makes the LCA choose the root type, Entity for the first column.  Example table where LCA overgeneralizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. RELATIONS USED FOR SEARCH QUERY EXPERIMENTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relation name</head><p>Type 1 Type 2 acted in movie actor directed movie director wrote novel novelist official language country language produced movie producer Figure <ref type="figure">13</ref>: List of relations and their types used in experiments of Section 6.2</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Magnanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Orlin</surname></persName>
		</author>
		<title level="m">Network Flows: Theory, Algorithms, and Applications</title>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Adaptive name-matching in information integration</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bilenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mooney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ravikumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fienberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>IEEE Intelligent Systems</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Using encyclopedic knowledge for named entity disambiguation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bunescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pasca</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EACL</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A shortest path dependency kernel for relation extraction</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">C</forename><surname>Bunescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Mooney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP Conference</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="724" to="731" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">WebTables: exploring the power of tables on the Web</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Cafarella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Halevy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PVLDB</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="538" to="549" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Uncovering the relational Web</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Cafarella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Halevy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WebDB</title>
		<meeting><address><addrLine>Vancouver</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-06">June 2008</date>
			<biblScope unit="volume">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Optimizing scoring functions and indexes for proximity search in type-annotated corpora</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chakrabarti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Puniyani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW Conference</title>
		<meeting><address><addrLine>Edinburgh</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-05">May 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">EntityRank: Searching entities directly and holistically</title>
		<author>
			<persName><forename type="first">T</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VLDB Conference</title>
		<imprint>
			<date type="published" when="2007-09">Sept. 2007</date>
			<biblScope unit="page" from="387" to="398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Large-scale named entity disambiguation based on Wikipedia data</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cucerzan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP Conference</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="708" to="716" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">SemTag and Seeker: Bootstrapping the semantic Web via automated semantic annotation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW Conference</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">TAP: A semantic web test-bed</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mccool</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Web Semantics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="81" to="87" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Answering table augmentation queries from unstructured lists on the Web</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sarawagi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PVLDB</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="289" to="300" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Probabilistic Graphical Models: Principles and Techniques</title>
		<author>
			<persName><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Friedman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Collective annotation of Wikipedia entities in Web text</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chakrabarti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGKDD Conference</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Wikify!: linking documents to encyclopedic knowledge</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mihalcea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Csomai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="233" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Beckwith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fellbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tengi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993-08">Aug. 1993</date>
		</imprint>
		<respStmt>
			<orgName>Five papers on WordNet. Princeton University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Learning to link with Wikipedia</title>
		<author>
			<persName><forename type="first">D</forename><surname>Milne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">H</forename><surname>Witten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Introduction to Modern Information Retrieval</title>
		<author>
			<persName><forename type="first">G</forename><surname>Salton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Mcgill</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983">1983</date>
			<publisher>McGraw-Hill</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Information extraction</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sarawagi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">FnT Databases</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Curating and searching the annotated web</title>
		<author>
			<persName><forename type="first">A</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Banerjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chakrabarti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGKDD Conference</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
	<note>System demonstration</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">YAGO: A core of semantic knowledge unifying WordNet and Wikipedia</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M</forename><surname>Suchanek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kasneci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Weikum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW Conference</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Large margin methods for structured and interdependent output variables</title>
		<author>
			<persName><forename type="first">I</forename><surname>Tsochantaridis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Joachims</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hofmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Altun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="1453" to="1484" />
			<date type="published" when="2005-09">Sep. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
