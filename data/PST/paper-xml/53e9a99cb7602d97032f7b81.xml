<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mining Scale-free Networks using Geodesic Clustering *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Andrew</forename><forename type="middle">Y</forename><surname>Wu</surname></persName>
							<email>a.wu@acm.org</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Michael</forename><surname>Garland</surname></persName>
							<email>garland@uiuc.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
							<email>hanj@cs.uiuc.edu</email>
							<affiliation key="aff2">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mining Scale-free Networks using Geodesic Clustering *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">40B7BBC2EF2D937F60F103B1C9FCAFB6</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.2.8 [Database Management]: Database Applications-Data Mining graphs</term>
					<term>social networks</term>
					<term>scale-free networks</term>
					<term>clustering</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Many real-world graphs have been shown to be scale-freevertex degrees follow power law distributions, vertices tend to cluster, and the average length of all shortest paths is small. We present a new model for understanding scale-free networks based on multilevel geodesic approximation, using a new data structure called a multilevel mesh.</p><p>Using this multilevel framework, we propose a new kind of graph clustering for data reduction of very large graph systems such as social, biological, or electronic networks. Finally, we apply our algorithms to real-world social networks and protein interaction graphs to show that they can reveal knowledge embedded in underlying graph structures. We also demonstrate how our data structures can be used to quickly answer approximate distance and shortest path queries on scale-free networks.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In recent years, the analysis of structurally rich graph data sets has received increasing amounts of attention in data mining and related disciplines. The core problem of graph mining <ref type="bibr" target="#b17">[17]</ref> arises in many important problem domains. For example, recent work in the related area of mining social networks includes the study of viral marketing <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b15">15]</ref> and of measuring the relative importance of nodes <ref type="bibr" target="#b19">[19]</ref>. Graph and social network mining have also been used to find hubs in hyperlinked corpora <ref type="bibr" target="#b3">[3,</ref><ref type="bibr">9]</ref> and to detect community structure in social networks <ref type="bibr" target="#b13">[13]</ref>.</p><p>Our focus is on the class of graphs termed scale-free networks. Graphs of this type are distinguished by three primary characteristics. First, they are highly clustered; if two vertices share a common neighbor, it is likely the two are themselves adjacent. Second, the average shortest path between two vertices is logarithmically small. And finally, the vertex degrees are distributed according to a power law <ref type="bibr" target="#b1">[1]</ref>. Data fitting this profile arise quite naturally in physics, sociology, network analysis, and biology.</p><p>In this paper we present a scalable framework for analyzing the structure of scale-free networks. We approach this problem from the perspective of data reduction. Given an initial complex graph, we aim to produce a far simpler graph that preserves the structure of the original as faithfully as possible. We describe a novel algorithm for clustering graphs based on graph geodesics (i.e., shortest paths). Furthermore, we outline a hierarchical model for scale-free networks, and couple this with our clustering algorithm to produce hierarchical representations of the input data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">BACKGROUND</head><p>We use the terms graph, network, and mesh interchangeably to mean an undirected simple graph with positive edge weights. We define a mesh clustering of a graph G = (V, E) as a graph partition into p disjoint clusters V1, . . . , Vp where i Vi = V , with a representative vertex set U = {u1, . . . , up} where ui ∈ Vi. A median function M maps vertices to their representative vertices (medians). That is, M (v) = ui iff v ∈ Vi. A graph partition of a graph G is a vertex clustering where each vertex cluster forms a connected component.</p><p>Many real-world systems can be modeled as graphs. Examples include power grids, communication networks, biochemical interactions, and social networks. On social networking sites such as orkut.com and Friendster, an edge between Paul and Carol exists if they specify that they know each other. In a publication network, edges connect coauthors. Although such graphs capture many aspects of the real world, they also capture the complexity of the real world. Thus, it becomes important to develop mathematical models for how very large graphs form. We can then use these models to mine knowledge from massive graphs.</p><p>In the Erdös-Rényi random graph model, edges are added by picking random vertex pairs and the degree distribution is Gaussian <ref type="bibr" target="#b2">[2]</ref>. Several years ago, it was discovered that many real-world networks do not follow this random model <ref type="bibr" target="#b1">[1]</ref>. Instead, they often exhibit power law distributions, where the probability that a vertex has degree k, P (k) ∼ 1/k c for some small constant c (often between two and three) <ref type="bibr" target="#b12">[12]</ref>. This means that most vertices have a relatively small degree, but a few vertices have a very high degree. These are known as hubs, and are well connected. Unlike in a Gaussian distribution, where a mean element defines a characteristic "scale" in the probability distribution, no single element characterizes the scale of a power law distribution. Thus, Barabási named such graphs scale-free networks <ref type="bibr" target="#b1">[1]</ref>.</p><p>To perform data mining on such graphs, we exploit their scale-free nature, noting that the power law distribution tells us that most vertices are of low degree. This means that the average degree of a vertex is generally bounded by a small constant. Since the sum of the vertex degrees must be twice the number of edges, the total number of edges in the graph G is linear in the number of vertices (G is sparse). We also exploit the tendency of these networks to cluster to perform good data reduction on such graphs.</p><p>Barabási showed that the world-wide web, for example, is a scale-free network <ref type="bibr" target="#b1">[1]</ref>. Scale-free characteristics have been found in many real-world networks, such as social networks, publication and citation graphs, power grids, the Internet, and real neural and other biological networks. More details can be found in the recent survey of Newman <ref type="bibr" target="#b12">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Social Networks</head><p>Sociologists have defined many ways of measuring the centrality or prestige of an "actor" in a social network <ref type="bibr" target="#b18">[18]</ref>. One such measure, betweenness centrality, has been used to find community structures in networks <ref type="bibr" target="#b13">[13]</ref>. However, a simple implementation of these measures often leads to quadratic or cubic running times, because they often compute all-pair shortest paths, or invert matrices. In contrast, we focus on scalable algorithms for very large graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Data Mining</head><p>Most work on clustering considers unorganized points instead of considering the network structure of graph systems, as is common in graph partitioning <ref type="bibr" target="#b16">[16]</ref>. Graph mining research <ref type="bibr" target="#b17">[17]</ref> has studied problems of finding frequent subgraphs <ref type="bibr" target="#b20">[20]</ref> and compressing graphs using the minimumdescription length principle <ref type="bibr" target="#b7">[7]</ref>.</p><p>In comparison, we focus primarily on the problem of graph clustering and data reduction of large real-world graphs. One problem of working with graphs as opposed to unorganized data points is that most non-trivial graph properties are computationally difficult to verify, and many simple graph algorithms have exponential running times. Just as microclustering has been useful for speeding up algorithms that run on unorganized point sets <ref type="bibr" target="#b21">[21]</ref>, we suggest that graph clustering and data reduction techniques can be used to speed up data mining of very large graph data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">APPROXIMATION CLUSTERING</head><p>Given a complex graph representing some data set, we would like to extract meaningful knowledge from that graph. However, if the graph has thousands or millions of vertices, it becomes difficult to visualize or mine that graph algorithmically in any meaningful or efficient way.</p><p>A common approach to dealing with such complexity is to find meaningful clusters or partitions in the graph. How-ever, there are dozens if not hundreds of different clustering algorithms. As suggested by Mirkin <ref type="bibr" target="#b11">[11]</ref>, we evaluate the quality of a clustering in terms of the approximation error induced by that clustering.</p><p>Given a clustering of a graph G, we can approximate G with a smaller graph G by contracting each cluster to a representative vertex. To quantitatively measure how much the contraction of a clustering distorts a graph, we can measure how much it distorts the lengths of all possible geodesics.</p><p>In this section, we describe how to find geodesic clusters on graphs, how to contract these clusters to form an approximate graph, and how to measure the distortion (approximation error) associated with a cluster contraction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Geodesic Clustering</head><p>We now describe a novel graph clustering technique designed for large sparse graph data. Later, we will use this clustering technique as a basis for graph data reduction.</p><p>Given a weighted graph, we want to find p representative vertices, which we call median vertices, that minimize the average length of the shortest path from any vertex to its closest median. In operations research, this is known as the network p-median problem in discrete facility location <ref type="bibr" target="#b5">[5]</ref>.</p><p>Formally, we define M (v) as the median vertex associated with v's cluster and dist(x, y) to be the length of the shortest path from x to y. We also define D(v) to be dist(v, M (v)), the distance from a vertex to its nearest median vertex. Then we want to find the mesh clustering with mapping M that minimizes the contraction cost v∈V D(v). We describe how to pick good medians in a future section.</p><p>After finding p medians, we assign each vertex to its nearest median vertex, forming p geodesic clusters. The clustering algorithm keeps track of two properties per vertex v: the nearest median vertex, M (v), and the shortest path distance to that nearest median, D(v). Initially, distances are infinite and each vertex is in a singleton set. We chose p vertex medians and assign each a distance of zero. We can then run a modified version of Dijkstra's algorithm that updates the "parent" of a vertex (its closest median) whenever the vertex's distance is updated. In the resulting graph, each vertex has a single distance to its nearest median and a "parent" pointer to that same median vertex. This algorithm runs in O(V log V ) time on a sparse graph system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Graph Approximation</head><p>Our approach for data reduction on large social and scalefree networks is inspired by work on geometric mesh simplification in the graphics community <ref type="bibr" target="#b6">[6]</ref>. Given a graph G, we want to find a simpler graph G that well approximates G (minimizing some distortion measure).</p><p>To solve this primal problem of mesh simplification, we consider the dual problem of mesh clustering. Given a mesh clustering of a graph G, we construct a simpler graph G by contracting each cluster to a representative vertex.</p><p>We give the pseudocode for cluster contraction as Algorithm 1. The cluster contraction algorithm creates a new approximate graph G given a clustered graph G. It first copies the representative vertices, those for which M (v) = v. (u, v) is an edge of G if and only if there exists an edge (s, t) in G such that M (s) = u and M (t) = v. We define the new edge weight as the length of the shortest path between u and v in G that has an edge with endpoints in u's cluster and v's cluster.</p><formula xml:id="formula_0">Algorithm 1: Contract Clustering Input: Clustered graph G = (V, E) Output: Approximate graph G' for each vertex v in V do if v = M (v) then copy v to G' end for every edge e = (u, v) in E do if M (u) = M (v) then d ← D(u) + length(e) + D(v); Create edge e = {M (u), M (v)} in G' if not present;</formula><p>length(e') ← min(length(e'), d); end end</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SCALE-FREE NETWORKS</head><p>We now apply the geodesic clustering techniques we have developed to scale-free networks such as social networks and protein-protein interaction graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Multilevel Mesh</head><p>We propose a new way of understanding and mining scalefree networks, using a new data structure called a multilevel mesh. A multilevel mesh is a hierarchy of microclusters similar to the tree structure used in BIRCH <ref type="bibr" target="#b21">[21]</ref>, but designed specifically for graph clustering.</p><p>Unlike a regular cluster hierarchy, a multilevel mesh is not a tree. It is a list of graphs L = (G0, G1, . . . , Gn) where Gi+1 is a simplified version of Gi, with virtual edges that map every vertex from Gi to its parent vertex in Gi+1.</p><p>We can construct a multilevel mesh by recursive graph simplification-geodesic clustering followed by cluster contraction. We begin with a graph G and produce a list of graph approximations of decreasing complexity. The user chooses an average branching factor b, which determines the average cluster size. If b = 10, then the average cluster will contain ten vertices. Dividing the number of vertices |V | by b gives us p, the number of clusters we need to find. We find p geodesic clusters as described previously, using some heuristic to find median vertices. We contract each cluster to its representative vertex to form a new graph G with p = |V |/b vertices, and recurse on G .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Modeling Scale-free Networks</head><p>Vertices in scale-free networks are not created equalsome are more "important" than others. A few Web pages are linked to more frequently and thus may be more relevant for keyword search <ref type="bibr">[9,</ref><ref type="bibr" target="#b3">3]</ref>. Some actors in a social network are better connected than their peers, and some proteins are more important to an organism's survival than others <ref type="bibr" target="#b8">[8]</ref>.</p><p>Exploiting these power law distributions and the tendency for such networks to cluster, we use the multilevel techniques we have developed so far to mine such networks. The unequal distribution of importance and the high connectivity of hubs means that we can approximate a graph well using only a relatively small fraction of the vertices. The tendency for vertices to cluster reduces the amount of approximation error when building such graph approximations.</p><p>As an example, we could build a multilevel mesh that approximates a social network, favoring well-known people. Instead of a large population of social actors, we can instead imagine a smaller set of community leaders as well as the interaction graph between those leaders. Now that we have defined a multilevel model for understanding scale-free networks, we show how to mine such networks to extract a multilevel structure. We use this selfsimilar hierarchy of graphs to perform data reduction, visualization, and approximate distance queries on large graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Clustering Scale-free Networks</head><p>Previously we showed how to find geodesic clusters on graph systems, but did not describe how to find representative vertices. We experimented with several methods for finding p median vertices on scale-free networks: random sampling, degree ranking, HITS, and Betweenness-Centrality.</p><p>In random sampling, we pick p median vertices uniformly at random, without replacement. In degree ranking, we pick the p vertices with the highest degree. We also used HITS <ref type="bibr">[9]</ref> to find good median vertices, sorting vertices by their "authority" measure. Finally, we used an importance measure named Betweenness-Centrality previously used for finding community structures <ref type="bibr" target="#b13">[13]</ref>. Betweenness-Centrality estimates the importance of a node by counting how many shortest paths pass through that node. Each of these methods define a total ordering of the vertex set, and to pick p medians we choose the p highest ranked vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Approximate Distance Queries</head><p>A fundamental query operation on a graph is to return the length of the shortest path between two vertices, or to return the shortest path itself. Unlike the computation of distance queries between points in Euclidean space, we cannot answer a distance query on a large graph in constant time unless we store all possible answers. With massive graph data, this may not be feasible since there are a quadratic number of vertex pairs. On the other hand, a simple single source shortest path such as Dijkstra's algorithm may explore many parts of a graph, especially in scale-free networks where the average path length is logarithmically small. We can use our graph hierarchy to quickly approximate shortest path queries, without touching as much of the graph as a standard search (Algorithm 2). It only uses two graphs, but is easy to extend to use more levels, depending on the accuracy desired. We call this a focused search method because we use the graph hierarchy to focus our geodesic search on a relatively small part of the graph. Find shortest path P between source and target on G 0 , not exploring vertex v if M (v) is not on path P' By varying the branching factor and number of clusters, we can tradeoff between efficiency and approximation error. These distance queries can be used as a building block to speed up more complicated graph analysis techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Experiments</head><p>We compare several heuristics for picking median vertices on scale-free network data, and demonstrate how we can trade-off between graph approximation error and distance query times. We show that random sampling is useful for approximating distance (path length) queries efficiently, but does not work as well for approximating the paths themselves, or for yielding informatively simplified graphs. We show that Betweenness-Centrality is a good heuristic for choosing median vertices but that ranking by vertex degree is often nearly as good, and can be used as a simple and efficient heuristic for finding geodesic clusters to contract. We implemented our algorithms in Java using the JUNG framework <ref type="bibr" target="#b14">[14]</ref>, which provides a graph library and visualization capabilities. We used several data sets, mainly publication networks in addition to a protein interaction network. In each data set, we considered only the largest connected component which contains the majority of the vertices.</p><p>Smyth.net is a publication network centered around Dr. Padhraic Smyth. We use two subsets of the Erdös publication network, and a publication network of theoretical high energy physicists (hep-th). Protein-bo.net is a scalefree protein-protein interaction graph, where each vertex is a protein and edges connect interacting proteins. This data set was studied by Jeong et al. who found that the degree of a protein in this graph correlates to its lethality <ref type="bibr" target="#b8">[8]</ref>.</p><p>In these experiments, we used unit edge weights. If the graph data provided edge weights, or if there were a reliable way of finding appropriate weights given some application domain, our algorithms can also use that information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">Average hub distance</head><p>When choosing hubs (representative vertices), we would like to pick hubs that are quickly reachable from any other vertex. Table <ref type="table" target="#tab_1">2</ref> contains the average distances to the nearest hub for several data sets. We see that choosing hubs based on Betweenness-Centrality (B-C) and on vertex degree minimizes the average distance to the nearest hub. Random sampling and HITS often do significantly worse.</p><p>If our goal is to uniformly spread the graph distortion across all vertices, then we would like to minimize this average. Such a measure is also a fast way of approximating the potential influence of a set of nodes in a social network. That is, if we pick an "influential" set of people in a social network, we can expect that they can more quickly spread information throughout the network. These experiments support the commonsense notion that to quickly reach many people in a network, a simple heuristic that works well is to target the most "popular" people, in terms of vertex degree.  On the c-erdos972 data, we see that random sampling, B-Centrality, and degree ranking all result in a similar amount of distortion, about 20%, which is relatively small when we consider we are reducing the size of the graph by an order of magnitude. Overall, random sampling often results in a lower overall distortion. We believe that this occurs because the vertices are chosen without bias, whereas degree ranking and HITS may spread the distortion unevenly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Distance Approximation Error</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.3">Path Approximation Error</head><p>In the previous section, we measured the relative error involved in approximating distance queries with a single-level graph approximation. We now measure the same relative error, but test the algorithm that finds better approximate geodesics using a two-level focused search (Algorithm 2).</p><p>Comparing the two histograms in Figure <ref type="figure" target="#fig_1">1</ref>, we see that a two-level focused search obviously leads to a smaller path approximation error (about half) when compared to a singlelevel approximation.</p><p>Table <ref type="table" target="#tab_4">4</ref> shows the average relative geodesic approximation error when finding the shortest path between 512 randomly chosen vertex pairs. Looking at this table and at Figure <ref type="figure" target="#fig_1">1</ref>, we can see that Betweenness-Centrality leads to the smallest approximation error, but that degree ranking does nearly as well. But, because of the O(V 2 ) cost of computing Betweenness-Centrality, we generally suggest the use of degree ranking for purposes of geodesic approximation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Simplified graph visualization</head><p>We can also use graph approximation to visualize very large graphs. When graphs of thousands of vertices are displayed, a user cannot easily make sense of the data. However, if we reduce the data size while still retaining information about the graph topology, the user can visually understand the underlying graph patterns in the data.</p><p>They can also perform a kind of roll-up and drill-down by shrinking clusters to their representative vertices, or expanding a representative vertex to its original cluster.</p><p>As a concrete example, a manager may want to understand the structure of her organization based on how employees interact, to see which divisions tend to collaborate. An electrical engineer might want to roll-up a power grid to understand how the overall system is operating.</p><p>We give several visual examples of how graph simplification can reveal underlying patterns in graph connectivity. (Simplified graphs are laid out independently of the base graphs, which is why the geometric layouts do not match. Similarly shaded vertices are in the same clusters.)</p><p>Figures <ref type="figure" target="#fig_0">2</ref> and<ref type="figure" target="#fig_3">3</ref> show the Smyth publication network simplified using degree ranking, which favors well-known social actors. We see that the resulting graph of 17 vertices contains well-known researchers and makes it easy to see how researchers from different subfields connect to each other.</p><p>The protein interaction graphs in Figure <ref type="figure" target="#fig_4">4</ref> were both laid out automatically using a simple spring layout. Whereas this simple algorithm cannot easily find a good layout for the original graph, the same algorithm can find a good layout for a data set simplified using HITS for median ranking.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SCALABILITY</head><p>Except for Betweenness-Centrality, which takes O(V 2 ) time to rank V vertices, each vertex ranking method takes O(V ) time to compute and O(V ) time to select the p top ranked vertices. Growing p clusters and constructing a multilevel mesh both take O(V log V ) time. On a 933MHz Pentium III, constructing a multilevel mesh given a graph of six thousand vertices takes an average of five or six seconds.</p><p>In Table <ref type="table">5</ref>, we compare the scalability of Dijkstra's algorithm to our focused search (these experiments used a twolevel structure, but more levels could be used to focus the search more tightly). We chose 512 random distance queries on the high energy physics publication data. We recorded the average number of vertices explored by Dijkstra's algorithm (column b = 1) as compared to focused search.</p><p>The number of vertices explored can be an order of magnitude smaller, depending on the average branching factor b. This is an important speedup if I/O dominates the cost of computation, as is common with massive data sets. The amount of time spent in the search was also reduced drastically whereas the error rates increased relatively slowly, as we increased the average branching factor. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION</head><p>The properties of scale-free networks have only been discovered in the past five years, and thus not much work has been done in modeling or analyzing such networks from an algorithmic or data mining perspective. However, since scale-free characteristics are found in many real-world graphs, we believe that it is an important problem to mine such networks. We developed algorithms that exploit these characteristics and applied new graph approximation techniques to large social networks and protein interaction graphs.</p><p>We introduced a form of graph clustering designed for large sparse graphs, specifically scale-free networks, based on geodesics and the idea of approximation clustering. We noted that the problem of graph data reduction is dual to the problem of graph clustering and described how to simplify graphs by contracting clusters to representative vertices.</p><p>Using this new framework, we described a new data structure called a multilevel mesh that approximates a graph system at multiple levels of detail. We showed that these multilevel structures are useful for visualizing large scale-free networks, understanding underlying graph patterns, and for speeding up computations on very large graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">FUTURE WORK</head><p>We developed algorithms for graph data reduction, but believe that our multilevel data structures could be applied toward other mining problems on scale-free networks. For example, we may want to exploit network structure when classifying graph data, performing visual data mining, or when looking for graph outliers that exhibit unusual connectivity patterns, which may correspond to terrorist activity in social networks <ref type="bibr" target="#b10">[10]</ref> or fraudulent activity in a financial transaction graph. Other important problems include privacy-preserving data mining on social networks and the study of how such networks grow and change over time.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Algorithm 2 :</head><label>2</label><figDesc>Find Approximate Shortest Path Input: Base graph G 0 , Simpler graph G 1 , Vertex source, Vertex target Output: Path P Find shortest path P' from M (source) to M (target) on G 1 ;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Distortion, w/o focused search (above) and with focused search (below), hep-th, b = 10</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>A researcher looking at this data set can then visually see what protein clusters tend to interact with what other protein clusters, and what proteins seem to be unrelated.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Reduced Smyth.net -71, 17 vertices</figDesc><graphic coords="5,328.36,222.19,215.99,211.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: protein-bo -1458, 242 vertices</figDesc><graphic coords="6,72.55,129.60,201.60,221.97" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Graph data sets</figDesc><table><row><cell cols="4">data set # vertices # edges</cell><cell></cell></row><row><cell cols="2">smyth.net</cell><cell>286</cell><cell>554</cell><cell></cell></row><row><cell cols="2">c-erdos971.net</cell><cell>429</cell><cell>1312</cell><cell></cell></row><row><cell cols="2">c-erdos972.net</cell><cell>5440</cell><cell>14382</cell><cell></cell></row><row><cell cols="2">hep-th.net</cell><cell>5835</cell><cell>19652</cell><cell></cell></row><row><cell cols="2">protein-bo.net</cell><cell>1458</cell><cell>1948</cell><cell></cell></row><row><cell cols="5">data set (# hubs) B-C Degree HITS Random</cell></row><row><cell>c-erdos971 (12)</cell><cell>1.7</cell><cell>1.9</cell><cell>1.9</cell><cell>2.8</cell></row><row><cell>c-erdos972 (100)</cell><cell>1.5</cell><cell>1.5</cell><cell>1.9</cell><cell>2.5</cell></row><row><cell>hep-th (287)</cell><cell>1.8</cell><cell>2.0</cell><cell>2.9</cell><cell>2.3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Average distance to nearest hub</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>shows the average percent difference between the lengths of paths on simplified graphs as compared to actual</figDesc><table><row><cell cols="4">data set (b) B-C Degree HITS Random</cell></row><row><cell>c-erdos972 (10) 20%</cell><cell>20%</cell><cell>34%</cell><cell>18%</cell></row><row><cell>hep-th (10) 24%</cell><cell>24%</cell><cell>41%</cell><cell>17%</cell></row><row><cell>protein-bo (6) 18%</cell><cell>16%</cell><cell>26%</cell><cell>13%</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Avg. Distance Approximation Error</figDesc><table><row><cell></cell><cell>200</cell><cell></cell></row><row><cell></cell><cell>180</cell><cell></cell></row><row><cell></cell><cell>160</cell><cell>random HITS</cell></row><row><cell>path count</cell><cell>80 100 120 140</cell><cell>B-Centrality degree</cell></row><row><cell></cell><cell>60</cell><cell></cell></row><row><cell></cell><cell>40</cell><cell></cell></row><row><cell></cell><cell>20</cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell></row><row><cell></cell><cell cols="2">0% 10% 20% 30% 40% 50% 60% 70% 80%</cell></row><row><cell></cell><cell>relative distortion</cell><cell></cell></row><row><cell></cell><cell>350</cell><cell></cell></row><row><cell></cell><cell>300</cell><cell>random</cell></row><row><cell></cell><cell></cell><cell>HITS</cell></row><row><cell>path count</cell><cell>150 200 250</cell><cell>degree B-Centrality</cell></row><row><cell></cell><cell>100</cell><cell></cell></row><row><cell></cell><cell>50</cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell></row><row><cell></cell><cell cols="2">0% 10% 20% 30% 40% 50% 60% 70% 80%</cell></row><row><cell></cell><cell>relative distortion</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 :</head><label>4</label><figDesc>Avg. Path Approximation Error Figure 2: Smyth.net -286 vertices</figDesc><table><row><cell cols="5">data set (b) Degree HITS Random B-C</cell></row><row><cell>c-erdos972 (64)</cell><cell>12%</cell><cell>9%</cell><cell cols="2">17% 12%</cell></row><row><cell>hep-th (20)</cell><cell>18%</cell><cell>26%</cell><cell cols="2">22% 13%</cell></row><row><cell>hep-th (10)</cell><cell>12%</cell><cell>18%</cell><cell>25%</cell><cell>9%</cell></row><row><cell>protein-bo (6)</cell><cell>4%</cell><cell>13%</cell><cell>16%</cell><cell>5%</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">ACKNOWLEDGMENTS</head><p>We thank Sariel Har-Peled and Jeff Erickson for useful discussions. We also thank Mark Newman for the high energy theoretical physics publication data and Albert-Lázló Barabási for the protein-protein interaction data set.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"> *   <p>This work was supported in part by the National Science Foundation NSF CCR-0098170, NSF IIS-02-09199, and the University of Illinois at Urbana-Champaign. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the funding agencies.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Power-law distribution of the world wide web</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Barabási</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Bianconi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">287</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Random Graphs</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bollobás</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
	<note>second edition</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The anatomy of a large-scale hypertextual Web search engine</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Page</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh International Conference on World Wide Web 7</title>
		<meeting>the Seventh International Conference on World Wide Web 7</meeting>
		<imprint>
			<publisher>Elsevier Science Publishers B. V</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="107" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Mining the network value of customers</title>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">Z</forename><surname>Drezner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">W</forename><surname>Hamacher</surname></persName>
		</author>
		<title level="m">Facility Location: Applications and Theory</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multiresolution modeling: Survey &amp; future opportunities</title>
		<author>
			<persName><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State of the Art Report</title>
		<imprint>
			<date type="published" when="1999-09">Sept. 1999</date>
			<biblScope unit="page" from="111" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Substructure discovery in the subdue system</title>
		<author>
			<persName><forename type="first">L</forename><surname>Holder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Djoko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Knowledge Discovery in Databases</title>
		<meeting>the Workshop on Knowledge Discovery in Databases</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="169" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Lethality and centrality in protein networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Mason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Barabási</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Oltvai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">411</biblScope>
			<biblScope unit="page" from="41" to="42" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Authoritative sources in a hyperlinked environment</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Kleinberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="604" to="632" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mapping networks of terrorist cells</title>
		<author>
			<persName><forename type="first">V</forename><surname>Krebs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Connections</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Mathematical Classification and Clustering</title>
		<author>
			<persName><forename type="first">B</forename><surname>Mirkin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Kluwer Academic Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The structure and function of complex networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E J</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIAM Review</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="167" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Detecting community structure in networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E J</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. Phys. J. B</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">The JUNG (Java Universal Network/Graph) framework</title>
		<author>
			<persName><forename type="first">J</forename><surname>O'madadhain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Boey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>UC Irvine</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Mining knowledge-sharing sites for viral marketing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Graph partitioning for high performance scientific simulations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Schloegel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRPC Parallel Computing Handbook</title>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">State of the art of graph-based data mining</title>
		<author>
			<persName><forename type="first">T</forename><surname>Washio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Motoda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGKDD Explor. Newsl</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="68" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Social network analysis</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wasserman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Faust</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Algorithms for estimating relative importance in networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smyth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>the ninth ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="266" to="275" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">gSpan: Graph-based substructure pattern mining</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2002 Int. Conf. on Data Mining (ICDM&apos;02)</title>
		<meeting>2002 Int. Conf. on Data Mining (ICDM&apos;02)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">BIRCH: an efficient data clustering method for very large databases</title>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGMOD Intl. Conf. on Management of Data</title>
		<imprint>
			<date type="published" when="1996-06">June 1996</date>
			<biblScope unit="page" from="103" to="114" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
