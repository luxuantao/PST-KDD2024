<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Utility Maximization in Peer-to-Peer Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Minghua</forename><surname>Chen</surname></persName>
							<email>minghua@ie.cuhk.edu.hk</email>
							<affiliation key="aff0">
								<orgName type="department">Kong Information Engineering Dept</orgName>
								<orgName type="institution">Chinese University of Hong</orgName>
								<address>
									<settlement>Hong Kong</settlement>
									<country>P.R.C</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Miroslav</forename><surname>Ponec</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Polytechnic University Computer and Information Science Dept. Brooklyn</orgName>
								<address>
									<postCode>11201</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sudipta</forename><surname>Sengupta</surname></persName>
							<email>sudipta@microsoft.com</email>
							<affiliation key="aff2">
								<orgName type="department">Communication and Collaboration Systems</orgName>
								<orgName type="institution">Microsoft Research</orgName>
								<address>
									<addrLine>One Microsoft Way</addrLine>
									<postCode>98052</postCode>
									<settlement>Redmond</settlement>
									<region>WA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jin</forename><surname>Li</surname></persName>
							<email>jinl@microsoft.com</email>
							<affiliation key="aff3">
								<orgName type="department">SIGMETRICS&apos;08</orgName>
								<address>
									<addrLine>June 2-6</addrLine>
									<postCode>2008</postCode>
									<settlement>Annapolis</settlement>
									<region>Maryland</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Philip</forename><forename type="middle">A</forename><surname>Chou</surname></persName>
							<email>pachou@microsoft.com</email>
							<affiliation key="aff4">
								<orgName type="laboratory">INFORMATION INTERFACES AND PRESENTATION Multimedia Information Systems</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Utility Maximization in Peer-to-Peer Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7319CCA6EB09AD2C40DA810EC6722EC4</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.4 [Computer Systems Organization]: COMPUTER-COMMUNICATION NETWORKS Distributed Systems</term>
					<term>C.4 [Computer Systems Organization]: PERFOR-MANCE OF SYSTEMS -Performance attributes</term>
					<term>H.5.1 Algorithms, Design, Measurement, Performance content distribution, multi-party video conferencing, multicast, peer-to-peer, streaming, utility maximization</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we study the problem of utility maximization in P2P systems, in which aggregate application-specific utilities are maximized by running distributed algorithms on P2P nodes, which are constrained by their uplink capacities. This may be understood as extending Kelly's seminal framework from single-path unicast over general topology to multi-path multicast over P2P topology, with network coding allowed. For certain classes of popular P2P topologies, we show that routing along a linear number of trees per source can achieve the largest rate region that can be possibly obtained by (multi-source) network coding. This simplification result allows us to develop a new multi-tree routing formulation for the problem. Despite of the negative results in literature on applying Primal-dual algorithms to maximize utility under multi-path settings, we have been able to develop a Primal-dual distributed algorithm to maximize the aggregate utility under the multi-path routing environments. Utilizing our proposed sufficient condition, we show global exponential convergence of the Primal-dual algorithm to the optimal solution under different P2P communication scenarios we study. The algorithm can be implemented by utilizing only end-to-end delay measurements between P2P nodes; hence, it can be readily deployed on today's Internet. To support this claim, we have implemented the Primal-dual algorithm for use in a peer-assisted multi-party conferencing system and evaluated its performance through actual experiments on a LAN testbed and the Internet.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>The problem addressed in this paper is motivated by Peerto-Peer (P2P) multi-party conferencing applications in which providing Quality-of-Service (QoS) is a crucial challenge. Because the Internet is not a dedicated network, voice or video conferencing applications must share the available network resource with other applications, and adjust the coding rate, protection scheme and network delivery path to maximize the quality of experience of all peers involved. We measure the quality of experience of the conferencing peer by a utility function. For video conferencing, it can be the Peak-Singal-to-Noise Ratio (PSNR) of the decoded video, or a more sophisticated subjective quality measure such as <ref type="bibr" target="#b20">[19]</ref>.</p><p>Traditional multi-party conferencing (VoIP and/or video conferencing) is conducted using either a client-server architecture or in an ad hoc simulcast way.</p><p>The client-server approach ensures that the entire upload bandwidth of each peer can be used for the delivery of just that peer's audio/video session; however, it places a heavy CPU and network bandwidth burden on the central server and thus incurs heavy deployment and egress ISP bandwidth costs. In the ad hoc simulcast approach, each user splits its uplink bandwidth equally among all receivers and sends its video to each receiver separately. Though simple to implement, this approach suffers from poor quality of service, especially when there is one peer with low upload bandwidth, as that peer is forced to use a low coding rate that degrades the overall experience of the other peers.</p><p>In contrast, the P2P approach for multiparty video conferencing that we consider in this paper does not necessarily rely on centralized infrastructure and allows a peer to not only use its uplink to send its video stream but also to forward the video stream of other peers. This approach facil-itates optimal use of peer uplink bandwidth in the system and naturally accommodates peer uplink heterogeneity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related Work</head><p>In the past decade, network utility maximization have attracted significant attention ever since the seminal framework was introduced in <ref type="bibr" target="#b17">[16]</ref> and <ref type="bibr" target="#b21">[20]</ref>. In the framework, network protocols are understood as distributed algorithms that maximize aggregate user utility under wired or wireless network resource constraints. For the single-path unicast scenarios considered in <ref type="bibr" target="#b17">[16]</ref> and <ref type="bibr" target="#b21">[20]</ref>, user's utility function is typically assumed to be strictly concave function of user rate, and the resource constraints set is linear. Various types of fairness across users can be warranted by choosing different utility functions <ref type="bibr" target="#b24">[23]</ref>. This framework not only provides a powerful tool to reverse engineering existing protocols such as TCP <ref type="bibr" target="#b16">[15]</ref>, but also allows systematic design of new protocols, see <ref type="bibr">[7]</ref> for a comprehensive review.</p><p>There have been work on extending the framework to multi-path unicast scenarios <ref type="bibr" target="#b11">[10]</ref>  <ref type="bibr" target="#b19">[18]</ref>  <ref type="bibr" target="#b28">[27]</ref>, as well as singletree multicast scenarios <ref type="bibr" target="#b15">[14]</ref>  <ref type="bibr" target="#b8">[8]</ref>. For utility maximization in multi-path unicast scenarios, the utility function is nonstrictly concave with respect to the individual path rate due to multi-path routing. The challenge is to design distributed algorithms to solve non-strictly concave optimization problems with provable fast convergence and easy implementation. Primal and Dual algorithms, and proximal approach are proposed to address such challenges <ref type="bibr" target="#b11">[10]</ref>  <ref type="bibr" target="#b19">[18]</ref>  <ref type="bibr" target="#b28">[27]</ref>.</p><p>For utility maximization in single-tree multicast scenarios where routers enable multicast functionality, the constraint set is non-linear, in particular, involving non-differentiable max(•) terms. In <ref type="bibr" target="#b15">[14]</ref> and <ref type="bibr" target="#b8">[8]</ref>, distributed Primal and Dual algorithms are proposed to maximize utility, under the assumptions that multicast trees are given and every session has a unique source. The challenge of dealing with nondifferentiable max function in the constraints is approached by either using continuous and concave approximation of the max function <ref type="bibr" target="#b8">[8]</ref>, or introducing auxiliary variables and applying either Proximal or sub-gradient approaches <ref type="bibr" target="#b15">[14]</ref>.</p><p>There is also work focusing on multicast scenarios where routers can perform intra-session network coding <ref type="bibr" target="#b5">[5]</ref> [28] <ref type="bibr" target="#b23">[22]</ref>. The challenge is to deal with non-strictly concave optimization under non-linear constraints. By exploring the Proximal approach, or a slow timescale traffic engineering control approach, or expressing the constraints involving max(•) terms with equivalent linear ones, distributed Primal, Dual subgradient and Primal-dual algorithms are proposed to maximize the sum of non-concave utility functions, or minimize the cost of using the network <ref type="bibr" target="#b5">[5]</ref> [28] <ref type="bibr" target="#b23">[22]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Our Contributions</head><p>In this paper, we consider the general utility maximization problem for multiple multicast in a P2P setting, with multipath delivery and inter-session network coding allowed. This setting differentiates our work from other existing work, and highlights the challenges we encounter. Multi-party conferencing is one of the applications of our work.</p><p>The main contributions of this paper are as follows:</p><p>• The Optimality of Routing on P2P Topology:</p><p>We focus on typical P2P topology where peer uplinks are the only bottleneck in the network. For multisource multicast on certain classes of popular P2P topologies, we show that all feasible rates can be achieved by packing polynomial number of Steiner trees. As such, routing is optimal even if the system contains Steiner nodes (helpers), and surprisingly there is no gain to perform (intra-session or inter-session) network coding on peer nodes. This result is a multi-source extension of the single source result studied in <ref type="bibr" target="#b18">[17]</ref>.</p><p>• New Tree-based Formulation: We introduce a new formulation for utility maximization in P2P topology in which the variables are rates of individual trees. In contrast, almost all prior formulations in the rate control literature are either path-based or link-based. Our tree based formulation uses linear constraints, thus avoiding the nonlinear max(•) terms in path and link based formulations. Using unique properties of P2P topology, we show that our formulation achieves maximum utility by routing along a linear number of depth-1 or depth-2 trees for each source in the overlay network. As such, our solution is not only optimal but also readily implementable on today's Internet.</p><p>• Primal-Dual Algorithm with Fast Convergence: Contrary to popular belief that Primal-dual algorithms in general fail to converge in multi-path routing scenarios with supporting evidence in <ref type="bibr" target="#b28">[27]</ref>, we design a queuing delay based Primal-dual algorithm that solves the utility maximization problem for multi-tree routing under a general sufficient condition that holds in popular P2P settings. This distributed algorithm is used by each source to adjust its transmission rate and split that rate across multiple multicast trees by utilizing end-to-end delay measurements between peer nodes.</p><p>• Evaluation on the Internet: The proposed distributed algorithms can be easily implemented in practice. We have built a prototype multi-party conferencing system in Python programming language using the Primal-dual algorithm and evaluated its performance for several multi-party conferencing scenarios on a LAN testbed, in a virtual environment, and also on the Internet. Our system can satisfy the strict endto-end packet delivery delay requirements for conferencing systems because every packet goes through at most one hop in the overlay and we tightly control the queuing delay between nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PROBLEM FORMULATION</head><p>We consider a network presented by a directed graph G = (V, J), where V is the set of vertices, i.e., nodes in the network, and J is the set of edges, i.e., links in the physical network. Assume each link j ∈ J has a finite capacity Cj.</p><formula xml:id="formula_0">Let n = |V |.</formula><p>In the P2P systems we consider, some source node s ∈ S sends its content to a set of receivers, denoted by Rs. A set of helper nodes, denoted by H, are willing to help in distributing the content. In this paper, we assume a deterministic fluid model for sending rates of nodes and ignore packet dynamics. This assumption is reasonable when the timescale of rate control is sufficiently larger than that of packet dynamics.</p><p>Let zs be the multicast rate of source s, and z = {zs, s ∈ S}. Assume all members in Rs receive s's stream at this rate. Let Us(zs) be the utility upon receiving the content from s at rate zs. To prevent abusing the resources from helpers, sources and receivers should use helpers' resources only after they have used up their own. Putting this into consideration, we associate a cost, denoted by G h (z), with using a helper h ∈ H to distribute a content.</p><p>In this multiple multicast scenario, a natural goal is to maximize the aggregate net utility of all receivers, subject to rate constraints, i.e., max z s∈S</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Us(zs)-</head><p>h∈H G h (z), subject to the constraints of {zs}.</p><p>Before formulating the problem further, we need to understand the constraint region for {zs} to optimize over and how to achieve it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Network Coding vs. Routing</head><p>The maximum achievable multicast rate of single source multicast scenario is characterized as the minimum of the min-cuts between the source node s and all nodes in its receiver set R <ref type="bibr" target="#b1">[1]</ref>, i.e., mint∈R min-cut (s, t). For example, in the classical Butterfly network shown in Fig. <ref type="figure" target="#fig_0">1</ref>.(a), a source s multicasts to two receivers t1 and t2. The min-cuts between s and t1 and t2 are all 2. Thus, the maximum achievable multicast rate is 2. If network coding is allowed, then the single source multicast rate region can be achieved for arbitrary topology by solving the routing and coding problems separately, each being of polynomial complexity <ref type="bibr" target="#b12">[11]</ref>. For example, as seen in Fig. <ref type="figure" target="#fig_0">1</ref>.(b), by performing XOR operation in the Steiner nodes in the Butterfly network, we can achieve the maximum achievable multicast rate 2.</p><p>The achievable rate region for multi-source multicast scenarios was recently implicitly characterized in <ref type="bibr" target="#b30">[29]</ref>, but currently no scheme is known to achieve it. It is believed that information from different multicast groups should be coded in a nonlinear fashion in order to achieve the rate region (inter-session coding). However, doing such mixing and coding is complex and largely open.</p><p>Regardless of its power, network coding is not quite practical in today's P2P applications. It cannot be used in the Internet routing layer because it requires changes in all routers (for encoding) and end-hosts (for decoding). If deployed in the overlay (P2P layer), it will introduce new complexity in end-host software (for encoding and decoding) and additional delays in video delivery. A practical way to explore the achievable rate region is by routing. Each source s packs directed Steiner trees rooted at s and reaching all receivers in Rs. For the general case of arbitrary topologies, this approach of routing brings up the following difficulties:</p><p>1. For a given source, the maximum rate achieved by routing can be a factor of up to log |V | lower than that achieved by network coding <ref type="bibr" target="#b12">[11]</ref>. For example, as seen in Fig. <ref type="figure" target="#fig_0">1</ref>.(c), by packing Steiner trees in the Butterfly network, we can only achieve multicast rate of 1, as compared to 2 achieved by network coding approach.</p><p>2. To achieve the maximum rate for routing, the problem of packing directed Steiner trees is N P-hard <ref type="bibr" target="#b13">[12]</ref>. Moreover, the number of Steiner trees used in an optimal solution may be exponential.</p><p>As such, routing cannot achieve the optimal rate region in general topology and its cost could be prohibitively large. However, the fact that our problem involves a P2P topology where peer uplinks are the only bottlenecks (in practice) in the network allows us to tackle all of the above difficulties in a surprisingly elegant manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Impact of P2P Topology</head><p>In P2P topology, we assume peer uplinks are the only bottlenecks in the whole network, and every peer can connect to every other peer through routing in the overlay. In the overwhelming majority of residential broadband connections, bottlenecks typically are at the edge of the access networks rather than in the middle of the Internet. Furthermore, it is common to have the uplink capacity of a peer to be several times smaller than the downlink capacity, thus justifying the practicality of our assumption on P2P topology. Formally, if a peer i has uplink capacity r U i , downlink capacity r D i , and is a source of data at rate Ri, and a sink of data at rate R ′ i (i.e., it is not uploading this data to any other peer), then its downlink is not a bottleneck if</p><formula xml:id="formula_1">r D i ≥ R ′ i + (r U i -Ri).</formula><p>In the context of P2P topology with the above uplink constraint assumptions, a powerful theorem established in the Mutualcast paper <ref type="bibr" target="#b18">[17]</ref> states the following. Consider a network with P2P topology consisting of a source s, a set of receivers Rs, and a set of helpers H. Then, the min-cut capacity for source s and receivers Rs can be achieved by packing at most 1 + |Rs| + |H| Mutualcast trees as follows:</p><p>• One depth-1 tree rooted at s and reaching all receivers in Rs, i.e. the type (1) tree in Fig 2.</p><p>• This result extends and simplifies Edmonds' theorem <ref type="bibr" target="#b10">[9]</ref> for P2P topology, in the sense that it allows helper (Steiner) nodes and uses only depth-1 and depth-2 Steiner trees. Fig. <ref type="figure">4(b)</ref> shows all 12 Mutualcast trees for a three peers and one helper scenario where each peer wants to multicast its content to the other two.</p><p>Given that the Mutualcast Theorem is for single source multicast scenario only, we first extend this result to the case of a multi-source multicast scenario when there is no coding across sessions belonging to different sources. Theorem 1. Consider a P2P topology in which peer uplinks are the only bottleneck. Consider multiple multicast sessions given by source nodes s ∈ S, receiver set Rs, and helper nodes Hs = V -{s} -Rs for session with source s. Then, the rate region z = {zs, s ∈ S} achievable by network coding within each session is also achievable by routing along 1+|Rs|+|Hs| Mutualcast trees for each source s independently.</p><p>Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>This observation is interesting and practically important in the sense that it states that for practical P2P topology, routing is as good as intra-session network coding.</p><p>Further, surprisingly, we show in the following theorem that routing is optimal and inter-session network coding is not needed, if we require that each receiver is part of every session, i.e., Rs ∪ {s} = R for all s ∈ S. (Note that each receiver need not be a source though.) Such a scenario is common in multi-party conferencing systems.</p><p>Theorem 2. Consider a P2P topology in which peer uplinks are the only bottleneck. Consider multiple multicast sessions given by source nodes s ∈ S, receiver set Rs, and helper nodes Hs = V -{s} -Rs for session with source s. Further, assume that each receiver is part of every session, i.e., Rs ∪ {s} = R for all s ∈ S, and hence Hs = V -R = H for all s. Then, the largest achievable rate region z = {zs, s ∈ S}, achievable by network coding across sessions, can be achieved by routing along 1 + |Rs| + |Hs| Mutualcast trees for each source s independently. Furthermore, let Co(v) be the uplink capacity constraint for node v in V , then the largest achievable region is given by</p><formula xml:id="formula_2">z : zs ≤ Co(s), ∀s ∈ S, |R| s∈S zs ≤ v∈V Co(v) - 1 |R| h∈H Co(h)</formula><p>Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>In contrast to the known results that inter-session coding is needed to achieve the maximum rate region in general topology, the unique structure of the P2P topology we consider in this paper allows us to achieve the maximum rate region by packing only linear number of Steiner trees per source, if each receiver is part of every multicast session. This result is not only surprising but also elegant.</p><p>We summarize the advantages and disadvantages of using network coding and packing (directed) Steiner trees to achieve multicast rate region in Table <ref type="table" target="#tab_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Optimization Framework</head><p>With the packing Mutualcast trees approach, each source s ∈ S builds a set of depth-1 and depth-2 Mutualcast trees to send data to all receivers in Rs along the trees. We denote this set of trees also as s, and a source is identified by the set of trees of which it is the root. Another advantage of this packing trees approach is that the resulting solution also includes session scheduling; therefore, the latter need not be solved as a separate problem.</p><p>A tree m ∈ s is a set of links and nodes that the tree passes through; all receiver nodes on a tree receive the same content at the same rate. We denote the rate of tree m as xm. Rates of the trees rooted at source s sum up to the source rate zs, i.e., m∈s xm = zs, ∀s ∈ S. The injecting rate of link j is the aggregate rate of the trees that pass through link j, denoted by yj, and is given by,</p><formula xml:id="formula_3">yj s∈S m∈s:j∈m b m j xm, ∀j ∈ J,<label>(1)</label></formula><p>where b m j is the number of tree m's branches that pass through physical link j. Since different branches of a tree in the overlay can pass through the same physical link in the underlay, the tree rates might be counted multiple times when computing the injecting rate of a link, hence the multiplication by b m j . Similarly, define the forwarding rate of a helper node h as</p><formula xml:id="formula_4">y h s∈S m∈s:h∈m b m h xm, ∀h ∈ H,<label>(2)</label></formula><p>where b m h is the out-degree of helper node h in multicast tree m. Denote</p><formula xml:id="formula_5">y H = [y h , h ∈ H].</formula><p>The aggregate utility maximization problem in P2P systems can be formulated as follows:</p><formula xml:id="formula_6">max {xm} s∈S |Rs|Us m∈s xm - h∈H G h (y h ) (3) s.t. yj ≤ Cj, ∀j ∈ J,</formula><p>where |Rs|Us m∈s xm is the aggregate utility of a group Rs upon receiving content at rate m∈s xm = zs, and G h (y h ) is the cost of using helper node h to deliver content at rate y h . As discussed earlier, this cost is to prevent peers from abusing resources from helpers -sources and receivers should use helpers' uplink capacities only after they use up their own. Formally, if the optimum objective function value can be achieved without using (or using lower) helper uplink capacities, then this should be preferred.</p><p>We assume that the utility functions Us(•), s ∈ S, are strictly concave, and the cost functions</p><formula xml:id="formula_7">G h (•), h ∈ H are strictly convex.</formula><p>This problem formulation is applicable to many P2P applications in practice. For example, in P2P video conferencing systems with utility being the video quality, the problem in (3) corresponds to maximizing the aggregate video quality of all receivers. This formulation is flexible in the sense the tree loss and delay characteristics can be easily taken into account by adding a term emxm with negative em into the utility function representing the delay or loss cost of using tree m.</p><p>The optimization problem in (3) is a non-strictly concave optimization problem with linear constraints. It might have more than one optimal {xm}. However, the optimal aggregate rate associated with each source {z} is unique. This is because the objective function is strictly concave with respect to {zs}, and the rate constraint region of {zs} can be shown to be a polyhedron by eliminating the tree-rate variables xm (for example, by Fourier-Motzkin elimination <ref type="bibr" target="#b3">[3]</ref>).</p><p>For the concave optimization problem shown in (3), interiorpoint and simplex based algorithms can be applied to solve the problem in a centralized manner <ref type="bibr" target="#b2">[2]</ref>. However, centralized solutions may put a huge burden on the central solver and it requires the central solver to know the up-to-date topology, peer uplink rates, cross traffic, and the utility function of each peer. Tracking these information may not be feasible in practice and it is therefore desirable to have a distributed algorithm that can be deployed in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">DISTRIBUTED ALGORITHM FOR MULTI-TREE BASED MULTICAST</head><p>The optimization problem we consider in ( <ref type="formula">3</ref>) is a nonstrictly concave optimization due to multi-path and multitree routing between sources and their receivers. There are three ways to approach such a problem in a distributed manner, namely Primal algorithms, Dual algorithms, and Primal-dual algorithms.</p><p>The advantages of Primal algorithms are their wide applicability and fast convergence in multi-path/multi-tree routing scenarios <ref type="bibr" target="#b11">[10]</ref>. The down side of the Primal algorithms is that they typically only generate approximate solutions.</p><p>Due to the non-strictly concave objective function, standard Dual gradient algorithms fail to work since the gradient is not everywhere defined. Alternatively, dual subgradient algorithms <ref type="bibr" target="#b15">[14]</ref> [28] and dual proximal algorithms <ref type="bibr" target="#b15">[14]</ref>  <ref type="bibr" target="#b19">[18]</ref> are proposed to solve the problem. However, convergence of dual variables in these approaches are typically slow, and recovering optimal primal variables from optimal dual variables requires solving another optimization problem. Furthermore, it is not clear how to implement these algorithms on today's Internet.</p><p>In this paper, we focus on Primal-dual algorithms. As it will be clear later, the advantage of our Primal-dual algorithm are two folds. First, it can be implemented by utilizing the delay measurements between peers, which makes it particularly attractive in practice. Second, we show that our Primal-dual algorithm converges exponentially fast.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">A Queuing Delay Based Primal-dual Algorithm</head><p>The Lagrangian of the optimization problem in (3) is as follows:</p><formula xml:id="formula_8">L(x, p) = s∈S |Rs|Us (zs) - h∈H G h (y h ) - j∈J pj (yj -Cj) , (<label>4</label></formula><formula xml:id="formula_9">)</formula><p>where pj is the Lagrangian multiplier, and can be interpreted as the price of using link j. Since the original problem in (3) is a concave optimization problem with linear constraints, strong duality holds and there is no duality gap. Any optimal solution of the problem in (3) and one of its correspond-ing Lagrangian multiplier is a saddle point of L over the set {x ≥ 0, p ≥ 0}, and vice versa. Further, (x, p) is one such saddle point of L if and only if it satisfies the Karush-Kuhn-Tucker conditions <ref type="bibr" target="#b2">[2]</ref>:</p><formula xml:id="formula_10">∀s ∈ S, ∀m ∈ s, ∀j ∈ J, pj ≥ 0, yj ≤ Cj, pj (yj -Cj) = 0, (<label>5</label></formula><formula xml:id="formula_11">)</formula><formula xml:id="formula_12">|Rs|U ′ s (zs) - h∈m b m h G ′ h (y h ) - j∈m b m j pj = 0. (<label>6</label></formula><formula xml:id="formula_13">)</formula><p>The first equation is the complementary slackness condition.</p><p>The optimal Lagrangian multiplier can be nonzero only if the capacity constraint of link j is activated. We denote the set containing all (x, p) that satisfy the above conditions by E.</p><p>As the original problem has at least one solution, E contains at least one point and is therefore not empty.</p><p>There could be multiple saddle points of L since the original optimization problem is not strictly concave. To pursue one of the saddle points, we consider the following Primaldual algorithm, over the set {x ≥ 0, p ≥ 0}: s ∈ S, ∀m ∈ s, and j ∈ J,</p><formula xml:id="formula_14">ẋm = km |Rs|U ′ s (zs) - h∈m b m h G ′ h (y h ) - j∈m b m j pj (7) ṗj = 1 Cj (yj -Cj) + p j ,<label>(8)</label></formula><p>where km is a positive constant controlling the adaptation rate of tree m and (yj -Cj) + p j = yj(t) -Cj if pj &gt; 0, and is max(0, yj -Cj) otherwise. It is known that pj adapted according to <ref type="bibr" target="#b8">(8)</ref> is simply queuing delay <ref type="bibr" target="#b22">[21]</ref>. Every saddle point of L is an equilibrium of the above system in ( <ref type="formula">7</ref>)- <ref type="bibr" target="#b8">(8)</ref>.</p><p>Whether the Primal-dual algorithm can be applied to multipath/multi-tree routing scenarios is an open problem. Served as a negative result, it is shown that (x, p) following ( <ref type="formula">7</ref>)- <ref type="bibr" target="#b8">(8)</ref> oscillates indefinitely in common multi-path unicast scenarios [27, Section 2.5]. Consequently, to our best knowledge, almost no solution for multi-path routing utilizes such Primal-dual algorithm.</p><p>In this paper, we give a general sufficient condition for the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) to converge to the optimal solution, regardless of unicast or multicast, single path or multipath routing. To our best knowledge, this is the first attempt to characterize the applicability of the Primal-dual algorithm. We believe its applicability is beyond the P2P systems we studied in this paper.</p><p>We give the definitions and notations to be used in later analysis. Let A be the connectivity matrix, where the (i, j) entry is the number of branches of tree j passing through link i. This is different from traditional connectivity matrix (for unicast) as its entries can take values other than 1 or 0. Similarly, let AH be the helper connectivity matrix whose entries being the number of branches of a tree passing through a helper. Let K = diag{km, m ∈ s, s ∈ S}, C = diag{Cj, j ∈ J} where J is assumed to contain only the bottlenecks without loss of generality. Let B be the matrix representing the relation of source rate, rate passing through helpers and the tree rate, with the (i, j) entry being 1 if tree j belongs to source i, being b j i if tree j passes through helper i, and 0 in any other cases.</p><p>The following Lemma shows that the nonlinear system in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) converges to an invariant set, over which the nonlinear system turns into a linear one.</p><p>Lemma 1. All (x, p) trajectories of the system in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) converge to an invariant set, denoted by V0 = {(x, p) : z, ȳH T = B x = const}, over which the following is true:</p><p>• z and ȳH are the unique solution to the problem in (3);</p><p>• the nonlinear system reduces to a linear one:</p><formula xml:id="formula_15">ẋ = KU ′ -KAH G ′ -KA T p ṗ = C -1 Ax -1<label>(9)</label></formula><p>where U ′ and G ′ are constant matrices;</p><p>• the above linear system is marginally stable, each of its trajectories do not converge, and all trajectories form limit cycles.</p><p>Shown by the above theorem, (x, p), trajectories of the system in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) converge to a set V0 where the source rates z are optimal. Clearly, all saddle points of L belong to V0, and E ⊆ V0. If we also have V0 ⊆ E, then the Primal-dual algorithm solves the problem in (3).</p><p>However, it is possible that V0 contains some (x, p) that are not in E; ẋ and ṗ are not zero. If (x, p) moves onto these points, then they will keep oscillating and never converge. This is exactly the challenge of using the Primal-dual algorithm in multi-path/multi-tree routing scenarios, and explains the oscillations in rates and delay discussed in <ref type="bibr" target="#b28">[27]</ref>.</p><p>One way to guarantee V0 = E is to utilize the fact that B x is constant to explore the conditions for V0 to not include those singular points, as explored in the following theorem.</p><p>Theorem 3. All trajectories (x, p) of the system in ( <ref type="formula">7</ref>)- <ref type="bibr" target="#b8">(8)</ref> converge globally asymptotically to one of its equilibria and V0 = E, if p is completely observable from (z, ȳH ) through the linear system in <ref type="bibr" target="#b10">(9)</ref>. Equivalently, V0 = E if for any eigenvalue of C -1 AKA T , denoted by λ,</p><formula xml:id="formula_16">rank C -1 AKA T -λI BKA T = |J|.<label>(10)</label></formula><p>Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>Furthermore, we can access a stronger convergence result for the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>), if the above condition is satisfied. Theorem 4. If the Primal-dual algorithm in ( <ref type="formula">7</ref>)-(8) converges globally asymptotically, then the following is also true: there exists a compact set Ω such that any compact set containing Ω is a positive invariant set of the system in ( <ref type="formula">7</ref>)- <ref type="bibr" target="#b8">(8)</ref>. Further, if (x, p) are bounded within one such compact set, then the system trajectories (x, p) converge to the equilibria globally exponentially.</p><p>Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>The Primal-dual algorithm described in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) can be implemented by each link generating its queuing delay and each source adjusting the rates of its trees by observing sum of the queuing delays introduced by using the trees. As such, the algorithm can be implemented in a distributed manner.</p><p>The condition in <ref type="bibr" target="#b11">(10)</ref> may not be satisfied under some network settings, and the Primal-dual algorithm may not converge. One example is shown in <ref type="bibr" target="#b28">[27,</ref><ref type="bibr">Section 2.5]</ref>.</p><p>Interestingly, the unique structure of the P2P topology allows us to prove that the sufficient condition can be easily satisfied for two typical P2P systems as explored in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">P2P Content Dissemination Scenarios</head><p>Consider a P2P data dissemination system with n peers, among which there are sources, receivers, and helpers. Every source distributes its content to its receivers, with or without the assistance of helpers. A receiver can receive contents from multiple sources simultaneously, while sources are servers that only distribute data but do not receive contents. These scenarios correspond to the popular P2P file distribution and P2P streaming scenarios in practice.</p><p>Assume the first ns number of the nodes are sources. Define Ri, 1 ≤ i ≤ ns, to be the set of peers that want to receive contents from source i. Define Hi, 1 ≤ i ≤ ns be the set of helpers that help distributing the content of source i. For the ease of explanation, we assume there is no helper in the following analysis, i.e., Hi = ∅. The analysis can be straightforwardly extended to the case where Hi = ∅.</p><p>Let ni = |Ri| + 1, 1 ≤ i ≤ ns. Each source uses total ni + 1 Mutualcast trees to deliver its content. For the sake of simplicity, we use the following notation when stating the result. We denote xij as the rate of tree j of source i passing through node j in the level one, with 1 ≤ j ≤ n and 1 ≤ i ≤ ns. Let kij represent how fast the tree rate xij adapts, and kij = 0 if j / ∈ Ri and j = i. This is equivalent to having exactly ni + 1 trees for source i. Since a source is not receiver for other sources in our P2P data dissemination scenarios, we also have kij = 0 for all 1 ≤ j ≤ ns and j = i.</p><p>The following theorem gives a sufficient condition for the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) to converge to the saddle points of L in P2P data dissemination systems.</p><p>Theorem 5. For P2P data dissemination systems in P2P topology, all (x, p) trajectories of the system in ( <ref type="formula">7</ref>)-(8) converge to one of its equilibria globally asymptotically, if the following conditions are satisfied:</p><p>• For all 1 ≤ i = j ≤ n, ξi = ξj, where</p><formula xml:id="formula_17">ξ l = (n l -1)n l C l k ll , 1 ≤ l ≤ ns; 1 C l j:l∈R j (nj -1) 2 k jl , otherwise • kii &lt; C i 2C j kij,</formula><p>for all 1 ≤ i ≤ ns and ns &lt; j ≤ n. Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>In practice, these conditions are in fact easy to satisfy with high probability. For example, source i can generate kij, j = i in a suitable range randomly such that the first condition is satisfied with a good chance.</p><p>Source i can then select kii such that the second condition is satisfied under practical relationship between Ci, normally the server bandwidth, with Cj, normally peers' (home users') uplink bandwidth. For instance, we can assume practically min( C i C j ) = 1 and set kii to be less than 1 2 minj(kij) in a random fashion.</p><p>In practice, satisfying this condition also forces the source to adapt the depth-2 Mutualcast trees with high priority, indicating source nodes, normally the server, will adapt quickly to the network condition changes in receivers, as compared to the response to its own uplink condition change.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Multi-party Conferencing Scenarios</head><p>Consider a P2P multi-party conferencing system with the first ns of them being participants and the rest n h of them being helpers. Every participant wants to receive contents from all other participants. The following theorem gives a sufficient condition for the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) to converge to the saddle points of L in P2P multi-party conferencing systems. Theorem 6. For multi-party conferencing systems in P2P topology, all (x, p) trajectories of the system in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) converge to one of its equilibria globally asymptotically, if for source s, all its km, m ∈ s are the same.</p><p>Proof. Refer to <ref type="bibr" target="#b6">[6]</ref>.</p><p>The requirement of having all km to be the same for all m ∈ s is easy to satisfy in practice. It implies every source should adjust its trees at the same adaptation rate, which is also convenient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">PRACTICAL IMPLEMENTATION</head><p>We implemented a prototype of a P2P multi-party conferencing system. In such a system, each participant peer is a source of audio and video streams and at the same time wants to receive videos from all other participants<ref type="foot" target="#foot_0">1</ref> . Some peer nodes not interested in sending and receiving videos, such as the MCU, may decide to become a helper and assist in the audio and video delivery.</p><p>Implementing the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) appears to be straightforward. We first describe the functionality implemented by each peer, then highlight important issues we addressed in the implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Peer Functionality</head><p>Besides encoding and decoding video streams, each peer (except helpers) is also involved in building and maintaining multicast trees, and forwarding packets along the trees.</p><p>As a source, every peer is the root of its n multicast trees. It sets up these trees at the beginning of the conference, adjusts them upon peer joining and leaving, and splits the encoded data among the trees. Peers also collect queuing delay information from other peers on their trees and adjust the tree rates according to <ref type="bibr">(7)</ref>.</p><p>Each peer on multicast trees also forwards the packets from upstream tree branches to downstream branches. It is achieved by building a forwarding table, which maps a tree number, contained in every packet, to a list of its downstream peers. For instance, the helper D in Fig. <ref type="figure">4</ref>(a) makes two copies of every packet it receives from one peer (A, B, or C, respectively), and unitcasts the copies to the other two peers.</p><p>Meanwhile, peers on multicast trees also measure queuing delay between two peer nodes and return these measurement to the root. This is done in a simple way that will be discussed later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Queuing Delay Measurement and Updating Tree Rates</head><p>Seen from ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>), the key in implementing the Primaldual algorithm is to measure the queuing delay pj of peer j's uplinks, for all j ∈ J. Under the setting that peer uplinks are the only bottleneck in P2P systems, the end-to-end queuing delay between peer j and its offspring peers on multicast trees is equal to the queuing delay pj of the peer j's uplinks. Therefore, we can measure pj by measuring the end-to-end delay between peer j and its offspring peers. To ensure a fully distributed solution, it is desirable to carry out such end-to-end delay measurement without global synchronization across peer nodes.</p><p>In our implementation, we use the difference in relative One-Way-Delay (ROWD) to measure the queuing delay between two peer nodes. ROWD is the relative difference between the packet sending time at the sender peer, and the packet receiving time on the receiver peer. It is known that queuing delay between two peers can be estimated by the difference between current ROWD and the smallest ROWD seen in the history <ref type="bibr" target="#b4">[4]</ref>.</p><p>The advantage of measuring delay based on ROWD is that it does not require time synchronization across peers. The overhead of distributing the delay information is negligible as it only requires few bytes per packet and it is distributed together with each peer's video.</p><p>Upon collecting the necessary delay measurement pj (j ∈ Rs ∪ H ∪ {s}), source peer s computes an average queuing delay for each peer on its trees, by doing a running average over the last three queuing delay measurements of the peer. The purpose of doing so is to achieve a balance between robustness to measurement noise and quick response to network condition changes. Source s then updates its tree rates xm (m ∈ S) according to <ref type="bibr">(7)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Utility (PSNR) Modeling</head><p>In video processing, PSNR metric is the de facto standard criterion to provide objective quality evaluation between the original frame and the compressed one. For the original video frame f1 and the compressed frame f2, each containing N × N pixels with values in [0, 255], the PSNR is computed as follows:</p><formula xml:id="formula_18">P SN R(f1, f2) = 10 log 10 255 2 × N 2 N i=1 N j=1 (f ij 1 -f ij 2 ) 2</formula><p>, where f ij 1 and f ij 2 are the pixel values in i-th row and j-th column of frames f1 and f2, respectively.</p><p>Interestingly, we empirically found that the PSNR of a source s's video coded at rate zs can be approximated by logarithmic function βs log(zs), with higher βs for videos with large amount of motion and lower βs for rather still scenes, and they can be obtained from the video encoder of source s during encoding. Based on this empirical observation, we use utility function Us(zs) = βs log(zs) in our experiments.</p><p>Fig. <ref type="figure" target="#fig_3">3</ref> shows PSNR curves of three videos as functions of encoding rates. These represent the receiving video quality if  a source peer encodes and sends its video at these rates. We have chosen three video sequences in CIF format: Akiyo, Foreman, and Tennis. They represent low, medium, and high motion scenes, respectively. We encoded the videos by H.264/AVC Reference Software Encoder (ver. 12.2) <ref type="bibr" target="#b14">[13]</ref> with various bitrates to obtain the PSNR curves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Implementing Helper Cost Function Using Delay</head><p>In order to implement the Primal-dual algorithm in ( <ref type="formula">7</ref>)-( <ref type="formula" target="#formula_14">8</ref>) in practice, we need to generate cost of using helpers according to their cost functions G h (y h ), and to update source peers about their values.</p><p>The idea is to implement it as an additional artificial delay that helper h injects when forwarding every packet. When peers compute the queuing delay for packets received from a helper node h, they add a small amount of G ′ h (y h ) to it. This artificial portion of delay will be then distributed back to the source peers. In this way, the source peers will naturally take this G ′ h (y h ) cost into account when adjusting the tree rates according to (7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Bounding the Average Queuing Delay At the Equilibrium</head><p>On one hand, our solution uses only depth-1 and depth-2 Steiner trees to deliver contents from a source peer to its receiver peers. Consequently, every packet goes through at most one hop (i.e., two tree branches) in the overlay before reaching all receivers, resulting in low end-to-end propagation delay in packet delivery.</p><p>On the other hand, one solution relies on the queuing delay experienced by packets to control the tree rates properly. As queuing delay also contributes to the end-to-end packet delivery delay, it is then desirable to bound the queuing delay experienced by packets at the steady state of the system after the tree rates converge.</p><p>Let (x, p) be the equilibrium tree rates and queuing delays, and let z = B x, ȳH = AH x and q = A T p. Let dm be the average queuing delay in packet delivery along tree m at the equilibria. The following proposition states the relationship of dm and utility functions: Proposition 1. The following optimization problem, with α being a positive constant, has the same solution as the one in (3):</p><formula xml:id="formula_19">max {xm} α s∈S |Rs|Us m∈s xm - h∈H G h (y h ) (11) s.t. yj ≤ Cj, ∀j ∈ J,</formula><p>Meanwhile, at the equilibria of the above system, for all m ∈ s, we have</p><formula xml:id="formula_20">dm ≤ 2αU ′ s (zs).<label>(12)</label></formula><p>As such, given a lower bound on zs, we can bound dm with a designed value by tuning the constant α. For example, for P2P multi-party conferencing system, the system designer may want to set a limit on how low the equilibrium source rate can be, since the video quality will be unacceptable at such limited rate. This will give a lower bound on zs, and hence a lower bound of U ′ s (zs) for all s ∈ S. Then the designer can bound the worst-case dm with a designed value by solving α according to <ref type="bibr" target="#b13">(12)</ref> with the designed value and the lower bound for lower bound of U ′ s (zs). It should be noted that in practice the converged source rate is larger than the video rate limit, the experienced dm will be therefore smaller than the worse-case bound set above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EXPERIMENTAL RESULTS</head><p>We use PCs running Windows XP and Network Emulator for Windows (NEW) connected to a LAN for Scenarios 1 and 2. NEW is a software based network emulator that allows realistic emulation of different network characteristics such as bandwidth emulation, packet loss and latency <ref type="bibr" target="#b26">[25]</ref>. Scenarios 1 and 2 use the topology and network conditions described by Fig. <ref type="figure">4(a)</ref>.</p><p>We have also conducted experiments in Scenario 3 and 4, under real Internet settings with peers being spread around the US and virtual machines in a Virtual Lab <ref type="bibr" target="#b27">[26]</ref>, respectively.</p><p>(b) Figure <ref type="figure">4</ref>: Scenarios 1 and 2: (a) Propagation delays and uplink bandwidth constraints for each peer and link in our experimental testbed. (b) Multicast trees for three nodes (A, B, C) and one helper (D) from Section 2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Scenario 1: X-Traffic and Utility Changes</head><p>In the first experimental scenario we show how our system adapts to network dynamics (i.e., cross traffic) and utility changes. We have three peers A, B, C initialized with the same utility function, i.e., parameter βA = βB = βC . At time 200 seconds βB is increased by 50%. At time 400 seconds we start sending additional traffic of 200 kbps from peer B and stop at 600 seconds.</p><p>Fig. <ref type="figure" target="#fig_4">5</ref>(a) through 5(i) show the rates and total queuing delays for each tree in the system. As seen in Fig. <ref type="figure" target="#fig_4">5</ref>(a), peer A does not utilize its depth-1 direct tree, because it requires twice as much bandwidth of peer A compared to sending content through other peers and peer A has the lowest bandwidth capacity. Moreover, other peers are not utilizing trees in Fig. <ref type="figure" target="#fig_4">5</ref>(e) and 5(f) in order to avoid excessive congestion at peer A and to allow it to fully use its upload bandwidth for trees going through other peers (Fig. <ref type="figure" target="#fig_4">5(d</ref>) and 5)(g) to distribute A's video.</p><p>The sending rate of peer B starts to increase at time 200 seconds as its utility function becomes steeper, indicating the conference participant starts to introduce a large amount of motion in its video. Specifically, the rate of tree in Fig. <ref type="figure" target="#fig_4">5</ref>(h) increases at the expense of peer C (Fig. <ref type="figure" target="#fig_4">5(h</ref>)) which has lower utility. All peers are using peer C, the peer with the maximum bandwidth, as can be observed from Fig. <ref type="figure" target="#fig_4">5</ref>(g) and 5(h). The cross traffic at peer B initiated at 400th second causes a decrease in rates for trees in Fig. <ref type="figure" target="#fig_4">5(b</ref>) and 5(i) as peer A stops using congested peer B and peer B decreases utilization of the direct depth-1 tree. The system always quickly converges to one of the optimal solutions after network conditions or utility function changes (in less than 20 seconds), see Fig. <ref type="figure" target="#fig_4">5(m)</ref>).</p><p>In order to confirm the results of our distributed algorithm we run a Mosek <ref type="bibr" target="#b25">[24]</ref> program to solve the optimization problem in (3) using the same topology and utility functions. The optimal tree rates allocation generated by Mosek confirms our above observations and the optimal utility value is shown in Fig. <ref type="figure" target="#fig_4">5</ref>(m) and 5(o).</p><p>It takes 76ms on average to deliver a packet containing video from a sender to a receiver in Scenario 1 (with latencies between peers A -B, B -C and C -A, 18, 36, 22ms, respectively, described in Fig. <ref type="figure">4</ref>(a), and queuing delays from Fig. <ref type="figure" target="#fig_4">5</ref>). If we distributed the videos in a simulcast way the average delay would be 27ms but the maximum utility would not be possible to achieve. We see that the proposed algorithm incurs very little queueing delay in the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Scenario 2: Peer Joining and Helper</head><p>In the second experimental scenario (Fig. <ref type="figure" target="#fig_4">5</ref>(n)), the three peers are sending videos with various motion characteristics (βB = 0.9βA, βC = 1.2βA, βD = βA). A fourth peer (D) joins the group, first as a source&amp;receiver peer at time 200 seconds, and as a helper at time 400 seconds. When it becomes a helper, it is no longer generating its own video stream and is not interested in receiving the videos from other peers but it just helps forwarding the video content to them.</p><p>In this scenario we see that the system adapts the sending rates quickly to accommodate the new joining peer at time 200 seconds. Maximum utility is achieved within 30 seconds and note that the convergence rate can be controlled by the km parameter in <ref type="bibr">(7)</ref>. As each video has to be delivered to more peers, we see a drop in the total rates. The system adapts again as the peer becomes a helper at time 400 seconds, where the rates react to fully utilize the available bandwidth and maximize the utility function (Fig. <ref type="figure" target="#fig_4">5(o)</ref>). Note that with the helper, rate of each source monotonically increases and the converged utility is higher than the one without helper, i.e., before second 200 seconds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Scenario 3: Internet Experiment -3 Peers</head><p>In this scenario we run a short 2-minute 3-party conferencing over the Internet using 3 computers spread around the US. In this case, every peer will use 3 spanning trees to deliver its contents. Uplink bandwidth limits are 384 kbps for peer A, 256 kbps for peer B, and 128 kbps for peer C. The utility functions for all peers are set to be the same. The average round trip time between peers are: 79 ms between A and B, 40 ms between A and C, and 65 ms between B and C. Fig. <ref type="figure" target="#fig_5">6</ref> shows the source rates, tree rates and average tree branch delays for each peer. Fig. <ref type="figure" target="#fig_5">6</ref> also shows the utility achieved in the experiments as well as theoretical optimum. We use the same km for all the trees of a peer. As such, we use kA, kB and kC to denote the tree rates adaptation speeds for A, B, and C, respectively.</p><p>Seen from Fig. <ref type="figure" target="#fig_5">6</ref>(a), the source rate of A ramps up fastest among the three peers, this is because we set kA to be the largest among the three. Similarly, the source rate of C ramps up slowest since kC is the smallest among the three.</p><p>We observe that the queuing delay varies as the programs adjust the tree rates. We also observe from Fig. <ref type="figure" target="#fig_5">6</ref>(a) that the average tree branch delays for A, B and C are about 19 ms, 20 ms, and 45 ms, respectively. Shown in Section 4.5, the average packet delivery delay is approximately twice the sum of the average one way propagation delay and the average tree branch delay. Therefore, the average packet delivery times for A, B and C are about 91 ms, 105 ms, and 128 ms, respectively. These values are within the acceptable range for smooth conferencing experience.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Scenario 4: Scalability Study</head><p>The last scenario (Fig. <ref type="figure">7</ref>) shows a large conference with 10 peers successively joining. The conference starts with 3 peers and every 60 seconds a new peer joins. All 10 nodes have an uplink bandwidth of 384 kbps and they were run on virtual machines in a Virtual Lab <ref type="bibr" target="#b27">[26]</ref>.</p><p>Forming a large video-conference does not incur excessive overhead and costs to set-up and maintain the multicast trees. When a new peer joins a conference, all peers update their trees which is a very simple operation and the rate updating algorithm continuously changes the rates to achieve optimal use of all the available bandwidth (as described in Section 4). Note that all the necessary information can be easily spread throughout the system by appending it to any video packet as it is delivered to all peers.</p><p>During peer joins we can observe a peak in the queuing delay (see a detail in Fig. <ref type="figure">7(b)</ref>). This is due to the necessity to immediately deliver all video streams to the new peer and the trees react by reducing their rates. After few seconds the rates increase as the new peer helps to distribute the videos through newly created trees. The peaks can be avoided by reducing the tree rates when new peer joins, proportionally to the number of tree branches before and after, which will also remove the drops in utility graph (Fig. <ref type="figure">7(a)</ref>) and speed up the convergence. We disabled this feature to show the natural reactions of the system. The computational costs for updating tree rates and memory requirements are negligible. Peers only keep track of the last few queuing delay measurements for each other peer's uplink and compute the running averages over them. However, the rates decrease in general as peers join because there is a need to deliver each peer's video stream to more peers and new streams of the newly added peers further increase this demand, but the new peers provide only a small amount of newly available bandwidth for the system to use. This is a scalability issue and you can observe from the graph that to run a large video conference peers need to have sufficient bandwidth or they would suffer from low video bitrates otherwise. A nice property of our scheme is that helper servers with an extensive bandwidth capacity can be easily accommodated to help in a large conference and we can control their use and the associated costs  (Section 4.4). The multi-party video conferencing use case is inherently intended for a small number of peers, unlike other P2P streaming applications, and is limited by the fact that adding a new peer brings a burden of both delivering all previous video streams to a new destination and also delivering a new stream to all previous peers. The significant advantage of using our scheme is that it combines common video delivery schemes (direct, helper server assisted and peer assisted delivery) into one framework and uses them in an optimal way. With more peers both the delays and rates exhibit more oscillations and the delays increase as there are more nodes and trees involved but still stay reasonably small. The oscillations in Fig. <ref type="figure">7</ref>(c) grow with the number of trees because the graphs show the aggregated rates of many trees and all the tree rates behave according to the same queuing delay measurements for the uplinks of peers. The measurements are correlated (see Fig. <ref type="figure">7(b)</ref>) and thus the noise amplitude increases. We can also see that the utility achieved is optimal even though for 10 peers the oscillations are too big to let the rates stay at the optimum as our system tries to keep queuing delays low. Note also that we can temporarily exceed the optimum utility in the plot 7(a) because our methodology of computing utility is based on sending rates which can temporarily exceed the bandwidth limits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION AND FUTURE WORK</head><p>We investigate the multi-source multicast utility maximization problem in P2P systems. The nature of P2P topologies allows us to tackle difficulties arising in the general network case in a surprisingly elegant manner. We show that routing along a linear number of trees per source can achieve the same rate region as that obtained through (inter-session) network coding. We develop a new multi-tree routing formulation for the multicast utility maximization problem. It not only eliminates some mathematical difficulties associated with previous formulations, but also leads to practical solutions. We further develop a Primal-dual distributed algorithm to maximize the aggregate utility. We propose a sufficient condition to evaluate convergence of the Primaldual algorithm in multi-path routing scenarios, and prove its global exponential convergence under different P2P scenarios we studied. Our approach naturally accommodates helper nodes within the optimization framework. The developed algorithms are practical and easy to implement in a P2P overlay over the current Internet. Experimental results over both testbed and the Internet show that our solution converges quickly to the optimal utility, and re-optimizes itself after network conditions or utility function change. It is also resilient to peer nodes joining and leaving over time. Its scalability is also studied.</p><p>We are investigating the scalability of our solution in large P2P systems. The scalability of our current solution is limited by the fact that branching out-degree of multicast trees used is linear in the number of receivers. Another area of future work would be to consider multirate multicast where different receivers can receive the same video at different rates through the use of scalable coding or transcoding.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: (a) Butterfly network with unit link capacities. (b) Network coding can achieve a multicast rate of 2. (c) Routing can achieve a multicast rate of 1.If network coding is allowed, then the single source multicast rate region can be achieved for arbitrary topology by solving the routing and coding problems separately, each being of polynomial complexity<ref type="bibr" target="#b12">[11]</ref>. For example, as seen in Fig.1.(b), by performing XOR operation in the Steiner nodes in the Butterfly network, we can achieve the maximum achievable multicast rate 2.The achievable rate region for multi-source multicast scenarios was recently implicitly characterized in<ref type="bibr" target="#b30">[29]</ref>, but currently no scheme is known to achieve it. It is believed that information from different multicast groups should be coded in a nonlinear fashion in order to achieve the rate region (inter-session coding). However, doing such mixing and coding is complex and largely open.Regardless of its power, network coding is not quite practical in today's P2P applications. It cannot be used in the Internet routing layer because it requires changes in all routers (for encoding) and end-hosts (for decoding). If deployed in the overlay (P2P layer), it will introduce new complexity in end-host software (for encoding and decoding) and additional delays in video delivery. A practical way to explore the achievable rate region is by routing. Each source s packs directed Steiner trees rooted at s and reaching all receivers</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Different types of Mutualcast trees.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The logarithmic approximation of PSNR curves of Akiyo, Foreman and Tennis sequence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Scenario 1 -(a) through (i): Sending rates and total delays for trees with edges and topology shown in Fig. 4(a). (j) through (l): Coding rates of each video nodes A, B, and C are sending. (m) Utility value achieved compared to the optimum. Scenario 2 -(n) and (o): Coding rates and utility values.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Experimental results for Scenario 3: (a) Source rates of A, B, and C, respectively, with the average tree branch delays. (b) Tree rates for trees of A, B and C, respectively, with the tree branch delays. (c) The aggregate utility achieved by the system, and the utilities per source.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Comparisons of approaches to achieve multicast rate region</figDesc><table><row><cell></cell><cell>single source</cell><cell>single source</cell><cell>multi-source</cell><cell>multi-source</cell><cell>complexity</cell></row><row><cell></cell><cell>multicast</cell><cell>multicast</cell><cell>multicast</cell><cell>multicast</cell><cell></cell></row><row><cell></cell><cell cols="4">(P2P topology) (general topology) (P2P topology) (general topology)</cell><cell></cell></row><row><cell>network coding</cell><cell>optimal</cell><cell>optimal</cell><cell>? (open)</cell><cell>? (open)</cell><cell>polynomial</cell></row><row><cell>packing</cell><cell>optimal</cell><cell>suboptimal</cell><cell>optimal in</cell><cell>suboptimal</cell><cell>N P-hard in general,</cell></row><row><cell>Steiner trees</cell><cell></cell><cell></cell><cell>certain cases</cell><cell></cell><cell>polynomial in P2P</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The audio stream rate is constant and typically small compared to the video stream rate. In practice, audio streams are transmitted to a Media Control Unit (MCU) and delivered to peers by this central server. As such, only transmission of video streams needs to be considered.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Network information flow</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ahlswede</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-Y</forename><forename type="middle">R</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Yeung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1204" to="1216" />
			<date type="published" when="2000-07">July 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Nonlinear Programming</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">D</forename><surname>Bertsimas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note>Introduction to Linear Optimization</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">TCP Vegas: end-to-end congestion avoidance on a global internet</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Brakmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Peterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Select. Areas Commun</title>
		<imprint>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1465" to="1480" />
			<date type="published" when="1995-10">Oct. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Optimization based rate control for multi-cast with network coding</title>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Doyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM<address><addrLine>Anchorage, Alaska</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Utility Maximization in Peer-to-Peer Systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ponec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sengupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Chou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-08">August 2007</date>
			<publisher>Microsoft Research Technical Report</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Layering as optimization decomposition:a mathematical theory of network architectures</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Calderbank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Doyle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-01">Jan. 2007</date>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="page" from="255" to="312" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Congestion control for fair resource allocation in networks with multicast flows</title>
		<author>
			<persName><forename type="first">S</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="274" to="285" />
			<date type="published" when="2004-04">Apr. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The aggregate utility achieved by the system. (b) A detailed view on tree rates and delays of peer M 1</title>
	</analytic>
	<monogr>
		<title level="m">Source rates of individual peers M 1 through M 10 and the average tree branch delays</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Edge-disjoint branchings. Combinatorial Algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Edmonds</surname></persName>
		</author>
		<editor>R. Rustin</editor>
		<imprint>
			<date type="published" when="1973">1973</date>
			<biblScope unit="page" from="91" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multi-path TCP: A joint congestion control and routing scheme to exploit path diversity in the internet</title>
		<author>
			<persName><forename type="first">H</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shakkottai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hollot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Polynomial time algorithms for multicast network code construction</title>
		<author>
			<persName><forename type="first">S</forename><surname>Jaggi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sanders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Effros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Egner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tolhiuzen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Info. Thy</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1973" to="1982" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Packing steiner trees</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mahdian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Salavatipour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th ACM-SIAM Symp. on Discrete Algorithms (SODA)</title>
		<imprint>
			<date type="published" when="2003-01">Jan. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The h.264 video coding standard</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kalva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Multimedia</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Optimization based rate control for multirate multicast sessions</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<meeting><address><addrLine>Anchorage, Alaska</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-04">Apr. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fairness and stability of end-to-end congestion control</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Kelly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Control</title>
		<imprint>
			<biblScope unit="page" from="159" to="176" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Rate control for communication networks: shadow prices, proportional fairness, and stability</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Kelly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Maulloo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Operational Research Society</title>
		<imprint>
			<biblScope unit="page" from="237" to="252" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Mutualcast: an efficient mechanism for content distribution in a p2p network</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Acm Sigcomm Asia Workshop</title>
		<meeting>Acm Sigcomm Asia Workshop<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-04">Apr. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Utility maximization for communication networks with multi-path routing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Shroff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Automat. Contr</title>
		<imprint>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="766" to="781" />
			<date type="published" when="2006-05">May 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Subjective quality evaluation of decoded video in the presence of packet losses</title>
		<author>
			<persName><forename type="first">T</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Boyce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)</title>
		<imprint>
			<date type="published" when="2007-04">April 2007</date>
			<biblScope unit="page" from="1125" to="1128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Optimization flow control, i: Basic algorithm and convergence</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Lapsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="861" to="875" />
			<date type="published" when="1999-12">Dec. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Understanding vegas: A duality model</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Low</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of ACM</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="207" to="235" />
			<date type="published" when="2002-03">Mar. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Minimum-cost multicast over coded packet networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Lun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ratnakar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Koetter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2608" to="2623" />
			<date type="published" when="2006-06">June 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fair end-to-end window-based congestion control</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Walrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="556" to="567" />
			<date type="published" when="2001-10">Oct. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title/>
		<author>
			<persName><surname>Mosek Aps</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MOSEK Optimization Software</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Network Emulator for Windows/CE</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ni</surname></persName>
		</author>
		<imprint>
			<publisher>Microsoft Research Asia</publisher>
		</imprint>
	</monogr>
	<note>Internal documentation</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Design of a virtual laboratory for information assurance education and research</title>
		<author>
			<persName><forename type="first">V</forename><surname>Padman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Memon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 IEEE Workshop on Information Assurance and Security</title>
		<meeting>the 2002 IEEE Workshop on Information Assurance and Security<address><addrLine>West Point, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Stability of Congestion Control Algorithms with Multi-Path Routing and Linear Stochastic Modelling of Congestion Control</title>
		<author>
			<persName><forename type="first">T</forename><surname>Voice</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-05">May 2006</date>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Cambridge</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Distributed utility maximization for network coding based multicasting: a shortest path approach</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-Y</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Select. Areas Commun</title>
		<imprint>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1475" to="1488" />
			<date type="published" when="2006-08">Aug. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The capacity region for multi-source multi-sink network coding</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Yeung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2007 IEEE International Symposium on Information Theory (ISIT2007)</title>
		<meeting><address><addrLine>Nice, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-06">June 2007</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
