<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Control Barrier Function based Quadratic Programs with Application to Bipedal Robotic Walking</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Shao-Chen</forename><surname>Hsu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mechanical Engineering</orgName>
								<orgName type="institution" key="instit1">Shao-Chen Hsu and Aaron D. Ames</orgName>
								<orgName type="institution" key="instit2">Texas A&amp;M University</orgName>
								<address>
									<settlement>College Station</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Xiangru</forename><surname>Xu</surname></persName>
							<email>xuxiangr@umich.edu</email>
						</author>
						<author>
							<persName><forename type="first">Aaron</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
							<email>aames@tamu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Mechanical Engineering</orgName>
								<orgName type="institution" key="instit1">Shao-Chen Hsu and Aaron D. Ames</orgName>
								<orgName type="institution" key="instit2">Texas A&amp;M University</orgName>
								<address>
									<settlement>College Station</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of Michigan</orgName>
								<address>
									<settlement>Ann Arbor</settlement>
									<region>MI</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<addrLine>2015 American Control Conference Palmer House Hilton July 1-3</addrLine>
									<postCode>2015</postCode>
									<settlement>Chicago</settlement>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Control Barrier Function based Quadratic Programs with Application to Bipedal Robotic Walking</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">059224FAC6FAF0B263AA285F99A72C62</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a methodology for the development of control barrier functions (CBFs) through a backstepping inspired approach. Given a set defined as the superlevel set of a function, h, the main result is a constructive means for generating control barrier functions that guarantee forward invariance of this set. In particular, if the function defining the set has relative degree n, an iterative methodology utilizing higher order derivatives of h provably results in a control barrier function that can be explicitly derived. To demonstrate these formal results, they are applied in the context of bipedal robotic walking. Physical constraints, e.g., joint limits, are represented by control barrier functions and unified with control objectives expressed through control Lyapunov functions (CLFs) via quadratic program (QP) based controllers. The end result is the generation of stable walking satisfying physical realizability constraints for a model of the bipedal robot AMBER2.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Humans can perform many difficult dynamic behaviors with ease, including: crawling, climbing and -of special focus in this paper -walking. The core of performing these tasks is the ability to satisfy structural and physical constraints while simultaneously realizing dynamics based control objectives. Realizing this balance between safety constraints and control objectives in the context of dynamic behaviors has yet to be fully realized on robotic systems. A core issue preventing this is the unification of safety and control objectives in a single unified framework-one that can be solved online in real-time, i.e., does not require a priori optimization, while still yielding formal guarantees of correctness. The goal of this paper is to present a methodology for realizing physical constraints on robotic systems through control barrier functions, and balancing these constraints through control objectives represented as control Lyapunov functions expressed through a unified quadratic program based control methodology. The application of these ideas to robotic walking will demonstrate their affectiveness in ensuring physical constraints during dynamic behaviors.</p><p>Barrier functions, first utilized in numerical optimization methods <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b22">[23]</ref>, are continuous functions whose values approach infinity when the state approaches the boundary of a set. For instance, given a set C, B(x) is a barrier function, if B(x) → ∞ as x → ∂C. The concept recently has been related to control Lyapunov functions for the purposes of constructing nonlinear controllers <ref type="bibr" target="#b21">[22]</ref>. In particular, Lyapunov-like barrier functions have been established; that is, employing derivatives of barrier functions guarantees the invariance of set C, e.g. Ḃ(x, u) &lt; 0 <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b18">[19]</ref>. With a view towards expanding the class of control inputs that imply set invariance, recent work has focused on a new class of barrier functions that ensure set invariance while yielding a larger set of control inputs <ref type="bibr" target="#b3">[4]</ref>. In particular, if C is the superlevel set of a function h(x), there is the corresponding barrier function candidate:</p><formula xml:id="formula_0">B(x) = -log h(x) 1 + h(x)<label>(1)</label></formula><p>which is a valid barrier function if it satisfies the condition:</p><formula xml:id="formula_1">Ḃ(x, u) &lt; γ B(x)<label>(2)</label></formula><p>for γ ≥ 0. Importantly, this allows B(x) to grow when it is far away from the boundary of C while still provably yielding set invariance <ref type="bibr" target="#b3">[4]</ref>. Necessary to B(x) being a valid barrier is its satisfaction of ( <ref type="formula" target="#formula_1">2</ref>); yet there may not exist control inputs that satisfy this condition (for example, if the relative degree <ref type="bibr" target="#b10">[11]</ref> of h is ≥ 2). The objective of this paper is to provide quantifiable conditions for the existence of such control inputs through the use of relative degree conditions on h coupled with backstepping inspired methodology. Motivated by the use of backstepping methods for Lyapunov functions, as first developed by Kokotović <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b13">[14]</ref>, the main result of this paper is a methodology for constructing barrier functions that are guaranteed to satisfy the condition <ref type="bibr" target="#b1">(2)</ref>. Beginning with a barrier function candidate of the form (1) and assuming that the function h that defines the set C has relative degree n, we are able to expand the barrier function candidate through "virtual" inputs that satisfy (2) and, through iteration on these virtual inputs, ultimately yield the "true" control input that satisfies <ref type="bibr" target="#b1">(2)</ref>. The end result is a barrier function, dependent on h and its higher order derivatives, that provably satisfies the barrier function conditions. This is formally established through the main result of the paper.</p><p>To apply the main result of the paper to bipedal robotic walking, it is necessary to unify control barrier functions (CBFs)-which encode safety and physical constraintswith control objectives necessary to achieve locomotion as encoded by control Lyapunov functions. Control Lyapunov functions (CLFs), as pioneered by Artstein and Sontag <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b19">[20]</ref>, have been widely used in nonlinear control <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b7">[8]</ref>. In the context of bipedal robotic locomotion, control Lyapunov functions have been utilized in the context of quadratic programs (QPs) to balance control objectives with torque based constraints, with the results being applied experimentally <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b8">[9]</ref>. This sets the stage for the main application of the results of this paper: as motivated by <ref type="bibr" target="#b3">[4]</ref>, a CBF-CLF QP is introduced in the context of bipedal locomotion that ensures safety through control barrier functions and control objectives expressed as control Lyapunov functions. This formulation is applied to a hybrid system model of the bipedal robot AMBER2, with the end result being stable walking in simulation that satisfies physical constraints encoded as control barrier functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. CONTROL BARRIER FUNCTIONS VIA BACKSTEPPING INSPIRED METHODS</head><p>This section develops and presents the main formal results of the paper: a backstepping inspired methodology for constructing control barrier functions (CBFs). We begin by introducing the form of barrier functions considered in this paper, as introduced in <ref type="bibr" target="#b3">[4]</ref>, defined for a set C that is the super level set of a function h(x). Motivated by the use of backstepping in generating Lyapunov functions <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b12">[13]</ref>, we assume that h has relative degree n and utilize the higher order derivative of h to iteratively construct valid control barrier functions. The end product of this procedure yields the main result of this paper: a formal guarantee that the resulting control barrier function is valid, i.e., that control inputs exist that satisfy the barrier function condition <ref type="bibr" target="#b1">(2)</ref>. With a view toward the application of this method to robotic walking, we conclude this section by briefly reviewing control Lyapunov functions (CLFs), and the unification of CLFs and CBFs through quadratic program (QP) based controllers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Control Barrier Functions</head><p>Consider an affine control system:</p><formula xml:id="formula_2">ẋ = f (x) + g(x)u,<label>(3)</label></formula><p>for x ∈ R n and u ∈ U = R m with f and g assumed to be locally Lipschitz. Given a set C ⊂ R n , we determine conditions on functions B : C → R such that solutions to (3), with initial condition in C, remain in C for all time. First, since (3) is assumed to be locally Lipschitz for any initial condition x 0 ∈ R n , there exists a maximum time interval I(x 0 ) = [0, τ max ) such that x(t) is the unique solution to (3) on I(x 0 ); in the case when f is forward complete, τ max = ∞. The set C is forward invariant if for every x ∈ C, x(t) ∈ C for all t ∈ I(x).</p><p>Consider the set C defined by</p><formula xml:id="formula_3">C = {x ∈ R n : h(x) ≥ 0}, (<label>4</label></formula><formula xml:id="formula_4">) ∂C = {x ∈ R n : h(x) = 0},<label>(5)</label></formula><formula xml:id="formula_5">Int(C) = {x ∈ R n : h(x) &gt; 0}.<label>(6)</label></formula><p>where h : R n → R is a continuously differentiable function. With a view toward ensuring forward invariance of C, we consider the following definition <ref type="bibr" target="#b3">[4]</ref>:</p><formula xml:id="formula_6">Definition 1. Let C ⊂ R n be defined by (4)-(6) with h : R n → R continuously differentiable, then a function B : C → R is a control barrier function (CBF) if there exist class K functions α 1 , α 2 and a constant γ &gt; 0 such that 1 α 1 (h(x)) ≤ B(x) ≤ 1 α 2 (h(x)) ,<label>(7)</label></formula><formula xml:id="formula_7">inf u∈U [L f B(x) + L g B(x)u - γ B(x) ] ≤ 0.<label>(8)</label></formula><p>Using the definition of a CBF, we can consider the set consisting of all control inputs that guarantee the forward invariance of set C:</p><formula xml:id="formula_8">K B (x) = {u ∈ U : L f B(x) + L g B(x)u - γ B(x) ≤ 0}.</formula><p>This yields the following result from <ref type="bibr" target="#b3">[4]</ref>:</p><p>Theorem 1. Given a set C ⊂ R n defined by ( <ref type="formula" target="#formula_3">4</ref>)-( <ref type="formula" target="#formula_5">6</ref>) with associated control barrier function B, any Lipschitz continuous controller u(x) ∈ K B (x) for the system (3) renders the set C forward invariant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Main Result: CBFs via Backstepping</head><p>The main observation that motivates our result is: K B (x) may be empty when L g B = 0. More specifically, if h(x) has relative degree greater than 1, then</p><formula xml:id="formula_9">L g B = 0; if furthermore L f B(x) ≥ γ B(x) , then K B (x)</formula><p>is empty and therefore no control can make (8) satisfied. However, physical constraints on robotic systems, as represented by sets C, will be guaranteed to have relative degree greater than 1 if the constraints only depend on the configuration of the robot. As a result, it is necessary to find a methodology for dealing with this situation. Motivated by <ref type="bibr" target="#b20">[21]</ref>, we introduce a backstepping inspired methodology for the form of control barrier functions considered in this paper. <ref type="foot" target="#foot_0">1</ref> The control barrier functions calculated through our methods render the C forward invariant when h(x) has a relative degree great than 1.</p><p>To make the inputs appear in derivatives of the control barrier function, h(x) will be utilized in the context of dynamic extension. Suppose h(x) has (vector) relative degree 2, wherein it follows that: :</p><formula xml:id="formula_10">φ 1 (x) = h(x), (9) φ1 (x) = φ 2 (x), (<label>10</label></formula><formula xml:id="formula_11">) φ2 (x, ẋ) = L f L f h(x) + L g L f h(x)u,<label>(11)</label></formula><p>and a set C is defined by ( <ref type="formula" target="#formula_3">4</ref>)- <ref type="bibr" target="#b5">(6)</ref>. We can pick a function B 1 (x) so that B 1 (x) satisfies the inequality</p><formula xml:id="formula_12">1 α 1,1 (h(x)) ≤ B 1 (x) ≤ 1 α 1,2 (h(x)) ,<label>(12)</label></formula><p>where α 1,1 and α 1,2 are class K functions. Note that an example of such a candidate is given by</p><formula xml:id="formula_13">B 1 (x) = -log h(x) 1 + h(x) .<label>(13)</label></formula><p>In addition, let h 1 (x) = φ 2 (x) -ξ 1 , where ξ 1 is a stabilizing function we have to design. The time derivative of B 1 (x) is thus given by:</p><formula xml:id="formula_14">Ḃ1 = dB 1 (x) dh ḣ = dB 1 (x) dh φ 2 = dB 1 (x) dh (h 1 (x) + ξ 1 ).</formula><p>Picking ξ 1 = 0 results in:</p><formula xml:id="formula_15">Ḃ1 = dB 1 (x) dh h 1 (x) = dB 1 (x) dh ḣ.</formula><p>Motivated by the backingstepping method for Lyapunov functions <ref type="bibr" target="#b11">[12]</ref>, we can define a control barrier function candidate with ḣ:</p><formula xml:id="formula_16">B 2 (x) := B 1 (x) + E( ḣ(x)),<label>(14)</label></formula><p>where E( ḣ(x)) has the following properties:</p><formula xml:id="formula_17">inf x∈Int(C) E( ḣ(x)) ≥ 0,<label>(15)</label></formula><p>sup</p><formula xml:id="formula_18">x∈Int(C) E( ḣ(x)) ≤ E max ,<label>(16)</label></formula><formula xml:id="formula_19">dE( ḣ(x)) d ḣ(x) = 0 if and only if ḣ(x) = 0,<label>(17)</label></formula><p>where E max is a positive constant depending on the choice of E( ḣ(x)). An concrete example of a function satisfying this properties is given by:</p><formula xml:id="formula_20">E( ḣ(x)) = a E b E ḣ(x) 2 1 + b E ḣ(x) 2<label>(18)</label></formula><p>where a E and b E are the positive parameters that can be chosen. These allow us to state the main result of the paper.</p><p>Theorem 2. Given a set C ⊂ R n defined by (4)-( <ref type="formula" target="#formula_5">6</ref>), if h(x) has relative degree 2, then B 2 (x) given in ( <ref type="formula" target="#formula_16">14</ref>) is a control barrier function and any Lipschitz continuous controller u(x) ∈ K B2 (x) renders the set C forward invariant.</p><p>Before proving the theorem, the following Lemma must be established.</p><formula xml:id="formula_21">Lemma 3. Given a set C ⊂ R n defined by (4)-(6), if a function B(x) : C → R for a continuously differentiable function h(x) : R n → R satisfies the following conditions: inf x∈Int(C) B(x) ≥ 0, lim x→∂C B(x) = ∞,</formula><p>and B(x) → ∞ if and only if x → ∂C, then there exist class K functions α 1 , α 2 such that</p><formula xml:id="formula_22">1 α 1 (h(x)) ≤ B(x) ≤ 1 α 2 (h(x))</formula><p>.</p><p>Proof. Taking the reciprocal of B(x), we have</p><formula xml:id="formula_23">inf x∈Int(C) 1 B(x) ≥ 0, lim x→∂C 1 B(x) = 0.</formula><p>Define a function ψ(s) as</p><formula xml:id="formula_24">ψ(s) = inf {x|s≤h(x)} 1 B(x)</formula><p>, ∀s ≥ 0.</p><p>Because 1 B(x) approaches zero if and only if h(x) is close to zero, the function ψ(s) is continuous, positive definite, and increasing but not necessarily strictly increasing. Therefore, a class K function α 2 (s) can be established such that α 2 (s) ≤ ψ(s), that is,</p><formula xml:id="formula_25">1 B(x) ≥ ψ(h(x)) ≥ α 2 (h(x)).<label>(19)</label></formula><p>Similarly, define a function φ(s) by</p><formula xml:id="formula_26">φ(s) = sup {x|0≤h(x)≤s} 1 B(x)</formula><p>, ∀s ≥ 0.</p><p>The function φ(s) thus is continuous, positive definite and increasing but not necessarily strictly increasing. Therefore, a class K function α 1 (s) can be established such that α 1 (s) ≥ φ(s), that is,</p><formula xml:id="formula_27">1 B(x) ≤ φ(h(x)) ≤ α 1 (h(x)). (<label>20</label></formula><formula xml:id="formula_28">)</formula><p>Taking the reciprocals of ( <ref type="formula" target="#formula_25">19</ref>) and ( <ref type="formula" target="#formula_27">20</ref>) we have</p><formula xml:id="formula_29">1 α 1 (h(x)) ≤ B(x) ≤ 1 α 2 (h(x))</formula><p>.</p><p>Now, we can apply this Lemma to the proof of Theorem 2.</p><p>Proof. By assumption, and specifically <ref type="bibr" target="#b11">(12)</ref>, B 1 has the properties</p><formula xml:id="formula_30">inf x∈Int(C) B 1 (x) ≥ 0, lim x→∂C B 1 (x) = ∞.</formula><p>By <ref type="bibr" target="#b13">(14)</ref>, we know that</p><formula xml:id="formula_31">inf x∈Int(C) B 2 (x) ≥ 0, lim x→∂C B 2 (x) = ∞,</formula><p>because E( ḣ) is always positive and bounded. It is also known that B 2 (x) → ∞ if and only if x → ∂C, so B 2 satisfies the following condition by Lemma 3:</p><formula xml:id="formula_32">1 α 2,1 (h(x)) ≤ B 2 (x) ≤ 1 α 2,2 (h(x)) ,<label>(21)</label></formula><p>where α 2,1 and α 2,2 are class K functions, which implies that ( <ref type="formula" target="#formula_6">7</ref>) is satisfied.</p><p>To establish <ref type="bibr" target="#b7">(8)</ref>, taking the time derivative of B 2 yields:</p><formula xml:id="formula_33">Ḃ2 = Ḃ1 + dE( ḣ) d ḣ ḧ = dB 1 (x) dh ḣ + dE( ḣ) d ḣ (L f L f h(x) + L g L f h(x)u).</formula><p>Therefore, (8) yields the following condition:</p><formula xml:id="formula_34">dB 1 (x) dh ḣ + dE( ḣ) d ḣ (L f L f h(x) + L g L f h(x)u) ≤ γ B 2 (x) .<label>(22)</label></formula><p>If dE( ḣ) d ḣ = 0, then ḣ = 0 and thus the left hand side of (22) equals to 0, which means that <ref type="bibr" target="#b21">(22)</ref> holds. If dE( ḣ) d ḣ = 0, rearranging <ref type="bibr" target="#b21">(22)</ref>, we obtain the final inequality constraint:</p><formula xml:id="formula_35">u ≤ 1 dE( ḣ) d ḣ L g L f h(x) γ B 2 (x) - dB 1 (x) dh ḣ - L f L f h(x) L g L f h(x) ,<label>(23)</label></formula><formula xml:id="formula_36">if dE( ḣ) d ḣ L g L f h(x) &gt; 0, and u ≥ 1 dE( ḣ) d ḣ L g L f h(x) γ B 2 (x) - dB 1 (x) dh ḣ - L f L f h(x) L g L f h(x) ,<label>(24)</label></formula><formula xml:id="formula_37">if dE( ḣ) d ḣ L g L f h(x) &lt; 0, where L g L f h(x)</formula><p>is non-singular because of the assumption that h(x) has relative degree 2. As a result, an input u satisfying ( <ref type="formula" target="#formula_35">23</ref>) and ( <ref type="formula" target="#formula_36">24</ref>) are guaranteed to exist. According to Definition 1, B 2 is a control barrier function because ( <ref type="formula" target="#formula_32">21</ref>) and ( <ref type="formula" target="#formula_34">22</ref>) hold. Finally, from Theorem 1, any Lipschitz continuous control input u satisfying <ref type="bibr" target="#b21">(22)</ref> renders the set C forward invariant.</p><p>Having established Theorem 2, the method can be extended to the case where h(x) has relative degree n where n ≥ 2. Consider the coordinates:</p><formula xml:id="formula_38">φ 1 (x) = h(x), φ1 (x) = φ 2 (x), φ2 (x) = φ 3 (x),<label>(25)</label></formula><formula xml:id="formula_39">. . . φn (x, ẋ) = L n f h(x) + L g L n-1 f h(x)u,</formula><p>Following the backstepping methodology, and motivated by the control barrier function considered in <ref type="bibr" target="#b13">(14)</ref>, define the following control barrier function candidate:</p><formula xml:id="formula_40">B n (x) = B 1 (x) + n-1 i=1 E i (h i ),<label>(26)</label></formula><p>where</p><formula xml:id="formula_41">h i = φ i+1 -ξ i , ξ 1 = 0, ξ 2 = -1 dE 1 dh 1 dB1 dh h 1 , ξ i = ξi-1 -1 dE i-1 dh i-1 dEi-2</formula><p>dhi-2 h i-1 and E i (h i ) has the properties given in ( <ref type="formula" target="#formula_17">15</ref>) - <ref type="bibr" target="#b16">(17)</ref>.</p><p>The derivative of B n (x) thus can be calculated as</p><formula xml:id="formula_42">Ḃn (x) = dE n-2 dh n-2 h n-1 + dE n-1 dh n-1 L n f h(x) + L g L n-1 f h(x)u -ξn-1 .</formula><p>It is easy to check that the above equation still holds if dEi dhi = 0 for any 1 ≤ i ≤ n -1. Finally, if dEn-1 dhn-1 = 0, then Ḃn (x) = 0, which is guaranteed to be smaller than γ Bn(x) ; if dEn-1</p><p>dhn-1 = 0, the control law can be determined through the inequality:</p><formula xml:id="formula_43">u ≤ 1 dEn-1 dhn-1 L g L n-1 f h(x) γ B n (x) - dE n-2 dh n-2 h n-1 - L n f h(x) -ξn-1 L g L n-1 f h(x) , if dEn-1 dhn-1 L g L n-1 f h(x) &gt; 0, and u ≥ 1 dEn-1 dhn-1 L g L n-1 f h(x) γ B n (x) - dE n-2 dh n-2 h n-1 - L n f h(x) -ξn-1 L g L n-1 f h(x) , if dEn-1 dhn-1 L g L n-1 f h(x) &lt; 0, where L g L n-1 f h(x)</formula><p>is nonsingular because h(x) has relative degree n by assumption. Therefore, u is guaranteed to exist.</p><p>Using the same argument as in Theorem 2, it is easy to show that for a relative degree n output h(x), the function B n (x) defined by ( <ref type="formula" target="#formula_40">26</ref>) is a CBF. This is summarized in the following theorem.</p><p>Theorem 4. Given a set C ⊂ R n defined by (4)-( <ref type="formula" target="#formula_5">6</ref>), if h(x) has relative degree n, then B n (x) as given in (26) is a control barrier function and any Lipschitz continuous controller u(x) ∈ K Bn (x) renders the set C forward invariant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Control Lyapunov Functions</head><p>Consider the affine nonlinear control system (3) where it is assumed that f (0) = 0. To achieve exponential stability of x to 0, we utilize a special class of control Lyapunov functions V (x) termed rapidly exponentially stabilizing control Lyapunov function (RES-CLF) <ref type="bibr" target="#b2">[3]</ref>. This yields the set of control inputs that exponentially stabilizes the system (3):</p><formula xml:id="formula_44">K ε (x) = {u ∈ U : L f V ε (x) + L g V ε (x)u + c 3 V ε (x) ≤ 0}.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Combining CLFs and CBFs via QPs</head><p>To unify CLFs and CBFs, we can formulate a QP as</p><formula xml:id="formula_45">u * (x) = argmin u=   u δ   ∈R m+1 1 2 u T H(x)u + F (x) T u (27) s.t. ψ 0 (x) + ψ T 1 (x)u ≤ δ, (CLF) L f B(x) + L g B(x)u ≤ γ B(x) ,<label>(CBF)</label></formula><p>where</p><formula xml:id="formula_46">ψ 0 (x) = L f V (x) + c 3 V (x), ψ 1 (x) = L g V (x) T , H(x) ∈ R m+1×m+1</formula><p>and F (x) ∈ R m+1 are arbitrarily smooth cost functions that can be chosen based upon desired (state based) weighting of the control inputs, and δ ∈ R is a relaxation of the CLF constraint, which can be chosen to guarantee a feasible solution to the QP. Coupling the results from <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b17">[18]</ref> and Theorem 4, we have the following theorem.</p><p>Theorem 5. Given a set C ⊆ R n defined by ( <ref type="formula" target="#formula_3">4</ref>)-( <ref type="formula" target="#formula_5">6</ref>) with h relative degree n and B = B n an associated control barrier function given in (26), any Lipschitz continuous control law u * (x) obtained by solving the QP (27) renders the set C forward invariant.</p><p>In practice, if x ∈ Int(C) are far away from the boundary, ∂C, the control objective (as represented by the CLF) will be achieved exponentially; otherwise, it will be violated depending on how x close to ∂C (as dictated by the CBF).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. ROBOTIC MODELING AND CONTROL</head><p>The main goal of this paper is to apply control barrier functions to the control of bipedal walking robots. In this section, based on the mathematical model of the 7-link bipedal robot, AMBER2 <ref type="bibr" target="#b16">[17]</ref>, we review the construction of output functions that are utilized to formulate control Lyapunov functions. Then, we present a multi-objective QP based controller representing a combination of control objectives, torque and forced based constraints. This will set the stage for the utilization of control barrier functions in the context of bipedal robotic locomotion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Bipedal Robot Model</head><p>Given the mass and inertia of the links and motors of AMBER2, the Euler-Lagrange equations yield the equations of motion, which can be converted to an affine control system of the form given in (3) (see <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b16">[17]</ref>). The discrete dynamics of AMBER2 describes the change of the states, i.e. the angles and angular velocities, after the non-stance foot impacts the ground. The end result is a hybrid system model of this system; additional details can be found in <ref type="bibr" target="#b0">[1]</ref> and <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Output Design</head><p>To construct control Lyapunov functions, we will utilize the framework of human-inspired control <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b14">[15]</ref>. In particular, the end results of this method are relative 1 and 2 degree outputs of the form (see <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b16">[17]</ref> for additional details):</p><formula xml:id="formula_47">y 1 (q, q, v hip ) = y a,1 (q, q) -v hip ,<label>(28)</label></formula><formula xml:id="formula_48">y 2 (q, α) = y a,2 (q) -y d,2 (τ (q), α),<label>(29)</label></formula><p>where y a,1 (q, q) and y a,2 (q) are the "actual" outputs, and y d,2 (τ (q), α) is the "desired" output. It is important to note that the parameters α of y d,2 are typically chosen through nonlinear optimization methods to yield hybrid zero dynamics and, thereby, guarantee a stable walking gait <ref type="bibr" target="#b9">[10]</ref>.</p><p>In this paper, we will instead choose α to be parameters obtained directly from human data <ref type="bibr" target="#b1">[2]</ref> and utilize control barrier functions to achieve robotic walking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Control Lyapunov Functions and Quadratic Programs</head><p>With the goal of driving y 1 → 0 and y 2 → 0, utilizing the methods from <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b4">[5]</ref>, the end result is a QP that unifies control objectives (CLFs), torque bounds, friction and Zero Moment Point (ZMP) constraints:</p><formula xml:id="formula_49">argmin (δ,ū)∈R 11 δ T pδ + ūT ĀT Āū + 2L T f Āū (30) s.t. ψ i,0 (q, q) + ψ T i,1 (q, q)( Āū + L f ) ≤ δ i , (CLF) J q + JD(q) -1 ( B ū -H(q, q)) = 0, (Constrained Dynamics) u ≤ u max , (Max Torque) -u ≤ u max , (Min Torque) -l h F f z &lt; F my &lt; l t F f z , (ZMP) |F f x | &lt; µ k F f z ,<label>(Friction)</label></formula><p>where i = {1, 2, 3}, p = diag(p 1 , p 2 , p 3 ) chosen to penalize relaxations δ i of the CLF constraints. In addition, u max ∈ R 6 are maximum allowed torques, µ k is the coefficient of static friction between AMBER2 and the ground, l t is the length of the toe, l h is the length of the heel, and Ā, ū and ψ are given as in <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CBFS AND ROBOTIC LOCOMOTION</head><p>In this section, we utilize the main formal results of this paper presented in Sect. II to construct control barrier functions in the case of robotic locomotion. In particular, each of the CLFs utilized in (30), (CLF1) -(CLF3), correspond to physical behavior on the robot: regulation of hip velocity, regulation of the non-stance foot height, the stance knee angle, and the forward movement of the non-stance leg (through the "non-stance slope" output <ref type="bibr" target="#b16">[17]</ref>). Corresponding to each of these physical phenomena, we will construct a control barrier function that will ensure that the behavior of the robot satisfies physical constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Control Barrier Functions</head><p>We will now construct control barrier functions enforcing physical constraints. Note that these constructions will utilize the fact that there is a natural correspondence between these constraints and a set C satisfying (4)- <ref type="bibr" target="#b5">(6)</ref> where, in this case, the function h(x) will correspond to elements the humaninspired outputs (28) and (29). As a result, the assumption of Theorem 4 are valid. In particular, we formulation (CBF1)-(CBF5) as <ref type="bibr" target="#b1">(2)</ref> for every physical constraint. The following gives an overview of the specific CBFs considered, and the motivation for their constructions.</p><p>Hip velocity (CBF1): Since (CLF1), which corresponds to modulation of hip velocity, has relaxation parameter, the hip velocity will not converge to the desired velocity. Therefore, we should guarantee the velocity does not go below a lower bound, i.e., this CBF keeps the robot moving forward.</p><p>Non-stance foot height boundary (CBF2)-(CBF3): In order to ensure that the foot of the robot does not scuff the ground during a step, we must constraint the height of the foot to lie in a feasible region. Since the height of the foot is a function of the configuration variables of the system, the end result will be a function h(x) of relative degree 2, so it is necessary to apply the methods introduced in Sect. II.</p><p>Stance knee angle (CBF4): In order to ensure that the stance knee does not hyper-extend, we introduce a physical constraint that the knee angle must be greater than 0.</p><p>Non-stance slope (CBF5): Since the CLF conditions (CLF1) and (CLF2) in (30) are relaxed, the corresponding outputs (in this case, the non-stance slope) will not track the desired values. As a result, a CBF constraint related to the non-stance slope can be constructed to ensure that, even in the presence of imperfect tracking, the non-stance foot will continue to move forward and thus the robot will complete a step. In particular, the non-stance slope will be constrained to lie under the desired non-stance slope: y H (τ (q), α nsl ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Results and Discussion</head><p>Adding the control barrier functions constructed in Sect. IV-A, as represented by constraints (CBF1)-(CBF5), to the control law presented in (30), the end result is a QP based controller that yields stable robotic walking. In particular, we use parameters v hip and α of the human-inspired outputs (28) and (29) obtained by directly fitting the desired outputs to human data (see <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b16">[17]</ref> for a more complete discussion). This is in contrast to the methods presented in <ref type="bibr" target="#b1">[2]</ref>, since we do not perform an a priori optimization to obtained parameters that guarantee (partial) hybrid zero dynamics <ref type="bibr" target="#b9">[10]</ref>. If the control law (30) obtained from these outputs is simulated directly with the parameters v hip and α obtained by fitting human data, the robot would stumble and fall. Yet, through the addition of the control barrier functions (CBF1)-(CBF5), the biped displays a stable walking gait (with the proper choice of parameters of the barrier functions); this points to the importance of enforcing physical constraints in the synthesis of robotic walking gaits.</p><p>In particular, to obtain a stable walking gait on the model of AMBER2, the parameters were chosen. The initial condition for the gait, (q 0 , q0 ) := (θ(α), θ(α)), was obtained by solving the inverse kinematics problem as outlined in <ref type="bibr" target="#b1">[2]</ref>. The simulation result is illustrated in Fig. <ref type="figure">1</ref> to Fig. <ref type="figure" target="#fig_1">4</ref>; importantly, the actual outputs do not converge to the desired outputs by design, i.e., the use of control barrier functions prevent exact convergence since they enforce physical constraints that dominate the control law. Yet a stable walking gait is still achieved, as evidenced by calculation of the eigenvalues of the Poincaré map-the maximum eigenvalues is 0.4432 (and hence smaller than 1) indicating stability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>This paper presented a novel method for constructing control barrier functions through a backstepping inspired approach. In particular, we began by introducing a type of control barrier function that gives the maximum control authority (by allowing B to grow away from the boundary of the set C); this allowed for the unification of safety constraints and control objectives through CLF-CBF based QPs. Yet the existence of control barrier functions of this form are not guaranteed to exist, i.e., there may not be control inputs that satisfied the required derivative conditions on the CBF. This motivated the main result of this paper: formal  (f) Non-stance ankle Fig. <ref type="figure">3</ref>: Phase portraits for each joint over 20 steps when started from an initial condition away from the fixed point; convergence to a stable periodic orbit can be seen.</p><p>guarantees on the existence of CBFs under assumptions on the relative degree of the function defining C. To demonstrate the usefulness of these results, they were applied to bipedal robotic walking. Physical constraints that the robot must satisfy while locomoting were encoded as CBFs and combined with control objectives and torque/force constraints through a single QP based control law. The end result was stable walking in simulation.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :Fig. 2 :</head><label>12</label><figDesc>Fig.1: Desired (dotted lines) and actual (solid lines) outputs during a stable periodic walking gait.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 :</head><label>4</label><figDesc>Fig.4: Gait tiles for one step of a stable walking gait.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Note that the form of barrier functions considered in this paper is very different from that in<ref type="bibr" target="#b20">[21]</ref>; the end result is a more general methodology for constructing control barrier functions.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This research is supported by NSF CPS Awards 1239055, 1239037 and 1239085.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">First steps toward automatically generating bipedal robotic walking from human data</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th International Workshop on Robotic Motion and Control</title>
		<imprint>
			<publisher>Bukowy Dworek</publisher>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Human-inspired control of bipedal walking robots. Automatic Control</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1115" to="1130" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Rapidly exponentially stabilizing control lyapunov functions and hybrid zero dynamics. Automatic Control</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Galloway</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sreenath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Grizzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="876" to="891" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Control barrier function based quadratic programs with application to adaptive cruise control</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Grizzle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Tabuada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Conference on Decision and Control (CDC)</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Towards the unification of locomotion and manipulation through control lyapunov functions and quadratic programs</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Powell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Control of Cyber-Physical Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="219" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Stabilization with relaxed controls</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Artstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nonlinear Analysis: Theory, Methods &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1163" to="1173" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Vandenberghe</surname></persName>
		</author>
		<title level="m">Convex optimization</title>
		<imprint>
			<publisher>Cambridge university press</publisher>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Robust nonlinear control design: state-space and Lyapunov techniques</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">V</forename><surname>Kokotović</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Torque saturation in bipedal robotic walking through control lyapunov function based quadratic programs</title>
		<author>
			<persName><forename type="first">K</forename><surname>Galloway</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Sreenath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ames</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Grizzle</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1302.7314</idno>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">3D bipedal robotic walking: models, feedback control, and open problems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Grizzle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chevallereau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Sinnet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IFAC Symposium on Nonlinear Control Systems</title>
		<meeting><address><addrLine>Bologna</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-09">September 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Nonlinear control systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Isidori</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Springer</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Nonlinear systems</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">K</forename><surname>Khalil</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Prentice hall Upper Saddle River</publisher>
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The joy of feedback: nonlinear and adaptive</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">V</forename><surname>Kokotović</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Control Systems Magazine</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="7" to="17" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Constructive nonlinear control: a historical perspective</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">V</forename><surname>Kokotović</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Arcak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="637" to="662" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Achieving bipedal locomotion on rough terrain through human-inspired control</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kolathaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Safety, Security, and Rescue Robotics (SSRR), IEEE International Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Krstic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kanellakopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">V</forename><surname>Kokotović</surname></persName>
		</author>
		<title level="m">Nonlinear and adaptive control design</title>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Human-inspired walking via unified pd and impedance control</title>
		<author>
			<persName><forename type="first">W</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kolathaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE Conference on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Sufficient conditions for the lipschitz continuity of qp-based multi-objective control of humanoid robots</title>
		<author>
			<persName><forename type="first">B</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Ames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Decision and Control (CDC), IEEE 52nd Annual Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="2920" to="2926" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Safety verification of hybrid systems using barrier certificates</title>
		<author>
			<persName><forename type="first">S</forename><surname>Prajna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jadbabaie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hybrid Systems: Computation and Control</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="477" to="492" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A lyapunov-like characterization of asymptotic controllability</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Sontag</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Control and Optimization</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="462" to="471" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Barrier lyapunov functions for the control of output-constrained nonlinear systems</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Tee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sam Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">H</forename><surname>Tay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="918" to="927" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Constructive safety using control barrier functions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Wieland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Allgöwer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th IFAC Symposium on Nonlinear Control Systems</title>
		<meeting>the 7th IFAC Symposium on Nonlinear Control Systems</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="462" to="467" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Numerical optimization</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Springer</publisher>
			<biblScope unit="volume">2</biblScope>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
