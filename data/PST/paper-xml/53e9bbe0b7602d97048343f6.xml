<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Non-interactive Proof Systems for Bilinear Groups</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jens</forename><surname>Groth</surname></persName>
							<email>j.groth@ucl.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="institution">University College London</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Amit</forename><surname>Sahai</surname></persName>
							<email>sahai@cs.ucla.edu</email>
							<affiliation key="aff1">
								<orgName type="institution">University of California Los Angeles</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Non-interactive Proof Systems for Bilinear Groups</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5004121A83A80AFF61D81B899B8CB608</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Non-interactive witness-indistinguishability</term>
					<term>non-interactive zeroknowledge</term>
					<term>common reference string</term>
					<term>bilinear groups</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Non-interactive zero-knowledge proofs and non-interactive witnessindistinguishable proofs have played a significant role in the theory of cryptography. However, lack of efficiency has prevented them from being used in practice. One of the roots of this inefficiency is that non-interactive zeroknowledge proofs have been constructed for general NP-complete languages such as Circuit Satisfiability, causing an expensive blowup in the size of the statement when reducing it to a circuit. The contribution of this paper is a general methodology for constructing very simple and efficient non-interactive zero-knowledge proofs and non-interactive witness-indistinguishable proofs that work directly for groups with a bilinear map, without needing a reduction to Circuit Satisfiability.</p><p>Groups with bilinear maps have enjoyed tremendous success in the field of cryptography in recent years and have been used to construct a plethora of protocols. This paper provides non-interactive witness-indistinguishable proofs and non-interactive zero-knowledge proofs that can be used in connection with these protocols. Our goal is to spread the use of non-interactive cryptographic proofs from mainly theoretical purposes to the large class of practical cryptographic protocols based on bilinear groups.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Non-interactive zero-knowledge proofs and non-interactive witness-indistinguishable proofs have played a significant role in the theory of cryptography. However, lack of efficiency has prevented them from being used in practice. Our goal is to construct efficient and practical non-interactive zero-knowledge (NIZK) proofs and non-interactive witness-indistinguishable (NIWI) proofs.</p><p>Work presented and part of work done while participating in Securing Cyberspace: Applications and Foundations of Cryptography and Computer Security, Institute of Pure and Applied Mathematics, UCLA, 2006. Part of work done while at UCLA supported by NSF ITR/Cybertrust grant 0456717. This research was supported in part by NSF ITR and Cybertrust programs (including grants 0627781, 0456717, 0716389, and 0205594), a subgrant from SRI as part of the Army Cyber-TA program, an equipment grant from Intel, an Okawa Research Award, and an Alfred P. Sloan Foundation Research Fellowship.</p><p>Blum, Feldman and Micali <ref type="bibr" target="#b3">[4]</ref> introduced NIZK proofs. Their paper and subsequent work, e.g. <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b16">17]</ref>, demonstrates that NIZK proofs exist for all of NP. Unfortunately, these NIZK proofs are all very inefficient. While leading to interesting theoretical results, such as the construction of public-key encryption secure against chosen-ciphertext attack by Dolev, Dwork and Naor <ref type="bibr" target="#b17">[18]</ref>, they have therefore not had any impact in practice.</p><p>Since we want to construct NIZK proofs that can be used in practice, it is worthwhile to identify the roots of the inefficiency in the above mentioned NIZK proofs. One drawback is that they were designed with a general NP-complete language in mind, e.g. Circuit Satisfiability. In practice, we want to prove statements such as "the ciphertext c encrypts a signature on the message m" or "the three commitments c a , c b , c c contain messages a, b, c so c = ab". An NP-reduction of even very simple statements like these gives us big circuits containing thousands of gates and the corresponding NIZK proofs become very large.</p><p>While we want to avoid an expensive NP-reduction, it is still desirable to have a general way to express statements that arise in practice instead of having to construct non-interactive proofs on an ad hoc basis. A useful observation in this context is that many public-key cryptography protocols are based on finite abelian groups. If we can capture statements that express relations between group elements, then we can express statements that come up in practice such as "the commitments c a , c b , c c contain messages so c = ab" or "the plaintext of c is a signature on m", as long as those commitment, encryption, and signature schemes work over the same finite group. In the paper, we will therefore construct NIWI and NIZK proofs for group-dependent languages.</p><p>The next issue to address is where to find suitable group-dependent languages. We will look at statements related to groups with a bilinear map, which have become widely used in the design of cryptographic protocols. Not only have bilinear groups been used to give new constructions of such cryptographic staples as public-key encryption, digital signatures, and key agreement (see <ref type="bibr" target="#b30">[31]</ref> and the references therein), but bilinear groups have enabled the first constructions achieving goals that had never been attained before. The most notable of these is the Identity-Based Encryption scheme of Boneh and Franklin <ref type="bibr" target="#b9">[10]</ref> (see also <ref type="bibr">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b34">35]</ref>), and there are many others, such as Attribute-Based Encryption <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b21">22]</ref>, Searchable Public-Key Encryption <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>, and One-time Double-Homomorphic Encryption <ref type="bibr" target="#b10">[11]</ref>. For an incomplete list of papers (currently over 200) on the application of bilinear groups in cryptography, see <ref type="bibr" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Our Contribution</head><p>For completeness, let us recap the definition of a bilinear group. Please note that for notational convenience we will follow the tradition of mathematics and use additive notation <ref type="foot" target="#foot_1">1</ref> for the binary operations in G 1 and G 2 . We have a probabilistic polynomial time algorithm G that takes a security parameter as input and outputs In this work, we develop a general set of highly efficient techniques for proving statements involving bilinear groups. The generality of our work extends in two directions. First, we formulate our constructions in terms of modules over commutative rings with an associated bilinear map. This framework captures all known bilinear groups with cryptographic significance -for both supersingular and ordinary elliptic curves, for groups of both prime and composite order. Second, we consider all mathematical operations that can take place in the context of a bilinear group -addition in G 1 and G 2 , scalar point-multiplication, addition or multiplication of scalars, and use of the bilinear map. We also allow both group elements and exponents to be "unknowns" in the statements to be proven.</p><formula xml:id="formula_0">(n, G 1 , G 2 , G T , e, P 1 , P 2 ) where -G 1 , G</formula><p>With our level of generality, it would for example be easy to write down a short statement, using the operations above, that encodes "c is an encryption of the value committed to in d under the product of the two keys committed to in a and b" where the encryptions and commitments being referred to are existing cryptographic constructions based on bilinear groups. Logical operations like AND and OR are also easy to encode into our framework using standard techniques in arithmetization.</p><p>The proof systems we build are non-interactive. This allows them to be used in contexts where interaction is undesirable or impossible. We first build highly efficient witness-indistinguishable proof systems, which are of independent interest. We then show how to transform these into zero-knowledge proof systems. We also provide a detailed examination of the efficiency of our constructions in various settings (depending on what type of bilinear group is used).</p><p>The security of constructions arising from our framework can be based on any of a variety of computational assumptions about bilinear groups (3 of which we discuss in detail here). Thus, our techniques do not rely on any one assumption in particular.</p><p>Informal Statement of Our Results. We consider equations over variables from G 1 , G 2 and Z n as described in Figure <ref type="figure">1</ref>. We construct efficient witnessindistinguishable proofs for the simultaneous satisfiability of a set of such equations. The witness-indistinguishable proofs have perfect completeness and there are two computationally indistinguishable types of common reference strings giving respectively perfect soundness and perfect witness indistinguishability. Due to lack of space we have to refer to the full paper <ref type="bibr" target="#b27">[28]</ref> for precise definitions.</p><p>We also consider the question of non-interactive zero-knowledge. We show that we can give zero-knowledge proofs for multi-scalar multiplication in G 1 or G 2 and for quadratic equations in Z n . We can also give zero-knowledge proofs for pairing product equations with t T = 1. When t T = 1 we can still give zero-knowledge proofs if we can find P 1 , Q 1 , . . . , P n , Q n such that t T = n i=1 e(P i , Q i ). a We list variables in Zn in two separate groups because we will treat them differently in the NIWI proofs. If we wish to deal with only one group of variables in Zn we can add equations in Zn of the form x1 = y1, x2 = y2, etc. b With multiplicative notation, these equations would be multi-exponentiation equations. We use additive notation for G1 and G2, since this will be notationally convenient in the paper, but stress that the discrete logarithm problem will typically be hard in these groups.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 1. Equations over groups with bilinear map</head><p>Instantiations. In the full paper we give three possible instantiations of the bilinear groups; there are many more. The first instantiation is based on the composite order groups introduced by Boneh, Goh and Nissim <ref type="bibr" target="#b10">[11]</ref>. We work over a composite order bilinear group (n, G, G T , e, P) where n = pq. The security of this instantiation is based on the subgroup decision assumption that says it is hard to distinguish random elements of order n from random elements of order q.</p><p>The second instantiation is based on prime order groups (p, G 1 , G 2 , G T , e, P 1 , P 2 ). Security depends on the symmetric external Diffie-Hellman (SXDH) assumption <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b33">34]</ref> that says the DDH problem is hard in both G 1 and G 2 .</p><p>The third instantiation is based on prime order groups (p, G, G T , e, P) where the decisional linear (DLIN) problem is hard. The DLIN problem introduced by Boneh, Boyen and Shacham <ref type="bibr" target="#b7">[8]</ref> states that given (αP, βP, rαP, sβP, tP) for random α, β, r, s ∈ Z p it is hard to tell whether t = r + s or t is random.</p><p>The instantiations illustrate the variety of ways bilinear groups can be constructed. We can choose prime order or composite order groups, we can use G 1 = G 2 and G 1 = G 2 , and we can make various cryptographic assumptions. All three security assumptions have been used in the cryptographic literature to build interesting protocols.</p><p>For all three instantiations, the techniques presented here give us short NIWI proofs. In particular, the cost in proof size of each extra equation is constant and independent of the number of variables in the equation. The size of the proofs, can be computed by adding the cost, measured in group elements from G 1 or G 2 , of each variable and each equation listed in Figure <ref type="figure">2</ref>. We refer to the full paper <ref type="bibr" target="#b27">[28]</ref> for more detailed tables. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Related Work</head><p>As we mentioned before, early work on NIZK proofs demonstrated that all NPlanguages have non-interactive proofs, however, did not yield efficient proofs. One cause for these proofs being inefficient in practice was the need for an expensive NPreduction to e.g. Circuit Satisfiability. Another cause of inefficiency was the reliance on the so-called hidden bits model, which even for small circuits is inefficient. Groth, Ostrovsky, and Sahai <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b25">26]</ref> investigated NIZK proofs for Circuit Satisfiability using bilinear groups. This addressed the second cause of inefficiency since their techniques give efficient proofs for Circuit Satisfiability, but to use their proofs one must still make an NP-reduction to Circuit Satisfiability thus limiting the applications. We stress that while <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b25">26]</ref> used bilinear groups, their application was to build proof systems for Circuit Satisfiability. Here, we devise entirely new techniques to deal with general statements about equations in bilinear groups, without having to reduce to an NP-complete language.</p><p>Addressing the issue of avoiding an expensive NP-reduction we have works by Boyen and Waters <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref> that suggest efficient NIWI proofs for statements related to group signatures. These proofs are based on bilinear groups of composite order and rely on the subgroup decision assumption.</p><p>Groth <ref type="bibr" target="#b22">[23]</ref> was the first to suggest a general group-dependent language and NIZK proofs for statements in this language. He investigated satisfiability of pairing product equations and only allowed group elements to be variables. He also looked only at the special case of prime order groups G, G T with a bilinear map e : G × G → G T and, based on the decisional linear assumption <ref type="bibr" target="#b7">[8]</ref>, constructed NIZK proofs for such pairing product equations. However, even for very small statements, the very different and much more complicated techniques of Groth yield proofs consisting of thousands of group elements (whereas ours would be in the tens). Our techniques are much easier to understand, significantly more general, and vastly more efficient.</p><p>We summarize our comparison with other works on NIZK proofs in Figure <ref type="figure">3</ref>.</p><p>Inefficient Efficient Circuit Satisfiability E.g. <ref type="bibr" target="#b28">[29]</ref> [27,26] Group-dependent language <ref type="bibr" target="#b22">[23]</ref> (restricted case) This work</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 3. Classification of NIZK proofs according to usefulness</head><p>We note that there have been many earlier works (starting with <ref type="bibr" target="#b20">[21]</ref>) dealing with efficient interactive zero-knowledge protocols for a number of algebraic relations. Here, we focus on non-interactive proofs. We also note that even for interactive zeroknowledge proofs, no set of techniques was known for dealing with general algebraic assertions arising in bilinear groups, as we do here. <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b22">23]</ref> start by constructing non-interactive proofs for simple statements and then combine many of them to get more powerful proofs. The main building block in <ref type="bibr" target="#b26">[27]</ref>, for instance, is a proof that a given commitment contains either 0 or 1, which has little expressive power on its own. Our approach is the opposite: we directly construct proofs for very expressive languages; as such, our techniques are very different from previous work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">New Techniques</head><p>The way we achieve our generality is by viewing the groups G 1 , G 2 , G T as modules over the ring Z n . The ring Z n itself can also be viewed as a Z n -module. We therefore look at the more general question of satisfiability of quadratic equations over Z nmodules A 1 , A 2 , A T with a bilinear map, see Section 2 for details. Since many bilinear groups with various cryptographic assumptions and various mathematical properties can be viewed as modules we are not bound to any particular bilinear group or any particular assumption. We remark that while bilinear groups can be interpreted as modules with a bilinear map, it is possible that there exist other interesting modules with a bilinear map that are not based on bilinear groups. We leave the existence of such modules as an interesting open problem.</p><p>Given modules A 1 , A 2 , A T with a bilinear map, we construct new modules B 1 , B 2 , B T , also equipped with a bilinear map, and we map the elements in A 1 , A 2 , A T into B 1 , B 2 , B T . More precisely, we devise commitment schemes that map variables from A 1 , A 2 to the modules B 1 , B 2 . The commitment schemes are homomorphic with respect to the module operations but also with respect to the bilinear map.</p><p>Our techniques for constructing witness-indistinguishable proofs are fairly involved mathematically, but we will try to present some high level intuition here. (We give more detailed intuition later in Section 5, where we present our main proof system). The main idea is the following: because our commitment schemes are homomorphic and we equip them with a bilinear map, we can take the equation that we are trying to prove, and just replace the variables in the equation with commitments to those variables. Of course, because the commitment schemes are hiding, the equations will no longer be valid. Intuitively, however, we can extract out the additional terms introduced by the randomness of the commitments: if we give away these terms in the proof, then this would be a convincing proof of the equation's validity (again, because of the homomorphic properties). But, giving away these terms might destroy witness indistinguishability. Suppose, however, that there is only one "additional term" introduced by substituting the commitments. Then, because it would be the unique value which makes the equation true, giving it away would preserve witness indistinguishability! In general, we are not so lucky. But if there are many terms, that means that these terms are not unique, and because of the nice algebraic environment that we work in, we can randomize these terms so that the equation is still true, but so that we effectively reduce to the case of there being a single term being given away with a unique value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4">Applications</head><p>Independently of our work, Boyen and Waters <ref type="bibr" target="#b13">[14]</ref> have constructed non-interactive proofs that they use for group signatures (see also their earlier paper <ref type="bibr" target="#b12">[13]</ref>). These proofs can be seen as examples of the NIWI proofs in instantiation 1. Subsequent to the announcement of our work, several papers have built upon it: Chandran, Groth and Sahai <ref type="bibr" target="#b14">[15]</ref> have constructed ring-signatures of sub-linear size using the NIWI proofs in the first instantiation, which is based on the subgroup decision problem. Groth and Lu <ref type="bibr" target="#b24">[25]</ref> have used the NIWI and NIZK proofs from instantiation 3 to construct a NIZK proof for the correctness of a shuffle. Groth <ref type="bibr" target="#b23">[24]</ref> has used the NIWI and NIZK proofs from instantiation 3 to construct a fully anonymous group signature scheme. Belenkiy, Chase, Kohlweiss and Lysyanskaya <ref type="bibr" target="#b2">[3]</ref> have used instantiations 2 and 3 to construct non-interactive anonymous credentials. Also, by attaching NIZK proofs to semantically secure public-key encryption in any instantiation we get an efficient non-interactive verifiable cryptosystem. Boneh <ref type="bibr" target="#b4">[5]</ref> has suggested using this for optimistic fair exchange <ref type="bibr" target="#b29">[30]</ref>, where two parties use a trusted but lazy third party to guarantee fairness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Modules with Bilinear Maps</head><p>Let (R, +, •, 0, 1) be a finite commutative ring. Recall that an R-module A is an abelian group (A, +, 0) where the ring acts on the group such that ∀r, s ∈ R ∀x, y ∈ A :</p><formula xml:id="formula_1">(r + s)x = rx + sx ∧ r(x + y) = rx + ry ∧ r(sx) = (rs)x ∧ 1x = x.</formula><p>A cyclic group G of order n can in a natural way be viewed as a Z n -module. We will observe that all the equations in Figure <ref type="figure">1</ref> can be viewed as equations over Z n -modules with a bilinear map. To generalize completely, let R be a finite commutative ring and let A 1 , A 2 , A T be finite R-modules with a bilinear map f : A 1 × A 2 → A T . We consider quadratic equations over variables x 1 , . . . , x m ∈ A 1 , y 1 , . . . , y n ∈ A 2 of the form</p><formula xml:id="formula_2">n j=1 f (a j , y j ) + m i=1 f (x i , b i ) + m i=1 n j=1 γ ij f (x i , y j ) = t.</formula><p>In order to simplify notation, let us for x 1 , . . . ,</p><formula xml:id="formula_3">x n ∈ A 1 , y 1 , . . . , y n ∈ A 2 define x • y = n i=1 f (x i , y i ).</formula><p>The equations can now be written as</p><formula xml:id="formula_4">a • y + x • b + x • Γ y = t.</formula><p>We note for future use that due to the bilinear properties of f , we have for any matrix Γ ∈ Mat m×n (R) and for any x 1 , . . . , x m , y 1 , . . . , y n that x • Γ y = Γ x • y.</p><p>Let us now return to the equations in Figure <ref type="figure">1</ref> and see how they can be recast as quadratic equations over Z n -modules with a bilinear map. <ref type="figure">,</ref><ref type="figure">y</ref>) and we can rewrite<ref type="foot" target="#foot_2">2</ref> the pairing product equation as</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pairing product equations:</head><formula xml:id="formula_5">Define R = Z n , A 1 = G 1 , A 2 = G 2 , A T = G T , f(x, y) = e(x</formula><formula xml:id="formula_6">(A • Y)(X • B)(X • Γ Y) = t T . Multi-scalar multiplication in G 1 : Define R = Z n , A 1 = G 1 , A 2 = Z n , A T = G 1 , f(X , y)</formula><p>= yX and we can rewrite the multi-scalar multiplication equation as</p><formula xml:id="formula_7">A • y + X • b + X • Γ y = T 1 . Multi-scalar multiplication in G 2 : Define R = Z n , A 1 = Z n , A 2 = G 2 , A T = G 2 , f(x, Y)</formula><p>= xY and we can rewrite the multi-scalar multiplication equation as a From now on, we will therefore focus on the more general problem of constructing noninteractive composable witness-indistinguishable proofs for satisfiability of quadratic equations over R-modules A 1 , A 2 , A T (using additive notation for all modules) with a bilinear map f .</p><formula xml:id="formula_8">• Y + x • B + x • Γ Y = T 2 . Quadratic equation in Z n : Define R = Z n , A 1 = Z n , A 2 = Z n , A T = Z n , f(x,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Commitment from Modules</head><p>In our NIWI proofs we will commit to the variables x 1 , . . . , x m ∈ A 1 , y 1 , . . . , y n ∈ A 2 .</p><p>We do this by mapping them into other R-modules B 1 , B 2 and making the commitments in those modules.</p><p>Let us for now just consider how to commit to elements from one R-module A. The public key for the commitment scheme will describe another R-module B and R-linear maps ι : A → B and p : B → A. It will also contain elements u 1 , . . . , u n ∈ B. To commit to x ∈ A we pick r 1 , . . . , r n ← R at random and compute the commitment</p><formula xml:id="formula_9">c := ι(x) + n i=1 r i u i .</formula><p>Our commitment scheme will have two types of commitment keys.</p><p>Hiding key: A hiding key contains (B, ι, p, u 1 , . . . , u n ) such that ι(G) ⊆ u 1 , . . . , u n . The commitment c := ι(x) + n i=1 r i u i is perfectly hiding when r 1 , . . . , r n are chosen at random from R. Binding key: A binding key contains (B, ι, p, u 1 , . . . , u n ) such that ∀i : p(u i ) = 0 and ι • p is the identity. <ref type="foot" target="#foot_3">3</ref> The commitment c := ι(x) + n i=1 r i u i is perfectly binding, since it determines x as p(c) = p(ι(x)) = x. <ref type="foot" target="#foot_4">4</ref>Computational indistinguishability: The main assumption that we will be making throughout this paper is that the distribution of hiding keys and the distribution of binding keys are computationally indistinguishable. Witness-indistinguishability of our NIWI proofs and later the zero-knowledge property of our NIZK proofs will rely on this property.</p><p>Often we will commit to many elements at a time so let us define some convenient notation. Given elements x 1 , . . . , x m we write c := ι(x) + Ru with R ∈ Mat m×n (R) for making commitments c 1 , . . . , c m computed as</p><formula xml:id="formula_10">c i := ι(x i ) + n j=1 r ij u j .</formula><p>The treatment of commitments using the language of modules generalizes several previous works dealing with commitments over bilinear groups, including <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b35">36]</ref>. We refer to the full paper <ref type="bibr" target="#b27">[28]</ref> for a demonstration of how the commitment scheme can be instantiated with respectively the subgroup decision, the SXDH and the DLIN assumptions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Setup</head><p>In our NIWI proofs the common reference string will contain commitment keys to commit to elements in respectively A 1 and A 2 . These commitment keys specify B 1 , ι 1 , p 1 , u 1 , . . . , u m so ι 1 • p 1 is the identity map and B 2 , ι 2 , p 2 , v 1 , . . . , v n so ι 2 • p 2 is the identity map. In addition, the common reference string will also specify a third R-module B T together with R-linear maps ι T : A T → B T and p T : B T → A T so ι T • p T is the identity map. There will be a bilinear map F : B 1 × B 2 → B T as well. We require that the maps are commutative. We refer to Figure <ref type="figure">4</ref> for an overview of the modules and the maps.</p><p>For notational convenience, let us define for</p><formula xml:id="formula_11">x ∈ B n 1 , y ∈ B n 2 that x • y = n i=1 F (x i , y i ).</formula><p>The final part of the common reference string is a set of matrices</p><formula xml:id="formula_12">H 1 , . . . , H η ∈ Mat m×n (R) that all satisfy u • H i v = 0. 5 A1 × A2 → AT f ι1 ↓↑ p1 ι2 ↓↑ p2 ιT ↓↑ pT B1 × B2 → BT F ∀x ∈ A1 ∀y ∈ A2 : F (ι1(x), ι2(y)) = ιT (f (x, y)) ∀x ∈ B1 ∀y ∈ B2 : f (p1(x), p2(x)) = pT (F (x, y))</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 4. Modules and maps between them</head><p>There will be two different types of settings of interest to us.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Soundness setting:</head><p>In the soundness setting, we require that the commitment keys are binding so we have p 1 (u) = 0 and p 2 (v) = 0. Witness-indistinguishability setting: In the witness-indistinguishability setting we have hiding commitment keys, so ι 1 (G 1 ) ⊆ u 1 , . . . , u m and ι 2 (G 2 ) ⊆ v 1 , . . . , v n . We also require that H 1 , . . . , H η generate the R-module of all matrices H so u • Hv = 0. As we will see in the next section, these matrices play a role as randomizers in the witness-indistinguishability proof. Computational indistinguishability: The (only) computational assumption this paper is based on is that the two settings can be set up in a computationally indistinguishable way. The instantiations show that there are many ways to get such computationally indistinguishable soundness and witness-indistinguishability setups.</p><p>All three instantiations based on the subgroup decision, the SXDH and the DLIN assumptions enable us to make this kind of setup, see the full paper <ref type="bibr" target="#b27">[28]</ref> for details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Proving That Committed Values Satisfy a Quadratic Equation</head><p>Recall that in our setting, a quadratic equation looks like the following:</p><formula xml:id="formula_13">a • y + x • b + x • Γ y = t, (<label>1</label></formula><formula xml:id="formula_14">)</formula><formula xml:id="formula_15">with constants a ∈ A n 1 , b ∈ A m 2 , Γ ∈ Mat m×n (R), t ∈ A T .</formula><p>We will first consider the case of a single quadratic equation of the above form. The first step in our NIWI proof will be to commit to all the variables x, y. The commitments are of the form</p><formula xml:id="formula_16">c = ι 1 (x) + Ru , d = ι 2 (y) + Sv, (<label>2</label></formula><formula xml:id="formula_17">)</formula><p>with R ∈ Mat m× m (R), S ∈ Mat n× n (R). The prover's task is to convince the verifier that the commitments contain x ∈ A m 1 , y ∈ A n 2 that satisfy the quadratic equation. (Note that for all equations we will use these same commitments.) Intuition. Before giving the proof let us give some intuition. In the previous sections, we have carefully set up our commitments so that the commitments themselves also "behave" like the values being committed to: they also belong to modules (the B modules) equipped with a bilinear map (the map F , also implicitly used in the • operation). Given that we have done this, a natural idea is to take the quadratic equation ( <ref type="formula" target="#formula_13">1</ref>), and "plug in" the commitments (2) in place of the variables; let us evaluate:</p><formula xml:id="formula_18">ι 1 (a) • d + c • ι 2 (b) + c • Γ d.</formula><p>After some computations, where we expand the commitments (2), make use of the bilinearity of •, and rearrange terms (the details can be found in the proof of Theorem 1 in the full paper <ref type="bibr" target="#b27">[28]</ref>) we get</p><formula xml:id="formula_19">ι 1 (a) • ι 2 (y) + ι 1 (x) • ι 2 (b) + ι 1 (x) • Γ ι 2 (y) +ι 1 (a) • Sv + Ru • ι 2 (b) + ι 1 (x) • Γ Sv + Ru • Γ ι 2 (y) + Ru • Γ Sv.</formula><p>By the commutative properties of the maps, the first group of three terms is equal to ι T (t), if Equation 1 holds. Looking at the remaining terms, note that the verifier knows u and v. Using the fact that bilinearity implies that for any x, y we have x • Γ y = Γ x • y, we can sort the remaining terms so that they match either u or v to get (again see the proof of Theorem 1 in the full paper for details)</p><formula xml:id="formula_20">ι T (t)+ u • R ι 2 (b)+ R Γ ι 2 (y)+ R Γ Sv + S ι 1 (a)+ S Γ ι 1 (x) • v. (3)</formula><p>Now, for sake of intuition, let us make some simplifying assumptions: Let's assume that we're working in a symmetric case where A 1 = A 2 , and B 1 = B 2 , and therefore u = v and, so, the above equation can be simplified further to get:</p><formula xml:id="formula_21">ι T (t) + u • R ι 2 (b) + R Γ ι 2 (y) + R Γ Su + S ι 1 (a) + S Γ ι 1 (x) .</formula><p>Now, suppose the prover gives to the verifier as his proof π = R ι 2 (b) + R Γ ι 2 (y) + S ι 1 (a) + S Γ ι 1 (x) . The verifier would then check that the following verification equation holds:</p><formula xml:id="formula_22">ι 1 (a) • d + c • ι 2 (b) + c • Γ d = ι T (t) + u • π.</formula><p>It is easy to see that this proof would be convincing in the soundness setting, because we have that p 1 (u) = 0. Then the verifier would know (but not be able to compute) that by applying the maps p 1 , p 2 , p T we get</p><formula xml:id="formula_23">a • p 2 (d) + p 1 (c) • b + p 1 (c) • Γ p 2 (d) = t + p 1 (u) • p 2 (π) = t.</formula><p>This gives us soundness, since x := p 1 (c) and y := p 2 (d) satisfy the equations.</p><p>The remaining problem is to get witness-indistinguishability. Recall that in the witness-indistinguishability setting, the commitments are perfectly hiding. Therefore, in the verification equation, nothing except for π has any information about x and y except for the information that can be inferred from the quadratic equation itself. So, let's consider two cases:</p><p>1. that π is the unique value so that the verification equation is valid. In this case, we trivially have witness indistinguishability, since this means that all witnesses would lead to the same value for π. 2. The simple case above might seem too good to be true, but let's see what it means if it isn't true. If two values π and π both satisfy the verification equation, then just subtracting the equations shows that u • (ππ ) = 0. On the other hand, recall that in the witness indistinguishability setting, the u vectors generate the entire space where π or π live, and furthermore we know that the matrices H 1 , . . . , H η generate all H such that u • Hu = 0. Therefore, let's choose r 1 , . . . , r η at random, and consider the distribution π = π + η i=1 r i H i u. We thus obtain the same distribution on π regardless of what π we started from, and such that π always satisfies the verification equation.</p><p>Thus, for the symmetric case we obtain a witness indistinguishable proof system. For the general non-symmetric case, instead of having just π for the u part of Equation <ref type="formula">3</ref>, we would also have a proof θ for the v part. In this case, we would also have to make sure that this split does not reveal any information about the witness. What we will do is to randomize the proofs such that they get a uniform distribution on all π, θ that satisfy the verification equation. If we pick T ← Mat n× m (R) at random we have that θ + T u completely randomizes θ. The part we add in θ can be "subtracted" from π by observing that</p><formula xml:id="formula_24">ι T (t) + u • π + θ • v = ι T (t) + u • π -T v + θ + T u • v.</formula><p>This leads to a unique distribution of proofs for the general non-symmetric case as well.</p><p>Having explained the intuition behind the proof system, we proceed to a formal description and proof of security properties.</p><formula xml:id="formula_25">Proof: Pick T ← Mat n× m (R), r 1 , . . . , r η ← R at random. Compute π := R ι 2 (b) + R Γ ι 2 (y) + R Γ Sv -T v + η i=1 r i H i v θ := S ι 1 (a) + S Γ ι 1 (x) + T u</formula><p>and return the proof (θ, π). Verification: Return 1 if and only if</p><formula xml:id="formula_26">ι 1 (a) • d + c • ι 2 (b) + c • Γ d = ι T (t) + u • π + θ • v.</formula><p>Perfect completeness of our NIWI proof will follow from the following theorem no matter whether we are in the soundness setting or the witness-indistinguishability setting. We refer to the full paper <ref type="bibr" target="#b27">[28]</ref> for the proof.</p><formula xml:id="formula_27">Theorem 1. Given x ∈ A m 1 , y ∈ A n 2 , R ∈ Mat m× m (R), S ∈ Mat n× n (R) satisfying c = ι 1 (x) + Ru , d = ι 2 (y) + Sv , a • y + x • b + x • Γ y = t,</formula><p>we have for all choices of T, r 1 , . . . , r η that the proofs π, θ constructed as above will be accepted.</p><p>Perfect soundness of our NIWI proof follows from the following theorem.</p><p>Theorem 2. In the soundness setting, where we have p 1 (u) = 0 and p 2 (v) = 0, a valid proof implies a</p><formula xml:id="formula_28">• p 2 (d) + p 1 (c) • b + p 1 (c) • Γ p 2 (d) = t.</formula><p>Proof. An acceptable proof π, θ satisfies ι(a)</p><formula xml:id="formula_29">• d + c • ι 2 (b) + c • Γ d = ι T (t) + u • π + θ • v.</formula><p>The commutative property of the linear and bilinear maps gives us</p><formula xml:id="formula_30">p 1 (ι 1 (a)) • p 2 (d) + p 1 (c) • p 2 (ι 2 (b)) + p 1 (c) • Γ p 2 (d) = p T (ι T (t)) + p 1 (u) • p 2 (π) + p 1 (θ) • p 2 (v) = p T (ι T (t)).</formula><p>Composable witness-indistinguishability follows from the following theorem, which we prove in the full paper <ref type="bibr" target="#b27">[28]</ref>.</p><p>Theorem 3. In the witness-indistinguishable setting where ι 1 (G </p><formula xml:id="formula_31">(a) • d + c • ι 2 (b) + c • Γ d = ι T (t) + u • π + θ • v.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">NIWI Proof for Satisfiability of a Set of Quadratic Equations</head><p>We will now give the full composable NIWI proof for satisfiability of a set of quadratic equations in a module with a bilinear map. The cryptographic assumption we make is that the common reference string is created by one of two algorithms K or S and that their outputs are computationally indistinguishable. The first algorithm outputs a common reference string that specifies a soundness setting, whereas the second algorithm outputs a common reference string that specifies a witness-indistinguishability setting.  For each equation (a i , b i , Γ i , t i ) make a proof as described in Section 5. In other words, pick T i ← Mat n× m (R) and r i1 , . . . , r iη ← R compute</p><formula xml:id="formula_32">Setup: gk := (R, A 1 , A 2 , A T , f) ← G(1 k ).</formula><formula xml:id="formula_33">π i := R ι 2 (b i ) + R Γ ι 2 (y) + R Γ Sv -T i v + η j=1 r ij H j v θ i := S ι 1 (a i ) + S Γ ι 1 (x) + T i u. Output the proof (c, d, {(π i , θ i )} N i=1 )</formula><p>.</p><formula xml:id="formula_34">Verification: input is gk, σ, {(a i , b i , Γ i , t i )} N i=1 and the proof (c, d, {(π i , θ i )}). For each equation check ι 1 (a i ) • d + c • ι 2 (b i ) + c • Γ i d = ι T (t i ) + u • π i + θ i • v.</formula><p>Output 1 if all the checks pass, else output 0.</p><p>The construction gives us a NIWI proof. We prove the following theorem in the full paper <ref type="bibr" target="#b27">[28]</ref>.</p><p>Theorem 4. The protocol given above is a NIWI proof for satisfiability of a set of quadratic equations with perfect completeness, perfect soundness and composable witness-indistinguishability.</p><p>Proof of knowledge. We observe that if K outputs an additional secret piece of information ξ that makes it possible to efficiently compute p 1 and p 2 , then it is straightforward to compute the witness x = p 1 (c) and y = p 2 (d), so the proof is a perfect proof of knowledge. Proof size. The size of the common reference string is m elements in B 1 and n elements in B 2 in addition to the description of the modules, the maps and H 1 , . . . , H η . The size of the proof is m + N n elements in B 1 and n + N m elements in B 2 .</p><p>Typically, m and n will be small, giving us a proof size that is O(m + n + N ) elements in B 1 and B 2 . The proof size may thus be smaller than the description of the statement, which can be of size up to N n elements in A 1 , N m elements in A 2 , N mn elements in R and N elements in A T .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">NIWI Proofs for Bilinear Groups</head><p>We will now outline the strategy for making NIWI proofs for satisfiability of a set of quadratic equations over bilinear groups. As we described in Section 2, there are four different types of equations, corresponding to the following four combinations of Z nmodules:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pairing product equations:</head><formula xml:id="formula_35">A 1 = G 1 , A 2 = G 2 , A T = G T , f(X , Y) = e(X , Y). Multi-scalar multiplication in G 1 : A 1 = G 1 , A 2 = Z n , A T = G 1 , f(X , y) = yX . Multi-scalar multiplication in G 2 : A 1 = Z n , A 2 = G 2 , A T = G T , f(x, Y) = xY. Quadratic equations in Z n : A 1 = Z n , A 2 = Z n , A T = Z n , f(x, y) = xy mod n.</formula><p>The common reference string will specify commitment schemes to respectively scalars and group elements. We first commit to all the variables and then make the NIWI proofs that correspond to the types of equations that we are looking at. It is important that we use the same commitment schemes and commitments for all equations, i.e., for instance we only commit to a scalar x once and we use the same commitment in the proof whether the equation x is involved in is a multi-scalar multiplication in G 2 or a quadratic equations in Z n . The use of the same commitment in all the equations is necessary to ensure a consistent choice of x throughout the proof. As a consequence of this we use the same module B 1 to commit to x in both multi-scalar multiplication in G 2 and quadratic equations in Z n . We therefore end up with at most four different modules B 1 , B 1 , B 2 , B 2 to commit to respectively X , x, Y, y variables. We give the full construction of efficient NIWI proofs for the three instantiations based on subgroup decision, SXDH and DLIN respectively in the full paper <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Zero-Knowledge</head><p>We will show that many cases it is possible to make zero-knowledge proofs for satisfiability of quadratic equations. An obvious strategy is to use our NIWI proofs directly, however, such proofs may not be zero-knowledge because the zero-knowledge simulator may not be able to compute any witness for satisfiability of the equations. It turns out that the strategy is better than it seems at first sight, because we will often be able to modify the set of quadratic equations into an equivalent set of quadratic equations where a witness can be found.</p><p>We consider first the case where A 1 = R, A 2 = A T , f(r, y) = ry and where S outputs an extra piece of information τ that makes it possible to trapdoor open the commitments in B 1 . More precisely, τ permits the computation of s ∈ R m so ι 1 (1) = ι 1 (0)+s u. We remark that this is a common case; in bilinear groups both multi-scalar multiplication equations in G 1 , G 2 and quadratic equations in Z n have this structure.</p><p>Define c = ι 1 (1) to be a commitment to φ = 1. Let us rewrite the equations in the statement as</p><formula xml:id="formula_36">a i • y + f (-φ, t i ) + x • b i + x • Γ y = 0.</formula><p>We have introduced a new variable φ and if we choose all of our variables in these modified equations to be 0 then we have a satisfying witness. In the simulation, we give the simulator trapdoor information that permits it to open c to 0 and we can now use the NIWI proof from Section 6. We will now describe the NIZK proof. The setup, common reference string generation, proof and verification work as a standard NIWI proof. Here we describe the simulator.</p><p>Simulation string: Using ι 1 (1) = ι 1 (0) + m i=1 s i u i the simulation string is (σ, τ ) := ((B 1 , B 2 , B T , F, ι 1 , p 1 , ι 2 , p 2 , ι T , p T , u, v), s, H 1 , . . . , H η ) ← S 1 (gk). Simulated proof: The input consists of gk, σ, a list of quadratic equations {(a i , b i , Γ i , t i )} N i=1 and a satisfying witness x, y. Rewrite the equations as a i • y + x • b i + f (φ, -t i ) + x • Γ i y = 0. Define x := 0, y := 0 and φ = 0 to get a witness that satisfies all equations.</p><p>Pick at random R ← Mat m× m (R) and S ← Mat n× n (R) and commit to all the variables as c := 0 + Ru and d := 0 + Sv. We also use c := ι 1 (1) = ι 1 (0) + m i=1 s i u i and append it to c. For each modified equation (a i , b i , -t i , Γ i , 0) make a proof as described in Section 5. Return the simulated proof {(c, d, π i , θ i )} N i=1 . We prove in the full paper <ref type="bibr" target="#b27">[28]</ref> that this construction gives us a perfect NIZK proof. Theorem 5. The NIWI proof from Section 6 with the simulator described above is a composable NIZK proof for satisfiability of pairing product equations with perfect completeness, soundness and composable zero-knowledge, when A 1 = R and the commitment in B 1 can be trapdoor opened.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">NIZK Proofs for Bilinear Groups</head><p>Let us return to the four types of quadratic equations given in Figure <ref type="figure">1</ref>. If we set up the common reference string such that we can trapdoor open respectively ι 1 (1) and ι 2 <ref type="bibr" target="#b0">(1)</ref> to 0 Z n then multi-scalar multiplication equations and quadratic equations in Z n are of the form for which we can give zero-knowledge proofs (at no additional cost).</p><p>In the case of pairing product equations we do not know how to get zero-knowledge, since even with the trapdoors we may not be able to compute a satisfiability witness. We do observe though that in the special case, where all t T = 1 the choice of X = O, Y = O is a satisfactory witness. Since we also use X = O, Y = O in the other zero-knowledge proofs, the simulator can use this witness and give a NIWI proof. In the special case where all t T = 1 we can therefore make NIZK proofs for satisfiability of the set of pairing product equations.</p><p>Next, let us look at the case where we have a pairing product equation with t T = n i=1 e(P i , Q i ) for some known P i , Q i . In this case, we can add linear equations Z i = P i to the set of multi-scalar multiplication equations in G 1 . We already know that such equations have zero-knowledge proofs. We can now rewrite the pairing product equation as</p><formula xml:id="formula_37">(A • Y)(X • B)(Z • Q)(X • Γ Y) = 1.</formula><p>We can therefore also make zero-knowledge proofs if all the pairing product equations have t T of the form t T = n i=1 e(P i , Q i ) for some known P i , Q i . The case of pairing product equations points to a couple of differences between witness-indistinguishable proofs and zero-knowledge proofs using our techniques. NIWI proofs can handle any target t T , whereas zero-knowledge proofs can only handle special types of target t T . Furthermore, if t T = 1 the size of the NIWI proof for this equation is constant, whereas the NIZK proof for the same equation may be larger.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Variables:</head><label></label><figDesc>X1, . . . , Xm ∈ G1 , Y1, . . . , Yn ∈ G2 , x1, . . . , x m , y1, . . . , y n ∈ Zn. a Pairing product equation: , Yj)γ ij = tT , for constants Ai ∈ G1, Bi ∈ G2, tT ∈ GT , γij ∈ Zn.Multi-scalar multiplication equation in G1:for constants Ai, T1 ∈ G1 and bi, γij ∈ Zn. b Multi-scalar multiplication equation in G2:for constants Bi, T2 ∈ G2 and ai, γij ∈ Zn.Quadratic equation in Zn:for constants ai, γij, t ∈ Zn.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>y) = xy mod n and we can rewrite the quadratic equation in Z n as a • y + x • b + x • Γ y = t.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>i=1 and a satisfying witness x ∈ A m 1 , y ∈ A n 2 .</head><label>12</label><figDesc>Pick at random R ← Mat m× m (R) and S ← Mat n× n (R) and commit to all the variables as c := x + Ru and d := y + Sv.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>2 , G T are descriptions of cyclic groups of order n. -The elements P 1 , P 2 generate G 1 and G 2 respectively. -e : G 1 × G 2 is a non-degenerate bilinear map so e(P 1 , P 2 ) generates G T and for all a, b ∈ Z n we have e(aP 1 , bP 2 ) = e(P 1 , P 2 ) ab . -We can efficiently compute group operations, compute the bilinear map and decide membership.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>1 ) ⊆ u 1 , . . . , u m , ι 2 (G 2 ) ⊆ v 1 , .. . , v n and H 1 , . . . , H η generate all matrices H so u • Hv = 0, all satisfying witnesses x, y, R, S yield proofs π ∈ v 1 , . . . , v n m and θ ∈ u 1 , . . . , u m n that are uniformly distributed conditioned on the verification equation ι 1</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>, B 2 , B T , F, ι 1 , p 1 , ι 2 , p 2 , ι T , p T , u, v, H 1 , . . . , H η ) ← K(gk). , B 2 , B T , F, ι 1 , p 1 , ι 2 , p 2 , ι T , p T , u, v, H 1 , . . . , H η ) ← S(gk). Proof: The input consists of gk, σ, a list of quadratic equations {(a i , b i , Γ i , t i )} N</figDesc><table><row><cell>Soundness string:</cell></row><row><cell>σ := (B 1 Witness-Indistinguishability String:</cell></row><row><cell>σ := (B 1</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>N. Smart (Ed.): EUROCRYPT 2008, LNCS 4965, pp. 415-432, 2008. c International Association for Cryptologic Research 2008</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>We remark that in the cryptographic literature it is more common to use multiplicative notation for these groups, since the "discrete log problem" is believed to be hard in these groups, which is also important to us. In our setting, however, it will be much more convenient to use multiplicative notation to refer to the action of the bilinear map.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>We use multiplicative notation here, because, usually GT is written multiplicatively in the literature. When we work with the abstract modules, however, we will use additive notation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>In the full paper<ref type="bibr" target="#b27">[28]</ref>, we also consider the case where ι • p is not the identity. In particular, in the instantiation based on the subgroup decision problem, ι • p is the projection on the order p subgroup of G.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>The map p is not efficiently computable. However, one can imagine scenarios where a secret key will make p efficiently computable making the commitment scheme a cryptosystem with p being the decryption operation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_5"><p>The number of matrices H1, . . . , Hη depends on the concrete setting. In many cases, we need no matrices at all and we have η = 0, but there are also cases where they are needed.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We gratefully acknowledge Brent Waters for a number of helpful ideas, comments, and conversations related to this work. In particular, our module-based approach can be seen as formalizing part of the intuition expressed by Waters that the Decisional Linear Assumption, Subgroup Decision Assumption in composite-order groups, and SXDH can typically be exchanged for one another. (We were inspired by previously such connections made by <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b35">36]</ref>.) It would be interesting to see if this intuition can be made formal in other settings, such as Traitor Tracing <ref type="bibr" target="#b11">[12]</ref> or Searchable Encryption <ref type="bibr" target="#b12">[13]</ref>. We also thank Dan Boneh for his encouragement and for suggesting using our techniques to get fair exchange.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Correlation-resistant storage via keyword-searchable encryption</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ballard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>De Medeiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Monrose</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/2005/417" />
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2005">2005/417. 2005</date>
		</imprint>
	</monogr>
	<note>Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The pairing-based crypto lounge</title>
		<author>
			<persName><forename type="first">P</forename><surname>Barreto</surname></persName>
		</author>
		<ptr target="http://paginas.terra.com.br/informatica/paulobarreto/pblounge.html" />
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Non-interactive anonymous credentials</title>
		<author>
			<persName><forename type="first">M</forename><surname>Belenkiy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chase</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kohlweiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lysyanskaya</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/2007/384" />
	</analytic>
	<monogr>
		<title level="m">PACS 2000</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Non-interactive zero-knowledge and its applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC</title>
		<imprint>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="103" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Personal communication</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Efficient selective-id secure identity-based encryption without random oracles</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2004</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Cachin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Camenisch</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3027</biblScope>
			<biblScope unit="page" from="223" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Secure identity based encryption without random oracles</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2004</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3152</biblScope>
			<biblScope unit="page" from="443" to="459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Short group signatures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2004</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3152</biblScope>
			<biblScope unit="page" from="41" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Public key encryption with keyword search</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Di Crescenzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ostrovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Persiano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2004</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Cachin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Camenisch</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3027</biblScope>
			<biblScope unit="page" from="506" to="522" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Identity-based encryption from the Weil pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Franklin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="586" to="615" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Evaluating 2-DNF formulas on ciphertexts</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E.-J</forename><surname>Goh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nissim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TCC 2005</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Kilian</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3378</biblScope>
			<biblScope unit="page" from="325" to="341" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Fully collusion resistant traitor tracing with short ciphertexts and private keys</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Vaudenay</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4004</biblScope>
			<biblScope unit="page" from="573" to="592" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Compact group signatures without random oracles</title>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Vaudenay</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4004</biblScope>
			<biblScope unit="page" from="427" to="444" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Full-domain subgroup hiding and constant-size group signatures</title>
		<author>
			<persName><forename type="first">X</forename><surname>Boyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
		<ptr target="http://www.cs.stanford.edu/∼xb/pkc07/" />
	</analytic>
	<monogr>
		<title level="m">PKC 2007</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Okamoto</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4450</biblScope>
			<biblScope unit="page" from="1" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Ring signatures of sub-linear size without random oracles</title>
		<author>
			<persName><forename type="first">N</forename><surname>Chandran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP 2007</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Arge</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Cachin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Jurdziński</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Tarlecki</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4596</biblScope>
			<biblScope unit="page" from="423" to="434" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Non-interactive circuit based proofs and non-interactive perfect zero-knowledge with proprocessing</title>
		<author>
			<persName><forename type="first">I</forename><surname>Damgård</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 1992</title>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Rueppel</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="volume">658</biblScope>
			<biblScope unit="page" from="341" to="355" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Randomness-optimal characterization of two NP proof systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>De Santis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Di Crescenzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Persiano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RANDOM 2002</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">D P</forename><surname>Rolim</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Vadhan</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2483</biblScope>
			<biblScope unit="page" from="179" to="193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Non-malleable cryptography</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dolev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="391" to="437" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multiple non-interactive zero knowledge proofs under general assumptions</title>
		<author>
			<persName><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lapidot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Easy decision Diffie-Hellman groups</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Galbraith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Rotger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">London Mathematical Society Journal of Computation and Mathematics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="201" to="218" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The knowledge complexity of interactive proofs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rackoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Computing</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="186" to="208" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Attribute-based encryption for fine-grained access control of encrypted data</title>
		<author>
			<persName><forename type="first">V</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Pandey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>ACM CCS</publisher>
			<biblScope unit="page" from="89" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Simulation-sound NIZK proofs for a practical language and constant size group signatures</title>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<ptr target="http://www.brics.dk/∼jg/NIZKGroupSignFull.pdf" />
	</analytic>
	<monogr>
		<title level="m">EKAW 2006. LNCS (LNAI)</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Staab</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">V</forename><surname>Svátek</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4248</biblScope>
			<biblScope unit="page" from="444" to="459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Fully anonymous group signatures without random oracles</title>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<ptr target="http://www.brics.dk/∼jg/CertiSignFull.pdf" />
	</analytic>
	<monogr>
		<title level="m">ASIACRYPT 2007</title>
		<editor>
			<persName><forename type="first">K</forename><surname>Kurosawa</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4833</biblScope>
			<biblScope unit="page" from="164" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A non-interactive shuffle with pairing based verifiability</title>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASIACRYPT 2007</title>
		<editor>
			<persName><forename type="first">K</forename><surname>Kurosawa</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4833</biblScope>
			<biblScope unit="page" from="51" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Non-interactive zaps and new techniques for NIZK</title>
		<author>
			<persName><forename type="first">Ostrovsky</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO 2006</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4117</biblScope>
			<biblScope unit="page" from="97" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Perfect non-interactive zero-knowledge for NP</title>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ostrovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2006</title>
		<editor>
			<persName><forename type="first">S</forename><surname>Vaudenay</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4004</biblScope>
			<biblScope unit="page" from="339" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Efficient non-interactive proof systems for bilinear groups</title>
		<author>
			<persName><forename type="first">J</forename><surname>Groth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/2007/155" />
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2007">2007/155 (2007</date>
		</imprint>
	</monogr>
	<note>Report</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">An efficient noninteractive zero-knowledge proof system for NP with general assumptions</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Petrank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="27" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Simple and fast optimistic protocols for fair electronic exchange</title>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PODC</title>
		<imprint>
			<biblScope unit="page" from="12" to="19" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Cryptography from pairings</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Paterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Elliptic Curve Cryptography</title>
		<title level="s">London Mathematical Society Lecture Note Series</title>
		<editor>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Blake</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Seroussi</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><forename type="middle">P</forename><surname>Smart</surname></persName>
		</editor>
		<meeting><address><addrLine>Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">317</biblScope>
			<biblScope unit="page" from="215" to="251" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Fuzzy identity-based encryption</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EURO-CRYPT 2005</title>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">J F</forename><surname>Cramer</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3494</biblScope>
			<biblScope unit="page" from="457" to="473" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Authenticated ID-based key exchange and remote log-in with simple token and PIN number</title>
		<author>
			<persName><forename type="first">M</forename><surname>Scott</surname></persName>
		</author>
		<ptr target="http://eprint.iacr.org/2002/164" />
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<biblScope unit="issue">164</biblScope>
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Evidence that XTR is more secure than supersingular elliptic curve cryptosystems</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Verheul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="277" to="296" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Efficient identity-based encryption without random oracles</title>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT 2005</title>
		<editor>
			<persName><forename type="first">R</forename><forename type="middle">J F</forename><surname>Cramer</surname></persName>
		</editor>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3494</biblScope>
			<biblScope unit="page" from="114" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">New techniques for slightly 2-homomorphic encryption</title>
		<author>
			<persName><forename type="first">B</forename><surname>Waters</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>Manuscript</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
