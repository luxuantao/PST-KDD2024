<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Hongbo</forename><surname>Zhu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Ministry of Education</orgName>
								<orgName type="laboratory">Key Laboratory of Broadband Wireless Communication and Sensor Network Technique</orgName>
								<orgName type="institution">Nanjing University of Posts and Telecommunications</orgName>
								<address>
									<postCode>210003</postCode>
									<settlement>Nanjing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A0DE617B332964D512BB3174F9B79561</idno>
					<idno type="DOI">10.1109/JIOT.2017.2773489</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Abstract-Network virtualization (NV) is a promising approach to remove the ossification of current Internet. Virtual network embedding (VNE) is the key issue in NV which efficiently and effectively maps various of virtual networks (VNs), with different node and link resource requests, onto the shared substrate network(s) with finite underlying resources. Previous VNE algorithms in the literature are mostly heuristic. Single network topology attribute and each node's local resources are assisted to rank nodes in most heuristic algorithms, leading to inefficient resource utilization of substrate network in the long run. To deal with this issue, we propose the network topology attribute and network resource-considered algorithm (VNE-NTANRC). The VNE-NTANRC algorithm adopts a novel node-ranking approach to rank all substrate and virtual nodes before embedding each given VN. The novel node-ranking approach has two subapproaches and considers five important network topology attributes and global network resources altogether. One subapproach is able to calculate all node values (NoV) directly. The other subapproach, stimulating from the Google PageRank website algorithm, enables to calculate NoVs in a stable state. Simulation results reveal that VNE-NTANRC algorithm outperforms typical and latest heuristic algorithms, only considering single network topology attribute and local resources.</p><p>Index Terms-Global network resource, network topology attribute, network virtualization (NV), node-ranking approach, stable state, virtual network embedding (VNE).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>O VER the past decade, Internet has been growing expo- nentially with larger number of nodes and end users, higher volume of traffic, and more varieties of applications. However, the network ossification of Internet exists along with the rapid growth <ref type="bibr" target="#b0">[1]</ref>. Current Internet is impeded to further develop <ref type="bibr" target="#b1">[2]</ref>. Network virtualization (NV) has been proposed and attracted intensive attention from both academic <ref type="bibr" target="#b2">[3]</ref> and industry <ref type="bibr" target="#b3">[4]</ref> in recent years. It is considered as a promising solution for the future network and works as a key enabler for the emerging Cloud Computing <ref type="bibr" target="#b4">[5]</ref> and smart IoT <ref type="bibr" target="#b5">[6]</ref>. NV is able to provision various isolated virtual networks (VNs) coexisted on substrate network(s) for sharing underlying physical computing and networking resources simultaneously and seamlessly.</p><p>In NV environment, a VN is a logical topology consisting of a set of virtual nodes (e.g., virtual routers and hosts) interconnected by corresponding virtual links. A shared substrate network (SN) is composed of many substrate nodes (e.g., routers and switches) and substrate links (coaxial cable or optical fiber) with its specific topology. In NV, the universal business model <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref> is that Internet service provider (SP) is decoupled into infrastructure providers (InPs) and SPs. InPs are responsible for managing and running underlying network infrastructures and resources. SPs can dynamically construct different VNs to fulfill different demands of end-users by renting underlying resources from the InPs. Embedding VNs, requested by different end-users, onto the shared substrate network(s) is known as VN embedding (VNE) in the literature. To different goals, the optimal embedding of each given VN is different.</p><p>While in this paper, minimization of total VNs embedding cost and maximization of VN acceptance ratio are taken into account. The basic network scenario, embedding several proposed VNs onto one shared SN in a continuous time event, is considered in this paper. One shared SN is also called as single domain in VNE research area <ref type="bibr" target="#b6">[7]</ref>. The survivability of each mapped VN (remain VN operational in case any substrate node/link fails) is not considered in this paper. The entire SN is assumed to be operational all the time.</p><p>Relevant VNE surveys <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref> have been conducted in the literature. VNE problem has proven to be a NP-hard problem <ref type="bibr" target="#b8">[9]</ref>. VNE algorithms are classified into two categories: 1) the exact <ref type="bibr" target="#b7">[8]</ref> and 2) the heuristic <ref type="bibr" target="#b6">[7]</ref>. Though VNE exact algorithms enable to ensure an optimal or near-optimal embedding of each given VN in small-scaled network scenarios <ref type="bibr" target="#b7">[8]</ref>, the computational complexity is very large in a discrete time event <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b11">[12]</ref>, not to mention medium or large-sized network scenario in a continuous time event. Therefore, it is impractical to adopt exact algorithms to embed VNs in continuous time event. Other exactlike algorithms <ref type="bibr" target="#b12">[13]</ref>- <ref type="bibr" target="#b14">[15]</ref> have to relax integer constraints 2327-4662 c 2017 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.</p><p>See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p><p>or use column generation approach to achieve a feasible VN embedding in polynomial time. Strictly speaking, these exact-like algorithms <ref type="bibr" target="#b12">[13]</ref>- <ref type="bibr" target="#b14">[15]</ref> belong to the heuristic category. Therefore, it is of great importance to develop heuristic algorithms. Many typical heuristic algorithms <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b22">[23]</ref> have been proposed over the past years. These heuristic algorithms all conduct the embedding of each given VN in two stages: 1) node embedding stage and 2) link embedding stage. However, these algorithms conduct the node embedding only based on single topology attribute (e.g., node degree or node strength) and local network resources (e.g., the nodes' capacity resources or the product of nodes' capacity resources and their adjacent link bandwidths). Another two latest heuristic algorithms <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref> take global network resource into consideration in the node embedding stage. However, just over-simplified global resource metrics (e.g., the global node capacity ratio) are used. In addition, the benefits of considering global resources are not fully explored in these algorithms, not to mention benefits of considering multiple topology attributes simultaneously in embedding VNs.</p><p>In this paper, network topology attribute and network resource-considered algorithm, labeled as VNE-NTANRC, is proposed to deal with VNE problem in a continuous time event. The goals of VNE-NTANRC are to help the InP to minimize VN request (VNR) embedding cost and maximize VNR acceptance ratio in the long term. When embedding one VNR each time, the VNE-NTANRC adopts a novel node-ranking approach to rank all substrate nodes and virtual nodes ahead, according to five essential topology attributes and global network resources. The novel noderanking approach consists of two different subapproaches. One subapproach is able to calculate all node values (NoVs) directly. Corresponding subalgorithm is labeled as VNE-NTANRC-D. The other subapproach, stimulating from the PageRank approach in Web-searching area <ref type="bibr" target="#b23">[24]</ref>- <ref type="bibr" target="#b25">[26]</ref>, is able to calculate all NoVs in a stable state. Corresponding subalgorithm is labeled as VNE-NTANRC-S. The greedy node embedding approach, based on the novel node-ranking values, is then performed, with fulfilling the node constraints (virtual node location and virtual node capacity demands are considered). When the node mapping is accomplished, the following link embedding is implemented with the shortest-path algorithm (virtual link bandwidth requirement and virtual link propagation delay demand are considered). To validate the efficiency of VNE-NTANRC algorithm, a comprehensive simulation is implemented. Numerical simulation results reveal that our proposed VNE-NTANRC algorithm performs better than five latest representative heuristic algorithms, which only consider single topology attribute and local network resources to rank (substrate/virtual) nodes, in terms of average VNR acceptance ratio and average revenue to cost ratio. Average node and link utilization are also illustrated to prove the efficiency of VNE-NTANRC.</p><p>Overall, main contributions of this paper are listed out as follows.</p><p>1) A novel node-ranking approach is proposed with considering five network topology attributes and global network resources. The novel node-ranking approach consists of two subapproaches. One subapproach is able to calculate all NoVs directly. The other subapproach, stimulating from the well-known PageRank method <ref type="bibr" target="#b22">[23]</ref>- <ref type="bibr" target="#b24">[25]</ref>, is to calculate all NoVs in a stable state. The novel node-ranking approach is different from the previous node-ranking approaches <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b22">[23]</ref>. 2) Heuristic algorithm VNE-NTANRC, made up of VNE-NTANRC-D and VNE-NTANRC-S subalgorithms, is proposed based on the novel node-ranking approach. The number of node-link constraints considered in VNE-NTANRC is up to four (node location, node capacity, link bandwidth and link propagation delay) while previous VNE heuristic algorithms only consider two (node capacity and link bandwidth). The node location and link propagation delay have not been considered as node-link constraints in previous VNE algorithms. With the increasing of delay sensitive services <ref type="bibr" target="#b30">[31]</ref>- <ref type="bibr" target="#b32">[33]</ref> on the network, smaller and guaranteed transmission delay is needed for this kind of new services. We add the link propagation delay as a node-link constraint to VNE-NTANRC algorithm, so as to the mapped VN provides delay guaranteed services to meet future service requirements. 3) Comprehensive simulation is implemented in our selfdeveloped simulation platform <ref type="bibr" target="#b39">[40]</ref> in order to validate the advantage of VNE-NTANRC algorithm.</p><p>Five typical and latest heuristic algorithms are selected for performance comparison. Simulation results vividly show that VNE-NTANRC algorithm outperforms selected heuristic algorithms in several metrics. The rest of this paper is organized as follows. Section II introduces the related work. Section III presents the VNE description. In Section IV, our VNE-NTANRC algorithm is detailed, two subalgorithms of VNE-NTANRC included. The computation complexity analysis is also conducted. Simulation work is implemented in Section V. Section VI presents the conclusion and our future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>VNE is formulated as an unsplittable flow problem <ref type="bibr" target="#b36">[37]</ref>, which is NP-hard <ref type="bibr" target="#b6">[7]</ref>. Previous researches focus on evaluating different VNE algorithms' abilities of batching processing given VNs in a discrete time event (e.g., <ref type="bibr" target="#b9">[10]</ref> and <ref type="bibr" target="#b10">[11]</ref>) and finding out the optimal embedding of each given VN. However, VNE is an online problem and tries to embed proposed VNRs efficiently and dynamically in real networking. Therefore, we need to design heuristic VNE algorithm,compromising the global optimality for a short execution time. Based on these backgrounds, this section discusses algorithms that are related to VNE-NTANRC algorithm. Any reader who has great interest in other VNE issues, such as multiple-domain VNE <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b43">[44]</ref>, VN survivability <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b41">[42]</ref>, <ref type="bibr" target="#b42">[43]</ref>, and evaluating algorithms in a discrete time event, can refer to <ref type="bibr" target="#b6">[7]</ref> and <ref type="bibr" target="#b7">[8]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Typical and Related Heuristic Algorithms</head><p>In <ref type="bibr" target="#b15">[16]</ref>, a typical heuristic algorithm, proposed by Yu et al., applies the greedy method to implement the virtual node mapping in the first step. Dijkstra's algorithm and multicommodity flow approach <ref type="bibr" target="#b37">[38]</ref> are then used to deal with the link mapping. Before conducting the greedy node mapping, a traditional node-ranking approach is used to rank all substrate nodes and virtual nodes. Node-ranking value of each node is simply determined by the product of node capacity and all its adjacent link bandwidth. The direct node-ranking value is enable to indicate the embedding ability of the corresponding node, to some degree. Virtual nodes are embedded onto the substrate nodes by processing the two sorted node lists. Therefore, the virtual node with the highest node-ranking value among the remaining ones of the VNR will always be embed onto the substrate node that also has the highest node-ranking value among the remaining substrate ones, whose available resource fulfills the VNR demands (only node capacity is considered in <ref type="bibr" target="#b15">[16]</ref>). Yu et al. also introduced the concept of path splitting to accept more proposed VNRs and relieve substrate link loading. However, this algorithm will lead to a level of resource fragmentation that is unfeasible for accepting VNRs with large sizes. The reason for resource fragmentation is the inefficient node-ranking approach. In addition, only constraints of node capacity and link bandwidth are considered in <ref type="bibr" target="#b15">[16]</ref>.</p><p>Cheng et al. <ref type="bibr" target="#b16">[17]</ref> proposed another topology-aware node mapping approach that uses the Markov Random Walk Model to measure the node capacity and its joint link bandwidth. Stimulating from the PageRanking algorithm, steady state node-ranking values of a network is able to be calculated through a classic iterative scheme. The steady state noderanking values are then adopted in the greedy node mapping. The virtual links, whether splittable or unsplittable, are then mapped to substrate network either using the k-shortest path or multicommodity flow method. However, the VN embedding approach proposed in <ref type="bibr" target="#b16">[17]</ref> still leads to the problem of resource fragmentation and inefficient substrate utilization in the long term. The cause of this problem lies to the fact that the node-ranking approach of <ref type="bibr" target="#b16">[17]</ref> only considers one node capacity and all its adjacent link bandwidth. Other topology attributes and global network resources (e.g., node location) are still not considered in the node-ranking approach. Gong et al. <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref> conducted the similar node-ranking approach and lead to the same problem, as described in <ref type="bibr" target="#b16">[17]</ref>, too. In addition, Cheng et al. <ref type="bibr" target="#b16">[17]</ref> also used the same topologyaware node mapping approach to deal with the energy-aware VNE problem <ref type="bibr" target="#b17">[18]</ref> while the VNE energy-aware problem has nothing to do with the scope of this paper.</p><p>Feng et al. <ref type="bibr" target="#b18">[19]</ref> introduced several different topology attributes and proposes three different node-ranking approaches. However, these three node-ranking methods are still simply determined by the product of node capacity, total link bandwidth and intermediate nodes, similar to <ref type="bibr" target="#b15">[16]</ref>. Steady state node-ranking values of a substrate / VN are not calculated in <ref type="bibr" target="#b18">[19]</ref>. All substrate nodes and virtual nodes of one VNR are then ranked in decreasing order, according to the direct product values. The virtual node with the highest noderanking value among the remaining ones of the same VNR will always be embed onto the substrate node that also has the highest node-ranking value among the remaining substrate ones, whose available resource meets the VNR demands. Greedy method is adopted to implement the virtual node mapping in the following step. Dijkstra's algorithm is then used to deal with the link mapping. Path splitting is not considered in <ref type="bibr" target="#b18">[19]</ref>. Feng et al. <ref type="bibr" target="#b18">[19]</ref> do not explored the benefit of the global resource information in VNE, either. Thus, leading to inefficient substrate resource usage. In addition, only node capacity and link bandwidth constraints are considered in embedding each given VNR <ref type="bibr" target="#b18">[19]</ref>.</p><p>Zhang et al. <ref type="bibr" target="#b19">[20]</ref> proposed another heuristic VNE algorithm to deal with VNE problem. The main highlight of <ref type="bibr" target="#b19">[20]</ref> is the proposed node-ranking approach. The node-ranking approach is based on the node degree and the clustering coefficient information. The technique of node importance metric is adopted in <ref type="bibr" target="#b19">[20]</ref> to rank the substrate nodes, aiming to select the node with the most embedding potential for every virtual node in each VNR. The greedy node mapping follows after the noderanking approach. In the link mapping stage, the k-shortest path is adopted, same to the above references. However, <ref type="bibr" target="#b19">[20]</ref> only considers the local resources of nodes and its neighborhood nodes, ignoring other topological attributes and global network resources, and leads to lower resource utilization of the substrate network in the long run.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Representative and Related Exact-Like VNE Algorithms</head><p>In VNE research area, some researchers also turn to studying the exact-like algorithm <ref type="bibr" target="#b7">[8]</ref> to find the optimal embedding per VN in discrete time event. VNE problem is NP-complete in several VNE cases. Software tools (GLPK <ref type="bibr" target="#b44">[45]</ref>, CPLEX <ref type="bibr" target="#b45">[46]</ref>), suitable model [relaxed linear programming (LP) model, restricted ILP model] <ref type="bibr" target="#b46">[47]</ref> and small-scaled network instances all contribute to solving each VN embedding in reasonable time. VNE exact-like algorithm is able to offer a benchmark for performance comparison with other heuristic algorithms. This section talks about some exact-like algorithms in the literature.</p><p>The algorithm proposed by <ref type="bibr" target="#b12">[13]</ref> is widely considered as a representative exact-like algorithm in VNE research area. Chowdhury et al. <ref type="bibr" target="#b12">[13]</ref> first solved the VNE problem by applying the mixed integer programming (MIP) model of the optimization theory. Due to the complexity of using MIP to directly solve a medium-sized network, Chowdhury et al. has to modify the MIP model into an LP model and relaxes the integer constraints. Chowdhury et al. used the LP model to solve the virtual node mapping. If the solution of LP model is feasible, the virtual links are assigned to corresponding substrate paths by using Dijkstra's algorithm <ref type="bibr" target="#b37">[38]</ref> or multicommodity flow approach. Though the authors coordinate node and link mapping, <ref type="bibr" target="#b12">[13]</ref> is not an efficient and effective VNE algorithm, in terms of average VNR acceptance ratio in the long term. In addition, node-link constraints conducted are only node capacity and link bandwidth.</p><p>Mijumbi et al. <ref type="bibr" target="#b14">[15]</ref>, stimulating from <ref type="bibr" target="#b13">[14]</ref>, is another variation of <ref type="bibr" target="#b12">[13]</ref> to solve the VNE problem. Constraints considered are same to what are considered in <ref type="bibr" target="#b12">[13]</ref>. In the first step, <ref type="bibr" target="#b14">[15]</ref> formulates the VNE problem by using the pure MIP model <ref type="bibr" target="#b12">[13]</ref>. Relaxing the binary variables to take on continuous values, the MIP model is relaxed into LP model. With solving the LP model and getting the node mapping done, the shortest path is selected again <ref type="bibr" target="#b37">[38]</ref>. These procedures are same to what are described in <ref type="bibr" target="#b12">[13]</ref>. The authors then derive the corresponding dual MIP model. The dual model is used to ensure the selected paths legitimate. The VN assignment which consumes less substrate resources is preferred. The execution time decreases a lot, comparing with the pure MIP model. This exact algorithm also improves the VNR acceptance ratio in the long term when comparing with the heuristics <ref type="bibr" target="#b12">[13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Brief Summary</head><p>To summarize, because of VNE problem being NPhard, VNE algorithms in the literature are mostly heuristic. Remaining algorithms are exact and usually solve VNE problem by using optimization theory approach <ref type="bibr" target="#b46">[47]</ref>. However, exact algorithms usually have large computational complexity and cannot be promoted to embedding VNRs in a continuous time event, comparing with the heuristics (Section II-A). Therefore, it is important to develop VNE heuristic algorithms. The heuristics solve the VNE problem in two separate stages, using greedy method or relaxed LP model in node mapping stage and optimizing the link mapping by Dijkstra's algorithm <ref type="bibr" target="#b38">[39]</ref> or multicommodity flow approach. Therefore, it is important to propose an efficient node-ranking approach before conducting node mapping. In addition, only node capacity and link bandwidth requirements are considered in previous VNE research. Other node-link constraints have not been considered.</p><p>The VNE-NTANRC algorithm, proposed in this paper, differs from previous heuristic algorithms in four main aspects. First of all, the algorithm VNE-NTANRC adopts a novel noderanking approach to rank all substrate nodes and virtual nodes before conducting the embedding of given VNR. The novel node-ranking approach takes five different topology attributes and global network resources into consideration. Previous heuristic algorithms only consider one topology attribute (e.g., node degree or node strength) and local network resource (e.g., the product of one node capacity and sum of node's all adjacent link bandwidth) to rank all nodes of the given network. These universal node-ranking approaches <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b21">[22]</ref> increases the possibility of selecting a node with sufficient node capacity but insufficient link bandwidth. The inverse illustration is presented in Fig. <ref type="figure" target="#fig_0">1</ref>. Node 1's product is [80 * (10 + 10)], while the node 2's product is [40 * (25 + 10 + 4)]. Node 1's product is higher than node 2's product. Nevertheless, the node 1 is preferred by using the universal node-ranking approach, giving a virtual node requiring 20 node capacity and 15 link bandwidth. Thus, leads to a failure in link mapping. Therefore, more topology characteristics are required to be utilized to eliminate the flaws of universal node-ranking approach.</p><p>Second, the VNE-NTANRC coordinates the node and link mapping to achieve a better embedding of each VNR, comparing with the heuristics. The node mapping is an important stage in VNE since it determines the efficiency of the link mapping. Coordinating and designing effective node-ranking approach will contribute to better resource utilization <ref type="bibr" target="#b12">[13]</ref> and efficient link mapping. Next, apart from the universal constraints of node capacity and link bandwidth, virtual node location and virtual link propagation delay are also added as node-link constraints to be considered in running the VNE-NTANRC. Particularly, the virtual link propagation delay is considered as a constraint for the first time in VNE area. With the increasing of delay sensitive services on the network, guaranteed transmission delay is needed. The propagation delay constraint in VNE-NTANRC aims to offer delay guaranteed VNR to meet future service requirements <ref type="bibr" target="#b30">[31]</ref>- <ref type="bibr" target="#b32">[33]</ref>. Finally, we implement a comprehensive simulation against typical heuristic algorithms. The efficiency of VNE-NTANRC is validated in Section V.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. VNE DESCRIPTION</head><p>This section describes the VNE, including substrate and VN (request) models, VN embedding stages and main evaluation metrics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. VNE Network Model</head><p>1) Substrate Network: The substrate network (SN) in VNE is usually modeled as a weighted graph G S = (N S , L S ), where N S is the set of all substrate nodes (e.g., routers) and L S is the set of all substrate links (e.g., coaxial cable). Each substrate node m ∈N S is characterized by its node capacity, C S m , and the node location, loc(m). The node capacity of node m, C S m , is also called as node computing ability in other VNE papers <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b22">[23]</ref>. For simplicity, we call this type of node resource as "node capacity" generally. The location of substrate node m, loc(m), is defined by x and y coordinates in this paper. With respect to substrate links, each substrate link mn has a finite bandwidth B S mn and a substrate link propagation delay D S mn . The set of all loop-free substrate paths is denoted by notation P S . P S mn is the set of all loop-free paths between substrate nodes m and n. P mn is one path selected from the mn path set P S mn . The lower part of Fig. <ref type="figure" target="#fig_1">2</ref> is one substrate network. The numbers over the links are available link bandwidth and numbers in rectangles are available node capacity. For simplicity, the location of each substrate node and link propagation delay of each substrate link are omitted in this figure . 
2) Virtual Network Request: In VNE research area, each VN is modeled as a weighted graph G V = (N V , L V ), where N V is the set of all virtual nodes and L V is the set of all virtual links. Each virtual node M is characterized by its required node capacity, C V M , and its required virtual node location, Loc(M). The allowed maximum deviation of virtual node M is LR(M).</p><p>The deviation of one virtual node M and one of its potential candidate substrate node m must be within the maximum deviation LR(M). With respect to virtual links, each virtual link MN has a required bandwidth B V MN and required virtual link propagation delay D V MN . With adding the time attributes (maximum waiting time, arriving time, and duration time, leaving time), a VN is extended to be a VNR. In VNE, time attributes are main differences between VN and VNR. The upper part of Fig. <ref type="figure" target="#fig_1">2</ref> shows two VNRs with different topologies. The numbers over the links are required link bandwidth and the numbers in rectangles are node capacity demand. For simplicity, all nodes' location requirements, required virtual links' propagation delay and time attributes of each VNR are omitted either.</p><p>3) VNE Notations: Main notations used throughout this paper are listed in Table <ref type="table">I</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. VNR Embedding and Evaluation Metrics</head><p>Upon the arrival of a VNR, the substrate network has to decide whether to accept the VNR or not. If the VNR is accepted, the substrate network must allocate the demanded network resources to embed the VNR, including fulfilling node-link requests, according to the VNE-NTANRC algorithm. Allocated network resources are released upon the expiration of VNR.</p><p>The embedding of each VNR consists of two main stages: 1) the stage dealing with the embedding of virtual nodes and 2) the stage ensuring the embedding of virtual links.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Node Embedding Stage:</head><p>To each VNR, each virtual node must be assigned to a different substrate node of the SN. This does benefit to the flexibility and manageability of SN. The assignments of all virtual nodes in one VNR are determined by the node-mapping function F N ( ) : where (1) aims to ensure that node capacity demand of virtual node M must not exceed the available node capacity of the selected substrate node F N (M) that accommodates the virtual node M; <ref type="bibr" target="#b1">(2)</ref> aims to ensure that the deviation relationship between the virtual node M and the selected substrate node F N (M) must be within the required radius LR(M) of virtual node M. R S (F N (M)) represents the available node capacity of substrate node F N (M). Both two formulas must be fulfilled simultaneously in the node embedding stage. As illustrated by Fig. <ref type="figure" target="#fig_1">2</ref>, the node embedding result of virtual nodes of VNR1 is {A → b, B → a, C → c}.</p><formula xml:id="formula_0">N V → N S F N (M) ∈ N S F N (M) = F N (N), if and only if M = N subject to C V M ≤ R S (F N (M)) (1) Dis(loc(F N (M)), Loc(M)) ≤ LR(M)<label>(2)</label></formula><p>2) Link Embedding Stage: Each virtual link of the same VNR is mapped onto a single substrate path in this paper between the corresponding substrate nodes that host two end virtual nodes. In this paper, path splitting <ref type="bibr" target="#b26">[27]</ref> cases are not considered. The link embedding is performed according to a link-mapping function F L ( ) : L V → P S for all virtual links per VNR subject to</p><formula xml:id="formula_1">F L (M, N) ⊆ P S (F N (M), F N (N))</formula><formula xml:id="formula_2">B V MN ≤ R S P F N (M)F N (N)<label>(3)</label></formula><formula xml:id="formula_3">V MN ≤ D S P F N (M)F N (N)<label>(4)</label></formula><p>where (3) aims to ensure that link bandwidth demand of any virtual link MN must not exceed the available bandwidth of one selected substrate path that accommodates virtual link MN. R S ( ) represents the available bandwidth of one selected substrate path in <ref type="bibr" target="#b2">(3)</ref>. Formula (4) aims to ensure the substrate path propagation delay of one selected substrate path must not exceed the required virtual link propagation delay of virtual link MN D V MN . Both two formulas must be fulfilled simultaneously in the link embedding stage. As illustrated by Fig. <ref type="figure" target="#fig_1">2</ref>, the link embedding result of virtual links of VNR1 is {AB → ba, BC → ac}.</p><p>During the VNR embedding, both the node and link embedding must be fulfilled. Otherwise, the VNR embedding fails and the given VNR is rejected.</p><p>For better understanding of the VNR embedding, the embedding process of the VNR is depicted in Fig. <ref type="figure" target="#fig_2">3</ref>.</p><p>After successfully embedding one VNR, it is essential to define proper metrics so as to evaluate the selected embedding algorithm.</p><p>In this paper, a "pay-per-user" revenue model, on the basis of the "on-demand" cloud service price scheme by Amazon Web Services <ref type="bibr" target="#b27">[28]</ref>, is adopted to calculate the revenue of accepting a VNR. The revenue of a VNR is given by follows:</p><formula xml:id="formula_4">Rev G V T = Rev G V • T, if the G V is accepted 0, else.<label>(5)</label></formula><p>In ( <ref type="formula" target="#formula_4">5</ref>), T represents the duration time of the VNR G V . Similar to <ref type="bibr" target="#b15">[16]</ref>- <ref type="bibr" target="#b22">[23]</ref>, the per-unit revenue of a G V (Rev(G V )) is a linear function and is set to be the sum of all virtual node capacity and virtual link bandwidth. Weight factors (α and β) are used to balance different types of network resources. Formula ( <ref type="formula" target="#formula_5">6</ref>) is the per-unit revenue of the</p><formula xml:id="formula_5">G V Rev G V = α • M∈N V C V M + β • M∈L V B V MN . (<label>6</label></formula><formula xml:id="formula_6">)</formula><p>Though ( <ref type="formula" target="#formula_4">5</ref>) and ( <ref type="formula" target="#formula_5">6</ref>) give an insight into how much revenue can be earned by accepting a VN, it is useless without knowing the amount of consumed substrate resources. Therefore, <ref type="bibr" target="#b6">(7)</ref> gives the per-unit cost of embedding a VNR. Weight factors (γ and δ) are used to balance different types of network resources. H mn MN are the number of substrate links in substrate path mn for mapping the virtual link MN. With respect to the total cost of embedding VNR G V in a continuous time event, it is the product of its per-unit cost and VNR duration time <ref type="bibr" target="#b7">(8)</ref>, similar to the previous ( <ref type="formula" target="#formula_4">5</ref>)</p><formula xml:id="formula_7">Cos G V = γ • M∈N V C V M + η • MN∈L V mn∈P S mn H mn MN • B V MN (<label>7</label></formula><formula xml:id="formula_8">)</formula><formula xml:id="formula_9">Cos G V T = Cos G V • T, if the G V is accepted 0, else.<label>(8)</label></formula><p>The average VNR acceptance ratio is an important metric in VNE research. In this paper, it is determined by the number of successfully accepted VNRs VNR acc and the number of total proposed VNRs VNR tot in the continuous time event. It is defined in</p><formula xml:id="formula_10">A VN = VNR acc VNR tot . (<label>9</label></formula><formula xml:id="formula_11">)</formula><p>Other VNE metrics (e.g., average node / link utilization), plotted in the simulation section, are not carefully defined due to the limited page. Readers can refer to <ref type="bibr" target="#b6">[7]</ref> and <ref type="bibr" target="#b7">[8]</ref> for a detailed VNE metric definition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VNE-NTANRC ALGORITHM</head><p>The proposed VNE-NTANRC algorithm is detailed in this section. Five important network topology attributes, adopted in VNE-NTANRC, are introduced and quantified at first. Then the novel node-ranking approach is presented, which consists of two subapproaches. Next, the greedy node mapping is implemented based on the novel node-ranking approach. After completing the node mapping, the SP link mapping approach follows. In the last section, the time complexity of VNE-NTANRC is presented to prove that VNE-NTANRC algorithm can conduct each given VNR embedding in polynomial time. That is to say, VNE-NTANRC algorithm can be simulated in a continuous time event theoretically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Selected Network Topology Attributes</head><p>In this section, five fundamental topology attributes are introduced <ref type="bibr" target="#b28">[29]</ref>, <ref type="bibr" target="#b29">[30]</ref>. Drawn from <ref type="bibr" target="#b18">[19]</ref>, different topology attributes will have different critical effects on the embedding of each VNR. Each topology attribute enables to measure the relative importance of each node from the corresponding respect. Derived from the previous studies (e.g., <ref type="bibr" target="#b18">[19]</ref> and <ref type="bibr" target="#b19">[20]</ref>), five fundamental and important topology attributes <ref type="bibr" target="#b28">[29]</ref>, <ref type="bibr" target="#b29">[30]</ref>, adopted in our novel node-ranking approach, are introduced and quantified in this section. Other topology attributes, such as "eigenvector centrality" and "Katz centrality," are used in networks <ref type="bibr" target="#b33">[34]</ref> and not adopted in our VNE-NTANRC algorithm.</p><p>1) Degree of a Node m: Formula (10) defines the degree of node m in the given network. It is determined by the function totlink( ), counting the number of adjacent links of node m in the network Degree(m) = totlink(m).</p><p>(10)</p><p>2) Strength of a Node m: Formula ( <ref type="formula">11</ref>) is the definition of strength of node m in the given network. It is determined by the function totband( ), counting the sum of all adjacent link bandwidth of node m in the network</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Strength(m) = totband(m).</head><p>(11)</p><p>3) Distance Between Two Nodes (m and n): Formula (12) defines the distance between any two nodes (m and n) in the given network. There must exist at least one straight path connecting the node m and node n. It is determined by the function ), representing the Euclidean Distance (loopfree and shortest path) between nodes m and n. Nodes m and n are both defined by x and y coordinates, (X m , Y m ) and (X n , Y n ), in this Euclidean Distance between nodes m and n is detailed in</p><formula xml:id="formula_12">Dis(m, n) = ED(m, n) (12) ED(m, n) = (X m -X n ) 2 + (Y m -Y n ) 2 . (<label>13</label></formula><formula xml:id="formula_13">)</formula><p>4) Farness and Closeness of a Node m: Both attributes are a pair of distance attributes of a node m. The Farness of a node m <ref type="bibr" target="#b13">(14)</ref> is defined as the sum of its shortest distances to all the other nodes, and its Closeness ( <ref type="formula" target="#formula_16">15</ref>) is defined as the reciprocal of Farness. So the lower the Farness of a node m is, the higher its Closeness is, and the more central it is. N represents the set of all nodes in a network</p><formula xml:id="formula_14">Far(m) = n∈N ED(m, n) (<label>14</label></formula><formula xml:id="formula_15">)</formula><formula xml:id="formula_16">Clo(m) = 1 Far(m) . (<label>15</label></formula><formula xml:id="formula_17">)</formula><p>5) Link Interference of a link mn: Formula ( <ref type="formula" target="#formula_18">16</ref>) is the link interference of link mn in the network. The link interference attribute originates form minimum interference-based traffic engineering, first studied in the MPLS context. The basic idea of this link attribute is to route the traffic in a path with minimum interference to the future traffic. The link interference of each link mn is positively related to its contribution to the connectivity of network</p><formula xml:id="formula_18">LI(mn) = Far(m) D(m) + Far(n) D(n) . (<label>16</label></formula><formula xml:id="formula_19">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Node-Ranking Approach</head><p>The novel node-ranking approach, adopted in the VNE-NTANRC, is detailed in this section. The noderanking approach, consisting of two subapproaches, is able to estimate the embedding ability of each substrate node. At first, a novel metric "NoV," quantifying topology attributes and global network resources simultaneously, is defined. Global network resources considered in the novel node-ranking approach are node capacity, node location, link bandwidth, and link propagation delay. These network resources are also considered as node-link constraints in this paper.</p><p>Inspired by the Coulomb's law <ref type="bibr" target="#b34">[35]</ref> in electromagnetism area and the Newton's law <ref type="bibr" target="#b35">[36]</ref> in gravitational field, the interactions between any two discrete objects can be quantified <ref type="bibr" target="#b16">(17)</ref>. Therefore, the authors formulate <ref type="bibr" target="#b17">(18)</ref> to quantify the interaction between any two nodes, m and n, in the given network. There is a notice that at least one loop-free and straight path from m to n exists. If exists, <ref type="bibr" target="#b17">(18)</ref> can be used to quantify the interaction between any two nodes, m and n. That is to say, nodes m and n must be able to communicate with each other. Otherwise, it is of no use to quantify the interaction between them. Formula ( <ref type="formula" target="#formula_22">18</ref>) is proposed to qualify the interaction between node m and node n in the node-ranking stage</p><formula xml:id="formula_20">F 1,2 = k • q 1 • q 2 Dis q 1 , q 2 2 (<label>17</label></formula><formula xml:id="formula_21">)</formula><p>where k is a constant, q 1 and q 2 are the weights or electronic charges of two objects, Dis(q 1 , q 2 ) represents the Euclidean Distance between objects q 1 and q 2 <ref type="bibr" target="#b33">[34]</ref> NoV</p><formula xml:id="formula_22">m,n = α • RB m • RB n Dis(m, n) 2 • D 2 mn . (<label>18</label></formula><formula xml:id="formula_23">)</formula><p>where α is also a constant. RB m is the resource block of node m. Formula (19) defines the resource block (RB) for node m and aims to strength the resource measurement of node m in the network. C m is the node capacity of network node m. Degree and strength topology attributes are also adopted to define RB. It is same to the resource block RB n of node n. Dis(m, n) in ( <ref type="formula" target="#formula_20">17</ref>) and <ref type="bibr" target="#b17">(18)</ref> represents the Euclidean Distance between node m and n (at least one straight path connecting node m and node n; no loop exists). D mn represents the propagation delay of substrate path mn. Each substrate link propagation delay is set to be one time unit in this paper. That is to say, the value of propagation delay of one selected path mn is equal to the number of substrate links in the substrate path mn. The RB%(m) is the normalized RB of node m in the network, presented in <ref type="bibr" target="#b19">(20)</ref>. To achieve the node m's NoVs with remaining nodes in the whole network, the authors further propose the <ref type="bibr" target="#b20">(21)</ref>. Formula ( <ref type="formula" target="#formula_26">22</ref>) is formulated to normalize the NoV percentage of node m in the whole network. Specifically, the NoV percentage (NoV %) of node m increases with the node m's available node capacity, node degree and node strength increasing</p><formula xml:id="formula_24">RB(m) = Cm • S(m) • n =n,n∈N</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LI(mn) (19)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RB%(m) = RB(m)</head><p>m∈G RB(m) 2   (20)</p><formula xml:id="formula_25">NoV m = m =n,n∈G</formula><p>NoV m,n <ref type="bibr" target="#b20">(21</ref>)</p><formula xml:id="formula_26">NoV%(m) NoV(m) m∈G NoV(m) 2 . (<label>22</label></formula><formula xml:id="formula_27">)</formula><p>1) Direct Node-Ranking Approach: One subapproach of our proposed novel node-ranking approach is to calculate NoVs directly, using a formula. Based on the above topology attributes and global network resources, the direct noderanking approach is measured by metric [NR(m)]. NR(m) <ref type="bibr" target="#b22">(23)</ref> is formulated as the sum of RB%(m) and NoV%(m). Weight factors (α and β) are used to balance the normalized resource block RB(m) and the NoV percentage of node m. Five essential topology attributes and global resources, introduced above, are all considered simultaneously</p><formula xml:id="formula_28">NR(m) = α • RB%(m) + β • NoV%(m). (<label>23</label></formula><formula xml:id="formula_29">)</formula><p>2) Stable Node-Ranking Approach: The other subapproach of the novel node-ranking approach is to calculate all NoVs of the given network in a stable state.</p><p>In many cases, Direct Node-Ranking Approach enables to reveal the node importance directly. However, in extreme cases, such as sparse networks, Direct Node-Ranking Approach is not able to calculate the importance of all nodes accurately, leading to inefficient resource utilization in the long term (simulation conducted in Section V). Therefore, it is necessary to calculate stable NoVs of the given network, enabling to show the importance of all nodes accurately. Derived from the famous Google PageRank website algorithm, we introduce how to get the stable node-ranking values of a given network in the following content.</p><p>With calculating all percentage values NoV% (m) (22) of the given network, all percentage values of the network make up an initial node-ranking vector T 0 . The vector T 0 is presented as follows:</p><formula xml:id="formula_30">T 0 = (NoV%(1), NoV%(2), . . . , NoV%(|N|), ) T .</formula><p>On the basis of NoV calculation and the initial node-ranking vector T 0 , the eventual node-ranking values of given network G (either a substrate network or a VNR) will be in a stable state and calculated in a recursive manner. For each node m in the given network, its eventual node-ranking value is set as r m and is presented in</p><formula xml:id="formula_31">r m = (1 -d) • RB%(m) + d • m =n,n∈N(m)</formula><p>NoV m,n • r n <ref type="bibr" target="#b23">(24)</ref> where d is the damping factor within (0, 1). N(m) indicates the set of all nodes having a loop-free path with the node m in the given network G. The RB%(m) is the normalized RB of node m in the network. Its detailed version is presented in <ref type="bibr" target="#b19">(20)</ref>. As drawn from <ref type="bibr" target="#b23">(24)</ref>, the node-ranking value of any node m increases with the node's available RB and the NoVs of its nearby nodes increasing. Higher ranked substrate nodes contribute to larger successful probability in the VNR embedding stage.</p><p>To represent all nodes in a vector R, the traffic form of all node-ranking values is developed and shown in</p><formula xml:id="formula_32">R = (1 -d) • RB% + d • M • R (<label>25</label></formula><formula xml:id="formula_33">)</formula><p>where the R = (r 1 , r 2 , . . . , r m . . . , r |N| ) T . The representation of RB% is (RB% <ref type="bibr" target="#b0">(1)</ref> , RB% <ref type="bibr" target="#b1">(2)</ref> , . . . , RB% (m) . . . , RB% (|N|) ) T . M is the transition matrix of dimension |N|•|N|. d is the damping factor within (0, 1), as mentioned above. Each element in the matrix M is detailed in <ref type="bibr" target="#b19">(20)</ref> and <ref type="bibr" target="#b21">(22)</ref>. If there exists no path directly connecting nodes m and n, the corresponding element in the matrix M is set to be 0. By referring to the matrix theory <ref type="bibr" target="#b35">[36]</ref>, the unique solution of ( <ref type="formula" target="#formula_32">25</ref>) can be directly given by follows:</p><formula xml:id="formula_34">R = (1 -d) • (I -d • M) -1 RB%. (<label>26</label></formula><formula xml:id="formula_35">)</formula><p>For convincing that ( <ref type="formula" target="#formula_34">26</ref>) is the final unique solution of (25) in the given network G, we are to provide the proof below.</p><p>Proposition: Matrix (Id • M) is reversible and a final unique solution ( <ref type="formula" target="#formula_34">26</ref>) can be obtained from <ref type="bibr" target="#b24">(25)</ref>.</p><p>Proof : With ( <ref type="formula">21</ref>) and ( <ref type="formula" target="#formula_26">22</ref>), it is easy to know that the sum of NoV m,n is equal to 1 ( <ref type="formula" target="#formula_36">27</ref>)</p><formula xml:id="formula_36">|G| m=1 NoV m,n = 1.<label>(27)</label></formula><p>Therefore, ||M|| ≤ 1 can be easily concluded (Gershgorin circle theorem <ref type="bibr" target="#b37">[38]</ref>). It is difficult to prove that matrix (Id•M) is reversible directly.</p><p>Let us make an assumption that matrix (Id•M) is singular. It is easy to know that the linear system equations (Id•M)•r = 0 must have nonzero solutions. Let r 0 be one selected nonzero solution of the linear system equations. With known that matrix (Id•M) is reversible, it is easy to calculate the unique solution of <ref type="bibr" target="#b24">(25)</ref>. The unique solution is given</p><formula xml:id="formula_37">R = (1 -d) • (I -d • M) -1 RB%. (<label>28</label></formula><formula xml:id="formula_38">)</formula><p>Two important points must be pointed out when proving the eventual solution [( <ref type="formula" target="#formula_34">26</ref>) and <ref type="bibr" target="#b27">(28)</ref>]. One point is to prove the uniqueness of the final node-ranking solution R. The other point is to prove that matrix (Id•M) is reversible. The proof of that matrix (Id•M) is reversible is extremely important before calculating the final node-ranking solution R.</p><p>By referring to <ref type="bibr" target="#b36">[37]</ref>, the complexity of directly calculating out <ref type="bibr" target="#b27">(28)</ref> is O(|N| 3 ). The time complexity will be very complex with the scale of network scenario expanding. As the simulation of this paper is conducted in a continuous time event, backtracking and recursion methods cannot be applied to calculate <ref type="bibr" target="#b27">(28)</ref>. Therefore, an iterative approach can be adopted. Through k iterations, it is easy to converge to a stable solution and get a final solution of <ref type="bibr" target="#b27">(28)</ref>, same to the Jacobi algorithm <ref type="bibr" target="#b35">[36]</ref> for solving the linear system equations <ref type="bibr" target="#b36">[37]</ref>. Therefore, corresponding complexity of the iteration-based node-ranking approach is O((|N| 2 )log(1/δ)). δ is a small positive number to ensure the number of iterations. The procedures of the stable node-ranking approach are detailed in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Stable Node-Ranking Approach</head><p>Input: Network G=(N, L), a small positive number δ Output: Node-Ranking Vector R of the given Network 1. Calculate matrix M and initial vector R 0 (T 0 ) 2. Define the iteration number k, k = 0. 3. Define the variable w, w = 8. 4. while w ≥ δ do 5.</p><formula xml:id="formula_39">R k+1 = (1-d) • RB% + d • M • R k ; 6. w = ||R k+1 -R k ||; 7. k = k 1; 8. end while 9. R = R k+1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Greedy Node Mapping</head><p>In our proposed VNE-NTANRC algorithm, the node mapping of a given VNR works in a greedy way. The status of the whole substrate network is backup before embedding one proposed VNR. Then all nodes of both the substrate network and the proposed VNR are sorted in the decreasing order, according to the node-ranking values (direct or stable) calculated by the novel node-ranking approach in above section. As the node-ranking value indicates the embedding ability of the corresponding node, virtual nodes are embedded onto the substrate nodes by processing the two sorted node lists (the substrate network and the VNR) with a strategy similar to the well-known merge-sort algorithm <ref type="bibr" target="#b37">[38]</ref>. Therefore, the virtual node with the highest node-ranking value among the remaining virtual ones of the VNR will always be embed onto the substrate node that also has the highest node-ranking value among the remaining substrate ones, whose available resource meets the VNR demands (node location and node capacity are considered in node mapping stage). For instance, if the node capacity demand cannot be satisfied by any of the remaining substrate nodes, the VNR will be marked as rejected. If all virtual nodes of the proposed VNR are embedded successfully, the node capacity of the corresponding substrate nodes will be further updated. The greedy node mapping procedure is presented in Algorithm 2 (VNE-NTANRC-D) and Algorithm 3 (VNE-NTANRC-S). The complexity of the greedy node mapping is O(|N S ||N V |) <ref type="bibr" target="#b36">[37]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Shortest Path Link Mapping</head><p>With all virtual nodes of the proposed VNR embedded, the virtual links of the VNR will be embedded. For the link mapping stage of the proposed VNR, the universal SP algorithm is applied in VNE-NTANRC so as to minimize the total consumed substrate link bandwidth. Particularly, the virtual links of each proposed VNR are processed one by one. For each virtual link of the given VNR, the Dijkstra's algorithm <ref type="bibr" target="#b37">[38]</ref> is adopted to find the shortest path between the two corresponding substrate nodes in the substrate network. In addition, to further improve the efficiency of the VNE-NTANRC, a pruning procedure, deleting all the substrate links in the substrate network that do not have enough bandwidth for the corresponding virtual link, is conducted in the link mapping stage. In addition, to each virtual link of the VNR, the propagation delay of its selected path must be within the required virtual link propagation delay at the same time. If the link mapping of the given VNR fails (i.e., not all virtual links of the same VNR are embedded successfully), the status of the who substrate network is restored. The VNR is therefore rejected. The Algorithm 2 (VNE-NTANRC-D) and Algorithm 3 (VNE-NTANRC-S) also detail the SP link mapping algorithm. The complexity of the SP link mapping algorithm is O(L S ||L V | log |N S |) in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Time Complexity of VNE-NTANRC Algorithm</head><p>In this section, it is of great importance to calculate the total time complexity of VNE-NTANRC algorithm. To the VNE-NTANRC-D, the total time complexity of VNE-NTANRC-D involves two main procedures: 1) greedy node mapping and 2) SP link mapping. Therefore, the total time complexity can be represented as</p><formula xml:id="formula_40">O(|N S ||N V | + |L S ||L V | log |N S |).</formula><p>To the VNE-NTANRC-S, the total time complexity of VNE-NTANRC-S can be calculated by adding up the time complexities of the three main steps (stable node-ranking approach, greedy node mapping, and SP link mapping). Therefore, the total time complexity can be represented as</p><formula xml:id="formula_41">O((|N S | 2 + |N V | 2 )log(1/δ) + |N S ||N V | + |L S ||L V |log |N S |).</formula><p>Overall, the proposed VNE-NTANRC algorithm, either VNE-NTANRC-D or VNE-NTANRC-S, runs in polynomial time and can be simulated in a continuous time event (Section V).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. SIMULATION EVALUATION</head><p>This section presents the simulation parameter settings, in the form of tables. Main simulation results are illustrated. This section elaborates on quantifying the advantage of the VNE-NTANRC algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Simulation Parameter Settings</head><p>To evaluate VNE-NTANRC, a continuous event simulator in JAVA has been implemented by us. Since evaluating multiple VNE algorithms in a same platform simultaneously is still an emerging field, the authors of this paper conduct the simulation work in a self-developed platform. The self-developed platform is named as "Simulation Platform for Scotfield Cao" <ref type="bibr" target="#b38">[39]</ref>. Some codes are available to public <ref type="bibr" target="#b39">[40]</ref>.</p><p>Table <ref type="table">II</ref> summarizes the shared substrate network (single domain) parameters for our simulation. These parameters are typical in VNE research area.</p><p>Table <ref type="table">III</ref> summarizes the VN parameters for our simulation. These parameters are typical in VNE research area.</p><p>Simulations run for about 100 000 time units. α, β, γ , and δ in ( <ref type="formula" target="#formula_5">6</ref>) and ( <ref type="formula" target="#formula_7">7</ref>) are all set to be 1. δ in node-ranking approach (Algorithm 1) is set to be 0.00001 <ref type="bibr" target="#b24">[25]</ref>. The value of d in this paper is set to be 0.85, same to the value setting in PageRank algorithm <ref type="bibr" target="#b25">[26]</ref>. All simulations for different VNE algorithms run on a Window 8 desktop, with an Intel Core CPU i7-4790@3.6GHz processor and 16.00G RAM Machine. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Compared Algorithms</head><p>Seven heuristic VNE algorithms make up the simulation part in total. Besides of our proposed VNE-NTANRC-D and VNE-NTANRC-S, remaining algorithms are G-SP <ref type="bibr" target="#b15">[16]</ref>, RW-SP <ref type="bibr" target="#b16">[17]</ref>, VNE-DCC <ref type="bibr" target="#b19">[20]</ref>, VNE-RD <ref type="bibr" target="#b20">[21]</ref>, and VNE-NRM <ref type="bibr" target="#b22">[23]</ref>. These algorithms are typical, latest, and most-related to our algorithms and are all slightly modified to fit into the simulation (e.g., node location demands and link propagation delay considered).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Simulation Results</head><p>In this section, main simulation results are presented. Fig. <ref type="figure">4</ref> presents the average VNR acceptance ratio as a function of time, while Fig. <ref type="figure" target="#fig_4">5</ref> shows the average revenue to cost ratio as a function of time. Both figures (Figs. <ref type="figure">4</ref> and<ref type="figure" target="#fig_4">5</ref>) aim to directly prove the efficiency and effectiveness of VNE-NTANRC in the long term. Other important metrics, such as average node utilization and link utilization, are selected and plotted to highlight the advantage of VNE-NTANRC algorithm indirectly.</p><p>1) Average VNR Acceptance Ratio: Fig. <ref type="figure">4</ref> is the average VNR acceptance ratio as a function of continuous time. The VNR acceptance ratio is an important metric to evaluate different VNE algorithms' mapping abilities in a continuous time event. Observed from the Fig. <ref type="figure">4</ref>, the average VNR acceptance ratio of all algorithms almost decays with the variation on time. This decay shows that there are no infinite substrate resources for embedding more and more VNRs, proposed by different end-users. In addition, our proposed VNE-NTANRC algorithm outperforms all selected heuristics. The difference between the best behaved heuristic and VNE-NTANRC-S is approaching 5%. It runs as expected because the VNE-NTANRC-S takes network topology attributes and global network resources into account simultaneously. Through using the iterative approach, a stable node-ranking values can be achieved, benefiting to the following greedy node mapping. The relationship with other nodes is further explored by VNE-NTANRC-S. An efficient node mapping is therefore likely to be achieved. However, VNE-NTANRC-D algorithm directly calculates NoVs to rank nodes. In some cases, NoVs of sparse substrate network cannot be calculated accurately, using the direct node-ranking approach. Therefore, VNE-NTANRC-D is not able to behave as well as the VNE-NTANRC-S algorithm. This works in accordance with what is proposed in <ref type="bibr" target="#b21">[22]</ref>. To the remaining heuristic algorithms (G-SP, RW-SP, VNE-RD, VNE-DCC and VNE-NRM), only local resources and single topology attribute are considered in the node mapping stage. The node embedding of each VNR is not efficient in many cases. Therefore, a feasible mapping is tried to be found. Compared with the heuristics, the VNE-NTANRC-S behaves best.</p><p>2) Average Revenue to Cost Ratio: Fig. <ref type="figure" target="#fig_4">5</ref> illustrates the average revenue to cost ratio as a function of time. Derived from Fig. <ref type="figure" target="#fig_4">5</ref>, the average revenue to cost ratio of all selected algorithms decreases with the simulation time increasing. To G-SP, the reason for lowest revenue to cost ratio contributes to the fact that adjacent virtual nodes are mapped onto substrate node, far from each other. Thus, leads to large amount of unnecessary substrate resources consumption. To   owing to that multiple topology characteristics and global network resources are considered in VNE-NTANRC algorithm simultaneously. The relationship of each node with all other nodes is fully explored, too. More extra substrate resources are saved. Through conducting the simulation, it is apparent that the novel node-ranking approach of VNE-NTANRC further ensures the efficiency of substrate network resources usage in the long run, particularly to the VNE-NTANRC-S algorithm.</p><p>3) Average Node and Link Utilization: Average node and link utilization as a function of time are depicted in Figs. <ref type="figure" target="#fig_6">6</ref> and<ref type="figure" target="#fig_7">7</ref>. With the number of VNRs increasing, the node and link utilization of all selected algorithms increase, too. To the node utilization, depicted in Fig. <ref type="figure" target="#fig_6">6</ref>, the VNE-NTANRC (-S and -D) has an apparent advantage over the remaining heuristic algorithms. The reason for VNE-NTANRC algorithm having a larger node utilization than the heuristics lies to VNE-NTANRC's ability of accepting more VNRs than the other heuristics, considering more network topology attributes and global network resources before the node mapping stage. When the number of VNRs is incresing, the VNE-NTANRC, is able to embed VNRs more effectively and loads the substrate nodes to their full capacity. However, the link utilization in Fig. <ref type="figure" target="#fig_7">7</ref> does not have the same behavior for all algorithms, as shown in Fig. <ref type="figure" target="#fig_6">6</ref> for the node utilization. All seven algorithms behave similar to each other. SP approach is adopted</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Inverse illustration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. One SN and two VNRs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Diagram of embedding one VNR.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Then it is easily to get that d•M•r 0 = r 0 . Therefore, we can easily get the result of ||r 0 || = ||d • M • ||r 0 || ≤ d • ||M|| • ||r 0 ||. Thus, getting ||M|| ≥ (1/d) &gt; 1 in the end. However, the conclusion of ||M|| &gt; 1 violates the conclusion of (27) (||M|| ≤ 1). Therefore, we come to the eventual conclusion that matrix (Id•M) is reversible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Average revenue to cost ratio.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>the other heuristic algorithms (RW-SP, VNE-RD, VNE-DCC and VNE-NRM), considering local resources and relationships with nearby nodes, extra required resources are saved. Compared with the VNE-NTANRC (-S and -D) algorithm, VNE-DCC and VNE-RD are not able to behave better. It is</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Average node utilization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Average link utilization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Novel Node-Ranking Approach and Multiple Topology Attributes-Based Embedding Algorithm for Single-Domain Virtual Network Embedding Haotong Cao , Student Member, IEEE, Longxiang Yang, and Hongbo Zhu</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I VNE NOTATIONS</head><label>INOTATIONS</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>end if 11. end while Algorithm 3</head><label></label><figDesc>Algorithm 2 VNE-NTANRC-DInput: Arrived VNRs in a 1000 time units and the SN Output: Results of VNs embedding and unmapped VNs 1. while there is unprocessed VN do 2. Take VN i that has the smallest revenue<ref type="bibr" target="#b15">[16]</ref> 3. Calculate the node-ranking value NR(m) of every substrate node and each virtual node of the VN i , according to the direct novel node-ranking approach (Formula 20) 4. for each virtual node of the VN i do 5. Select the virtual node with the highest node-ranking value of the VN i and map it to the substrate node with the highest noderanking value of the SN, with meeting the constraints of node location and node capacity. To the VN i , two virtual nodes can not share the same substrate node (Greedy Node Mapping) 6. end for 7. if the virtual node mapping succeeds then 8. The pruning procedure is conducted for deleting all the substrate links in the substrate network that do not have enough bandwidth for the corresponding virtual link. Select the shortest path to map all virtual links, with fulfilling all link bandwidth demands of the VN i . The propagation delay of each selected path must be within the required link propagation delay of its mapped virtual link at the same time (SP Link Mapping) 9. else reject the VN i and throw the VN i into the waiting queue 10. VNE-NTANRC-S Input: Arrived VNRs in a 1000 time units and the SN Output: Results of VNRs' embedding and unmapped VNRs 1. while there is unprocessed VNRs do 2. Take VNR i that has the smallest revenue<ref type="bibr" target="#b15">[16]</ref> 3. Algorithm 1 4. for each virtual node of the VNR i do 5. Select the virtual node with the highest node-ranking value of the VNR i and map it to the substrate node with the highest node-ranking value of the SN, with meeting the constraints of node location and node capacity. To the given VNR i , two virtual nodes can not share the same substrate node (Greedy Node Mapping) 6. end for 7. if the virtual node mapping of VNR i succeeds then 8. The pruning procedure is conducted for deleting all the substrate links in the substrate network that do not have enough bandwidth for the corresponding virtual link. Select the shortest path to map all virtual links, with fulfilling all link bandwidth demands of the VN i . The propagation delay of each selected path must be within the required link propagation delay of its mapped virtual link at the same time (SP Link Mapping) 9. else reject the VNR i and throw the VNR i into the waiting queue 10. end if 11. end while</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank Prof. Z. Fadlullah and the reviewers for their detailed reviews and constructive comments, which have helped improve the quality of this paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National Natural Science Foundation of China under Grant 61372124 and Grant 61427801, in part by the National Basic Research Program of China (973 Program) under Grant 2013CB329104, and in part by the Postgraduate Research and Practice Innovation Program of Jiangsu Province under Grant KYCX17_0784. This paper has been presented in part at the IEEE/CIC International Conference on Communications in China Workshops, October 22-24, 2017, Qingdao, China.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>in the link mapping stage, to all these seven VNE algorithms. Therefore, all seven algorithms run similarly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>To embed VNs efficiently in a continuous time event, we propose a heuristic algorithm, as VNE-NTANRC, in this paper. The VNE-NTANRC algorithm adopts a novel noderanking approach, covering five different topology attributes and global network resources, to rank all substrate and virtual nodes before embedding each given VNR.</p><p>The novel node-ranking approach consists of two different subapproaches. One subapproach is able to calculate all nodes' values directly. The other subapproach is able to calculate all nodes' values in a stable state. The stable subapproach, stimulating from the well-known Google PageRank algorithm, is then used to assist the greedy node mapping. SP approach is in the following link mapping stage. When running VNE-NTANRC to embedding a VNR, four different node-link constraints must be fulfilled. The virtual link propagation delay is considered as a node-link constraint for the first time in VNE research area. Simulation results validate that VNE-NTANRC algorithm outperforms five typical and latest heuristic algorithms. Main performance metrics are plotted, such as the long-term average VNR acceptance ratio and average revenue to cost ratio.</p><p>There are still a number of issues remaining to be done in the future. First of all, the approach of getting stable node-ranking values can be further explored. We adopt the iterative method to get stable node-ranking values in this paper. The method of push also can be applied to get the stable node-ranking values <ref type="bibr" target="#b23">[24]</ref>. Then, it is to upload the VNE-NTANRC algorithm in a real testbed environment and evaluate the VNE-NTANRC algorithm through a prototype implementation. Next, other different network topology attributes <ref type="bibr" target="#b29">[30]</ref> can be added to perfect the proposed noderanking approach <ref type="bibr" target="#b47">[48]</ref>, <ref type="bibr" target="#b48">[49]</ref>. Dr. Zhu serves as a Referee or expert for multiple national organizations and committees.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Network virtualization: State of the art and research challenges</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M M K</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="20" to="26" />
			<date type="published" when="2009-07">Jul. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A survey of network virtualization</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M M K</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="862" to="876" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Overcoming the Internet impasse through virtualization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="34" to="41" />
			<date type="published" when="2015-04">Apr. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Network Virtualization: The New Building Blocks of Network Design</title>
		<author>
			<persName><surname>Cisco</surname></persName>
		</author>
		<ptr target="http://www.cisco.com/en/US/solutions/collateral/ns340/ns517/" />
		<imprint>
			<date type="published" when="2016-08">Aug. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Cloud computing: A study of infrastructure as a service (IaaS)</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bhardwaj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Eng. Inf. Technol</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="60" to="63" />
			<date type="published" when="2010-01">Jan. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Research directions for the Internet of Things</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stanvokic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Things J</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="9" />
			<date type="published" when="2014-02">Feb. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Virtual network embedding: A survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Botero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">De</forename><surname>Meer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hesselbach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys Tuts</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1888" to="1906" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note>4th Quart.</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Exact solutions of VNE: A survey</title>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">China Commun</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="48" to="62" />
			<date type="published" when="2016-06">Jun. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Theoretical approaches to node assignment</title>
		<author>
			<persName><forename type="first">D</forename><surname>Andersen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-12">Dec. 2002</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Energy efficient virtual network embedding</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Botero</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Lett</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="756" to="759" />
			<date type="published" when="2012-05">May 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Optimal virtual network embedding: Node-link formulation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Melo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sargento</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Killat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Timm-Giel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Carapinha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="356" to="368" />
			<date type="published" when="2013-12">Dec. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A distributed virtual network mapping algorithm</title>
		<author>
			<persName><forename type="first">I</forename><surname>Houidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Louati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zeghlache</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICC</title>
		<meeting>IEEE ICC<address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="5634" to="5640" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">ViNEYard: Virtual network embedding algorithms with coordinated node and link mapping</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chowhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="206" to="219" />
			<date type="published" when="2012-02">Feb. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Decomposition approaches for virtual network embedding with one-shot node and link mapping</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jarray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Karmouch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1012" to="1025" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A path generation approach to embedding of virtual networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mijumbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Serrat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-L</forename><surname>Gorricho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="334" to="348" />
			<date type="published" when="2015-09">Sep. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Rethinking virtual network embedding: Substrate support for path splitting and migration</title>
		<author>
			<persName><forename type="first">M</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM Comput</title>
		<imprint>
			<date type="published" when="2008-04">Apr. 2008</date>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="17" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Virtual network embedding through topology-aware node ranking</title>
		<author>
			<persName><forename type="first">X</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM Comput</title>
		<imprint>
			<date type="published" when="2011-04">Apr. 2011</date>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="38" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Energy-aware virtual network embedding</title>
		<author>
			<persName><forename type="first">S</forename><surname>Su</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1607" to="1620" />
			<date type="published" when="2014-10">Oct. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Topology-aware virtual network embedding based on multiple characteristics</title>
		<author>
			<persName><forename type="first">M</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Qing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Qi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. Commun. (ICC)</title>
		<meeting>IEEE Conf. Commun. (ICC)<address><addrLine>Sydney, NSW, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="2956" to="2962" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Virtual network embedding based on the degree and clustering coefficient information</title>
		<author>
			<persName><forename type="first">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="8572" to="8580" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Revenue-driven virtual network embedding based on global resource information</title>
		<author>
			<persName><forename type="first">L</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Glob. Commun. Conf. (GLOBECOM)</title>
		<meeting>IEEE Glob. Commun. Conf. (GLOBECOM)<address><addrLine>Atlanta, GA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013-12">Dec. 2013</date>
			<biblScope unit="page" from="2294" to="2299" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Novel location-constrained virtual network embedding LC-VNE algorithms towards integrated node and link mapping</title>
		<author>
			<persName><forename type="first">L</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="3648" to="3661" />
			<date type="published" when="2016-12">Dec. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Virtual network embedding based on computing, network and storage resource constraints</title>
		<author>
			<persName><forename type="first">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Things J</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">PageRank revisited</title>
		<author>
			<persName><forename type="first">M</forename><surname>Brinkmeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Internet Technol</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="282" to="301" />
			<date type="published" when="2006-08">Aug. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The anatomy of a large-scale hypertextual Web search engine</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Page</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WWW</title>
		<meeting>WWW<address><addrLine>Brisbane, QLD, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="107" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A brief survey of pagerank algorithms</title>
		<author>
			<persName><forename type="first">F</forename><surname>Chung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Sci. Eng</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="38" to="42" />
			<date type="published" when="2014-06">Jan./Jun. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Multi-path link embedding for survivability in virtual networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M A</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shahriar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="253" to="266" />
			<date type="published" when="2016-06">Jun. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Ec2</forename><surname>Amazon</surname></persName>
		</author>
		<ptr target="http://aws.amazon.com/ec2/#pricing" />
		<imprint>
			<date type="published" when="2017-07">Jul. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Networks: An Introduction</title>
		<author>
			<persName><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>Oxford Univ. Press</publisher>
			<pubPlace>Oxford, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">The Development of Social Network Analysis</title>
		<author>
			<persName><forename type="first">L</forename><surname>Freeman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Empirical Press</publisher>
			<pubPlace>Vancouver, BC, Canada</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Wireless Local Area Networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">F</forename><surname>Molisch</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Implementing QoS in SIEPON</title>
		<author>
			<persName><forename type="first">J</forename><surname>Stribling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Arunarthi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Knittle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Murayama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Emmendorfer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="128" to="135" />
			<date type="published" when="2012-09">Sep. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Exploring synergy between communications, caching, and computing in 5G-grade deployments</title>
		<author>
			<persName><forename type="first">S</forename><surname>Andreev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="60" to="69" />
			<date type="published" when="2016-08">Aug. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Node centrality in weighted networks: Generalizing degree and shortest paths</title>
		<author>
			<persName><forename type="first">T</forename><surname>Opsahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Agneessens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Skvoretz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soc. Netw</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="245" to="251" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Coulomb&apos;s law discretization method: A new methodology of spatial discretization for the radial point interpolation method</title>
		<author>
			<persName><forename type="first">W</forename><surname>Sousa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Oliveira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Antennas Propag. Mag</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="277" to="293" />
			<date type="published" when="2015-04">Apr. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">AP-S turnstile-Invoking Heaviside in defense of Newton&apos;s third law</title>
		<author>
			<persName><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Antennas Propag. Mag</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="118" to="119" />
			<date type="published" when="2006-08">Aug. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Golub</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename><surname>Van Loan</surname></persName>
		</author>
		<title level="m">Matrix Computations (Johns Hopkins Studies in Mathematical Sciences) 3rd ed</title>
		<meeting><address><addrLine>Baltimore, MD, USA</addrLine></address></meeting>
		<imprint>
			<publisher>The Johns Hopkins Univ. Press</publisher>
			<date type="published" when="1996-10">Oct. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Leiserson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<title level="m">Introduction to Algorithms</title>
		<meeting><address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw-Hill</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">New functions added to ALEVIN for evaluating virtual network embedding</title>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 2nd Int. Conf. Comput. Commun</title>
		<meeting>IEEE 2nd Int. Conf. Comput. Commun<address><addrLine>Chengdu, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016-10">Oct. 2016</date>
			<biblScope unit="page" from="2411" to="2414" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Simulation Platform for Scotfield Cao</title>
		<ptr target="http://pan.baidu.com/s/1gekPZrl" />
		<imprint>
			<date type="published" when="2017-10">Oct. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Routing of multipoint connections</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">M</forename><surname>Waxman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Sel. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1617" to="1622" />
			<date type="published" when="1988-12">Dec. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">SVNE: Survivable virtual network embedding algorithms for network virtualization</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="105" to="118" />
			<date type="published" when="2013-06">Jun. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Dedicated protection for survivable virtual network embedding</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Chowdhury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="913" to="926" />
			<date type="published" when="2016-12">Dec. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Multi-provider virtual network embedding with limited information disclosure</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dietrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rizk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="188" to="201" />
			<date type="published" when="2015-06">Jun. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">GLPK</title>
		<ptr target="http://www.gnu.org/software/glpk/" />
		<imprint>
			<date type="published" when="2017-07">Jul. 2017</date>
		</imprint>
		<respStmt>
			<orgName>GNU Linear Programming Kit</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">IBM ILOG Optimization Products</title>
		<ptr target="Available:www=01.ibm.com/software/websphere/products/optimization" />
		<imprint>
			<date type="published" when="2016-07">Jul. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Theory of Linear and Integer Programming</title>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijiver</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A efficient mapping algorithm with novel node-ranking approach for embedding virtual networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="22054" to="22066" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A novel optimal mapping algorithm with less computational complexity for virtual network embedding</title>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Netw. Service Manag</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
