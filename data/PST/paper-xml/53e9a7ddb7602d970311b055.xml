<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Wireless Localization Using Self-Organizing Maps</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Gianni</forename><surname>Giorgetti</surname></persName>
							<email>gianni.giorgetti@unifi.it</email>
						</author>
						<author>
							<persName><forename type="first">Sandeep</forename><forename type="middle">K S</forename><surname>Gupta</surname></persName>
							<email>sandeep.gupta@asu.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Dip. Elettronica e Telecom. Università degli Studi di Firenze</orgName>
								<address>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">IMPACT LAB School Comput. &amp; Info</orgName>
								<orgName type="institution">Arizona State University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Gianfranco Manes Dip. Elettronica e Telecom. Università degli Studi di Firenze</orgName>
								<address>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Wireless Localization Using Self-Organizing Maps</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">94381C83EBDED4B06EF83C8DD5C4D992</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2 [Computer Communication Networks]: Network Protocols Algorithms</term>
					<term>Performance</term>
					<term>Design Self-Organizing Maps</term>
					<term>Localization</term>
					<term>Wireless Sensor Networks</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Localization is an essential service for many wireless sensor network applications. While several localization schemes rely on anchor nodes and range measurements to achieve fine-grained positioning, we propose a range-free, anchorfree solution that works using connectivity information only. The approach, suitable for deployments with strict cost constraints, is based on the neural network paradigm of Self-Organizing Maps (SOM). We present a lightweight SOMbased algorithm to compute virtual coordinates that are effective for location-aided routing. This algorithm can also exploit the location information, if available, of few anchor nodes to compute absolute positions. Results of extensive simulations show improvements over the popular Multi-Dimensional Scaling (MDS) scheme, especially for networks with low connectivity, which are intrinsically harder to localize, and in presence of irregular radio pattern or anisotropic deployment. We analytically demonstrate that the proposed scheme has low computation and communication overheads; hence, making it suitable for resource-constrained networks.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In the era of pervasive computing, position-awareness is rapidly becoming a key feature in many applications <ref type="bibr" target="#b0">[1]</ref>. * The author is also affiliated with the Electrical Engineering Department at Arizona State University. This trend is confirmed by the fast growth of the Global Positioning System (GPS) that has recently invaded the consumer market. Once restricted to military applications, GPS receivers are now common on cars, trucks, PDAs and cell phones. With an estimated 14 million units sold in 2006 <ref type="bibr" target="#b4">[5]</ref>, the success of this technology underlines the importance of locating people and things in a world where computation and communication are becoming ubiquitous.</p><p>Position-awareness is also of primary importance in Wireless Sensor Networks (WSN) <ref type="bibr" target="#b9">[10]</ref>, which is an enabling technology for pervasive computing. Consisting of small sensors with wireless capabilities, these networks are easy to deploy and represent a cost effective alternative to traditional wired systems. Typical applications include environmental monitoring, asset tracking, surveillance and disaster relief <ref type="bibr" target="#b1">[2]</ref>. In each case, the data gathered by the sensors are of scarce utility unless stamped with the location of the node that collected it. For example, in precision agriculture, temperature and moisture values are correlated with position to identify micro-climate zones <ref type="bibr" target="#b39">[40]</ref>. Knowing the sensors' position is also critical for locating an intruder vehicle in a military application as well as to guide a team of firefighters to the location of an emergency. Finally, locations are used to support network services like geographical routing <ref type="bibr" target="#b18">[19]</ref>, location-based queries <ref type="bibr" target="#b15">[16]</ref> and resource directories <ref type="bibr" target="#b27">[28]</ref>.</p><p>Given the importance of this information, several recent research efforts have focused on incorporating location awareness in those applications where the use of GPS is not a viable solution <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b25">26]</ref>. Many of the proposed schemes assume the presence of a large number of anchor nodes or the availability of hardware for range and angle measurements. Although these configurations are simple to simulate, they are not practical to implement in applications that call for true ad hoc deployment or where cost is a major issue. We also note that many localization schemes target unrealistically large WSNs with high connectivity. While a few examples of such large, dense deployments are being experimentally evaluated within the research community <ref type="bibr" target="#b2">[3]</ref>, a recent survey <ref type="bibr" target="#b3">[4]</ref> reveals that most of the future WSN applications will exploit small to medium networks with less than 100 nodes. Contrary to other network services, a small number of nodes and low connectivity are problematic for the existing localization schemes since determining the sensor positions becomes intrinsically harder as the number of constraints (e.g. range measurements or radio links) diminishes <ref type="bibr" target="#b12">[13]</ref>.</p><p>Motivated by these considerations, we propose a lightweight localization scheme that works without anchor nodes and does not rely on range measurements. The method, which is based on a neural network formalism known as Self-Organizing Map (see Section 3), generates virtual coordinates that describe the relative positions of nodes. In Section 5 we demonstrate through extensive simulations that these virtual maps can be used for efficient geographic routing, with results that are very close to the case where the real coordinates are available.</p><p>We also evaluate the localization error when absolute positioning is required: using only three or four anchor nodes, the virtual coordinates can be converted into absolute positions by means of a linear transformation. Although in this case we use the transformation after computing the virtual coordinates, in Section 5.5 we show an extension to the algorithm where anchor positions are actively used during the localization process, allowing for further accuracy improvements. Using this extension, the localization error drops below 0.3R (i.e. 30% of the radio range) for networks with average connectivity of only four nodes. We also evaluate the performance of the scheme when irregular radio patterns affects the connectivity among nodes or when the network has an anisotropic layout due to the presence of buildings or natural obstructions in the deployment area. Surprisingly, the scheme proves to be extremely robust and none of these factors significantly degrade the localization accuracy. The results are compared to those of the popular Multi-Dimensional Scaling (MDS) technique <ref type="bibr" target="#b38">[39]</ref>, showing substantial improvement especially for networks with low connectivity or anisotropic layout.</p><p>Finally, in Section 7 we evaluate the computational and communication complexity of the solution. This analysis, in addition to benchmark tests on real hardware, shows that our lightweight implementation is suitable to solve the localization problem in resource-constrained networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE PROBLEM</head><p>A localization service must be able to compute the coordinates of a set of randomly deployed nodes. We restrict our attention to anchor-free and range-free schemes, meaning that none of the nodes are placed at known positions and no attempt is made to estimate the inter-node distances. Such algorithms attempt to compute a network map using only connectivity information that describes which nodes are in radio range. Interest in such approaches is due to the fact that each node can determine the set of its radio neighbors with minimal communication overhead and without needing any additional hardware (e.g. ultrasound transceiver for range measurements or GPS); thus, enabling localization in deployments where cost is of primary importance.</p><p>Before analyzing the complexity of the problem, it is useful to remember that the coordinate assignment produced by an anchor-free scheme is intrinsically ambiguous -since no reference points are used, the maps produced are correct up to global translations, rotations or flipping. In addition, the result is arbitrarily scaled unless knowledge about the average communication radius is used to properly scale the map. As consequence of these ambiguities, the localization scheme will generate virtual coordinates <ref type="bibr" target="#b30">[31]</ref> that only describe the relative locations of nodes (nodes with similar coordinates are physically close). Virtual coordinates, which can facilitate network tasks as location-based queries and proximity-based service discovery, have found prominent application in the area of geographic routing <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b36">37]</ref>. By knowing the relative position of nodes, geo-routing schemes achieve efficient packet delivery without the memory overhead of table-driven protocols or the latencies of on-demand approaches.</p><p>Intuitively, a localization scheme produces a coordinate assignment where neighboring nodes are within the maximum radio range and non-neighbors are further apart. Although the problem can be stated in simple terms, the solution in the general case is complex. A network with connectivity constraints can be modeled as a Unit Disk Graph (UDG) <ref type="foot" target="#foot_0">1</ref> and the localization problem can be posed as one of embedding an UDG in an Euclidean space. This problem is NP-Complete in one dimension and NP-hard in two dimensions <ref type="bibr" target="#b6">[7]</ref>. Recently, the problem has been proved to be APX-hard <ref type="bibr" target="#b28">[29]</ref>, meaning that the solution cannot even be efficiently approximated. In fact, there exists node configurations for which even an optimal algorithm cannot produce an embedding with quality better than 3/2 <ref type="bibr" target="#b23">[24]</ref>. While this value limits the worst-case error for an optimal algorithm, localization schemes with bounded errors are very few. A recent work <ref type="bibr" target="#b30">[31]</ref> proposes a scheme based on spreading constants and random projection with a bound error of O(log 2.5 n √ log log n), where n is the number of nodes. Although this work has an appreciable theoretical value, from a practical point of view we are still far from approaching the theoretical bound of 3/2 <ref type="bibr" target="#b33">[34]</ref>.</p><p>Having outlined the characteristics of the problem, we propose a solution inspired by a neural network paradigm known as Self-Organizing Maps (SOMs) <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref>. Introduced in the early 80's, these maps have found numerous applications in many areas such as speech recognition, data mining and bioinformatics ( <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b34">35]</ref> contain an extensive bibliography of SOM papers). In the next sections, after introducing the map structure and the learning algorithm, we show how the SOM formalism leads to an intuitive solution of the localization problem. Unfortunately, despite the attention received, SOMs have proved to be surprisingly resistant to mathematical characterization and convergence results are only available for the case of one-dimensional configuration of neurons <ref type="bibr" target="#b8">[9]</ref>, therefore we use extensive simulations to characterize the localization results and to compare our solution to the MDS technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SELF-ORGANIZING MAPS</head><p>A SOM <ref type="bibr" target="#b20">[21]</ref> is a neural network that learn application information as a set of weights associated with the neurons (nodes). In comparison with other techniques (e.g. Multi-Layer Perceptron), SOMs are unique because the neurons are arranged in regular geometric structures, typically twodimensional lattices with rectangular or hexagonal patterns like the one in Figure <ref type="figure" target="#fig_4">1a</ref>. As we will soon see, this spatial arrangement plays a central role in the training process of the maps and results in a topological organization of the information learned <ref type="foot" target="#foot_1">2</ref> .</p><p>The training of a SOM is performed in an unsupervised fashion: the map is able to learn the underlying properties of the training set without the aid of labeled samples or reward functions (hence, they are characterized as "self-organizing").   Assuming that the input samples and the map weights w j 's are d-dimensional real valued vectors, the three phases of the training algorithm are as follows:</p><p>1. Sampling: A sample is extracted from the training set and presented to the network. We use the notation x(n) to denote the sample at current iteration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Competition:</head><p>The sample x(n) is compared with the map weights (there is one weight per neuron) through the use of a discriminating function f = f (x, w). The neuron that scores the maximum value wins the competition and become the Best Matching Unit (BMU).</p><p>If the discriminating function is implemented using the Euclidean distance, the election rule is given by:</p><formula xml:id="formula_0">BM U (n) = arg min j x(n) -w j (n) . (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>3. Adaptation: Finally, the weight vectors of the BMU and its neighbors are adapted according to the following rule:</p><formula xml:id="formula_2">w j (n + 1) = w j (n) + η(n) h(j, BM U (n))[x(n) -w j (n)].<label>(2)</label></formula><p>The update formula in (2) is controlled by the global learning rate parameter η and by a neighborhood function h = h(i, j) (see Figure <ref type="figure" target="#fig_4">1b</ref>). For ensuring convergence, the learning rate η must decrease monotonically with the number of iterations. A common choice is to implement the learning rate as an exponential function that decays from η max to η min over a given number of iterations. Typically, η decreases within the range [η max , η min ] = [0.1, 0.01], while the number of iterations goes from few hundreds to several thousands depending on the size of the training set. The update rule is also controlled by the neighborhood function h = h(•, •). This function regulates the weight changes on the basis of the map distance between BMU and the neuron being adapted. In the case of a Gaussian shaped neighborhood function, the expression of h is given by:</p><formula xml:id="formula_3">h(i, j) = exp - dist map (i, j) 2 2r(n) , (<label>3</label></formula><formula xml:id="formula_4">)</formula><p>where dist map (i, j) measures the distance on the map between two neurons. According to this expression, the magnitude of the changes is maximum for the BMU and decreases for units that are far from it. The extent of the area affected by the changes depends on the radius r(n), a global parameter that controls the "width" of the neighborhood function. As in the case of the learning rate, the value of r(n) decreases with the number of iteration: a relatively large radius during the initial iterations allows the map to quickly organize the neurons, while a smaller value toward the end determines localized changes, such that different parts of the map become sensitive to different input features.</p><p>The SOM technique is simple yet effective in capturing the properties of the input space and organizing them in an ordered fashion. An example of the SOM method in action is reported in Figure <ref type="figure" target="#fig_3">2</ref>, where a 10 × 10 rectangular map is trained with random samples x(n) = [r n , g n , b n ] from the RGB color space (Figure <ref type="figure" target="#fig_3">2a</ref>). In this case, the weight vectors have the form w j = [r j , g j , b j ] and can be displayed using the corresponding color. Figure <ref type="figure" target="#fig_3">2b</ref> shows the initial configuration of randomly assigned weights. After training the map with a few thousand random samples, the SOM assumes the configuration shown in Figure <ref type="figure" target="#fig_3">2c</ref>. The result shows that among the 2 24 colors of the input space, not only the map was able to select 100 representative samples (SOMs are vector coding techniques), but it also generated a topologically ordered representation of the color space, in the sense that similar colors were mapped to nearby locations. This property emerges as a consequence of the update rule: since adjacent neurons are subjected to similar weight changes, they eventually converge to similar values. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">LOCALIZATION USING SOMS</head><p>At the end of the training phase, the neurons contain model vectors that are representative of the input space, therefore the map can be used as a codebook for arbitrary samples. The code is given by the weight vector that best matches (BMU) the given sample. In addition, since each BMU defines a position on the two-dimensional grid, SOM implements a projection technique<ref type="foot" target="#foot_2">3</ref> from the input space to the plane defined by the lattice of neurons (see Figures <ref type="figure" target="#fig_3">2a</ref> and<ref type="figure" target="#fig_3">2c</ref>). This property has been widely exploited in many applications for data analysis and visualization of large data sets <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b34">35]</ref>. More recently, SOMs have been used to implement localization schemes for mobile robots in unknown environments <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b11">12]</ref>. The SOM, initially trained with information collected by on-board sensors during the exploration phase, is then used as a virtual map to translate new sensor readings into grid positions or to recognize different environments (e.g. different rooms).</p><p>Ertin and Priddy <ref type="bibr" target="#b10">[11]</ref> have used a similar approach to solve the localization problem in WSNs. In their work, synchronous readings collected by all the sensor nodes are used to build the training set for the SOM. After training the model, the localization task is performed using new sensor readings to sort nodes on the basis of their proximity to a virtual grid of nodes. Although no attempt is made to compute individual node positions, the authors suggest possible applications to the target tracking problem. Our solution is similar to <ref type="bibr" target="#b10">[11]</ref> in the sense that it is also based on the SOM formalism, but the approach taken is rather different since it does not rely on sensor readings or time synchronization services. In addition, our scheme explicitly computes individual node positions as a result of the training phase of the map. More details on the approach used in <ref type="bibr" target="#b10">[11]</ref> are given in Section 8.</p><p>The intuition behind the proposed solution is that, with no prior information on sensor locations, the best assumptions we can make are: i) sensor nodes provide an (approximately) uniform coverage of the deployment area and ii) nodes that are within their radio range are relatively close to each other. In Section 6, we consider non-uniform deployments and the effect of irregular radio patterns, nevertheless the two assumptions (uniform coverage, radio neighbors close to each other) are realistic for many WSNs and are useful to give an intuitive illustration of our approach. To solve the problem we must therefore generate a location assignment that is approximately uniform, taking care of placing neighbor nodes close to each other. This is accomplished by associating the unknown node positions (xi, yi) to the weights of a SOM and then training the model with random samples from an uniform distribution. As a result of the training phase, the weights (i.e. nodes position) will eventually spread to cover the sampling area and, if associated to adjacent neurons on the map, neighboring nodes will be kept close to each other.</p><p>Using an approach substantially analogous to the one exposed here, SOMs has been previously applied to graph drawing <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b5">6]</ref>, a branch of graph theory that deals with the visualization of complex graphs. The graph layout problem is similar to the localization problem in the sense that it also seeks to find a coordinate assignment such that vertices connected by edges are positioned close to each other. However, while the evaluation of a graph layout is mostly based on aesthetic factors (e.g. uniform distribution of nodes and edge lengths, separation between graph elements, number of edge crossing, etc.), the results of the localization assignment are directly comparable with the true sensor locations. In this work we explicitly evaluate the effectiveness of SOM in producing maps similar to the ground truth and we focus on reducing the localization error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">System Model</head><p>We consider a connected network with N nodes placed at unknown locations (x i , y i ) i=1,...,N . None of the nodes is equipped with hardware for position, range or angle estimation (e.g. GPS, ultrasound receivers or smart antennas) and no assumption is made regarding availability of sensors at each location. We only assume that every node can determine the set of its radio neighbors <ref type="foot" target="#foot_3">4</ref> and can transmit this information to a central point of computation. Also, during the neighbor discovery phase, nodes use the same transmission power in the effort to ensure an approximately uniform communication range. Once the connectivity information is known, the network can be represented as an undirected graph G net = (V, E), where two vertices are connected if the corresponding nodes are radio neighbors. The graph also serves to introduce the hop distance metric d = dist hop (•, •) defined as the length of the shortest path connecting two nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Modified SOM Model</head><p>The core of the SOM technique is the update rule defined in <ref type="bibr" target="#b1">(2)</ref>. In that expression, the neighborhood function h(•, •) takes into account the spatial arrangement of the neurons through the map distance dist map (•, •). Now we note that, as long as a distance function between two elements on the map is provided, the regular lattice can be replaced by an arbitrary structure of interconnected neurons. Consequently, we modify the original SOM architecture by using the network graph in place of the lattice of neurons and exchanging the map distance with the hop distance dist hop (•, •). The new neighborhood function is given by:</p><formula xml:id="formula_5">h(i, j) = exp - dist hop (i, j) 2 2r(n) . (<label>4</label></formula><formula xml:id="formula_6">)</formula><p>Having defined the new neighborhood function, the training algorithm illustrated in Section 3 can be applied to the localization problem. In this modified SOM model, neurons are located on the vertices of Gnet, hence we have a direct correspondence between the neurons and the network nodes. The weight vector associated with each neuron/node j has the form w j = (x j , y j ). This vector, initially picked at random, will eventually contain the estimated location for the corresponding node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Localization Algorithm</head><p>Since the proposed algorithm is centralized, each node needs to communicate the list of its radio neighbors to the unit in charge of the computation. This information is necessary first to build the adjacency matrix of Gnet, and then to compute the hop-count distances between each pair of network nodes, which are stored in a matrix H C with elements given by {hc} i,j = dist map (i, j). The matrix H C is the only input parameter required by the localization algorithm.</p><p>According to the scheme of Section 3, the weight vectors (x j , y j ) are initialized with random numbers and then trained with a set of input samples. Since we are using only connectivity information, we are free to work in a relative reference system where absolute coordinates are not important. In light of this model, we can easily generate the training set by sampling random points from an arbitrary uniform distribution (e.g. 0 ≤ x, y ≤ 1). This fact greatly simplifies the implementation of the algorithm since the localization task can be performed without having to rely on any other external information (e.g. network's physical dimensions or sensor readings like in <ref type="bibr" target="#b10">[11]</ref>).</p><p>Algorithm 1 contains the pseudo-code of the localization scheme. In the proposed scheme, the learning parameter η(n) and the radius r(n) are decreased linearly with the number of iterations (see lines 7 and 8). As a side note, we mention that, as the radius r(n) shrinks, the level of adaptation for neurons far from the BMU becomes negligible, so the update rule (line 13) can be more efficiently restricted to neurons within a short hop distance from the BMU. In Section 5.4, after defining the simulation setup and evaluation metric for the algorithm, we provide additional considerations on the weight initialization and the number of iterations required by the algorithm. for all network nodes j do 12:</p><formula xml:id="formula_7">h = exp -Hc(BM U,j) 2 2r(n) 13: (x j , y j ) += η(n)h[(x, y) -(x j , y j )] 14:</formula><p>end for 15: end for</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SIMULATIONS</head><p>In this section, we report the results of the simulations used to validate our localization scheme. Since we are interested in evaluating our scheme's performance in localizing small to medium size networks (10 -100 nodes) with low connectivity, we need to impose some constraints on how the random topologies are generated. We refrain from purely random deployments (coordinates selected as i.i.d. random numbers) for two reasons: i) it is unrealistic to assume that nodes will be positioned independently from each other and ii) in purely random deployments, the probability to obtain connected networks rapidly decreases to zero as we reduce the communication range <ref type="bibr" target="#b22">[23]</ref>. Since it is difficult to generate meaningful low-connectivity topologies, we consider a model in which the node density is kept roughly uniform by having the nodes positioned on the intersection points of a grid with rows and columns spaced by a factor r. We capture the nature of an ad hoc deployment by perturbing the positions with random noise and allowing for large placement errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Simulation Parameters</head><p>The parameters used to generate our simulation are the following:</p><p>Number (b) σ P E = 0.5r The algorithm was evaluated by generating 50 networks for each combination of the above parameters. After discarding disconnected networks, the number of simulated topologies is 9630, with an average connectivity of 6.98. The results presented in the following sections were obtained by executing 2000 iterations of the algorithm presented in Section 4.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Virtual Coordinates</head><p>The SOM based scheme is truly an anchor-free, range-free algorithm in the sense that it can generate virtual coordinates without relying on anchor nodes or distance measurements. Since the virtual coordinates cannot be compared to the true network coordinates, we use the delivery ratio of a greedy routing algorithm as evaluation metric. At each hop, the routing scheme forwards the packet to the neighbor node that is closer to the recipient of the message, according to the rule:</p><formula xml:id="formula_8">next_hop = arg min n (x n , y n ) -(x dest , y dest ) ,</formula><p>where (x n , y n ) are the virtual coordinates of the neighboring nodes and (x dest , y dest ) are those of the destination. Although the scheme is extremely unrefined (it simply gives up if it is unable to get closer to the destination), it is still useful to define a baseline for the performance achievable using more advanced schemes (e.g. GPRS <ref type="bibr" target="#b18">[19]</ref>). Using the simulation setup previously introduced, we have compared the performance of our approach with the results of MDS, a popular projection technique that has been successfully applied to the localization problem in WSNs <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b17">18]</ref>. Figure <ref type="figure" target="#fig_6">4a</ref> reports the percentage of packets successfully delivered using the greedy algorithm that operates on the basis of the relative maps generated by SOM and MDS. The results show that the virtual coordinates produced by both methods are effective when used for geographical routing, with a delivery ratio that is very close to that obtained using the true network coordinates. Similarly, the length of the routing path does not differ substantially from the case where the true node positions are known to the routing scheme (graph is not shown). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Absolute Coordinates</head><p>Virtual coordinates can be computed solely on the basis of connectivity information and are useful for important network tasks such as packet routing. Nevertheless, there are applications where absolute positions are required (e.g. a WSN to support a first responder team that needs to quickly locate the emergency scene). In order to convert relative node positions into absolute coordinates, at least three anchor points are needed for the bidimensional case. In this section, we have used four anchor nodes on the perimeter of the map to resolve rotational, translational and flipping ambiguities and align the map to an absolute coordinate system. As a result of this transformation, the computed positions can be compared with the true positions and the localization error can be expressed quantitatively.</p><p>Figures <ref type="figure" target="#fig_6">4b</ref> and<ref type="figure" target="#fig_6">4c</ref> show the error of SOM and MDS for different network sizes and placement errors. The error is expressed as a value relative to the communication range R. As expected, the accuracy of the localization schemes decreases as the placement error on the map increases. We note that while MDS works by actively using the hop-count distances between each pair of nodes, and thus it works better for larger and denser networks (where the number of constraints is higher), SOM is based on localized constrains and works better for smaller networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Weight Initialization and Convergence</head><p>Having defined the simulation parameters and the localization error, we analyze the effect of weights initialization and number of iterations on the algorithm's performance. Weight initialization influences both the convergence speed and the localization accuracy. In Sections 3 and 4 we stated that weights are initialized at random (usually with samples from the input set or other small values). In our simulations we have verified that this approach works well on average, but there are few occurrences where the final error is large (&gt; 1.0R). Figure <ref type="figure" target="#fig_7">6</ref> shows: a) a random topology b) the initial weight configuration and c) a case where the localization algorithm produced a substantially acceptable result. On the other hand, Figure <ref type="figure" target="#fig_7">6d</ref> shows an occurrence where the algorithm failed to converge to an acceptable solution for the same network topology. Although the relative positions of the majority of nodes are correct with respect to each other, the network is "twisted", with the nodes of the upper half in inverse order respect to the lower half. Such problem is caused by unfortunate initial weight configurations that determine a topological flipping of large blocks of nodes. In our experiments we found that the occurrence of such cases can be greatly reduced by initializing the weights with values lying on a straight line. The initialization rule is given by:</p><formula xml:id="formula_9">(x i , y i ) = H c (o, i) max j H c (o, j) , (<label>5</label></formula><formula xml:id="formula_10">)</formula><p>where o identifies a node placed on the perimeter of the map. According to the equation, weights are initially aligned along a line starting from (0, 0), the position of node o, and ending at (1, 1), the position of the node with maximum hop count distance from o. This scheme, which partially sorts the initial node positions, helps in reducing the final localization error as well as the occurrence of "twisted" networks. In our simulations we found that the proposed solution reduces the average localization error by about 43% with respect to random initializations, while the pergentage of networks with final error &gt; 0.5R is only 10.6%, against 31.5% for random initialization and 20.12% for MDS. The localization accuracy also depends on the number of iterations used in the algorithm. Figure <ref type="figure" target="#fig_10">7</ref> reports the average localization error for a test set containing 100 topologies generated using the simulation parameters defined in Section 5.1. We note that error rapidly decreases during the first 500 to 1000 iterations and then only reduces marginally.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Exploiting Anchor Information</head><p>In previous sections, the maps generated by SOM and MDS have been scaled and oriented by using the position of four anchor nodes. However, the structure of our approach is such that anchors' information (if available) can be exploited during the training phase of the map, with valuable effects on the final results. The modification to the algorithm involve two points: i) coordinates of anchor nodes are never updated (since they are already correct) and ii) whenever an anchor node is elected as BMU, the sample at current iteration is replaced with the anchor's position. The two modifications have the effect that anchor nodes not only remain in their position, but they also facilitate the map organization during the initial iterations. In addition, if the number of anchors is equal or greater than three, the method generates absolute coordinates without needing any further transformations. We have evaluated the performance of the algorithm using a priori knowledge of three and four anchor nodes (SOM_3A and SOM_4A respectively). The results show a substantial improvement in the localization accuracy: using four anchor nodes during the computation (SOM_4A) reduces the average localization error by about 30% with respect to the basic SOM algorithm, while the percentage of networks with localization error &gt;0.5% drops to only 3.15% of the total cases. Figure <ref type="figure" target="#fig_8">5a</ref> reports the results for various values of network connectivity. The plot shows that the SOM algorithm significantly outperforms MDS when the network connectivity is low, with an average error reduction of 43% for networks with connectivity between 3 and 10 (using SOM_4A). The explanation is that SOM is "less aggressive" in the use of node distances. The effect of the neighborhood function h(•, •) is such that the distance constraints among nearby sensors are weighted more than those of nodes several hops away. Consequently, the SOM scheme is less sensitive to condition of low connectivity, where high values of the hop count distance between two nodes do not necessarily imply that nodes are far from each other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ANISOTROPIC DEPLOYMENTS</head><p>Our localization scheme has been derived under the assumptions of approximately uniform deployment and communication range. In this section we use simulations to evaluate the effect of irregular radio patterns and anisotropic deployment on the algorithm's performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Irregular Radio Pattern</head><p>The results reported in the previous section were obtained assuming an idealized radio model, where two nodes are neighbors iff their distance is equal to or less than the communication range R. This assumption is very strong and does not take into account the nature of radio propagation in the space. To get an insight on the effect of multi-path, scattering and shadowing on the transmission range, we repeated experiments using a less ideal radio model. In particular we took into account the influence of an additional parameter, the Degree of Irregularity (DOI) with values 0.2 and 0.4. A DOI equal to 0.4 means that the effective transmission range for each sensor is uniformly drawn from the interval [0.6R -1.4R], where R is the average radio range. In Figures <ref type="figure" target="#fig_8">5b</ref> and<ref type="figure" target="#fig_8">5c</ref> we report the experimental results for DOI = 0.2 and DOI = 0.4, showing that the localization error does not significantly increase in conditions of irregular radio pattern (especially in the SOM_4A modification).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Anisotropic Networks</head><p>In addition to considering irregular radio patterns, we have simulated networks with anisotropic layouts resulting from the presence of large obstacles (e.g. buildings) in the region of the deployment. It is known that under such scenarios MDS, similar to the case of low connectivity, does not perform well. The reason is that MDS uses the hop count as a distance measure between each pair of nodes. While this approach works well when the path connecting two nodes lies approximately on a straight line, it generates large errors in the presence of obstacles. In this case two nodes can be physically close even if their hop distance is large.</p><p>The large error in the case of anisotropic networks has motivated alternative approaches where MDS is used to compute small local maps that are then stitched together into a global map <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b17">18]</ref>. Although this approach can be useful to solve the problem in a distributed manner, the process of map stitching greatly increases the complexity of the solution and is susceptible to large errors when the network connectivity is low. It would be useful to have a scheme capable of localizing irregular networks without having to partition the map and encumber the complexity of map stitching. To validate the performance of the SOM algorithm we have evaluated anisotropic deployments obtained by randomly placing the nodes around few obstacles. Two sample topologies are represented in Figures <ref type="figure" target="#fig_11">8a</ref> and<ref type="figure" target="#fig_11">8b</ref>  SOM and MDS were tested by simulating 200 random networks for both the "C" and "W" shaped maps with connectivity between 4.6 and 6.8. As in the previous simulation, we evaluated the average error after orienting the map using four anchor points on the perimeter. For the MDS localization scheme, the simulation results confirmed our expectation: the average final error was large in both cases, 1.56R for the C-shaped and 1.32R for the W-shaped network. The SOM algorithm did not suffer the same problem and produced results with the accuracy comparable to the case of uniform networks: 0.33R for the C-shaped network and 0.38R for the W-shaped one, with an average error reduction of 75% with respect to MDS. As explained previously, the better results are due to the fact that SOM mainly exploits the constraints derived by neighbors nodes that are placed few hops away from each other; consequently, it does not incur in large errors trying to relate the position of nodes that are several hops away. Figure <ref type="figure">9</ref> presents four sample maps generated by the MDS and SOM algorithm for the "C" and "W" topologies to give a qualitative illustration of the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">COMPUTATIONAL COMPLEXITY</head><p>Recently, several research efforts have been directed toward the study of distributed localization algorithms. This interest is motivated by the fact that centralized computation is not viable in the following circumstances: 1) the communication overhead to transfer the input data to a central unit is too high, 2) none of the devices in the system possess the computational resources to compute the whole solution, 3) the result is critical and introducing a single point of failure puts the reliability or security of the system in jeopardy. In this section we analyze the overhead of our scheme, showing that the SOM approach, although centralized, does not suffer from the above mentioned drawbacks and is suitable for highly constrained deployments.</p><p>The algorithm operates on the basis of connectivity information, therefore each sensor needs to communicate the set of its radio neighbors to the unit in charge of the computation. Assuming that node IDs are coded using two bytes (up to 65536 nodes), the information can be transmitted using a fairly small size radio messages. For example, the average connectivity of the networks in our simulations was less than 7, thus, on average, only 14 bytes need to be transmitted by each node. Since the amount of data can be further reduced by means of data aggregation techniques, the overhead to transfer the initial information to the central node does not pose a problem for many cases of practical interest.</p><p>Having received the neighbor sets, the data is used to generate the adjacency matrix of the network graph requiring [N (N -1)/2]/8 bytes 5 and then to compute the table Hc with the hop count distances between nodes. The solution can be obtained by repeating N executions of the popular Dijkstra's algorithm or using the Floyd's scheme. The complexity is O(N 3 ) in both cases, while the table needs enough storage space for N (N -1)/2 elements. The memory requirements for this table can be reduced by taking into account the maximum hop count distance between any two nodes (i.e. the network diameter). In our simulations, the average diameter was equal to 6.19 with a maximum value of 16. Using 4 bits to code the hop-count distances 6 , the size of the table is reduced to N (N -1)/4 bytes of memory. Finally, we need to reserve the memory space to hold the coordinates of the sensor nodes (i.e. the SOM weights). Assuming, that each coordinate is represented with 2 bytes, the total occupation is 4N bytes. As for the computational complexity of our approach, the iterative solution allows a trade-off between accuracy and execution time (cf. Section 5.4). Each iteration determines the BMU (requiring N comparisons), and then applies the update rule (2) to the map weights. Considering that the radius of the neighborhood function shrinks from a value initially equal to the network radius and then goes to zero, the average number of weight updates is N/2.</p><p>While the algorithm executes in a few second on a PC, we have implemented a TinyOS <ref type="bibr" target="#b26">[27]</ref> version to test the scheme on WSN nodes. The code was executed using TelosB <ref type="bibr" target="#b35">[36]</ref>, a low cost, commercially available sensor node. The board 5 We recall that the graph is undirected, so both the adjacency matrix and the hop count table are symmetric. 6 We note that even if some hop count distance exceeds the upper limit allowed, replacing this value with the upper limit does not have a noticeable impact on the algorithm because the interactions between units far from each other are very weak.</p><p>- As can be seen from the table, the limited hardware resources of an inexpensive sensor node are sufficient to generate a solution within a limited amount of time even for networks of 100 nodes. During the computation, the radio can be turned off and the microcontroller draws only few milliamp of current, with negligible impact on the energy budget of the sensor node. Since the algorithm runs with limited overhead on the same hardware used to implement the sensing task, the system reliability can be improved by simply running the computation on a few back-up units.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">RELATED WORK</head><p>Several localization techniques have been proposed in the past years. Although many schemes use TDOA (Time Difference of Arrival), Angle of Arrival (AoA) or analysis of the RSSI signal to obtain constraints on the position of neighboring nodes, some schemes are range-free and use connectivity information only. One of the first examples of such a technique is the "GPS-Less" <ref type="bibr" target="#b7">[8]</ref> positioning system, where nodes use a centroid approach to estimate their position by averaging the coordinates of nearby anchor nodes. In the "DV-Hop" scheme <ref type="bibr" target="#b32">[33]</ref>, anchor nodes flood the network with message beacons that are used by each node to determine the minimal hop count distances. Using an estimate of the average hop length, this information is used to obtain distance values and perform multi-lateration. A similar approach is proposed in <ref type="bibr" target="#b31">[32]</ref>, but in this case the estimation of the av-erage hop length benefits from a priori knowledge of the node density through the use of the well known Kleinrock and Slivester formula to determine the hop size. The APIT scheme is proposed in <ref type="bibr" target="#b13">[14]</ref> and is directly compared to <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b31">32]</ref> using extensive simulations. The result shows that all the schemes previously mentioned perform well only when a high number of anchor nodes are present and network density is high. For uniform topologies with connectivity equal to 8, each nodes need to be able to receive the beacon messages from more than twelve anchor nodes to reduce the localization error under 1.0R. Multi-Dimensional Scaling, which we use for direct comparison in our simulations, was originally used in <ref type="bibr" target="#b38">[39]</ref>. The method has been successively extended to work in a distributed fashion <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b17">18]</ref>, motivated in part by the poor performance with anisotropic layouts (cf. Section 6). SOMs have been extensively used in a variety of applications <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b34">35]</ref>. In a recent work, Ertin and Priddy <ref type="bibr" target="#b10">[11]</ref> use SOM to solve the localization problem in Wireless Sensor Networks. Their model is based on the assumption that network nodes can sense a common phenomena (e.g. acoustic or seismic) at synchronized time steps. A further assumption is that the correlation between sensor readings is a function only of the distance between nodes: E[zizj] = f ( xi -xj ). Under these conditions, sensor readings from all the nodes are first accumulated to form the training set, and then, after the SOM model has been trained, are used to sort the nodes according to their proximity to a set of virtual sensors placed on a regular grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">CONCLUSIONS</head><p>In this paper we proposed a centralized algorithm to solve the localization problem for WSNs. The algorithm, which operates on the basis of connectivity information, is able to produce accurate results in situations where other approaches have a poor performance: networks with low connectivity and irregular topologies. In addition, the lightweight implementation of the scheme is suitable for resourcepoor nodes commonly found in WSN applications. Future work will investigate a distributed version of the algorithm and an extension to exploit angle information derived from directional antennas.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A two-dimensional map with the unit forming an hexagonal pattern.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: 10×10 SOM trained with samples from the RGB color space: a) input space, b) initial weights, c) final weights.</figDesc><graphic coords="3,486.07,336.93,59.01,59.01" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Algorithm 1 :</head><label>1</label><figDesc>SOM Based LocalizationInput: matrix Hc: hop count distances among nodes Output: (x j , y j ) j=1,...,N : node positions% Initialization 1: [ηmax; ηmin] = [0.1; 0.01] 2: [r max ; r min ] = [(max i,jH C (i, j))/2; 0.001] 3: for all nodes n do 4:(xn, yn) = random() 5: end for % Main Loop 6: for n = 1 : to n_iter-1 do 7:η(n) = η max -n(η max -η min )/(n_iter -1) 8: r(n) = r max -n(r max -r min )/(n_iter -1)9: (x, y) = random() 10: BM U = arg min j (x, y) -(xj, yj) 11:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Two 100-node networks with different placement errors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: a) Delivery ratio using virtual coordinates and b,c) Average Error (R) as function of network size for SOM and MDS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Localization convergence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Average Error (R) as function of network connectivity for different values of radio pattern DOI.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Average Error (R) as function of the number of iterations (results averaged over 100 random topologies).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Anisotropic networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>of nodes, N: We simulated networks with<ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b35">36,</ref> 64, 81 and 100 nodes. PE = {0.1, 0.2, 0.3, 0.4, 0.5} r. Figure3reports two topologies for different values of the placement error.Communication Radius, R: The maximum communication radius is chosen as a function of the spacing factor r: R = {1.25, 1.5, 1.75, 2.0, 2.25} r. In this first set of simulations, we consider two nodes as neighbors if their distance is less than R. We analyze the effect of irregular radio pattern in Section 6.1.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="9">100 Nodes; Radius = 0.194444; Avg Connectivity = 7.06</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">100 Nodes; Radius = 0.194444; Avg Connectivity = 6.76</cell></row><row><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>95</cell></row><row><cell>0.8 1</cell><cell cols="2">71 72 81 91</cell><cell>82 92</cell><cell cols="3">73 83 9394 74 84</cell><cell>75 85 95</cell><cell>76 86 96</cell><cell>77 87 97</cell><cell cols="2">78 88 89 98 99</cell><cell>79</cell><cell>80</cell><cell cols="2">90 100</cell><cell>0.8 1</cell><cell></cell><cell cols="2">71 72 81 91</cell><cell>73 82</cell><cell>83 92</cell><cell>84 93 94</cell><cell>74</cell><cell>85 86</cell><cell>76 96 77 87</cell><cell>98 88 97</cell><cell>79 89 99</cell><cell>90 100</cell><cell>80</cell></row><row><cell>0.2 0.4 0.6</cell><cell>31 61</cell><cell cols="3">11 21 22 12 32 33 13 23 41 42 43 51 52 53 62 63</cell><cell>24 34 44 54</cell><cell cols="5">14 25 35 45 15 16 26 36 37 27 17 46 47 55 56 57 64 65 66 67 68 18 28 38 48 58</cell><cell cols="4">19 20 29 30 39 40 49 50 59 69 70</cell><cell>60</cell><cell>0.2 0.4 0.6</cell><cell>31</cell><cell>1 41 51 61</cell><cell>11 22 21 42 62</cell><cell cols="2">12 33 2324 32 43 5253</cell><cell cols="2">13 44 54 64 34 63</cell><cell>55</cell><cell>15 16 26 25 35 45 65 75</cell><cell>17 36 37 27 46 47 56 57 66 67</cell><cell>58</cell><cell>18 38 48 28 29 30 39 49 59 69 68 78</cell><cell>20 40 60 70</cell><cell>50</cell></row><row><cell>0</cell><cell></cell><cell>1</cell><cell>2</cell><cell>3</cell><cell cols="2">4</cell><cell>5</cell><cell>6 7</cell><cell></cell><cell>8</cell><cell>9</cell><cell></cell><cell cols="2">10</cell><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell>2</cell><cell></cell><cell>3 4</cell><cell>14 5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>19</cell><cell>10</cell></row><row><cell>-0.2 -0.2</cell><cell></cell><cell>0</cell><cell>0.2</cell><cell></cell><cell></cell><cell>0.4</cell><cell></cell><cell>0.6</cell><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell>1.2</cell><cell>-0.2 -0.2</cell><cell></cell><cell>0</cell><cell></cell><cell cols="2">0.2</cell><cell></cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell></cell><cell cols="10">(a) σ P E = 0.2r</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>Placement Error, σ PE : The initial positions are given by a regular grid of √ N × √ N elements spaced by a factor r. Node positions are obtained by perturbing the grid positions with Gaussian noise having zero mean and standard deviation σ</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>.</figDesc><table><row><cell></cell><cell cols="12">72 Nodes ; Ra dius = 0.225000; Avg Conne ctivity = 7.44</cell><cell></cell><cell></cell><cell cols="5">59 Nodes ; Ra dius = 0.225000; Avg Connec tivity = 5.73</cell></row><row><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.8 1</cell><cell>46 64 55</cell><cell>56</cell><cell>47 65</cell><cell cols="2">57</cell><cell cols="3">43 48 6667 58 59 49 50 68</cell><cell>44 60 69</cell><cell></cell><cell cols="2">45 53 54 61 62 63 52 51 70 71</cell><cell>72</cell><cell>0.8 1</cell><cell cols="2">49 56</cell><cell cols="2">44 45</cell><cell>50 57</cell><cell>51</cell><cell>46 58 52</cell><cell>53</cell><cell>47 54</cell><cell>48 55 59</cell></row><row><cell>0.6</cell><cell cols="2">37 40 41</cell><cell cols="2">42</cell><cell cols="2">39</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.6</cell><cell cols="3">33 39</cell><cell cols="2">40</cell><cell>34</cell><cell>35</cell><cell>41</cell><cell>36</cell><cell>42</cell><cell>3738 43</cell></row><row><cell>0 0.2 0.4</cell><cell>1 10 19 28</cell><cell cols="2">2 11 20 29 38</cell><cell>3</cell><cell cols="2">12 21 30</cell><cell>4 31</cell><cell cols="2">5 13 14 15 6 22 23 24 32 33</cell><cell>7</cell><cell>16 25 34</cell><cell cols="2">8 17 18 26 27 9 35 36</cell><cell>0 0.2 0.4</cell><cell>1</cell><cell>8 24</cell><cell cols="2">16</cell><cell>2 9 10 3 4 17 18 25 26</cell><cell>11 19 27</cell><cell>28</cell><cell>1213 20 29</cell><cell>7 14 15 21 22 23 6 30 31 5 32</cell></row><row><cell>-0.2 -0.2</cell><cell>0</cell><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.4</cell><cell>0.6</cell><cell></cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell><cell>-0.2 -0.2</cell><cell cols="2">0</cell><cell></cell><cell></cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell cols="12">(a) "C" deployment</cell><cell></cell><cell></cell><cell cols="5">(b) "W" deployment</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Memory requirements and execution time of the SOM algorithm on a TelosB node. N. Nodes Memory Exec. Hc Exec. 1000 iter. bit RISC microcontroller featuring 10KB of RAM, 48KB of code memory and an internal oscillator working at the frequency of 8MHz. The algorithm was implemented as reported in Section 4.3, with the only exception that the Gaussian neighborhood function was replaced with a triangular function, which produces similar results using much less computation. Table1reports the memory occupation of the data structures described above and the execution time to compute the table Hc and then to perform 1000 iterations of the localization algorithm.</figDesc><table><row><cell></cell><cell cols="12">72 Nodes; Radius = 0.225000; Avg Connectivity = 7.44</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="11">60 Nodes; Radius = 0.250000; Avg Connectivity = 6.67</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="13">72 Nodes; Radius = 0.225000; Avg Connectivity = 7.44</cell><cell>60 Nodes; Radius = 0.250000; Avg Connectivity = 6.67</cell></row><row><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.6</cell></row><row><cell>0.8 1</cell><cell>46 55 56 64 65</cell><cell>47</cell><cell cols="3">43 48 57 58 66 67</cell><cell cols="2">49</cell><cell>50 59 68</cell><cell>44 60 69</cell><cell>51</cell><cell>61</cell><cell>45 52 53 70</cell><cell cols="2">54 62 63 71</cell><cell>72</cell><cell>0.8 1</cell><cell>40 50 51 56 57 45 46</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>52 58 53</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">48 49 59 60 54 55</cell><cell></cell><cell>1 0.8</cell><cell></cell><cell></cell><cell>65</cell><cell></cell><cell cols="2">66 67</cell><cell>58</cell><cell cols="2">68</cell><cell>69 50 59</cell><cell cols="2">70</cell><cell cols="2">61 44 60</cell><cell>45 6263 52 51</cell><cell>72 54 71 53</cell><cell>1.4 1.2 1</cell><cell>56 57</cell><cell>51</cell><cell>58</cell><cell>55</cell><cell>60</cell></row><row><cell>0 0.2 0.4 0.6</cell><cell>1 10 28 19 20 2 11 37 38 40</cell><cell cols="2">3 12 21 29 30 39 41 42</cell><cell>4</cell><cell cols="2">31</cell><cell cols="2">5 13 22 23</cell><cell>6 15 24 32 14 33</cell><cell>25 34</cell><cell></cell><cell>7 16</cell><cell>8 26 35</cell><cell>9 17 18</cell><cell>27 36</cell><cell>0 0.2 0.4 0.6</cell><cell>1 23 24 9 10 15 32 33 39</cell><cell>2</cell><cell>16</cell><cell>3</cell><cell>4 25 17 11 34</cell><cell>18</cell><cell>26 27 36 35 41 42 47</cell><cell>19</cell><cell>5 28 29</cell><cell>20</cell><cell>6 12</cell><cell>7 37 21 30</cell><cell>8 1314 22 31 38 43 44</cell><cell></cell><cell>0 0.2 0.4 0.6</cell><cell>1</cell><cell>10 19 64 55</cell><cell>2 46 11 28 40</cell><cell>3 37 38 20 56</cell><cell>4 12</cell><cell cols="3">5 2930 21 41 42 47 57</cell><cell cols="3">6 48 49 13 22 23 31 39 43</cell><cell cols="2">7 14 15 24 32 33</cell><cell cols="2">16</cell><cell>8 9 25 34</cell><cell>17 18 35 26</cell><cell>27 36</cell><cell>0 0.2 0.4 0.6 0.8</cell><cell>45 46 50</cell><cell>32 39 40</cell><cell>15 3 24 33 23</cell><cell>1 9 10 16 25 2 11 17 34 35 18 4 26 36 41 5 27 28 29 47 19 42</cell><cell>6 8 7 31 22 38 13 44 43 49 48 12 21 20 14 30 37 54</cell><cell>59</cell></row><row><cell>0.2 -0.2</cell><cell>0</cell><cell>0.2</cell><cell></cell><cell cols="2">0.4</cell><cell></cell><cell></cell><cell></cell><cell>0.6</cell><cell cols="2">0.8</cell><cell></cell><cell></cell><cell>1</cell><cell>1.2</cell><cell>-0.2 -0.2</cell><cell>0</cell><cell></cell><cell></cell><cell cols="2">0.2</cell><cell>0.4</cell><cell></cell><cell>0.6</cell><cell></cell><cell cols="2">0.8</cell><cell></cell><cell>1</cell><cell>1.2</cell><cell>-0.2 -0.2</cell><cell cols="2">0</cell><cell>0.2</cell><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell cols="2">0.6</cell><cell></cell><cell></cell><cell>0.8</cell><cell></cell><cell>1</cell><cell>1.2</cell><cell>1.4</cell><cell>-1 -0.2</cell><cell>-0.5</cell><cell>0</cell><cell>0.5</cell><cell>52 53</cell><cell>1</cell><cell>1.5</cell></row><row><cell></cell><cell cols="13">(a) SOM: "C" net</cell><cell></cell><cell></cell><cell></cell><cell cols="13">(b) SOM: "W" net</cell><cell></cell><cell></cell><cell></cell><cell cols="14">(c) MDS: "C" net</cell><cell>(d) MDS: "W" net</cell></row><row><cell cols="47">Figure 9: Sample results for anisotropic layouts: in this case, the SOM algorithm reduces the average</cell></row><row><cell cols="28">localization error of 75% with respect to MDS.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>36</cell><cell></cell><cell></cell><cell></cell><cell cols="7">0.42 KB</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">1 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">62 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>64</cell><cell></cell><cell></cell><cell></cell><cell cols="7">1.48 KB</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">6 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">102 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>100</cell><cell></cell><cell></cell><cell></cell><cell cols="7">3.42 KB</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">22 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">156 sec</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="30">is equipped with Texas Instrument MSP430 F1611, a low</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">power 16-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>A Unit Disk Graph is a graph where two node are connected iff their distance is less than 1.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p><ref type="bibr" target="#b1">2</ref> This model vaguely resembles the structure of the cerebral cortex, where neurons are placed on a 2D surface and interact preferentially over lateral synaptic connections.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>In this sense SOM can be seen as non-linear version of the Principal Component Analysis (PCA) technique.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>By neighbors, we mean symmetrical radio neighbors: messages from node j are received by i and vice versa.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">ACKNOWLEDGMENTS</head><p>This research work was partly funded by MIUR-Interlink, INT01ACA89 program. We would like to thank Guofeng Deng, Kari Torkkola, Jie Gao and anonymous reviewers for their helpful comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Adelstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Richard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Schwiebert</surname></persName>
		</author>
		<title level="m">Fundamentals of mobile and pervasive computing</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw-Hill</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Wireless sensor networks: a survey</title>
		<author>
			<persName><forename type="first">I</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sankarasubramaniam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cayirci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="393" to="422" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Exscal: Elements of an extreme scale wireless sensor network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramnath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Ertin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bapat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Naik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kulathumani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sridharan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE RTCSA</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">B</forename><surname>Electronics</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sensicast</forename></persName>
		</author>
		<ptr target="http://www.bb-elec.com/wirelesssurvey/" />
		<title level="m">wireless survey results</title>
		<imprint>
			<date type="published" when="2005-08">August 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Mobile personal navigation services</title>
		<author>
			<persName><forename type="first">Berg</forename><surname>Insight</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename></persName>
		</author>
		<ptr target="http://www.gii.co.jp/english/ber39982-personal-navi.html" />
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Self-Organizing Maps for Drawing Large Graphs</title>
		<author>
			<persName><forename type="first">E</forename><surname>Bonabeau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Henaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="177" to="184" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Unit disk graph recognition is NP-hard</title>
		<author>
			<persName><forename type="first">H</forename><surname>Breu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kirkpatrick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry: Theory and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="3" to="24" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">GPS-less low-cost outdoor localization for very small devices. Personal Communications</title>
		<author>
			<persName><forename type="first">N</forename><surname>Bulusu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>IEEE</publisher>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="28" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Two or three things that we know about the Kohonen algorithm</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cottrell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Fort</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pages</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ESANN, European Symp. on Artificial Neural Networks</title>
		<meeting>ESANN, European Symp. on Artificial Neural Networks</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="235" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The Sensor Web: A Macro-Instrument for Coordinated Sensing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Delin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sensors</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="270" to="285" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Self-localization of wireless sensor networks using self-organizing maps</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ertin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Priddy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of SPIE</title>
		<imprint>
			<biblScope unit="volume">5803</biblScope>
			<biblScope unit="page">138</biblScope>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Quick and dirty localization for a lost robot. Computational Intelligence in Robotics and Automation</title>
		<author>
			<persName><forename type="first">U</forename><surname>Gerecke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sharkey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIRA&apos;99. Proceedings. 1999 IEEE International Symposium on</title>
		<imprint>
			<date type="published" when="1999">1999. 1999</date>
			<biblScope unit="page" from="262" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Network localization in partially localizable networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Goldenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Maness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Morse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Savvides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM 2005. 24th Annual Joint Conf. of the</title>
		<imprint>
			<publisher>IEEE Computer and Communications Societies</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Range-free localization schemes for large scale sensor networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Abdelzaher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th annual international conference on Mobile computing and networking</title>
		<meeting>the 9th annual international conference on Mobile computing and networking</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="81" to="95" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Location systems for ubiquitous computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="57" to="66" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Directed diffusion: A scalable and robust communication paradigm for sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM/IEEE International Conference on Mobile Computing and Networking</title>
		<meeting>the ACM/IEEE International Conference on Mobile Computing and Networking</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="56" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Autonomous mobile robot global self-localization using Kohonen and region-feature neural networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Janet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gutierrez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chase</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sutton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Robotic Systems</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="263" to="282" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Sensor positioning in wireless ad-hoc sensor networks using multidimensional scaling</title>
		<author>
			<persName><forename type="first">X</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM 2004. Twenty-third Annual Joint Conf. of the IEEE Computer and Communications Societies</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">GPSR: greedy perimeter stateless routing for wireless networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th annual international conference on Mobile computing and networking</title>
		<meeting>the 6th annual international conference on Mobile computing and networking</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="243" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Bibliography of self-organizing map (SOM) papers: 1981-1997</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kaski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kangas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3&amp;4</biblScope>
			<biblScope unit="page" from="1" to="176" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Self-organized formation of topologically correct feature maps</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biological Cybernetics</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="69" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Things you haven&apos;t heard about the self-organizing map</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on</title>
		<imprint>
			<date type="published" when="1993">1993. 1993</date>
			<biblScope unit="page" from="1147" to="1156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Communications, information and network security</title>
		<author>
			<persName><forename type="first">B</forename><surname>Krishnamachari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wicker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bejar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pearlman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>ch. Critical Density Thresholds in Distributed Wireless Networks</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Unit disk graph approximation</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Moscibroda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 joint workshop on Foundations of mobile computing</title>
		<meeting>the 2004 joint workshop on Foundations of mobile computing</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="17" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Geometric ad-hoc routing: of theory and practice</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zollinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the twenty-second annual symposium on Principles of distributed computing</title>
		<meeting>the twenty-second annual symposium on Principles of distributed computing</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Distributed localization in wireless sensor networks: a quantitative comparison</title>
		<author>
			<persName><forename type="first">K</forename><surname>Langendoen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Reijers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="499" to="518" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">TinyOS: An Open Operating System for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Levis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th International Conference on Mobile Data Management (MDM&apos;06</title>
		<meeting>the 7th International Conference on Mobile Data Management (MDM&apos;06</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">00</biblScope>
		</imprint>
	</monogr>
	<note>Invited Seminar</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A scalable location service for geographic ad hoc routing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jannotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">De</forename><surname>Couto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>ACM Press</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Range-Free Ranking in Sensors Networks and Its Applications to Localization</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Lotker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>De Albeniz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Perennes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 3 rdAd-Hoc, Mobile, and Wireless Networks</title>
		<meeting>3 rdAd-Hoc, Mobile, and Wireless Networks</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="158" to="171" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Self-organizing graphs-a neural network perspective of graph layout</title>
		<author>
			<persName><forename type="first">B</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International Symposium on Graph Drawing</title>
		<meeting>the 6th International Symposium on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="246" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Virtual coordinates for ad hoc and sensor networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Moscibroda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>O'dell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wattenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 joint workshop on Foundations of mobile computing</title>
		<meeting>the 2004 joint workshop on Foundations of mobile computing</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="8" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Organizing a global coordinate system from local information on an ad hoc sensor network</title>
		<author>
			<persName><forename type="first">R</forename><surname>Nagpal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shrobe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bachrach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2nd int. symposium on Information Processing in Sensor Networks (IPSN)</title>
		<meeting>of the 2nd int. symposium on Information essing in Sensor Networks (IPSN)</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">DV Based Positioning in Ad Hoc Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Niculescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Telecommunication Systems</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="267" to="280" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Theoretical aspects of connectivity-based multi-hop positioning</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">O</forename><surname>Dell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wattenhofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">344</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="68" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Bibliography of self-organizing map (SOM) papers: 1998-2001 addendum</title>
		<author>
			<persName><forename type="first">M</forename><surname>Oja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kaski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="156" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Telos: enabling ultra-low power wireless research</title>
		<author>
			<persName><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 4th int. symposium on Information processing in sensor networks (IPSN)</title>
		<meeting>of the 4th int. symposium on Information processing in sensor networks (IPSN)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Geographic routing without location information</title>
		<author>
			<persName><forename type="first">A</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th annual international conference on Mobile computing and networking</title>
		<meeting>the 9th annual international conference on Mobile computing and networking</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="96" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Improved MDS-based localization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Ruml</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM 2004. Twenty-third Annual Joint Conf. of the IEEE Computer and Communications Societies</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Localization from mere connectivity</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Shang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Ruml</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fromherz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th ACM international symposium on Mobile ad hoc networking &amp; computing</title>
		<meeting>the 4th ACM international symposium on Mobile ad hoc networking &amp; computing</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="201" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Precision Agriculture -an International Journal on Advances in the Science of Precision Agriculture</title>
		<editor>J. Stafford</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="1999" to="2006" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
