<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Robust Influence Maximization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Wei</forename><surname>Chen</surname></persName>
							<email>weic@microsoft.com</email>
						</author>
						<author>
							<persName><forename type="first">Tian</forename><surname>Lin</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zihan</forename><surname>Tan</surname></persName>
							<email>zihantan1993@gmail.com</email>
						</author>
						<author>
							<persName><forename type="first">Mingfei</forename><surname>Zhao</surname></persName>
							<email>mingfeizhao@hotmail.com</email>
						</author>
						<author>
							<persName><forename type="first">Xuren</forename><surname>Zhou</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Microsoft Research</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Tsinghua University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution" key="instit1">IIIS</orgName>
								<orgName type="institution" key="instit2">Tsinghua University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">IIIS</orgName>
								<orgName type="institution" key="instit2">Tsinghua University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">The Hong Kong University of Science and Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">KDD &apos;16</orgName>
								<address>
									<addrLine>August 13 -17</addrLine>
									<postCode>2016</postCode>
									<settlement>San Francisco</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Robust Influence Maximization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">9C5BC9606186C9596197BCBE67256EDE</idno>
					<idno type="DOI">10.1145/2939672.2939745</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:09+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>social networks</term>
					<term>influence maximization</term>
					<term>robust optimization</term>
					<term>information diffusion</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we address the important issue of uncertainty in the edge influence probability estimates for the well studied influence maximization problem -the task of finding k seed nodes in a social network to maximize the influence spread. We propose the problem of robust influence maximization, which maximizes the worst-case ratio between the influence spread of the chosen seed set and the optimal seed set, given the uncertainty of the parameter input. We design an algorithm that solves this problem with a solutiondependent bound. We further study uniform sampling and adaptive sampling methods to effectively reduce the uncertainty on parameters and improve the robustness of the influence maximization task. Our empirical results show that parameter uncertainty may greatly affect influence maximization performance and prior studies that learned influence probabilities could lead to poor performance in robust influence maximization due to relatively large uncertainty in parameter estimates, and information cascade based adaptive sampling method may be an effective way to improve the robustness of influence maximization.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In social and economic networks, Influence Maximization problem has been extensively studied over the past decade, due to its wide applications to viral marketing <ref type="bibr" target="#b13">[13,</ref><ref type="bibr" target="#b19">19]</ref>, outbreak detection <ref type="bibr" target="#b22">[22]</ref>, rumor monitoring <ref type="bibr" target="#b6">[6]</ref>, etc. For example, a company may conduct a promotion campaign in social networks by sending free samples to the initial users (termed as seeds), and via the word-of-mouth (WoM) effect, more and more users are influenced by social links to join the campaign and propagate messages of the promotion. This problem is first introduced by Kempe et al. <ref type="bibr" target="#b19">[19]</ref> under an algorithmic framework to find the most influential seeds, and they propose the independent cascade model and linear threshold model, which consider the social-psychological factors of information diffusion to simulate such a random process of adoptions.</p><p>Since Kempe et al.'s seminal work, extensive researches have been done on influence maximization, especially on improving the efficiency of influence maximization in the independent cascade model <ref type="bibr" target="#b11">[11,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b16">16,</ref><ref type="bibr" target="#b4">4,</ref><ref type="bibr" target="#b28">28]</ref>, all of which assume that the ground-truth influence probabilities on edges are exactly known. Separately, a number of studies <ref type="bibr" target="#b26">[26,</ref><ref type="bibr" target="#b27">27,</ref><ref type="bibr" target="#b15">15,</ref><ref type="bibr" target="#b25">25,</ref><ref type="bibr" target="#b24">24]</ref> propose learning methods to extract edge influence probabilities. Due to inherent data limitation, no learning method could recover the exact values of the edge probabilities, and what can be achieved is the estimates on the true edge probabilities, with confidence intervals indicating that the true values are within the confidence intervals with high probability. The uncertainty in edge probability estimates, however, may adversely affect the performance of the influence maximization task, but this topic has left mostly unexplored. The only attempt addressing this question is a recent study in <ref type="bibr" target="#b18">[18]</ref>, but due to a technical issue as explained in <ref type="bibr" target="#b18">[18]</ref>, the results achieved by the study is rather limited.</p><p>In this paper, we utilize the concept of robust optimization <ref type="bibr" target="#b3">[3]</ref> in operation research to address the issue of influence maximization with uncertainty. In particular, we consider that the input to the influence maximization task is no longer edge influence probability on every edge of a social graph, but instead an interval in which the true probability may lie. Thus the input is actually a parameter space Θ, which is the product of all intervals on all edges. For any seed set S, let σ θ (S) denote the influence spread of S under parameter setting θ ∈ Θ. Then we define robust ratio of S as g(Θ, S) = min θ∈Θ σ θ (S) σ θ (S * θ ) , where S * θ is the optimal seed set achieving the maximum influence spread under parameter θ. Intuitively, robust ratio of S indicates the (multiplicative) gap between its influence spread and the optimal influence spread under the worse-case parameter θ ∈ Θ, since we are unsure which θ ∈ Θ is the true probability setting. Then our optimization task is to find a seed set of size k that maximize the robust ratio under the known parameter space Θ -we call this task Robust Influence Maximization (RIM).</p><p>It is clear that when there is no uncertainty on edge probabilities, which means Θ collapses to the single true parameter θ, RIM degenerates to the classical influence maximization problem. However, when uncertainty exists, solving RIM may be a more difficult task. In this paper, we first pro-pose an algorithm LUGreedy that solves the RIM task with a solution-dependent bound on its performance, which means that one can verify its performance after it selects the seed set (Section 3). We then show that if the input parameter space Θ is only given and cannot be improved, it is possible that even the best robust ratio in certain graph instances could be very small (e.g. O(log n/ √ n) with n being the number of nodes in the graph). This motivates us to study sampling methods to further tighten parameter space Θ, and thus improving the robustness of our algorithm (Section 4). In particular, we study both uniform sampling and adaptive sampling for improving RIM performance. For uniform sampling, we provide theoretical results on the sample complexity for achieving a given robust ratio of the output seed set. For adaptive sampling, we propose an information cascade based sampling heuristic to adaptively bias our sampling effort to important edges often traversed by information cascades. Through extensive empirical evaluations (Section 5), we show that (a) robust ratio is sensitive to the width of the confidence interval, and it decreases rapidly when the width of the confidence interval increases; as a result prior studies that learned edge probabilities may result in poor robust ratio due to relative large confidence intervals (and thus high uncertainty); (b) information cascade based adaptive sampling method performs better than uniform sampling and other baseline sampling methods, and can significantly improve the robustness of the influence maximization task.</p><p>In summary, the contribution of our paper includes: (a) proposing the problem of robust influence maximization to address the important issue of uncertainty in parameter estimates adversely impacting the influence maximization task; (b) providing the LUGreedy algorithm that guarantees a solution-dependent bound; and (c) studying uniform and adaptive sampling methods to improve robust influence maximization.</p><p>Due to space constraint, the proofs of some technical results are omitted. The complete proofs of all results can be found in the full technical report <ref type="bibr" target="#b9">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Additional Related Work</head><p>Influence maximization has been extensively studied and we already point out a number of closely related studies to our work in the introduction. For a comprehensive survey, one can refer to the monograph <ref type="bibr" target="#b8">[8]</ref>. We discuss a few most relevant work in more detail here.</p><p>To the best of our knowledge, the study by He and Kempe <ref type="bibr" target="#b18">[18]</ref> is the only attempt prior to our work that also tries to address the issue of uncertainty of parameter estimates impacting the influence maximization tasks. However, besides the similarity in motivation, the technical treatments are quite different. First, their central problem, called influence difference maximization, is to find a seed set of size k that maximizes the additive difference between the two influence spreads of the same seed set using different parameter values. Their purpose is to see how large the influence gap could be due to the uncertainty in parameter space. However, our goal is still to find the best possible seed set for influence maximization purpose, while considering the adverse effect of the uncertainty, and thus we utilize the robust optimization concept and use the worse-case multiplicative ratio between the influence spread of the chosen seed set and the optimal seed set as our objective function. Second, their influence difference maximization turns out to be hard to approximate to any reasonable ratio, while we provide an actual algorithm for robust influence maximization that has both a theoretical solution-dependent bound and performs reasonably well in experiments. Third, we further consider using sampling methods to improve RIM, which is not discussed in <ref type="bibr" target="#b18">[18]</ref>.</p><p>In the context of robust optimization, Krause et al.'s work on robust submodular optimization <ref type="bibr" target="#b20">[20]</ref> is possibly the closest to ours. Our RIM problem can be viewed as a specific instance of robust submodular optimization studied in <ref type="bibr" target="#b20">[20]</ref>. However, due to the generality of problem scope studied in <ref type="bibr" target="#b20">[20]</ref>, they show strong hardness results and then they have to resolve to bi-criteria solutions. Instead, we are working on a particular instance of robust submodular optimization, and their bi-criteria solution may greatly enlarge the selected seed set size, which may not be allowed in our case. Furthermore, they work on finite set of submodular functions, but in our case our objective function is parametrized with θ from a continuous parameter space Θ, and it is unclear how their results work for the continuous case.</p><p>In a parallel work that will appear in the same proceeding, He and Kempe study the same subject of robust influence maximization <ref type="bibr" target="#b17">[17]</ref>, but they follow the bi-criteria approximation approach of <ref type="bibr" target="#b20">[20]</ref>, and thus in general their results are orthogonal to ours. In particular, they use essentially the same objective function, but they work on a finite set of influence spread functions Σ, and require to find k • ln |Σ| seeds to achieve 1 -1/e approximation ratio comparing to the optimal seed set of size k; when working on continuous parameter space Θ, they show that it is equivalent to a finite spread function space of size 2 n and thus requiring Θ(kn) seeds for a bi-criteria solution, which renders the bi-criteria solution useless. Thus their bi-criteria approach is suitable when the set of possible spread functions Σ is small.</p><p>Adaptive sampling for improving RIM bears some resemblance to pure exploration bandit research <ref type="bibr" target="#b5">[5]</ref>, especially to combinatorial pure exploration <ref type="bibr">[7]</ref> recently studied. Both use adaptive sampling and achieve some optimization objective in the end. However, the optimization problem modeled in combinatorial pure exploration <ref type="bibr">[7]</ref> does not have a robustness objective. Studying robust optimization together with combinatorial pure exploration could be a potentially interesting topic for future research. Another recent work <ref type="bibr" target="#b21">[21]</ref> uses online algorithms to maximize the expected coverage of the union of influenced nodes in multiple rounds based on online feedbacks, and thus is different from our adaptive sampling objective: we use feedbacks to adjust adaptive sampling in order to find a seed set nearly maximizing the robust ratio after the sampling is done.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">MODEL AND PROBLEM DEFINITION</head><p>As in <ref type="bibr" target="#b19">[19]</ref>, the independent cascade (IC) model can be equivalently modeled as a stochastic diffusion process from seed nodes or as reachability from seed nodes in random live-edge graphs. For brevity, we provide the live-edge graph description below. Consider a graph G = (V, E) comprising a set V of nodes and a set E of directed edges, where every edge e is associated with probability pe ∈ [0, 1], and let n = |V | and m = |E|. To generate a random live-edge graph, we declare each edge e as live if flipping a biased random coin with probability pe returns success, declare e as blocked otherwise (with probability 1 -pe). The randomness on all edges are mutually independent. We define the subgraph L</p><formula xml:id="formula_0">Algorithm 1 Greedy(G, k, θ) Input: Graph G, budget k, parameter vector θ 1: S0 ← ∅ 2: for i = 1, 2, . . . , k do 3: v ← arg max v / ∈S i {σ θ (Si-1 ∪ {v}) -σ θ (Si-1)} 4:</formula><p>Si ← Si-1 ∪ {v} 5: end for 6: return S k consisting of V and the set of live edges as the (random) live-edge graph. Given any set S ⊆ V (referred as seeds), let RL(S) ⊆ V denote the reachable set of nodes from S in live-edge graph L, i.e., (1) S ⊆ RL(S), and (2) for a node v / ∈ S, v ∈ RL(S) iff there is a path in L directing from some node in S to v.</p><p>For convenience, we use parameter vector θ = (pe)e∈E to denote the probabilities on all edges. The influence spread function σ θ (S) is defined as the expected size of the reachable set from S, that is</p><formula xml:id="formula_1">σ θ (S) := L Pr θ [L] • |RL(S)|,</formula><p>where Pr θ [L] is the probability of yielding live-edge graph L under vector θ. From <ref type="bibr" target="#b19">[19]</ref>, we know that the influence spread function is non-negative (∀S ⊆ V , σ θ (S) ≥ 0), monotone (∀S ⊆ T ⊆ V , σ θ (S) ≤ σ θ (T )), and submodular (∀S</p><formula xml:id="formula_2">⊆ T ⊆ V , ∀v ∈ V σ θ (S ∪ {v}) -σ θ (S) ≥ σ θ (T ∪ {v}) -σ θ (T )).</formula><p>The well-known problem of Influence Maximization raised in <ref type="bibr" target="#b19">[19]</ref> is stated in the following.</p><p>Problem 1 (Influence Maximization <ref type="bibr" target="#b19">[19]</ref>). Given a graph G = (V, E), parameter vector θ = (pe)e∈E and a fixed budget k, we are required to find a seed set S ⊆ V of k vertices, such that the influence spread function σ θ (S) is maximized, that is,</p><formula xml:id="formula_3">S * θ := arg max S⊆V,|S|=k σ θ (S).</formula><p>It has been shown that Influence Maximization problem is NP-hard <ref type="bibr" target="#b19">[19]</ref>. Since the objective function σ θ (S) is submodular, we have a (1 -1 e ) approximation using standard greedy policy Greedy(G, k, θ) in Algorithm 1 (assuming a value oracle on function σ θ (•)). Let S g θ be the solution of Greedy(G, k, θ). As a convention, we assume that both optimal seed set S * θ and greedy seed set S g θ in this paper are of fixed size k implicitly.</p><p>On the other hand, it is proved by Feige <ref type="bibr" target="#b14">[14]</ref> that such an approximation ratio could not be improved for k-max cover problem, which is a special case of the influence maximization problem under the IC model.</p><p>However, the knowledge of the probability on edges is usually acquired by learning from the real-world data <ref type="bibr" target="#b26">[26,</ref><ref type="bibr" target="#b27">27,</ref><ref type="bibr" target="#b15">15,</ref><ref type="bibr" target="#b25">25,</ref><ref type="bibr" target="#b24">24]</ref>, and the obtained estimates always have some inaccuracy comparing to the true value. Therefore, it is natural to assume that, from observations of edge e, we can obtain the statistically significant neighborhood [le, re], i.e., the confidence interval where the true probability pe lies in with high probability. This confidence interval prescribes the uncertainty on the true probability pe of the edge e, and such uncertainty on edges may adversely impact the influence maximization task. Motivated by this, we study the problem of robust influence maximization as specified below.</p><p>Suppose for every edge e, we are given an interval [le, re] (0 ≤ le ≤ re ≤ 1) indicating the range of the probability, and the ground-truth probability pe ∈ [le, re] of this edge is unknown. Denote Θ = ×e∈E[le, re] as the parameter space of network G, and θ = (pe)e∈E as the latent parameter vector. Specifically, let θ -(Θ) = (le)e∈E and θ + (Θ) = (re)e∈E as the minimum and maximum parameter vectors, respectively, and when the context is clear, we would only use θ -and θ + . For a seed set S ⊆ V and |S| = k, define its robust ratio under parameter space Θ as</p><formula xml:id="formula_4">g(Θ, S) := min θ∈Θ σ θ (S) σ θ (S * θ ) ,<label>(1)</label></formula><p>where S * θ is the optimal solution of size k when the probability on every edge is given by θ.</p><p>Given Θ and solution S, the robust ratio g(Θ, S) characterizes the worst-case ratio of influence spread of S and the underlying optimal one, when the true probability vector θ is unknown (except knowing that θ ∈ Θ). Then, the Robust Influence Maximization (RIM) problem is defined as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Problem 2 (Robust Influence Maximization).</head><p>Given a graph G = (V, E), parameter space Θ = ×e∈E[le, re] and a fixed budget k, we are required to find a set S ⊆ V of k vertices, such that robust ratio g(Θ, S) is maximized, i.e.,</p><formula xml:id="formula_5">S * Θ := arg max S⊆V,|S|=k g(Θ, S) = arg max S⊆V,|S|=k min θ∈Θ σ θ (S) σ θ (S * θ )</formula><p>.</p><p>The objective of this problem is to find a seed set S * Θ that has the largest robust ratio, that is, S * Θ should maximize the worst-case ratio between its influence spread and the optimal influence spread, when the true probability vector θ is unknown. When there is no uncertainty, which means Θ collapses to the true probability θ, we can see that the RIM problem is reduced back to the original influence maximization problem.</p><p>In RIM, the knowledge of the confidence interval is assumed to be the input. Another interpretation is that, it can be viewed as given an estimate of probability vector θ = (pe)e∈E with a perturbation level δe on each edge e, such that the true probability pe ∈ [pe -δe, pe +δe] = [le, re], which constitutes parameter space Θ = ×e∈E[le, re]. Notice that, in reality, this probability could be obtained via edge samplings, i.e., we make samples on edges and compute the fraction of times that the edge is live. On the other hand, we can also observe information cascades on each edge when collecting the trace of diffusion in the real world, so that the corresponding probability can be learned.</p><p>However, when the amount of observed information cascade is small, the best robust ratio maxS g(Θ, S) for the given Θ can be low so that the output for a RIM algorithm does not have a good enough guarantee of the performance in the worst case. Then a natural question is, given Θ, how to further make samples on edges (e.g., activating source node u of an edge (u, v) and see if the sink node v is activated through edge e) so that maxS g(Θ, S) can be efficiently improved? To be specific, how to make samples on edges and output Θ and S according to the outcome so that (a) with high probability the true value θ lies in the output parameter space Θ , where the randomness is taken according to θ, and (b) g(Θ , S ) is large. This sub-problem is called Sampling for Improving Robust Influence Maximization, and will be addressed in Section 4.</p><formula xml:id="formula_6">Algorithm 2 LUGreedy(G, k, Θ) Input: Graph G = (V, E), budget k, parameter space Θ = ×e∈E[le, re] 1: S g θ -← Greedy(G, k, θ -) 2: S g θ + ← Greedy(G, k, θ + ) 3: return arg max S∈ S g θ -,S g θ + {σ θ -(S)}</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ALGORITHM AND ANALYSIS FOR RIM</head><p>Consider the problem of RIM, parameter space Θ = ×e∈E[le, re] is given, and we do not know the true probability θ ∈ Θ. Let θ -= (le)e∈E and θ + = (re)e∈E.</p><p>Our first observation is that, when Θ is a single vector (le = re, ∀e ∈ E), it is trivially reduced to the classical Influence Maximization problem. Therefore, we still have the following hardness result on RIM <ref type="bibr" target="#b19">[19,</ref><ref type="bibr" target="#b14">14]</ref>: Theorem 1. RIM problem is NP-hard, and for any ε &gt; 0, it is NP-hard to find a seed set S with robust ratio at least 1 -1 e + ε.</p><p>To circumvent the above hardness result, we develop algorithms that achieves reasonably large robust ratio. When we are not allowed to make new samples on the edges to improve the input interval, it is natural to utilize the greedy algorithm of submodular maximization in <ref type="bibr" target="#b19">[19]</ref> (i.e., Algorithm 1) as the subroutine to calculate the solution. In light of this, we first propose Lower-Upper Greedy Algorithm and the solution-dependent bound for g(Θ, S), and then discuss g(Θ, S) in the worst-case scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Lower-Upper Greedy Algorithm</head><p>Given parameter space Θ = ×e∈E[le, re] with the minimum and maximum parameter vectors θ -= (le)e∈E and θ + = (re)e∈E, our Lower-Upper Greedy algorithm (LUGreedy(G, k, Θ)) is described in Algorithm 2 which outputs the best seed set S LU Θ for the minimum parameter vector θ -such that</p><formula xml:id="formula_7">S LU Θ := arg max S∈ S g θ -,S g θ + {σ θ -(S)} .<label>(2)</label></formula><p>To evaluate the performance of this output, we first define the gap ratio α(Θ) ∈ [0, 1] of the input parameter space to be</p><formula xml:id="formula_8">α(Θ) := σ θ -(S LU Θ ) σ θ + (S g θ + ) . (<label>3</label></formula><formula xml:id="formula_9">)</formula><p>Then, LUGreedy achieves the following result:</p><p>Theorem 2 (solution-dependent bound). Given a graph G, parameter space Θ and budget limit k, LUGreedy outputs a seed set S LU Θ of size k such that</p><formula xml:id="formula_10">g(Θ, S LU Θ ) ≥ α(Θ) 1 - 1 e ,</formula><p>where α(Θ) :=</p><formula xml:id="formula_11">σ θ -(S LU Θ ) σ θ + (S g θ + ) .</formula><p>Proof. For any seed set S, g(Θ, S) = min θ∈Θ σ θ (S) σ θ (S * θ ) by definition. Obviously, it is a fact that σ θ (S) is monotone on θ for any fixed S. From the definition of optimal solutions and the greedy algorithm, we can get</p><formula xml:id="formula_12">σ θ (S * θ ) ≤ σ θ + (S * θ ) ≤ σ θ + (S * θ + ) ≤ σ θ + (S g θ + )</formula><p>1-1/e . Moreover, it can be implied that</p><formula xml:id="formula_13">g(Θ, S) ≥ min θ∈Θ σ θ (S) σ θ + (S g θ + ) 1 - 1 e = σ θ -(S) σ θ + (S g θ + ) 1 - 1 e .</formula><p>Use seed set S LU Θ from LUGreedy, and it follows immediately that g(Θ, S LU Θ ) ≥</p><formula xml:id="formula_14">σ θ -(S LU Θ ) σ θ + (S g θ + ) 1 -1 e = α(Θ) 1 -1 e .</formula><p>We refer α(Θ)(1 -1 e ) as the solution-dependent bound of g(Θ, S LU Θ ) that LUGreedy achieves, because it depends on the solution S LU Θ . The good thing is that it can be evaluated once we have the solution, and then we know the robust ratio must be at least this lower bound. Note that the bound is good if α(Θ) is not too small, and thus it in turn indicates that the influence spread σ θ (S LU Θ ) we find has a good performance under any probability vector θ ∈ Θ.</p><p>It is worth remarking that the choice of using</p><formula xml:id="formula_15">α(Θ) = σ θ -(S LU Θ )/σ θ + (S g θ + )</formula><p>as a measurement is for the following reasons: (a) Intuitively, S g θ -is expected to be the best possible seed set we can find that maximizes σ θ -(•); (b) Meanwhile, we consider S g θ + as a potential seed set for the later theoretical analysis (in the proof of Theorem 6), which requires the alignment of the same seed set for the numerator and denominator. Thus,</p><formula xml:id="formula_16">α(Θ) ≥ max{σ θ -(S g θ -), σ θ -(S g θ + )}/σ θ + (S g θ + )</formula><p>. In particular, when θ + and θ -tend to the same value θ, RIM is tending towards the classical Influence Maximization, and thus the influence spread σ θ (S LU Θ ) can be close to the best possible result σ θ (S g θ ). The approach adopted by LUGreedy is similar to the sandwich approximation used in <ref type="bibr" target="#b23">[23]</ref>.</p><p>The following example shows that for certain problem instances, the gap ratio α(Θ) of LUGreedy could match the robust ratio g(Θ, S LU Θ ), which also matches the best possible robust ratio max |S|=k g(Θ, S).</p><p>Example 1. Consider a graph G = (V, E) where the set of nodes are equally partitioned into 2k subsets</p><formula xml:id="formula_17">V = ∪ 2k i=1 Vi such that every Vi contains t + 1 nodes. Let Vi = {v j i | 1 ≤ j ≤ t + 1} and set E = ∪ 2k i=1 Ei where Ei = {(v 1 i , v j i ) | 2 ≤ j ≤ t + 1}.</formula><p>That is, every (Vi, Ei) forms a star with v 1 i being the node at the center, all stars are disconnected from one another. For the parameter space we set the interval on every edge to be [l, r]. When LUGreedy selects k nodes, since all v 1 i 's have the same (marginal) influence spread, w.l.o.g., suppose that LUGreedy selects {v 1  1 , v 1 2 , . . . , v 1 k }. Then if we set the true probability vector θ ∈ Θ s.t. pe = l for every e ∈ ∪ k i=1 Ei, and pe = r for every e ∈ ∪ 2k i=k+1 Ei, it is easy to check that max |S|=k g(Θ, S) = g(Θ, S LU Θ ) = α(Θ) = 1+tl 1+tr . The intuition from the above example is that, when there are many alternative choices for the best seed set, and these alternative seed sets do not have much overlap in their influence coverage, the gap ratio α(Θ) is a good indicator of the best possible robust ratio one can achieve.</p><p>In the next subsection, we will show that the best robust ratio could be very bad for the worst possible graph G and parameter space Θ, which motivates us to do further sampling to improve Θ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Discussion on the robust ratio</head><p>For the theoretical perspective, we show in this part that if we make no assumption or only add loose constraints to the input parameter space Θ, then no algorithm will guarantee good performance for some worst possible graph G. </p><formula xml:id="formula_18">E S∈Ω σ θ ( S) σ θ (S * θ ) = O log n √ n ,</formula><p>where Ω is any probability distribution over seed sets of size k, and E S∈Ω [•] is the expectation of random set S taken from the distribution Ω.</p><p>In the first case, we allow the input Θ to be an arbitrary parameter space. It is possible that Θ = ×e∈E[0, 1] for some graph G, which means there is no knowledge at all for edge probabilities. Then any seed set may achieve O k n -approximation of the optimal solution in the worst case. Intuitively, a selected seed set S may rarely activate other nodes (i.e., O(k)), while optimal solution (to the latent θ) may cover almost the whole graph (i.e., Ω(n)).</p><p>In the second case, an additional constraint is assumed on the parameter space θ + -θ - ∞ ≤ δ, i.e., for every e ∈ E, re -le ≤ δ, to see if we could obtain a better performance when δ is small. However, even though δ is in the order of O(1/n), the robust ratio can be as small as O(log n/n). The proof is related to the phase transition in the Erdős-Rényi graph for the emergence of giant component. In particular, if we have a graph G consisting of two disconnected, equal-sized Erdős-Rényi random graphs with edge probabilities close to the critical value of generating a giant connected component, then whenever we select a seed in one component, that component could be just below the threshold resulting in O(log n) influence spread while the other component is just above the threshold leading to Θ(n) influence spread. Thus, the worst-case ratio for any one-node seed set is always O(log n/n). A similar discussion can be found in <ref type="bibr" target="#b18">[18]</ref>.</p><p>In the third case, we allow the algorithm to be randomized, namely the output seed set S is a random set of size k. Even in this case, the robust ratio could be as bad as O(log n/ √ n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SAMPLING FOR IMPROVING RIM</head><p>From the previous section, we propose LUGreedy algorithm to check the solution-dependent bound of the robust ratio, and point out the worse-case bound could be small if Θ is not assumed to be tight enough.</p><p>Theorem 3 in the previous subsection points out that the best possible robust ratio maxS g(Θ, S) can be too low so that the output for RIM could not provide us with a satisfying seed set in the worst case. Then a natural question is: given the input Θ, can we make efficient samples on edges so that Θ is narrowed into Θ (this means the true θ ∈ Θ with high probability) and then output a seed set S that makes g(Θ , S ) large? This problem is called Sampling for Improving RIM.</p><p>In this section we study both uniform sampling and adaptive sampling for improving RIM. According to the Chernoff's bound, the more samples we make on an edge, the narrower the confidence interval we get that guarantees the true probability to be located within the confidence interval with a desired probability of confidence. After sampling to get a narrower parameter space, we could use LUGreedy algorithm to get the seed set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Uniform Sampling</head><p>In Sampling for improving RIM, the goal is to design a sampling and maximization algorithm A that outputs Θ and S such that with high probability the robust ratio of S in Θ is large. After sampling edges, we can use Chernoff's bound to compute the confidence interval, and the confidence interval can be further narrowed down with more samples. However, the key issue is to connect the width of confidence interval with the stability of influence spread. We propose two ideas exploiting properties of additive and multiplicative confidence interval respectively to this issue, and incorporate into Uniform Sampling algorithm (in Algorithm 3) with theoretical justification (in Theorem 6).</p><p>Our first idea is inspired by the following lemma from <ref type="bibr" target="#b12">[12]</ref> to build the connection in the additive form.</p><p>Lemma 4 (Lemma 7 in <ref type="bibr" target="#b12">[12]</ref>). Given graph G and parameter space Θ such that ∀θ1, θ2 ∈ Θ, θ1 -θ2 ∞ ≤ δ, then, ∀S ⊆ V , Let G be two disjoint cycles, each containing exactly n 2 nodes and n 2 edges. We arbitrarily assign the rest m -n edges between two cycles. Then, for every edge e in the cycle, the interval is le = re = 1, and le = 0, re = δ for those between two cycles, which constitutes Θ = ×e∈E[le, re]. Suppose δ &gt; 0 is sufficiently small, and let budget k = 1. For any single-node set S, it is easy to check that for θ -= (le)e∈E, σ θ -(S) = n 2 , and for θ + = (re)e∈E,</p><formula xml:id="formula_19">|σ θ 1 (S) -σ θ 2 (S)| ≤ mnδ.</formula><formula xml:id="formula_20">σ θ + (S) ≈ n 2 + n 2 (m-n)δ, thus |σ θ + (S) -σ θ -(S)| ≈ 1 2 n(m- n)δ in this case. As a comparison, from Lemma 4, we know that |σ θ + (S) -σ θ -(S)| ≤ mnδ.</formula><p>Therefore, the above lemma establishes the guidance that we may sample every edge for sufficient times to shrink their confidence intervals in Θ, and feed LUGreedy with Θ as same as solving RIM, then the performance is guaranteed by Theorem 2, which matches our intuition that LUGreedy performs well with the satisfactory Θ.</p><p>On the other hand, our second idea is to use the multiplicative confidence interval to reduce the fluctuation of influence spread, then LUGreedy still applies. The next lemma is crucial to achieve this goal. </p><formula xml:id="formula_21">Algorithm 3 US-RIM Input: Graph G = (V, E),</formula><formula xml:id="formula_22">σ θ + (S) σ θ -(S) ≤ (1 + λ) n ,<label>(4)</label></formula><p>and</p><formula xml:id="formula_23">max |S|=k min θ∈Θ σ θ (S) σ θ (S * θ ) ≥ (1 + λ) -n .<label>(5)</label></formula><p>In this lemma, the ratio of influence spread can be bounded based on the relation of le and re in the multiplicative form.</p><p>To unify both ideas mentioned above, we propose Uniform Sampling for RIM algorithm (US-RIM) in Algorithm 3, and the theoretical result is presented in Theorem 6. Basically, the algorithm samples every edge with the same number of times, and use LUGreedy to obtain the seed set. We set different t and δe for the two ideas. Henceforth, we explicitly refer the first setting as Uniform Sampling with Additive form (US-RIM-A), and the second one as Uniform Sampling with Multiplicative form (US-RIM-M). Theorem 6. Given a graph G = (V, E), budget k, and accuracy parameter , γ &gt; 0, let n = |V | and m = |E|, then for any unknown ground-truth parameter vector θ = (pe)e∈E, Algorithm US-RIM outputs (Θout,Sout) such that</p><formula xml:id="formula_24">g(Θout, Sout) ≥ 1 - 1 e (1 -),</formula><p>with Pr[θ ∈ Θout] ≥ 1 -γ, where the randomness is taken according to θ, if we follow either of the two settings:</p><formula xml:id="formula_25">1. Set t = 2m 2 n 2 ln(2m/γ) k 2 2</formula><p>, and for all e, set δe = k mn ; 2. Assume we have p such that 0 &lt; p ≤ mine∈E pe, set</p><formula xml:id="formula_26">t = 3 ln(2m/γ) p 2n ln(1/1-) + 1 2</formula><p>, and for all edge, set δe = 1 n pe log 1 γ .</p><p>In general, the total number of samples summing up all edges is O( m 3 n 2 log(m/γ)</p><formula xml:id="formula_27">k 2 2</formula><p>) for US-RIM-A, and O( mn 2 log(m/γ) p 2 ) for US-RIM-M with an additional constant p , the lower bound probability on all edge probabilities. The difference is that the former has a higher order of m, and the latter requires the knowledge of p and has an extra dependency on O(1/p ). Since the sample complexity for both settings can be calculated in advance, one may compare the values and choose the smaller one when running the uniform sampling algorithm. An intuitive interpretation is that: (1) with high probability (≥ 1 -γ), the algorithm always outputs an (1-1 e -)-approximation solution guaranteed by US-RIM-A; (2) if p = Ω( k 2 m 2 ) (it is a loose assumption naturally satisfied in practice), we may choose US-RIM-M to achieve better sample complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Non-uniform and Adaptive Sampling</head><p>In a real network, the importance of edges in an influence diffusion process varies significantly. Some edges may have larger influence probability than others or connect two important nodes in the network. Therefore, in sampling it is crucial to sample edges appropriately. Moreover, we can adapt our sampling strategy dynamically to put more sampling effort on critical edges when we learn the edge probabilities more accurately over time.</p><p>For convenience, given graph G = (V, E), we define observation set M = {Me} e∈E as a collection of sets, where Me = {x 1 e , x 2 e , • • • , x te e } denotes observed values of edge e via the first te samples on edge e. We allow that a parameter space Θ0 ⊆ ×e∈E[0, 1] is given, which can be obtained by some initial samples M0 (e.g., uniformly sample each edge of the graph for a fixed number of times).</p><p>The following lemma is used to calculate the confidence interval, which is a combination of additive and multiplicative Chernoff's Bound. We adopt this bound in the experiment since some edges in the graph have large influence probability while others have small ones, but using either additive or multiplicative bound may not be good enough to obtain a small confidence interval. The following bound is adapted from <ref type="bibr" target="#b1">[1]</ref> and is crucial for us in the experiment. γ . Then, with probability at least 1 -γ, the true probability θ = (pe) e∈E satisfies that θ ∈ Θ.</p><p>Our intuition for non-uniform sampling is that the edges along the information cascade of important seeds determine the influence spread, and henceforth they should be estimated more accurately than other edges not along important information cascade paths. Thus, we use the following Information Cascade Sampling method to select edges. Starting from the seed set S, once node v is activated, v will try to activate its out-neighbors. In other words, for every out-edge e of v, denote te as the number of samples, then e will be sampled once to generate a new observation x te e based on the latent Bernoulli distribution with success probability pe, and te will be increased by 1. The process goes on until the end of the information cascade.</p><p>We propose Information Cascade Sampling for RIM (ICS-RIM) algorithm in Algorithm 4, which adopts information cascade sampling described above to select edges.</p><p>Algorithm 4 is an iterative procedure. In the i-th iteration, Lemma 7 is used to compute the confidence interval Algorithm 4 ICS-RIM(τ ): Information Cascade Sampling Input: Graph G = (V, E), budget k, initial sample M0, threshold κ, γ. Output: Parameter space Θout, seed set Sout 1: i ← 0 2: repeat 3: Get Θi based on Mi (see Lemma 7). 4:</p><formula xml:id="formula_28">S LU Θ i = LUGreedy(G, k, Θi) 5:</formula><p>Mi+1 ← Mi 6:</p><p>for j = 1, 2, . . . , τ do 7:</p><p>Do information cascade with the seed set S LU Θ i</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>8:</head><p>During the cascade, once v ∈ V is activated, sample all out-edges of v and update Mi+1 9:</p><p>end for 10:</p><formula xml:id="formula_29">i ← i + 1 11: until α(Θi) &gt; κ 12: Sout ← S LU Θ i-1 13: Θout ← Θi-1 14: return (Θout, Sout)</formula><p>Θi from observation set Mi. Then according to Θi, we find the lower-upper greedy set S LU Θ i and use information cascade to update observation set Mi+1 by absorbing new samples.</p><p>Since the robust ratio g(Θ, S LU Θ i ) cannot be calculated efficiently, we will calculate α(Θ) (defined in (3)) instead. In our algorithm, we use a pre-determined threshold κ (κ ∈ (0, 1)) as the stopping criteria. Therefore, for Sout, the robust ratio g(Θ, Sout) ≥ α(Θ) 1 -<ref type="foot" target="#foot_0">1</ref> e &gt; κ 1 -1 e is guaranteed by Theorem 2, and the true probability θ ∈ Θout holds with probability at least 1 -γ due to Lemma 7.</p><p>Compared with information cascade sampling method, calculating a greedy set is time-consuming. Therefore in Algorithm 4, we call LUGreedy once every τ rounds of information cascades to reduce the cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EMPIRICAL EVALUATION</head><p>We conduct experiments on two datasets, Flixster 1 and NetHEPT<ref type="foot" target="#foot_1">2</ref> to verify the robustness of influence maximization and our sampling methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experiment Setup</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Data Description</head><p>Flixster. The Flixster dataset is a network of American social movie discovery service (www.flixster.com). To transform the dataset into a weighted graph, each user is represented by a node, and a directed edge from node u to v is formed if v rates one movie shortly after u does so on the common movie. The dataset is analyzed in <ref type="bibr" target="#b2">[2]</ref>, and the influence probability are learned by the topic-aware model. We use the learning result of <ref type="bibr" target="#b2">[2]</ref> in our experiment, which is a graph containing 29357 nodes and 212614 directed edges. There are 10 probabilities on each edge, and each probability represents the influence from the source user to the sink on a specific topic. Since most movies belong to at most two topics, we only consider 3 out of 10 topics in our experiment, and get two induced graphs whose number of edges are 23252 and 64934 respectively. For the first graph, probabilities of topic 8 are directly used as the ground truth parameter (termed as Flixster(Topic 8)). For the second graph, we mix the probabilities of Topic 1 and Topic 4 on each edge evenly to obtain the ground-truth probability (termed as as Flixster(Mixed)). After removing isolated nodes, the number of nodes in the two graphs are 14473 and 7118 respectively.</p><p>In <ref type="bibr" target="#b2">[2]</ref>, the probability for every edge (u, v) is learned by rating cascades that reach u and may or may not reach v, and in this cases we view that edge (u, v) are sampled. According to the data reported in <ref type="bibr" target="#b2">[2]</ref>, on average every edge is sampled 318 times for their learning process. We then use 318 samples on each edge as our initial sample M0.</p><p>NetHEPT. The NetHEPT dataset <ref type="bibr" target="#b11">[11]</ref> is extensively used in many influence maximization studies. It is an academic collaboration network from the "High Energy Physics-Theory" section of arXiv form 1991 to 2003, where nodes represent the authors and each edge in the network represents one paper co-authored by two nodes. It contains 15233 nodes and 58891 undirected edges (including duplicated edges). We remove those duplicated edges and obtain a directed graph G = (V, E), |V | = 15233, |E| = 62774 (directed edges). Since the NetHEPT dataset does not contain the data of influence probability on edges, we set the probability on edges according to the weighted cascade model <ref type="bibr" target="#b19">[19]</ref> as the ground truth parameter, i.e., ∀e = (v, u) ∈ E, let xu be the in-degree of u in the edge-duplicated graph, ye be the number of edges connecting node v and u, then the true probability is pe = 1 -(1 -1 xu ) ye . Following the same baseline of Flixster, we initially sample each edge for 318 times as M0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Algorithms</head><p>We test both the uniform sampling algorithm US-RIM and the adaptive sampling algorithm ICS-RIM, as well as another adaptive algorithm OES-RIM (Out-Edge Sampling) as the baseline (to be described shortly). Each algorithm is given a graph G and initial observation set M0. Note that the method to estimate the parameter space based on sampling results in Algorithm 3 and Algorithm 4 are different. In order to make the comparison meaningful, in this section, for all three algorithms, a common method according to Lemma 7 is used to estimate the parameter space. In all tests, we set the size of the seed set k = 50. To reduce the running time, we use a faster approximation algorithm PMIA (proposed in <ref type="bibr" target="#b10">[10]</ref>) to replace the well known greedy algorithm purposed in <ref type="bibr" target="#b19">[19]</ref> in the whole experiment. The accuracy requirement γ = o(1) is set to be γ = m -0.5 where m is the number of edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>US-RIM.</head><p>The algorithm is slightly modified from Algorithm 3 for a better comparison of performance. The modified algorithm proceeds in an iterative fashion: In each iteration, the algorithm makes τ1 samples on each edge, updates Θ according to Lemma 7 and computes α(Θ). The algorithm stops when α(Θ) ≥ κ = 0.8. τ1 is set to 1000, 1000, 250 for NetHEPT, Flixster(Topic 8), Flixster(Mixed), respectively to achieve fine granularity and generate visually difference of α(Θ) in our results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ICS-RIM.</head><p>As stated in Algorithm 4, in each iteration, the algorithm do τ2 = 5000 times information cascade sampling based on the seed set from the last iteration, and then it updates Θ according to Lemma 7, computes α(Θ) and uses LUGreedy algorithm to compute the seed set for the next round. The algorithm stops when α(Θ) ≥ κ = 0.8. OES-RIM. This algorithm acts as a baseline, and it proceeds in the similar way to ICS-RIM. Instead of sampling information cascades starting from the current seed set as in ICS-RIM, OES-RIM only sample out-edges from the seed set. More specifically, in each iteration, the algorithm samples 5000 times of all out-edges of the seed set from last iteration, for the three graphs respectively, and then it updates Θ according to Lemma 7, computes α(Θ) and uses LUGreedy algorithm to compute the seed set for the next round. Note that for OES-RIM, α(Θ) remains small (with the increase of the number of samples) and cannot exceed the threshold κ even the iteration has been processed for a large number of times, therefore we will terminate it when α(Θ) is stable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">ᾱ as a Upper Bound</head><p>Theorem 2 shows that α(Θ) 1 -1 e is a lower bound for the robust ratio g(Θ, S LU Θ ). We would also like to find some upper bound of g(Θ, S LU Θ ): If the upper bound is reasonably close to the lower bound or match in trend of changes, it indicates that α(Θ)</p><formula xml:id="formula_30">1 -1 σ θ (S LU Θ ) σ θ (S * θ ) = g(Θ, S LU Θ ).</formula><p>The next question is how to find a θ = (θe)e∈E ∈ Θ to make the upper bound ᾱ(Θ, θ) as small as possible. In our experiments, we use the following two heuristics and take their minimum.</p><p>The first heuristic borrows the intuition from Example 1, which says that the gap ratio α(Θ) is close to the robust ratio g(Θ, S LU Θ ) when (a) there are two disjoint seed sets with similar influence spead, (b) their cascade overlap is small, and (c) the reachable edges from one seed set use lower end parameters values while the reachable edges from the other seed set use upper end parameters. Thus in our heuristic, we use PMIA algorithm to find another seed set S of k nodes when we remove all nodes in S LU Θ . We then do information cascades from both S LU Θ and S for an equal number of times. Finally, for every edge e, if it is sampled more in the information cascade with seed set S LU Θ than with S , we set θe = le, otherwise we set θe = re. The second heuristic is a variant of the first one, where we run a number of information cascades from S LU Θ , and for any edge e that is sampled in at least 10% of cascades, we set θe = le, otherwise we set θe = re.</p><p>Other more sophisticated heuristics are possible, but it could be a separate research topic to find tighter upper bound for the robust ratio, and thus we only use the simple combination of the above two in this paper, which is already indicative. We henceforth use ᾱ(Θ) to represent the upper bound found by the minimum of the above two heuristics. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">α(Θ) and ᾱ(Θ) with Predetermined Intervals</head><p>In the first experiment we explore the relationship between the width of confidence interval Θ = ×e∈E[le, re] and α(Θ) together with ᾱ(Θ). For a given interval width W , we set le = min{pe -W 2 , 0}, re = max{pe + W 2 , 1} ∀e ∈ E, where pe is the ground-truth probability of e. Then we calculate α(Θ) and ᾱ(Θ). We vary the width W to see the trend of changes of α(Θ) and ᾱ(Θ). Figure <ref type="figure" target="#fig_3">1</ref> reports the result on the three graphs with seed set size k = 50.</p><p>First, we observe that as the parameter space Θ becomes wider, the value of both α(Θ) and ᾱ(Θ) become smaller, which matches our intuition that larger uncertainty results in worse robustness. Second, there is a sharp decrease of α(Θ) between W ∈ [0, 0.1] and a much slower decrease afterwards for all three graphs. The decrease of ᾱ(Θ) is not as sharp as that of α(Θ) but the decrease also slows down with larger W after 0.2. The overall trend of α(Θ) and ᾱ(Θ) suggests that the robust ratio may be sensitive to the uncertainty of the parameter space, and only when the uncertainty of the parameter space reduces to a certain level that we can obtain reasonable guarantee on the robustness of our solution.</p><p>As a comparison, we know that the average number of samples on each edge is 318 for the learned probabilities in the Flixster dataset. This corresponds to an average interval width of 0.293 for topic 8 and 0.265 for the mixed topic. At these interval widths, α(Θ) values are approximately 0.04 and 0.08 respectively for the two graphs, and ᾱ(Θ) are approximately 0.12 and 0.2 respectively. This means that, even considering the upper bound ᾱ(Θ), the robust ratio is pretty low, and thus the learned probabilities reported in <ref type="bibr" target="#b2">[2]</ref> may result in quite poor performance for robust influence maximization.</p><p>Of course, our result of α(Θ) and ᾱ(Θ) is only targeted at the robustness of our LUGreedy algorithm, and there could exist better algorithm having higher robustness performance at the same uncertainty level. Finding a better RIM algorithm seems to be a difficult task, and we hope that our study could motivate more research in searching for such better RIM algorithms. Besides S LU Θ , we also independently test the classical greedy seed set S g θ for θ = (pe)e∈E on the lower parameter vector θ -(that is</p><formula xml:id="formula_31">σ θ -(S g θ ) σ θ + (S g θ + )</formula><p>versus α(Θ)), and the average performance on each data point is 2.45%, 1.05%, 6.11% worse than S LU Θ for Flixster(Mixed), Flixster(Topic 8) and NetHEPT, respectively. Therefore, it shows that S LU Θ outperforms σ g θ in the worse-case scenario, and henceforth we only use S LU Θ in the following experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Results for Sampling algorithms</head><p>Figures 2, 3 and 4 reports the result of α = α(Θ) and ᾱ = ᾱ(Θ) for the three tested graphs respectively, when the average number of samples per edge increases. For better presentation, we trim all figures as long as α(US-RIM) = 0.7. (For example, in Flixster(Topic 8), US-RIM requires 77318 samples in average for α to reach 0.8, while ICS-RIM only needs 33033, and for OES-RIM α sticks to 0.118.)</p><p>For the sampling algorithms, after the i-th iteration, the observation set is updated from Mi-1 to Mi, and the average number of samples per edge in the network is calculated. Markers on each curve in these figures represent the result after one iteration of the corresponding sampling algorithm.</p><p>The results on all three graphs are consistent. First, for each pair of α(Θ) and ᾱ(Θ), even though there is still some gap, indicating either the lower bound or the upper bound may not be tight yet, the trends on both α(Θ) and ᾱ(Θ) are consistent: Both increase with the number of samples, even with similar slopes at each point; and among different algorithms, the ranking order and relative change are consistent with both α(Θ) and ᾱ(Θ). All these consistency suggests that gap ratio α(Θ) could be used as an indicator for the robustness of Algorithm LUGreedy, and it is reasonable to use α(Θ) in comparing the performance of different algorithms.</p><p>Second, comparing the performance of three algorithms, we see that both US-RIM and ICS-RIM are helpful in improving the robust ratio of the selected seed set, and ICS-RIM is better than US-RIM, especially when the sample size increases. The baseline algorithm OES-RIM, however, performs significantly poorer than the other two, even though it is also an adaptive algorithm as ICS-RIM. The reason is  that, the lower-upper greedy set S LU Θ changes little after a certain number of iterations in OES-RIM, and thus only a small number of edges (out edges of S LU Θ ) are repeatedly sampled. The probabilities on these edges are already estimated very accurately while other edge probabilities are far from accurate. It is the inaccurate edges that make α(Θ) and the best robust ratio small. In contrast, ICS-RIM uses information cascades to sample not only edges directly connecting to the seed set but also edges that can be potentially reached. This suggests that it is important for a sampling method to balance the sampling between critical edges and other potentially useful edges in order to achieve better robustness in influence maximization.</p><p>Overall, the results suggest that information cascade based sampling method stands out as a competitive choice when we can adaptively sample more edges to achieve better robustness. If adaptive sampling is not possible, predetermined uniform sampling may also perform reasonably well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION</head><p>In this paper, we propose the study of robust influence maximization to address the impact of uncertainty in edge probability estimates that would inevitably occur in practice to the influence maximization task. We propose the LU-Greedy algorithm with a proven solution-dependent bound, and further propose sampling methods, in particular information cascade based adaptive sample method to effectively reduce the uncertainty and increase the robustness of the LUGreedy algorithm. The experimental results validate the usefulness of the LUGreedy algorithm and the information cascade based sampling method ICS-RIM. Moreover, the results indicate that robustness may be sensitive to the uncertainty of parameter space, and learning algorithms may need more data to achieve accurate learning results for robust influence maximization.</p><p>Our work opens up a number of research directions. First, it is unclear what could be the upper bound of the best robust ratio given an actual network and learned parameter space. Answering this question would help us to understand whether robust influence maximization is intrinsically difficult for a particular network or it is just our algorithm that does not perform well. If it is the latter case, then an important direction is to design better robust influence maximization algorithms. Another direction is how to improve sampling methods and learning methods to achieve more accurate parameter learning, which seems to be crucial for robust influence maximization. In summary, our work indicates a big data challenge on social influence research -the data on social influence analysis is still not big enough, such that the uncertainty level in model learning may result in poor performance for influence maximization. We hope that our work could encourage further researches to meet this challenge from multiple aspects including data collection, data analysis, and algorithm design.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Theorem 3 . 2 . 1 n 3 .</head><label>3213</label><figDesc>For RIM, 1. There exists a graph G = (V, E) and parameter space Θ = ×e∈E[le, re], such that There exists a graph G = (V, E), constant δ = Θ and parameter space Θ = ×e∈E[le, re] where re -le ≤ δ for every e ∈ E, such that max |S|=k g(Θ, S) = O log n n . Consider random seeds set S of size k. There exists a graph G = (V, E), constant δ = Θ 1 √ n and parameter space Θ = ×e∈E[le, re] where re -le ≤ δ for every e ∈ E, we have max Ω min θ∈Θ</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>We use a tight example (in the order of |V | and |E|) to illustrate the connection and give an insight of this lemma as follows. Consider graph G = (V, E) with |V | = n and |E| = m (m n).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Lemma 7 .</head><label>7</label><figDesc>For each e ∈ E, let Me = x 1 e , x 2 e , . . . , x te e be samples of e in M = {Me}e∈E, and te be the sample number. Given any γ &gt; 0, let confidence intervals for all edges be Θ = ×e∈E[le, re], such that, for any e ∈ E,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: α(Θ) and ᾱ(Θ) for different widths of confidence interval W .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: α(Θ) and ᾱ(Θ) for different average number of samples per edge on graph NetHEPT.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: α(Θ) and ᾱ(Θ) for different average number of samples per edge on graph Flixster(Topic 8).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: α(Θ) and ᾱ(Θ) for different average number of samples per edge on graph Flixster(Mixed).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>budget k, ( , γ) Output: Parameter space Θout, seed set Sout 1: for all e ∈ E do 2: Sample e for t times, and observe x 1 e , . . . , x t Lemma 5. Given graph G = (V, E) and parameter space Θ. If there exists λ ≥ 0, for all edge e ∈ E, s.t., re ≤ (1 + λ)le, then for any nonempty set S ⊆ V ,</figDesc><table><row><cell>3:</cell><cell>pe ← 1 t</cell><cell>e e , and set δe according to Theorem 6 i=1 x i t</cell></row><row><cell>4:</cell><cell cols="2">re ← min{1, pe + δe}, le ← max{0, pe -δe}</cell></row><row><cell cols="2">5: end for</cell><cell></cell></row><row><cell cols="3">6: Θout ← ×e∈E[le, re]</cell></row><row><cell cols="3">7: Sout ← LUGreedy(G, k, Θout)</cell></row><row><cell cols="3">8: return (Θout,Sout)</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://www.cs.sfu.ca/∼sja25/personal/datasets/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http://research.microsoft.com/enus/people/weic/projects.aspx</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>The research of Wei Chen is partially supported by the National Natural Science Foundation of China (Grant No. 61433014).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Bandits with knapsacks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Badanidiyuru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Slivkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Topic-aware social influence propagation models</title>
		<author>
			<persName><forename type="first">N</forename><surname>Barbieri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bonchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Manco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge and information systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="555" to="584" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Robust optimization-methodology and applications</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ben-Tal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Nemirovski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="453" to="480" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Maximizing social influence in nearly optimal time</title>
		<author>
			<persName><forename type="first">C</forename><surname>Borgs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Brautbar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Chayes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lucier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SODA</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Pure exploration in finitely-armed and continuous-armed bandits</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bubeck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stoltz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">412</biblScope>
			<biblScope unit="page" from="1832" to="1852" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Limiting the spread of misinformation in social networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Budak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">El</forename><surname>Abbadi</surname></persName>
		</author>
		<idno>WWW 2011</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Combinatorial pure exploration of multi-armed bandits</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Lyu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Information and influence propagation in social networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Lakshmanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Castillo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Synthesis Lectures on Data Management</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="177" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Robust influence maximization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
		<idno>CoRR, abs/1601.06551</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scalable influence maximization for prevalent viral marketing in large-scale social networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Efficient influence maximization in social networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Combinatorial multi-armed bandit and its extension to probabilistically triggered arms</title>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<idno>CoRR, abs/1407.8339</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mining the network value of customers</title>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A threshold of ln n for approximating set cover</title>
		<author>
			<persName><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM (JACM)</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="634" to="652" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Learning influence probabilities in social networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bonchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Lakshmanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WSDM 2010</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Celf++: optimizing the greedy algorithm for influence maximization in social networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Lakshmanan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Robust influence maximization</title>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Stability of Influence Maximization</title>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015-01">Jan. 2015</date>
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Maximizing the spread of influence through a social network</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">É</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Robust submodular observation selection</title>
		<author>
			<persName><forename type="first">A</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Mcmahon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JMLR</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="2761" to="2801" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Online influence maximization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Maniu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Mo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Senellart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Cost-effective outbreak detection in networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vanbriesen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Glance</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">From competition to complementarity: comparative influence diffusion and maximization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Lakshmanan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Learning the graph of epidemic cascades</title>
		<author>
			<persName><forename type="first">P</forename><surname>Netrapalli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sanghavi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMETRICS</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Uncovering the temporal dynamics of diffusion networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Balduzzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Schölkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML 2011</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Prediction of information diffusion probabilities for independent cascade model</title>
		<author>
			<persName><forename type="first">K</forename><surname>Saito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nakano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kimura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Knowledge-Based Intelligent Information and Engineering Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="67" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Social influence analysis in large-scale networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Influence maximization: near-optimal time complexity meets practical efficiency</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
