<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On the relationship between file sizes, transport protocols, and self-similar network traffic</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Kihong</forename><surname>Park</surname></persName>
							<email>park@cs.purdue.edu</email>
						</author>
						<author>
							<persName><forename type="first">Gitae</forename><surname>Kim</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Mark</forename><surname>Crovella</surname></persName>
							<email>crovellag@cs.bu.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Sciences</orgName>
								<orgName type="institution">Purdue University West Lafayette</orgName>
								<address>
									<postCode>47907</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Boston University</orgName>
								<address>
									<postCode>02215</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">On the relationship between file sizes, transport protocols, and self-similar network traffic</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">72C6611C4851B84E7536DF636A496201</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recent measurements of local-area and wide-area traffic have shown that network traffic exhibits variability at a wide range of scales. In this paper, we examine a mechanism that gives rise to self-similar network traffic and present some of its performance implications. The mechanism we study is the transfer of files or messages whose size is drawn from a heavy-tailed distribution.</p><p>First, we show that in a "realistic" client/server network environment-i.e., one with bounded resources and coupling among traffic sources competing for resources-the degree to which file sizes are heavy-tailed can directly determine the degree of traffic self-similarity at the link level. We show that this causal relationship is robust with respect to changes in network resources (bottleneck bandwidth and buffer capacity), network topology, the influence of crosstraffic, and the distribution of interarrival times.</p><p>Second, we show that properties of the transport layer play an important role in preserving and modulating this relationship. In particular, the reliable transmission and flow control mechanisms of TCP (Reno, Tahoe, or Vegas)   serve to maintain the long-range dependency structure induced by heavy-tailed file size distributions. In contrast, if a non-flow-controlled and unreliable (UDP-based) transport protocol is used, the resulting traffic shows little selfsimilarity: although still bursty at short time scales, it has little long-range dependence.</p><p>Third, we show performance implications of selfsimilarity as represented by performance measures including packet loss rate, retransmission rate, and queueing delay. Increased self-similarity, as expected, results in degradation of performance. Queueing delay, in particular, exhibits a drastic increase with increasing self-similarity.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Recent measurements of local-area and wide-area traffic <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b23">24]</ref> have shown that network traffic exhibits variability at a wide range of scales. Such scale-invariant variability is in strong contrast to traditional models of network traffic, which show variability at short time scales but are essentially smooth at large time scales; i.e., they lack long-range dependence. Since self-similarity is believed to have a significant impact on network performance, understanding the causes and effects of traffic self-similarity is an important problem.</p><p>In this paper, we study a mechanism that induces selfsimilarity in network traffic. We show that self-similar traffic can arise from a simple, high-level property of the overall system: the heavy-tailed distribution of file sizes being transferred over the network. We show that if the distribution of file sizes is heavy-tailed-meaning that the distribution behaves like a power law thus generating very large file transfers with nonnegligible probability-then the superposition of many file transfers in a client/server network environment induces self-similar traffic and this causal mechanism is robust with respect to changes in network resources (bottleneck bandwidth and buffer capacity), topology, interference from cross-traffic possessing dissimilar traffic characteristics, and changes in the distribution of file request interarrival times. Properties of the transport/network layer in the protocol stack are shown to play an important role in mediating this causal relationship.</p><p>The mechanism we propose is motivated by the ON/OFF model <ref type="bibr" target="#b23">[24]</ref>. The ON/OFF model shows that self-similarity can arise in an idealized context-i.e., one with unbounded resources and independent traffic sources-as a result of aggregating a large number of 0/1 renewal processes whose ON or OFF periods are heavy-tailed. The success of this simple, elegant model in capturing the characteristics of measured traffic traces <ref type="bibr" target="#b23">[24]</ref> is surprising given that it ignores nonlinearities arising from the interaction of traffic sources contending for network resources, which in real networks, can be as complicated as the feedback congestion control algorithm of TCP Reno. To apply the framework of the ON/OFF model to real networks, it is necessary to understand whether the model's limitations affect its usefulness and how these limitations manifest themselves in practice.</p><p>In this paper, we show that in a "realistic" client/server network environment-i.e., one with bounded resources leading to the coupling of multiple traffic sources contending for shared resources-the degree to which file sizes are heavy-tailed directly determines the degree of traffic selfsimilarity. Specifically, measuring self-similarity via the Hurst parameter H and file size distribution by its powerlaw exponent (their definitions are given later), we show that there is a nearly linear relationship between H and over a wide range of network conditions and when subject to the influence of the protocol stack. This mechanism gives a particularly simple explanation of why self-similar network traffic may be observed in many diverse contexts.</p><p>We discuss a traffic shaping effect of TCP that helps explain the modulating influence of the protocol stack. We find that the presence of self-similarity at the link layer depends on whether reliable and flow-controlled communication is employed at the transport layer. In the absence of reliability and flow control mechanisms such as when a UDPbased transport protocol is used, much of the self-similarity of the downstream traffic is destroyed when compared to the upstream traffic. The resulting traffic, while still bursty at short ranges, shows significantly less long-range correlation structure. In contrast, when TCP (Reno, Tahoe, or Vegas) is employed, the long-range dependence structure induced by heavy-tailed file size distributions is preserved and transferred to the link-layer, manifesting itself as scaleinvariant burstiness.</p><p>We conclude with a discussion of the effect of selfsimilarity on network performance. We find that in an UDPbased non-flow-controlled 1 environment, as self-similarity is increased, performance declines drastically as measured by packet loss rate and mean queue length. If reliable communication via TCP is used, however, packet loss, retransmission rate, and file transmission time decline gracefully (roughly linearly) as a function of H. The exception is mean queue length, which shows the same superlin-1 H-estimates and performance results when an open-loop flow control is active can be found in <ref type="bibr" target="#b16">[17]</ref>. ear increase as in the unreliable non-flow-controlled case. This graceful decline in TCP's performance under selfsimilar loads comes at a cost: a disproportionate increase in the consumption of buffer space. The sensitive dependence of mean queue length on self-similarity is consistent with previous work <ref type="bibr" target="#b12">[13]</ref> showing that queue length distribution decays more slowly for long-range dependent sources than for short-range dependent sources. The aforementioned traffic-shaping effect of flow-controlled, reliable transport shaping a large file transfer into an on-average "thin" packet train (stretching-in-time effect) suggests, in part, why the ON/OFF model has been so successful despite its limitations-a principal effect of interaction among traffic sources in an internetworked environment seems to lie in the generation of lengthy packet trains wherein the correlation structure inherent in heavy-tailed file size distributions is sufficiently preserved.</p><p>The rest of this paper is organized as follows. In the next two sections, we discuss related work, the network model, and the simulation set-up. This is followed by the main section which explores the effect of file size distribution on traffic self-similarity, including the role of the protocol stack, heavy-tailed versus non-heavy-tailed interarrival time distribution, resource variations, and traffic mixing. We conclude with a discussion of the effect of traffic self-similarity from a performance evaluation perspective, showing its quantitative and qualitative effects with respect to performance measures when both the degree of self-similarity and network resources are varied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related work</head><p>Since the seminal study of Leland et al. <ref type="bibr" target="#b11">[12]</ref> which set the groundwork for considering self-similar network traffic as an important modeling and performance evaluation problem, a string of work has appeared dealing with various aspects of traffic self-similarity <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b23">24]</ref>. The research avenues may be broadly classified into two categories.</p><p>In the first category <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b23">24]</ref>, traffic traces from physical network measurements are employed to identify the presence of scale-invariant burstiness, and models are constructed capable of generating synthetic traffic with matching characteristics. These papers show that longrange dependence is an ubiquitous phenomenon encompassing both local-area and wide-area network traffic.</p><p>In the second category are papers that have evaluated the effect of self-similar traffic on idealized or simplified networks <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref>. They show that long-range dependent traffic is likely to degrade performance and a principal result is the observation that queue length distribution under self-similar traffic decays much more slowly than with short-range-dependent sources (e.g., Poisson).</p><p>Our work is an extension of the line of research in the first category where we investigate causal mechanisms that may be at play in real networks responsible for generating the self-similarity phenomena observed in diverse networking contexts. The relationship between file sizes and selfsimilar traffic was suggested by the work described in <ref type="bibr" target="#b6">[7]</ref> which showed that self-similarity in World Wide Web traffic might arise due to the heavy-tailed distribution of file sizes present in the Web.</p><p>An important question is whether file size distributions in practice are in fact typically heavy-tailed, and whether file size access patterns can be modeled as randomly sampling from such distributions. Previous measurement-based studies of file systems have recognized that file size distributions possess long tails, but they have not explicitly examined the tails for power-law behavior <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b19">20]</ref>. In <ref type="bibr" target="#b6">[7]</ref>, it is shown that the size distribution of files found in the World Wide Web appears to be heavy-tailed with approximately equal to 1, which stands in general agreement with measurements reported in <ref type="bibr" target="#b2">[3]</ref>. In <ref type="bibr" target="#b5">[6]</ref>, the authors show that the sizes of reads and writes to an NFS server appear to show power-law behavior. In <ref type="bibr" target="#b18">[19]</ref>, it was found that the upper tail of the distribution of data bytes in FTP bursts was well fit to a Pareto distribution with 0:9 1:1. A general study of Unix file systems has found distributions that appear to be approximately power-law <ref type="bibr" target="#b10">[11]</ref>.</p><p>3 Network model and simulation set-up</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Network model</head><p>The network is given by a directed graph consisting of n nodes and m links. Each output link has a buffer, link bandwidth, and latency associated with it. A node v i (i = 1 2 : : : n ) is a server node if it has a probability density function p i (X) where X 0 is a random variable denoting file size. We will call p i (X) the file size distribution of server v i . v i is a client node (it may at the same time be also a server) if it has two probability density functions  </p><formula xml:id="formula_0">h i (X), d i (Y ), X</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1. Network configuration.</head><p>A file is completely determined by its size X and it is split into dX=Me packets where M is the maximum segment size (1kB for the results shown in the paper). The segments are routed through a packet-switched internetwork with packets being dropped at bottleneck nodes in case of buffer overflow. The dynamical model is given by all clients independently placing file transfer requests to servers where each request is completely determined by the file size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Simulation set-up</head><p>We have used the LBNL Network Simulator (ns) as our simulation environment <ref type="bibr" target="#b7">[8]</ref>. Ns is an event-driven simulator derived from S. Keshav's REAL network simulator supporting several flavors of TCP (in particular, TCP Reno's congestion control features-Slow Start, Congestion Avoidance, Fast Retransmit/Recovery) and router scheduling algorithms. Although not production TCP code, we have found ns's emulation of TCP satisfactory for the purposes at hand.</p><p>We have modified the distributed version of ns to model our interactive client/server environment. This entailed, among other things, implementing our client/server nodes as separate application layer agents. A UDP-like unreliable transport protocol was added to the existing protocol suite, and an aggressive opportunistic UDP-based agent was built to service file requests when using unreliable communication. We also added a TCP Vegas module to complement the existing TCP Reno and Tahoe modules.</p><p>Our simulation results were obtained from several hundred runs of ns. Each run executed for 10000 simulated seconds, logging traffic at 10 millisecond granularity. The result in each case is a time series of one million data points; using such extremely long series increases the reliability of statistical measurements of self-similarity. Although most of the runs reported here were done with a 2-server/32client bottleneck configuration (Figure <ref type="figure">1</ref>), other configurations were tested including performance runs with the number of clients varying in the range 1-132. The bottleneck link was varied from 1:5 Mbps up to OC-3 levels, and buffer sizes were varied in the range of 1kB-128kB. Non- bottleneck links were set at 10 Mbps and the latency of each link was set to 15ms. The maximum segment size was fixed at 1kB for the runs reported here. For any reasonable assignment to bandwidth, buffer size, mean file request size, and other system parameters, it was found that by either adjusting the number of clients or the mean of the idle time distribution d i appropriately, any intended level of network demand could be achieved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">File size distribution and traffic selfsimilarity 4.1 Heavy-tailed distributions</head><p>An important characteristic of our proposed mechanism for traffic self-similarity is that the sizes of files being transferred are drawn from a heavy-tailed distribution. A distribution is heavy-tailed if P X &gt; x ] x ; as x ! 1 where 0 &lt; &lt; 2. That is, the asymptotic shape of the distribution follows a power law. One of the simplest heavytailed distributions is the Pareto distribution. The Pareto distribution is power-law over its entire range; its probability density function is given by p(x) = k x ; ;1</p><p>where k &gt; 0, and x k. Its distribution function has the form F(x) = P X x] = 1 ; (k=x) :</p><p>The parameter k represents the smallest possible value of the random variable.</p><p>Heavy-tailed distributions have a number of properties that are qualitatively different from distributions more commonly encountered such as the exponential or normal distribution. If 2, the distribution has infinite variance; if 1 then the distribution has also infinite mean. Thus, as decreases, a large portion of the probability mass is present in the tail of the distribution. In practical terms, a random variable that follows a heavy-tailed distribution can give rise to extremely large file size requests with nonnegligible probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Effect of file size distribution</head><p>First, we demonstrate our central point: the interactive transfer of files whose size distribution is heavy-tailed generates self-similar traffic even when realistic network dynamics, including network resource limitations and the interaction of traffic streams, are taken into account.</p><p>Figure <ref type="figure" target="#fig_1">2</ref> shows graphically that our set-up is able to induce self-similar link traffic, the degree of scale-invariant burstiness being determined by the parameter of the Pareto distribution. The plots show the time series of network traffic measured at the output port of the bottleneck link from gateway G 2 to G 1 in Figure <ref type="figure">1</ref>. This downstream traffic is measured in bytes per unit time where the aggregation level or time unit varies over five orders of magnitude from 10ms, 100ms, 1sec, 10sec, to 100sec. Only the top three aggregation levels are shown in Figure <ref type="figure" target="#fig_1">2</ref>; at the lower aggregation levels traffic patterns for differing values appear fairly similar to each other. For close to 2, we observe a smoothing effect as the aggregation level is increased, indicating a weak dependency structure in the underlying time series. As approaches 1, however, burstiness is preserved even at large time scales indicating that the 10ms time series possesses long-range dependency. The last column depicts time series obtained by employing an exponential file size distribution at the application layer with the mean normalized so as to equal to that of the Pareto distributions. We observe that the aggregated time series between exponential and Pareto with = 1 :95 are statistically indistinguishable.</p><p>A quantitative measure of self-similarity is obtained by using the Hurst parameter H which expresses the speed of decay of a time series' autocorrelation function. A time series with long-range dependence has an autocorrelation function of the form r(k) k ; as k ! 1</p><p>where 0 &lt; &lt; 1. The Hurst parameter is related to via H = 1 ; 2 :</p><p>Hence, for long-range dependent time series, 1=2 &lt; H &lt; 1.</p><p>As H ! 1, the degree of long-range dependence increases.</p><p>A test for long-range dependence in a time series can be reduced to the question of determining whether H is significantly different from 1=2.</p><p>In this paper, we use two methods for testing selfsimilarity. 2 These methods are described more fully in <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b22">23]</ref> and are the same methods used in <ref type="bibr" target="#b11">[12]</ref>. The first method, the variance-time plot, is based on the slowly decaying variance of a self-similar time series. The second method, the R=S plot, uses the fact that for a self-similar data set, the rescaled range or R=S statistic grows according to a power law with exponent H as a function of the number of points included. Thus the plot of R=S against this number on a log-log scale has a slope which is an estimate of H.  4% packet drop rate for the most bursty case 2 A third method based on the periodogram was also used; however this method is believed to be sensitive to low frequency components in the series, which led in our case to a wide spread in the estimates; it is omitted here. ( = 1:05). The plot shows that the Hurst parameter estimates vary with file size distribution in a roughly linear manner. The H = ( 3 ; )=2 line shows the values of H that would be predicted by the ON/OFF model in an idealized case corresponding to a fractional Gaussian noise process. Although their overall trends are similar (nearly coinciding at = 1:65), the slope of the simulated system with resource limitations and reliable transport layer running TCP Reno's congestion control is consistently less than ;1, with an offset below the idealized line for close to 1 and above the line for close to 2. Figure <ref type="figure" target="#fig_2">3</ref> (middle) shows similar results for the case in which there is no significant limitation in bandwidth (155 Mb/s) leading to zero packet loss. There is noticeably more spread among the estimates which we believe to be the result of more variability in the traffic patterns since traffic is less constrained by bandwidth limitations. Figure <ref type="figure" target="#fig_2">3</ref> (right) shows the results when bandwidth is somewhat limited, as in the baseline case, but buffer sizes at the switch are made large (64kB). Again, a roughly linear relationship between the heavy-tailedness of file size distribution ( ) and self-similarity of link traffic (H) is observed.</p><p>To verify that this relationship is not due to specific characteristics of the TCP Reno protocol, we repeated our baseline simulations using TCP Tahoe and TCP Vegas. The results (presented in <ref type="bibr" target="#b17">[18]</ref>) were essentially the same as in the TCP Reno baseline case which indicates that specific differences in implementation of TCP's flow control between Reno, Tahoe, and Vegas do not significantly affect the resulting traffic self-similarity.</p><p>Figure <ref type="figure" target="#fig_5">4</ref> shows the relative file size distribution of client/server conversations over the 10000 second simulation time interval, organized into file size buckets (or bins). Each file transfer request is weighted by its size in bytes before normalizing to yield the relative frequency. The left figure shows that the Pareto distribution with = 1 :05 generates file size requests which are dominated by file sizes above 64kB. On the other hand, the file sizes for Pareto with = 1:95 and the exponential distribution (middle, right) are concentrated on file sizes below 64kB, and in spite of fine differences, their aggregated behavior (cf. Figure <ref type="figure" target="#fig_1">2</ref>) is similar with respect to self-similarity.</p><p>We note that for the exponential distribution and the Pareto distribution with = 1 :95, the shape of the relative frequency graph for the weighted case is analogous to the non-weighted (i.e., one which purely reflects the frequency of file size requests) case. However, in the case of Pareto with = 1 :05, the shapes are "reversed" in the sense that the total number of requests are concentrated on small file sizes even though the few large file transfers end up dominating the 10000 second simulation run.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Effect of idle time distribution</head><p>All the runs thus far were obtained with an exponential idle time distribution with mean 600 msec. Figure <ref type="figure" target="#fig_6">5</ref> (left) and (middle) show the H-estimates of the baseline configuration when the idle time distribution is exponential with mean 0.6 sec and Pareto with = 1:05 and mean <ref type="bibr">1.197</ref> sec. The file size distribution remained Pareto. As the Hestimates show, the effect of a Pareto-modeled heavy-tailed idle time distribution is to boost long-range dependence when is close to 2, decreasing in effect as approaches 1.</p><p>This phenomenon may be explained as follows. For file size distributions with close to 2, the correlation structure introduced by heavy-tailed idle time is significant relative to the contribution of the file size distribution, thus increasing the degree of self-similarity as reflected by H. As approaches 1, however, the tail weight of the file size distribution becomes the dominating term, and the contribution of idle time with respect to increasing dependency is insignificant in comparison.</p><p>Figure <ref type="figure" target="#fig_6">5</ref> (right) shows the Hurst parameter estimates when the file size distribution was exponential with mean As the idle time distribution is made more heavy-tailed ( ! 1), a positive trend in the H-estimates is clearly discernible. However, the overall level of H-values is significantly reduced from the case when the file size distribution was Pareto indicating that the file size distribution is the dominating factor in determining the self-similar characteristics of network traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Effect of traffic mixing</head><p>Figure <ref type="figure" target="#fig_7">6</ref> shows the effect of making one of the file size distributions heavy-tailed ( = 1 :05) and the other one exponential in the 2-server system. Downstream throughput is plotted against time where the aggregation level is 100 seconds. The left plot shows the case when both servers are Pareto with = 1:05. The right plot shows the case when both servers have exponential file size distributions. The middle plot is the combined case, where one server has a Pareto distribution with = 1:05 and the other server has an exponential distribution. Figure <ref type="figure" target="#fig_7">6</ref> shows that the mixed case is less "bursty" than the pure Pareto case but more bursty than the pure exponential case. Performance indicators such as packet drop rate and retransmission rate (not shown here) exhibit a smooth linear degradation when transiting from one extreme to the other. That is, the presence of less bursty cross-traffic does not drastically smooth out the more bursty one, nor does the latter swallow up the smooth traffic entirely. Traffic mixing was applied to all combination pairs for = 1:05 1:35 1:65 1:95 keeping one server fixed at = 1:05. The H-values for the three cases shown are 0.86, 0.81, and 0.54, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Effect of network topology</head><p>Figure <ref type="figure">7</ref> shows a variation in network topology from the base configuration (Figure <ref type="figure">1</ref>) in which the 32 clients are organized in a caterpillar graph with 4 articulation points (gateways G 3 , G 4 , G 5 , G 6 ), each containing 8 clients. The traffic volume intensifies as we progress from gateway G 6 to G 2 due to the increased multiplexing effect. Link traffic</p><formula xml:id="formula_1">S G G C 1 3 2 1 S 2 G 1 C 8 C 32 C 25 C 24 C 17 C 16 C 9 G 4 G 5 G 6 Figure 7</formula><p>. Variation in network topology.</p><p>was measured at the bottleneck link between G 3 and G 2</p><p>which was set at 1.544Mbps. All other links were set at 10Mbps. The Hurst parameter estimates for various values of (not shown here) indicate that for both V-T and R/S, the degree of self-similarity measured across both topologies is almost the same.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Effect of the protocol stack</head><p>In this subsection, we explore the role of the protocol stack with respect to its effect on traffic self-similarity. We concentrate on the functionality of the transport layer and its modulating influence on the characteristics of downstream traffic via its two end-to-end mechanisms: reliable packet transport and congestion control. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.1">Unreliable communication and erosion of longrange dependency</head><p>Figure <ref type="figure" target="#fig_8">8</ref> shows the Hurst parameter estimates for a 32client/2-server system with exponential idle time distribution and Pareto file size distributions for = 1:05 1:35 1:65, and 1:95. In these simulations, communication is unreliable; they use a UDP-based transport protocol which is driven by an extremely greedy application whose output rate, upon receiving a client request, was essentially only bounded by the local physical link bandwidth. (The flow-controlled case is described in <ref type="bibr" target="#b16">[17]</ref>.) The Hestimates show that as source burstiness is increased, the estimated Hurst parameter of the down-stream traffic decreases relative to its value in the upstream traffic.</p><p>Another interesting point is the already low Hurst estimate of the up-stream traffic for Pareto = 1 :05. We believe this is due to a stretching-in-space effect: given an exponential idle time distribution, the extremely greedy nature of the UDP-based application encourages traffic to be maximally stretched out in space, and stretching-in-time is achieved only for very large file size requests. The concentration of its mass on a shorter time interval decreases the dependency structure at lower time scales, making the traffic less self-similar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.2">Stretching-in-time</head><p>In contrast to the unreliable non-flow-controlled communication case, reliable communication and flow-control, together, act to preserve the long-range dependence of heavytailed file size distributions, facilitating its transfer and ultimate realization as self-similar link traffic. Efficiency dictates that file transmissions, including retransmission of lost packets, complete in a short amount of time. Subject to the limitations of congestion control in achieving optimally efficient transfer <ref type="bibr" target="#b15">[16]</ref>, this has the effect of stretching out a large file or message transfer in time into an on-average, thin packet train. This also suggests why the linear ON/OFF model may have been successful in modeling the output characteristics of a complicated nonlinear system which real networks undoubtedly are. In some sense, the effect of the unaccounted-for nonlinearity is reflected back as a stretching-in-time effect, thus conforming to the model's original suppositions. The effect of bandwidth and buffer capacity on traffic self-similarity are omitted here for brevity. They can be found in the full paper <ref type="bibr" target="#b17">[18]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">Network performance</head><p>In this section, we present a brief summary of performance results evaluating the effects of self-similarity. A comprehensive study of the performance implications of self-similarity including quality-of-service (QoS) issues, resource trade-offs, and performance comparisons between TCP Reno, Tahoe, and Vegas can be found in <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7.1">Performance evaluation under reliable communication</head><p>We evaluated network performance when both traffic selfsimilarity ( of Pareto file size distribution) and network resources (bottleneck bandwidth and buffer capacity) were varied. Figure <ref type="figure" target="#fig_10">9</ref> (left) shows packet loss rate as a function of for buffer sizes in the range 2kB-128kB. We observe a gradual increase in the packet loss rate as approaches 1, the flatness of the curve increasing as buffer capacity is decreased. The latter is due to an overextension of buffer capacity whereby the burstiness associated with = 1 :95 traffic is already high enough to cause significant packet drops. The added burstiness associated with highly selfsimilar traffic ( = 1 :05) bears little effect. The same gradual behavior is also observed for packet retransmission and throughput (not shown here). Figure <ref type="figure" target="#fig_10">9</ref> (middle) shows mean queue length as a function of for the same buffer range. In contrast to packet loss rate, queueing delay exhibits a superlinear dependence on self-similarity when buffer capacity is large. This is consistent with work <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref> showing that queue length distribution decays more slowly for long-range dependent sources than for short-range dependent sources. Figure <ref type="figure" target="#fig_10">9</ref> (right) shows the queueing delay-packet loss trade-off curve for four levels of . The individual performance points were obtained by varying buffer size while keeping bandwidth fixed at the baseline value. The performance curves show that under highly self-similar traffic conditions, the negative effects of self-similarity are significantly amplified in the packet loss rate regime below 4%. A similar trade-off relation exists for queueing delay and throughput. The effect of varying bandwidth to obtain the trade-off graphs and evaluation of the marginal benefit of network resources are discussed in <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7.2">Performance evaluation unreliable communication</head><p>Performance evaluations under unreliable, non-flowcontrolled transport yield performance results that are significantly worse than their reliable, flow-controlled counterparts. In particular, the dependence of throughput-related measures such as effective throughput, packet loss, and packet retransmission is no longer gradual-their shapes exhibit a superlinear dependence similar to the mean queue length relation in the reliable communication case. The superlinear dependence of queueing delay on the degree of self-similarity is further amplified, and so are trade-off relations between queueing delay and throughput. These results are omitted due to space constraints and can be found in <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>In this paper, we have shown that self-similarity in network traffic can arise due to a particularly simple cause: the reliable transfer of files drawn from heavy-tailed distributions. Such a high-level explanation of the self-similarity phenomenon in network traffic is appealing because there is evidence that file systems indeed possess heavy-tailed file size distributions <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b18">19]</ref>. It also relates a networking problem-traffic characterization-to a system-wide cause which has traditionally been considered outside the networking domain. The growth and prevalence of multimedia traffic only aggrevates the situation by facilitating the structural conditions for inducing self-similar network traffic, and our work supports recent efforts directed at managing network resources in a more integrated way ("Middleware" research) in which issues such as caching and server selection may turn out to be relevant in formulating effective solutions for congestion control.</p><p>We have shown that the relationship between file size distribution and traffic self-similarity is not significantly affected by changes in network resources, topology, traffic mixing, or the distribution of interarrival times. We have also shown that reliability and flow control mechanisms in the transport layer of the protocol stack give rise to a trafficshaping effect that preserves self-similarity in network traffic. This helps explain why the ON/OFF model <ref type="bibr" target="#b23">[24]</ref>, in spite of ignoring traffic interactions through resource limitations and feedback control, has been successful in modeling observed traffic characteristics. The coupling between traffic sources sharing and contending for common network resources leads to a stretching-in-time effect which reflects back to the ON/OFF model by conforming, at a qualitative level, to its simplifying suppositions.</p><p>Finally, we have shown that network performance, as measured by packet loss and retransmission rate, declines smoothly as self-similarity is increased under reliable, flowcontrolled packet transport. The only performance indicator exhibiting a more sensitive dependence on self-similarity was mean queue length, and this concurs with the observation that queue length distribution under self-similar traffic decays more slowly than with Poisson sources. In contrast, we showed that performance declines drastically with in-   creasing self-similarity when a UDP-like unreliable transport mechanism was employed. This gives a sense of the moderating effect of TCP on network performance in the presence of highly bursty traffic.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. TCP run. Throughput as a function of file size distribution and three aggregation levels. File size distributions constitute Pareto with = 1 :05 1:35 1:95, and exponential.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Hurst parameter estimates (TCP run): R/S and Variance-Time for = 1:05 1:35 1:65, and 1:95. Base run (left), large bandwith/large buffer (middle), large buffer (right)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 shows</head><label>3</label><figDesc>H-estimates based on variancetime and R/S methods for three different network configurations. Each plot shows H as a function of the Pareto distribution parameter for = 1:05 1:15 1:25 1:35 1:65 and 1:95.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 (</head><label>3</label><figDesc>Figure 3 (left) shows the results for the baseline TCP Reno case in which network bandwidth and buffer capacity are both somewhat limited (1:5 Mb/s and 6kB) resulting in a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Relative frequency of weighted file size distributions obtained from three 10000 second TCP runs-Pareto with = 1 :05 (left), with = 1 :95 (middle), and exponential distribution (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. TCP run: Exponential idle time vs. Pareto idle time with Pareto file size distributions-Variance-Time (left), R/S (middle); Pareto idle times with exponential file size distribution (right)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Traffic mixing effect for two file size distributions Pareto = 1 :05 and exponential at 100 second aggregation level: Both servers are Pareto (left); one server is Pareto, the other one is exponential (middle); both servers are exponential (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8. UDP run: Erosion of long-range dependence through excessive buffer overflow; Variance-Time (left) and R/S (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 .</head><label>9</label><figDesc>Figure 9. TCP run. Packet loss rate (left) and mean queue length (middle) as a function of ; queueing delay-packet loss trade-off curve (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>In the context of reliable communication, if T k is the time at which the k'th request by client v i was reliably serviced, the next request made by client v i is scheduled at time T k + Y where Y has distribution d i . Requests from individual clients are directed to servers randomly (independently and uniformly) over the set of servers. In unreliable communication, this causal requirement is waived. at G 2 from servers as upstream traffic and the traffic from G 2 to G 1 as downstream traffic.</figDesc><table><row><cell>2 f 1 : : : n g, Y 2 R + , where h i is used to select a server, and d i is the interarrival time (or idle time</cell></row><row><cell>distribution) which is used in determining the time of next</cell></row><row><cell>request.</cell></row></table><note><p>A 2-server, 32-client network configuration with a bottleneck link between gateways G 1 and G 2 is shown in Figure 1. This network configuration is used for most of the experiments reported below. We will refer to the total traf-fic arriving</p></note></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Supported in part by NSF grant CCR-9204284. This work was performed while the author was at Boston University.</p><p>y Supported in part by NSF grant CCR-9308344. z Supported in part by NSF grant CCR-9501822.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">On resource management and QoS guarantees for long range dependent traffic</title>
		<author>
			<persName><forename type="first">A</forename><surname>Adas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mukherjee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM &apos;95</title>
		<meeting>IEEE INFOCOM &apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="779" to="787" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fractal traffic: measurements, modelling and performance evaluation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Addie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zukerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Neame</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM &apos;95</title>
		<meeting>IEEE INFOCOM &apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="977" to="984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Web server workload characterization: The search for invariants</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Arlitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Williamson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1996 ACM SIGMETRICS</title>
		<meeting>1996 ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
		</imprint>
	</monogr>
	<note>Preprint. To appear in</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Measurements of a distributed file system</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Hartman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Kupfer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">W</forename><surname>Shirriff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Ousterhout</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 13th SOSP</title>
		<meeting>13th SOSP<address><addrLine>Pacific Grove, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-10">October 1991</date>
			<biblScope unit="page" from="198" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Statistics for Long-Memory Processes. Monographs on Statistics and Applied Probability</title>
		<author>
			<persName><forename type="first">J</forename><surname>Beran</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Chapman and Hall</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A synthetic workload model for a distributed system file server</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Bodnarchuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Bunt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGMETRICS &apos;91</title>
		<meeting>SIGMETRICS &apos;91</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="50" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Self-similarity in world wide web traffic: Evidence and possible causes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bestavros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGMETRICS &apos;96</title>
		<meeting>SIGMETRICS &apos;96</meeting>
		<imprint>
			<date type="published" when="1996-05">May 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
		<ptr target="http://-www-nrg.ee.lbl.gov/nrg" />
		<imprint>
			<date type="published" when="1995-07">July 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Analysis, modeling and generation of self-similar VBR video traffic</title>
		<author>
			<persName><forename type="first">M</forename><surname>Garrett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIG-COMM &apos;94</title>
		<meeting>ACM SIG-COMM &apos;94</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="269" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Modeling and simulation of self-similar variable bit rate compressed video: a unified approach</title>
		<author>
			<persName><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Devetsikiotis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Lambadaris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kaye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIG-COMM &apos;95</title>
		<meeting>ACM SIG-COMM &apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="114" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Unix file size survey -1993</title>
		<author>
			<persName><forename type="first">G</forename><surname>Irlam</surname></persName>
		</author>
		<ptr target="http://www.base.com/gordoni/ufs93.html" />
		<imprint>
			<date type="published" when="1994-09">September 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On the self-similar nature of Ethernet traffic (extended version)</title>
		<author>
			<persName><forename type="first">W</forename><surname>Leland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Taqqu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1" to="15" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Analysis of an ATM buffer with self-similar (&quot;fractal&quot;) input traffic</title>
		<author>
			<persName><forename type="first">N</forename><surname>Likhanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Tsybakov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE IN-FOCOM &apos;95</title>
		<meeting>IEEE IN-FOCOM &apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="985" to="992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A storage model with self-similar input</title>
		<author>
			<persName><forename type="first">I</forename><surname>Norros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Queueing Systems</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="387" to="396" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A trace-driven analysis of the UNIX 4.2 BSD file system</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Ousterhout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">D</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Harrison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kunze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kupfer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Tenth ACM Symposium on Operating System Principles</title>
		<meeting>the Tenth ACM Symposium on Operating System Principles<address><addrLine>Orcas Island, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1985-12">December 1985</date>
			<biblScope unit="page" from="15" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Warp control: a dynamically stable congestion protocol and its analysis</title>
		<author>
			<persName><forename type="first">K</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM &apos;93</title>
		<meeting>ACM SIGCOMM &apos;93</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="137" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">On the effect of traffic self-similarity on network performance</title>
		<author>
			<persName><forename type="first">K</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note>Submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">On the relationship between file sizes, transport protocols, and self-similar network traffic</title>
		<author>
			<persName><forename type="first">K</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Crovella</surname></persName>
		</author>
		<idno>96-016</idno>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>Boston University, Computer Science Department</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Wide-area traffic: the failure of Poisson modeling</title>
		<author>
			<persName><forename type="first">V</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM &apos;94</title>
		<meeting>ACM SIGCOMM &apos;94</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="257" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Analysis of file I/O traces in commercial computing environments</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Biswas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Karedla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGMETRICS &apos;92</title>
		<meeting>SIGMETRICS &apos;92</meeting>
		<imprint>
			<date type="published" when="1992-06">June 1992</date>
			<biblScope unit="page" from="78" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A study of file sizes and functional lifetimes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th SOSP</title>
		<meeting>the 8th SOSP</meeting>
		<imprint>
			<date type="published" when="1981-12">December 1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Analysis of long term file reference patterns for application to file migration algorithms</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="403" to="410" />
			<date type="published" when="1981-07">July 1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Estimators for long-range dependence: an empirical study</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Taqqu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Teverovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note type="report_type">Preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Selfsimilarity through high-variability: statistical analysis of Ethernet LAN traffic at the source level</title>
		<author>
			<persName><forename type="first">W</forename><surname>Willinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Taqqu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIG-COMM &apos;95</title>
		<meeting>ACM SIG-COMM &apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="100" to="113" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
