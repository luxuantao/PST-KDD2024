<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SEC: Secure, Efficient, and Compatible Source Address Validation with Packet Tags</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Xinyu</forename><surname>Yang</surname></persName>
							<email>xinyu-ya18@mails.tsinghua.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Jiahao</forename><surname>Cao</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Mingwei</forename><surname>Xu</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Tsinghua University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Harbin Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<settlement>Shenzhen)</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Tsinghua University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">SEC: Secure, Efficient, and Compatible Source Address Validation with Packet Tags</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/IPCCC50635.2020.9391554</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Source address validation</term>
					<term>Security</term>
					<term>Efficiency</term>
					<term>Compatibility</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Spoofed traffic has been a great threat to the Internet. Tag-based inter-AS source address validation solutions show great effectiveness and high deployment incentives on filtering spoofed traffic. However, they fail to consider secure key negotiation for tags, efficient tag generation for network devices, and compatible tag placement for network functionalities. In this paper, we present SEC, a secure, efficient, and compatible source address validation scheme based on packet tags. We provide a secure key negotiation method and a lightweight tag generation algorithm for SEC considering hardware limitations of network devices. They can be easily implemented in network devices to filter spoofed packets while forwarding packets at approximately line rate. We also carefully place all tags into appropriate option fields in packet headers to guarantee the compatibility of network functionalities. We implement SEC in real programmable switches. Both theoretical analysis and experimental results show SEC can verify source addresses of packets in a secure, efficient, and compatible way.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>As the Internet forwards packets based on destination addresses regardless of source addresses, attackers can easily forge source addresses of packets to conduct malicious behaviors, especially Distributed Denial-of-Service (DDoS) attacks. They hide their true identities, which makes defenders hard to accurately trace their sources and effectively defeat them. According to a recent survey <ref type="bibr" target="#b0">[1]</ref>, about 31.5% of tested 5,178 Autonomous Systems (ASes) have the IP addresses that are spoofable. Obviously, spoofed traffic has been a great threat to the Internet.</p><p>To prevent source address spoofing, several solutions have been proposed. Ingress/Egress filtering methods <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref> filter outbound network traffic of ASes at the AS boundary according to the ownership of the routing prefixes. Although they can effectively prevent spoofed traffic from entering other ASes, they fail to prevent spoofed traffic from entering into deployers' ASes when other ASes do not apply the filtering mechanism. They provide low deployment incentives to deployers' ASes <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b3">[4]</ref>. Therefore, a number of solutions <ref type="bibr" target="#b4">[5]</ref>- <ref type="bibr" target="#b6">[7]</ref> leverage route information of arrived packets to filter out spoofed traffic that may enter deployers' ASes. They either filter packets based on the number of hops <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref> or the mapping between input interfaces of network devices and IP address prefixes. However, they are coarse-grained. For example, spoofed packets with the correct number of hops can bypass hop-based filtering mechanisms. It is also extremely difficult to maintain accurate and timely mappings between input interfaces of all network devices and IP address prefixes in the large-scale and dynamic Internet. Tag-based inter-AS source address validation <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b11">[12]</ref> shows high accuracy, substantial deployment incentives, and good effectiveness on filtering spoofed traffic. They apply pre-negotiated keys among ASes to generate and add tags for packets leaving ASes and check tags for packets entering ASes. They effectively filter out spoofed packets and provide sufficient benefits for deployers.</p><p>However, existing tag-based solutions <ref type="bibr" target="#b9">[10]</ref>- <ref type="bibr" target="#b11">[12]</ref> are subject to three limitations. First, existing methods have insecure key negotiation. All negotiation parties do not validate the identity of each other, which is vulnerable to Man-in-the-Middle (MitM) attacks. And for solutions similar to SPM <ref type="bibr" target="#b9">[10]</ref>, whose tags are fixed random strings. If attackers sniff legitimate packets, they can forge packets with spoofed source addresses arbitrarily. Moreover, none of the existing solutions consider the replay attacks. Second, existing tag generation methods are inefficient. Passport <ref type="bibr" target="#b10">[11]</ref> and DISCS <ref type="bibr" target="#b11">[12]</ref> employs heavy encryption algorithms to calculate message authentication code for each packet. Although the tags cannot be forged, the computational overhead is significant for routers. Third, existing solutions are incompatible with network functionalities. They place tags either in occupied identifier/offset header fields or add customized headers after the IP header. Thus, they either affect the functionality of IP fragmentation or may be blocked by the Internet middleboxes due to non-standard headers.</p><p>In this paper, we propose SEC, which is a secure, efficient, and compatible source address validation scheme based on packet tags. We combine Elliptic Curve Diffie-Hellman Ephemeral (ECDHE) key agreement and Resource Public Key Infrastructure (RPKI) to enable secure key negotiation in SEC, which can effectively defeat MitM attacks. Based on negotiated keys, we design a lightweight tag generation algorithm. It maps source addresses to pseudo-random tags with hash and table lookup methods while considering hardware limitations of network devices. Therefore, the algorithm can be easily implemented in routers and programmable hardware (e.g., P4 Switches). Meanwhile, it enables processing and forwarding packets at approximately line rate. Moreover, SEC adds a timestamp field in tags to resist replay attacks. All tags are carefully placed into appropriate option fields in packet headers to guarantee the compatibility of network functionalities.</p><p>We build a prototype of SEC in real programmable switches </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. THREAT MODEL AND GOALS</head><p>A. Threat Model 1) T1 Source Address Spoofing: We assume that attackers can comprise any hosts located in any ASes. Also, the comprised host can spoof any addresses. We further assume that the location of comprised hosts and the spoofed addresses obey uniform distribution.</p><p>2) T2 Packet Hijacking and Impersonation: The adversary can hijack any packets with legal tags or negotiation messages in the network. Moreover, the adversary can replay and impersonate these packets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Design Goals</head><p>1) G1 Security: (1) G11 Key secret. Even one could hijack and impersonate any packets in the network, he cannot get the secret key shared between any pair of ASes. (2) G12 Address validation. Given the ability of attackers, the receiver still could distinguish legal packets from packets without or with invalid tags. (3) G13 Replay Resistant. The receiver could distinguish the replayed packets.</p><p>2) G2 Efficiency: As high throughput is an important target of the Internet, our system should be efficient so as not to degrade the performance of network devices.</p><p>3) G3 Compatibility: The deployment of the system is a gradual process, we should ensure that our system can still work well under partial deployment. Moreover, our system should not undermine the functionality of the Internet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. SYSTEM DESIGN</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. System Overview</head><p>The architecture of our system named SEC is shown in Fig. <ref type="figure" target="#fig_0">1</ref>. Each pair of ASes deploying our system shares a unique key that is used to generate tags. Depending on the key, AS border routers perform tag stamping and verification. If it can pass the verification, the source address is considered legal and the packet is permitted to pass. Otherwise, the tag of the packet is considered as forged or the packet is replayed. In this case, our system drops the illegal packet. To achieve the above functions, our system consists of three modules. The first module is key distribution, which aims to provide secure key negotiation among different ASes G11. Moreover, this module is compatible with the existing BGP protocol G3. The second module is tag generation, which provides a lightweight tag generation algorithm that well balances balance security and efficiency G12 G2. Moreover, the module places the generated tags in proper fields of packets so that it is compatible with existing network functionalities G3. The third module is packet processing. This module defines how border routers perform different processing for inbound and outbound packets G2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Key Distribution</head><p>1) Key Distribution Process.: In our system, the tag generation is based on the key, so the security of key distribution is crucial. To ensure secure key distribution, our system employs the ECDHE key agreement scheme for key negotiation and applies Resource Public Key Infrastructure (RPKI) for identity authentication among ASes. The negotiation information is carried by the BGP UPDATE message.</p><p>The ECDHE scheme is utilized to provide perfect forward secrecy for the system. To cope with man-in-the-middle attacks T2, certification authority (CA) in RPKI is used for identity authentication of both parties in the negotiation G11. Each AS in RPKI corresponds to a CA certificate holder . The certificates are issued by the address assignment agency to indicate that the CA certificate holder owns the IP address prefixes. Here, we use the CA certificate to authenticate the AS identities of the negotiating parties.</p><p>Our system applies BGP UPDATE messages to carry key negotiation messages so that no new protocol is introduced. As BGP UPDATE protocol provides experimental path parameter fields, we carry key negotiation messages by these fields. Even if routers cannot determine the content of the experimental path parameters, they can still forward these modified BGP messages normally G3 <ref type="bibr" target="#b12">[13]</ref>. Because the UPDATE messages are carried over stateful TCP protocol and are rate-limited, it is not practical to launch DoS attack to negotiation process.</p><p>Each deployer has a controller that negotiates keys with other deployers and synchronize the shared keys to all border Here, the controller can be a dedicated server, a border router, or a route reflector, which is configured by AS administrators.</p><p>2) Key Negotiation Protocol.: In order to ensure the unambiguity and simplicity of our system, we apply Curve25519 as the universal parameter for key negotiation. Curve25519 is one of the fastest ECC curves designed for ECDHE key negotiation scheme. It offers 128 bits of security and has not been covered by any known patents <ref type="bibr" target="#b13">[14]</ref>. For a deployer a, it generates a random integer d a and calculates its public key</p><formula xml:id="formula_0">Q a = d a • G.</formula><p>Here, G is the generator specified in Curve25519. After that, the public key is carried as a parameter in negotiation messages, which is shown in Fig. <ref type="figure" target="#fig_1">2(a)</ref>. The same operations are performed by another deployed AS b. Then AS a and AS b could get shared key by</p><formula xml:id="formula_1">K a = d a • Q b and K b = d b • Q a respectively. Obviously, K = K b = K a = d a • d b • G.</formula><p>Thus, both a and b get the shared key K. Any AS with our system deployed can implement key negotiations in this way.</p><p>Delivery confirmation is introduced to ensure that the key negotiation is completed. The packet format is shown in Fig. <ref type="figure" target="#fig_1">2(b</ref>). The Session ID field is a randomly selected string and is encrypted using the key shared with another party. If the key negotiation is completed, the receiver will be able to decrypt the Session ID. The encrypted Session ID+1 information is sent back to confirm that the key negotiation is completed successfully.</p><p>3) Rekeying.: An AS may update the keys shared with other ASes due to key leakage or other reasons. The AS could update all the keys shared with others by sending a new negotiation message. It can also deliver end-to-end key agreement messages if only a few number of keys should be updated. To do this, the address of controller in each AS should be known. In addition to the ECDHE parameters, the address of the controller should be attached as a negotiation parameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Tag Generation</head><p>We now introduce the design of tag generation. We will show that our method can well balance security and efficiency. In this method, the tag is derived from the key, the timestamp for preventing replay attack, and the source address for source address validation. Next, we first introduce the necessity and method of timestamp generation, then we propose a lightweight tag generation algorithm. In the end, we analyse the tag placement.</p><p>1) Timestamp Generation.: A timestamp is introduced to prevent malicious attackers from conducting replay attacks. For example, attackers may collect packets in the network for a period of time and quickly replay these packets to the victim T2. As these packets have legitimate tags, border routers may fully trust these packets, which may suffer a DDoS attack. To prevent such replay attacks, our system design inserts a timestamp field in the packet header G13. Two factors should be considered for timestamp field, that are granularity and field length. A fine-grained timestamp can lower the possibility of packets replay, but in the same time introduce vulnerability of information leakage <ref type="bibr" target="#b14">[15]</ref>. Similarly, the choice of field length should deal with the trade-off between capacity and overhead. Comprehensively consider the above factors, we choose seconds as the granularity and 16 bits as the length. The seconds level granularity can minimize the possibility of replay attack without leak sensitive data. For the field length, the system key can be updated in several minutes, so the time of 2 16 seconds is sufficient to ensure the unambiguity of the timestamp.</p><p>2) Tag Generation Algorithm.: Existing methods either use cryptographic algorithms for tag generation which is of low efficiency or constant tag which is of low security T1 <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>. In this section, we design a lightweight method that produces a pseudo-random tag, which is a function of key, source address, and timestamp G12 G2. Our method is inspired by previous studies <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b16">[17]</ref>. It can ensure that packets can be processed by routers at line rate while preventing attackers from learning or forging tags easily. The algorithm is illustrated in Fig. <ref type="figure">3</ref>. The lookup table T a,b generated by a and b is derived from the key shared between them ( §III-B). We adopt Secure Hash Algorithm SHA1 as derive function H, but any pseudo-random and not invertible function can be used. Also, we add a salt to the initial key, so that we can update lookup table periodically by changing the salt. By comprehensively consider the security, overhead, and availability(see §V), we set the item number and item length of each table to 256 and 16 respectively.</p><p>The hash algorithm mapping the source address and timestamp string to an 8 bits index value is the CRC algorithm. Because this algorithm is used as the basic algorithm for data frame verification, and network devices inherently support this algorithm. However, the algorithm is also easy to be learnt and forged by attackers <ref type="bibr" target="#b17">[18]</ref>. Thus, before performing the hash operation, we use a random string to perform an exclusive-OR operation with the original fields to hide the input of the hash algorithm. The output is subsequently mapped into a random 16 bits string by looking up the table to hide the output of the CRC algorithm.</p><p>To keep the secrecy of the lookup table, the random strings and lookup tables should be frequently updated. This method can be efficiently and easily implemented in network devices. As we will show in §V-B, this method can be implemented in programmable switches and could work at line rate.</p><p>3) Tag Placement.: The tags should be properly placed in packets to meet the requirement of compatibility G3. Thus, we should obey the following principles: First, the addition of tags should be compatible with existing network protocols (e.g., IP ID). Second, tagged packets should be normally forwarded by routers without deploying our system. Finally, the processing time of routers should be minimized to avoid introducing too much processing overhead.</p><p>Based on the above principles, we place tags in different Fig. <ref type="figure">3</ref> T able ← new bits(len) [num]</p><formula xml:id="formula_2">6:</formula><p>r ← H(key + salt)</p><formula xml:id="formula_3">7:</formula><p>n ← 0 8:</p><p>for i = 0 → (num × len/hol) do 9:</p><p>for j = 0 → hol/len do 10:</p><formula xml:id="formula_4">T able[n] ← r 11:</formula><p>r ← H(r)</p><p>12:</p><p>n ← n + 1 idx ← CRC(tmp random)</p><p>23:</p><formula xml:id="formula_5">tag = T able[idx] 24:</formula><p>return tag 25: end function fields for IPv4 and IPv6 packets. For IPv4 packets, according to the introduction to various types of option fields in BCP186 <ref type="bibr" target="#b18">[19]</ref>, the security option can better meet our design goals. We pick it to carry the packet tags for two reasons. First, the security option is mainly used for special purposes and is usually supported by dedicated equipment. Thus, it is rarely handled by general routers on the Internet <ref type="bibr" target="#b19">[20]</ref>. Second, network equipment rarely drop packets with security options even if they do not recognize them <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b20">[21]</ref>.</p><p>Unlike the IPv4 protocol, the IPv6 protocol simplifies many fields and introduces the concept of extended headers. We choose the destination option extension header to carry tags. The extension header with the destination option will only be checked by the destination host. The intermediate routers directly ignore this option. Thus, no processing overhead is introduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Packet Processing</head><p>The AS with the SEC system deployed implement packets stamping and verification on the data plane of the border routers G2, as is shown in Fig. <ref type="figure">4</ref>. When a packet reaches the AS border router, the border router will judge whether the packet comes from inside or outside according to the coming interface. It performs different operations on packets in different situations. Fig. <ref type="figure">4</ref>: Packet processing flow inside, it checks whether the source address of the packet belongs to the local AS according to the mapping table between IP prefixes and ASes. If so, it determines whether the destination AS has deployed SEC according to the destination address. If the destination AS has deployed SEC, it stamps tags into the packet. Otherwise, it forwards the packet directly. When a packet comes from outside, the packet is considered as the transit data passing through the AS. Thus, the packet is directly forwarded.</p><p>2) Basic Verification Process.: The destination AS is responsible for verifying packet tags. If a packet comes from outside, it first checks whether the AS is the destination of the packet according to the destination address. If so, it then determines whether the AS with the source address has an SEC system deployed. If the source AS has deployed SEC, the packet will be verified. Otherwise, it will be forwarded directly.</p><p>3) Advanced Stamping and Verification Process.: Our system can still verify packets to some extent even when the destination AS does not deploy SEC. In Fig. <ref type="figure">4</ref>, when the outbound packet's destination AS does not employ SEC, the border router will look up BGP PATH to the destination instead of directly forwarding the packet. If there is at least one deployer on the intermediate path, the last deployer on the path can be the intermediate verification AS. To achieve this, we maintain a list in the data plane, whose entry is a pair of AS numbers. If there are one or more deployers on the path to the destination AS, the item corresponding to the destination AS in the entry is the AS number of the last deployer on the path. If it does not exist, the corresponding value is 0.</p><p>For intermediate forwarding router, it is necessary to determine whether this AS is the last deployer on the path to the destination and then decide whether to perform verification. This can also be achieved by looking up the table mentioned above. If an attacker spoofs the source address which belongs to a deployer and then passes spoofed packets through another deployer, the packet will be dropped since it cannot pass the validation. In this case, even if the destination does not deploy the SEC system, the validation can still be performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. THEORETICAL ANALYSIS</head><p>This section conducts theoretical analysis to compare our method with existing source address verification methods in terms of the deployment incentive. Here, we consider three representative types of solutions. The first category is filtering methods based on routing information, such as DPF <ref type="bibr" target="#b4">[5]</ref>. The second is the Ingress/Egress filtering scheme <ref type="bibr" target="#b2">[3]</ref>. The third type is the tag-based method, such as SPM <ref type="bibr" target="#b9">[10]</ref> and Passport <ref type="bibr" target="#b10">[11]</ref>. As SPM and Passport achieve the same deployment benefits, we choose SPM for our analysis.</p><p>To conduct theoretical analysis of the deployment incentive for different methods, we first build a system model. For any source address spoofing attack, three roles are mainly involved: the AS where the attacker locates, the AS whose addresses are forged by the attacker, and the destination AS of the packet. We use AT (a, s, d) denote the attack vector which is defined in equation ( <ref type="formula" target="#formula_6">1</ref>), a, s, and d denote the three roles respectively. We assume a, s, and d are randomly chosen from all the ASes.</p><formula xml:id="formula_6">AT (a, s, d) = 0, if can be filtered. 1, if cannot be filtered.<label>(1)</label></formula><p>Basically, there are two of attacks that spoof source addresses <ref type="bibr" target="#b11">[12]</ref>. The first is the direct DDoS attack named d-DDoS, which hides their true identities by forging source addresses. The second is the reflective amplification attack named r-DDoS, which makes the victim to be overwhelmed with a huge amount of response traffic from public servers. In d-DDoS attacks, the victim is d. In r-DDoS attacks, the victim is s. For any d and s, the d-DDoS and r-DDoS attack plane without defense can be represented as follows:</p><formula xml:id="formula_7">A d = a∈ASN s∈ASN AT (a, s, d), A s = a∈ASN d∈ASN</formula><p>AT (a, s, d).</p><p>(2) Denoting by ASN the set of all ASes and D denotes the set of the deployed ASes. We define attack plane A as the summation of attack vectors. Since each AS can suffer from d-DDoS and r-DDoS attacks, the attack plane is the summation of d-DDoS and r-DDoS attack plane, which is A = A d + A s . Obviously, the larger the attack plane, the higher the risk of being attacked. For all source address verification schemes, we use BD d and BD s to denote the deployment benefit for d-DDoS and r-DDoS attacks respectively. The deployment benefit defined as the ratio of attack vectors that can be filtered out by this scheme. We define BL d and BL s as the benefit that ASes who don't deploy can get. We next analyze the deployment benefit for different methods: Ingress/Egress Filtering. For an AS who has deployed Ingress/Egress filtering methods, it will filter all the outbound packets whose IP source addresses do not belong to itself. Meanwhile, it drops illegal inbound packets whose source addresses are spoofed as IP addresses in itself. Egress filtering is typically employed only in stub ASes. Here, stub ASes are content providers or various organizations, transit ASes are either transit or access providers <ref type="bibr" target="#b21">[22]</ref>. According to the AS category counted by a study <ref type="bibr" target="#b21">[22]</ref>, the proportion of stub ASes is about 0.412. Since the packets filtering is done by source ASes, whether the destination ASes deploy or not has nothing to do with the effect. They are as follows:</p><formula xml:id="formula_8">BD d = BL d = a∈D s∈ASN AT (a, s, d), BD s = BL s = a∈D d∈ASN</formula><p>AT (a, s, d).</p><p>(3) DPF. The border routers deployed with DPF judge whether the source addresses of the packets are legal according to the path information of the packets. The benefits of ASes that deploy DPF are:</p><formula xml:id="formula_9">BD d = a∈ASN s∈ASN AT (a, s, d), BD s = a∈ASN d∈D AT (a, s, d) + a∈ASN d / ∈D</formula><p>AS(a, s, d) • pm.</p><p>(4) Here, the second part of BD s represents the situation that the spoofing packets are dropped by the ASes on the intermediate path. Therefore, we introduce the notation pm that means the probability of existing at least one ASes deployed with DPF on the path. We use p to denote the deployment ratio. Thus, we have: pm = 1 − (1 − p) l−1 , where l means the length of the AS path. According to the statistics of the real BGP AS path <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>, we set the path length as 4, i.e., l = 4. Thus we can calculate the benefits for ASes without DPF as follows:</p><formula xml:id="formula_10">BL d = a∈ASN s∈ASN AT (a, s, d) • pm, BL s = a∈ASN d∈ASN</formula><p>AT (a, s, d) • pm.</p><p>(5) SPM. The ASes deploying SPM mark and verify packets on border routers. However, tags in SPM are easily forged by attackers. Without considering the security of SPM, the deployment benefits are as follows:</p><formula xml:id="formula_11">BD d = a∈ASN s∈D AT (a, s, d), BD s = a∈ASN d∈D AT (a, s, d). (6)</formula><p>However, the benefits of ASes without deploying SPM are both 0:</p><formula xml:id="formula_12">BL d = 0, BL s = 0.<label>(7)</label></formula><p>SEC. According to our design of SEC, we can get the deployment benefits for ASes with SEC as follows:</p><formula xml:id="formula_13">BD d = a∈ASN s∈D AT (a, s, d), BD s = a∈ASN d∈D AT (a, s, d) + a∈D d / ∈D</formula><p>AS(a, s, d) • pm.</p><p>(8) Here, the second part of BD d and BD s denote the intermediate verification of SEC. The deployment benefits for ASes without SEC are as follows:</p><formula xml:id="formula_14">BL d = a / ∈D s∈D AT (a, s, d) • pm, BL s = 0. (<label>9</label></formula><formula xml:id="formula_15">)</formula><p>Authorized licensed use limited to: Tsinghua University. Fig. <ref type="figure">5</ref>: Absolute and relative deployment benefits According to the above analysis, we show the absolute and relative deployment benefits of different methods in Fig. <ref type="figure">5</ref>. In this figure, we use different colors and symbols to represent the deployment benefits of different solutions at different deployment ratios. We use dashed lines to represent the solution that has false positives. For the solution that is not secure and vulnerable to tag forgery, we use dot and dash lines. We can see the deployment benefit increases with the deployment ratio for all methods. The deployment benefit of SEC is higher than that of Ingress/Egress filtering and SPM. The deployment benefit of DPF is the highest. However, DPF is susceptible to asymmetric networks and network changes. Thus, there are different levels of false positives and false negatives <ref type="bibr" target="#b10">[11]</ref>.</p><p>Moreover, we evaluate the relative deployment benefits for different solutions. The relative deployment benefit is defined as the proportion of the additional benefit obtained by ASes deploying source address verification over the benefit obtained by ASes without source address verification. We use</p><formula xml:id="formula_16">(BD d + BD s − BL d − BL s )/(BD d + BD s ) to indicate that.</formula><p>The relative deployment benefit is directly related to the incentive for ASes to deploy source address verification schemes. A scheme with high absolute deployment benefits but low relative deployment benefits can not be easily deployed by ASes. Thus, we show the relative benefits of different solutions in Fig. <ref type="figure">5</ref>. We can see that SPM has the highest relative benefits since it has no benefit to ASes without deploying SPM. As the Ingress/Egress filtering method has the same benefits to ASes deploying it and ASes without deploying it, its relative benefit is zero. Although DPF initially has high deployment benefits, its relative benefits quickly decrease with the increase of the deployment ratio. SEC can achieve high relative benefits with different deployment ratios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EVALUATION</head><p>In this section, we first build an emulation testbed to demonstrate the effectiveness of our system on source address verification. Moreover, we implement our system in commercial P4 switches and conduct real experiments to show the efficiency of our system. Finally, we evaluate the security of our system in different attack scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Effectiveness evaluation</head><p>We use Mininet and bmv2 to build a network topology to verify the effectiveness of SEC. The experiment topology contains six ASes, which is shown in Fig. <ref type="figure" target="#fig_2">6</ref>. Each AS has several border routers and connects with each other through border routers. The shadowed ASes in Fig. <ref type="figure" target="#fig_2">6</ref> have deployed the SEC system. There is one host in AS1, AS2, AS3, and AS4. We evaluate the effectiveness of our system on source address verification with d-DDoS and r-DDoS attacks. We note that bmv2 is mainly used for testing and debugging rather than high-performance purpose <ref type="bibr" target="#b24">[25]</ref>. The forwarding capability in the emulation environment is very limited. Thus, we emulate small bandwidth for DDoS attack traffic to evaluate the system effectiveness. 2) Experiment Setup with r-DDoS Attacks.: The experiments test the benefits of the ASes deploying SEC in r-DDoS attacks. We use h2 to spoof the addresses of h3 and h4. The host h2 will send the spoofed packets to the victim h1. In this case, h1 which locates in AS1 is utilized as an amplifier by the attacker. The bot host h2 sends spoofed packets to the amplifier. The traffic will be amplified and reflected to the victims h3 and h4. We can see that h3 locating in an AS without deploying SEC suffers from d-DDoS attacks. However, the attack traffic to h4 that locates in an AS deploying SEC is filtered. This is because the legitimate packets from AS1 to AS4 are tagged by border routers, and the tag will be checked in the destination AS. However, the spoofed packets do not have legitimate tags. Thus, these packets are filtered. The lower figure shows the effectiveness on defending r-DDoS attacks. Spoofed packets to AS1 with source addresses belonging to AS4 will be filtered due to illegal tags. Therefore, the reflection DDoS attacks targeting at h4 can not work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Efficiency evaluation</head><p>We evaluate the performance of SEC by measuring the system's forwarding capability on commercial network devices. The network device in our experiments is the 3.3Tb/s Barefoot Tofino switch. Two servers connect to the switch via 40Gbps Intel XL710 NICs. Pktgen-dpdk and testpmd are applied to replay network packets and measure forwarding speed. The attack traffic we used is real network DDoS traffic, whose packet size ranges from 60 to 1260 bytes <ref type="bibr" target="#b25">[26]</ref>. As Passport adopts the standard encryption algorithm (AES) whose operations are too complex to be implemented in programmable switches, we only evaluate the efficiency of SEC and SPM. We measure the forwarding speed of SEC and SPM with different packet sizes. The results are presented in Fig. <ref type="figure" target="#fig_3">8</ref>. From the results, we can see that SEC achieves similar forwarding capacities as SPM. The forwarding speed reaches 34.28Gbps with an average packet size of 1260 bytes, which is close to theoretical bandwidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Security evaluation</head><p>Besides superior effectiveness and high efficiency, SEC also has the ability to resist attacks from various attackers. We conduct security analysis in the following attack scenarios. Attacks Targeting at Key Negotiation. SEC is designed to use the ECDHE scheme for key negotiation and RPKI to authenticate the identities of ASes. Thus, SEC can ensure that attackers cannot obtain the key even if they has the ability to intercept or tamper with negotiated packets. Brute Force Attacks Targeting at Cracking Keys and Guessing Tags. The curve used in ECDHE is Curve25519, which provides a security strength of 2 128 . Thus, it is extremely difficult for brute force attacks to crack keys. Moreover, the length of the tag in SEC is 16 bits. If attackers conduct brute-force guesses on valid tags, the success rate is 1/2 16 . For smarter attackers, if they know the generation algorithm, they will find that there are only 2 8 different tags for packets transmitted between each pair of ASes. In such case, the succeed probability of guessing correct tags for any packet will increase to 1/2 8 . However, for the volume-based attacks(e.g., DDoS), this can greatly reduce attack damage. Furthermore, SEC can periodically update keys to decrease the probability. Replay Attacks Targeting at Creating Legal Packets. Although attackers cannot effectively forge packet tags, they may sniff and collect a large amount of legitimate packets then replay them rapidly. SEC can defeat the replay attacks with the timestamp field generated in packets. SEC limits a time window to a few seconds and does not receive the packets that exceed the time window.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Overhead 1) Storage Overhead.:</head><p>The controller should maintain a negotiation information item for each AS deploying SEC. Moreover, it stores the lookup tables which will be loaded to the data plane. As the negotiation information item contains the controller address and shared keys, each item occupies 4+17+32=53 bytes at most. According to a study <ref type="bibr" target="#b26">[27]</ref>, the number of active ASes is about 60k. Thus, if all ASes deploy SEC, the storage space required by the key is 53 bytes * 60 k ≈ 3.03 MB. Each lookup table has 256 entries and each entry occupies two bytes. Therefore, the total storage space of lookup tables is 512 bytes * 60 k ≈ 29.3 MB. The data plane needs to maintain a lookup table for each AS, which takes 30MB. Moreover, the data plane should maintain the mapping table between IP prefixes and ASes and the intermediate verification AS information in the forwarding table. This will take additional five bytes per IP prefix. Assume that there are 100k IP prefixes in the forwarding table, it will take 100 k * 5 bytes ≈ 488.3 KB extra memory. We show the above results in Table <ref type="table">.</ref>I. According to <ref type="bibr" target="#b27">[28]</ref>, the SRAM size of ASIC can reach 100 MB, which is enough to store all the lookup tables. 2) Packet Overhead.: SEC tags every packet sent by the deployers. For both IPv4 and IPv6 packets, the tag is inserted in the option field. Thus, it adds some extra bytes to the packet. If we assume the average packet size is 600 bytes <ref type="bibr" target="#b28">[29]</ref>, the extra space required for IPv4 and IPv6 packets is 8 bytes, which is small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Compatibility</head><p>The key negotiation in SEC is implemented by BGP UP-DATE messages. Such kind of key negotiation is transparent to traditional network equipment. Network equipment without deploying SEC will directly forward the negotiation packets instead of trying to understand what they carry <ref type="bibr" target="#b29">[30]</ref>. Moreover, SEC places tags in the option fields of the IP packet instead of changing other fields in the IP packet header. Routers do not need to understand the content in the option field. Furthermore, as the stamping operation only operates in the network layer, it will not influence the equipment working at upper layers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. RELATED WORK</head><p>Ownership-based Filtering Solutions. These solutions filter network traffic at the AS boundary according to the ownership of the routing prefix. The first feasible filtering mechanism is proposed by BCP38 <ref type="bibr" target="#b1">[2]</ref>. BCP84 <ref type="bibr" target="#b2">[3]</ref> further improves the implementation of the filtering mechanism. Liu et al. <ref type="bibr" target="#b30">[31]</ref> propose MEF that applies mutual filtering mechanisms to improve absolute deployment incentives. They can effectively prevent bogus traffic generated in the deployer AS from entering the Internet. However, they are not friendly to the deployer itself. Bogus traffic from other ASes can still possibly enter the deployer AS if other ASes do not apply this mechanism. Route-based Filtering Solutions. These solutions filter bogus network traffic according to the routing information. DPF, IDPF, and SAVE <ref type="bibr" target="#b4">[5]</ref>- <ref type="bibr" target="#b6">[7]</ref> create the mapping between input interfaces of network devices and IP address prefixes from routing information. They compare whether source IP addresses of arrived packets belong to address prefixes in the incoming interfaces. Packets with mismatched source IP addresses are prevented from entering deployers' ASes. Although they are friendly to deployers, maintaining accurate mappings for all input interfaces from route information is difficult. HCF and NetHCF <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref> extracts the number of hops for arrived packets from routing information. They filter bogus IP packets with an IP-to-Hop-Count mapping table. However, they are coarse-grained and can be bypassed by spoofed packets with the correct number of hops. Tag-based Validation Solutions. These solutions filer packets with spoofed source IP addresses by stamping and verifying tags in packets. SPM <ref type="bibr" target="#b9">[10]</ref> applies fixed random strings as tags, which is simple and efficient to be implemented. However, attackers can easily forged the tags to bypass SPM. Passport <ref type="bibr" target="#b10">[11]</ref> and DISCS <ref type="bibr" target="#b11">[12]</ref> employ heavy encryption algorithms to calculate and tag message authentication codes for each packet. However, it introduces significant computational overhead and is difficult for routers to implement. OPT <ref type="bibr" target="#b31">[32]</ref> is a protocol used for not only source authentication but also path validation, which is even much heavier than Passport. Moreover, they place tags either in occupied identifier/offset header fields or add customized headers after IP headers. They either affect the function of IP fragmentation or may be blocked by Internet middleboxes due to non-standard headers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. ACKNOWLEDGEMENT</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig.1: System architecture. The packet is stamped in the border router of the source AS and then is verified in the border router of the destination AS. packet is considered as forged or the packet is replayed. In this case, our system drops the illegal packet.To achieve the above functions, our system consists of three modules. The first module is key distribution, which aims to provide secure key negotiation among different ASes G11. Moreover, this module is compatible with the existing BGP protocol G3. The second module is tag generation, which provides a lightweight tag generation algorithm that well balances balance security and efficiency G12 G2. Moreover, the module places the generated tags in proper fields of packets so that it is compatible with existing network functionalities G3. The third module is packet processing. This module defines how border routers perform different processing for inbound and outbound packets G2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>Fig.2: Key negotiation and confirm packets format routers in the AS. Here, the controller can be a dedicated server, a border router, or a route reflector, which is configured by AS administrators.2) Key Negotiation Protocol.: In order to ensure the unambiguity and simplicity of our system, we apply Curve25519 as the universal parameter for key negotiation. Curve25519 is one of the fastest ECC curves designed for ECDHE key negotiation scheme. It offers 128 bits of security and has not been covered by any known patents<ref type="bibr" target="#b13">[14]</ref>. For a deployer a, it generates a random integer d a and calculates its public keyQ a = d a • G.Here, G is the generator specified in Curve25519. After that, the public key is carried as a parameter in negotiation messages, which is shown in Fig.2(a). The same operations are performed by another deployed AS b. Then AS a and AS b could get shared key byK a = d a • Q b and K b = d b • Q a respectively. Obviously, K = K b = K a = d a • d b • G.Thus, both a and b get the shared key K. Any AS with our system deployed can implement key negotiations in this way.Delivery confirmation is introduced to ensure that the key negotiation is completed. The packet format is shown in Fig.2(b). The Session ID field is a randomly selected string and is encrypted using the key shared with another party. If the key negotiation is completed, the receiver will be able to decrypt the Session ID. The encrypted Session ID+1 information is sent back to confirm that the key negotiation is completed successfully.3) Rekeying.: An AS may update the keys shared with other ASes due to key leakage or other reasons. The AS could update all the keys shared with others by sending a new negotiation message. It can also deliver end-to-end key agreement messages if only a few number of keys should be updated. To do this, the address of controller in each AS should be known. In addition to the ECDHE parameters, the address of the controller should be attached as a negotiation parameter.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 6 :</head><label>6</label><figDesc>Fig.6: Experiment topology 1) Experiment Setup with d-DDoS Attacks.: The experiments validate the benefits of ASes deploying SEC against d-DDoS attacks. We use h2 to attack h3 and h4 by spoofing the address of h1. The bot host h2 locates in an AS without deploying SEC. It spoofs the address of AS1 that has deployed SEC and launches d-DDoS attacks against h3 and h4. The attacking traffic is generated by hping3, which sends 1000 packets with spoofed source addresses per second.2) Experiment Setup with r-DDoS Attacks.: The experiments test the benefits of the ASes deploying SEC in r-DDoS attacks. We use h2 to spoof the addresses of h3 and h4. The host h2 will send the spoofed packets to the victim h1. In this case, h1 which locates in AS1 is utilized as an amplifier by the attacker. The bot host h2 sends spoofed packets to the amplifier. The traffic will be amplified and reflected to the victims h3 and h4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 8 :</head><label>8</label><figDesc>Fig. 7: Effectiveness with d-DDoS and r-DDoS attacks</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>.00 ©2020 IEEE | DOI: 10.1109/IPCCC50635.2020.9391554 to evaluate its effectiveness and efficiency. The experimental results show that SEC allows switches to forward packets at a rate of 34.28 Gbps, which is close to line rate. It has capable defense effectiveness against DDoS attacks that spoof source addresses under partial deployment. Moreover, our security analysis shows that SEC can effectively resist MitM and replay attacks. Our theoretical analysis also demonstrates that SEC has high deployment incentive.</figDesc><table><row><cell>In summary, we make the following contributions:</cell></row><row><cell>-We propose a new system named SEC, which can verify</cell></row><row><cell>source addresses of packets in a secure, efficient, and</cell></row><row><cell>compatible way.</cell></row><row><cell>-We design secure key negotiation and lightweight tag</cell></row><row><cell>generation methods.</cell></row><row><cell>-We conduct theoretical analysis and experiments with a</cell></row><row><cell>prototype of SEC in programmable switches to show the</cell></row><row><cell>security, efficiency, and compatibility.</cell></row></table><note>978-1-7281-9829-3/20/$31.00 c 2020 IEEE 978-1-7281-9829-3/20/$31.00 ©2020 IEEE 2020 IEEE 39th International Performance Computing and Communications Conference (IPCCC) | 978-1-7281-9829-3/20/$31</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>1) Basic Stamping Process.: The source AS is responsible for stamping tags into packets. When a packet comes from</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Forward</cell></row><row><cell></cell><cell></cell><cell>No</cell><cell></cell><cell>No</cell><cell></cell></row><row><cell></cell><cell>Inbound</cell><cell>Src∈This AS?</cell><cell>Yes</cell><cell>Dst∈AS ESeC ?</cell><cell>Yes</cell></row><row><cell>Packet</cell><cell>Router Port Table</cell><cell>Prefix-to-AS</cell><cell></cell><cell>ESeC AS Table</cell><cell></cell></row><row><cell cols="2">Ingress port</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>Outbound mapping</cell><cell>Dst∈This AS?</cell><cell>Yes</cell><cell>Src∈AS ESeC ?</cell><cell>Yes</cell><cell>Tag / Verify</cell></row><row><cell></cell><cell></cell><cell>No</cell><cell></cell><cell>No</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE I :</head><label>I</label><figDesc>Overhead</figDesc><table><row><cell></cell><cell>Type</cell><cell>Size</cell></row><row><cell>Controller</cell><cell>RAM Disk</cell><cell>29.3 MB 3.03 MB</cell></row><row><cell>Data Plane</cell><cell>SRAM TCAM</cell><cell>29.3 MB 488.3 KB</cell></row><row><cell>Packet</cell><cell>-</cell><cell>8 Bytes/Per</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0">Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 08:15:15 UTC from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We thank anonymous IPCCC reviewers for their valuable comments. We also thank Qi Li, Wenlong Chen and Guanyu Li for joining some discussions of this work. This research is supported by the National Key R&amp;D Program of China under Grant 2017YFB0801701 and the National Natural Science Foundation of China under Grant 61832013. Mingwei Xu is the corresponding author.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Network hygiene, incentives, and regulation: Deployment of source address validation in the internet</title>
		<author>
			<persName><forename type="first">M</forename><surname>Luckie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Beverly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Koga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Keys</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Kroll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Claffy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="465" to="480" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">rfc2827: network ingress filtering: defeating denial of service attacks which employ ip source address spoofing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Senie</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Ingress filtering for multihomed networks</title>
		<author>
			<persName><forename type="first">F</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Savola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BCP</title>
		<imprint>
			<biblScope unit="volume">84</biblScope>
			<date type="published" when="2004-03">March. 2004</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep</note>
	<note>RFC</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Detection, classification, and analysis of inter-domain traffic with spoofed source ip addresses</title>
		<author>
			<persName><forename type="first">F</forename><surname>Lichtblau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Streibelt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Richter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Feldmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="86" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On the effectiveness of route-based packet filtering for distributed dos attack prevention in power-law internets</title>
		<author>
			<persName><forename type="first">K</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="15" to="26" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Constructing inter-domain packet filters to control ip spoofing based on bgp updates</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chandrashekar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>INFO-COM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Save: Source address validity enforcement protocol</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mirkovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Reiher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings. Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies</title>
				<meeting>Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1557" to="1566" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Hop-count filtering: an effective defense against spoofed ddos traffic</title>
		<author>
			<persName><forename type="first">C</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th ACM conference on Computer and communications security</title>
				<meeting>the 10th ACM conference on Computer and communications security</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="30" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Nethcf: Enabling line-rate and adaptive spoofed ip traffic filtering</title>
		<author>
			<persName><forename type="first">G</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Duan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE 27th ICNP</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Spoofing prevention method</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bremler-Barr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Levy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE 24th Annual Joint Conference of the IEEE Computer and Communications Societies</title>
				<meeting>IEEE 24th Annual Joint Conference of the IEEE Computer and Communications Societies</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="536" to="547" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Passport: secure and adoptable source authentication</title>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th NSDI. USENIX Association</title>
				<meeting>the 5th NSDI. USENIX Association</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="365" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Discs: a distributed collaboration system for inter-as spoofing defense</title>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 44th ICPP. IEEE</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="160" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Border Gateway Protocol 4 (BGP-4)</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Rekhter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hares</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Li</surname></persName>
		</author>
		<ptr target="https://rfc-editor.org/rfc/rfc4271.txt" />
	</analytic>
	<monogr>
		<title level="j">RFC</title>
		<imprint>
			<biblScope unit="volume">4271</biblScope>
			<date type="published" when="2006-01">Jan. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Irrelevant patents on elliptic-curve cryptography</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Bernstein</surname></persName>
		</author>
		<ptr target="https://cr.yp.to/ecdh/patents.html" />
		<imprint>
			<date type="published" when="2020-02-17">Feb 17, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Rfc 6274: Security assessment of the internet protocol version 4, internet eng</title>
		<author>
			<persName><forename type="first">F</forename><surname>Goni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Task Force</title>
				<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Network anti-spoofing with sdn data plane</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Afek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bremler-Barr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Shafir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM 2017-IEEE Conference on Computer Communications</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">itap: In-network traffic analysis prevention using software-defined networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Meier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gugelmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Vanbever</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on SDN Research</title>
				<meeting>the Symposium on SDN Research</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="102" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Reverse-engineering a crc algorithm</title>
		<author>
			<persName><forename type="first">G</forename><surname>Ewing</surname></persName>
		</author>
		<ptr target="http://www.cosc.canterbury.ac.nz/greg.ewing/essays/CRC-Reverse-Engineering.html" />
		<imprint>
			<date type="published" when="2010-03">March 2010, accessed Feb 17, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Recommendations on filtering of ipv4 packets containing ipv4 options</title>
		<author>
			<persName><forename type="first">F</forename><surname>Gont</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Atkinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Pignataro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internet Engineering Task Force, RFC</title>
		<imprint>
			<biblScope unit="volume">7126</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Ipv4 options for the identifier-locator network protocol (ilnp)</title>
		<author>
			<persName><forename type="first">R</forename><surname>Atkinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bhatti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RFC</title>
		<imprint>
			<biblScope unit="volume">6746</biblScope>
			<date type="published" when="2012-11">November, Tech. Rep., 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Ip options are not an option</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fonseca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
		<respStmt>
			<orgName>EECS Department, University of California, Berkeley, Tech. Rep.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">The caida ucsd as classification dataset</title>
		<idno>12.01</idno>
		<ptr target="https://www.caida.org/data/as-classification" />
		<imprint>
			<date type="published" when="2019-12-18">2019. Dec 18, 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">University of oregon route views archive project</title>
		<ptr target="http://archive.routeviews.org/" />
		<imprint>
			<date type="published" when="2019-12-14">Dec 14, 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Interesting graph -as path lengths over time</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kühne</surname></persName>
		</author>
		<ptr target="https://labs.ripe.net/Members/mirjam/interesting-graph-as-path-lengths" />
		<imprint>
			<date type="published" when="2010-10">Oct 2010, accessed Feb 19, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Behavioral model (bmv2)</title>
		<ptr target="https://github.com/p4lang/behavioral-model" />
		<imprint>
			<date type="published" when="2019-10-15">Oct 15, 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Ddos evaluation dataset (cicddos2019)</title>
		<ptr target="https://www.unb.ca/cic/datasets/ddos-2019.html" />
		<imprint>
			<date type="published" when="2020-02-20">Feb 20, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<ptr target="http://www.potaroo.net/tools/asn32/" />
		<title level="m">The 32-bit as number report</title>
				<imprint>
			<date type="published" when="2020-02-23">Feb-22 2020, accessed Feb 23, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Silkroad: Making stateful layer-4 load balancing fast and cheap using switching asics</title>
		<author>
			<persName><forename type="first">R</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="15" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Packet size distribution comparison between internet links in 1998 and</title>
		<ptr target="https://www.caida.org/research/traffic-analysis/pktsizedistribution/graphs.xml" />
		<imprint>
			<date type="published" when="2008-11">2008. Nov-12 2019, accessed Feb 23, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Rfc 4271</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Rekhter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hares</surname></persName>
		</author>
		<ptr target="http://www.rfc-editor.org/rfc/rfc4271.txt,accesson" />
	</analytic>
	<monogr>
		<title level="j">Internet Engineering Task Force</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page">34</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Toward incentivizing anti-spoofing deployment</title>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Vasilakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="436" to="450" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Lightweight source authentication and path validation</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Basescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
