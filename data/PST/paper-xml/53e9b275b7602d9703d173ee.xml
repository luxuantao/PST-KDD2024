<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Improved approximation algorithms for multidimensional bin packing problems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Nikhil</forename><surname>Bansal</surname></persName>
							<email>nikhil@us.ibm.com</email>
							<affiliation key="aff0">
								<orgName type="department">Research Center</orgName>
								<address>
									<postBox>P.O. Box 218</postBox>
									<postCode>10598</postCode>
									<settlement>Yorktown Heights</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ibm</forename><forename type="middle">T J</forename><surname>Watson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Research Center</orgName>
								<address>
									<postBox>P.O. Box 218</postBox>
									<postCode>10598</postCode>
									<settlement>Yorktown Heights</settlement>
									<region>NY</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Research Center</orgName>
								<address>
									<postBox>P.O. Box 218</postBox>
									<postCode>10598</postCode>
									<settlement>Yorktown Heights</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alberto</forename><surname>Caprara</surname></persName>
							<email>acaprara@deis.unibo.it</email>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">DEIS</orgName>
								<orgName type="institution" key="instit2">University of Bologna</orgName>
								<address>
									<addrLine>Viale Risorgimento 2</addrLine>
									<postCode>I-40136</postCode>
									<settlement>Bologna</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Maxim</forename><surname>Sviridenko</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Research Center</orgName>
								<address>
									<postBox>P.O. Box 218</postBox>
									<postCode>10598</postCode>
									<settlement>Yorktown Heights</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Improved approximation algorithms for multidimensional bin packing problems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5012DE1A86B55DDF001C1C86EBEE0F93</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper we introduce a new general framework for set covering problems, based on the combination of randomized rounding of the (near-)optimal solution of the Linear Programming (LP) relaxation, leading to a partial integer solution, and the application of a well-behaved approximation algorithm to complete this solution. If the value of the solution returned by the latter can be bounded in a suitable way, as is the case for the most relevant generalizations of bin packing, the method leads to improved approximation guarantees, along with a proof of tighter integrality gaps for the LP relaxation.</p><p>Applying our general framework we obtain a polynomial-time randomized algorithm for d-dimensional vector packing with approximation guarantee arbitrarily close to ln d + 1. For d = 2, this value is 1.693 . . ., i.e., we break the natural 2 "barrier" for this case. Moreover, for small values of d this is a notable improvement over the previously-known O(ln d) guarantee by Chekuri and  Khanna [5].</p><p>For 2-dimensional bin packing with and without rotations, we construct algorithms with performance guarantee arbitrarily close to 1.525 . . ., improving upon previous algorithms with performance guarantee of 2 + ε by Jansen and Zhang <ref type="bibr" target="#b11">[12]</ref> for the problem with rotations and 1.691 . . . by Caprara [2]  for the problem without rotations.</p><p>The previously-unknown key property used in our proofs follows from a retrospective analysis of the implications of the landmark bin packing approximation scheme by Fernandez de la Vega and Lueker <ref type="bibr" target="#b6">[7]</ref>. We prove that their approximation scheme is "subset oblivious", which leads to numerous applications.</p><p>Another byproduct of our paper is an algorithm that solves a well-known configuration LP for 2-dimensional bin packing within a factor of (1 + ε) for any ε &gt; 0. Interestingly, we do it without using an approximate separation oracle, which would correspond to a well-known geometric 2dimensional knapsack. Although separation and optimization are equivalent [10] and the existence of an approximation scheme for the separation problem remains open, we are able to design an approximation scheme for the configuration LP since its objective function is unweighed.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The study of the Bin Packing problem and its multidimensional generalizations goes back to the origins of Operations Research. From an approximability viewpoint, relevant results were obtained as soon as the main concepts in approximation were defined, in the late 1970s and early 1980s. These results essentially settled the status of Bin Packing with the Asymptotic Polynomial-Time Approximation Schemes (APTASes) due Fernandez de la Vega and Lueker <ref type="bibr" target="#b6">[7]</ref> and Karmarkar and Karp <ref type="bibr" target="#b14">[15]</ref>.</p><p>For practical applications, the most relevant generalization of Bin Packing is its 2-Dim version, where a given set of rectangular items must be packed in the minimum number of unit rectangular bins. The most commonly studied case is the so called orthogonal packing, where the items must be packed parallel to the sides of the bin. In some versions, the items are allowed to be rotated. A closely related problem is 2-Dim Strip Packing (also known as Cutting-Stock), motivated by applications in cloth cutting and steel cutting industry. Here we are given a strip of infinite height and unit size in other dimensions, and the goal is to pack the items such that the height occupied is minimized. Although these higher dimensional versions of Bin Packing are more complex, starting from the 1980s a slow but continuous progress was made, mainly concerning the 2-dimensional case. This culminated in a series of recent relevant results. Kenyon and Rémila <ref type="bibr" target="#b13">[14]</ref> showed that there is an APTAS for 2-Dim Strip Packing. This was recently extended by Jansen and van Stee <ref type="bibr" target="#b10">[11]</ref> to the case where the items can be rotated. For 2-Dim Bin Packing Bansal et al. <ref type="bibr" target="#b0">[1]</ref> showed that it does not admit an APTAS unless P=NP. The best known algorithm for 2-Dim Bin Packing without rotations is due to Caprara <ref type="bibr" target="#b1">[2]</ref> that achieves an asymptotic approximation guarantee arbitrarily close to 1.691 . . .. For the case when items can be rotated, an asymptotic approximation guarantee of 2 follows from the result of <ref type="bibr" target="#b10">[11]</ref>.</p><p>Another well studied (non-geometric) multi-dimensional packing problem is d-Dim Vector Packing. Here each item and bin is a d-dimensional vector with non-negative entries, and the goal is to place the items using the minimum number of bins such that for every bin the sum of the vectors placed in that bin is coordinate-wise no greater than the bin's vector. This problem is widely used to model resource allocation problems. The items can be viewed as jobs with requirements for d independent resources such as memory, CPU, hard disk, . . . , and the bins as machines that have a certain amount of each resource available. The goal is then to place the jobs on the minimum number of machines such that no machine is overloaded and each job meets its requirements. For d = 1 this problem is identical to the 1-Dim Bin Packing problem. For the d-Dim case, a folklore d + ε approximation follows trivially by essentially considering each dimension independently and applying the AP-TAS for 1-Dim Bin Packing. The first non-trivial result was due to Chekuri and Khanna <ref type="bibr" target="#b4">[5]</ref> who gave an O(ln d) approximation algorithm for constant d<ref type="foot" target="#foot_0">1</ref> . On the other hand, Woeginger <ref type="bibr" target="#b20">[21]</ref> ruled out an APTAS even for d = 2. For d = 2 the best known result is an absolute approximation guarantee of 2 due to Kellerer and Kotov <ref type="bibr" target="#b12">[13]</ref>. A natural question motivated by its intrinsic simplicity and practical applications <ref type="bibr" target="#b3">[4]</ref> is whether there is an asymptotic approximation guarantee better than 2 for d = 2 (the method of <ref type="bibr" target="#b4">[5]</ref> has guarantee 3 for d = 2).</p><p>In this paper we show the following results based on a more general framework for Set Covering problems. For 2-Dim Bin Packing, both with and without rotations, we give a polynomial-time randomized algorithm with approximation guarantee arbitrarily close to 1.525 . . .. This improves upon previous algorithms with performance guarantee arbitrarily close to 2 for the case with rotations <ref type="bibr" target="#b11">[12]</ref> and to 1.691 . . . for the case without rotations <ref type="bibr" target="#b1">[2]</ref>. For d-Dim Vector Packing we give a polynomial-time randomized algorithm with approximation guarantee arbitrarily close to ln d + 1 for fixed d. For small values of d this is a notable improvement over the previously known O(ln d) guarantee. For d = 2, our result implies an approximation guarantee of ln 2 + 1 = 1.693 . . . which breaks the natural barrier of 2 for this case. In the full version of the paper, we show that our algorithms can be derandomized. Our results also imply better integrality gaps for the configuration LP relaxation of these problems, which plays a key role in the state-of-the-art practical solution approaches <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b19">20]</ref>.</p><p>The basic idea of our framework is simple. We view the problem at hand as a Set Covering problem (for example in Bin Packing, each set corresponds to a valid way of packing a bin and the goal is to cover all the items with the minimum number of sets), and consider the LP relaxation of the Set Covering formulation. We apply a randomized rounding procedure for a few steps, after which we are left with a small fraction of uncovered elements (we call this the residual instance) that we cover using some approximation algorithm with certain "good" properties. The good property we seek is that the cost of the algorithm on the residual instance should be much smaller than its cost on the original instance. In particular, we prove that if we have a ρ-approximation algorithm that satisfies certain properties (being subset oblivious, see Definition 1) then we can design an LP-based (ln ρ + 1)-approximation algorithm (see Theorem 2). Roughly speaking, the subset oblivious property means that if the algorithm produces a solution with value at most ρ opt(I) on instance I, then, given a "random" subset S of I where each item occurs with probability about 1/k, the cost of the algorithm on S is bounded by approximately ρ opt(I)/k.</p><p>The key observation in this paper is that many known algorithms for Bin Packing problems are subset oblivious, or can be modified to be such. We show that the classic APTAS for 1-Dim Bin Packing due to Fernandez de la Vega and Lueker <ref type="bibr" target="#b6">[7]</ref> is a subset oblivious algorithm after minor modifications. Based on these ideas, we give a simple (d + ε)-approximate subset oblivious algorithm for d-Dim Vector Packing for constant d, which yields an approximation guarantee of ln d + 1 by the framework mentioned above. We also give (1.691 . . .)-approximation subset oblivious algorithms for 2-Dim Bin Packing with and without rotations, which yield an approximation guarantee of ln(1.691 . . .) + 1 = 1.525 . . . by our framework. Given the simplicity of our framework, we believe that it should be applicable to other problems of set covering type.</p><p>In the description above, we assumed that an optimum solution to the Set Covering LP relaxation was available. However, since our sets are implicitly described and are typically exponentially many, the problem of solving this LP relaxation is non-trivial. For the applications considered in this paper, we show that the LP relaxation can be solved to within (1 + ε) accuracy for any ε &gt; 0. For d-Dim Vector Packing, we do this by observing that the dual separation problem (also known as column generation problem) has a Polynomial-Time Approximation Scheme (PTAS), which implies a PTAS for the LP relaxation following the framework of <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref>. However, this approach does not work for 2-Dim Bin Packing. In this case the dual separation problem is the well-known maximum 2-Dim (Geometric) Knapsack problem, for which the best known algorithm, due to Jansen and Zhang <ref type="bibr" target="#b11">[12]</ref>, has a performance guarantee arbitrarily close to 2, and the existence of a PTAS is open. However, we are still able to design a PTAS for the LP relaxation bypassing the need for solving the dual separation problem. The key idea is that the objective function of our LP relaxation is unweighted, which allows us to use some structural properties of d-Dim Bin Packing and consider the LP relaxation on a restricted Set Covering problem that has only polynomially many sets. We believe that this technique may be of independent interest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>In all the packing problems considered in this paper we are given a set I of d-dimensional items specified by a dtuple (a i 1 , a i 2 , . . . , a i d ) that must be packed in the smallest number of unit size bins, i.e., with dimensions (1, . . . , 1). For the case d = 1, we let s i := a 1 i be the size of item i. For the case d = 2, for i ∈ I we will write b i for a i 1 and h i for a i 2 . The first dimension will be called the width (or basis) and the second dimension will be called the height.</p><p>For d-Dim Bin Packing, we say that a set C of items is feasibly packed if these items can be placed in a bin without any two overlapping with each other. We only consider the orthogonal packing case, where the items must be placed such that their edges are parallel to the edges of the bin. We will also consider the case of orthogonal packing with rotations. For d-Dim Vector Packing, a set C of items can be packed in a bin if i∈C a i j ≤ 1 for each j = 1, . . . , d. Given an instance I of a minimization problem, we let opt(I) denote the value of the optimal solution of the problem for I. Given a (deterministic) algorithm for the problem, we say that it has asymptotic approximation guarantee ρ if there exists a constant δ such that the value of the solution found by the algorithm is at most ρ opt(I) + δ for each instance I. If δ = 0, then the algorithm has (absolute) approximation guarantee ρ. Given a randomized algorithm for the problem, we say that it has asymptotic approximation guarantee ρ if there exists a constant δ such that the value of the solution found by the algorithm is at most ρ opt(I) + δ with a probability that tends to 1 as opt(I) tends to infinity. An algorithm with an asymptotic approximation guarantee of ρ is called a ρ-approximation algorithm. An APTAS is a family of polynomial-time algorithms such that, for each ε &gt; 0, there is a member of the family with asymptotic approximation guarantee 1 + ε. If δ = 0 for every ε, then this is a PTAS.</p><p>All above problems could be formulated as the following general Set Covering problem, in which a set I of items has to be covered by configurations from the collection C ⊆ 2 I , where each configuration C ∈ C corresponds to a feasible way of packing a bin:</p><formula xml:id="formula_0">min{ C∈C x C : C i x C ≥ 1 (i ∈ I), x C ∈ {0, 1} (C ∈ C)}.</formula><p>(1) As mentioned earlier, the collection C is given implicitly in the applications we consider, and hence we need to specify how to solve the LP relaxation of <ref type="bibr" target="#b0">(1)</ref>. The dual of this LP is given by max{ i∈I w i :</p><formula xml:id="formula_1">i∈C w i ≤ 1 (C ∈ C), w i ≥ 0 (i ∈ I)}. (2)</formula><p>Note that the separation problem for the dual is the following Knapsack type problem: Given weights on items w i , find, if any, a feasible configuration in which the total weight of items packed exceeds 1. By the well known connection between separation and optimization <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b18">19]</ref>, it follows that Theorem 1 If there exists a PTAS for the separation problem for (2), that is given w i ∈ R I + solve max C∈C i∈C w i , then there exists a PTAS for the LP relaxation of (1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The General Method</head><p>Our method, hereafter called Round and Approx (R&amp;A), constructs an approximate solution of the Set Covering problem (1) by performing the following steps, where α &gt; 0 is a parameter whose value will be specified later.</p><p>1. Solve the LP relaxation of (1), possibly approximately in case C is exponentially large in the input size. Let x * be the (near-)optimal solution of the LP relaxation and z * := C∈C x * C be its value; 2. Define the binary vector x r starting with x r C := 0 for C ∈ C and then applying the following procedure independently αz * times: select one configuration C at random, letting each C ∈ C be selected with probability x * C /z * , and let x r C := 1; 3. Consider the set of items S ⊆ I that are not covered by x r , namely i ∈ S if and only if C i x r C = 0, and the associated optimization problem for the residual instance:</p><formula xml:id="formula_2">min{ X C∈C xC : X C i xC ≥ 1 (i ∈ S), xC ∈ {0, 1} (C ∈ C)}.<label>(3)</label></formula><p>Apply some approximation algorithm to the problem (3) yielding solution x a ; 4. Return the solution x h := x r + x a .</p><p>Note that in Step 2 each selection is independent of the others (i.e., the same configuration may be selected more than once).</p><p>Of course, the quality of the final solution depends on the quality of the approximation algorithm used to solve the residual instance. Here we focus our attention on the case in which this latter quality can be expressed in terms of a small set of "weight" vectors in R I , as stated in Definition 1 below.</p><p>Given a set S ⊆ I, with an abuse of notation we let S denote also the Set Covering instance defined by the items in S. Moreover, we let opt(S) and appr(S) denote, respectively, the value of the optimal solution of (3) and the value of the heuristic solution produced by the approximation algorithm that we consider, and χ S I ∈ {0, 1} I the incidence vector of S, χ I I being the all-one vector. When no confusion arises, we will write χ S for χ S I . For a vector v, we will use v i to denote the i th co-ordinate of v. Given two vectors v and w, throughout the paper we will use vw to denote the dot product of v and w.</p><p>Below we define the class of the subset oblivious algorithms, which are very useful for our analysis. Intuitively, since we apply a randomized rounding in Step 2 we do not know in advance which will be the subset S of remaining items, but we still want our approximation algorithm to perform "well" in a suitably-defined sense. The definition below captures the property of this "subset independence" we need.</p><p>Definition 1 A ρ-approximation algorithm for problem <ref type="bibr" target="#b0">(1)</ref> is called subset oblivious if, for any fixed ε &gt; 0, there exist constants k, ψ and δ (possibly depending on ε) such that, for every instance I of (1), there exist vectors w 1 , . . . , w k ∈ R I with the following properties:</p><p>(i) i∈C w j i ≤ ψ, for each C ∈ C and j = 1, . . . , k;</p><p>(ii) opt(I) ≥ max{w 1 χ I , . . . , w k χ I };</p><p>(iii) appr(S) ≤ ρ max{w 1 χ S , . . . , w k χ S } + ε opt(I) + δ, for each S ⊆ I.</p><p>Property (i) says that the vectors obtained from w 1 , . . . , w k by dividing all the entries by constant ψ must be feasible for the dual of the LP relaxation of (1), Property (ii) provides a lower bound on the value of the optimal solution for the whole instance I, and Property (iii) guarantees that the value of the approximate solution on subset S is not significantly larger than ρ times the part of the lower bound in (ii) associated with S.</p><p>It is instructive to consider an example. Suppose we have an instance of the 1-Dim Bin Packing problem and we consider the Next Fit algorithm where each item is placed in the current bin if it fits, and placed in a new empty bin otherwise (closing the previous bin). We wish to show that Next Fit is a 2-approximation subset oblivious algorithm. To do this, we let k := 1 and define the vector w 1 by setting its i th co-ordinate w 1 i = s i , the size of item i. Then clearly Property (i) is satisfied with ψ = 1, as no bin can contain items with total size more than 1. Property (ii) follows trivially as the number of bins used is at least equal to total size of the items in the instance. Property (iii) holds with ρ = 2 and δ = 1, and follows by observing the total size of the items in every two consecutive bins packed by Next Fit is at least 1.</p><p>In general there are many candidates for the vectors w i . In particular, any feasible solution w to the dual problem defined by (2) satisfies Property (i) with ψ = 1, and satisfies Property (ii) by LP duality. Typically, the non-trivial part is to choose a small collection of appropriate vectors w i and show that Property (iii) holds with a reasonable value of ρ.</p><p>Our main result is the following: Theorem 2 If there exists a ρ-approximation subset oblivious algorithm for problem (1) then, for any constant γ &gt; 0, the cost of the final heuristic solution produced by R&amp;A using that algorithm in Step 3 with α := ln ρ is at most</p><formula xml:id="formula_3">(ln ρ + 1 + ε) opt(I) + δ + γz * + 1,<label>(4)</label></formula><p>with probability at least 1 -k e -2(γz * ) 2 /(ψ 2 z * ln ρ ) , i.e., method R&amp;A is a randomized (ln ρ + 1 + ε)-approximation algorithm for problem <ref type="bibr" target="#b0">(1)</ref>.</p><p>We need the following concentration inequality in the analysis of R&amp;A, due to McDiarmid <ref type="bibr" target="#b16">[17]</ref> (see also <ref type="bibr" target="#b17">[18]</ref> for a nice survey on concentration inequalities).</p><p>Lemma 1 (Independent Bounded Difference Inequality) Let X = (X 1 , . . . , X n ) be a family of independent random variables, with X j ∈ A j for j = 1, . . . , n, and f :</p><formula xml:id="formula_4">n j=1 A j → R be a function such that |f (x) -f (x )| ≤ c j</formula><p>whenever the vectors x and x differ only in the j-th coordinate. Let E(f (X)) be the expected value of the random variable f (X). Then, for any t ≥ 0,</p><formula xml:id="formula_5">P r(f (X) -E(f (X)) ≥ t) ≤ e -2t 2 / P n j=1 c 2 j .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof of Theorem 2</head><p>The cost of the rounded solution x r produced in Step 2 is at most αz * ≤ α opt(I) + 1.</p><p>We now estimate the cost of x a . Consider random variable w j χ S for j = 1, . . . , k. By the structure of the algorithm and linearity of expectation, we know that</p><formula xml:id="formula_6">E(w j χ S ) = i∈I w j i P r(χ S i = 1) = i∈I w j i (1 - C i x * C /z * ) αz * ≤ e -α w j χ I</formula><p>where the last inequality follows from C i x * C ≥ 1 for i ∈ I and (1 -1/a) αa ≤ (1 -1/a) αa ≤ e -α for a &gt; 0.</p><p>By the structure of the algorithm, the random variable w j χ S is a function of αz * independent random variables. Changing the value of any of these random variables may lead to the selection of a configuration C in place of a configuration C. Letting S be the resulting residual instance in the latter case, we have |w j χ S -w j χ S | = | i∈C\C w j i -i∈C \C w j i | ≤ ψ, by Property (i). Therefore, applying Lemma 1, we get P r(w j χ S -E(w j χ S ) ≥ γz * ) ≤ e -2(γz * ) 2 /(ψ 2 αz * ) . ( <ref type="formula">5</ref>)</p><p>Using <ref type="bibr" target="#b4">(5)</ref> and Properties (ii) and (iii) we obtain that, for any constant γ &gt; 0, the cost appr(S) of the approximate solution x a is at most</p><formula xml:id="formula_7">ρ max{w 1 χ S , . . . , w k χ S } + ε opt(I) + δ ≤ ρ e -α max{w 1 χ I , . . . , w k χ I } + ε opt(I) + δ + γz * ≤ ρ e -α opt(I) + ε opt(I) + δ + γz * .</formula><p>with probability at least 1 -k e -2(γz * ) 2 /(ψ 2 αz * ) .</p><p>Of course, it would be interesting to have a deterministic counterpart of R&amp;A. Although we are unable to derandomize the algorithm in its full generality, in the full version of the paper we show how to do it for the Bin Packing problems that we consider.</p><p>In the rest of the paper, we represent the LP relaxation of the residual instance S as:</p><formula xml:id="formula_8">min{ C∈C x C : C i x C ≥ χ S i (i ∈ I), x C ≥ 0 (C ∈ C)}<label>(6</label></formula><p>) and its dual as:</p><formula xml:id="formula_9">max{ i∈I χ S i w i : i∈C w i ≤ 1 (C ∈ C), w i ≥ 0 (i ∈ I)}.</formula><p>(7) Note that the feasible region of ( <ref type="formula">7</ref>) is independent of the choice of the subset S, which appears only in the objective. This observation will be crucial in defining subset oblivious algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">A Subset Oblivious APTAS for 1-Dim Bin Packing</head><p>The structural property of 1-Dim Bin Packing proved in this section is the key to analyze versions of R&amp;A for generalizations of the problem. Recall that for an instance I the size of an item i ∈ I is denoted by s i . A dual solution w of ( <ref type="formula">7</ref>) is called monotone if, for i, j ∈ I, s i ≥ s j implies that w i ≥ w j .</p><p>Lemma 2 For any fixed ε &gt; 0, there exists a polynomialtime (1 + ε)-approximation subset oblivious algorithm for 1-Dim Bin Packing. Moreover, the vectors w 1 , . . . , w k from Definition 1 are monotone feasible solutions of <ref type="bibr" target="#b6">(7)</ref>.</p><p>Proof We show that the APTAS of <ref type="bibr" target="#b6">[7]</ref> with very minor modifications is a subset oblivious algorithm. Let σ := ε/(1 + ε), M := {i ∈ I : s i &lt; σ} be the set of small items and L := {i ∈ I : s i ≥ σ} the set of large items, with := |L|, assuming s 1 ≥ s 2 ≥ . . . ≥ s , i.e., items are ordered according to decreasing sizes.</p><p>Define the following reduced sizes for the items in L starting from their original real sizes s 1 , . . . , s . If &lt; 2/σ 2 , we let p := and, L i := {i}, s i := s i for i = 1, . . . , , i.e., we do not change the sizes. Otherwise, using the fundamental linear grouping technique of <ref type="bibr" target="#b6">[7]</ref>, we define q := σ 2 and define p := /q groups L 1 , . . . , L p of consecutive items in L, where, for j = 1, . . . , p -1, L j contains items (j -1)q + 1, . . . , jq, and L p contains items (p -1)q + 1, . . . , (the smallest items in L). The reduced size s j of each item in group L j is given by the size of the smallest item in the group, namely s j := min i∈Lj s i . It is easy to check that p ≤ 1 + 3/σ 2 = O(1/ε 2 ).</p><p>Consider the following LP, which is the counterpart of ( <ref type="formula" target="#formula_8">6</ref> </p><p>and its dual:</p><formula xml:id="formula_11">max{ p j=1 |L j ∩ S|v j : p j=1 b r j v j ≤ 1 (r = 1, . . . , m), v j ≥ 0 (j = 1, . . . , p)}.<label>(9)</label></formula><p>We define the following approximate solution starting from an optimal basic solution x of LP <ref type="bibr" target="#b7">(8)</ref>. Consider the solution x obtained by rounding up x. This corresponds to a feasible packing of the items in L ∩ S with reduced sizes. If no grouping was performed, this is also a feasible packing for the real sizes. Otherwise, we define the following packing for the real sizes: in the rounded solution, for i &lt; |L∩S|-q, use the space for the reduced size of the i-th largest item in L ∩ S to pack the real size of the (i + q)-th largest item in L ∩ S (which is not larger by definition of the grouping procedure). The real sizes of the q largest items in L ∩ S are packed in q additional bins, one per bin. Finally, the small items in M ∩ S are packed in an arbitrary order by Next Fit, starting from the bins already containing some large items and considering a new bin only when the current small item does not fit in the current bin. Let appr(S) be the value of the final solution produced.</p><p>We now show the subset obliviousness of the above algorithm. Note that the feasible region of the dual (9) does not depend on S. Moreover this feasible region is defined by p variables and p + m constraints and hence the number of its basic solutions is at most t = p+m m , which is constant for fixed ε. This implies that, for all choices of the 2 |I| possible subsets S, the basic optimal solutions of ( <ref type="formula" target="#formula_11">9</ref>) form a constant size collection v 1 , . . . , v t . Starting from v 1 , . . . , v t , we define the monotone solutions v 1 , . . . , v t by v h j := max p i=j v h i for h = 1, . . . , t and j = 1, . . . , p. For h = 1, . . . , t, v h is monotone by definition and has a value for (9) that is clearly not worse than v h . Moreover, it is easy to check that v h is feasible for (9) (details are left to the full paper). We define the set of vectors w 1 , . . . , w k as follows, letting k := t + 1:</p><p>• for h = 1, . . . , t, we set w h i := v h j for j = 1, . . . , p and i ∈ L j , and w h i := 0 for i ∈ M (in other words, w h is obtained by "expanding" the vector for reduced sizes v h back to the actual sizes);</p><formula xml:id="formula_12">• w t+1 i := s i for i ∈ I.</formula><p>By the above definition, w 1 , . . . , w k are monotone solutions of (7) (noting that also s is such a solution) and, for each S ⊆ I, max{w 1 χ S , . . . , w k-1 χ S } is equal to the optimum of (9) for instance L ∩ S with reduced sizes. Moreover, opt(S) ≥ i∈S s i . Therefore, opt(S) ≥ max{w 1 χ S , . . . , w k χ S } for each S ⊆ I. This implies Properties (i), with ψ = 1, and (ii) in Definition 1.</p><p>Finally, we show Property (iii), namely appr(S) ≤ (1 + ε) max{w 1 χ S , . . . , w k χ S } + ε opt(I) + 1 + 3/σ 2 , completing the proof.</p><p>If new bins are needed after packing the small items, we have that all the bins with the possible exception of the last one contain items for a total size of at least (1 -σ). This implies appr(S)</p><formula xml:id="formula_13">≤ i∈S s i 1 -σ + 1 = (1 + ε) w k χ S + 1,</formula><p>and we are done. On the other hand, if no new bins are needed for the small items, since the number of fractional components in the basic solution x is at most p we have that m h=1 x h ≤ m h=1 x h + p, and recall that p ≤ 1 + 3/σ 2 . Moreover, recall that in case grouping is performed we use q additional bins for the q largest items, and note that q ≤ σ 2 ≤ ε opt(I), since σ ≤ ε and opt(I) ≥ σ as all items in L have size at least σ. Now, letting w ∈ {w 1 , . . . , w k-1 } be the dual solution of (7) corresponding to the optimal dual solution v ∈ {v 1 , . . . , v t } of (9) associated with S, we have:</p><formula xml:id="formula_14">appr(S) ≤ m h=1 x h + q ≤ m h=1 x h + 1 + 3/σ 2 + ε opt(I) = i∈L∩S w i + 1 + 3/σ 2 + ε opt(I) ≤ wχ S + ε opt(I) + 1 + 3/σ 2 .</formula><p>It is interesting to note that the dependence of k on ε is multiply exponential.</p><p>We will use Lemma 2 many times in the paper, and to avoid confusion we will denote by opt BP (I) the value of the optimal 1-Dim Bin Packing solution for a generic instance I and appr BP (I) the value of the solution obtained by the subset oblivious APTAS on instance I.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Improved Approximation for d-Dim Vector Packing</head><p>We show how to combine the results of the previous sections to derive a polynomial-time randomized algorithm for d-Dim Vector Packing with asymptotic approximation guarantee arbitrarily close to ln d + 1 = 1.693 . . . for d = 2. Recall that each item i ∈ I corresponds to a 2-dimensional vector (b i , h i ).</p><p>Lemma 3 For any fixed ε &gt; 0, there exists a polynomialtime (d + ε)-approximation subset oblivious algorithm for d-Dim Vector Packing for constant d.</p><p>Proof We give the proof in the case d = 2. The general case is proved analogously. Consider the following simple approximation algorithm analogous to the one in <ref type="bibr" target="#b6">[7]</ref>:</p><p>We partition the set I of items into sets B := {i ∈ I : b i ≥ h i } and H := I \ B, and for a given S ⊆ I we pack the items in B ∩ S (resp., H ∩ S) near-optimally in bins by applying the subset oblivious APTAS of Lemma 2 to the Bin Packing instance with sizes {b i : i ∈ B} (resp., with sizes {h i : i ∈ H}). Note that each feasible packing into one bin of one-dimensional items with sizes in {b i : i ∈ B} (resp., {h i : i ∈ H}) corresponds to a feasible packing into one two-dimensional bin of the corresponding set of twodimensional items from B (resp., H). Finally, we return the packing of the items in S defined by the bins in the two solutions obtained.</p><p>By Lemma 2, we have that for any σ &gt; 0, there exist constants , m, γ and vectors u 1 , . . . , u ∈ R B and v 1 , . . . , v m ∈ R H with the following properties:</p><formula xml:id="formula_15">opt BP (B) ≥ max{u 1 χ B B , . . . , u χ B B }, appr BP (B ∩ S) ≤ (1 + σ) max{u 1 χ B∩S B , . . . , u χ B∩S B } +σ opt(I) + γ, for each S ⊆ I, opt BP (H) ≥ max{v 1 χ H H , . . . , v m χ H H }, appr BP (H ∩ S) ≤ (1 + σ) max{v 1 χ H∩S H , . . . , v m χ H∩S H } +σ opt(I) + γ, for each S ⊆ I.</formula><p>Moreover, u 1 , . . . , u ∈ R B and v 1 , . . . , v m ∈ R H are monotone solutions of ( <ref type="formula">7</ref>) for Bin Packing.</p><p>The required vectors w 1 , . . . , w k are the following, letting k := + m:</p><formula xml:id="formula_16">• for h = 1, . . . , , w h i := u h i for i ∈ B; w h i := 0 for i ∈ H; • for h = 1, . . . , m, w +h i := 0 for i ∈ B; w +h i := v h i for i ∈ H.</formula><p>Property (i) is trivially satisfied by the vectors w 1 , . . . , w k with ψ = 1. Moreover, Properties (ii) and (iii) are now simple to prove, letting σ be such that 2(1 + σ) ≤ 2 + ε:  We now show the implications of our approach for 2-Dim Bin Packing, in which the items in an instance I correspond to rectangles with sizes {(b i , h i ) : i ∈ I}.</p><formula xml:id="formula_17">opt(I) ≥ max{opt BP (B), opt BP (H)} ≥ max{u 1 χ B B , . . . , u χ B B , v 1 χ H H , . . . , v m χ H H } =</formula><p>We first present the (relatively simple) approximation algorithm of <ref type="bibr" target="#b1">[2]</ref>, called Harmonic Decreasing Height (HDH), and show its subset obliviousness. This algorithm has an asymptotic approximation guarantee arbitrarily close to the well known harmonic number (in the Bin Packing context) Π ∞ = 1.691 . . . <ref type="bibr" target="#b15">[16]</ref>. This algorithm packs items in bins in two stages, by first packing the items in shelves, a shelf being a subset L ⊆ I such that i∈L b i ≤ 1 (the items in L fit besides each other in a bin), and then by packing the shelves in bins by solving the 1-Dim Bin Packing instance with one item of size max i∈L h i for each shelf L created.</p><p>More precisely, HDH receives as input a parameter t, and forms shelves by first partitioning the items in types, where an item i is of type q if b i ∈ (1/(q + 1), 1/q] for q = 1, . . . , t, and of type t + 1 if b i ≤ 1/(t + 1). For each type, the corresponding items are packed in shelves by Next Fit Decreasing Height <ref type="bibr" target="#b5">[6]</ref>, considering the items in decreasing order of height and packing them by a next fit policy, closing the current shelf and starting a new one when the current item does not fit in the shelf. The shelves formed are treated as one dimensional objects with height equal to the maximal height of an item packed in a shelf. Shelfs are then packed in bins near-optimally by using an APTAS for 1-Dim Bin Packing.</p><p>Let H be the 1-Dim Bin Packing instance defined by sizes {h i : i ∈ I}. Note that the solution produced by HDH for items S ⊆ I is a near-optimal solution of a Bin Packing instance H(S) ⊆ H in which the sizes are equal to the heights of the shelves created by HDH.</p><p>The key property in the analysis of <ref type="bibr" target="#b1">[2]</ref> is the following. For each item i ∈ I with basis b i , let</p><formula xml:id="formula_18">v i := 1/ 1/b i if b i &gt; 1/(t+1); v i := b i (t+1)/t if b i ≤ 1/(t+1). Moreover, let ϕ := 1/(Π ∞ + 1/t).</formula><p>Lemma 4 For each monotone dual solution u of (7) for Bin Packing instance H the following holds:</p><formula xml:id="formula_19">(i) uχ H(S) H ≤ i∈S v i u i + t + 1 for each S ⊆ I;</formula><p>(ii) the vector w ∈ R I defined by w i := ϕv i u i for i ∈ I is a feasible solution of (7) for 2-Dim Bin Packing without rotations.</p><p>Based on Lemma 4 we prove the following.</p><p>Lemma 5 For any fixed ε &gt; 0, there exists a polynomialtime (Π ∞ + ε)-approximation subset oblivious algorithm for 2-Dim Bin Packing without rotations.</p><p>Proof We show that algorithm HDH satisfies the requirements. By Lemma 2, we have that, for any σ &gt; 0, there exist constants , γ and vectors u 1 , . . . , u ∈ R H with the following properties:</p><formula xml:id="formula_20">opt BP (H) ≥ max{u 1 χ H H , . . . , u χ H H }, appr BP (H(S)) ≤ (1 + σ) max{u 1 χ H(S) H , . . . , u χ H(S) H } +σ opt BP (H) + γ, for each S ⊆ I,</formula><p>where u 1 , . . . , u are monotone solutions of (7) for Bin Packing.</p><p>Consider vectors w 1 , . . . , w k , with k := , defined by w j i := ϕv i u j i for i ∈ I and j = 1, . . . , . For the sake of presentation, we first prove that these vectors are "nearly" fine. That is, Property (i), with ψ = 1, and Property (ii), namely opt(I) ≥ max{w 1 χ I , . . . , w k χ I } follow from Lemma 4, since all these vectors are feasible solutions of ( <ref type="formula">7</ref>) for 2-Dim Bin Packing. Moreover, since we solve the instance H(S) by an APTAS, say with accuracy σ, we obtain, for each S ⊆ I:</p><formula xml:id="formula_21">appr(S) = appr BP (H(S)) ≤ (1 + σ) max{u 1 χ H(S) H , . . . , u χ H(S) H } + σopt BP (H) + γ ≤ (1+σ) max{ i∈S v i u 1 i , . . . , i∈S v i u i }+σopt BP (H)+O<label>(1)</label></formula><p>= (1+σ)/ϕ max{w 1 χ S , . . . , w k χ S }+σopt BP (H)+O( <ref type="formula" target="#formula_21">1</ref>).</p><p>(10) Defining σ and t appropriately, we can ensure that (1 + σ)/ϕ ≤ Π ∞ + ε and σ ≤ ε, as required. Unfortunately, this does not imply Property (iii) since opt BP (H) can be arbitrarily larger than opt(I). This is settled by defining vectors w 1 , . . . , w k in a technically more complex way that is discussed in the full paper.</p><p>We now show that the configuration LP can be solved to arbitrarily close accuracy. Recall that with d-Dim Bin Packing, we cannot use Theorem 1 as the separation oracle for the dual problem is a d-Dim (Geometric) Knapsack, which is APX-hard for d ≥ 3 <ref type="bibr" target="#b0">[1]</ref> and for which the existence of a PTAS is open for d = 2. However we bypass this problem in the 2-dimensional case by designing a PTAS for the LP directly. In particular we show that: Theorem 4 For any fixed ε &gt; 0, there exists a polynomialtime (1 + ε)-approximation algorithm for the LP relaxation of (1) for 2-Dim Bin Packing with and without rotations.</p><p>The proof of this theorem is somewhat technical and we defer the details to the full version of the paper. The main idea is to show that for any instance I, we can define a restricted configuration LP that only considers polynomially many configurations, and yet produces a solution arbitrarily close to that of the unrestricted LP. Since this restricted LP has polynomially many variables and constraints, it can be solved exactly in polynomial time.</p><p>We now sketch the proof of the fact that polynomially many configurations suffice. For simplicity, consider first the case when all items in I are large, i.e., have width and height both &gt; δ for some constant δ &gt; 0. In this case, no bin can contain more than 1/δ 2 items. Moreover, given any feasible packing of items in a bin we can make the packing "tight" by shifting each item greedily to the left and top as much as possible. Thus, without loss of generality one can assume that the items in the bin are placed so that the top left corner of each item is placed at some (x, y) position which is an integer linear combination of widths and heights of items in that bin. However, there are only a constant number of such candidate positions. Thus there are only O(n 1/δ 2 ) relevant configurations for the whole instance that need to be considered. Moreover, it is easy to see that this can be extended to the case with rotations.</p><p>To handle the general case we use an extension and refinement of ideas from <ref type="bibr" target="#b0">[1]</ref>. First we show how to choose another constant δ δ such that we can ignore all items whose width or height lies between δ and δ, without much loss in quality of solution. We also show that (very small) items with both height and width smaller than δ can be handled later. This leaves us with three types of items: Large, very thin (with width ≤ δ and height &gt; δ), and very fat (width &gt; δ, height ≤ δ ). We then consider a further relaxation of the notion of a configuration to what we call a fractional configuration. Here we allow a thin item to be sliced up vertically and a fat item to be sliced horizontally and its various pieces can be packed in separate configurations. Using the technique of <ref type="bibr" target="#b6">[7]</ref> we show that we can round the height of thin items (and respectively, the width of fat items) to O(1) different values without affecting the quality of the solution too much. Based on this property and exploiting the rectilinear nature of items, we show the final and most technical step that any arbitrary (fractional) packing of these items can be made "structured" without too much loss. In particular, the structure is regular enough to allow us to enumerate all possible such structures in polynomial time and restrict our LP to these structured fractional configurations. We then finish off by showing that LP solution to the fractional configurations can be converted back to an LP solution for actual configurations without much loss in the objective value.</p><p>By Lemma 5, Theorem 4 and Theorem 2 we get:</p><p>Theorem 5 For any fixed ε &gt; 0, using the algorithm of Lemma 5 in Step 3, method R&amp;A is a randomized polynomial-time (ln(Π ∞ + ε) + 1 + ε)-approximation algorithm for d-Dim Bin Packing without rotations. Packing with Rotations</p><p>We show that Lemma 2 leads to a polynomial-time (deterministic) subset oblivious approximation algorithm for 2-Dim Bin Packing with rotations with asymptotic approximation guarantee arbitrarily close to Π ∞ , improving on the previously-known 2. Moreover, this algorithm can be plugged into the R&amp;A framework, leading to an approximation guarantee arbitrarily close to ln Π ∞ + 1. The results presented hold also for the case in which the bin size is not the same for both dimensions, and we address the case of unit square bins only for simplicity of presentation.</p><p>We first show that:</p><p>Lemma 6 For any fixed ε &gt; 0, there exists a polynomialtime (Π ∞ + ε)-approximation subset oblivious algorithm for 2-Dim Bin Packing with rotations.</p><p>Proof Assume without loss of generality b i ≤ h i for i ∈ I.</p><p>A subset rotation is represented by a partition S N ∪ S R of S ⊆ I, where S N represents the subset of items that are not rotated and S R the subset of items that are rotated. A trivial exponential-time algorithm with asymptotic approximation guarantee arbitrarily close to Π ∞ , given an item subset S ⊆ I, tries all the 2 |S| rotations and, for each of them, applies the HDH algorithm of the previous section to the items rotated accordingly. The key idea of the polynomial-time version is to avoid trying all rotations, using the estimation on the HDH value provided by Lemma 4. We present and analyze our algorithm, called Harmonic Rotation (HR), for the special case in which b i ≥ δ for some constant δ. In the full version of the paper, we will show how to adapt it to the general case. HR receives on input an accuracy ε and a subset S ⊆ I of items, defines internally σ and t as a function of ε (as will be specified in its analysis), and performs the following steps:</p><p>1. Consider the Bin Packing instance H defined by sizes {b i : i ∈ I} ∪ {h i : i ∈ I} and constructively apply Lemma 2 to it, deriving for some constants and γ monotone solutions of (7) u 1 , . . . , u ∈ R H such that:</p><formula xml:id="formula_22">opt BP (H) ≥ max{u 1 χ H H , . . . , u χ H H }, appr BP ( S) ≤ (1 + σ) max{u 1 χ S H , . . . , u χ S H } +σ opt BP (H) + γ, for each S ⊆ H;<label>(11)</label></formula><p>2. Let v, w, x 1 , . . . , x , y 1 , . . . , y be |I|-dimensional vectors defined, for i ∈ I and j = 1, . . . , , by:</p><formula xml:id="formula_23">v i := 1/ 1/b i , for i ∈ I; w i := 1/ 1/h i , for i ∈ I;</formula><p>x j i := coordinate of u j associated with h i ; y j i := coordinate of u j associated with b i ;</p><p>3. Find a rotation S N ∪ S R that approximately minimizes</p><formula xml:id="formula_25">max j=1 i∈S N v i x j i + i∈S R w i y j i ;<label>(13)</label></formula><p>4. Return the solution found by HDH for the instance of 2-Dim Bin Packing without rotations obtained by rotating the items in S according to S N ∪ S R .</p><p>Note that the first two steps are independent of S, and that in Step 1 we have to explicitly compute vectors u 1 , . . . , u , as opposed to the previously-described applications of the method, in which we simply needed these vectors to exist.</p><p>The intuition for HR is the following. Consider a generic rotation S N ∪ S R . By Lemma 4, we have that r := max j=1 i∈S N v i x j i + i∈S R w i y j i is a rough estimation of both the value of the HDH solution for this rotation (namely, by (i) combined with <ref type="bibr" target="#b10">(11)</ref> r is nearly at least equal to this value), and the optimal value of the 2-Dim Bin Packing solution for this rotation (namely, by (ii) r is nearly at most equal to Π ∞ times this value). Accordingly, we find in Step 3 the rotation that nearly minimizes this rough estimation.</p><p>The following elementary algorithm is sufficient to find a near-optimal solution of the problem in Step 3. (It is easy to show that this problem is weakly NP-hard and solvable in pseudo-polynomial time by dynamic programming.) Consider the ILP formulation with binary variables z i := 1 if i ∈ S N and z i = 0 if i ∈ S R , along with variable r expressing the objective value: min{r : r ≥ i∈S v i x j i z i + i∈S w i y j i (1 -z i ) (j = 1, . . . , )</p><formula xml:id="formula_26">z i ∈ {0, 1} (i ∈ S)}.<label>(14)</label></formula><p>We solve the LP relaxation of ( <ref type="formula" target="#formula_26">14</ref>), finding an optimal basic solution, and then return the integer solution obtained by rounding the fractional z variables arbitrarily. Letting L ⊆ I be the set of indices such that variables z i are not integral in the optimal basic solution of ( <ref type="formula" target="#formula_26">14</ref>), we have |L| ≤ . Let I * N ∪ I * R be the rotation associated with the optimal solution of 2-Dim Bin Packing with rotations for set I. As each coefficient of z i in <ref type="bibr" target="#b13">(14)</ref> has absolute value at most 1 and |L| ≤ , we obtain:</p><formula xml:id="formula_27">max j=1 i∈S N v i x j i + i∈S R w i y j i ≤ max j=1 i∈S∩I * N v i x j i + i∈S∩I * R w i y j i + . (<label>15</label></formula><formula xml:id="formula_28">)</formula><p>Moreover, Lemma 4 implies opt(I) ≥ ϕ max</p><formula xml:id="formula_29">j=1 i∈I * N v i x j i + i∈I * R w i y j i .<label>(16)</label></formula><p>Define |I|-dimensional vectors q j for j = 1, . . . , by q j i = ϕv i x j i for i ∈ I * N and q j i = ϕw i y j i for i ∈ I * R , noting that we simply need these vectors to exist and do not have to compute them explicitly. By <ref type="bibr" target="#b15">(16)</ref>, these vectors satisfy Property (ii). Moreover, for j = 1, . . . , , i∈C q j i ≤ 1 for each feasible configuration C for the instance of 2-Dim Bin Packing without rotations associated with I * N ∪ I * R . We claim that i∈C q j i ≤ 4 for each feasible configuration C for 2-Dim Bin Packing with rotations since by rotating items in C according to I * N ∪ I * R we could pack items in at most 4 bins (4 times the area). That is the vectors satisfy Property (i) with ψ = 4. As to Property (iii), letting appr(S) denote the value of the solution found by HR and H(S) ⊆ H be the heights of the shelves formed by HDH for rotation S N ∪ S R , Lemma 4 (i) together with <ref type="bibr" target="#b10">(11)</ref>  </p><p>With an appropriate definition of σ and t, Property (iii) then follows from <ref type="bibr" target="#b16">(17)</ref> together with opt BP (H) = O(opt(I)), implied by trivial volume arguments since b i ≥ δ for all i ∈ I.</p><p>Combining Lemma 2, Lemma 6 and Theorem 4 we obtain Theorem 6 For any fixed ε &gt; 0, using the algorithm of Lemma 6 in Step 3, method R&amp;A is a randomized polynomial-time (ln(d + ε) + 1 + ε)-approximation algorithm for d-Dim Bin Packing with rotations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>) for reduced sizes, where items of the same size are associated with a unique constraint. Let b 1 , . . . , b m be the collection of the vectors b ∈ {0, . . . , 1/σ } p such that p j=1 b j s j ≤ 1. These vectors represent the feasible packing configurations of the items in L with reduced sizes. Note that m = O(O(1/ε) O(1/ε 2 ) ). The LP associated with a given S ⊆ I is: x r ≥ |L j ∩ S| (j = 1, . . . , p), x r ≥ 0 (r = 1, . . . , m)}</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Theorem 3</head><label>3</label><figDesc>max{w 1 χ I I , . . . , w k χ I I }, and, for each S ⊆ I: appr(S) = appr BP (B∩S)+appr BP (H∩S) ≤ (1+σ) max{u 1 χ B∩S B , . . . , u χ B∩S B } +(1 + σ) max{v 1 χ H∩S H , . . . , v m χ H∩S H } + 2σ opt(I) + 2γ ≤ 2(1+σ) max{w 1 χ S I , . . . , w k χ S I }+2σ opt(I)+2γ. Since the separation problem for the dual of the configuration LP of the d-Dim Vector Packing is a maximum d-Dim (Non-geometric) Knapsack Problem, which admits a PTAS for constant d [8], Theorem 1 implies the existence of a PTAS for the configuration LP for d-Dim Vector Packing. Thus by Lemma 3 with Theorem 2, we obtain: For any fixed ε &gt; 0, using the algorithm of Lemma 3 in Step 3, method R&amp;A is a randomized polynomial-time (ln(d + ε) + 1 + ε)-approximation algorithm for d-Dim Vector Packing, for constant d.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>6</head><label></label><figDesc>Improved Approximation for 2-Dim Bin Packing without Rotations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>and (15) imply: appr(S) = appr BP (H(S))≤ (1 + σ) max{u 1 χ H(S) H , . . . , u χ H(S) H } + σ opt BP (H) + γ ≤ (1+σ)</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Though<ref type="bibr" target="#b4">[5]</ref> state their result as O(ln d), upon a closer look, the approximation achieved by their method is actually about ln d</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>+ 2 for large d.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Bin packing in multiple dimensions: inapproximability results and approximation schemes</title>
		<author>
			<persName><forename type="first">N</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Correa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kenyon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sviridenko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Operations Research</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="31" to="49" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Packing 2-dimensional bins in harmony</title>
		<author>
			<persName><forename type="first">A</forename><surname>Caprara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43-rd Annual IEEE Symposium on Foundations of Computer Science (FOCS 2002)</title>
		<meeting>the 43-rd Annual IEEE Symposium on Foundations of Computer Science (FOCS 2002)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="490" to="499" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Bidimensional packing by bilinear programming</title>
		<author>
			<persName><forename type="first">A</forename><surname>Caprara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Locatelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Monaci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Integer Programming and Combinatorial Optimization (IPCO)</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="377" to="391" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Lower bounds and algorithms for the 2-dimensional vector packing problem</title>
		<author>
			<persName><forename type="first">A</forename><surname>Caprara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Toth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="page" from="231" to="262" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On multidimensional packing problems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chekuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="837" to="851" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tarjan. Performance bounds for level-oriented two-dimensional packing algorithms</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Coffman</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="801" to="826" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Bin packing can be solved within 1+ in linear time</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Fernandez</forename><surname>De</surname></persName>
		</author>
		<author>
			<persName><forename type="first">La</forename><surname>Vega</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Lueker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="349" to="355" />
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Approximation algorithms for the m-dimensional 0-1 knapsack problem: worst-case and probabilistic analyses</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Frieze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R B</forename><surname>Clarke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="100" to="109" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Approximate max-min resource sharing for structured concave optimization</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Grigoriadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Khachiyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Porkolab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Villavicencio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Optimization</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1081" to="1091" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Geometric algorithms and combinatorial optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Grötschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovsz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Algorithms and Combinatorics: Study and Research Texts</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1988">1988</date>
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On strip packing with rotations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Van Stee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37-th Annual ACM Symposium on the Theory of Computing (STOC 2005)</title>
		<meeting>the 37-th Annual ACM Symposium on the Theory of Computing (STOC 2005)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="755" to="761" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On rectangle packing: maximizing benefits</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15-th Symposium on Discrete Algorithms (SODA 2004)</title>
		<meeting>the 15-th Symposium on Discrete Algorithms (SODA 2004)</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="204" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An approximation algorithm with absolute worst-case performance ratio 2 for two-dimensional vector packing</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kellerer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Kotov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research Letters</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="35" to="41" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A near-optimal solution to a twodimensional cutting stock problem</title>
		<author>
			<persName><forename type="first">C</forename><surname>Kenyon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rémila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Operations Research</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="645" to="656" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An efficient approximation scheme for the one-dimensional bin-packing problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Karmarkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Karp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23-rd Annual IEEE Symposium on Foundations of Computer Science (FOCS 1982)</title>
		<meeting>the 23-rd Annual IEEE Symposium on Foundations of Computer Science (FOCS 1982)</meeting>
		<imprint>
			<date type="published" when="1982">1982</date>
			<biblScope unit="page" from="312" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A simple on-line bin packing algorithm</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">T</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="562" to="572" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">On the method of bounded differences. Surveys in combinatorics</title>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdiarmid</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989. 1989. 1989</date>
			<publisher>Cambridge Univ. Press</publisher>
			<biblScope unit="volume">141</biblScope>
			<biblScope unit="page" from="148" to="188" />
			<pubPlace>Norwich; Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdiarmid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Probabilistic methods for algorithmic discrete mathematics</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Habib</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Mcdiarmid</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Ramirez-Alfonsin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Reed</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="195" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fast approximation algorithms for fractional packing and covering problems</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Plotkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shmoys</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Operations Research</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="257" to="301" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">On using decomposition techniques and constraint programming for solving the twodimensional bin packing problem</title>
		<author>
			<persName><forename type="first">D</forename><surname>Pisinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Sigurd</surname></persName>
		</author>
		<idno>DIKU-rapport 03/01</idno>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of Copenhagen</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">There is no asymptotic PTAS for twodimensional vector packing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Woeginger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="293" to="297" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
