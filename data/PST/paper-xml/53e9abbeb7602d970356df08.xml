<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Decision trees as possibilistic classifiers</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2008-01-20">20 January 2008</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ilyes</forename><surname>Jenhani</surname></persName>
							<email>ilyes.j@lycos.com</email>
							<affiliation key="aff0">
								<orgName type="department">Institut Supe ´rieur de Gestion</orgName>
								<orgName type="laboratory">LARODEC</orgName>
								<address>
									<settlement>Tunis</settlement>
									<country key="TN">Tunisia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nahla</forename><forename type="middle">Ben</forename><surname>Amor</surname></persName>
							<email>nahla.benamor@gmx.fr</email>
							<affiliation key="aff0">
								<orgName type="department">Institut Supe ´rieur de Gestion</orgName>
								<orgName type="laboratory">LARODEC</orgName>
								<address>
									<settlement>Tunis</settlement>
									<country key="TN">Tunisia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zied</forename><surname>Elouedi</surname></persName>
							<email>zied.elouedi@gmx.fr</email>
							<affiliation key="aff0">
								<orgName type="department">Institut Supe ´rieur de Gestion</orgName>
								<orgName type="laboratory">LARODEC</orgName>
								<address>
									<settlement>Tunis</settlement>
									<country key="TN">Tunisia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Decision trees as possibilistic classifiers</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2008-01-20">20 January 2008</date>
						</imprint>
					</monogr>
					<idno type="MD5">8448FF10B52FE15AB8AC6976EFA6513E</idno>
					<idno type="DOI">10.1016/j.ijar.2007.12.002</idno>
					<note type="submission">Received 25 November 2006; received in revised form 25 October 2007; accepted 14 December 2007</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T10:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Classification</term>
					<term>Decision trees</term>
					<term>Possibility theory</term>
					<term>Non-specificity</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper addresses the classification problem with imperfect data. More precisely, it extends standard decision trees to handle uncertainty in both building and classification procedures. Uncertainty here is represented by means of possibility distributions. The first part investigates the issue of building decision trees from data with uncertain class values by developing a non-specificity based gain ratio as the attribute selection measure which, in our case, is more appropriate than the standard gain ratio based on Shannon entropy. The proposed non-specificity based possibilistic decision tree (NS-PDT) approach is then extended by considering another kind of uncertainty inherent in the building procedure. The extended approach so-called non-specificity based possibilistic option decision tree (NS-PODT) offers a more flexible building procedure by allowing the selection of more than one attribute in each node. The second part addresses the classification phase. More specifically, it investigates the issue of predicting the class value of new instances presented with certain and/or uncertain attribute values. Finally, we have developed a possibilistic decision tree toolbox (PD2T) in order to show the feasibility of the proposed approach.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Classification represents an important task in machine learning and data mining applications. It consists in <ref type="bibr" target="#b0">(1)</ref> inducing a classifier from a set of historical examples (training set) with known class values and then (2) using the induced classifier to predict the class value (the category) of new objects given known the values of their attributes (features).</p><p>This task is ensured by a panoply of techniques: statistical techniques (e.g. discriminant analysis, etc.) and artificial intelligence based techniques (e.g. artificial neural networks, k-nearest neighbors, Bayesian networks, decision trees, etc.). The latter, namely, decision trees, are considered as one of the most popular classification techniques <ref type="bibr" target="#b48">[49]</ref>. They are able to represent knowledge in a flexible and easy form which justifies their use in decision support systems, intrusion detection systems, medical diagnosis, etc.</p><p>0888-613X/$ -see front matter Ó 2008 Elsevier Inc. All rights reserved. doi:10.1016/j.ijar.2007.12.002</p><p>In many real-world problems, classes of examples in the training set may be partially defined and even missing. For example, for some instances, an expert may be unable to give the exact class value. A doctor who cannot specify the exact disease of a patient, a banker who cannot decide whether to give or not a loan for a client, a network administrator who is not able to decide about the exact signature of a given connection, etc. Hence, in these different examples, the expert can provide imprecise or uncertain classifications expressed in the form of a ranking on the possible classes. Ignoring the uncertainty may affect the classification results and even produce erroneous decisions. Consequently, ordinary classification techniques such as decision trees should be adequately adapted to take care of this problem.</p><p>Our idea is to treat different levels of uncertainty using possibility theory which is a non-classical theory of uncertainty proposed by Zadeh <ref type="bibr" target="#b52">[53]</ref> and developed by Dubois and Prade <ref type="bibr" target="#b13">[14]</ref>. More precisely, we will handle training instances whose class labels are given in the form of possibility distributions. We also adapt the attribute selection measure, used in the building phase, to the possibilistic framework by using a non-specificity based criterion instead of the Shannon entropy <ref type="bibr" target="#b43">[44]</ref>. Such possibilistic decision tree will be referred to by NS-PDT.</p><p>In addition to the uncertainty that might characterize training data, another source of uncertainty is hidden in the building procedure of decision trees <ref type="bibr" target="#b26">[27]</ref>. In fact, the core of the building procedure is based on an heuristic function, namely, the attribute selection measure which enables us to choose the ''most" informative attribute at each decision node of the tree under construction. Hence, we collide with a kind of uncertainty which is related to the choice of an attribute at a given decision node.</p><p>In a previous work <ref type="bibr" target="#b26">[27]</ref>, we developed what we have called possibilistic option decision trees (PODT) where each decision node can be split according to more than one attribute (using multiple attribute-value tests, or ''options"). Different options are quantified via possibility distributions. In this paper, we will extend the NS-PDT approach to deal with uncertainty within the attribute selection step, this extension will be referred to by NS-PODT.</p><p>Once an NS-PODT is constructed, it will be used to classify new instances. In this work, we have considered the case where all attributes are well known and the case where some or even all of them have uncertain values (e.g. imprecise or missing attribute values). Such situation can appear, for instance, when using sensors to provide attribute values of new instances. Uncertainty in the classification phase will also be modeled in the possibilistic framework.</p><p>An alternative possibilistic decision tree induction method was proposed by Borgelt et al. in <ref type="bibr" target="#b3">[4]</ref>. Nevertheless, contrary to our approach, the proposed classifier is not able to treat uncertain instances and possibilities appear in the building phase when frequency distributions are taken as possibility distributions used in order to define a possibilistic attribute selection measure. Another possibilistic induction method was proposed by Hu ¨llermeir <ref type="bibr" target="#b22">[23]</ref>. In his work, the author applied a possibilistic branching on Lazy decision trees <ref type="bibr" target="#b17">[18]</ref>. A work by Ben Amor et al. <ref type="bibr" target="#b1">[2]</ref> dealt with possibilistic uncertainty, only within the classification phase of decision tree technique.</p><p>Other non-standard decision trees were proposed. Namely, fuzzy decision trees <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b37">[38]</ref><ref type="bibr" target="#b38">[39]</ref><ref type="bibr" target="#b39">[40]</ref><ref type="bibr" target="#b51">52</ref>] which blend decision trees with fuzzy set tools to manage fuzzy information (attribute and class values are vaguely expressed with linguistic fuzzy terms) or to fuzzify the crisp rules extracted from a standard decision tree. Probabilistic decision trees <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b41">42]</ref> and belief decision trees <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b45">46,</ref><ref type="bibr" target="#b46">47]</ref> were also proposed to deal with uncertainty in data represented, respectively, by means of probability distributions and basic belief assignments. A deep analysis of these proposals with respect to our approach will be presented in Section 7.</p><p>The paper is organized as follows: Section 2 starts by giving the necessary background concerning the decision tree classification technique. Section 3 recalls some aspects of possibility theory as well as the concept of non-specificity. The characteristics and parameters of the non-specificity based possibilistic decision tree approach (NS-PDT) are then defined in Section 4. Section 5 proposes an extension of NS-PDT, namely the NS-PODT approach. This section defines the building procedure, then, it describes the method which we propose for the classification of certain and/or uncertain instances within the NS-PODT approach. Section 6 presents and analyzes experimental results carried out on modified versions of commonly used data sets obtained from the U.C.I. machine learning repository <ref type="bibr" target="#b36">[37]</ref>. Before concluding, a summary of related works is provided in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Decision trees</head><p>A decision tree is a flow-chart-like hierarchical tree structure which is composed of three basic elements: decision nodes corresponding to attributes, edges or branches which correspond to the different possible attribute values. The third component is leaves including objects that typically belong to the same class or that are very similar. Such representation allows us to induce decision rules that will be used to classify new instances. In fact, each path from the root to a leaf corresponds to a conjunction of test attributes and the tree is considered as a disjunction of these conjunctions.</p><p>The majority of decision trees is made up of two major procedures: the building (induction) and the classification (inference) procedures.</p><p>Building procedure: Given a training set, building a decision tree is usually done by starting with an empty tree and selecting for each decision node the 'appropriate' test attribute using an attribute selection measure. The principle is to select the attribute that maximally diminish the mixture of classes between each training subset created by the test, thus, making easier the determination of object's classes. The process continues for each sub decision tree until reaching leaves and fixing their corresponding classes. Classification procedure: To classify a new instance, having only values of all its attributes, we start with the root of the constructed tree and follow the path corresponding to the observed value of the attribute in the interior node of the tree. This process is continued until a leaf is encountered. Finally, we use the associated label to obtain the predicted class value of the instance at hand. Several algorithms for building decision trees have been developed. The most popular and applied ones are: ID3 <ref type="bibr" target="#b40">[41]</ref> and its successor C4.5 ''the state-of-the-art" algorithm developed by Quinlan <ref type="bibr" target="#b42">[43]</ref>. We can also mention the CART algorithm of Breiman et al. <ref type="bibr" target="#b4">[5]</ref>.</p><p>Decision tree algorithms have many common components to be defined. These components are described as follows:</p><p>(a) Attribute selection measure generally based on information theory, serves as a criterion in choosing among a list of candidate attributes at each decision node, the attribute that generates partitions where objects are distributed less randomly, with the aim of constructing the smallest tree among those consistent with the data. The well-known measure used in the C4.5 algorithm of Quinlan <ref type="bibr" target="#b42">[43]</ref> is the gain ratio.</p><p>Given an attribute A k , the information gain relative to A k is defined as follows:</p><formula xml:id="formula_0">GainðT ; A k Þ ¼ EðT Þ À E A k ðT Þ;<label>ð1Þ</label></formula><p>where</p><formula xml:id="formula_1">EðT Þ ¼ À X n i¼1 nðC i ; T Þ jT j log 2 nðC i ; T Þ jT j<label>ð2Þ</label></formula><p>and</p><formula xml:id="formula_2">E A k ðT Þ ¼ X v2DðA k Þ jT A k v j jT j EðT A k v Þ;<label>ð3Þ</label></formula><p>n(C i , T) denotes the number of objects in the training set T belonging to the class C i , D(A k ) denotes the finite domain of the attribute A k and jT A k v j denotes the cardinality of the set of objects for which the attribute A k has the value v. Note that nðC i ;T Þ jT j corresponds to the probability of the class C i in T. Thus, E(T) corresponds to the Shannon entropy <ref type="bibr" target="#b43">[44]</ref> of the set T. This function will be more explained in Section 4. The gain ratio is given by</p><formula xml:id="formula_3">GrðT ; A k Þ ¼ GainðT ; A k Þ SplitInfoðT ; A k Þ ;<label>ð4Þ</label></formula><p>where Split Info(T, A k ) represents the potential information generated by dividing T into n subsets. It is given by</p><formula xml:id="formula_4">SplitInfoðT ; A k Þ ¼ À X v2DðA k Þ jT A k v j jT j log 2 jT A k v j jT j :<label>ð5Þ</label></formula><p>(b) Partitioning strategy consisting in partitioning the training set according to all possible attribute values (for discrete attributes) which leads to the generation of one partition for each possible value of the selected attribute. For continuous attributes, we need a discretization step. Different discretization strategies exist in the literature <ref type="bibr" target="#b16">[17]</ref> (e.g. the simple discretization, etc.). We do not detail them because, in this paper, we only deal with discrete attributes. (c) Stopping criteria stopping the partitioning process. Generally, we stop the partitioning if all the remaining objects belong to only one class, then the node is declared as a leaf labeled with this class value. We, also, stop growing the tree if there is no further attribute to test. In this case, we take the majority class as the leaf's label.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Basics of possibility theory</head><p>Possibility theory represents a non-classical theory (distinct from probability theory) which offers a natural and simple model that deals with both uncertain and imprecise information. In this section, we will give a brief recalling on possibility theory (for more details see <ref type="bibr" target="#b12">[13]</ref>). Then, we will focus on the source of uncertainty relative to possibility theory, namely, the non-specificity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Basic elements</head><p>Given X = {x 1 , x 2 , . . . , x n }, the universe of discourse, the basic concept of possibility theory is the notion of possibility distribution denoted by p and which corresponds to a function which associates to each element x i of the universe of discourse X a value from a bounded and linearly ordered valuation set (L, &lt;). This value is called a possibility degree: it encodes our knowledge, denoted by u, on the real world. Note that, in possibility theory, the scale can be numerical (e.g. L = [0, 1]): in this case we have numerical possibility degrees from the interval [0, 1] and hence we are dealing with the quantitative setting of the theory. In the qualitative setting, it is the ordering between the different possible values that is important but the numerical values themselves have no sense.</p><p>By convention, p(x i ) = 1 means that it is fully possible that x i = u is the real world, p(x i ) = 0 means that x i = u cannot be the real world (is impossible), and p(x i ) &gt; p(x j ) means that x i = u is preferred to x j = u (or is more plausible).</p><p>A possibility distribution p is said to be normalized if there exists at least one state x k which is totally possible (i.e. p(x k ) = 1). In this paper, we only deal with normalized possibility distributions.</p><p>In the possibilistic framework, extreme cases of knowledge are presented by complete knowledge: $x 0 , p(x 0 ) = 1 and p(x) = 0 "x 6 ¼ x 0 . total ignorance: p(x) = 1"x (all values in X are possible).</p><p>Possibility theory is based on two dual measures: possibility and necessity measures. Given the universe of discourse X and a possibility distribution p on X, the corresponding possibility and necessity measures of any event u X are, respectively, determined by the formulas:</p><formula xml:id="formula_5">PðuÞ ¼ max x2u pðxÞ;<label>ð6Þ</label></formula><formula xml:id="formula_6">N ðuÞ ¼ min x6 2u</formula><p>ð1 À pðxÞÞ: ð7Þ P(u) evaluates at which level u is consistent with our knowledge represented by p while N(u) evaluates at which level u is certainly implied by our knowledge represented by p. Note that for any u X: N ðuÞ ¼ 1 À Pð uÞ.</p><p>As we can see from Eq. ( <ref type="formula" target="#formula_5">6</ref>), the basic axiom of possibility theory is the maximum operator. Hence, the possibility of the disjunction of two events u 1 and u 2 is the maximum of the respective possibility of the individual events.</p><formula xml:id="formula_7">Pðu 1 _ u 2 Þ ¼ maxðPðu 1 Þ; Pðu 2 ÞÞ:<label>ð8Þ</label></formula><p>Suppose that a possibility distribution p is provided by a given source (e.g. expert, sensor) and suppose that the degree of certainty that this source is reliable is given by b, then p can be updated into <ref type="bibr" target="#b12">[13]</ref>:</p><formula xml:id="formula_8">p 0 ¼ maxðp; 1 À bÞ:<label>ð9Þ</label></formula><p>Note that when b = 1 (fully reliable source), p 0 = p and in the case of absolutely unreliable source (b = 0), "x,p 0 (x) = 1 (total ignorance). Eq. ( <ref type="formula" target="#formula_8">9</ref>) represents a form of discounting of a given possibility distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Non-specificity</head><p>As mentioned by Higashi and Klir <ref type="bibr" target="#b21">[22]</ref>, possibility theory deals with a source of uncertainty called: nonspecificity. This type of uncertainty is manifested in our inability to distinguish which of several possible alternatives is the true one in a particular situation. The larger the set of possible alternatives is, the larger is the non-specificity. More precisely, non-specificity is connected with sizes (cardinalities) of relevant sets of alternatives <ref type="bibr" target="#b29">[30]</ref>.</p><p>Given two possibility distributions p and p 0 both on X, p is said to be more specific than p 0 if and only if, for each x 2 X, p(x) 6 p 0 (x) <ref type="bibr" target="#b50">[51]</ref>. Clearly, the more specific p, the more informative it is.</p><p>Thus, in some decision-making situations, one need to measure the amount of uncertainty inherent in each given possibility distribution in order to decide which one is the most informative. The first measure of nonspecificity was proposed by Hartley <ref type="bibr" target="#b20">[21]</ref> for classical set theory which represents the simplest means by which we can express uncertainty. The Hartley function for a subset A of a universal finite set X is given by</p><formula xml:id="formula_9">H ðAÞ ¼ log 2 jAj:<label>ð10Þ</label></formula><p>Here, A corresponds to the smallest subset of X such that we are certain that the actual state is in A.</p><p>The majority of non-specificity measures proposed for other uncertainty frameworks (e.g. evidence theory, fuzzy set theory, possibility theory, etc.) represents a generalization of Hartley function. For instance, for the possibilistic setting, the measure of non-specificity, called U-uncertainty and proposed by Higashi and Klir <ref type="bibr" target="#b21">[22]</ref>, has the form:</p><formula xml:id="formula_10">U : R ! IR þ ;</formula><p>where R denotes the set of all finite and ordered possibility distributions. Given an ordered possibility distribution p = hp (1) , p (2) , . . . , p (n) i such that 1 = p (1) P p (2) P Á Á Á P p (n) , the U-uncertainty of p, is given by the formula:</p><formula xml:id="formula_11">U ðpÞ ¼ X n i¼1 ðp ðiÞ À p ðiþ1Þ Þlog 2 i;<label>ð11Þ</label></formula><p>where p (n+1) = 0 by convention <ref type="bibr" target="#b28">[29]</ref>. Note that the range of U is [0, log 2 n]. U(p) = 0 is obtained for the case of complete knowledge (no uncertainty) and U(p) = log 2 n is reached for the case of total ignorance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Non-specificity based possibilistic decision trees (NS-PDT)</head><p>A non-specificity based possibilistic decision tree is a decision tree with the same representation of an ordinary decision tree, i.e., it is composed of decision nodes for testing attributes, branches specifying attribute values and leaves dealing with classes of the training set.</p><p>In supervised learning, more specifically, in classification problems, we need a set of historical examples with known classes, called the training set, from which we will train a classifier (e.g. a decision tree). Then, this classifier will be used to predict the class value of each new object given known its attributes' values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Imperfection in classification problems</head><p>As models of the real world, databases, or more specifically, training sets are often permeated with forms of imperfections, including imprecision and uncertainty. The topic of imperfect databases is gaining more and more attention the last years <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b34">35]</ref> since commercial database management systems are not able to deal with such kind of information. Now, we ask what is imperfect in a training set and why is it imperfect? Imperfection in a training set may affect attribute values as well as class values, for instance, the depar-ture_time of a flight, the temperature of a patient, the property_value of a client asking for a loan. Examples of imperfect class values include the exact type of an attack in an intrusion detection system, the exact cancer class of a patient in cancer diagnosis applications, the exact location or type of a detected aerial engine in military applications, etc.</p><p>Another interesting real example emphasizing the problem of having imprecise class labels is the one given in <ref type="bibr" target="#b10">[11]</ref>. It consists in detecting certain transient phenomena (e.g. k-complexes and delta waves) in electroencephalogram (EEG) data. Such phenomena are usually difficult to detect, hence doctors are not always able to recognize them with full certainty. Consequently, it may be more easy for the doctor to assess the possibility that certain phenomena are present in the data.</p><p>These imperfections might result from using unreliable information sources, such as faulty reading instruments, or input forms that have been filled out incorrectly (intentionally or inadvertently). In other cases, imperfection is a result of system errors, including transmission noise, network latency for sensor networks applications, delays in processing update transactions, etc.</p><p>In a learning process, we should never reject or ignore such information (by affecting the null value to such information) despite of its imperfection. On the contrary, we should benefit from the maximum amount of information which should be handled carefully else the learnt model could be inaccurate or even incorrect. The first paper dealing with learning from uncertain data is attributed to Denoeux <ref type="bibr" target="#b7">[8]</ref>. The author has extended the well-known k-nearest neighbor classifier to handle uncertain data by using belief function theory.</p><p>In this work, we only deal with imprecise class labels in the training set. Instead of rejecting instances having imprecise class labels or adding a null class value to such instances, we used a convenient mathematical model to deal with such kind of imperfection, namely possibility theory <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b52">53]</ref>. More formally, a possibility degree will be assigned to each possible class value indicating the possibility that the instance belongs to a given class <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b53">54]</ref> instead of using a simple set of disjunctive values with equal weights. These possibility degrees can be obtained from direct expert's elicitation, i.e., each expert is asked to quantify by a real number between 0 and 1 the possibility that a training instance belongs to each one of the different classes of the problem. Possibilistic class labels may also be obtained from an empirical distribution of expert opinions using possibilistic histograms <ref type="bibr" target="#b11">[12]</ref>.</p><p>The question that arises is: how to induce decision trees from training instances, classes of which are presented by means of possibility distributions?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Building procedure</head><p>Standard building procedure (see Section 2) starts with an empty tree. The first step consists in selecting the most informative attribute, i.e., the attribute that, if assigned to the decision node at hand, will produce the least conflicting training subsets towards instances' classes. Note that measuring the conflict of a training (sub)set comes down to measure the conflict of the probability distribution on the different classes of the instances belonging to that set.</p><p>For instance, suppose that, in a 2-class problem, we have a training subset T 1 with five instances: two instances having class C 1 and the remaining three instances are labeled with class C 2 . Then, the probabilities of each class in T 1 are respectively 2/5 and 3/5. Thus, the probability distribution characterizing T 1 is p = (0.4, 0.6). Finally, we need to measure the amount of conflict in p, which represents the only source of ''uncertainty" in probability theory <ref type="bibr" target="#b29">[30]</ref>. The well-established measure of conflict in probability theory is the Shannon entropy given in Eq. ( <ref type="formula" target="#formula_1">2</ref>). Hence, E(T 1 ) = E(p) = À 0.4log 2 (0.4) À 0.6log 2 (0.6) = 0.971. Note that for a uniform probability distribution on X, i.e., p(x) = 1/jXj "x 2 X (the case of total conflict), E(p) = log 2 jXj. However, in the case of total certainty, i.e., p(x) = 1 for some x 2 X, E(p) = 0.</p><p>In our case, instead of precise classes, we have possibility distributions over different classes of each training instance. Hence, each training (sub)set will be characterized by the (sub)set of possibility distributions relative to the instances of that (sub)set. Therefore, in order to discriminate between two or n sets, one should measure the amount of uncertainty of such sets and then select the attribute generating the least uncertain subsets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1.">Measuring uncertainty of sets of possibility distributions</head><p>Harmanec said in <ref type="bibr" target="#b19">[20]</ref> ''Before we can measure uncertainty or information, we have to be clear what exactly we are trying to measure. . .". In other words, one should, first, determine the source(s) of uncertainty ingrained in our mathematical model, then use the suitable measure of uncertainty relatively to each source.</p><p>Let us return to our problem: we want to discriminate between different sets of possibility distributions. The first idea that comes up is to merge the different possibility distributions of each set using the well-known fusion operators relative to possibility theory, namely, the t-norms and the t-conorms <ref type="bibr" target="#b13">[14]</ref>. In this way, we obtain a single possibility distribution for each set and we can measure their different non-specificities (using Eq. ( <ref type="formula" target="#formula_11">11</ref>)) in order to choose the most specific one, i.e., the least non-specific one.</p><p>This procedure is problematic. In fact, in the decision tree context, in each node, we have possibility distributions of distinct training instances reaching that node. These instances have some common attribute values (those values labeling edges of the path leading to that node) and the remaining attributes may have different values. So, it is clear that we cannot merge possibility distributions which are not dealing with the same ''object": a necessary condition for information fusion problems. We generally use the well-known fusion operators relative to possibility theory, namely, the t-norms and the t-conorms <ref type="bibr" target="#b13">[14]</ref> when we have to merge different information (e.g. possibility distributions) provided by different or even a unique source (e.g. a sensor giving information at different times, etc.) on the same observed object.</p><p>Since fusion is not the appropriate tool in this context, the solution that we propose is the following: for each set containing m possibility distributions, we will induce a representative possibility distribution of that set (p Rep ), that is, a possibility distribution that represents the proportion of the different possibility degrees of the different values (class values). This possibility distribution is obtained via the arithmetic mean of p j = 1, . . . , m possibility distributions <ref type="bibr" target="#b2">[3]</ref> and it is given by</p><formula xml:id="formula_12">p AM ðx i Þ ¼ 1 m X m j¼1 p j ðx i Þ ! :<label>ð12Þ</label></formula><p>Then, we should normalize p AM to obtain:</p><formula xml:id="formula_13">p Rep ðx i Þ ¼ p AM ðx i Þ max jXj i¼1 fp AM ðx i Þg :<label>ð13Þ</label></formula><p>Finally, we can measure the non-specificity of p Rep using Eq. ( <ref type="formula" target="#formula_11">11</ref>) and hence, discriminate between different sets of possibility distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.">Components of NS-PDT</head><p>As mentioned in Section 2, ordinary decision tree algorithms are made up of three basic components, namely, (a) attribute selection measure, (b) partitioning strategy and (c) stopping criteria. Let us define these components for the NS-PDT approach. 4.2.2.1. Attribute selection measure. For our attribute selection measure, we were inspired by the well-known standard attribute selection measure, namely, the gain ratio criterion proposed by Quinlan <ref type="bibr" target="#b42">[43]</ref>. Indeed, as explained above, this measure, which is essentially based on Shannon entropy, cannot be applied in the case of possibilistic labels. Hence, we have used the counterpart of the probabilistic Shannon entropy in possibility theory, namely, the non-specificity measure which also satisfies a set of mathematical properties: additivity, expansibility, symmetry, branching, monotonicity, etc. <ref type="bibr" target="#b29">[30]</ref>.</p><p>Roughly speaking, standard attribute selection measures (e.g. gain ratio) will select the attribute giving more homogeneous partitions, i.e., giving less random partitions (i.e. with less entropy values). Likewise, in our possibilistic case, we will select the attribute resulting in less imprecise partitions (i.e. with less non-specificity values).</p><p>Given a training set T in which instances's classes are presented in the form of possibility distributions over the different possible class values and given the set of attributes, the non-specificity gain (NSG) of an attribute A k is defined by</p><formula xml:id="formula_14">NSGðT ; A k Þ ¼ U ðp T Rep Þ À U A k ðp T Rep Þ;<label>ð14Þ</label></formula><p>where U ðp T Rep Þ denotes the non-specificity of the possibility distribution representing the set of possibility distributions in the set T.</p><p>And</p><formula xml:id="formula_15">U A k ðp T Rep Þ ¼ 1 jDðA k Þj X v2DðA k Þ U ðp T A k v Rep Þ:<label>ð15Þ</label></formula><p>NSG(T, A k ) assesses the amount of ''information precision" obtained after splitting our training set according to the attribute</p><formula xml:id="formula_16">A k . Note that NSG(T, A k ) 2 [Àlog 2 (n), log 2 (n)]</formula><p>where n denotes the number of classes of the problem (n = jXj). Note the following particular values of NSG(T, A k ):</p><formula xml:id="formula_17">NSG(T, A k ) = Àlog 2 (n):</formula><p>means that splitting according to A k will result in the maximum loss in precision, i.e., resulting subsets are less precise (in average) than the starting training partition. NSG(T, A k ) = 0: means that splitting according to A k will result in any loss nor any gain in precision. NSG(T, A k ) = log 2 (n): means that splitting according to A k will result in the maximum gain in precision, i.e., from a maximally imprecise set, we obtain maximally precise subsets.</p><p>Similarly to the C4.5 algorithm, in order to ovoid bias for attributes with many values, we will divide NSG(T, A k ) by SplitInfo(T, A k ) (see Eq. ( <ref type="formula" target="#formula_4">5</ref>)):</p><formula xml:id="formula_18">NSGrðT ; A k Þ ¼ NSGðT ; A k Þ SplitInfoðT ; A k Þ :<label>ð16Þ</label></formula><p>Obviously, the attribute maximizing NSGr (non-specificity gain ratio) will be assigned to the decision node at hand. Note that our approach covers the special case of certain training data, i.e., training data which are labeled by certain possibility distributions. In this case, p AM will correspond to the frequency distribution (freq) of the different classes in a training partition. Consequently, the possibility distribution p Rep will represent a kind of normalized frequency Nfreq (a division by the maximum frequency). So an important question is: how does U(Nfreq) relate to E(freq)? (where U and E denote, respectively, the U-uncertainty and the Entropy measures).</p><p>To respond to this question, we should note the following cases: If all instances in a training partition have the same class. This case characterizes a situation of complete knowledge. Consequently, the possibility distribution p AM (which is normalized by nature) will be equivalent to the frequency distribution freq(p AM = freq = Nfreq). For instance, if we are dealing with a training data with four classes, we will have p AM = Nfreq = freq = (1, 0, 0, 0). Thus, we obtain U(Nfreq) = E(freq) = 0. If a partition contains exactly the same proportion of classes. This case characterizes a situation of total ignorance. Again, the possibility distribution p AM (which is not normalized here) will be equivalent to the frequency distribution freq(p AM = freq). Normalizing p AM will result in a fully non-specific possibility distribution Nfreq. For instance, if we are dealing with a training data with four classes, we will have freq = (0.25, 0.25, 0.25, 0.25) and Nfreq = (1, 1, 1, 1). Again, we obtain the equality:</p><formula xml:id="formula_19">U(Nfreq) = E(freq) = log 2 (4) = 2.</formula><p>If a partition is neither pure nor fully non-specific, Nfreq will be different to freq and U(Nfreq) 6 ¼ E(freq). A more relevant conclusion is: E(freq1) &gt; E(freq2) does not always imply that U(Nfreq1) &gt; U(Nferq2). In fact, let freq1 = (0.5, 0.2, 0.2, 0.1) and freq2 = (0.4, 0.3, 0.3, 0). Thus, Nfreq1 = (1, 0.4, 0.4, 0.2) and Nfreq2 = (1, 0.75, 0.75, 0). This example shows that E(freq1) = 1.76 &gt; E(freq2) = 1.57 but U(Nfreq1) = 0.717 &lt; U(Nfreq2) = 1.18.</p><p>Clearly, the last case, which is the most occurring in a decision tree building procedure, shows that our measure and the entropy based measure do not always select the same attribute even in the case where the training set is labeled by certain possibility distributions. 4.2.2.2. Partitioning strategy. Once an attribute is selected at a given decision node and since we only deal with discrete attributes, the partitioning strategy will be the same as with ordinary decision trees, i.e., for each value of the selected attribute, an edge labeled with that value is added. The process continues, recursively, for each generated training partition T p as described in Section 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.3.">Stopping criteria.</head><p>Since our approach is dealing with training instances, classes of which are characterized by possibility distributions, the stopping criteria, mentioned in Section 2 cannot be directly applied and should be adapted to such a situation. We propose the following five cases for which we should stop growing the tree:</p><p>For each generated training partition T p :</p><p>1. If there is no further attribute to test, we declare a leaf labeled by p T p Rep : the possibility distribution representing the set of possibility distributions in T p . 2. Else, if NSGr 6 0 (no information is gained). On the contrary, when continuing splitting, we will lose information. In this case, the leaf will be labeled by p </p><formula xml:id="formula_20">T p AM Þ ¼ U ðp T p Rep Þ ¼ 1Þ, i.e.</formula><p>, the partition contains only fully non-specific possibility distributions (total ignorance). In this case, continuing the partitioning is useless. Hence, we declare a leaf labeled by p </p><formula xml:id="formula_21">AvgU ¼ 1 jT j X jT j r¼1 U ðp r Þ;<label>ð17Þ</label></formula><p>where jTj denotes the number of instances of the training set and p r denotes the possibility distribution on the classes of the rth instance in T. Note that the value of AvgU ranges in the interval [0, log 2 jCj] where C corresponds to the set of classes of the problem.</p><p>It is important to mention that, when stopping criterion 3 or 4 are satisfied, the value of the NSGr criterion will be equal to 0, i.e., no information gain is obtained. We separated these criteria just to show the two particular cases of total ignorance and complete knowledge.</p><p>Example 1. Let us use a modified version of the golf data set <ref type="bibr" target="#b36">[37]</ref> to illustrate the induction of a non-specificity based possibilistic decision tree (NS-PDT). Let T be the training set composed of fourteen instances I i=1,. . .,14 which are characterized by four attributes:</p><p>Outlook: sunny or overcast or rainy. Temp: hot or mild or cool. Humidity: high or normal. Wind: weak or strong.</p><p>Two classes are possible either, C 1 (play) or C 2 (do not play). We have added uncertainty to T in an artificial manner: a possibility distribution was given for each class of each instance of T. The training set T is given by Table <ref type="table" target="#tab_0">1</ref> Let us, first, compute AvgU (using Eq. ( <ref type="formula" target="#formula_21">17</ref>)):</p><formula xml:id="formula_22">AvgU ¼ 1 jT j X jT j r¼1 U ðp r Þ ¼ 1 14 ð0:2 þ 0:4 þ 0:7 þ 0 þ 0:8 þ 0:4 þ 0:9 þ 0:3 þ 0:3 þ 0 þ 0:2 þ 0 þ 0:3 þ 0Þ ¼ 0:321:</formula><p>Let us show a detailed computation of the non-specificity gain ratio of only one attribute, namely, the ''Humidity" attribute. One should first determine p T Rep : From Table <ref type="table" target="#tab_0">1</ref>, using Eq. ( <ref type="formula" target="#formula_12">12</ref>), we obtain:</p><formula xml:id="formula_23">p T AM ¼ ð0:2 þ 0:4 þ 1 þ 1 þ 1 þ 0:4 þ 1 þ 0:3 þ 1 þ 1 þ 1 þ 1 þ 1 þ 0Þ 14 ; Â ð1 þ 1 þ 0:7 þ 0 þ 0:8 þ 1 þ 0:9 þ 1 þ 0:3 þ 0 þ 0:2 þ 0 þ 0:3 þ 1Þ<label>14</label></formula><p>¼ ½0:73; 0:58:</p><p>We normalize (using Eq. ( <ref type="formula" target="#formula_13">13</ref>)) to obtain:    Hence, the attribute that will be assigned to the root node will be ''Humidity" since it has the highest non-specificity gain ratio among all the attributes. We get the NS-PDT tree as in Fig. <ref type="figure">1</ref>.</p><formula xml:id="formula_24">p T Rep ¼<label>0</label></formula><formula xml:id="formula_25">¼ ð0:2 þ 0:4 þ 1 þ 1 þ 0:3 þ 1 þ 0Þ 7 ; ð1 þ 1 þ 0:7 þ 0 þ 1 þ 0 þ<label>1Þ</label></formula><formula xml:id="formula_26">p T Humidity normal AM ¼ ð1 þ 0:4 þ 1 þ 1 þ 1 þ 1 þ 1Þ 7 ; ð0:8 þ 1 þ 0:9 þ 0:3 þ 0 þ 0:2 þ 0:<label>3Þ</label></formula><p>For the training subsets T Humidity high and T Humidity normal , we apply the same process as we did for the training set T until one of the stopping criteria holds.</p><p>The final NS-PDT tree induced by our algorithm is given by Fig. <ref type="figure" target="#fig_7">2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Classification procedure</head><p>Once the NS-PDT is constructed, we can classify any object having only values of all its attributes (see Section 2). As mentioned above, each leaf of our decision tree will be labeled by a possibility distribution over the different class values. Hence, to make a decision about the class of a given object, the decision maker can take the fully possible class label (i.e. the class having a possibility degree equal to 1). Moreover, in cases where there may be unequal predefined costs depending on several classes in classification, the decision maker could opt for a cost-sensitive classification.</p><p>Example 2. Let us use the induced NS-PDT tree given in Example 1 to classify the object O 1 (Outlook:overcast, Temp:hot, Humidity: high, Wind: strong). Beginning from the root node of the tree, and following the edges relative to O 1 's attribute values, we reach the leaf of the path (P 2 ) labeled by the possibility distribution <ref type="bibr">[1, 0.35</ref>]. If we decide to take the fully possible class, object O 1 will be assigned the class C 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Non-specificity based possibilistic option decision trees (NS-PODT)</head><p>In <ref type="bibr" target="#b26">[27]</ref>, we have developed a variant of decision trees called possibilistic option decision trees (PODT) where each decision node can be split according to more than one attribute. Different options in the PODT are quantified via possibility distributions.</p><p>This section extends the NS-PDT approach, presented in the previous section, to deal with the uncertainty relative to the attribute selection step when several attributes appear as good discriminators. This extension have led to the so-called NS-PODT approach. We will, first, briefly recall basic parameters of the PODT approach. For more details, see <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Possibilistic option decision tree approach (PODT)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1.">Attribute selection</head><p>As it is described, the standard building procedure <ref type="bibr" target="#b42">[43]</ref> chooses at each decision node the attribute having the maximum or the minimum value (according to the context) of this measure, assuming that it leads to the smallest tree, and the remaining attributes are rejected.</p><p>For instance, suppose that at a node n, we find that Gr(T, A 1 ) = 0.87 and Gr(T, A 2 ) = 0.86. In standard decision tree building procedure, the node n will be split according to the values of A 1 whereas A 2 is rejected in spite of the fact that the two values are almost equal (the case of equality may also occur). Because of the heuristic aspect of the attribute selection measure as well as its one step lookahead nature, the situation is somewhat problematic: we agree that A 1 is a good splitting attribute at this level but nothing guarantees that A 1 is the best choice.</p><p>Hence, after computing the gain ratios of the different attributes, one should establish priorities between these candidate attributes according to the obtained values and select attributes that appears possible to a certain extent as well instead of choosing only the one with the highest gain ratio and rejecting all the remainders. Thus, the idea of the so-called possibilistic option decision tree approach (PODT) is to assign to each decision node n, a normalized possibility distribution p An over the set of remaining attributes at this node, based on the set of gain ratios of the different attributes GR = {Gr(T n , A k ) s.t. A k 2 A n }. T n denotes the training subset relative to the node n.</p><p>Let A n be the set of remaining attributes at a decision node n and GR the set corresponding to their gain ratios. We define a quantitative possibility distribution p An by the following equation:</p><formula xml:id="formula_27">p A n ðA k Þ ¼ 0 if GrðA k Þ 6 0; 1 if GrðA k Þ ¼ maxðGRÞ; GrðA k Þ GrðA Ã k Þ otherwise: 8 &gt; &lt; &gt; :<label>ð18Þ</label></formula><p>We interpret p An ðA k Þ as the possibility degree that a given attribute A k is reliable for the node n. An alternative manner to quantify the attributes was proposed by Hu ¨llermeier in <ref type="bibr" target="#b22">[23]</ref>, but the characteristics of our possibility distribution is that it proportionally preserves the gap between the different attributes according to their gain ratios and it does not use any additional parameter. Once possibility degrees are generated for each attri-bute, we use the option technique <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b30">31]</ref>, i.e., a decision node n will not be only split according to the best attribute A Ã k ðA Ã k ¼ arg max A k 2An fGrðA k ÞgÞ but rather for all attributes in the set A Ã n which we define by</p><formula xml:id="formula_28">A Ã n ¼ fA k 2 A n s:t: distanceðA Ã k ; A k Þ 6 Dg;<label>ð19Þ</label></formula><formula xml:id="formula_29">where distanceðA Ã k ; A k Þ ¼ p An ðA Ã k Þ À p An ðA k Þ, A n</formula><p>denotes the set of candidate attributes at the node n and D represents an arbitrary threshold varying in the interval [0, 1]. The fixed value of D has a direct effect on the size of the tree. In fact, for a large (resp. small) value of D, the number of the selected attributes, at each node, will increase (resp. decrease) and hence, the tree will have a larger (resp. smaller) size. Note that when D = 0, in some cases (i.e. when there is no equality between attributes' gain ratios) we recover a standard decision tree as C4.5 of Quinlan.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2.">Partitioning strategy and stopping criteria</head><p>Since we can have more than one attribute at a given decision node n (an option node), the partitioning is realized as follows: For each attribute A k 2 A Ã n and each value v 2 D(A k ), one outgoing edge is added to n. This edge is labeled with the value v and the possibility degree p An ðA k Þ which is interpreted as the reliability degree of that edge. Obviously, we keep the same stopping criteria as in standard decision trees.</p><p>Example 3. Let us use the original golf data set <ref type="bibr" target="#b36">[37]</ref> to illustrate the induction of a possibilistic option decision tree (PODT). Let T 0 be the original training set labeled by the original crisp classes. The training set T 0 is given by Table <ref type="table" target="#tab_2">2</ref>:</p><p>Assume D = 0.4 in Eq. ( <ref type="formula" target="#formula_28">19</ref>).</p><p>Let us compute the gain ratios of the different attributes at the root node n = 0: We remark that the attribute ''Outlook" has the highest gain ratio. Let us now, compute the possibility degrees of the different attributes, using Eq. ( <ref type="formula" target="#formula_27">18</ref>), in order to define the set A Ã 0 : Given D = 0.4, the set of attributes which will be assigned to the root n 0 of the possibilistic option tree is given by: A Ã 0 ¼ fOutlook; Humidityg. The possibilistic option tree induced from the training set T 0 (D = 0.4 in Eq. ( <ref type="formula" target="#formula_28">19</ref>)), which we denote by PODT 0.4 , is given by Fig. <ref type="figure" target="#fig_6">3</ref>. For clarity reasons, abbreviations of the attribute values are used instead of complete words (e.g. ''ho" for the value ''hot", ''hi" for ''high", ''we" for ''weak", etc.).</p><formula xml:id="formula_30">GrðT 0 0 ; OutlookÞ ¼ GainðT 0 0 ;</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Building procedure in NS-PODT</head><p>Building a NS-PODT represents an extension of the building procedure of a NS-PDT to make this latter able to deal with the uncertainty relative to the attribute selection. As a consequence, we should modify some parameters of the NS-PDT approach, mainly, the attribute selection and the partitioning strategies.</p><p>In fact, instead of selecting only one attribute: the attribute maximizing NSGr, a set of possibly reliable attributes, i.e, attributes with high and close non-specificity gain ratios, will be assigned to the decision node at hand. We will follow the same procedure described in Section 5.1 but with the difference of using the NSGr attribute selection measure (Eq. ( <ref type="formula" target="#formula_18">16</ref>)) instead of the traditional gain ratio (Eq. ( <ref type="formula" target="#formula_3">4</ref>)) in Eq. <ref type="bibr" target="#b17">(18)</ref>.</p><formula xml:id="formula_31">p An ðA k Þ ¼ 0 i f NSGrðA k Þ 6 0; 1 i f NSGrðA k Þ ¼ maxðNSGRÞ; NSGrðA k Þ NSGrðA Ã k Þ otherwise; 8 &gt; &lt; &gt; :<label>ð20Þ</label></formula><p>where NSGR = {NSGr(T n , A k ) s.t. A k 2 A n }. We keep the same stopping criteria of the NS-PDT approach.</p><p>Since more than one attribute can be selected in a decision node, the partitioning strategy of the NS-PODT will be the same as with the PODT approach (described in Section 5.1.2). Let T be a training set composed of p objects I j:1,. . .,p characterized by m discrete attributes (A 1 , A 2 , . . . , A m ) and belonging to the set of q mutually exclusive classes C = {C 1 , C 2 , . . . , C q }. The NS-PODT algorithm uses a top down induction of decision tree approach. The different steps of the NS-PODT algorithm are described as follows:</p><p>Algorithm 1. NS-PODT building algorithm Begin 1. Generate the root node of the non-specificity based possibilistic option tree including all the objects of the training set T. 2. Set the value of the threshold D (Eq. ( <ref type="formula" target="#formula_28">19</ref>)) to control the number of attributes to be selected at each decision node: jA Ã n j, and hence, to control the size of the tree. 3. Verify if the generated node satisfies or not at least one of the stopping criteria listed in Section (4.2.2):</p><p>(a) If yes, declare it as a leaf labeled by the appropriate possibility distribution. (b) Else, compute for each attribute, among those that have not been used so far, its non-specificity gain ratio (NSGr), then, generate its possibility degree of being a'reliable' splitting attribute using Eq. ( <ref type="formula" target="#formula_31">20</ref>). Finally, choose the attributes satisfying Eq. ( <ref type="formula" target="#formula_28">19</ref>) which will correspond to the root node of the NS-PODT tree relative to the whole training set. 4. Develop, for each value of each attribute in the set A Ã n , one outgoing edge marked with that value v and the possibility degree p An ðA k Þ of the corresponding attribute. The partitioning strategy (see Section 5.1.2) leads to several training subsets. 5. Create a root node relative to each induced training subset. 6. Repeat the same process for each training subset from step 3. 7. Stop when all the generated nodes of the latter level are declared as leaves. End.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Classification procedure in NS-PODT</head><p>In addition to the classification of new certain instances (with unknown class values), i.e., ordinary instances, attribute values of which are known with certainty, the NS-PODT approach deals with the classification of uncertain instances, i.e., instances characterized by uncertain attribute values. In this section, we propose a method which ensures the classification of such instances. Uncertainty here is also handled in the possibilistic framework.</p><p>Given the set of attributes A, the instance to classify is described by a vector of possibility distributions i ! ¼ ðp A 0 1 ; . . . ; p A 0 n ). An attribute A k whose value is known with certainty has exactly one value v 2 D(A k ), such that p A 0 k ðvÞ ¼ 1, and for all other values v 0 2 D(A k ) À {v}, p A 0 k ðv 0 Þ ¼ 0. An attribute A k whose value is missing is represented by a uniform possibility distribution, i.e., 8v 2 DðA k Þ; p A 0 k ðvÞ ¼ 1. Table <ref type="table" target="#tab_3">3</ref> gives an example of an uncertain instance i 1 ! to classify.</p><p>In order to classify an uncertain instance (e.g. i 1 ! ) within a NS-PODT tree, we need to carry out the following steps:</p><p>Step one: Instance propagation At each option node of a NS-PODT tree, the instance to classify can branch in different directions depending on the chosen attribute to test on. To each one of these attributes, we have assigned a possibility degree p An ðA k Þ (Eq. ( <ref type="formula" target="#formula_31">20</ref>)) indicating the possibility that a given attribute is reliable for a given option node n. Thus, throughout a given NS-PODT, whenever an instance follows an attribute A k , the related possibility distribution in the instance to classify (p A 0 k ) should be discounted according to the possibility degree of the followed attribute (p An ðA k Þ) using Eq. ( <ref type="formula" target="#formula_8">9</ref>). The resulting discounted possibility degrees will replace the degrees labeling the NS-PODT.</p><p>Step two: Exploring paths Once the propagation is made within the NS-PODT tree (step 1), we should explore all its paths in order to determine their corresponding possibility degrees based on the 'new' discounted possibility degrees labeling the tree. Since a path represents a conjunction of edges, we have used the minimum conjunctive operator to define the possibility degree of a path p = (n 0 , . . . , n k ) as</p><formula xml:id="formula_32">p path ðpÞ ¼ min 06i&lt;lðpÞÀ1 p edge ððn i ; n iþ1 ÞÞ;<label>ð21Þ</label></formula><p>where p edge ((n i , n i+1 )) denotes the possibility degree labeling the edge (n i , n i+1 ) and l(p) denotes the length (number of nodes) of the path p. We interpret p path (p) as the reliability degree of the path p. It indicates to what extent the path is supporting the instance to classify according to its attribute values (i.e. the possibility degrees labeling its attributes).</p><p>Step three: Exploring leaves Recall that each leaf in a NS-PODT tree is labeled by a possibility distribution on the different class values. Therefore, one should refine the possibility distribution labeling each leaf by the reliability degree of the path leading to that leaf by applying the discounting formula given by Eq. ( <ref type="formula" target="#formula_8">9</ref>). Obviously, possibility distributions labeling leaves of fully reliable paths of the tree (i.e. with reliability degree equal to 1), will remain unchanged. In the case of fully unreliable paths, i.e., paths which are not supporting the object to classify, all possibility distributions will move to the total ignorance in order to be ignored later.</p><p>Once discounted, the idea is to rank, by level of non-specificity, the resulted possibility distributions according to their non-specificities, i.e., from the least non-specific (the most specific) to the most non-specific (the least specific). Obviously, each level may contain more than one possibility distribution. Having the different sets of possibility distributions, ranked in decreasing order by level of non-specificity, the classification result of the instance at hand is done according to the following algorithm: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>End.</head><p>Note that, by convention, level (n+1) has the maximum non-specificity value which is equal to log 2 jCj. Recall that C represents the set of possible classes of the problem. If level (n+1) is reached, the classification result p res satisfies p res ¼ arg min n i¼1 fU ðp leveli Rep Þg. In the proposed procedure, we chose to take into account the non-specificity of the resulting possibility distributions in order to make our decision. The choice of the more specific possibility distribution is justified by the fact that the path leading to this latter, better supports the object to classify (according to the possibility degrees labeling object's attributes). Because we could have cases of equal non-specificities, we proposed to use levels of non-specificities. Each level gathers together possibility distributions with equal non-specificities. We move to a next level only when its non-specificity is lower than the non-specificity of the representative possibility distribution of the current level.</p><p>Example 4. Suppose we have to classify the instance i 1 ! given in Table <ref type="table" target="#tab_3">3</ref> using the induced NS-PDT tree of Example 1 given in Section 4. Note that, in this case, the induced NS-PDT tree is equivalent to an NS-PODT 0 : a NS-PODT D tree with D = 0 (no equality between attributes has been occurred in any node).</p><p>Step one: Instance propagation Starting from the root node of the NS-PODT 0 (see Fig. <ref type="figure" target="#fig_7">2</ref>), the instance i 1 ! will follow all the edges of the tree. According to the reliability degree of each followed edge, we will discount the corresponding possibility distribution p 0 A k as mentioned above. Note that in the NS-PODT 0 , all edges are fully reliable (reliability degrees equal to 1) since we have obtained only one attribute in each decision node. Consequently, the different edges of the NS-PODT 0 will be labeled by the discounted possibility distributions which, in this particular case, will remain unchanged.</p><p>Step two: Exploring paths Let us compute the possibility degree relative to each path using Eq. ( <ref type="formula" target="#formula_32">21</ref>): (P 1 ): min(1, 1) = 1 (P 2 ): min(1, 0.5) = 0.5 (P 3 ): min(1, 0.7, 0) = 0 (P 4 ): min(1, 0.7, 1) = 0.7 (P 5 ): 0.5</p><p>Step three: Exploring leaves</p><p>The possibility distribution labeling each leaf of the tree will be discounted according to the possibility degree of the path leading to that leaf:</p><formula xml:id="formula_33">(P 1 ) 1 : [0.3 1] )[0.3 1] (P 2 ) 0.5 : [1 0.35] )[1 0.5] (P 3 ) 0 : [0 1] )[1 1] (P 4 ) 0.7 : [1 0] )[1 0.3] (P 5 ) 0.5 : [1 0.414] )[1 0.5]</formula><p>The rank is given by level 1 : f½0:31; ½10:3g level 2 : f½10:5; ½10:5g level 3 : f½11g )According to the procedure proposed above, the classification result will be the distribution: [1 0.5] which means that the class of i 1 ! is C 1 with a possibility degree equal to 1 and C 2 with a possibility degree of 0.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Experimental results</head><p>In a first step, the main purpose of our experimental study was to show that exploiting uncertain data for decision tree induction by using the proposed NS-PDT approach is usually better than the obvious alternative, namely to ignore such data and learn with a standard decision tree algorithm from the remaining (exactly labeled) examples. Afterwards, the experiments will show that the extended version, namely, NS-PODT outperforms NS-PDT in terms of classification performance, hence, paying off the increased complexity of the former.</p><p>For the evaluation of different possibilistic decision tree approaches proposed in this paper, we have developed a possibilistic decision tree toolbox (PD2T) implemented with Matlab 6.5. The toolbox includes a homemade implementation of the C4.5 algorithm, an implementation which is faithful to the original C4.5 as presented by Quinlan <ref type="bibr" target="#b42">[43]</ref>. From this implementation, we have derived all of the PODT, the NS-PDT and the NS-PODT approaches. We have also used the well-known Weka data mining tool <ref type="bibr" target="#b49">[50]</ref>, especially, the J48 classifier (an implementation of C4.5).</p><p>The experimental study is based on several data sets selected from the U.C.I. repository of machine learning databases <ref type="bibr" target="#b36">[37]</ref>. A brief description of these data sets is given in Table <ref type="table" target="#tab_4">4</ref>. #Data, #attributes, #classes denote respectively the total number of instances, the number of attributes and the number of classes.</p><p>In order to conduct our experiments for both NS-PDT and NS-PODT approaches, we have ''contaminated" these data sets by transforming the original crisp classes by possibility distributions over the different classes. We used levels of uncertainty (L%) when generating these possibilistic training sets. More precisely, for each training instance from the L% randomly chosen instances, we have assigned a possibility degree equal to 1 to the original class and a random possibility degree (from [0, 1[) to the remainders in an uniform way. To each one of the remaining (100 À L)% instances of the original training set, we have assigned a completely sure possibility distribution corresponding to the original crisp instance's class. For our experiments, we have varied L from 0 (crisp training set) to 50 (half of the training instances has an uncertain class label).</p><p>In order to determine the accuracy of the induced trees, we have used two criteria, the first is relative to the percentage of correct classification (PCC) expressed by</p><formula xml:id="formula_34">PCC ¼ number of well classified instances total number of classified instances Â 100<label>ð22Þ</label></formula><p>and the second corresponds to a distance based criterion (PCC_dist) which we propose as a new criterion that is more appropriate to the possibilistic context:</p><formula xml:id="formula_35">PCC dist ¼ P I j ! 2classified instances Dð I j ! Þ total number of classified instances Â 100;<label>ð23Þ</label></formula><formula xml:id="formula_36">where Dð I j ! Þ ¼ 1 À dð I j ! Þ jCj and dð I j ! Þ ¼ P jCj i¼1 ðp res ðC i Þ À p j ðC i ÞÞ 2 .</formula><p>Recall that within our possibilistic decision tree approach, the classification result is given in the form of a possibility distribution (p res ). Thus, the idea is to choose for each instance to classify the class having the highest possibility degree (equal to 1). If more than one class is obtained, then one of them is chosen randomly. The obtained class is considered as the class of the testing instance. Consequently, number of well-classified instances in Eq. ( <ref type="formula" target="#formula_34">22</ref>) corresponds to the number of testing instances for which the class obtained by the possibilistic decision tree approach (the more plausible class) is the same as their real more plausible class.</p><p>The limitation of the PCC criterion, in our case, is that it chooses randomly one of the more plausible classes which may miss-classify some instances. Moreover, even when there is only one more plausible class, focusing on that class and ignoring the rest of the classes (classes with possibility degrees different to 1) is problematic. In fact, ignoring the rest of the degrees implies ignoring a part of the information given by the resulting possibility distribution (p res ).</p><p>So, we were inspired by the criterion proposed in <ref type="bibr" target="#b1">[2]</ref> to define the PCC_dist criterion which takes into account the mean distance relative to all the classified testing instances: the average of the distances between the resulting possibility distribution (p res ) and the real possibility distribution (p j ) of each classified instance I j ! . When Dð I j ! Þ is close to 100, the classifier is good whereas when it falls to 0, it is considered as a bad classifier. The experimental methodology is as follows: for each training set and for each uncertainty level L (from 0% to 50%), we have induced a NS-PDT tree. On the other hand, a C4.5 tree was induced from the corresponding training set, i.e., the ordinary training set from which we have discarded the L% instances to which we have assigned imprecise class labels since the C4.5 algorithm can not deal with such instances. Then, both approaches are evaluated on the same testing sets: ordinary testing sets for C4.5 trees have been used and their corresponding testing sets (with completely sure possibility distributions on the original class labels) for NS-PDT trees: this corresponds to one iteration of the 10-fold cross validation process used for the evaluation of the approach.</p><p>Table <ref type="table" target="#tab_5">5</ref> reports the different obtained results after varying the training sets' level of uncertainty L% from 0% to 50% for each database. MPCC denotes the mean PCC (complemented by standard deviation) of the induced decision trees for NS-PDT, C4.5-U (Unpruned) and C4.5-P (Pruned) approaches after a 10-fold cross validation testing process.</p><p>Table <ref type="table" target="#tab_5">5</ref> shows that the NS-PDT approach gives interesting results when compared with the famous C4.5. Note that the aim of this comparison is not to directly compare the two approaches since C4.5 is only used in certain environments while the NS-PDT approach deals with both certain and uncertain environments.</p><p>From Table <ref type="table" target="#tab_5">5</ref>, we can see that for low levels of uncertainty and especially, when there is no uncertainty in the training set (L = 0%), accuracy rates of the state-of-the-art C4.5 approach (regardless of pruning) are slightly higher than those of NS-PDT. Interestingly, the NS-PDT approach begins to perform better than C4.5 for higher levels of uncertainty (e.g. L = 40% for W.B.Cancer dataset, (L = 20%, Voting), (L = 30%, Solar Flare) and (L = 10%, Balance and Nursery)). In fact, classification accuracies of both approaches decrease when the level of uncertainty increases. This can be explained by the fact that the higher the level of uncertainty (L%), the less informative the training set becomes (consequently, the harder the learning becomes), and therefore the less accurate the predictions are. In spite of this decrease in accuracy, we can see that the classification rate of NS-PDT is greater than the one of C4.5 (even for the C4.5-P) and this difference becomes more important for training sets with higher proportions of uncertain instances.</p><p>Besides, from the above reported percentages, we can see that, for the Balance (three classes) and Nursery (five classes) data sets, the NS-PDT approach rapidly outperforms C4.5 (only from L = 10%). This represents an interesting result. Indeed, it shows that the NS-PDT approach is well suited for problems with large number of classes where uncertainty becomes more relevant and more difficult to manage.</p><p>The principal result of this table is that, generally, rejecting training instances, classes of which are imprecisely defined, is not a good practice and reduces the accuracy of the induced classifier ''(and especially for muti-class problems)". This issue can be avoided and well handled by the use of the proposed NS-PDT approach which can exploit the information contained in imprecise labels.</p><p>Regarding the complexity, let us note that for each uncertainty level L%, the obtained NS-PDT trees and C4.5-U trees have almost the same number of leaves (with a slight increase for the NS-PDT approach). This can be due to the fact that C4.5-U trees are induced from smaller training sets, i.e., training sets from which we have discarded imprecisely labeled instances. Table <ref type="table" target="#tab_6">6</ref> reports the mean PCC_dist value (complemented by standard deviation) for each database for the different levels of uncertainty after a 10-fold cross validation process. Note that high values of the PCC_dist criterion do not only imply that the induced trees are accurate but also imply that the possibility distributions provided by the induced NS-PDT trees are of high quality and faithful to the original possibility distributions. Again, from Table <ref type="table" target="#tab_6">6</ref>, we can see that PCC_dist values decrease when L% increases (for the same explanation provided above for Table <ref type="table" target="#tab_5">5</ref>).</p><p>Let us move to Table <ref type="table">7</ref> for the evaluation of the extension of NS-PDT, namely the NS-PODT approach to show the effect of the ''optional" splitting on the accuracy of the induced trees.</p><p>We followed the same experimental strategy: for each value of D (from 0 to 0.5), we varied the level of uncertainty L% (from 0 to 50). Note that the variation of D differs from one data set to another. In fact, this is done experimentally: since for larger values of D the tree size becomes more and more important, then, we stopped the variation of D when we reach a compromise between the size and the accuracy of the induced tree, i.e., a reasonable size and a relatively high accuracy (compared with the initial tree NS-PODT 0 ). Table <ref type="table">7</ref> reports, for each data set, the mean accuracy rate (MPCC) of the induced NS-PODT D trees after running a 10-fold cross validation testing process. In our experiments, we have varied D from 0 to 0.5 but we only report results for the special case (D = 0) and for the optimal value of D (marked with Ã) which induces the most accurate NS-PODT tree. Note that in <ref type="bibr" target="#b26">[27]</ref>, we have shown that the performance of PODT is neither a monotone increasing nor a monotone decreasing function of the parameter D. We obtained similar results with NS-PODT.</p><p>From Table <ref type="table">7</ref>, we notice that for some data sets (voting, solar flare and nursery), NS-PODT 0 is equivalent to NS-PDT which means that there is no equality between the discriminative power of the attributes during the whole building process of the induced trees. Besides, the value of the optimal D is purely experimental and depends on the used data set (D = 0.1 for W.B.cancer and balance data, 0.4 for solar flare and 0.2 for nursery). The results given in Table <ref type="table">7</ref> confirm the results reported in our previous work <ref type="bibr" target="#b26">[27]</ref>. Indeed, even with the new approach which uses new parameters, considering more than one attribute in some decision nodes, i.e, those that appear as possibly good discriminators instead of rejecting them may increase the classification accuracy of the resulted trees. In fact, except the Voting data set, we can see that for each data set, the NS-PODT approach outperforms NS-PDT in terms of classification performance, so, paying off the increased complexity of NS-PODT. Hence, we can conclude that using the ''optional" splitting when building decision trees might enhance the accuracy of the induced trees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Related works</head><p>Many decision tree approaches under uncertainty were proposed in the literature, namely, probabilistic decision trees <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b41">42]</ref>, belief decision trees <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b45">46,</ref><ref type="bibr" target="#b46">47]</ref>, possibilistic decision trees <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b26">27]</ref>, fuzzy decision trees <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b37">[38]</ref><ref type="bibr" target="#b38">[39]</ref><ref type="bibr" target="#b39">[40]</ref><ref type="bibr" target="#b51">52]</ref> and credal decision trees <ref type="bibr" target="#b0">[1]</ref>. The difference between the existing approaches lies mainly in the type of uncertainty presented to the problem at hand (incompleteness, conflict, imprecision, vagueness, etc.) and especially in the way of dealing with that uncertainty when building the tree.</p><p>Within the possibilistic framework, Borgelt et al. <ref type="bibr" target="#b3">[4]</ref> proposed a possibility based attribute selection measure which they used for the induction of possibilistic decision trees. In their work, the authors take the probability distributions, i.e. the frequency distributions of the instances reaching each node as possibility distributions (an interpretation which is based on the context model of possibility theory <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b31">32]</ref>). As the role non-specificity plays in possibility theory is similar to that of Shannon entropy in probability theory, a nonspecificity based attribute selection measure is constructed from it in the same way as the information gain ratio criterion of the well-established C4.5 algorithm <ref type="bibr" target="#b42">[43]</ref> is constructed from Shannon entropy. This measure is slight different from the measure we used in this paper but it is the way of using this measure that is totally different. In fact, in our approach, the parameters of the induction method and the induction method itself are different from Borgelt's work which keeps the same parameters of the C4.5 algorithm. Furthermore, in our work, the need of using a non-specificity based attribute selection measure suggests itself since instances' classes in the training set are given by normalized possibility distributions. On the contrary, in Borgelt's work, instances' classes in the training set are crisp.</p><p>Still within the possibilistic framework, we can mention two additional works. First, the work proposed by Hu ¨llermeier <ref type="bibr" target="#b22">[23]</ref> in which he used a possibilistic branching within the lazy decision tree technique. In this work, the author has not dealt with any uncertainty in the training set (building phase) nor in the classification phase. In the second work <ref type="bibr" target="#b1">[2]</ref>, the authors have only dealt with uncertainty in the classification phase. More precisely, they extended ordinary decision trees by proposing a method for the classification of instances having uncertain attribute values (given by qualitative possibility distributions) using the leximin-leximax criterion <ref type="bibr" target="#b35">[36]</ref>.</p><p>As we have proposed a non-specificity based attribute selection measure in our approach, it is important to note that the idea of using non-specificity for building decision trees is not new. In fact, it has been used with other uncertainty theory frameworks. In 1995, Yuan et al. proposed a measure of classification ambiguity which is defined from both a measure of fuzzy subsethood and a measure of non-specificity. This measure was used as an attribute selection measure to construct fuzzy decision trees <ref type="bibr" target="#b51">[52]</ref>. Since then, many other fuzzy decision tree techniques were proposed <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b37">[38]</ref><ref type="bibr" target="#b38">[39]</ref><ref type="bibr" target="#b39">[40]</ref>. In these different works, fuzzy set theory is used either to manage fuzzy attributes and/or fuzzy labels in the training set or to search for the degree of softness in every node of the built tree or to integrate some interesting fuzzy tools during the building phase.</p><p>More recently, Denoeux et al. have dealt with the induction of belief decision trees from data with partially defined classes presented in the form of basic belief assignments (b.b.a.) <ref type="bibr" target="#b9">[10]</ref>. The authors have used a total uncertainty criterion as a measure of discrimination based on both measures of non-specificity and conflict relative to belief function theory. In the same context, another approach was proposed by Elouedi et al. for inducing belief decision trees (BDT) <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15]</ref> and pruning methods for this approach have been recently proposed <ref type="bibr" target="#b45">[46]</ref>. In the BDT approach, the authors have presented two attribute selection measures using the belief function formalism, one parallel to Quinlan's measure based on Shannon entropy (the averaging approach), the other close in spirit to the transferable belief model <ref type="bibr" target="#b44">[45]</ref> (the conjunctive approach). Note that, differently to the approaches listed above, this approach did not use any non-specificity measure. The common point between belief decision trees and our approach is that we start with the ''same" hypothesis: uncertain classes in the training set, but it is the theory and the interpretation of the two theories that differ.</p><p>Another decision tree approach using non-specificity is the one proposed by Abellan et al. <ref type="bibr" target="#b0">[1]</ref>. In their approach, which has no relation with the ours, the authors used the imprecise Dirichlet model <ref type="bibr" target="#b47">[48]</ref> to estimate the probabilities of instances' classes reaching a given node. More specifically, the probability of each class is transformed into a probability interval (imprecise probability) to obtain what they called a credal set (a convex set of probability distributions). Then, they proposed a total uncertainty measure (non-specificity + entropy) to assess the impurity of the different nodes (credal sets) of the tree under construction.</p><p>Several non-standard classification techniques were proposed in the literature. We can mention the belief knearest neighbor classifier <ref type="bibr" target="#b7">[8]</ref> and the belief neural network classifiers <ref type="bibr" target="#b8">[9]</ref> both based on Dempster-Shafer theory. We can also mention the possibilistic instance based learning approach <ref type="bibr" target="#b23">[24]</ref>. In <ref type="bibr" target="#b24">[25]</ref>, the author reviewed some typical applications of fuzzy set theory to machine learning techniques. More recently, a fuzzy lattice reasoning classifier <ref type="bibr" target="#b27">[28]</ref> was proposed to induce rules in a mathematical lattice data domain. This classifier has the advantage of being incremental and able to deal with missing data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusion</head><p>In this paper, we have presented a classification technique under an uncertain environment. First, we have proposed the NS-PDT approach, then we have extended it to obtain the NS-PODT. It is the result of the combination between the decision tree technique and possibility theory. This combination makes the former able to deal with uncertainty which can appear in different parameters of the classification problem. Obviously, we are interested in the uncertainty that has a possibilistic nature.</p><p>In a first part, we considered the case where instances's classes in the training set are given by possibility distributions. As a consequence, when building the tree, instances reaching the different nodes of the tree will be characterized by possibility distributions over the different classes of the problem instead of crisp classes. In order to adapt the ordinary decision tree learning algorithm to such a situation, we have proposed a non-specificity based attribute selection measure (the NSGr criterion) instead of Quinlan's gain ratio criterion which is based on the probabilistic Shannon entropy. Then, we have defined the different parameters of the so-called NS-PDT approach.</p><p>In a second part, based on our previous work <ref type="bibr" target="#b26">[27]</ref>, we have extended the NS-PDT approach to deal with another kind of uncertainty which is hidden in the decision tree building procedure. More precisely, we have made the NS-PDT approach able to deal with the uncertainty related to the choice of an attribute among a set of attributes with equally or nearly equal NSGr values. Hence instead of selecting only one attribute in a given decision node and rejecting the others, with the so-called NS-PODT approach, we allow the selection of more than one attribute: the most possibly reliable ones. Obviously, each attribute will be characterized by its possibility degree. The different parameters of this approach have been also detailed.</p><p>Another interesting contribution lies in the use of the induced NS-PODT tree, i.e., in the classification (inference) task. In fact, in addition to the classification of instances having crisp attribute values, we have proposed a whole procedure allowing the classification of instances having uncertain attribute values, i.e., we considered the case where the knowledge about the value of some attributes is represented by a possibility distribution.</p><p>After the presentation of the theoretical concepts underlying the different proposed possibilistic decision tree approaches, we have evaluated them by applying them on commonly used data sets obtained from the U.C.I. repository <ref type="bibr" target="#b36">[37]</ref>. In a first part, experimental studies have shown that ignoring training instances, classes of which are imprecisely defined, is not a good practice and reduces the accuracy of the induced classifier which can be avoided and well handled by the use of the proposed NS-PDT approach.</p><p>In a second part, the extension of the NS-PDT approach, namely the NS-PODT approach has shown that the classification accuracy can increase when varying D until reaching a specific value which is purely experimental. This value is relatively small and hence the time and space complexity remain reasonable. We plan to use our approach for the intrusion detection problem where the knowledge about connection types (normal, a specific attack type) is, by nature, afflicted with uncertainty. We also think that the pruning issue should be investigated and aim to extend our approach to handle continuous attributes in the future.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>, if the non-specificity of the possibility distribution representing the training partition T p equals to 1 and p</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>, if the non-specificity of the possibility distribution representing the training partition T p equals to 0 ðU ðp T p Rep Þ ¼ 0Þ, i.e., all instances in the training partition have the same class (complete knowledge). In this case, we declare a leaf labeled by the fully specific possibility distribution p T p Rep . 5. Else, if the non-specificity of the possibility distribution representing the training partition T p is less or equal to a pre-computed threshold AvgU ðU ðp T p Rep Þ &lt;¼ AvgU Þ, i.e., the training partition is enough pure. Thus, we declare a leaf labeled by p T p Rep . AvgU represents the average of non-specificity measures of each possibility distribution of each instance of the whole training set T:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>7 ¼</head><label>7</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>7 ¼</head><label>7</label><figDesc>½0:914; 0:5 ) p T Humidity normal Rep ¼ ½1; 0:547 ) U ðp T Humidity normal Rep Þ ¼ 0:547</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 1 .Fig. 2 .</head><label>12</label><figDesc>Fig. 1. First generated NS-PDT tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Final possibilistic option tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Algorithm 2 .</head><label>2</label><figDesc>NS-PODT classification algorithmBegin 1. Start by the first level (level 1 ). 2. If the current level (level i ) contains only one possibility distribution OR identical possibility distributions: take one of these possibility distributions as the classification result. 3. Else, i.e., the current level contains several different possibility distributions: (a) Compute p leveli Rep ; the representative possibility distribution of the set of possibility distributions present at level i. (b) If the non-specificity of p leveli Rep is below or equal to the non-specificity of level (i+1) : take p : Rep leveli as the classification result. (c) Else: move to the next level and return to 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell>Training set</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>Outlook</cell><cell>Temp</cell><cell>Humidity</cell><cell>Wind</cell><cell>C 1</cell><cell>C 2</cell></row><row><cell>I 1</cell><cell>Sunny</cell><cell>Hot</cell><cell>High</cell><cell>Weak</cell><cell>0.2</cell><cell>1</cell></row><row><cell>I 2</cell><cell>Sunny</cell><cell>Hot</cell><cell>High</cell><cell>Strong</cell><cell>0.4</cell><cell>1</cell></row><row><cell>I 3</cell><cell>Overcast</cell><cell>Hot</cell><cell>High</cell><cell>Weak</cell><cell>1</cell><cell>0.7</cell></row><row><cell>I 4</cell><cell>Rainy</cell><cell>Mild</cell><cell>High</cell><cell>Weak</cell><cell>1</cell><cell>0</cell></row><row><cell>I 5</cell><cell>Rainy</cell><cell>Cool</cell><cell>Normal</cell><cell>Weak</cell><cell>1</cell><cell>0.8</cell></row><row><cell>I 6</cell><cell>Rainy</cell><cell>Cool</cell><cell>Normal</cell><cell>Strong</cell><cell>0.4</cell><cell>1</cell></row><row><cell>I 7</cell><cell>Overcast</cell><cell>Cool</cell><cell>Normal</cell><cell>Strong</cell><cell>1</cell><cell>0.9</cell></row><row><cell>I 8</cell><cell>Sunny</cell><cell>Mild</cell><cell>High</cell><cell>Weak</cell><cell>0.3</cell><cell>1</cell></row><row><cell>I 9</cell><cell>Sunny</cell><cell>Cool</cell><cell>Normal</cell><cell>Weak</cell><cell>1</cell><cell>0.3</cell></row><row><cell>I 10</cell><cell>Rainy</cell><cell>mild</cell><cell>Normal</cell><cell>Weak</cell><cell>1</cell><cell>0</cell></row><row><cell>I 11</cell><cell>Sunny</cell><cell>Mild</cell><cell>Normal</cell><cell>Strong</cell><cell>1</cell><cell>0.2</cell></row><row><cell>I 12</cell><cell>Overcast</cell><cell>Mild</cell><cell>High</cell><cell>Strong</cell><cell>1</cell><cell>0</cell></row><row><cell>I 13</cell><cell>Overcast</cell><cell>Hot</cell><cell>Normal</cell><cell>Weak</cell><cell>1</cell><cell>0.3</cell></row><row><cell>I 14</cell><cell>Rainy</cell><cell>Mild</cell><cell>High</cell><cell>Strong</cell><cell>0</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell>Training set</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Outlook</cell><cell>Temp</cell><cell>Humidity</cell><cell>Wind</cell><cell>Class</cell></row><row><cell>Sunny</cell><cell>Hot</cell><cell>High</cell><cell>Weak</cell><cell>C 2</cell></row><row><cell>Sunny</cell><cell>Hot</cell><cell>High</cell><cell>Strong</cell><cell>C 2</cell></row><row><cell>Overcast</cell><cell>Hot</cell><cell>High</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Rain</cell><cell>Mild</cell><cell>High</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Rain</cell><cell>Cool</cell><cell>Normal</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Rain</cell><cell>Cool</cell><cell>Normal</cell><cell>Strong</cell><cell>C 2</cell></row><row><cell>Overcast</cell><cell>Cool</cell><cell>Normal</cell><cell>Strong</cell><cell>C 1</cell></row><row><cell>Sunny</cell><cell>Mild</cell><cell>High</cell><cell>Weak</cell><cell>C 2</cell></row><row><cell>Sunny</cell><cell>Cool</cell><cell>Normal</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Rain</cell><cell>Mild</cell><cell>Normal</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Sunny</cell><cell>Mild</cell><cell>Normal</cell><cell>Strong</cell><cell>C 1</cell></row><row><cell>Overcast</cell><cell>Mild</cell><cell>High</cell><cell>Strong</cell><cell>C 1</cell></row><row><cell>Overcast</cell><cell>Hot</cell><cell>Normal</cell><cell>Weak</cell><cell>C 1</cell></row><row><cell>Rain</cell><cell>Mild</cell><cell>High</cell><cell>Strong</cell><cell>C 2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc></figDesc><table><row><cell>Instance i 1 !</cell><cell></cell><cell></cell><cell></cell></row><row><cell>p 0 outlook</cell><cell>p 0 temp</cell><cell>p 0 humidity</cell><cell>p 0 wind</cell></row><row><cell>Sunny 1</cell><cell>Hot 1</cell><cell>High 1</cell><cell>Strong 0</cell></row><row><cell>Overcast 0.5</cell><cell>Mild 1</cell><cell>Normal 0.5</cell><cell>Weak 1</cell></row><row><cell>Rain 0.7</cell><cell>Cool 0.4</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4</head><label>4</label><figDesc></figDesc><table><row><cell>Description of databases</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Database</cell><cell># Data</cell><cell># Attributes</cell><cell># Classes</cell></row><row><cell>Wisconsin breast cancer</cell><cell>699</cell><cell>8</cell><cell>2</cell></row><row><cell>Voting</cell><cell>497</cell><cell>16</cell><cell>2</cell></row><row><cell>Solar flare</cell><cell>1389</cell><cell>10</cell><cell>3</cell></row><row><cell>Balance scale</cell><cell>625</cell><cell>4</cell><cell>3</cell></row><row><cell>Nursery</cell><cell>12 960</cell><cell>8</cell><cell>5</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc>Results for C4.5 and NS-PDT (MPCC and standard deviation)</figDesc><table><row><cell>Database</cell><cell>Method</cell><cell>L = 0%</cell><cell>L = 10%</cell><cell>L = 20%</cell><cell>L = 30%</cell><cell>L = 40%</cell><cell>L = 50%</cell></row><row><cell>W.B. cancer</cell><cell>C4.5-U</cell><cell>94.54(1.1)</cell><cell>93.86(1.4)</cell><cell>91.63(2.3)</cell><cell>91.05(2.5)</cell><cell>90.49(2.8)</cell><cell>90.11(3.2)</cell></row><row><cell></cell><cell>C4.5-P</cell><cell>95.26(1.2)</cell><cell>94.45(1.4)</cell><cell>93.10(2.1)</cell><cell>92.63(2.5)</cell><cell>92.11(2.6)</cell><cell>90.23(3.2)</cell></row><row><cell></cell><cell>NS-PDT</cell><cell>93.94(1.2)</cell><cell>93.85(1.2)</cell><cell>93.16(1.7)</cell><cell>92.32(2.2)</cell><cell>92.13(2.3)</cell><cell>91.78(2.5)</cell></row><row><cell>Voting</cell><cell>C4.5-U</cell><cell>94.56(3.2)</cell><cell>93.42(3.2)</cell><cell>92.23(3.5)</cell><cell>90.15(3.8)</cell><cell>89.59(4.3)</cell><cell>87.27(4.6)</cell></row><row><cell></cell><cell>C4.5-P</cell><cell>95.57(3.0)</cell><cell>94.12(3.2)</cell><cell>92.58(3.4)</cell><cell>91.74(3.5)</cell><cell>90.31(3.7)</cell><cell>88.59(4.1)</cell></row><row><cell></cell><cell>NS-PDT</cell><cell>93.86(3.0)</cell><cell>93.15(3.1)</cell><cell>92.76(3.3)</cell><cell>92.43(3.4)</cell><cell>90.82(3.7)</cell><cell>89.88(3.9)</cell></row><row><cell>Solar flare</cell><cell>C4.5-U</cell><cell>81.96(3.3)</cell><cell>80.38(3.5)</cell><cell>78.68(3.5)</cell><cell>77.03(3.7)</cell><cell>76.67(3.7)</cell><cell>74.37(3.9)</cell></row><row><cell></cell><cell>C4.5-P</cell><cell>82.42(3.1)</cell><cell>81.14(3.0)</cell><cell>80.56(3.3)</cell><cell>78.27(3.3)</cell><cell>76.89(3.7)</cell><cell>75.17(3.7)</cell></row><row><cell></cell><cell>NS-PDT</cell><cell>81.37(3.0)</cell><cell>80.79(3.1)</cell><cell>80.21(3.3)</cell><cell>79.63(3.4)</cell><cell>78.55(3.4)</cell><cell>76.38(3.6)</cell></row><row><cell>Balance</cell><cell>C4.5-U</cell><cell>78.48(4.2)</cell><cell>77.12(4.3)</cell><cell>75.39(4.7)</cell><cell>74.78(5.3)</cell><cell>72.42(5.6)</cell><cell>70.38(5.7)</cell></row><row><cell></cell><cell>C4.5-P</cell><cell>74.48(4.0)</cell><cell>74.12(4.2)</cell><cell>73.77(4.4)</cell><cell>73.19(4.9)</cell><cell>72.32(5.2)</cell><cell>69.81(5.3)</cell></row><row><cell></cell><cell>NS-PDT</cell><cell>78.18(4.2)</cell><cell>77.86(4.2)</cell><cell>76.12(4.3)</cell><cell>75.63(4.7)</cell><cell>75.32(4.8)</cell><cell>74.84(5.0)</cell></row><row><cell>Nursery</cell><cell>C4.5-U</cell><cell>98.78(0.8)</cell><cell>96.38(1.3)</cell><cell>95.27(1.4)</cell><cell>94.45(1.6)</cell><cell>93.73(2.3)</cell><cell>92.81(2.6)</cell></row><row><cell></cell><cell>C4.5-P</cell><cell>97.05(1.1)</cell><cell>94.22(1.1)</cell><cell>91.73(1.2)</cell><cell>91.13(1.5)</cell><cell>90.42(2.3)</cell><cell>90.13(2.3)</cell></row><row><cell></cell><cell>NS-PDT</cell><cell>97.72(1.1)</cell><cell>97.42(1.1)</cell><cell>97.21(1.3)</cell><cell>97.03(1.3)</cell><cell>96.51(1.4)</cell><cell>95.27(2.3)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc>NS-PDT: Mean PCC_dist and standard deviation</figDesc><table><row><cell>L%</cell><cell>0%</cell><cell>10%</cell><cell>20%</cell><cell>30%</cell><cell>40%</cell><cell>50%</cell></row><row><cell>W.B. cancer</cell><cell>95.56(0.8)</cell><cell>95.23(0.9)</cell><cell>94.56(0.9)</cell><cell>94.11(1.1)</cell><cell>93.28(1.5)</cell><cell>93.17(1.5)</cell></row><row><cell>Voting</cell><cell>95.57(2.7)</cell><cell>95.12(2.7)</cell><cell>94.73(2.9)</cell><cell>93.65(3.1)</cell><cell>92.88(3.3)</cell><cell>92.25(3.3)</cell></row><row><cell>Solar flare</cell><cell>84.27(1.4)</cell><cell>83.68(1.6)</cell><cell>82.54(1.6)</cell><cell>82.12(1.7)</cell><cell>81.44(2.0)</cell><cell>80.79(2.3)</cell></row><row><cell>Balance scale</cell><cell>82.83(0.6)</cell><cell>82.42(0.7)</cell><cell>81.93(0.9)</cell><cell>80.75(1.1)</cell><cell>80.18(1.1)</cell><cell>78.71(1.4)</cell></row><row><cell>Nursery</cell><cell>98.34(0.9)</cell><cell>97.75(1.2)</cell><cell>96.97(1.3)</cell><cell>96.51(1.3)</cell><cell>95.69(1.4)</cell><cell>95.26(1.6)</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>We would like to thank the editor and the anonymous reviewers for their constructive comments which have helped us to improve the paper considerably.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Upper entropy of credal sets. Applications to credal classification</title>
		<author>
			<persName><forename type="first">J</forename><surname>Abellan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Approximate Reasoning</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="235" to="255" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Qualitative classification and evaluation in possibilistic decision trees</title>
		<author>
			<persName><forename type="first">N</forename><surname>Ben Amor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Benferhat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Elouedi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Fuzzy Systems (FUZZ-IEEE&apos;04)</title>
		<meeting>the IEEE International Conference on Fuzzy Systems (FUZZ-IEEE&apos;04)<address><addrLine>Budapest, Hungary</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="653" to="657" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Fuzzy Sets in Approximate Reasoning and Information Systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Bezdek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Prade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">The Handbooks of Fuzzy Sets Series</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Kluwer Academic Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Concepts for probabilistic and possibilistic induction of decision trees on real world data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Borgelt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gebhardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kruse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th European Congress on Fuzzy and Intelligent Technologies (EUFIT&apos;96)</title>
		<meeting>the 4th European Congress on Fuzzy and Intelligent Technologies (EUFIT&apos;96)<address><addrLine>Aachen</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="1556" to="1560" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Breiman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Olshen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Stone</surname></persName>
		</author>
		<title level="m">Classification and Regression Trees</title>
		<meeting><address><addrLine>Monterey, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Wadsworth &amp; Brooks</publisher>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Buntine</surname></persName>
		</author>
		<title level="m">Artificial Intelligence Frontiers in Statistics</title>
		<editor>
			<persName><forename type="first">D</forename><surname>Hand</surname></persName>
		</editor>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Chapman &amp; Hall publishers</publisher>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="182" to="201" />
		</imprint>
	</monogr>
	<note>Learning classification trees</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Growing a tree classifier with imprecise data</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ciampi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Diday</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lebbe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pe ´rinel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vignes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="787" to="803" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A k-nearest neighbor classification rule based on Dempster-Shafer theory</title>
		<author>
			<persName><forename type="first">T</forename><surname>Denoeux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">05</biblScope>
			<biblScope unit="page" from="804" to="813" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A neural network classifier based on Dempster-Shafer theory</title>
		<author>
			<persName><forename type="first">T</forename><surname>Denoeux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics, Part A</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="131" to="150" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Induction of decision trees from partially classified data</title>
		<author>
			<persName><forename type="first">T</forename><surname>Denoeux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Skarstein-Bjanger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2000 IEEE International Conference on Systems, Man and Cybernetics (SMC&apos;00)</title>
		<meeting>the 2000 IEEE International Conference on Systems, Man and Cybernetics (SMC&apos;00)<address><addrLine>Nashville, TN</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="2923" to="2928" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Handling possibilistic labels in pattern classification using evidential reasoning</title>
		<author>
			<persName><forename type="first">T</forename><surname>Denoeux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">122</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="47" to="62" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<author>
			<persName><forename type="first">D</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Prade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Unfair coins and necessity measures: towards a possibilistic interpretation of histograms</title>
		<imprint>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="15" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Prade</surname></persName>
		</author>
		<title level="m">Possibility Theory: An Approach to Computerized Processing of Uncertainty</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Plenum Press</publisher>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Representation and combination of uncertainty with belief functions and possibility measures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Prade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Intelligence</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="244" to="264" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Decision trees using the belief function theory</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Elouedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mellouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smets</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Information Processing and Management of Uncertainty in Knowledge-Based Systems (IPMU&apos;2000)</title>
		<meeting>the International Conference on Information Processing and Management of Uncertainty in Knowledge-Based Systems (IPMU&apos;2000)<address><addrLine>Madrid, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Belief decision trees: theoretical foundations</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Elouedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mellouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smets</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Approximate Reasoning</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="91" to="124" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On the handling of continuous-valued attributes in decision tree generation</title>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">M</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">B</forename><surname>Irani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="87" to="102" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Lazy decision trees</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kohavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th National Conference on Artificial Intelligence</title>
		<meeting>the 13th National Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="717" to="724" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Learning possibilistic networks from data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gebhardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kruse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Workshop on Artificial Intelligence and Statistics</title>
		<meeting>the 5th International Workshop on Artificial Intelligence and Statistics<address><addrLine>Fort Lauderdale</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="233" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Harmanec</surname></persName>
		</author>
		<ptr target="&lt;http://www.sipta.org&gt;" />
		<title level="m">Measures of uncertainty and information</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Transmission of information</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Hartley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell System Technical Journal</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="535" to="563" />
			<date type="published" when="1928">1928</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Measures of uncertainty and information based on possibility distributions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Higashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Klir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of General Systems</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="58" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Possibilistic induction in decision tree learning</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hu ¨llermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th European Conference on Machine Learning (ECML&apos;02)</title>
		<meeting>the 13th European Conference on Machine Learning (ECML&apos;02)<address><addrLine>Helsinki, Finland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="173" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Possibilistic instance-based learning</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hu ¨llermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">148</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="335" to="383" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fuzzy methods in machine learning and data mining: status and prospects</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hu ¨llermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">156</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="387" to="406" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Fuzzy decision trees: issues and methods</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Z</forename><surname>Janikow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man and Cybernetics-Part B: Cybernetics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="14" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Qualitative inference in possibilistic option decision trees</title>
		<author>
			<persName><forename type="first">I</forename><surname>Jenhani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Elouedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ben Amor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mellouli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th European Conference in Symbolic and Quantitative Approaches to Reasoning with Uncertainty (ECSQARU&apos;05)</title>
		<meeting>the 8th European Conference in Symbolic and Quantitative Approaches to Reasoning with Uncertainty (ECSQARU&apos;05)<address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="944" to="955" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Fuzzy lattice reasoning (FLR) classifier and its application for ambient ozone estimation</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">G</forename><surname>Kaburlasos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">N</forename><surname>Athanasiadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">A</forename><surname>Mitkas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Approximate Reasoning</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="152" to="188" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Klir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A</forename><surname>Folger</surname></persName>
		</author>
		<title level="m">Fuzzy Sets, Uncertainty, and Information</title>
		<meeting><address><addrLine>Englewood Cliffs, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Uncertainty-Based Information: Elements of Generalized Information Theory</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Klir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Wierman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Studies in Fuzziness and Soft Computing</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Option decision trees with majority votes</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kohavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kunz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Machine Learning (ICML&apos;97)</title>
		<meeting>the 14th International Conference on Machine Learning (ICML&apos;97)<address><addrLine>Nashville, TN, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="161" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Kruse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gebhardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Klawonn</surname></persName>
		</author>
		<title level="m">Foundations of Fuzzy Systems</title>
		<meeting><address><addrLine>Chichester</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley and Sons</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Uncertain, incomplete, and inconsistent data in scientific and statistical databases</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kwan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Olken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rotem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Uncertainty Management in Information Systems: From Needs to Solutions</title>
		<meeting>the Workshop on Uncertainty Management in Information Systems: From Needs to Solutions<address><addrLine>Mallorca, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="64" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Decision tree search methods in fuzzy modeling and classification</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">F</forename><surname>Mendonc ßa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Vieira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M C</forename><surname>Sousa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Approximate Reasoning</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="106" to="123" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Sources of uncertainty, imprecision and inconsistency in information systems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Motro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Uncertainty Management in Information Systems: From Needs to Solutions</title>
		<meeting>the Workshop on Uncertainty Management in Information Systems: From Needs to Solutions</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="9" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Moulin</surname></persName>
		</author>
		<title level="m">Axioms for Cooperative Decision-making</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">UCI repository of machine learning databases</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Aha</surname></persName>
		</author>
		<ptr target="&lt;http://mlearn.ics.uci.edu/MLRepository.html&gt;" />
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A complete fuzzy decision tree technique</title>
		<author>
			<persName><forename type="first">C</forename><surname>Olaru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wehenkel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">138</biblScope>
			<biblScope unit="page" from="221" to="254" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">The design of decision trees in the framework of granular data and their application to software quality models</title>
		<author>
			<persName><forename type="first">W</forename><surname>Pedrycz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">A</forename><surname>Sosnowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="page" from="271" to="290" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Decision tree learning with fuzzy labels</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Quin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lawry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">172</biblScope>
			<biblScope unit="page" from="91" to="129" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Induction of decision trees</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Quinlan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="81" to="106" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Decision trees as probabilistic classifiers</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Quinlan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Workshop on Machine Learning</title>
		<meeting>the 4th International Workshop on Machine Learning</meeting>
		<imprint>
			<date type="published" when="1987">1987</date>
			<biblScope unit="page" from="31" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Quinlan</surname></persName>
		</author>
		<title level="m">C4.5: Programs for Machine Learning</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">The mathematical theory of communication, The Bell system</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Shannon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technical Journal</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="379" to="423" />
			<date type="published" when="1948">1948</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">The transferable belief model</title>
		<author>
			<persName><forename type="first">P</forename><surname>Smets</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kennes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="page" from="191" to="234" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Pruning belief decision tree methods in averaging and conjunctive approaches</title>
		<author>
			<persName><forename type="first">S</forename><surname>Trabelsi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Elouedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mellouli</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.ijar.2007.02.004</idno>
	</analytic>
	<monogr>
		<title level="j">International Journal of Approximate Reasoning</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Handling uncertain labels in multiclass problems using belief decision trees</title>
		<author>
			<persName><forename type="first">P</forename><surname>Vannoorenbergue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Denoeux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth International Conference on Information processing and Management of Uncertainty in Knowledge-Based systems (IPMU&apos;02)</title>
		<meeting>the Ninth International Conference on Information processing and Management of Uncertainty in Knowledge-Based systems (IPMU&apos;02)<address><addrLine>Annecy, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-07">July 2002</date>
			<biblScope unit="volume">III</biblScope>
			<biblScope unit="page" from="1919" to="1926" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">Statistical Reasoning with Imprecise Probabilities</title>
		<author>
			<persName><forename type="first">P</forename><surname>Walley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Chapman and Hall</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Computer Systems that Learn</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Kulikovski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Morgan Kaufman</publisher>
			<pubPlace>San Mateo, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">H</forename><surname>Witten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Frank</surname></persName>
		</author>
		<title level="m">Data Mining: Practical Machine Learning Tools and Techniques</title>
		<imprint>
			<publisher>Morgan Kaufman publishers</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>second ed.</note>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">On the specificity of a possibility distribution</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Yager</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="279" to="292" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Induction of fuzzy decision trees</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Shaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="125" to="139" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Fuzzy sets as a basis for a theory of possibility</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Zadeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fuzzy Sets and Systems</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="3" to="28" />
			<date type="published" when="1978">1978</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Implementing imprecision in information systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zemankova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kandel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1-3</biblScope>
			<biblScope unit="page" from="7" to="141" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
