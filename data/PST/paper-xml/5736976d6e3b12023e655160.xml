<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mininet-WiFi: Emulating Software-Defined Wireless Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ramon</forename><forename type="middle">R</forename><surname>Fontes</surname></persName>
							<email>ramonrf@dca.fee.unicamp.br</email>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical and Computer Engineering (FEEC)</orgName>
								<orgName type="institution">University of Campinas (UNICAMP</orgName>
								<address>
									<settlement>Campinas, Sao Paulo</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Samira</forename><surname>Afzal</surname></persName>
							<email>samira@dca.fee.unicamp.br</email>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical and Computer Engineering (FEEC)</orgName>
								<orgName type="institution">University of Campinas (UNICAMP</orgName>
								<address>
									<settlement>Campinas, Sao Paulo</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Mateus</roleName><forename type="first">Samuel</forename><forename type="middle">H B</forename><surname>Brito</surname></persName>
							<email>shbbrito@dca.fee.unicamp.br</email>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical and Computer Engineering (FEEC)</orgName>
								<orgName type="institution">University of Campinas (UNICAMP</orgName>
								<address>
									<settlement>Campinas, Sao Paulo</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Santos</surname></persName>
							<email>msantos@dca.fee.unicamp.br</email>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical and Computer Engineering (FEEC)</orgName>
								<orgName type="institution">University of Campinas (UNICAMP</orgName>
								<address>
									<settlement>Campinas, Sao Paulo</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Christian</forename><forename type="middle">Esteve</forename><surname>Rothenberg</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical and Computer Engineering (FEEC)</orgName>
								<orgName type="institution">University of Campinas (UNICAMP</orgName>
								<address>
									<settlement>Campinas, Sao Paulo</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mininet-WiFi: Emulating Software-Defined Wireless Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">037CDC641026EB549FF91F5026DC7A20</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Wireless networks</term>
					<term>Emulation</term>
					<term>SDN</term>
					<term>OpenFlow</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>As the density of wireless networks continues to grow with more clients, more base stations, and more traffic, designing cost-effective wireless solutions with efficient resource usage and ease to manage is an increasing challenging task due to the overall system complexity. A number of vendors offer scalable and high-performance wireless networks but at a high cost and commonly as a single-vendor solution, limiting the ability to innovate after roll-out. Recent Software-Defined Networking (SDN) approaches propose new means for network virtualization and programmability advancing the way networks can be designed and operated, including user-defined features and customized behaviour even at run-time. However, means for rapid prototyping and experimental evaluation of SDN for wireless environments are not yet available. This paper introduces Mininet-WiFi as a tool to emulate wireless OpenFlow/SDN scenarios allowing high-fidelity experiments that replicate real networking environments. Mininet-WiFi augments the well-known Mininet emulator with virtual wireless stations and access points while keeping the original SDN capabilities and the lightweight virtualization software architecture. We elaborate on the potential applications of Mininet-Wifi and discuss the benefits and current limitations. Two use cases based on IEEE 802.11 demonstrate available functionality in our open source developments.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Network emulation <ref type="bibr" target="#b0">[1]</ref> is a widely used technique to evaluate performance, test and debug protocols as well as support multiple network-related research issues. At a fraction of the cost of real testbeds and different than simulations, emulation allows running real code in realistic networking and computing conditions. In support of research on Software-Defined Networking (SDN) <ref type="bibr" target="#b1">[2]</ref> architectures, the Mininet emulator <ref type="bibr" target="#b2">[3]</ref> allows rich experiments and fast prototyping cycles, which are especially interesting for teaching, research and reproducibility purposes in academia as well as pre-deployment evaluation of "exactly" the same SDN control software to be later used in production (e.g., BSN Labs, 1 Google B4 <ref type="bibr">[4]</ref>).</p><p>When it comes to the experimentation of SDN and the OpenFlow protocol <ref type="bibr" target="#b4">[5]</ref> in wireless networks, only a few alternatives are available based on popular simulators (e.g., NS-3 2  and OMNet++ <ref type="bibr" target="#b5">[6]</ref> engines). In order to validate the concepts and experimentally evaluate the benefits of Software-Defined Wireless Networks (SDWN) <ref type="bibr" target="#b6">[7]</ref>, a suitable emulation tool is 1 http://www.bigswitch.com/press-releases/2015/02/19/big-switchs-bsn-labsnow-available-for-free-hands-on-experience-with-sdn 2 https://www.nsnam.org/docs/models/html/wifi.html needed. Likewise to the wired SDN experiences, a wireless SDN emulator tool becomes fundamental to prototype, test and benchmark new protocols, end-to-end network architectures and applications.</p><p>In order to fill this gap, this paper presents Mininet-WiFi, a fork of Mininet extended to support WiFi by adding virtualized WiFi Stations (STAs) and Access Points (APs) based on the most common Linux wireless device driver, namely mac80211/SoftMac<ref type="foot" target="#foot_0">3</ref> . The majority of Linux wireless drivers today use mac80211/SoftMac, which supports most of the features provided by wireless NICs and allows Mininet-WiFi to exercise fine-grained control over wireless network packets at a low layer. Mininet-Wifi is being developed as a clean extension of the high-fidelity Mininet emulator by adding the new abstractions and classes to support wireless NICs and emulated links while conserving all native lightweight virtualization and OpenFlow/SDN features. As a proof of concept of our initial round of SDWN experiments with Mininet-Wifi, this paper describes (1) a use case on OpenFlow-based bicasting over two 802.11 APs, (2) a use case featuring the integration with physical wireless NICs, and (3) Mobility.</p><p>The remainder of this paper is organized as follows. Section 2 provides background on SDWN and introduces relevant concepts to understand the applicability and relevance of our work. Section 3 describes the system architecture of Mininet-WiFi. Section 4 describes some case studies. Section 5 discusses current limitations and the ongoing/future work. Section 6 describes related work, and, finally, Section 7 concludes the paper with some final thoughts and motivates the reader to follow the developments in the open source code repository.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. SOFTWARE-DEFINED WIRELESS NETWORKING</head><p>Software-Defined Networking (SDN) <ref type="bibr" target="#b1">[2]</ref> is a recent networking paradigm based on a programmatic separation of the control plane (aka. Network OS) from the data plane (aka. forwarding plane). SDN allows network administrators to specify the behavior of the network in a logically centralized manner via the controller platform that leverages southbound interfaces to the forwarding devices -the OpenFlow protocol being the most popular one. In the same spirit, Software-Defined Wireless Networks (SDWN) <ref type="bibr" target="#b6">[7]</ref> aims at providing programmatic centralized control of the network outside the wireless boxes (APs) which enforce the received instructions (policy decisions) and remain responsible for the transmission and reception of the traffic over the wireless link.</p><p>Separation of both control and data plane has existed in the wireless domain prior to SDN and OpenFlow. IETF standardized the Control and Provisioning of Wireless Access Points (CAPWAP) protocol <ref type="bibr" target="#b7">[8]</ref> several years ago, which centralizes the control in wireless networks, allowing ACs (access controllers) to manage WTPs (wireless termination points) over a wireless network. Besides, there are multiple proprietary solutions (e.g., Aerohive, Aruba, Cisco HDX, Meraki, Ruckus) based on external controllers responsible for the management of the APs. These commercial solutions introduce a number of extensions to standardized protocols or define their own APIs between the controller and APs, and present differences in the refactoring of control and data plane functions in addition to a series of proprietary radio resource enhancements. While all these solutions have proven to work well at scale, their cost is often prohibitive for many deployments and raise concerns due to their closely integrated nature and the consequent vendor lock-in and inability for in-house or third-party innovations.</p><p>SDWN has become an emerging and significant research branch of SDN <ref type="bibr" target="#b8">[9]</ref>- <ref type="bibr" target="#b10">[11]</ref>, including increased attention of mobile network operators <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref> and the identified synergies to Network Function Virtualisation (NFV) <ref type="bibr" target="#b13">[14]</ref>.</p><p>In its current form, OpenFlow does not address specific needs of WiFi protocols and networks, which include interference mitigation, mobility management, and channel selection techniques <ref type="bibr" target="#b14">[15]</ref>. Ongoing work at the Open Networking Foundation (ONF) Wireless &amp; Mobile Working Group (WMWG)<ref type="foot" target="#foot_1">4</ref> may change the picture in the near future.</p><p>As today, the only realistic way to try out WiFi and Open-Flow together is using open source firmware and OS solutions like OpenWRT that allow turning commodity wireless routers into OpenFlow-enabled switches. However, even OpenWRT is constrained to a limited set of resources, and, like any real testbed, this approach is subject to challenges on the scale of the experiments, the control and reproducibility options as well as the high setup times.</p><p>Wireless SDN emulators, on the other hand, would be an interesting option to work with multiple devices (both APs and STAs) at reasonable scale on experimenter-defined environments, allowing research on new SDWN features in addition to the fast prototyping and rich experimentation benefits known by the large Mininet user community.</p><p>We envision that the Mininet-WiFi emulator has the potential to become an important tool for wireless SDN research by enabling real-world wireless network systems and (Linuxbased) end-user device software in a fully controlled environment yielding high fidelity results in support of SDWN research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MININET-WIFI DESIGN AND WORKFLOW</head><p>Delivering software-based wireless network emulation usually means to completely abandon wireless network hardware and performing the emulation on a per-packet level. The common ground across wireless network emulation approaches is that the wireless channel is replaced by an artificial model providing a convenient way to evaluate the wireless channel effects.</p><p>Currently Mininet-WiFi emulator uses basic Linux TC tools to emulate the wireless channel by setting link parameters such as packet loss, delay, and channel bandwidth. A more elaborated wireless model support is under ongoing work and left out of scope of this paper, which focuses on the underpinning software design and a set of strawman applications. More specifically, we added WiFi interfaces on STAs that now are able to connect to an AP through its (wlanX) interface that is bridged to an OpenFlow switch with AP capabilities represented by (ap1). Similar to Mininet, the virtual network is created by placing host processes in Linux OS network namespaces interconnected through virtual Ethernet (veth) pairs. The wireless interfaces to virtualize WiFi devices work on master mode for APs and managed mode for STA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Software Architecture and Implementation</head><p>Stations: Are devices that connect to an AP through authentication and association. In our implementation, each station has one wireless card (staX-wlan0 -where X shall be replaced by the number of each STA). Since the traditional Mininet hosts are connected to an AP, STAs are able to communicate with those hosts.</p><p>Access Points: Are devices that manage associated stations. Virtualized through hostapd 5 daemon and use virtual wireless interfaces for access point and authentication servers. While virtualized APs do not have (yet) APIs allowing users to configure several parameters in the same fashion of a real one, the current implementation covers the most important features, for example ssid, channel, mode, password, cryptography, etc. Both STAs and APs use cfg80211 to communicate with the wireless device driver, a Linux 802.11 configuration API that provides communication between STAs and mac80211. This framework in turn communicates directly with the WiFi device driver through a netlink socket (or more specifically nl80211) that is used to configure the cfg80211 device and for kernel-user-space communication as well. Besides all OpenvSwitch (OVS) related commands, Mininet-WiFi supports commands related to iw 6 : sta1 iw dev sta1-wlan0 scan to scan for available access points, and sta1 iw dev sta1-wlan0 connect my-ssid to connect to the access point which has the same SSID. Being a runtime emulator Mininet-WiFi allows the user to add new Stations to the topology on demand, however, there is one important factor to be considered: the command --radios needs to be used besides the --wifi command (e.g., mn --wifi --radios=5), since the system needs to know how many radios (stations and access points) should be handled before starting the topology. These commands are relevant in case of experiments with dynamic topologies that add/remove stations to the network topology.</p><p>To verify the connectivity between stations and access points on Mininet-WiFi the user can type the following CLI command: sta1 ping sta2. Common Linux commands can be executed by the user at runtime, for instance to verify the available bandwidth between two stations between stations sta1 and sta2: sta1 iperf -s &amp; sta2 iperf -c 10.0.0.1.  addStation("sta1") addBaseStation("ap1", ssid="new ssid", channel="10", mode="g") addLink(ap1,sta1)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>In addition to the default Mininet addHost and addSwitch classes, Mininet-Wifi provides addStation</head><p>The addStation class allows the user to add a new station to the topology and the addBaseStation class allows to customize the device with SSID, channel and mode configuration. The class name addBaseStation has chosen on purpose due to the intention of extending Mininet-WiFi to further mobile wireless technologies in the future. Finally, the addLink class instantiates the association between STAs and APs, which in the current implementation is based on user-defined static configuration of Linux TC to control the wireless channel properties (e.g., bw='54Mbps', loss='0.1%', delay='15ms').</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. System Profiling</head><p>An important aspect of any emulation tool is its performance and ability to scale. In general, Mininet-WiFi inherits the same performance and scalability properties of Mininet, but it also adds new features and there are other metrics that need to be considered for system profiling purposes. We measured the time required for some management operations of virtual WiFi interfaces in the Linux kernel <ref type="bibr">(3.19.10-18)</ref>, iw utility, and hostapd startup/shutdown operations. Table <ref type="table">1</ref> shows the time consumed by individual operations when building a simple topology with two STAs and one AP.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Use Case 1: Wireless Bicasting</head><p>In order to illustrate the potential of Mininet-WiFi to carry and reproduce experiments from the literature, this use cases demonstrates a bicasting over wireless scenario inspired by the work in <ref type="bibr" target="#b16">[17]</ref>. The real experiment consisted of a video streaming application running in a mobile station and receiving the packet flow over multiple radios simultaneously (n-casting) -the mobile station, equipped with two WiFi and one WiMax interface, was attached to multiple APs using the same SSID. OpenFlow was used to duplicate packets in the wired network and re-write the L2/L3 headers at the radio access points. As a result, the quality of experience was improved, since the packet loss over a radio link was compensated by the duplicated stream received over the alternative radio(s).</p><p>In the scenario shown in Fig <ref type="figure" target="#fig_8">3(a)</ref>, we use Iperf to measure the bandwidth between STA1 and H1 during 60s. STA1 has two wireless interfaces and both interfaces are connected to different APs (AP1 and AP2), which are connected to an OpenFlow controller as well as the switch S1. OpenFlow rules ensure that packets are copied and sent through the different paths to the stations.</p><p>During the first 20s the measured bandwidth is about 90Mbps, which seems coherent with the 54Mbps limit of each interface in mode g. When the time reaches 20s one wireless interface is disconnected (from AP2) causing a traffic decrease, but increase again when the same wireless interface is connected to AP2 at 40s (Fig. <ref type="figure" target="#fig_8">3(b)</ref>).</p><p>While the experiment is a strawman effort that oversimplifies properties from the wireless channels, it serves as a proof of concept of the feasibility and flexibility of Mininet-WiFi in enabling multiple simultaneous WiFi connections and traffic control through OpenFlow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Use Case 2: Integration with Physical Wireless Interface</head><p>In this use case, we leverage a USB wireless card connected to a PC running Mininet-WiFi (Fig. <ref type="figure" target="#fig_9">4</ref>) to illustrate how    physical wireless interfaces can be integrated into Mininet-WiFi.</p><p>The process of turning a physical wireless interface to behave like an AP can be done by different means and this experiment uses hostapd. The following lines are used to change the wireless interface to behave like an AP:</p><formula xml:id="formula_0">interface=wlan1 ssid=Mininet-WiFi-AP hw mode=g channel=7</formula><p>This code snippet is stored in a simple txt file and executed in a terminal. After running the code, a mobile device can be connected to this AP and a single Mininet-Wifi topology is instantiated with the command mn -wifi. Then, a bridge is created (ovs-vsctl add-port ap1 wlan1) to allow the interface wlan1 (usb wireless physical interface) communicate with the virtualized Mininet-WiFi environment. Finally, virtual STAs (running inside Mininet-WiFi environment) and the physical mobile device can communicate with each other, as can be seen in the companion video material. <ref type="foot" target="#foot_3">7</ref>C. Use Case 3: Mobility Basic mobility support allows users to configure parameters such as time and also initial and final positions to provide mobility. Figure <ref type="figure" target="#fig_12">5</ref>(a) illustrates an AP1 and two moving STAs. The signal range of AP1 depends of the mode (e.g., b, g, n), and when STA1 exceeds this limit the association from AP1 is broken.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. LIMITATIONS AND FUTURE WORK</head><p>Mininet-WiFi inherits any limitations of the lightweight virtualization Mininet architecture and certainly adds a couple of more related to our current approach to emulate the wireless medium with high-fidelity. We are on the process of collecting information to find and evaluate all limitations to be documented in the github repository.</p><p>Our ongoing efforts are devoted to relevant missing features pointed by early users of Mininet-WiFi. Probably the most challenging research and development effort upfront is an abstraction for the wireless broadcast links with good enough fidelity, supporting dynamic reconfiguration of link parameters to consider the effects of interference, signal strength depending on node distances, among others. Also on our roadmap is advancing the mobility support and validate the implemented models. On all these fronts, we intend to leverage as much as possible from related open source work (e.g. NS-3 models) and lessons from the vast literature on wireless research.</p><p>A future experimenter-friendly feature we foresee is allowing emulated experiments be based on trace-based approaches <ref type="bibr" target="#b17">[18]</ref> towards reproducing the behavior of a real network inside of Mininet-WiFi according to previously captured traces. Challenges upfront include the ability to capture, interpret, and process traces to produce reliable (high-fidelity) results.</p><p>On the software-defined front, we intend to move beyond traditional (packets-and flow-based) traffic manipulation and allow the SDWN controller (via OpenFlow extensions or alternative southbound interfaces) to dynamically re-configure Access Points (e.g., Ethanol <ref type="bibr" target="#b18">[19]</ref>), exploring alternative offerings to the closed solutions commercialized by the industry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. RELATED WORK</head><p>Experimental tools to evaluate new designs are key to support academic and industrial research one new networking technologies, troubleshooting, change planning of deployed networks, and so on. Hence, wireless simulators, emulators, and new testbeds have received a lot of attention. Related work on wireless experimentation environments is presented in Fig. <ref type="figure" target="#fig_3">6</ref> which tries to illustrate the fundamental differences between each type of platform, pointing to emulators as a sweet spot when compared to hardware-based testbeds (fast, accurate, shared, expensive) and simulators (cheap, detailed, often slow and requiring code changes) <ref type="bibr" target="#b19">[20]</ref>.</p><p>When looking into existing emulators such as Estinet <ref type="bibr" target="#b20">[21]</ref>, Emane <ref type="foot" target="#foot_4">8</ref> and Core <ref type="bibr" target="#b21">[22]</ref>, the first one is capable to simulate and emulate wireless networks, the last two focus only on MANET networks, and the first one is a commercial solution and thus does not provide the flexibility of source-code level modification and extensibility. Mininet-WiFi, in turn, is open source code and aims at supporting any type of WiFi networking.</p><p>In the popular NS-3 simulator, support of 802.11 includes both MAC and PHY layers simulation models for 802.11a, 802.11b, 802.11g and 802.11n (both 2.4 and 5 GHz bands) networks as well as infrastructure and adhoc scenarios. Closest to our emulation efforts are the NS-3 realworld integration features like real-time/emulation mode and DCE <ref type="bibr" target="#b22">[23]</ref>. However, seamless support of unmodified POSIX code is not broadly possible and very specific to the target application and libraries, in addition to real-time constraints along performance and scalability concerns. A related Mininet effort 9 adds wireless link modeling by gluing together NS-3 processes and Linux tap devices. Unfortunately, as far as we can infer from the public repositories, the project seems to be inactive since 2013. OpenNet <ref type="bibr" target="#b23">[24]</ref> is another recent attempt to partner Mininet with NS-3 by implementing WiFi scan mechanisms that enable experiments with layer-2 handover of mobile nodes between two OpenFlow-enabled APs operating on two different channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>The widespread and popularity of wireless networks calls for novel control and management approaches that need to be prototyped and evaluated under realistic topology and networking conditions. Ideally, these controlled and experimenterfriendly environments should be affordable and yield high fidelity results. We believe that Mininet-WiFi is a promising step towards adding wireless research capabilities to the SDWN research toolbox. The results of our first release of Mininet-WiFi are quite encouraging. We believe that the current limitations are solvable in the near future and we will overcome the challenges towards a scalable and high-fidelity wireless emulator. Mininet-WiFi is ready to be tested and allows for OpenFlow and WiFi experiments. There is a growing user community that will hopefully contribute to the developments efforts through the publicly available Mininet-WiFi code repository at: https://github.com/intrig-unicamp/mininet-wifi.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Components and connections in a two-host network created with Mininet-WiFi.</figDesc><graphic coords="2,315.83,88.51,233.54,157.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1</head><label>1</label><figDesc>Figure1depicts the components and connections in a simple topology with two hosts created with Mininet-WiFi, where the newly implemented components (highlighted in gray) are presented along the original Mininet building blocks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>B. Creating a Network.To start Mininet-WiFi a simple command suffices (sudo mn --wifi) to bring up two Stations (sta1 and sta2) connected to an Access Point (ap1) configured with "my-ssid" as the default SSID of the wireless network. Additional parameters can be provided, including --ssid, --channel and --mode for customized setups. In addition to the CLI options, it is possible to build topologies based on some sample files that are in the examples directory, such as: (i) adhoc for experiments with adhoc mode, (ii) simplewifitopology to create exactly the same topology mentioned above with 2 STAs and 1 AP; (iii) wifiStationsAndHosts creates a topology with stations and hosts enabling communication between them; and (iv) 2AccessPoints to create a topology with STAs associated to different APs and allowing communication among all STAs. In addition, (v) wifiMobility and (vi) wifiMobilityModel provide sample mobility scenarios based on different well-known models (e.g., GaussMarkov, RandomDirection, RandomWalk, RandomWaypoint and Trun-catedLevyWalk). The aforementioned examples (and further provided by the community) are important facilitators to test and share new topologies, that can be reused between different experiments and among research groups.GUI. In addition to the CLI (Fig.2(a)), another option to work with Mininet-WiFi is using the complementary GUI tool (Fig. 2(b)) called Visual Network Description [16]. C. Customizing the network &amp; User interaction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>6 A</head><label>6</label><figDesc>tool for managing and configuring wireless devices and an alternative for iwconfig (a) Mininet-WiFi CLI. (b) Topology on Visual Network Description.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Alternatives to work with Mininet-WiFi.</figDesc><graphic coords="3,347.15,216.79,170.78,142.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>IV. CASE STUDIESThis section illustrates functionalities of Mininet-WiFi by means of three use cases, firstly on bicasting over wireless networks, secondly on integrating physical wireless interfaces, and the last one on mobility. In the context of SDWN, we expect Mininet-WiFi delivering significant and complementary advantages compared to simulation or testbed-based experimental approaches. The project repository includes links to a VM Disk and a Docker Image along user instructions to reproduce the use cases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Bandwidth Measurement between STA1 and H1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Bicasting over WiFi.</figDesc><graphic coords="4,325.91,466.51,213.26,160.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Physical wireless NIC integrated into Mininet-WiFi.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>Figure 5(b) shows the increase in response time response as the distance between the STAs and AP1 increases. Please refer to wifiMobility.py in order to reproduce this sample use case.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>(a) Mininet-WiFi Graph (optional). (b) Connectivity test.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Mobility within Mininet-WiFi.</figDesc><graphic coords="5,73.55,547.15,192.86,57.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I .</head><label>I</label><figDesc>TIME FOR BASIC MININET-WIFI OPERATIONS IN A BUILDING A SIMPLE TOPOLOGY WITH TWO STAS AND ONE AP.</figDesc><table><row><cell>Operation</cell><cell>Time(ms)</cell></row><row><cell cols="2">Create an AP 17</cell></row><row><cell cols="2">Create a STA 63</cell></row><row><cell cols="2">Association between two nodes 10</cell></row><row><cell>Starting mac80211 module</cell><cell>5</cell></row><row><cell cols="2">Stopping STAs and APs 350</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>http://linuxwireless.org/en/developers/Documentation/mac80211 978-3-901882-77-7 c 2015 IFIP</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>https://www.opennetworking.org/images/stories/downloads/workinggroups/charter-wireless-mobile.pdf</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>Hostapd (Host Access Point Daemon) user space software capable of turning normal wireless network interface cards into access points and authentication servers</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_3"><p>https://www.youtube.com/watch?v=WH6bSOKC7Lk</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_4"><p>http://www.nrl.navy.mil/itd/ncs/products/emane Fig.6.Overview of related work and trade-offs of different wireless experimental platforms.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This project was partially supported by FAPESP grant # 14/18482-4. Mateus A. S. Santos is currently with Ericsson Research.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Network emulation in the Vint/NS simulator</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Fall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th IEEE Symposium on Computers and Communication</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Software-defined networking: A comprehensive survey</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kreutz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">M V</forename><surname>Ramos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">E P</forename><surname>Verissimo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Rothenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Azodolmolky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Uhlig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>IEEE</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="volume">103</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A network in a laptop: rapid prototyping for software-defined networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Lantz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Heller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks, ser. HotnetsIX</title>
		<meeting>the 9th ACM SIGCOMM Workshop on Hot Topics in Networks, ser. HotnetsIX<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">B4: experience with a globally-deployed software defined wan</title>
		<author>
			<persName><forename type="first">Sushant</forename><surname>Jain</surname></persName>
		</author>
		<ptr target="https://github.com/mininet/mininet/wiki/Link-modeling-using-ns-3" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGCOMM 2013 conference on SIGCOMM</title>
		<meeting>the ACM SIGCOMM 2013 conference on SIGCOMM<address><addrLine>Hong Kong, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013">August 12-16, 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">OpenFlow: enabling innovation in campus networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Parulkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rexford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">6974</biblScope>
			<date type="published" when="2008-04">April 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The OMNeT++ Discrete Event Simulation System</title>
		<author>
			<persName><forename type="first">A</forename><surname>Varga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of the European Simulation Multiconference</title>
		<meeting><address><addrLine>Prague, Czech Republic</addrLine></address></meeting>
		<imprint>
			<publisher>ESM</publisher>
			<date type="published" when="2001-06-06">2001. June 6-9, 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Software Defined Wireless Networks: Unbridling SDNs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Costanzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Galluccio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Morabito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Palazzo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of EWSDN 2012. Darmstadt</title>
		<meeting>of EWSDN 2012. Darmstadt<address><addrLine>Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-10">October 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Control And Provisioning of Wireless Access Points (CAPWAP) Protocol Specification</title>
		<author>
			<persName><forename type="first">P</forename><surname>Calhoun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Montemurro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Stanley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RFC</title>
		<imprint>
			<biblScope unit="volume">5415</biblScope>
			<date type="published" when="2009-03">March 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Software-Defined Networking Paradigms in Wireless Networks: A Survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nachikethas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bhaskar</forename><surname>Jagadeesan</surname></persName>
		</author>
		<author>
			<persName><surname>Krishnamachari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="2015-01">January 2015</date>
			<publisher>CSUR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Softwaredefined and virtualized future mobile and wireless networks: A survey</title>
		<author>
			<persName><forename type="first">M</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Vasilakos</surname></persName>
		</author>
		<idno>CoRR, abs/1409.0079</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Survey on Wireless Software Defined Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shahila</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fizza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tahira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer and Communication System Engineering (IJCCSE)</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="155" to="159" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An architecture for software defined wireless networking</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bernardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="52" to="61" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Software-defined control of the virtualized mobile packet core</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Sama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Contreras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kaippallimalil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Akiyoshi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="107" to="115" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note>IEEE</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Network function virtualization: Challenges and opportunities for innovations</title>
		<author>
			<persName><forename type="first">Bo</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gopalakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ji</forename><surname>Lusheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seungjoon</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications Magazine, IEEE</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="90" to="97" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Programmatic Orchestration of WiFi Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Schulz-Zander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Suresh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sarrar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Feldmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Hhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Merz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">&apos;2014 USENIX Annual Technical Conference (USENIX ATC 14)&apos; , USENIX Association</title>
		<meeting><address><addrLine>Philadelphia, PA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="347" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Visual Network Description: A Customizable GUI for the Creation of Software Defined Network Simulations</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Fontes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N M</forename><surname>Sampaio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROSIS -The European Multidisciplinary Society for Modelling and Simulation Technology</title>
		<meeting><address><addrLine>Lancaster, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="149" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Lossless Handover with n-casting between WiFiWiMAX on OpenRoads</title>
		<author>
			<persName><forename type="first">K.-K</forename><surname>Yap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kobayashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sherwood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Parulkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Mobicom</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Trace-Based Mobile Network Emulation</title>
		<author>
			<persName><forename type="first">Brian</forename><forename type="middle">D</forename><surname>Noble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giao</forename><forename type="middle">T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Randy</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM 97</title>
		<meeting>ACM SIGCOMM 97</meeting>
		<imprint>
			<date type="published" when="1997-09">September 1997</date>
			<biblScope unit="page" from="51" to="61" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Ethanol: Software defined networking for 802.11 Wireless Networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Henrique</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gabriel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Marcos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Daniel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Integrated Network Management (IM), 2015 IFIP/IEEE International Symposium on. Ottawa</title>
		<meeting><address><addrLine>ON, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="388" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A survey of simulators, emulators and testbeds for wireless sensor networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Imran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Said</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hasbullah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Technology (ITSim), International Symposium in</title>
		<imprint>
			<date type="published" when="2010-06">June 2010</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="897" to="902" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">EstiNet OpenFlow network simulator and emulator</title>
		<author>
			<persName><forename type="first">W</forename><surname>Shie-Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chih-Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chun-Ming</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communication Magazine</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">9</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Comparison of CORE Network Emulation Platforms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Ahrenholz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Military Communications Conference Conference 2010 (MILCOM)</title>
		<meeting>IEEE Military Communications Conference Conference 2010 (MILCOM)</meeting>
		<imprint>
			<date type="published" when="2010-11">November 2010</date>
			<biblScope unit="page" from="864" to="869" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Automating ns-3 Experimentation in Multi-Host Scenarios</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Alina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Damien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Thierry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Walid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless and Mobile Computing, Proceedings of the 2015 Workshop on ns-3</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">OpenNet: A simulator for software-defined wireless local area network</title>
		<author>
			<persName><forename type="first">C</forename><surname>Min-Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jun-Xian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li-Hsing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chien-Chao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of Wireless Communications and Networking Conference (WCNC)</title>
		<meeting><address><addrLine>Istanbul</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="3332" to="3336" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
