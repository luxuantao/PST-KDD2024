<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A SURVEY OF SECURITY ISSUES IN WIRELESS SENSOR NETWORKS</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yong</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF NEBRASKA-LINCOLN</orgName>
							</affiliation>
						</author>
						<author>
							<persName><roleName>AND</roleName><forename type="first">Garhan</forename><surname>Attebury</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF NEBRASKA-LINCOLN</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Byrav</forename><surname>Ramamurthy</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNIVERSITY OF NEBRASKA-LINCOLN</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A SURVEY OF SECURITY ISSUES IN WIRELESS SENSOR NETWORKS</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">ED999E9497CB3644ECF51498B34576BB</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Wireless Sensor Networks (WSNs) are used in many applications in military, ecological, and health-related areas. These applications often include the monitoring of sensitive information such as enemy movement on the battlefield or the location of personnel in a building. Security is therefore important in WSNs. However, WSNs suffer from many constraints, including low computation capability, small memory, limited energy resources, susceptibility to physical capture, and the use of insecure wireless communication channels. These constraints make security in WSNs a challenge. In this article we present a survey of security issues in WSNs. First we outline the constraints, security requirements, and attacks with their corresponding countermeasures in WSNs. We then present a holistic view of security issues. These issues are classified into five categories: cryptography, key management, secure routing, secure data aggregation, and intrusion detection. Along the way we highlight the advantages and disadvantages of various WSN security protocols and further compare and evaluate these protocols based on each of these five categories. We also point out the open research issues in each subarea and conclude with possible future research directions on security in WSNs.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>dvances in wireless communication and electronics have enabled the development of low-cost, lowpower, multifunctional sensor nodes. These tiny sensor nodes, consisting of sensing, data processing, and communication components, make it possible to deploy Wireless Sensor Networks (WSNs), which represent a significant improvement over traditional wired sensor networks. WSNs can greatly simplify system design and operation, as the environment being monitored does not require the communication or energy infrastructure associated with wired networks <ref type="bibr" target="#b0">[1]</ref>.</p><p>WSNs are expected to be solutions to many applications, such as detecting and tracking the passage of troops and tanks on a battlefield, monitoring environmental pollutants, measuring traffic flows on roads, and tracking the location of personnel in a building. Many sensor networks have mission-critical tasks and thus require that security be considered <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>. Improper use of information or using forged information may cause unwanted information leakage and provide inaccurate results.</p><p>While some aspects of WSNs are similar to traditional wireless ad hoc networks, important distinctions exist which greatly affect how security is achieved. The differences between sensor networks and ad hoc networks are <ref type="bibr" target="#b3">[4]</ref>: • The number of sensor nodes in a sensor network can be several orders of magnitude higher than the nodes in an ad hoc network. • Sensor nodes are densely deployed.</p><p>• Sensor nodes are prone to failures due to harsh environments and energy constraints. • The topology of a sensor network changes very frequently due to failures or mobility. • Sensor nodes are limited in computation, memory, and power resources. • Sensor nodes may not have global identification.</p><p>These differences greatly affect how secure data-transfer schemes are implemented in WSNs. For example, the use of radio transmission, along with the constraints of small size, low cost, and limited energy, make WSNs more susceptible to denial-of-service attacks <ref type="bibr">[5]</ref>. Advanced anti-jamming techniques such as frequency-hopping spread spectrum and physical tamper-proofing of nodes are generally impossible in a sensor network due to the requirements of greater design complexity and higher energy consumption <ref type="bibr">[5]</ref>. Furthermore, the limited energy and processing power of nodes makes the use of public key cryptography nearly impossible. While the results from recent studies show that public key cryptography might be feasible in sensor networks <ref type="bibr" target="#b4">[6,</ref><ref type="bibr" target="#b5">7]</ref>, it remains for the most part infeasible in WSNs. Instead, most security schemes make use of symmetric key cryptography. One thing required in either case is the use of keys for secure communication. Managing key distribution is not unique to WSNs, but again constraints such as small memory capacity make centralized keying techniques impossible. Straight pairwise key sharing between every two nodes in a network does not scale to large networks with tens of thousands of nodes, as the storage requirements are too high. A security scheme in WSNs must provide efficient key distribution while maintaining the ability for communication between all relevant nodes.</p><p>In addition to key distribution, secure routing protocols must be considered. These protocols are concerned with how a node sends messages to other nodes or a base station. A key challenge is that of authenticated broadcast. Existing authenticated broadcast methods often rely on public key cryptography and include high computational overhead making them infeasible in WSNs. Secure routing protocols proposed for use in WSNs, such as SPINS <ref type="bibr" target="#b6">[8]</ref>, must consider these factors. Additionally, the constraint on energy in WSNs leads to the desire for data aggregation. This aggregation of sensor data needs to be secure in order to ensure information integrity and confidentiality <ref type="bibr" target="#b7">[9,</ref><ref type="bibr" target="#b8">10]</ref>. While this is achievable through cryptography, an aggregation scheme must take into account the constraints in WSNs and the unique characteristics of the cryptography and routing schemes. It is also desirable for secure data aggregation protocols to be flexible, allowing lower levels of security for less important data, thus saving energy, and allowing higher levels of security for more sensitive data, thus consuming more energy.</p><p>As with any network, awareness of compromised nodes and attacks is desirable. Many security schemes provide assurance that data remain intact and communication unaffected as long as fewer than t nodes are compromised <ref type="bibr" target="#b10">[11]</ref>. The ability of a node or base station to detect when other nodes are compromised enables them to take action, either ignoring the compromised data or reconfiguring the network to eliminate the threat.</p><p>The remainder of this article discusses the above areas in more detail and considers how they are all required to form a complete WSN security scheme. A few existing surveys on security issues in ad hoc networks can be found in <ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref>; however, only small sections of these surveys focus on WSNs. A recent survey article on security issues in mobile ad hoc networks also included an overview of security issues in WSNs <ref type="bibr" target="#b14">[15]</ref>. However, the article did not discuss cryptography and intrusion detection issues. Further, it included only a small portion of the available literature on security in WSNs.</p><p>The rest of this article is organized as follows. Background information on WSNs is presented, followed by a discussion of attacks in the different network layers of sensor networks. Then we focus on the selection of cryptography in WSNs, key management, secure routing schemes, secure data aggregation, and intrusion detection systems. We discuss future research directions on security in WSNs and then conclude the article.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BACKGROUND COMMUNICATION ARCHITECTURE</head><p>A WSN is usually composed of hundreds or thousands of sensor nodes. These sensor nodes are often densely deployed in a sensor field and have the capability to collect data and route data back to a base station (BS). A sensor consists of four basic parts: a sensing unit, a processing unit, a transceiver unit, and a power unit <ref type="bibr" target="#b3">[4]</ref>. It may also have additional application-dependent components such as a location finding system, power generator, and mobilizer (Fig. <ref type="figure">1</ref>). Sensing units are usually composed of two subunits: sensors and analog-to-digital converters (ADCs). The ADCs convert the analog signals produced by the sensors to digital signals based on the observed phenomenon. The processing unit, which is generally associated with a small storage unit, manages the procedures that make the sensor node collaborate with the other nodes. A transceiver unit connects the node to the network. One of the most important units is the power unit. A power unit may be finite (e.g., a single battery) or may be supported by power scavenging devices (e.g., solar cells). Most of the sensor network routing techniques and sensing tasks require knowledge of location, which is provided by a location finding system. Finally, a mobilizer may sometimes be needed to move the sensor node, depending on the application.</p><p>The protocol stack used in sensor nodes contains physical, data link, network, transport, and application layers defined as follows <ref type="bibr" target="#b3">[4]</ref>: • Physical layer: responsible for frequency selection, carrier frequency generation, signal deflection, modulation, and data encryption • Data link layer: responsible for the multiplexing of data streams, data frame detection, medium access, and error control; as well as ensuring reliable point-to-point and point-to-multipoint connections • Network layer: responsible for specifying the assignment of addresses and how packets are forwarded • Transport layer: responsible for specifying how the reliable transport of packets will take place • Application layer: responsible for specifying how the data are requested and provided for both individual sensor nodes and interactions with the end user nFigure 1. The components of a sensor node (Source: <ref type="bibr" target="#b3">[4]</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONSTRAINTS IN WSNS</head><p>Individual sensor nodes in a WSN are inherently resource constrained. They have limited processing capability, storage capacity, and communication bandwidth. Each of these limitations is due in part to the two greatest constraints -limited energy and physical size. Table <ref type="table" target="#tab_0">1</ref> shows several currently available sensor node platforms. The design of security services in WSNs must consider the hardware constraints of the sensor nodes:</p><p>• Energy: energy consumption in sensor nodes can be categorized into three parts:</p><p>-Energy for the sensor transducer -Energy for communication among sensor nodes -Energy for microprocessor computation The study in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b20">21]</ref> found that each bit transmitted in WSNs consumes about as much power as executing 800-1000 instructions. Thus, communication is more costly than computation in WSNs. Any message expansion caused by security mechanisms comes at a significant cost. Further, higher security levels in WSNs usually correspond to more energy consumption for cryptographic functions. Thus, WSNs can be divided into different security levels, depending on energy cost <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>.</p><p>• Computation: the embedded processors in sensor nodes are generally not as powerful as those in nodes of a wired or ad hoc network. As such, complex cryptographic algorithms cannot be used in WSNs. • Memory: memory in a sensor node usually includes flash memory and RAM. Flash memory is used for storing downloaded application code and RAM is used for storing application programs, sensor data, and intermediate computations. There is usually not enough space to run complicated algorithms after loading OS and application code. In the SmartDust project, for example, TinyOS consumes about 3500 bytes of instruction memory, leaving only 4500 bytes for security and applications <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b20">21]</ref>. This makes it impractical to use the majority of current security algorithms <ref type="bibr" target="#b6">[8]</ref>. With an Intel Mote, the situation is slightly improved, but still far from meeting the requirements of many algorithms. • Transmission range: the communication range of sensor nodes is limited both technically and by the need to conserve energy. The actual range achieved from a given transmission signal strength is dependent on various environmental factors such as weather and terrain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURITY REQUIREMENTS</head><p>The goal of security services in WSNs is to protect the information and resources from attacks and misbehavior. The security requirements in WSNs include:</p><p>• Availability, which ensures that the desired network services are available even in the presence of denial-of-service attacks • Authorization, which ensures that only authorized sensors can be involved in providing information to network services • Authentication, which ensures that the communication from one node to another node is genuine, that is, a malicious node cannot masquerade as a trusted network node • Confidentiality, which ensures that a given message cannot be understood by anyone other than the desired recipients • Integrity, which ensures that a message sent from one node to another is not modified by malicious intermediate nodes • Nonrepudiation, which denotes that a node cannot deny sending a message it has previously sent • Freshness, which implies that the data is recent and ensures that no adversary can replay old messages Moreover, as new sensors are deployed and old sensors fail, we suggest that forward and backward secrecy should also be considered: • Forward secrecy: a sensor should not be able to read any future messages after it leaves the network. • Backward secrecy: a joining sensor should not be able to read any previously transmitted message.</p><p>The security services in WSNs are usually centered around cryptography. However, due to the constraints in WSNs, many already existing secure algorithms are not practical for use. We discuss this problem in the section "Cryptography in WSNs" below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THREAT MODEL</head><p>In WSNs, it is usually assumed that an attacker may know the security mechanisms that are deployed in a sensor network; they may be able to compromise a node or even physically capture a node. Due to the high cost of deploying tamperresistant sensor nodes, most WSN nodes are viewed as nontamper-resistant. Further, once a node is compromised, the attacker is capable of stealing the key materials contained within that node. Base stations in WSNs are usually regarded as trustworthy. Most research studies focus on secure routing between sensors and the base station. Deng et al. considered strategies against threats which can lead to the failure of the base station <ref type="bibr" target="#b23">[24]</ref>.</p><p>Attacks in sensor networks can be classified into the following categories: • Outsider versus insider attacks: outside attacks are defined as attacks from nodes which do not belong to a WSN; insider attacks occur when legitimate nodes of a WSN behave in unintended or unauthorized ways. • Passive versus active attacks: passive attacks include eavesdropping on or monitoring packets exchanged within a WSN; active attacks involve some modifications of the data steam or the creation of a false stream. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EVALUATION</head><p>We suggest using the following metrics to evaluate whether a security scheme is appropriate in WSNs.</p><p>• Security: a security scheme has to meet the requirements discussed above. • Resiliency: in case a few nodes are compromised, a security scheme should still protect against the attacks. • Energy efficiency: a security scheme must be energy efficient so as to maximize node and network lifetime. • Flexibility: key management needs to be flexible so as to allow for different network deployment methods, such as random node scattering and predetermined node placement. • Scalability: a security scheme should be able to scale without compromising the security requirements. • Fault-tolerance: a security scheme should continue to provide security services in the presence of faults such as failed nodes. • Self-healing: sensors may fail or run out of energy. The remaining sensors may need to be reorganized to maintain a set level of security. • Assurance: assurance is the ability to disseminate different information at different levels to end-users <ref type="bibr" target="#b24">[25]</ref>. A security scheme should offer choices with regard to desired reliability, latency, and so on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ATTACKS IN SENSOR NETWORKS</head><p>WSNs are vulnerable to various types of attacks. According to the security requirements in WSNs, these attacks can be categorized as <ref type="bibr" target="#b2">[3]</ref>:</p><p>• Attacks on secrecy and authentication: standard cryptographic techniques can protect the secrecy and authenticity of communication channels from outsider attacks such as eavesdropping, packet replay attacks, and modification or spoofing of packets. • Attacks on network availability: attacks on availability are often referred to as denial-of-service (DoS) attacks. DoS attacks may target any layer of a sensor network. • Stealthy attacks against service integrity: in a stealthy attack, the goal of the attacker is to make the network accept a false data value. For example, an attacker com-promises a sensor node and injects a false data value through that sensor node. In these attacks, keeping the sensor network available for its intended use is essential. DoS attacks against WSNs may permit real-world damage to the health and safety of people <ref type="bibr">[5]</ref>. In this section, we focus only on DoS attacks and their countermeasures in sensor networks. We discuss attacks on secrecy and authentication in the section "Secure Routing Protocols," and discuss stealthy attacks and countermeasures in the section "Intrusion Detection" below.</p><p>The DoS attack usually refers to an adversary's attempt to disrupt, subvert, or destroy a network. However, a DoS attack can be any event that diminishes or eliminates a network's capacity to perform its expected function <ref type="bibr">[5]</ref>. Sensor networks are usually divided into layers, and this layered architecture makes WSNs vulnerable to DoS attacks, as DoS attacks may occur in any layer of a sensor network.</p><p>Previous discussions on DoS attacks in WSNs can be found in <ref type="bibr" target="#b2">[3,</ref><ref type="bibr">5,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27]</ref>. The remainder of this section summarizes the possible DoS attacks and countermeasures in each layer of a sensor network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PHYSICAL LAYER</head><p>The physical layer is responsible for frequency selection, carrier frequency generation, signal detection, modulation, and data encryption <ref type="bibr" target="#b3">[4]</ref>. As with any radio-based medium, there exists the possibility of jamming in WSNs. In addition, nodes in WSNs may be deployed in hostile or insecure environments where an attacker has easy physical access. These two vulnerabilities are explored in this subsection.</p><p>Jamming -Jamming is a type of attack which interferes with the radio frequencies that a network's nodes are using <ref type="bibr" target="#b2">[3,</ref><ref type="bibr">5]</ref>. A jamming source may either be powerful enough to disrupt the entire network or less powerful and only able to disrupt a smaller portion of the network. Even with lesser-powered jamming sources, such as a small compromised subset of the network's sensor nodes, an adversary has the potential to disrupt the entire network provided the jamming sources are randomly distributed in the network.</p><p>Typical defenses against jamming involve variations of spread-spectrum communication such as frequency hopping and code spreading <ref type="bibr">[5]</ref>. Frequency-hopping spread spectrum (FHSS) is a method of transmitting signals by rapidly switching a carrier among many frequency channels using a pseudo random sequence known to both transmitter and receiver. Without being able to follow the frequency selection sequence, an attacker is unable to jam the frequency being used at a given moment in time. However, as the range of possible frequencies is limited, an attacker may instead jam a wide section of the frequency band.</p><p>Code spreading is another technique used to defend against jamming attacks and is common in mobile networks. However, this technique requires greater design complexity and energy, thus restricting its use in WSNs. In general, to maintain low cost and low power requirements, sensor devices are limited to single-frequency use and are therefore highly susceptible to jamming attacks.</p><p>Tampering -Another physical layer attack is tampering <ref type="bibr">[5]</ref>. Given physical access to a node, an attacker can extract sensitive information such as cryptographic keys or other data on the node. The node may also be altered or replaced to create a compromised node which the attacker controls. One defense to this attack involves tamper-proofing the node's physical package <ref type="bibr">[5]</ref>. However, it is usually assumed that the sensor nodes are not tamper-proofed in WSNs due to the additional cost. This indicates that a security scheme must consider the situation in which sensor nodes are compromised.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LINK LAYER</head><p>The data link layer is responsible for the multiplexing of data streams, data frame detection, medium access, and error control <ref type="bibr" target="#b3">[4]</ref>. It ensures reliable point-to-point and point-to-multipoint connections in a communication network. Attacks at the link layer include purposely introduced collisions, resource exhaustion, and unfairness. This subsection looks at each of these three link-layer attack categories <ref type="bibr">[5]</ref>.</p><p>Collisions -A collision occurs when two nodes attempt to transmit on the same frequency simultaneously <ref type="bibr">[5]</ref>. When packets collide, a change will likely occur in the data portion, causing a checksum mismatch at the receiving end. The packet will then be discarded as invalid. An adversary may strategically cause collisions in specific packets such as ACK control messages. A possible result of such collisions is the costly exponential back-off in certain media access control (MAC) protocols.</p><p>A typical defense against collisions is the use of error-correcting codes <ref type="bibr">[5]</ref>. Most codes work best with low levels of collisions, such as those caused by environmental or probabilistic errors. However, these codes also add additional processing and communication overhead. It is reasonable to assume that an attacker will always be able to corrupt more than what can be corrected. While it is possible to detect these malicious collisions, no complete defenses against them are known at this time.</p><p>Exhaustion -Repeated collisions can also be used by an attacker to cause resource exhaustion <ref type="bibr">[5]</ref>. For example, a naive link-layer implementation may continuously attempt to retransmit the corrupted packets. Unless these hopeless retransmissions are discovered or prevented, the energy reserves of the transmitting node and those surrounding it will be quickly depleted.</p><p>A possible solution is to apply rate limits to the MAC admission control such that the network can ignore excessive requests, thus preventing the energy drain caused by repeated transmissions <ref type="bibr">[5]</ref>. A second technique is to use time-division multiplexing where each node is allotted a time slot in which it can transmit <ref type="bibr">[5]</ref>. This eliminates the need of arbitration for each frame and can solve the indefinite postponement problem in a back-off algorithm. However, it is still susceptible to collisions.</p><p>Unfairness -Unfairness can be considered a weak form of a DoS attack <ref type="bibr">[5]</ref>. An attacker may cause unfairness in a network by intermittently using the above link-layer attacks. Instead of preventing access to a service outright, an attacker can degrade it in order to gain an advantage such as causing other nodes in a real-time MAC protocol to miss their transmission deadline. The use of small frames lessens the effect of such attacks by reducing the amount of time an attacker can capture the communication channel. However, this technique often reduces efficiency and is susceptible to further unfairness, for example, when an attacker is trying to retransmit quickly instead of randomly delaying.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NETWORK AND ROUTING LAYER</head><p>The network and routing layer of sensor networks is usually designed according to the following principles <ref type="bibr" target="#b3">[4]</ref>:</p><p>• Power efficiency is an important consideration.</p><p>• Sensor networks are mostly data-centric.</p><p>• An ideal sensor network has attribute-based addressing and location awareness. The attacks in the network and the routing layer include the following.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Spoofed, Altered, or Replayed Routing Information -</head><p>The most direct attack against a routing protocol in any network is to target the routing information itself while it is being exchanged between nodes. An attacker may spoof, alter, or replay routing information in order to disrupt traffic in the network <ref type="bibr" target="#b25">[26]</ref>. These disruptions include the creation of routing loops, attracting or repelling network traffic from select nodes, extending and shortening source routes, generating fake error messages, partitioning the network, and increasing end-to-end latency.</p><p>A countermeasure against spoofing and alteration is to append a message authentication code (MAC) after the message. By adding a MAC to the message, the receivers can verify whether the messages have been spoofed or altered. To defend against replayed information, counters or timestamps can be included in the messages <ref type="bibr" target="#b6">[8]</ref>.</p><p>Selective Forwarding -A significant assumption made in multihop networks is that all nodes in the network will accurately forward received messages. An attacker may create malicious nodes which selectively forward only certain messages and simply drop others <ref type="bibr" target="#b25">[26]</ref>. A specific form of this attack is the black hole attack in which a node drops all messages it receives. One defense against selective forwarding attacks is using multiple paths to send data <ref type="bibr" target="#b25">[26]</ref>. A second defense is to detect the malicious node or assume it has failed and seek an alternative route.</p><p>Sinkhole -In a sinkhole attack, an attacker makes a compromised node look more attractive to surrounding nodes by forging routing information <ref type="bibr">[5,</ref><ref type="bibr" target="#b25">26]</ref>. The end result is that surrounding nodes will choose the compromised node as the next node to route their data through. This type of attack makes selective forwarding very simple, as all traffic from a large area in the network will flow through the adversary's node. Sybil -The Sybil attack is a case where one node presents more than one identity to the network <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27]</ref>. Protocols and algorithms which are easily affected include fault-tolerant schemes, distributed storage, and network-topology maintenance. For example, a distributed storage scheme may rely on there being three replicas of the same data to achieve a given level of redundancy. If a compromised node pretends to be two of the three nodes, the algorithms used may conclude that redundancy has been achieved while in reality it has not.</p><p>Wormholes -A wormhole is a low-latency link between two portions of the network over which an attacker replays network messages <ref type="bibr" target="#b25">[26]</ref>. This link may be established either by a single node forwarding messages between two adjacent but otherwise non-neighboring nodes or by a pair of nodes in different parts of the network communicating with each other. The latter case is closely related to the sinkhole attack, as an attacking node near the base station can provide a one-hop link to that base station via the other attacking node in a distant part of the network. Hu et al. presented a novel and general mechanism called packet leashes for detecting and defending against wormhole attacks <ref type="bibr" target="#b27">[28]</ref>. Two types of leashes were introduced: geographic leashes and temporal leashes. The proposed mechanisms can also be used in WSNs.</p><p>Hello Flood Attacks -Many protocols which use HELLO packets make the naive assumption that receiving such a packet means the sender is within radio range and is therefore a neighbor. An attacker may use a high-powered transmitter to trick a large area of nodes into believing they are neighbors of that transmitting node <ref type="bibr" target="#b25">[26]</ref>. If the attacker falsely broadcasts a superior route to the base station, all of these nodes will attempt transmission to the attacking node, despite many being out of radio range in reality.</p><p>Acknowledgment Spoofing -Routing algorithms used in sensor networks sometimes require Acknowledgments to be used. An attacking node can spoof the Acknowledgments of overheard packets destined for neighboring nodes in order to provide false information to those neighboring nodes <ref type="bibr" target="#b25">[26]</ref>. An example of such false information is claiming that a node is alive when in fact it is dead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TRANSPORT LAYER</head><p>The transport layer is responsible for managing end-to-end connections <ref type="bibr" target="#b3">[4]</ref>. Two possible attacks in this layer, flooding and desynchronization, are discussed in this subsection.</p><p>Flooding -Whenever a protocol is required to maintain state at either end of a connection it becomes vulnerable to memory exhaustion through flooding <ref type="bibr">[5]</ref>. An attacker may repeatedly make new connection requests until the resources required by each connection are exhausted or reach a maximum limit. In either case, further legitimate requests will be ignored. One proposed solution to this problem is to require that each connecting client demonstrate its commitment to the connection by solving a puzzle <ref type="bibr">[5]</ref>. The idea is that a connecting client will not needlessly waste its resources creating unnecessary connections. Given that an attacker does not likely have infinite resources, it will be impossible for him/her to create new connections fast enough to cause resource starvation on the serving node. While these puzzles do include processing overhead, this technique is more desirable than excessive communication.</p><p>Desynchronization -Desynchronization refers to the disruption of an existing connection <ref type="bibr">[5]</ref>. An attacker may, for example, repeatedly spoof messages to an end host, causing that host to request the retransmission of missed frames. If timed correctly, an attacker may degrade or even prevent the ability of the end hosts to successfully exchange data, thus causing them to instead waste energy by attempting to recover from errors which never really existed.</p><p>A possible solution to this type of attack is to require authentication of all packets communicated between hosts [5]. Provided that the authentication method is itself secure, an attacker will be unable to send the spoofed messages to the end hosts.</p><p>Table <ref type="table">2</ref> shows the possible DoS attacks and countermeasures in WSNs.</p><p>In the following sections we discuss cryptography, key management protocols, secure routing protocols, secure data aggregation, and intrusion detection for WSNs. For the remainder of this article, we use the following notation: • A, B are principals such as communicating nodes.</p><p>• ID A denotes the sensor identifier of node A.</p><p>• N A is a nonce generated by A (a nonce is an unpredictable bit string, usually used to achieve freshness). • K AB denotes the secret pairwise key shared between A and B. • M K is the encryption of message M with key K • MAC(K,M) denotes the computation of the message authentication code of message M with key K</p><formula xml:id="formula_0">• A → B denotes A unicasts a message to B • A → * denotes A broadcasts a message to its neighbors</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CRYPTOGRAPHY IN WSNS</head><p>Selecting the most appropriate cryptographic method is vital in WSNs because all security services are ensured by cryptography. Cryptographic methods used in WSNs should meet the constraints of sensor nodes and be evaluated by code size, data size, processing time, and power consumption. In this section, we focus on the selection of cryptography in WSNs. Public key cryptography, discussed first, is followed by symmetric key cryptography.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PUBLIC KEY CRYPTOGRAPHY IN WSNS</head><p>Many researchers believe that the code size, data size, processing time, and power consumption make it undesirable for public key algorithm techniques, such as the Diffie-Hellman key agreement protocol <ref type="bibr" target="#b28">[29]</ref> or RSA signatures <ref type="bibr" target="#b29">[30]</ref>, to be nTable 2. Sensor network layers and denial-of-service defenses. Public key algorithms such as RSA are computationally intensive and usually execute thousands or even millions of multiplication instructions to perform a single security operation. Further, a microprocessor's public key algorithm efficiency is primarily determined by the number of clock cycles required to perform a multiply instruction <ref type="bibr" target="#b30">[31]</ref>. <ref type="bibr">Brown et al.</ref> found that public key algorithms such as RSA usually require on the order of tens of seconds and up to minutes to perform encryption and decryption operations in constrained wireless devices which exposes a vulnerability to DoS attacks <ref type="bibr" target="#b31">[32]</ref>. On the other hand, Carman et al. found that it usually takes a microprocessor thousands of nano-joules to do a simple multiply function with a 128 bit result <ref type="bibr" target="#b30">[31]</ref>. In contrast, symmetric key cryptography algorithms and hash functions consume much less computational energy than public key algorithms. For example, the encryption of a 1024-bit block consumes approximately 42 mJ on the MC68328 DragonBall processor using RSA, while the estimated energy consumption for a 128 bit AES block is a much lower at 0.104 mJ <ref type="bibr" target="#b30">[31]</ref>.</p><p>Recent studies have shown that it is feasible to apply public key cryptography to sensor networks by using the right selection of algorithms and associated parameters, optimization, and low-power techniques <ref type="bibr" target="#b4">[6,</ref><ref type="bibr" target="#b5">7,</ref><ref type="bibr" target="#b32">33]</ref>. The investigated public key algorithms include Rabin's Scheme <ref type="bibr" target="#b33">[34]</ref>, NtruEncrypt <ref type="bibr" target="#b34">[35]</ref>, RSA <ref type="bibr" target="#b29">[30]</ref>, and Elliptic Curve Cryptography (ECC) <ref type="bibr" target="#b35">[36,</ref><ref type="bibr" target="#b36">37]</ref>. Most studies in literature focus on RSA and ECC algorithms. The attraction of ECC is that it appears to offer equal security for a far smaller key size, thereby reducing processing and communication overhead. For example, RSA with 1024 bit keys (RSA-1024) provides a currently accepted level of security for many applications and is equivalent in strength to ECC with 160 bit keys (ECC-160) <ref type="bibr" target="#b37">[38]</ref>. To protect data beyond the year 2010, RSA Security recommends RSA-2048 as the new minimum key size which is equivalent to ECC with 224 bit keys (ECC-224) <ref type="bibr" target="#b38">[39]</ref>. Table <ref type="table">3</ref> summarizes the execution time of ECC and RSA implementations on an Atmel ATmega128 processor (used by Mica2 mote) <ref type="bibr" target="#b4">[6]</ref>. The execution time is measured on average for a point multiplication in ECC and a modular exponential operation in RSA. ECC secp160r1 and secp224r1 are two standardized elliptic curves defined in <ref type="bibr" target="#b39">[40]</ref>. As shown in Table <ref type="table">3</ref>, by using the small integer e = 2 16 + 1 as the public key, RSA public key operation is slightly faster than ECC point multiplication. However, ECC point multiplication outperforms RSA private key operation by an order of magnitude. The RSA private key operation, which is too slow, limits its use in a sensor node. ECC has no such issues since both the public key operation and private key operation use the same point multiplication operations.</p><p>Wander et al. investigated the energy cost of authentication and key exchange based on RSA and ECC cryptography on an Atmel ATmega128 processor <ref type="bibr" target="#b5">[7]</ref>. The result is shown in Table <ref type="table">4</ref>. The ECC-based signature is generated and verified using the Elliptic Curve Digital Signature Algorithm (ECDSA) <ref type="bibr" target="#b40">[41]</ref>. The key exchange protocol is a simplified version of the SSL handshake, which involves two parties: a client initiating the communication and a server responding to the initiation <ref type="bibr" target="#b41">[42]</ref>. The WSN is assumed to be administered by a central point with each sensor having a certificate signed by the central point's private key using a RSA or ECC signature. In the handshake process, the two parties verify each other's certificate and negotiate the session key to be used in the communication. As Table <ref type="table">4</ref> shows, in comparison with RSA cryptography at the same security level, ECDSA signatures are significantly cheaper than RSA signatures and ECDSA verifications are within reasonable range of RSA verifications. Further, the ECC-based key exchange protocol outperforms the RSA-based key exchange protocol at the server side, and there is almost no difference in the energy cost for these two key exchange protocols at the client side. In addition, the relative performance advantage of ECC over RSA increases as the key size increases in terms of the execution time and energy cost. Tables <ref type="table">3</ref> and<ref type="table">4</ref> indicate that ECC is more appropriate than RSA for use in sensor networks.</p><p>The implementation of RSA and ECC cryptography on Mica2 motes further proved that a public key based protocol is viable for WSNs. Two modules, TinyPK <ref type="bibr" target="#b42">[43]</ref>, based on RSA, and TinyECC <ref type="bibr" target="#b43">[44]</ref>, based on ECC, have been designed and implemented on Mica2 motes using the TinyOS development environment. Similar work was also conducted by Malan et al. on ECC cryptography using a Mica2 mote <ref type="bibr" target="#b44">[45]</ref>. In their work, ECC was used to distribute a single symmetric key for the link-layer encryption provided by the TinySec module <ref type="bibr" target="#b45">[46]</ref>.</p><p>While public key cryptography may be possible in sensor nodes, the public key operations are still expensive. The assumptions in <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b44">45]</ref> may not be satisfied in some applications. For example, the work in <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b44">45]</ref> concentrated on the public key operations only, assuming the private key operations will be performed by a base station or a third party. By selecting appropriate parameters, for example, using the small integer e = 2 16 + 1 as the public key, the public key operation time can be extremely fast while the private key operation time does not change. The limitation of private key operation nTable 3. Public key cryptography: average ECC and RSA execution times (Source: <ref type="bibr" target="#b4">[6]</ref>). occurring only at a base station makes many security services using public key algorithms not available under these schemes. Such services include peer-to-peer authentication and secure data aggregation. In contrast, Tables <ref type="table">5</ref> and<ref type="table">6</ref> show the execution time and energy cost of two symmetric cryptography protocols on an Atmel ATmega128 processor. In Table <ref type="table">5</ref>, the execution time was measured on a 64 bit block using a 80 bit key. From the table we can see that symmetric key cryptography is faster and consumes less energy as compared to public key cryptography. In the next section we focus on symmetric key cryptography.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SYMMETRIC KEY CRYPTOGRAPHY IN WSNS</head><p>The constraints on computation and power consumption in sensor nodes limit the application of public key cryptography in WSNs. Thus, most research studies focus on symmetric key cryptography in sensor networks.</p><p>Five popular encryption schemes, RC4 <ref type="bibr" target="#b50">[51]</ref>, RC5 <ref type="bibr" target="#b47">[48]</ref>, IDEA <ref type="bibr" target="#b50">[51]</ref>, SHA-1 <ref type="bibr" target="#b48">[49]</ref>, and MD5 <ref type="bibr" target="#b50">[51,</ref><ref type="bibr" target="#b51">52]</ref>, were evaluated on six different microprocessors ranging in word size from 8 bit (Atmel AVR) to 16 bit (Mitsubishi M16C) to 32 bit widths (StrongARM, XScale) in <ref type="bibr" target="#b52">[53]</ref>. The execution time and code memory size were measured for each algorithm and platform. The experiments indicated uniform cryptographic cost for each encryption class and each architecture class. The impact of caches was negligible while Instruction Set Architecture (ISA) support was limited to specific effects on certain algorithms. Moreover, hashing algorithms (MD5 and SHA-11) incurred almost an order of a magnitude higher overhead than encryption algorithms (RC4, RC5, and IDEA).</p><p>In <ref type="bibr" target="#b53">[54]</ref>, Law et al. evaluated two symmetric key algorithms: RC5 and TEA <ref type="bibr" target="#b54">[55]</ref>. They further evaluated six block ciphers, including RC5 and RC6 <ref type="bibr" target="#b55">[56]</ref>, Rijndael <ref type="bibr" target="#b49">[50]</ref>, MISTY1 <ref type="bibr" target="#b56">[57]</ref>, KASUMI <ref type="bibr" target="#b57">[58]</ref>, and Camellia <ref type="bibr" target="#b58">[59]</ref> on IAR Systems' MSP430F149 in <ref type="bibr" target="#b59">[60]</ref>. The benchmark parameters were code, data memory, and CPU cycles. The evaluation results showed that Rijndael is suitable for high-security and energy-efficiency requirements while MISTY1 is suitable for good storage and energy efficiency. The evaluation results in <ref type="bibr" target="#b59">[60]</ref> disagreed with the work in <ref type="bibr" target="#b6">[8]</ref> in which RC5 was selected as the encryption/decryption scheme, and with the work in <ref type="bibr" target="#b21">[22]</ref> in which RC6 was selected. The work in <ref type="bibr" target="#b59">[60]</ref> provides a good resource for deciding which symmetric algorithm should be adopted in sensor networks. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN RESEARCH ISSUES</head><p>Selecting the appropriate cryptography method for sensor nodes is fundamental to providing security services in WSNs. However, the decision depends on the computation and communication capability of the sensor nodes. Open research issues range from cryptography algorithms to hardware design as described below:</p><p>• Recent studies on public key cryptography have demonstrated that public key operations may be practical in sensor networks. However, private key operations are still too expensive in terms of computation and energy cost to accomplish in a sensor node. The application of private key operations to sensor nodes needs to be studied further. • Symmetric key cryptography is superior to public key cryptography in terms of speed and low energy cost. However, the key distribution schemes based on symmetric key cryptography are not perfect. Efficient and flexible key distribution schemes need to be designed. • It is also likely that more powerful motes will need to be designed in order to support the increasing requirements for computation and communication in sensor nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>KEY MANAGEMENT PROTOCOLS</head><p>Key management is a core mechanism to ensure the security of network services and applications in WSNs. The goal of key management is to establish required keys between sensor nodes which must exchange data. Further, a key management scheme should also support node addition and revocation while working in undefined deployment environments. Due to the constraints on sensor nodes, key management schemes in WSNs have many differences with the schemes in ad hoc networks.</p><p>As shown above, public key cryptography suffers from limitations in WSNs. Thus, most proposed key management schemes are based on symmetric key cryptography. Further, a straight pairwise private key sharing scheme between every pair of nodes is also impractical in WSNs. A pairwise private key sharing scheme requires predistribution and storage of n -1 keys in each node, where n is the number of nodes in a sensor network. Due to the large amount of memory required, pairwise schemes are not viable when the network size is large. Moreover, most key pairs would be unusable since direct communication is possible only among neighboring nodes. This scheme is also not flexible for node addition and revocation. In this section, we discuss key management protocols in WSNs. Another investigation of key management mechanisms for WSNs can be found in <ref type="bibr" target="#b60">[61]</ref>.</p><p>Figure <ref type="figure">2</ref> shows a taxonomy of key management protocols in WSNs. According to the network structure, the protocols nTable 5. Symmetric key cryptography: average RC5 and skipjack execution times (Source: <ref type="bibr" target="#b45">[46]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm Operation time (ms)</head><p>Skipjack (C) <ref type="bibr" target="#b46">[47]</ref> 0.38ms RC5 (C, assembly) <ref type="bibr" target="#b47">[48]</ref> 0.26ms nTable 6. Symmetric key cryptography: average energy numbers for AES and SHA-1. (Source: <ref type="bibr" target="#b5">[7]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm Energy</head><p>SHA-1 (C) <ref type="bibr" target="#b48">[49]</ref> 5.9 mJ/byte AES-128 Enc/Dec (assembly) <ref type="bibr" target="#b49">[50]</ref> 1.62/2.49 mJ/byte can be divided into centralized key schemes and distributed key schemes. According to the probability of key sharing between a pair of sensor nodes, the protocols can be divided into probabilistic key schemes and deterministic key schemes.</p><p>In this section, we present a detailed overview of the main key management protocols in WSNs. We start with key management protocols based on network structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NETWORK STRUCTURE BASED KEY MANAGEMENT PROTOCOLS</head><p>The underlying network structure plays a significant role in the operation of key management protocols. According to the structure, the protocols can be divided into two categories: centralized key schemes and distributed key schemes.</p><p>Centralized Key Management Schemes -In a centralized key scheme, there is only one entity, often called a key distribution center (KDC), that controls the generation, regeneration, and distribution of keys. The only proposed centralized key management scheme for WSNs in the current literature is the LKHW scheme, which is based on the Logical Key Hierarchy (LKH) <ref type="bibr" target="#b61">[62]</ref>. In this scheme, the base station is treated as a KDC and all keys are logically distributed in a tree rooted at the base station. The central controller does not have to rely on any auxiliary entity to perform access control and key distribution. However, with only one managing entity, the central server is a single point of failure. The entire network and its security will be affected if there is a problem with the controller. During the time when the controller is not working, the network becomes vulnerable as keys are not generated, regenerated, and distributed. Furthermore, the network may become too large to be managed by a single entity, thus affecting scalability.</p><p>Distributed Key Management Schemes -In the distributed key management approaches, different controllers are used to manage key generation, regeneration, and distribution, thus minimizing the risk of failure and allowing for better scalability. In this approach, more entities are allowed to fail before the whole network is affected.</p><p>Most proposed key management schemes are distributed schemes. These schemes also fall into deterministic and probabilistic categories, which are discussed in detail in the following subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>KEY MANAGEMENT PROTOCOLS BASED ON THE PROBABILITY OF KEY SHARING</head><p>In the remainder of this section, we present the key management protocols based on the probability of key sharing between a pair of sensor nodes. We first discuss deterministic approaches and then discuss probabilistic approaches. The pairwise keys shared with immediate neighboring nodes are used to protect peer-to-peer communication while the cluster key is used for local broadcast. The pairwise keys can be set up as follows: in the key predistribution stage, each sensor node is loaded with an initial key K I and each node A generates a master key K A = f K I (A), where f is a pseudorandom function. Then, in the neighbor discovery stage, A broadcasts a HELLO message and expects an Acknowledgment from neighboring nodes, e.g., node B:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Deterministic Approaches</head><formula xml:id="formula_1">A → *: A B → A: B, MAC(K B , A|B)</formula><p>Node A computes its pairwise key with B, K AB = f K B (A). Node B knows A, K B and can also compute K AB in the same way. Then, K AB serves as their pairwise key.</p><p>Cluster key establishment follows the pairwise key establishment phase. Suppose node A wants to establish a cluster key with all its immediate neighbors B 1 , B 2 , …, B m . Node A first generates a random key K c A , then encrypts this key with the pairwise key shared with each neighbor, and finally transmits the encrypted key to each neighbor B i where 1 ≤ m:</p><formula xml:id="formula_2">A → B i : (K c A )K ABi</formula><p>LEAP uses unicast for key exchange. Notice that most of the proposed security protocols were based on point-to-point handshaking procedures to negotiate session keys. Lai et al. have proposed a BROadcast Session Key (BROSK) negotiation protocol <ref type="bibr" target="#b63">[64]</ref>. BROSK assumes a master key is shared by all nodes in the network. To establish a session key K with its neighbors, such as node B, a sensor node A broadcasts a key negotiation message:</p><formula xml:id="formula_3">A → *: ID A |N A ,MAC(K, ID A |N A ) B → * : ID B |N B ,MAC(K, ID B |N B )</formula><p>A and B will receive the broadcast message. They can verify the message using the master key K and both A and B can calculate the shared session key:</p><formula xml:id="formula_4">K AB = MAC(K,N A |N B )</formula><p>BROSK therefore establishes pairwise session keys between every two neighboring nodes. It is both scalable and energy efficient.</p><p>nFigure 2. Key management protocols in WSNs: a taxonomy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Deterministic key scheme</head><p>Probabilistic key scheme Distributed key scheme LKHW <ref type="bibr" target="#b61">[62]</ref> LEAP <ref type="bibr" target="#b62">[63]</ref>, BROSK <ref type="bibr" target="#b63">[64]</ref> CDTKeying <ref type="bibr" target="#b64">[65]</ref>, IOS/DMBS <ref type="bibr" target="#b65">[66]</ref>, random key schemes <ref type="bibr">[67 68, 69, 70, 71, 72, 73, 74]</ref> Random key schemes <ref type="bibr" target="#b66">[67,</ref><ref type="bibr" target="#b67">68,</ref><ref type="bibr" target="#b68">69,</ref><ref type="bibr" target="#b69">70,</ref><ref type="bibr" target="#b70">71,</ref><ref type="bibr" target="#b71">72,</ref><ref type="bibr" target="#b72">73,</ref><ref type="bibr" target="#b73">74]</ref> LKHW <ref type="bibr" target="#b61">[62]</ref>, LEAP <ref type="bibr" target="#b62">[63]</ref>, BROSK <ref type="bibr" target="#b63">[64]</ref>,</p><p>CDTKeying <ref type="bibr" target="#b64">[65]</ref>, IOS/DMBS <ref type="bibr" target="#b65">[66]</ref> Centralized key scheme</p><p>Network structure Probability of key sharing Key management protocols in WSNs</p><p>Camtepe and Yener have proposed a deterministic key distribution schemes for WSNs using Combinatorial Design Theory <ref type="bibr" target="#b64">[65]</ref>. The combinatorial design theory based pairwise key predistribution (CDTKeying) scheme is based on block design techniques in combinatorial design theory. It employs symmetric and generalized quadrangle design techniques. The scheme uses a finite projective plane of order n (for prime power n) to generate a symmetric design with parameters n 2 + n + 1, n + 1, 1. The design supports n 2 + n + 1 nodes, and uses a key-pool of size n 2 + n + 1. It generates n 2 + n + 1 key chains of size n + 1 where every pair of key chains has exactly one key in common, and every key appears in exactly n + 1 key chains. After the deployment, every pair of nodes finds exactly one common key. Thus, the probability of key sharing among a pair of sensor nodes is 1. The disadvantage of this solution is that the parameter n has to be a prime power, thus indicating that not all network sizes can be supported for a fixed key-chain size.</p><p>Lee and Stinson have proposed two combinatorial design theory based deterministic schemes: the ID-based one-way function scheme (IOS) and the deterministic multiple space Blom's scheme (DMBS) <ref type="bibr" target="#b65">[66]</ref>. They further discussed the use of combinatorial set systems in the design of deterministic key predistribution schemes for WSNs in <ref type="bibr" target="#b66">[67]</ref>.</p><p>Probabilistic Approaches -Most proposed key management schemes in WSNs are probabilistic and distributed schemes.</p><p>Eschenauer and Gligor introduced a key predistribution scheme for sensor networks which relies on probabilistic key sharing among the nodes of a random graph in <ref type="bibr" target="#b67">[68]</ref>. This scheme consists of three phases: key predistribution, sharedkey discovery, and path key establishment. In the key predistribution phase, each sensor is equipped with a key ring held in the memory. The key ring consists of k keys which are randomly drawn from a large pool of P keys. The association information of the key identifiers in the key ring and sensor identifier is also stored at the base station. Further, the authors assumed that each sensor shares a pairwise key with the base station. In the shared key discovery phase, each sensor discovers its neighbors within the wireless communication range with which it shares keys. Two methods to accomplish this are suggested in <ref type="bibr" target="#b67">[68]</ref>. The simplest method is for each node to broadcast a list of identifiers of the keys in their key ring in plain text, thus allowing neighboring nodes to check whether they share a key. However, an adversary may observe the key-sharing patterns among sensors in this way. The second method uses the challenge-response technique to hide key-sharing patterns among nodes from an adversary. For every K i on a key ring, each node could broadcast a list α, E Ki (α), i = 1, …, k where α is a challenge. The decryption of E K i (α) with the proper key by a recipient would reveal the challenge and establish a shared key with the broadcasting node. This method requires that the challenge α be well known in the sensor network, thus allowing the recipient with the proper key to discover the challenge.</p><p>Finally, in the path-key establishment phase, a path-key is assigned for those sensor nodes within wireless communication range and not sharing a key, but connected by two or more links at the end of the second phase. If a node is compromised, the base station can send a message to all other sensors to revoke the compromised node's key ring. Rekeying follows the same procedure as revocation. The messages from the base station are signed by the pairwise key shared by the base station and sensor nodes, and thus it is ensured that no adversary can forge a base station. If a node is compromised, the attacker has a probability of approximately k/P to be able to successfully attack any link. Because k &lt;&lt; P, it only affects a small number of sensor nodes.</p><p>Inspired by the work in <ref type="bibr" target="#b67">[68]</ref>, which we call the basic random key scheme in the following section, additional random key predistribution schemes have been proposed in <ref type="bibr" target="#b68">[69]</ref><ref type="bibr" target="#b69">[70]</ref><ref type="bibr" target="#b70">[71]</ref><ref type="bibr" target="#b71">[72]</ref><ref type="bibr" target="#b72">[73]</ref><ref type="bibr" target="#b73">[74]</ref>.</p><p>In the basic random key scheme, any two neighboring nodes need to find a single common key from their key rings in order to establish a secure link in the key setup phase. However, Chan et al. observed that increasing the amount of key overlap in the key ring can increase the resilience of the network against node capture <ref type="bibr" target="#b68">[69]</ref>. Thus, they proposed a qcomposite keying scheme, in which it is required that at least q common keys be shared in the key setup phase in order to build a secure link between any two neighboring nodes. Further, a key update phase was introduced to enhance the basic random key scheme. Suppose A has a secure link to B after the key setup phase and the secure key k is from the key pool P. Because k may be residing in the key-ring memory of some other nodes in the network, the security of the link between A and B is jeopardized if any of those nodes are captured. Thus, it is better to update the communication key between A and B instead of using a key in the key pool. To address this problem, they presented a multipath key reinforcement for the key update. Assume there are j disjoint paths between A and B. A generates j random values v 1 , v 2 , …, v j and then routes each random value along a different path to B. When B has received all j keys, the new link key can be computed by both A and B as follows:</p><formula xml:id="formula_5">k′ = k ⊕ v 1 ⊕ v 2 ⊕ … ⊕ v j</formula><p>The adversary has to eavesdrop on all j paths if he/she wants to reconstruct the communication key. This security enhancement comes at the cost of more communication overhead needed to find multiple disjoint paths. Further, Chan et al. also developed a random-pairwise keys scheme for nodeto-node authentication.</p><p>Blundo et al. presented a polynomial-based key predistribution protocol for group key predistribution <ref type="bibr" target="#b75">[75]</ref> which can also be adapted to sensor networks. The key setup server randomly generates a bivariate t-degree polynomial f(x, y) = Σ i t , j=0 a ij x i y j over a finite field F q where q is a prime number that is large enough to accommodate a cryptographic key such that it has the property of f(x, y) = f(y, x). For each sensor i, the setup server computes a polynomial share of f(x, y), that is, f(i, y). For any two sensor nodes i and j, node i can compute the common key f(i, j) by evaluating f(i, y) at point j, and node j can compute the same key f(j, i) = f(i, j) by evaluating f(j, y) at point i. In this approach, each sensor node i needs to store a t-degree polynomial f(i, x), which occupies (t + 1) log q storage space. This scheme is unconditionally secure and tcollusion resistant. However, the storage cost for a polynomial share is exponential in terms of the group size, making it prohibitive in sensor networks.</p><p>Inspired by the work of <ref type="bibr" target="#b67">[68,</ref><ref type="bibr" target="#b68">69,</ref><ref type="bibr" target="#b75">75]</ref>, Liu and Ning proposed a polynomial pool-based key predistribution scheme in <ref type="bibr" target="#b69">[70]</ref>, which also includes three phases: setup, direct key establishment, and path key establishment. In the setup phase, the setup server randomly generates a set F of bivariate t-degree polynomials over the finite field F q . For each sensor node, the setup server picks a subset of polynomials F i ⊆ F and assigns the polynomial shares of these polynomials to node i. In the direct key establishment stage, the sensor nodes find a shared polynomial with other sensor nodes and then establish a pairwise key using the polynomial-based key predistribution scheme discussed in <ref type="bibr" target="#b75">[75]</ref>. The path key establishment phase is similar to that in the basic random key scheme. Further, the proposed framework allows for the study of multiple instantiations of possible pairwise key establishment schemes. Two of the possible instantiations, the key predistribution scheme based on random subset assignment and the grid-based key predistribution scheme, are also presented and analyzed in the article.</p><p>Similar to <ref type="bibr" target="#b69">[70]</ref>, Du et al. presented another pairwise key predistribution scheme in <ref type="bibr" target="#b71">[72]</ref> which uses Blom's method <ref type="bibr" target="#b76">[76]</ref>.</p><p>The key difference between <ref type="bibr" target="#b69">[70]</ref> and <ref type="bibr" target="#b71">[72]</ref> is that the scheme in <ref type="bibr" target="#b69">[70]</ref> is based on a set of bivariate t-degree polynomials while Du's scheme is based on Blom's method. The proposed scheme allows any pair of nodes in a network to be able to find a pairwise secret key. As long as no more than λ nodes are compromised, the network is perfectly secure (which is called the λ-secure property). To use Blom's method, during the predeployment phase, the base station first constructs a (λ + 1) × N matrix G over a finite field GF(q) where N is the size of the network and G is considered to be public information. Then the base station creates a random (λ + 1) × (λ + 1) symmetric matrix D over GF(q), and computes a N × (λ + 1) matrix A = (D ⋅ G) T where (D ⋅ G) T is the transpose of D ⋅ G. Matrix D needs to be kept secret, and should not be disclosed to adversaries. It is easy to verify that A ⋅ G is a symmetric matrix.</p><formula xml:id="formula_6">A ⋅ G = (D ⋅ G) T ⋅ G = G T ⋅ D T ⋅ G = G T ⋅ D ⋅ G = (A ⋅ G) T</formula><p>Thus, we know that K ij = K ji . The idea is to use K ij (or K ji ) as the pairwise key between nodes i and j. To carry out the above computation, in the predistribution phase, for any sensor k = 1, …, N:</p><p>• Store the k th row of matrix A at node k • Store the k th column of matrix G at node k Therefore, when nodes i and j need to find the pairwise key between them, they first exchange their columns of G, and then respectively compute K ij and K ji using their private rows of A.</p><p>In the proposed scheme in <ref type="bibr" target="#b71">[72]</ref>, each sensor node is loaded with G and τ distinct D matrices drawn from a large pool of ω symmetric matrices D 1 , …, D ω of size (λ + 1) × (λ + 1). For each D i , calculate the matrix A i = (D i ⋅ G) T and store the j th row of A i at this node. After deployment, each node needs to discover whether it shares any space with neighbors. If they find out that they have a common space, the nodes can follow Blom's method to build a pairwise key. The scheme in <ref type="bibr" target="#b71">[72]</ref> is scalable and flexible. Moreover, it is substantially more resilient against node capture as compared to <ref type="bibr" target="#b69">[70]</ref>.</p><p>Hwang et al. extended the basic random key scheme and proposed a cluster key grouping scheme <ref type="bibr" target="#b73">[74]</ref>. They further analyzed the tradeoffs involved between energy, memory, and security robustness.</p><p>Notice that location information helps to avoid unnecessary key assignments and thus improve the performance of sensor networks, for example, connectivity, memory usage, and network resilience against node capture. Taking this into account, two random key predistribution schemes were proposed in <ref type="bibr" target="#b72">[73,</ref><ref type="bibr" target="#b77">77]</ref>. Although the presented schemes show improved performance, the deployment information (e.g., location) is required when sensors are deployed.</p><p>The abovementioned schemes are classified and compared in Table <ref type="table">7</ref>.  </p><note type="other">Protocol Ref. Theory Master key Pairwise key Path key Cluster key Scalability Resili ency Process. load Comm. load Storage load</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN RESEARCH ISSUES</head><p>Although some key management protocols have been proposed for sensor networks, the design of key management protocols is still largely open to research. Open research issues include the following:</p><p>• The proposed key management protocols discussed in this section employ different strategies on the trade-off between memory, processing and communication overhead. These protocols could be improved and new key management protocols need to be designed. • All key management protocols discussed in literature so far are based on symmetric key cryptography. Recent progress in public key cryptography has shown that public key cryptography may be suitable for sensor networks. Key management schemes based on public key cryptography need to be designed. • Current proposed key management schemes assume that the base station is trustworthy. However, there may be situations (e.g., in the battlefield) where the security of a base station needs to be considered. New schemes need to be designed considering the security of base stations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURE ROUTING PROTOCOLS</head><p>Many routing protocols have been specifically designed for WSNs. These routing protocols can be divided into three categories according to the network structure: flat-based routing, hierarchical-based routing, and location-based routing <ref type="bibr" target="#b78">[78]</ref>. In flat-based routing, all nodes are typically assigned equal roles or functionality. In hierarchical-based routing, nodes play different roles in the network. In location-based routing, sensor node positions are used to route data in the network. Although many sensor network routing protocols have been proposed in literature, few of them have been designed with security as a goal. Lacking security services in the routing protocols, WSNs are vulnerable to many kinds of attacks. Most network layer attacks against sensor networks fall into one of the categories described above, namely: • Spoofed, altered, or replayed routing information • Selective forwarding • Sinkhole • Sybil • Wormholes • Hello flood attacks • Acknowledgment spoofing These attacks may be applied to compromise the routing protocols in a sensor network. For example, directed diffusion is a flat-based routing algorithm for drawing information from a sensor network <ref type="bibr" target="#b79">[79]</ref>. In directed diffusion, sensors measure events and create gradients of information in their respective neighboring nodes. The base station requests data by broadcasting interest which describes a task to be conducted by the network. The interest is diffused through the network hop by hop, and broadcasted by each node to its neighbors. As the interest is propagated throughout the network, gradients are setup to draw data satisfying the query towards the requesting node. Each sensor that receives the interest sets up a gradient toward the sensor nodes from which it received the interest. This process continues until gradients are setup from the sources back to the base station. Interests initially specify a low rate of data flow, but once a base station starts receiving events it will reinforce one or more neighboring nodes in order to request higher data rate events. This process proceeds recursively until it reaches the nodes generating events, causing them to generate events at a higher data rate. Paths may also be negatively reinforced. Directed diffusion is vul-nerable to many kinds of attacks if authentication is not included in the protocol <ref type="bibr" target="#b25">[26]</ref>. For example, it is easy for an adversary to add himself/herself onto the path taken by a flow of events as described in the following: • The adversary can influence the path by spoofing positive reinforcements. After receiving and rebroadcasting an interest, an adversary could strongly reinforce the nodes to which the interest was sent while spoofing high-rate, low-latency events to the nodes from which the interest was received. • The adversary can replay the interests intercepted from a legitimate base station and list himself/herself as a base station. All events satisfying the interest will then be sent to both the adversary and the legitimate base station. By using the attacks above, the adversary can add himself/ herself onto the path and thus gain full control of the flow. The adversary can eavesdrop, modify, and selectively forward packets of his/her choosing. He/she can drop all forwarded packets and act as a sinkhole. Further, a laptop-class adversary can exert great influence on the topology by using a wormhole attack. The adversary creates a tunnel between a node located near a base station and a node located close to where events are likely to be generated. By spoofing positive or negative reinforcements, the adversary can push data flows away from the base station and towards the nodes selected by the adversary.</p><p>Hierarchical and location based routing protocols not incorporating security services are also vulnerable to many attacks <ref type="bibr" target="#b25">[26]</ref>. For example, location-based routing protocols such as Geographic and Energy Aware Routing (GEAR) <ref type="bibr" target="#b80">[80]</ref> require location information to be exchanged between neighbors. However, location information can be misrepresented. Regardless of the adversary's actual location, he/she may advertise false position data to place himself/herself on the path of a known flow. Once on that path, the adversary can mount selective forwarding and Sybil attacks in the data flows. Simulations in <ref type="bibr" target="#b81">[81]</ref> found that such attacks have great influence on the overall ratio of successfully delivered messages in the network.</p><p>Secure routing in ad hoc networks is similar to that in sensor networks and has been well studied in the literature <ref type="bibr" target="#b13">[14]</ref>. However, the defense mechanisms developed for ad hoc networks cannot be directly applied to sensor networks because of the differences between sensor and ad hoc networks discussed earlier.</p><p>Ideally, a secure routing protocol should guarantee the integrity, authentication, and availability of messages in the presence of adversaries of arbitrary power. In the presence of only outsider adversaries, it is conceivable to achieve these idealized goals. However, in the presence of compromised nodes or insider adversaries, especially those with laptop class capabilities, it is most likely that some if not all of these goals are not fully attainable. In this situation, the best we can hope for is graceful degradation instead of a complete compromise of the network. To achieve the above goal requires that a routing protocol degrades no faster than a rate approximately proportional to the ratio of compromised nodes to total nodes in the network <ref type="bibr" target="#b25">[26]</ref>.</p><p>A secure routing protocol depends on an appropriate key management scheme in a WSN, which has been discussed earlier. Before a routing protocol starts, sensor nodes should have been loaded with proper keys (e.g., the key for confidentiality, authentication, etc.). One of the fundamental security services in sensor networks is broadcast authentication, which enables the base station to broadcast authenticated data to the entire sensor network. In this section, we first discuss the broadcast authentication problem and then review several secure routing schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BROADCAST AUTHENTICATION</head><p>Previous proposals for authenticated broadcast are impractical in WSNs for the following reasons: • Most proposals rely on public key cryptography for the authentication. However, public key cryptography is impractical for WSNs; • Even one-time signature schemes that are based on symmetric key cryptography have too much overhead. µTESLA <ref type="bibr" target="#b8">[10]</ref> and its extensions <ref type="bibr" target="#b82">[82,</ref><ref type="bibr" target="#b83">83]</ref> have been proposed to provide broadcast authentication for sensor networks.</p><p>µTESLA is an authenticated broadcast protocol which was proposed by Perrig et al. for the SPINS protocol <ref type="bibr" target="#b6">[8]</ref>. µTESLA introduces asymmetry through a delayed disclosure of symmetric keys resulting in an efficient broadcast authentication scheme. µTESLA requires that the base station and nodes be loosely time synchronized, and that each node knows an upper bound on the maximum synchronization error.</p><p>To send an authenticated packet, the base station simply computes a MAC on the packet with a key that is secret at that point in time. When a node gets a packet, it can verify that the corresponding MAC key was not yet disclosed by the base station. Since a receiving node is assured that the MAC key is known only by the base station, the receiving node is assured that no adversary could have altered the packet in transit. The node stores the packet in a buffer. At the time of key disclosure, the base station broadcasts the verification key to all receivers. When a node receives the disclosed key, it can easily verify the correctness of the key. If the key is correct, the node can now use it to authenticate the packet stored in its buffer.</p><p>Each MAC key is a key from the key chain, generated by a public one-way function F. To generate the one-way key chain, the sender chooses the last key K n from the chain, and repeatedly applies F to compute all other keys: K i = F(K i+1 ). Figure <ref type="figure">3</ref> shows an example of µTESLA. The receiver node is loosely time-synchronized and knows K 0 in an authenticated way. Packets P 1 and P 2 sent in interval 1 contain a MAC with key K 1 . Packet P 3 has a MAC using key K 2 . If P 4 , P 5 , and P 6 are all lost, as well as the packet that disclosed key K 1 , the receiver cannot authenticate P 1 , P 2 , and P 3 . In interval 4 the base station broadcasts key K 2 , which the nodes authenticate by verifying K 0 = F(F(K 2 )), and hence also know K 1 = F(K 2 ), so that they can authenticate packets P 1 , P 2 with K 1 , and P 3 with K 2 .</p><p>SPINS limits the broadcasting capability to only the base station. If a node wants to broadcast authenticated data, the node has to broadcast the data through the base station. The data is first sent to the base station in an authenticated way. It is then broadcasted by the base station.</p><p>To bootstrap a new receiver, µTESLA depends on a pointto-point authentication mechanism in which a receiver sends a request message to the base station and the base station replies with a message containing all the necessary parame-ters. Notice that µTESLA requires that the base station unicast initial parameters to individual sensor nodes, thus incurring a long delay to boot up a large-scale sensor network. Liu and Ning proposed a multilevel key chain scheme for broadcast authentication to overcome this deficiency in <ref type="bibr" target="#b82">[82,</ref><ref type="bibr" target="#b83">83]</ref>.</p><p>The basic idea in <ref type="bibr" target="#b82">[82,</ref><ref type="bibr" target="#b83">83]</ref> is to predetermine and broadcast the initial parameters required by µTESLA instead of using unicast-based message transmission. The simplest way is to predistribute the µTESLA parameters with a master key during the initialization of the sensor nodes. As a result, all sensor nodes have the key chain commitments and other necessary parameters once they are initialized, and are ready to use µTESLA as long as the starting time has passed. Furthermore, Liu and Ning introduced a multilevel key chain scheme, in which the higher-level key chains are used to authenticate the commitments of lower-level ones. However, the multilevel key chain scheme suffers from possible DoS attacks during the commitment distribution stage. Further, none of the µTESLA or multilevel key chain schemes is scalable in terms of the number of senders. In <ref type="bibr" target="#b84">[84]</ref>, a practical broadcast authentication protocol was proposed to support a potentially large number of broadcast senders using µTESLA as a building block.</p><p>µTESLA provides broadcast authentication for base stations but is not suitable for local broadcast authentication. This is because µTESLA does not provide immediate authentication. For every received packet, a node has to wait for one µTESLA interval to receive the MAC key used in computing the MAC for the packet. As a result, if µTESLA is used for local broadcast authentication, a message traversing l hops will take at least l µTESLA intervals to arrive at the destination. In addition, a sensor node has to buffer all the unverified packets. Both the latency and the storage requirements limit the scheme for authenticating infrequent messages broadcast by the base station. Zhu et al. proposed a one-way key chain scheme for one-hop broadcast authentication in LEAP <ref type="bibr" target="#b62">[63]</ref>. In this scheme, every node generates a one-way key chain of certain length and then transmits the commitment (i.e., the first key) of the key chain to each neighbor, encrypted with their pairwise shared key. Whenever a node has a message to send, it attaches to the message the next authenticated key in the key chain. The authenticated keys are disclosed in an order that is reverse to their generation. A receiving neighbor can verify the message based on the commitment or an authenticated key it received from the sending node more recently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURE ROUTING</head><p>The goal of a secure routing protocol is to ensure the integrity, authentication, and availability of messages. The proposed secure routing protocols for WSNs in the literature are based on symmetric key cryptography, except the work in <ref type="bibr" target="#b85">[85]</ref>, which is based on public key cryptography.</p><p>SPINS is a suite of security protocols optimized for sensor networks <ref type="bibr" target="#b6">[8]</ref>. SPINS includes two building blocks: SNEP and µTESLA. SNEP provides data confidentiality, two-party data authentication, and data freshness for peer-to-peer communication (node to base station). µTESLA provides authenticated broadcast as discussed before. We discuss SNEP in this subsection.</p><p>SPINS assumes that each node is predistributed with a master key K which is shared with the base station at creation time. All other keys, including a key K encr for encryption, a key K mac for MAC generation, and a key K rand for random number generation, are derived from the master key using a strong one-way function. SPINS uses RC5 for confidentiality. nFigure 3. Using a time-released key chain for source authentication (Source: <ref type="bibr" target="#b6">[8]</ref>).</p><formula xml:id="formula_7">F F F F K 0 K 1 K 2 K 3 K 4 Time P1 P2 P3 P4 P5 P6 P7</formula><p>If A wants to send a message to base station B, the complete message that A sends to B is</p><formula xml:id="formula_8">A → B : D 〈K encr,C 〉 ,MAC(K mac ,C|D) 〈K encr,C 〉</formula><p>while D is the transmitted data and C is a shared counter between the sender and the receiver for the block cipher in counter mode. The counter C is incremented after each message is sent and received in both the sender and receiver sides. SNEP also provides a counter exchange protocol to synchronize the counter value in both sides. SNEP offers the following properties: semantic security, data authentication, replay protection, weak freshness, and low communication overhead. SPINS identifies two types of freshness: weak freshness and strong freshness. Weak freshness provides partial message ordering and carries no delay information while strong freshness provides a total order on a request-response pair and allows for delay estimation.</p><p>• Semantic security: The counter value is incremented after each message and thus the same message is encrypted differently each time. • Data authentication: A receiver can be assured that the message originated from the claimed sender if the MAC verifies correctly. • Replay protection: The counter value in the MAC prevents replaying old message. • Weak freshness: The counter also maintains a message ordering in the receiver side and yields weak freshness. SNEP provides weak data freshness only because there is no absolute assurance to node A that a message was created by node B in response to an event in node A. • Low communication overhead: The counter state is kept at each end point and does not need to be sent in each message.</p><p>The directed diffusion routing protocol was proposed by Intanagonwiwat et al. without considering security issues <ref type="bibr" target="#b79">[79]</ref>. Pietro et al. proposed an extension of the directed diffusion protocol which provides secure multicasting in <ref type="bibr" target="#b61">[62]</ref>. The extended scheme, Logical Key Hierarchy for WSNs (LKHW), provides robustness in routing and security and supports both backward and forward secrecy for sensor join and leave operations. However, it does not provide data authentication.</p><p>Inspired by the work on public key cryptography <ref type="bibr" target="#b4">[6,</ref><ref type="bibr" target="#b5">7,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b42">43]</ref>, Du et al. investigated the public key authentication problem <ref type="bibr" target="#b85">[85]</ref>. The use of public key cryptography eases many problems in secure routing, for example, authentication and integrity. However, before a node A uses the public key from another node B, A must verify that the public key is actually B's (i.e., A must authenticate B's public key); otherwise, manin-the-middle attacks are possible. In general networks, public key authentication involves a signature verification on a certificate signed by a trusted third party Certificate Authority (CA) <ref type="bibr">[86]</ref>. However, the signature verification operations are still too expensive for sensor nodes, as depicted in Table <ref type="table">3</ref> and 4. Du et al. proposed an efficient alternative that uses only a one-way hash function for the public key authentication. The proposed scheme can be divided into two stages. In the predistribution stage, a Merkle tree R is constructed with each leaf L i corresponding to a sensor node (more information on Merkle trees is given below). Let pk i represent node i's public key, V be an internal tree node, and V left and V right be V's two children. The value of an internal tree node is denoted by φ. The Merkle tree can then be constructed as follows:</p><formula xml:id="formula_9">φ(L i ) = h(id i , pk i ), for i = 1, …, N φ(V) = h(φ(V left ) || φ(V right ))</formula><p>where "||" represents the concatenation of two strings and h is a one-way hash function such as MD5 or SHA-1. Let R be the root of the tree. Each sensor node v needs to store the root value φ(R) and the sibling node values λ 1 , …, λ H along the path from v to R. If node A wants to authenticate B's public key, B sends its public key pk, along with the value of λ 1 , …, λ H to node A. Then, A can use the same procedure to reconstruct the Merkle tree R′ and calculate the root value φ(R′). A will trust B to be authentic if φ(R′) = φ(R). A sensor node only needs H + 1 storage units for the extra hash values. Based on this scheme, Du et al. further extended the idea to reduce the height of the Merkle tree in order to improve the communication overhead of the scheme. The proposed scheme is more efficient than signature verification on certificates. However, the scheme requires that some hash values be distributed in a predistribution stage. This results in some scalability issues when new sensors are added to an existing WSN.</p><p>The above discussion is summarized in Table <ref type="table">8</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN RESEARCH ISSUES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURE DATA AGGREGATION</head><p>Data communication constitutes an important share of the total energy consumption of the sensor network. The simulation in <ref type="bibr" target="#b6">[8]</ref> shows that data transmission accounts for 71 percent of the energy cost of computation and communication for the SNEP protocol. Thus, data aggregation can greatly help conserve the scarce energy resources by eliminating redundant data. Data aggregation (fusion) protocols aim at eliminating redundant data transmitted across the network and are essential for energy-constrained WSNs. Traditional data aggregation techniques include simple types of queries such as SUM, COUNT, AVERAGE, and MIN/MAX. Some researchers also extend data aggregation to median, the most frequent (consensus) data values, a histogram of the data distribution, and range queries <ref type="bibr" target="#b86">[87]</ref>. Data aggregation can be divided into two stages: detection and data fusion.</p><p>In a WSN, there are usually certain nodes, called aggregators, helping to aggregate information requested by queries. When an aggregator node is compromised, it is easy for the adversary to inject false data into sensor networks. Thus, the aggregators are vulnerable to attack. Another possible attack is to compromise a sensor node and inject forged data through a sensor node. Without authentication, the attackers can fool the aggregators into reporting false data to the base station. Secure data aggregation requires authentication, confidentiality, and integrity. Moreover, secure data aggregation also requires the cooperation of sensor nodes to identify the compromised sensors.</p><p>However, requirements for confidentiality and data aggregation are at odds with each other. Confidentiality requires the data to be transmitted in encrypted text while data aggregation is usually based on plain text. A straightforward method is to invoke end-to-end encryption and decryption before evoking data aggregation. However, the tradeoff is that the end-to-end encryption and decryption operations consume more energy, which is of great concern in WSNs. An alterna-tive way is to provide data aggregation on concealed data, which requires a particular class of encryption transformation. However, this method usually lowers the security level.</p><p>Figure <ref type="figure" target="#fig_2">4</ref> shows a taxonomy of secure data aggregation protocols in WSNs. According to the protocol operation, secure data aggregation can be classified into two categories: plaintext based and cipher based. This section reviews the techniques for secure data aggregation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PLAIN-TEXT BASED SECURE DATA AGGREGATION</head><p>Hu and Evans proposed a secure aggregation (SA) protocol for WSNs that is resilient to both intruder devices and single device key compromises <ref type="bibr" target="#b7">[9]</ref>. However, the protocol may be vulnerable if a parent and a child node in the hierarchy are compromised.</p><p>Przydatek et al. proposed a secure information aggregation (SIA) framework for sensor networks <ref type="bibr" target="#b8">[10]</ref>. The framework consists of three node categories: a home server, base station(s), and sensor nodes. A base station is a resourcesenhanced node which is used as intermediary between the home server and the sensor nodes, and is also the candidate to perform the aggregation task. SIA assumes that each sensor has a unique identifier and shares a separate secret cryptographic key with both the home server and the aggregator. The keys enable message authentication and encryption if data confidentiality is required. Moreover, it further assumes that the home server and base station can use a mechanism, such as µTESLA, to broadcast authentic messages. The proposed solution consists of three parts: computation of the result, committing to the collected data, and reporting the aggregation result while proving the correctness of the result.</p><p>In the first part, the aggregator collects the data from sensors and locally computes the aggregation result. The aggregator can verify the authenticity of each sensor reading.</p><p>In the second part, the aggregator commits to the collected data. The commitment to the input data ensures that the aggregator uses the data provided by the sensors, and that the statement to be verified by the home server about the correctness of computed results is meaningful. One efficient way of committing to the data is a Merkle hash-tree construction. In this construction, all the data collected from the sensors is placed at the leaves of the tree. The aggregator then computes a binary hash tree starting from the leaf nodes. Each internal node in the hash tree is computed as the hash value of the concatenation of its two child nodes. The root of the tree is called the commitment of the collected data. As the hash function in use is collision resistant, once the aggregator commits to the collected values it cannot change any of them. Figure <ref type="figure">5</ref> shows an example of a Merkle hash tree.</p><p>In the third part, the aggregator and the home server engage in a protocol in which the aggregator communicates the aggregation result and the commitment to the server while proving to the server that the reported results are correct using interactive proof protocols. Moreover, the authors also presented efficient protocols for secure computation of the median and average of the measurements, for the estimation of the network size, and for finding the minimum and maximum sensor reading.</p><p>Deng et al. proposed a collection of mechanisms for securing in-network processing (SINP) for WSNs <ref type="bibr" target="#b88">[88]</ref>. Security mechanisms were proposed to address the downstream requirement that sensor nodes authenticate commands disseminated from parent aggregators and the upstream requirement that aggregators authenticate data produced by sensors before aggregating that data. In the downstream stage, two techniques are involved: one-way functions and µTESLA. The SA <ref type="bibr" target="#b7">[9]</ref>, SIA <ref type="bibr" target="#b8">[10]</ref>, SINP <ref type="bibr" target="#b88">[88]</ref>, ESPDA <ref type="bibr" target="#b89">[89,</ref><ref type="bibr" target="#b90">90]</ref> SDDA <ref type="bibr" target="#b91">[91]</ref>, WDA <ref type="bibr" target="#b92">[92]</ref> CDA <ref type="bibr" target="#b93">[93]</ref>, HSC <ref type="bibr" target="#b94">[94]</ref> Plaintext-based aggregation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Protocol operations</head><p>Cipher-based aggregation upstream stage requires that a pairwise key be shared between an aggregator and its sensor nodes. Çam et al. proposed an energy-efficient secure patternbased data aggregation (ESPDA) protocol for wireless sensor networks in <ref type="bibr" target="#b89">[89,</ref><ref type="bibr" target="#b90">90]</ref>. ESPDA is applicable for hierarchy-based sensor networks. In ESPDA, a cluster head first requests sensor nodes to send the corresponding pattern code for the sensed data. If multiple sensor nodes send the same pattern code to the cluster head, only one of them is permitted to send the data to the cluster head. ESPDA is secure because it does not require encrypted data to be decrypted by clusterheads in order to perform data aggregation.</p><p>Further, the authors introduced a secure differential data aggregation (SDDA) scheme based on pattern codes <ref type="bibr" target="#b91">[91]</ref>. SDDA prevents redundant data transmission from sensor nodes by implementing the following schemes: SDDA transmits differential data rather than raw data, SDDA performs data aggregation on pattern codes representing the main characteristics of sensed data, and SDDA employs a sleep protocol to coordinate the activation of sensing units in such a way that only one of the sensor nodes capable of sensing the data is activated at a given time. In the SDDA data transmission scheme, the raw data from sensor nodes is compared to reference data with the difference data being transmitted. The reference data is obtained by taking the average of previously transmitted data.</p><p>Du et al. proposed a witness-based data aggregation (WDA) scheme for WSNs to assure the validation of the data sent from data fusion nodes to the base station <ref type="bibr" target="#b92">[92]</ref>. In order to prove the validity of the fusion result, the fusion node has to provide proofs from several witnesses. A witness is one who also conducts data fusion like a data fusion node, but does not forward its result to the base station. Instead, each witness computes the message authentication code (MAC) of the result and then provides it to the data fusion node who must forward the proofs to the base station.</p><p>Wagner studied secure data aggregation in sensor networks and proposed a mathematical framework for formally evaluating their security <ref type="bibr" target="#b93">[93]</ref>. In <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b94">94]</ref>, the authors proposed two data fusion schemes for the filtering of injected false data in sensor networks, which will be introduced below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CIPHER-BASED SECURE DATA AGGREGATION</head><p>Two cipher-based secure data aggregation schemes were proposed in <ref type="bibr" target="#b95">[95,</ref><ref type="bibr" target="#b96">96]</ref>, works which are based on a particular encryption transformation called a privacy homomorphism (PH). This is an encryption transformation that allows direct computation on encrypted data. Let Q and R denote two rings, and let + denote addition and × denote multiplication on both. Let K be the key space. We denote an encryption transformation E: K × Q → R and the corresponding decryption transformation D :</p><formula xml:id="formula_10">K × R → Q. Given a, b ∈ Q, and k ∈ K, we term a + b = D k (E k (a) + E k (b))</formula><p>additively homomorphic and</p><formula xml:id="formula_11">a × b = D k (E k (a) × E k (b))</formula><p>multiplicative homomorphic <ref type="bibr" target="#b11">[12]</ref>. The proposed scheme in <ref type="bibr" target="#b95">[95]</ref>, Concealed Data Aggregation (CDA), is based on the PH proposed in <ref type="bibr" target="#b97">[97]</ref>, although the study in <ref type="bibr" target="#b98">[98]</ref> has shown that the proposed PH in <ref type="bibr" target="#b97">[97]</ref> is unsecure against chosen plain text attacks for some parameter settings. In <ref type="bibr" target="#b95">[95]</ref> the authors claimed that, for the WSN data aggregation scenario, the security level is still adequate and the proposed PH method in <ref type="bibr" target="#b97">[97]</ref> can be employed for encryption. CDA can be used to calculate SUM and AVERAGE in a hierarchical WSN. To calculate AVERAGE, an aggregator needs to know the number of sensor nodes n.</p><p>Castelluccia et al. proposed a simple and provable secure additively homomorphic stream cipher (HSC) that allows for the efficient aggregation of encrypted data <ref type="bibr" target="#b96">[96]</ref>. The new cipher uses modular addition and is therefore very well suited for CPU-constrained devices such as those in WSNs. The aggregation based on this cipher can be used to efficiently compute statistical values such as the mean, variance, and standard deviation of sensed data while achieving significant bandwidth gain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN RESEARCH ISSUES</head><p>Data aggregation is essential for WSNs and security is absolutely necessary to defend against compromised sensor nodes. Open research issues include the following: • Several secure data aggregation protocols have been proposed; however, no comparisons have been conducted on these protocols. Further evaluation and comparison are nFigure 5. Merkle hash tree used to commit to a set of values. The aggregator constructs the Merkle hash tree over the sensor measurement m 0 , …, m 7 . To construct the Merkle hash tree, the aggregator first hashes the measurements with a cryptographic hash function, e.g., v 3,0 = H(m 0 ), assuming that the size of the hash is smaller than the size of the data. Then, each internal value of the Merkle hash tree is derived from its two child nodes: vi,j = H(v i+1 , 2j || v i+1 , 2j+1 ). The Merkle hash tree is a commitment to all the leaf nodes. Once the aggregator commits to the collected values, it cannot change any of the collected data. A verifier can authenticate any value by verifying that the leaf value is used to derive the root node given the authentic root node v 0,0 . For example, to authenticate the measurement m 5 , the aggregator sends m 5 along with v 3, 4 , v 2,3 , v 1,0 , and m 5 is authentic if the following equality holds:</p><formula xml:id="formula_12">v 0,0 = H(v 1,0 || H(H(v 3,4 || H(m 5 )) || v 2,3</formula><p>)). (Source: <ref type="bibr" target="#b8">[10]</ref>).</p><formula xml:id="formula_13">v 1,0 v 0,0 =H(v 1,0 //v 1,1 ) v 1,1 v 2,0 v 3,0 m 0 v 3,1 m 1 v 3,2 m 2 v 3,3 m 3 v 3,4 m 4 v 3,5 m 5 v 3,6 m 6 v 3,7 m 7 H v 2,1 v 2,2 v 2,3</formula><p>desirable to learn the performance of these protocols. The performance matrices might include security, processing overhead, communication overhead, energy consumption, and data compression rate. • New data aggregation protocols need to be developed to address higher scalability and higher reliability against aggregator and sensor node cheating.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRUSION DETECTION</head><p>The security mechanisms implemented in secure routing protocols and secure data aggregation protocols are configured ahead of time in order to inhibit an attacker from breaking the security of the network. These security mechanisms alone cannot ensure perfect security of a WSN. Since sensor nodes can be compromised, it is easy for an adversary to inject false data into a WSN through the compromised nodes. Authentication and data encryption are not enough for ensuring data security. Another approach to protect WSNs involves mechanisms for detecting and reacting to intrusions. An Intrusion Detection System (IDS) monitors a host or network for suspicious activity patterns outside normal and expected behavior <ref type="bibr">[5]</ref>. It is based on the assumption that there exists a noticeable difference in the behaviors of an intruder and a legitimate user in the network such that an IDS can match those preprogrammed or possibly learned rules. Based on the analysis model used for analyzing the audit data to detect intrusions, IDSs in ad hoc networks are classified into rule-based and anomaly-based systems. The rule-based intrusion detection systems are used to detect known patterns of intrusions (e.g., <ref type="bibr" target="#b99">[99]</ref> and <ref type="bibr" target="#b100">[100]</ref>) while anomaly-based systems are used to detect new or unknown intrusions (e.g., <ref type="bibr" target="#b101">[101]</ref> and <ref type="bibr" target="#b102">[102]</ref>). A rule-based IDS has a low false-alarm rate when compared to an anomaly-based system, and an anomaly-based IDS has a high intrusion-detection rate in comparison to a rule-based system.</p><p>However, WSNs are generally application-specific and lack basic information on topology, normal usage, expected communication patterns, and so forth. It is impractical to preinstall some fixed patterns in sensors before they are deployed. Moreover, due to constraints in sensors, to learn and detect these parameters after deployment is both time and energy consuming. Thus, existing IDSs in ad hoc networks may not be adapted to WSNs. The research on intrusion detection in WSNs is still preliminary. Current research focuses on how to detect and eliminate injected false information. Note that compromised nodes can always inject false information into a sensor network. Thus, cooperation among sensors, especially neighboring nodes, is necessary to decide the validity of a report. In this section, we discuss the intrusion detection techniques in WSNs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRUSION DETECTION IN WSNS</head><p>Zhu et al. proposed an interleaved hop-by-hop authentication (IHOP) scheme in <ref type="bibr" target="#b10">[11]</ref>. IHOP guarantees that the base station will detect any injected false data packets when no more than a certain number t of nodes are compromised. The sensor network is organized in a cluster-based hierarchy. Each cluster head builds a route to the base station and each intermediate node has an upper associate node and a lower associate node that is t + 1 hops away. IHOP depends on the use of some sharing keys: • Every node shares a master secret key with the base station. • Each node knows its one-hop neighbors and has estab-lished a pairwise key with each of them.</p><p>• A node can establish a pairwise key with another node that is multiple hops away if needed. Further, IHOP also assumes that the base station has a mechanism to authenticate broadcast messages (e.g., µTES-LA).</p><p>A cluster head collects information from its members and sends a report to the base station only when at least t + 1 sensors observe the same result. Meanwhile, a cluster head also collects the message authentication codes (MACs) from detecting nodes. Each detecting node sends two MACs to the cluster head: a MAC using the key shared with the base station, referred to as the individual MAC, and a MAC using the key shared with its upper associate nodes, referred to as the pairwise MAC. The cluster head then compresses the t + 1 individual MACs by XORing them to reduces the size of a report. However, the pairwise MACs are not compressed for transmission. If they were, a node relaying the message would not be able to extract the pairwise MACs of interest to it. Thus, a legitimate report includes t + 1 pairwise MACs and a compressed MAC for the base station. When an intermediate node receives a report, it verifies the MAC of its lower associate node. If it fails, the report is eliminated. Otherwise, it removes the MAC, generates a new MAC using its upper associate node pairwise key, and appends it to the report.</p><p>IHOP ensures that the base station can detect false data packets when no more than t nodes are compromised. However, the article does not show how to select the parameter t for a sensor network.</p><p>Ye et al. proposed a statistical en-route filtering (SEF) mechanism that can detect and drop false data <ref type="bibr" target="#b94">[94]</ref>. SEF uses a similar key assignment scheme as the basic random key scheme presented in <ref type="bibr" target="#b67">[68]</ref>. There is a global key pool and each sensor is pre-installed with a partition selected from the pool. When a stimulus occurs in the fields, the sensors detecting this event elect one of the nodes as the center of stimulus (CoS), a node which collects and summarizes the detection results from all detecting nodes and produces a synthesized report on behalf of the group. The CoS generates the report and broadcasts the report to all detecting nodes. If a detecting node agrees with the report, it generates a MAC using a key in its partition and sends the MAC to the CoS. The CoS reports the stimulus to the base station only if it receives adequate MACs. A legitimate report carries multiple MACs and a single compromised node cannot fake all MACs. When an en-route node receives the report, it verifies the correctness of the MACs probabilistically and drops those with invalid MACs immediately. Finally, if a report reaches the base station, the base station checks all the MACs and filters out any remaining false reports that escaped the en-route filtering. When a stimulus appears, multiple nodes that detect it collaborate to process the signal and elect the CoS based on the sensing signal strength. The node with the strongest signal stands out as the CoS. To reduce the communication overhead, SEF further uses a Bloom filter <ref type="bibr" target="#b103">[103]</ref> to reduce MAC sizes. SEF is designed to protect against injected false information and cannot defend against selective forwarding attacks.</p><p>Deng et al. proposed an intrusion-tolerant routing in wireless sensor networks (INSENS) in <ref type="bibr" target="#b104">[104]</ref> and they further evaluated its performance in <ref type="bibr" target="#b105">[105]</ref>. INSENS is a proactive routing protocol. The sensors collect local topology information and send this information back to the base station. The base station generates a forwarding table based on the collected information and sends the routing table to the corresponding sensors. The base station is the central control point for calculating the routing table, which relieves the computation load of individual sensors. Protecting against intrusions focuses on three attacks: DoS-type attacks, routing attacks, and select forwarding attacks. To protect against DoStype attacks, only the base station is allowed to broadcast to the entire network and individual sensors can only send unicast messages. INSENS requires some broadcast authentication scheme such as µTESLA. Although a compromised node may still alter a valid message and broadcast that message to its neighbors, the damage is restricted to only nearby nodes and the downstream nodes. To protect against routing attacks which propagate erroneous control packets, a symmetric key is chosen for confidentiality and authentication. Further, to protect against select forwarding attacks, data are sent to base stations along two separate paths which are calculated by the base stations in the route discovery step. However, INSENS is built on a table based routing protocol, and as such depends on the base stations to collect all needed topology information to calculate the forwarding table for each individual sensor. Thus, INSENS is not scalable in large sensor networks.</p><p>Wang et al. proposed a scheme to detect whether a node is faulty or malicious with the collaboration of neighbor nodes <ref type="bibr" target="#b106">[106]</ref>. In the proposed scheme, when a node suspects that one of its neighbors is faulty, it sends out messages to request opinions on the behavior of this suspected node from other neighbors of the suspect. After collecting the results, the node analyzes the results to diagnose whether the suspect has a fault. The authors formalized the problem as how to construct a dominating tree to cover all the neighbors of the suspect and further proposed two tree-based propagation collection protocols to construct a dominating tree and collect information via the tree structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN RESEARCH ISSUES</head><p>Intrusion detection in WSNs is still largely open to research. Key research issues include the following: • Due to the constraints in WSNs, intrusion detection has many aspects that are not of concern in other network types. The problem of intrusion detection needs to be well defined in WSNs. • The proposed IDS protocols in literature focus on filtering injected false information only <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b94">94,</ref><ref type="bibr" target="#b104">104]</ref>. These protocols need to be improved so as to address scalability issues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURITY IN WSNS: FUTURE DIRECTIONS</head><p>WSNs are promising solutions for many applications and security is often a key concern. Although research efforts have been made with regard to cryptography, key management, secure routing, secure data aggregation, and intrusion detection in WSNs, there are still some challenges to be addressed. First, the selection of the appropriate cryptographic methods depends on the processing capability of sensor nodes, indicating that there is no unified solution for all sensor networks. Instead, the security mechanisms are highly application-specific. Second, sensors are characterized by the constraints on energy, computation capability, memory, and communication bandwidth. The design of security services in WSNs must satisfy these constraints. Third, most of the current protocols assume that the sensor nodes and the base station are stationary. However, there may be situations, such as battlefield environments, where the base station and possibly the sensors need to be mobile. The mobility of sensor nodes has a great influence on sensor network topology and thus raises many issues about secure routing protocols. In particular, we identi-fy some of the future directions in the study of security issues in WSNs as follows.</p><p>• Exploit the availability of private key operations on sensor nodes: Recent studies on public key cryptography show that public key operations may be practical in sensor nodes. However, private key operations are still too expensive to accomplish in a sensor node. As public key cryptography can greatly ease the design of security in WSNs, improving the efficiency of private key operations on sensor nodes is highly desirable. • Secure routing protocols for mobile sensor networks: The mobility of sensor nodes has a great influence on sensor network topology and thus on the routing protocols.</p><p>Mobility can be at the base station, sensor nodes, or both. Current protocols assume the sensor network is stationary. New secure routing protocols for mobile sensor networks need to be developed. • Continuous stream security in WSNs: Current work on security in sensor networks focuses on discrete events such as temperature and humidity. Continuous stream events such as video and images are not discussed. Video and image sensors for WSNs might not be widely available now, but will likely be in the future. Substantial differences in authentication and encryption exist between discrete events and continuous events, indicating that there will be distinctions between continuous stream security and the current protocols in WSNs. • QoS and security: Performance is generally degraded with the addition of security services in WSNs. Current studies on security in WSNs focus on individual topics such as key management, secure routing, secure data aggregation, and intrusion detection. QoS and security services need to be evaluated together in WSNs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SUMMARY</head><p>As WSNs grow in capability and are used more frequently, the need for security in them becomes more apparent. However, the nature of nodes in WSNs gives rise to constraints such as limited energy, processing capability, and storage capacity. These constraints make WSNs very different from traditional ad hoc wireless networks. As such, special protocols and techniques have been developed for use in WSNs. While existing surveys <ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref><ref type="bibr" target="#b14">[15]</ref> discuss security in wireless networks, none focus specifically on security in WSNs and the constraints unique to them. In this article, we have surveyed the security issues in WSNs starting with the attacks and countermeasures in each network layer followed by the issues and solutions in cryptography, key management, secure routing, secure data aggregation, and, finally, intrusion detection. While the discussed security services certainly add more computation, communication, and storage overhead in WSNs, and thus consume more energy, they are highly desirable and often required in real-world applications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>nTable 7 .</head><label>7</label><figDesc>Classification and comparison of key management protocols in WSNs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>nFigure 4 .</head><label>4</label><figDesc>Secure data aggregation in WSNs: a taxonomy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>nTable 1 .</head><label>1</label><figDesc>Variety of real-life sensor nodes.</figDesc><table><row><cell></cell><cell></cell><cell cols="3">Berkeley mote [16]</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>EYES [17]</cell><cell>Medusa MK-2 [18]</cell><cell>Imote[19]</cell></row><row><cell></cell><cell>WeC</cell><cell>rene2</cell><cell>rene2</cell><cell>dot</cell><cell>mica</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Month/Year</cell><cell>09/99</cell><cell>10/00</cell><cell>06/01</cell><cell>08/01</cell><cell>02/02</cell><cell>03/02</cell><cell>09/02</cell><cell>01/03</cell></row><row><cell>CPU</cell><cell cols="2">AT90LS8535</cell><cell cols="2">ATmega163</cell><cell>ATmega103 1</cell><cell>MSP 430F149</cell><cell>40MHz ARM THUMB</cell><cell>ARM core 12MHz</cell></row><row><cell>Prog. memory</cell><cell>8KB</cell><cell></cell><cell>16KB</cell><cell></cell><cell>128KB</cell><cell>60KB</cell><cell>1MB</cell><cell>512KB</cell></row><row><cell>RAM</cell><cell>0.5KB</cell><cell></cell><cell>1KB</cell><cell></cell><cell>4KB</cell><cell>2KB</cell><cell>136KB</cell><cell>64KB</cell></row><row><cell>Radio</cell><cell></cell><cell cols="2">RFM TR1000 916MHz</cell><cell></cell><cell cols="2">RFM TR1001 868.35MHz</cell><cell>RFM TR1000 916MHz</cell><cell>BT 2.4 GHz</cell></row><row><cell>Rate</cell><cell></cell><cell cols="2">10 kb/s</cell><cell></cell><cell>10/40 kb/s</cell><cell>115 kb/s</cell><cell>115 kb/s</cell><cell>100kb/s</cell></row></table><note><p><p>1 </p>Later versions are an ATmega128 running in 103 mode.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>• Mote-class versus laptop-class attacks: in mote-class attacks, an adversary attacks a WSN by using a few nodes with similar capabilities to the network nodes; in laptop-class attacks, an adversary can use more powerful devices (e.g., a laptop) to attack a WSN. These devices have greater transmission range, processing power, and energy reserves than the network nodes.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>The performance of symmetric key cryptography is mainly decided by the following factors: • Embedded data bus width: many encryption algorithms prefer 32 bit word arithmetic, but most embedded processors usually use 8 or 16 bit wide data bus. • Instruction set: the Instruction Set Architecture (ISA) has specific effects on certain algorithms.</figDesc><table><row><cell>For example,</cell></row><row><cell>most embedded processors do not support the variable-</cell></row><row><cell>bit rotation instruction like ROL (rotate bits left) of the</cell></row><row><cell>Intel architecture, which greatly improves the perfor-</cell></row><row><cell>mance of RC5.</cell></row><row><cell>Due to the constraints in sensor nodes, symmetric key</cell></row><row><cell>cryptography is preferred in a WSN.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>LA and its extensions require the sensor network to be loosely time-synchronized. This requirement is often hard to meet and new techniques that do not require nTable 8. Comparison of secure routing protocols.</figDesc><table><row><cell></cell><cell>Reference</cell><cell>Routing</cell><cell>Confidentiality</cell><cell>P2P Authentication</cell><cell>Broadcast authentication</cell><cell>Integrity</cell><cell>Scalability</cell></row><row><cell>SNEP</cell><cell>[8]</cell><cell>Flat</cell><cell>Yes</cell><cell>Yes</cell><cell>No</cell><cell>Yes</cell><cell>Good</cell></row><row><cell>LKHW</cell><cell>[62]</cell><cell>Flat</cell><cell>Yes</cell><cell>No</cell><cell>No</cell><cell>No</cell><cell>Limited</cell></row><row><cell>µTESLA</cell><cell>[8]</cell><cell>Flat/Hierarchy</cell><cell>No</cell><cell>No</cell><cell>Yes</cell><cell>Yes</cell><cell>Medium</cell></row><row><cell>Multi level key chains</cell><cell>[82]</cell><cell>Flat/Hierarchy</cell><cell>No</cell><cell>No</cell><cell>Yes</cell><cell>Yes</cell><cell>Good</cell></row><row><cell>LEAP</cell><cell>[63]</cell><cell>Hierarchy</cell><cell>Yes</cell><cell>Yes</cell><cell>Yes</cell><cell>Yes</cell><cell>Medium</cell></row><row><cell cols="2">time synchronization are desirable.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">• New schemes with higher scalability and efficiency need</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">to be developed for the authenticated broadcast proto-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">cols. The recent progress on public key cryptography may</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">facilitate the design of authenticated broadcast protocols.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">• Quality of Service (QoS) in WSNs needs to be evaluated</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">with the addition of secure routing services.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">The development of secure routing protocols is challenging</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">because sensor nodes are prone to failures and the topology</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">of a sensor network changes frequently due to node failures</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">and possible mobility. Key open research issues include the</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">following:</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">• The proposed secure routing protocols for WSNs focus</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">on static sensor networks only, ignoring mobility. Secure</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">routing protocols for mobile sensor networks need to be</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>investigated.</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="5">• Current broadcast authentication schemes such as µTES-</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work is partially supported by NSF Grant no. CCR-0311577. The authors thank the anonymous reviewers for their valuable comments on this manuscript.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Instrumenting the World with Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l. Conf. Acoustics, Speech and Signal Processing</title>
		<meeting>Int&apos;l. Conf. Acoustics, Speech and Signal essing<address><addrLine>Salt Lake City, UT</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Security and Privacy in Sensor Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comp. Mag</title>
		<imprint>
			<biblScope unit="page" from="103" to="105" />
			<date type="published" when="2003-10">Oct. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Designing Secure Sensor Networks</title>
		<author>
			<persName><forename type="first">E</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="38" to="43" />
			<date type="published" when="2004-12">Dec. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Survey on Sensor Setworks</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="102" to="114" />
			<date type="published" when="2002-08">Aug. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Comparing Elliptic Curve Cryptography and RSA on 8-bit CPUs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Gura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHES &apos;04: Proc. Wksp. Cryptographic Hardware and Embedded Systems</title>
		<imprint>
			<date type="published" when="2004-08">Aug. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Energy Analysis of Public-Key Cryptography for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Wander</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PerCom &apos;05: Proc. 3rd IEEE Int&apos;l. Conf. Pervasive Computing and Commun</title>
		<imprint>
			<date type="published" when="2005-03">Mar. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">SPINS: Security Protocols for Sensor Networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Networks</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="521" to="534" />
			<date type="published" when="2002-09">Sept. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Secure Aggregation for Wireless Networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wksp. Security and Assurance in Ad Hoc Networks</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">SIA: Secure Information Aggregation in Sensor Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Przydatek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys &apos;03: Proc. 1st</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Embedded Networked Sensor Systems</title>
		<author>
			<persName><forename type="first">'</forename><forename type="middle">L</forename><surname>Int</surname></persName>
		</author>
		<author>
			<persName><surname>Conf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>ACM Press</publisher>
			<biblScope unit="page" from="255" to="265" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An Interleaved Hop-by-Hop Authentication Scheme for Filtering of Injected False Data in Sensor Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symp. Security and Privacy</title>
		<meeting>IEEE Symp. Security and Privacy<address><addrLine>Oakland, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-05">May 2004</date>
			<biblScope unit="page" from="259" to="271" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On Data Banks and Privacy Homomorphisms</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Adleman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Dertouzos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Foundations of Secure Computation</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic</publisher>
			<date type="published" when="1978">1978</date>
			<biblScope unit="page" from="169" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The Resurrecting Duckling: Security Issues for Ad-hoc Wireless Networks</title>
		<author>
			<persName><forename type="first">F</forename><surname>Stajano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. 7th Int&apos;l. Wksp. Security Protocols</title>
		<imprint>
			<biblScope unit="page" from="172" to="194" />
			<date type="published" when="2000">2000</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Survey of Secure Wireless Ad Hoc Routing</title>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Security &amp; Privacy Special Issue: Making Wireless Work</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="28" to="39" />
			<date type="published" when="2004-06">May/June 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Survey on Security Issues in Mobile Ad Hoc and Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Djenouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Khelladi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Badache</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys and Tutorials</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Mate: A Tiny Virtual Machine for Sensor Networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Levis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOS-X: Proc. 10th Int&apos;l. Conf. Architectural Support for Programming Languages and Operating Systems</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="85" to="95" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<ptr target="http://www.eyes.eu.org" />
		<title level="m">EYES project</title>
		<imprint>
			<date type="published" when="2002-03">Mar. 2002-Feb. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Distributed Computation Platform for Wireless Embedded Sensing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Savvides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCD &apos;02: Proc. 2002 IEEE Int&apos;l. Conf. Computer Design: VLSI in Computers and Processors</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page">220</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Intel Research Mote</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network Embedded Systems Technology</title>
		<meeting><address><addrLine>Winter 2003 Retreat</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">Jan. 15-17. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">System Architecture Directions for Networked Sensors</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOSIX: Proc. 9th Int&apos;l. Conf. Architectural Support for Programming Languages and Operating Systems</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="93" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">System Architecture Directions for Networked Sensors</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGOPS Oper. Syst. Rev</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="93" to="104" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On Communication Security in Wireless Ad-Hoc Sensor Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Slijepcevic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th IEEE Int&apos;l. Wksp. Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE&apos;02)</title>
		<meeting>11th IEEE Int&apos;l. Wksp. Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE&apos;02)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="139" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Design Space Exploration for Energy-Efficient Secure Sensor Network</title>
		<author>
			<persName><forename type="first">L</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Application-Specific Systems, Architectures, and Processors (ASAP &apos;02)</title>
		<imprint>
			<date type="published" when="2002-07">July 2002</date>
			<biblScope unit="page" from="88" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Enhancing Base Station Security in Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mishra</surname></persName>
		</author>
		<idno>CU-CS-951-03</idno>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of Colorado</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Report</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Information Assurance in Sensor Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bhatnagar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Sensor Networks and Applications (WSNA &apos;03)</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="160" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Secure Routing in Wireless Sensor Networks: Attacks and Countermeasures</title>
		<author>
			<persName><forename type="first">C</forename><surname>Karlof</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. First IEEE Int&apos;l. Wksp. Sensor Network Protocols and Applications</title>
		<imprint>
			<biblScope unit="page" from="113" to="127" />
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">The Sybil Attack in Sensor Networks: Analysis and Defenses</title>
		<author>
			<persName><forename type="first">J</forename><surname>Newsome</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN &apos;04: Proc. IEEE Int&apos;l. Conf. Info. Processing in Sensor Networks</title>
		<imprint>
			<date type="published" when="2004-04">Apr. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Packet Leashes: A Defense Against Wormhole Attacks in Wireless Networks</title>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2003-04">2003. Apr. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">New Directions in Cryptography</title>
		<author>
			<persName><forename type="first">W</forename><surname>Diffie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Hellman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Info. Theory</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="644" to="654" />
			<date type="published" when="1976-11">Nov. 1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A Method for Obtaining Digital Signatures and Public-Key Cryptosystems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Adleman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="96" to="99" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Constraints and Approaches for Distributed Sensor Network Security</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Carman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">S</forename><surname>Kruus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Matt</surname></persName>
		</author>
		<idno>00-010</idno>
	</analytic>
	<monogr>
		<title level="j">NAI Labs</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Report</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">PGP in Constrained Wireless Devices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th USENIX Security Symp</title>
		<meeting>9th USENIX Security Symp</meeting>
		<imprint>
			<date type="published" when="2000-08">Aug. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Public Key Cryptography in Sensor Networks-Revisited</title>
		<author>
			<persName><forename type="first">G</forename><surname>Gaubatz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Kaps</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sunar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ESAS &apos;04: 1st European Wksp. Security in Ad-Hoc and Sensor Networks</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">O</forename><surname>Rabin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Digitalized Signatures and Public-Key Functions as Intractable as Factorization</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Ntru: A Ring-Based Public Key Cryptosystem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hoffstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pipher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Silverman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ANTS-III: Proc. 3rd Int&apos;l. Symp. Algorithmic Number Theory</title>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="267" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Lecture notes in computer sciences; 218 on Advances in Cryptology</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CRYPTO</title>
		<imprint>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="page" from="417" to="426" />
			<date type="published" when="1986">1986</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
	<note>Use of Elliptic Curves in Cryptography</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Elliptic Curve Cryptosystems</title>
		<author>
			<persName><forename type="first">N</forename><surname>Koblitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Computation</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="203" to="209" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">SEC1, 2000, available at</title>
		<author>
			<persName><forename type="first">Curve</forename><surname>Elliptic</surname></persName>
		</author>
		<author>
			<persName><surname>Cryptography</surname></persName>
		</author>
		<author>
			<persName><surname>Std</surname></persName>
		</author>
		<ptr target="www.secg.org/collateral/sec1.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">TWIRL and RSA Key Size</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kaliski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Note</note>
	<note>RSA Laboratories</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Recommended Elliptic Curve Domain Parameters, SECG Std. SEC2, 2000, available at</title>
		<ptr target="www.secg.org/collateral/sec2.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Guide to Elliptic Curve Cryptography</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hankerson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Menezes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vanstone</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">The SSL Protocol, Version 3</title>
		<author>
			<persName><forename type="first">A</forename><surname>Freier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Karlton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kocher</surname></persName>
		</author>
		<ptr target="http://home.netscape.com/eng/ssl3/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">TinyPK: Securing Sensor Networks with Public Key Technology</title>
		<author>
			<persName><forename type="first">R</forename><surname>Watro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SASN &apos;04: Proc. 2nd ACM Wksp. Security of Ad Hoc and Sensor Networks</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="59" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">TinyECC: Elliptic Curve Cryptography for sensor networks (version 0.1)</title>
		<author>
			<persName><forename type="first">A</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
		<ptr target="http://discovery.csc.ncsu.edu/software/TinyECC/" />
		<imprint/>
	</monogr>
	<note>Sept. 2005, available at</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A Public-Key Infrastructure for Key Distribution in TinyOS based on Elliptic Curve Cryptography</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Malan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welsh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st IEEE Int&apos;l. Conf. Sensor and Ad Hoc Communications and Networks</title>
		<meeting>1st IEEE Int&apos;l. Conf. Sensor and Ad Hoc Communications and Networks<address><addrLine>Santa Clara, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-10">Oct. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Tinysec: A Link-Layer Security Architecture for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Karlof</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sastry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys &apos;04: Proc. 2nd Int&apos;l. Conf. Embedded Networked Sensor Systems</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="162" to="175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">SKIPJACK and KEA Algorithm Specifications</title>
	</analytic>
	<monogr>
		<title level="m">Federal Information Processing Standards Publication 185 (FIPS PUB 185)</title>
		<imprint>
			<date type="published" when="1998-06">June 1998</date>
		</imprint>
		<respStmt>
			<orgName>U.S. National Institute of Standards and Technology (NIST</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">The RC5 Encryption Algorithm</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<editor>B. Preneel</editor>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="86" to="96" />
		</imprint>
	</monogr>
	<note>Fast Software Encryption</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">US Secure Hash Algorithm 1 (SHA1)</title>
		<author>
			<persName><forename type="first">D</forename><surname>Eastlake Iii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Informational)</title>
		<imprint>
			<biblScope unit="volume">3174</biblScope>
			<date type="published" when="2001-09">Sept. 2001</date>
		</imprint>
	</monogr>
	<note>RFC</note>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">AES Proposal: Rijndael</title>
		<author>
			<persName><forename type="first">J</forename><surname>Daemen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Rijmen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st AES Conf</title>
		<meeting>1st AES Conf</meeting>
		<imprint>
			<date type="published" when="1998-08">Aug. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Menezes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Vanstone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C V</forename><surname>Oorschot</surname></persName>
		</author>
		<title level="m">Handbook of Applied Cryptography</title>
		<meeting><address><addrLine>Boca Raton, FL</addrLine></address></meeting>
		<imprint>
			<publisher>CRC Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">The MD5 Message-Digest Algorithm</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RFC 1321</title>
		<imprint>
			<date type="published" when="1992-04">Apr. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Analyzing and Modeling Encryption Overhead for Sensor Network Nodes</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ganesan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WSNA &apos;03: Proc. 2nd ACM Int&apos;l. Conf. Wireless Sensor Networks and Applications</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="151" to="159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Assessing Security-Critical Energy-Efficient Sensor Networks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">W</forename><surname>Law</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 18th IFIP TC11 Int&apos;l. Conf. Info. Security, Security, and Privacy in the Age of Uncertainty (SEC)</title>
		<meeting>18th IFIP TC11 Int&apos;l. Conf. Info. Security, Security, and Privacy in the Age of Uncertainty (SEC)<address><addrLine>Athens, Greece</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
			<biblScope unit="page" from="459" to="463" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">TEA, A Tiny Encryption Algorithm</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Wheeler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Needham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Fast Software Encryption: 2nd Int&apos;l. Wksp</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Preneel</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">1008</biblScope>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">The RC6 Block Cipher</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>submitted to NIST as a candidate for the AES</note>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">New Block Encryption Algorithm Misty</title>
		<author>
			<persName><forename type="first">M</forename><surname>Matsui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th Int&apos;l. Wksp. Fast Software Encryption</title>
		<editor>
			<persName><forename type="first">E</forename><surname>Lncs</surname></persName>
		</editor>
		<editor>
			<persName><surname>Biham</surname></persName>
		</editor>
		<meeting>4th Int&apos;l. Wksp. Fast Software Encryption<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1267</biblScope>
			<biblScope unit="page" from="54" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Specification of the 3GPP Confidentiality and Integrity Algorithms Document 2: KASUMI Specification</title>
		<author>
			<persName><surname>Etsi</surname></persName>
		</author>
		<author>
			<persName><surname>Sage</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-12">Dec. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">Specification of Camellia: A 128-Bit Block Cipher, specification version 2.0</title>
		<author>
			<persName><forename type="first">K</forename><surname>Aoki</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
		<respStmt>
			<orgName>Nippon Telegraph and Telephone Corporation and Mitsubishi Electric Corporation</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">Benchmarking Block Ciphers for Wireless Sensor Networks (Extended Abstract),&quot; 1st IEEE Int&apos;l. Conf. Mobile Ad-hoc and Sensor Systems</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">W</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Doumen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Hartel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-10">Oct. 2004</date>
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Key Distribution Mechanisms for Wireless Sensor Networks: A Survey</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Camtepe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yener</surname></persName>
		</author>
		<idno>TR-05-07</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Science Department at RPI</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">LKHW: A Directed Diffusion-Based Secure Multicast Scheme for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Pietro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICPPW &apos;03: Proc. 32nd Int&apos;l. Conf. Parallel Processing Wksps</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="397" to="406" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">LEAP: Efficient Security Mechanisms for Large-Scale Distributed Sensor Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Setia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jajodia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;03: Proc. 10th ACM Conf. Comp. and Commun. Security</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="62" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Scalable Session Key Construction Protocols for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wksp. Large Scale Real Time and Embedded Systems</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Combinatorial Design of Key Distribution Mechanisms for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Cametepe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yener</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 9th European Symp. Research Computer Security</title>
		<meeting>9th European Symp. Research Computer Security</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Deterministic Key Predistribution Schemes for Distributed Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Stinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Selected Areas Cryptography</title>
		<meeting>Selected Areas Cryptography</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="294" to="307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">A Combinatorial Approach to Key Predistribution for Distributed Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Stinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Wireless Commun. and Net. Conf</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">A Key-Management Scheme for Distributed Sensor Networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Eschenauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Gligor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;02: Proc. 9th ACM Conf. Comp. and Commun. Security</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="41" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Random Key Predistribution Schemes for Sensor Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symp. Security and Privacy</title>
		<meeting>IEEE Symp. Security and Privacy</meeting>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Establishing Pairwise KeysDistributed Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;03: Proc. 10th ACM Conf. Comp. and Commun. Security</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="52" to="61" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Random Key-Assignment for Secure Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">D</forename><surname>Pietro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">V</forename><surname>Mancini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SASN &apos;03: Proc. 1st ACM Wksp. Security of Ad Hoc and Sensor Networks</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="62" to="71" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">A Pairwise Key Predistribution Scheme for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;03: Proc. 10th ACM Conf. Comp. and Communications Security</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="42" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">A Key Management Scheme for Wireless Sensor Networks using Deployment Knowledge</title>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFO-COM</title>
		<meeting>IEEE INFO-COM<address><addrLine>Hong Kong</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="586" to="597" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Energy-Memory-Security Trade-OffsDistributed Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd</title>
		<meeting>3rd</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<monogr>
		<title level="m" type="main">Ad-Hoc Networks and Wireless</title>
		<author>
			<persName><forename type="first">'</forename><forename type="middle">L</forename><surname>Int</surname></persName>
		</author>
		<author>
			<persName><surname>Conf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
			<biblScope unit="page" from="70" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Perfectly-Secure Key Distribution for Dynamic Conferences</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blundo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO &apos;92: Proc. 12th Annual Int&apos;l. Cryptology Conf. Advances in Cryptology</title>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="471" to="486" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">An Optimal Class of Symmetric Key Generation Systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Blom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. EUROCRYPT &apos;84 Wksp</title>
		<meeting>EUROCRYPT &apos;84 Wksp<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1985">1985</date>
			<biblScope unit="page" from="335" to="338" />
		</imprint>
	</monogr>
	<note>Advances in Cryptology</note>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Location-Based Pairwise Key Establishments for Static Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. ACM Wksp. Security Ad Hoc and Sensor Networks</title>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Routing Techniques in Wireless Sensor Networks: A Survey</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N</forename><surname>Al-Karaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Kamal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="6" to="28" />
			<date type="published" when="2004-12">Dec. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Directed Diffusion: A Scalable and Robust Communication Paradigm for Sensor Networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiCom &apos;00: Proc. 6th Annual Int&apos;l. Conf. Mobile Computing and Networking</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="56" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Geographical and Energy Aware Routing: A Recursive Data Dissemination Protocol for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<idno>UCLA/CSD-TR-01-0023</idno>
	</analytic>
	<monogr>
		<title level="j">UCLA Computer Science Department</title>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Influence of Falsified Position Data on Geographic Ad-Hoc Routing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Leinmüller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2nd European Wksp. Security and Privacy Ad Hoc and Sensor Networks (ESAS 2005)</title>
		<imprint>
			<date type="published" when="2005-07">July 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Efficient Distribution of Key Chain Commitments for Broadcast AuthenticationDistributed Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Annual Network and Distributed System Security Symp</title>
		<meeting>10th Annual Network and Distributed System Security Symp<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-02">Feb. 2003</date>
			<biblScope unit="page" from="263" to="276" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Multilevel mTESLA: Broadcast Authentication for Distributed Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. Embedded Computing Sys</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="800" to="836" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Practical Broadcast AuthenticationSensor networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiQuitous &apos;05: Proc. 2nd Annual Int&apos;l. Conf. Mobile and Ubiquitous Systems: Networking and Services</title>
		<imprint>
			<date type="published" when="2005-07">July 2005</date>
			<biblScope unit="page" from="118" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">An Efficient Scheme for Authenticating Public KeysSensor Networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiHoc &apos;05: Proc. 6th ACM Int&apos;l. Symp. Mobile Ad Hoc Net. and Comp</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="58" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Medians and Beyond: New Aggregation Techniques For Sensor Networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Shrivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys &apos;04: Proc. 2nd</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<monogr>
		<title level="m" type="main">Embedded Networked Sensor Systems</title>
		<author>
			<persName><forename type="first">'</forename><forename type="middle">L</forename><surname>Int</surname></persName>
		</author>
		<author>
			<persName><surname>Conf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>ACM Press</publisher>
			<biblScope unit="page" from="239" to="249" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Security Support for in-Network Processing Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mishra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SASN &apos;03: Proc. 1st ACM Wksp. Security of ad Hoc and Sensor Networks</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="83" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">ESPDA: Energy Efficient and Secure Pattern-Based Data Aggregation for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Çam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Muthuavinashiappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Sensors</title>
		<meeting>IEEE Sensors<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
			<biblScope unit="page" from="732" to="736" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title level="a" type="main">Energy-Efficient Security Protocol for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Çam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Muthuavinashiappan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE VTC Conf</title>
		<meeting>IEEE VTC Conf<address><addrLine>Orlando, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
			<biblScope unit="page" from="2981" to="2984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<monogr>
		<title level="m" type="main">Secure Differential Data Aggregation for Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Çam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
	<note>Sensor Network Operations</note>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">A Witness-Based Approach for Data Fusion Assurance wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GLOBECOM &apos;03: Proc. IEEE Global Telecommun</title>
		<meeting><address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-12">Dec. 2003</date>
			<biblScope unit="page" from="1435" to="1439" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Resilient Aggregation Sensor Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SASN &apos;04: Proc. 2nd ACM Wksp. Security of Ad Hoc and Sensor Networks</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="78" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">Statistical En-Route Filtering of Injected False Datasensor Networks</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM<address><addrLine>Hong Kong</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">CDA: Concealed Data Aggregation for Reverse Multicast Traffic wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Girao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Westhoff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schneider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICC &apos;05: Proc. IEEE Int&apos;l. Conf. Commun</title>
		<meeting><address><addrLine>Seoul, Korea</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Efficient Aggregation of Encrypted Data Wireless Sensor Network</title>
		<author>
			<persName><forename type="first">C</forename><surname>Castelluccia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Mykletun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tsudik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/IEEE Mobiquitous</title>
		<meeting>ACM/IEEE Mobiquitous<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-07">July 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">A Provably Secure Additive and Multiplicative Privacy Homomorphism</title>
		<author>
			<persName><forename type="first">J</forename><surname>Domingo-Ferrer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes Comp. Sci.</title>
		<imprint>
			<biblScope unit="volume">2433</biblScope>
			<biblScope unit="page" from="471" to="483" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Cryptanalysis of an Algebraic Privacy Homomorphism</title>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISC &apos;03: Proc. 6th Info. Security Conf</title>
		<meeting><address><addrLine>Bristol, U.K.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10">Oct. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">Mitigating Routing Misbehavior Mobile Ad Hoc Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Marti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiCom &apos;00: Proc. 6th Annual Int&apos;l. Conf. Mobile Comp. and Net</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="255" to="265" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Intrusion Detection Techniques for Mobile Wireless Networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wireless Networks</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="545" to="556" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">Cross-Feature Analysis For detecting Ad-Hoc Routing Anomalies</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDCS &apos;03: Proc. 23rd Int&apos;l. Conf. Distributed Computing Systems</title>
		<meeting><address><addrLine>Providence, RI</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title level="a" type="main">Attack Analysis and Detection for Ad Hoc Routing Protocols</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RAIS &apos;04: Proc. 7th Int&apos;l. Symp. Recent Advances Intrusion Detection</title>
		<meeting><address><addrLine>Sophia Antipolis, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-09">Sept. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<analytic>
		<title level="a" type="main">Space/Time Trade-Offshash Coding with Allowable Errors</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">H</forename><surname>Bloom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="422" to="426" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<monogr>
		<title level="m" type="main">INSENS: Intrusion-Tolerant Routing Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mishra</surname></persName>
		</author>
		<idno>CU CS-939-02</idno>
		<imprint>
			<date type="published" when="2002-11">Nov. 2002</date>
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of Colorado</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Report</note>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title level="a" type="main">A Performance Evaluation of Intrusion-Tolerant Routing Wireless Sensor Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mishra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPSN &apos;03: Proc. IEEE 2nd Int&apos;l. Wksp. Information Processing Sensor Networks</title>
		<meeting><address><addrLine>Palo Alto, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="349" to="364" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">On supporting Distributed Collaboration Sensor Networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MILCOM</title>
		<meeting>MILCOM</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
