<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sprite: A Simple, Cheat-Proof, Credit-Based System for Mobile Ad-Hoc Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Sheng</forename><surname>Zhong</surname></persName>
							<email>sheng.zhong@yale.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Yale University New Haven</orgName>
								<address>
									<postCode>06520</postCode>
									<region>CT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jiang</forename><surname>Chen</surname></persName>
							<email>jiang.chen@yale.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Yale University New Haven</orgName>
								<address>
									<postCode>06520</postCode>
									<region>CT</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yang</forename><forename type="middle">Richard</forename><surname>Yang</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Yale University New Haven</orgName>
								<address>
									<postCode>06520</postCode>
									<region>CT</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Sprite: A Simple, Cheat-Proof, Credit-Based System for Mobile Ad-Hoc Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C22F18D4346EED89399CC0286FA7C56C</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:20+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Mobile ad hoc networking has been an active research area for several years. How to stimulate cooperation among selfish mobile nodes, however, is not well addressed yet. In this paper, we propose Sprite, a simple, cheat-proof, creditbased system for stimulating cooperation among selfish nodes in mobile ad hoc networks. Our system provides incentive for mobile nodes to cooperate and report actions honestly. Compared with previous approaches, our system does not require any tamperproof hardware at any node. Furthermore, we present a formal model of our system and prove its properties. Evaluations of a prototype implementation show that the overhead of our system is small. Simulations and analysis show that mobile nodes can cooperate and forward each other's messages, unless the resource of each node is extremely low.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N recent years, mobile ad hoc networks have received much attention due to their potential applications and the proliferation of mobile devices <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>. Specifically, mobile ad hoc networks refer to wireless multi-hop networks formed by a set of mobile nodes without relying on a preexisting infrastructure. In order to make an ad hoc network functional, the nodes are assumed to follow a self-organizing protocol, and the intermediate nodes are expected to relay messages between two distant nodes. Recent evaluations have shown that ad hoc networks not only are flexible and robust, but also can have good performance in terms of throughput, delay and power efficiency <ref type="bibr" target="#b2">[3]</ref>.</p><p>So far, applications of mobile ad hoc networks have been envisioned mainly for emergency and military situations. In such applications, all of the nodes in the network belong to a single authority and therefore have a common objective. As a result, cooperation among the nodes can be assumed. However, as observed by several authors <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, it may soon be possible to deploy ad hoc networks for civilian applications as well. In such emerging civilian applications, the nodes typically do not belong to a single authority. Consequently, cooperative behaviors such as forwarding each other's messages, cannot be directly assumed.</p><p>We can identify two types of uncooperative nodes: faulty/malicious nodes and selfish nodes. By saying faulty/malicious nodes, we refer to the broad class of nodes that are either faulty and therefore cannot follow a protocol, or are intentionally malicious and try to attack the system. The problems of faulty/malicious nodes need to be addressed from many layers, for example, using spread-spectrum encoding to avoid interference over the communication channel; using a reputation system to identify the faulty/malicious nodes and subsequently avoid or penalize such nodes <ref type="bibr" target="#b3">[4]</ref>; and applying the techniques from faulttolerant computing to perform computation correctly even in the presence of faulty/malicious nodes. Although the problems of faulty/malicious nodes can be important in military applications, the focus of this paper is on selfish nodes, which we expect will be the dominant type of nodes in a civilian ad hoc network. <ref type="foot" target="#foot_0">1</ref> Specifically, a selfish node is an economically rational node whose objective is to maximize its own welfare, which is defined as the benefit of its actions minus the cost of its actions. Since forwarding a message will incur a cost (of energy and other resources) to a node, a selfish node will need incentive in order to forward others' messages.</p><p>One possibility to provide incentive is to use a reputation system <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref>. For example, in <ref type="bibr" target="#b3">[4]</ref>, Marti et al. proposed a reputation system for ad hoc networks. In their system, a node monitors the transmission of a neighbor to make sure that the neighbor forwards others' traffic. If the neighbor does not forward others' traffic, it is considered as uncooperative, and this uncooperative reputation is propagated throughout the network. In essence, we can consider such a reputation system as a repeated game whose objective is to stimulate cooperation (e.g., see Chapter 8 of <ref type="bibr" target="#b9">[10]</ref>). Such reputation systems, however, may have several issues. First, there is no formal specification and analysis of the type of incentive provided by such systems. Second, these systems have not considered the possibility that even selfish nodes can collude with each other in order to maximize their welfare. Third, some of the current systems depend on the broadcast nature of wireless networks in order to monitor other nodes. Such monitoring, however, may not always be possible due to asymmetric links when nodes use power control. Furthermore, directional antennas <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b11">[12]</ref>, which are gaining momentum in wireless networks in order to improve capacity, will also make monitoring hard.</p><p>Another possibility to provide incentive is to use credit (or virtual currency) or micro payment <ref type="bibr" target="#b12">[13]</ref>. Buttyan and Hubaux proposed a nice solution of this type in <ref type="bibr" target="#b4">[5]</ref>, and then presented an improved result based on credit counters in <ref type="bibr" target="#b5">[6]</ref>. For both proposals, a node receives one unit of credit for forwarding a message of another node, and such credits are deducted from the sender (or the destination). Besides other potential issues that we will discuss in Section II, both proposals require a tamper-proof hardware at each node so that the correct amount of credit is added or deducted from the node. As a result of this requirement, although both proposals are interesting, they may not find wide-spread acceptance.</p><p>In this paper, we propose Sprite, a simple, cheat-proof, credit-based system for mobile ad-hoc networks with selfish nodes. Similar to <ref type="bibr" target="#b4">[5]</ref> and <ref type="bibr" target="#b5">[6]</ref>, our system also uses credit to provide incentive to selfish nodes. However, one of the novel and distinguishing features is that our system does not need any tamper-proof hardware at any node.</p><p>At a high level, the basic scheme of our system can be described as follows. When a node receives a message, the node keeps a receipt of the message. Later, when the node has a fast connection to a Credit Clearance Service (CCS), it reports to the CCS the messages that it has received/forwarded by uploading its receipts. The CCS then determines the charge and credit to each node involved in the transmission of a message, depending on the reported receipts of a message.</p><p>The design of our system needs to address two main issues. First, since there is no tamper-proof hardware at any node and the charge and credit are based on the reports of the selfish nodes, a selfish node (or even a group of colluding node) may attempt to cheat the system to maximize its expected welfare. As an example, a selfish node may withhold its receipt, or collude with other nodes to forge receipts, if such actions can maximize its welfare. This is the security perspective of our system. Second, a node should receive enough credit for forwarding a message for another node, so that it can send its own messages with the received credit, unless the resource of the node itself is extremely low. This is the incentive perspective of our system.</p><p>In summary, the contributions of this paper are the following. First, we present Sprite, a system to provide incentive to selfish mobile nodes to cooperate. Second, our system determines charge and credit from a game-theoretic perspective, and motivates each node to report its actions honestly, even when a collection of the selfish nodes collude. Third, we model the essential component of our system as a game and prove the correctness of our system under this model. As far as we know, this is the first pure-software solution that has formal proofs of security. Our main result works for messageforwarding in unicast, and we extend it to route discovery and multicast as well. Fourth, we perform extensive evaluations and simulations of our system. Evaluations of a prototype implementation show that the overhead of our system is small. Simulations show that the nodes will cooperate and forward each other's messages, unless the resource of each node is extremely low.</p><p>The rest of this paper is organized as follows. In Section II, we discuss related work. In Section III, we present the overall architecture and the intuitions behind our design. We then give the full specification of our system in Section IV. In Section V, we present a formal model of our system and prove the security properties under this model. In Section VI, we further consider the incentive issue in route discovery and multicast. In Section VII, we present evaluations of our solution. Our conclusion and future work are in Section VIII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>Three classes of work are closely related to this paper: reputation systems, two stimulation approaches from the Terminodes project, and algorithmic mechanism design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Reputation-based approaches</head><p>In <ref type="bibr" target="#b3">[4]</ref>, Marti et al. considered uncooperative nodes in general, including selfish and malicious nodes. In order to cope with this problem, they proposed two tools: a watchdog, which identifies misbehaving nodes, and a pathrater, which selects routes that avoid the identified nodes. Their simulations showed that these two tools can maintain the total throughput of an ad hoc network at an acceptable level even with a large percentage of misbehaving nodes. In <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b7">[8]</ref>, Buchegger and Le Boudec proposed and evaluated their CONFIDENT protocol, which detects and isolates misbehaving nodes. However, as we discussed in Section I, there are several issues that such reputation-based systems need to address.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Two stimulation approaches from Terminodes</head><p>In <ref type="bibr" target="#b4">[5]</ref>, Buttyan and Hubaux proposed a stimulation approach that is based on a virtual currency, called nuglets, which are used as payments for packet forwarding. Using nuglets, the authors proposed two payment models: the Packet Purse Model and the Packet Trade Model. In the Packet Purse Model, the sender of a packet pays by loading some nuglets in the packet before sending it. Intermediate nodes acquire some nuglets from the packet when they forward it. If the packet runs out of nuglets, then it is dropped. In the Packet Trade Model, the destination of a packet pays for the packet. To implement the Packet Trade Model, each intermediate node buys a packet from its previous node for some nuglets and sells it to the next node for more nuglets. In this way each intermediate node earns some nuglets and the total cost of forwarding the packet is covered by the destination. To implement either the Packet Purse Model or the Packet Trade Model, a tamper-proof hardware is required at each node to ensure that the correct amount of nuglets is deducted or credited at each node. Besides the requirement for a tamper-proof hardware at each node, some other issues also exist for the Packet Purse Model and the Packet Trade Model: 1) Both models require the clearance of nuglets in realtime. As a result, if the system does not have enough nuglets circulating around, the performance of their system may degrade. 2) Under both models, if a mobile node runs out of nuglets, its tamper-proof hardware still has to contact with some central authority in order to "refill" its credit. (Actually, the CCS introduced by our system is similar to such an authority.) 3) A disadvantage of the Packet Trade Model is that it is vulnerable to network overload, since the senders do not have to pay. For this reason, the authors of <ref type="bibr" target="#b4">[5]</ref> mainly studied the Packet Purse Model.</p><p>Besides the nuglet approach, Buttyan and Hubaux also proposed a scheme based on credit counter <ref type="bibr" target="#b5">[6]</ref>. In this new approach, each node keeps track of its remaining battery and its remaining credit. The authors simulated four rules for a node to determine when to forward others' packets and when to send its own packets. Our analysis shows that the first rule is actually optimal to achieve their given goals. Although this new scheme is simple and elegant, it still requires a tamperproof hardware at each node so that the correct amount of credit is deducted or credited. Furthermore, the first two issues we outlined in the previous paragraph exist for this approach as well.</p><p>Both <ref type="bibr" target="#b4">[5]</ref> and <ref type="bibr" target="#b5">[6]</ref> are the results of the Terminodes project. General reviews of the Terminodes project, and of the related security problems, can be found in <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b14">[15]</ref>, <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Algorithmic mechanism design and game theory</head><p>Our approach is motivated by algorithmic mechanism design (see e.g., <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b19">[20]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b21">[22]</ref>, <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>), which is an emerging active research area in the intersection of computer science and mathematical economics. In particular, Feigenbaum et al. have considered BGP-based mechanism design for lowest-cost unicast routing in the Internet <ref type="bibr" target="#b22">[23]</ref>. In <ref type="bibr" target="#b20">[21]</ref>, Feigenbaum et al. have considered cost sharing for multicast. Golle et al. have analyzed the incentives in peerto-peer networks <ref type="bibr" target="#b21">[22]</ref>. However, as far as we know, there is no previous proposed mechanism design for ad hoc networks. Furthermore, although our design is motivated by algorithmic mechanism design, our problem does not fit exactly into the mechanism-design framework. For example, in our game, the information held by each player is not totally private, while in mechanism design, each player must have a private type.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. OVERVIEW OF OUR APPROACH</head><p>In this section, we present the overall architecture and the intuitions behind our design; the formal results will be presented in Sections IV and V. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. System architecture</head><p>Figure <ref type="figure" target="#fig_1">1</ref> shows the overall architecture of our system, which consists of the Credit Clearance Service (CCS) and a collection of mobile nodes. The nodes are equipped with network interfaces that allow them to send and receive messages through a wireless overlay network <ref type="bibr" target="#b24">[25]</ref>, e.g., using GPRS in a wide-area environment, while switching to 802.11 or Bluetooth in an indoor environment. To identify each node, we assume that each node has a certificate issued by a scalable certificate authority such as those proposed in <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b26">[27]</ref>. For concreteness of presentation, we assume that the sender knows the full path from the sender to the destination, using a secure ad hoc routing protocol based on DSR <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b28">[29]</ref>, <ref type="bibr" target="#b29">[30]</ref>. The incentive issues of route discovery will be investigated in Section VI.</p><p>When a node sends its own messages, the node (or the destination, see later) will lose credit (or virtual money) to the network because other nodes incur a cost to forward the messages. On the other hand, when a node forwards others' messages, it should gain credit and therefore be able to send its messages later.</p><p>There are two ways for a node to get more credit. First, a node can pay its debit or buy more credit using real money, at a variable rate to the virtual money, based on the current performance of the system. However, the preferred and dominant way to get more credit is by forwarding others' messages. In order to get credit for forwarding others' messages, a node needs to report to the CCS which messages it has helped to forward. Although a node can save its reports in a local storage such as CompactFlash card, in order to reduce storage, each mobile node should report to the CCS whenever it switches to a fast connection and has backup power. A mobile node can also use a desktop computer as a proxy to report to the CCS. In order to save bandwidth and storage, instead of requiring the whole message as a report, our system uses small receipts. Such receipts are derived from the content of the messages but do not expose the exact content of the messages. Thus, although we require that the CCS be trusted in terms of maintaining credit balance, the nodes do not need to trust the CCS in terms of message confidentiality.</p><formula xml:id="formula_0">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003 B.</formula><p>Who pays whom? Before determining the amount of credit or charge to each node, we first discuss two basic questions.</p><p>The first question is who pays whom. Considering the relay of a message from a sender to a destination as a transaction, we need to decide who should be charged for the message and who should receive credit for relaying the message.</p><p>Although we can charge the destination, we decide that charging the sender will be a more robust and general approach. There are two reasons for charging only the sender. First, charging the destination may allow other nodes to launch a denial-of-service attack on the destination by sending it a large amount of traffic. Even sharing the cost between the sender and the destination could have a similar problem, because the sender could collude with the intermediate nodes, who could secretly return the sender's payment back, so that only the destination pays for the traffic. On the other hand, if only the sender is charged, a node will not have incentive to send useless messages. Second, if the destination benefits from the content of a message and thus should pay for it, the sender can get compensation from the destination, for example, through an application-layer payment protocol. Given these reasons, only the sender will be charged in our system.</p><p>A closely related question is who will receive credit for forwarding a message. Ideally, any node who has ever tried to forward a message should be compensated because forwarding a message will incur a cost to the node, no matter successful or not. However, a forwarded message may be corrupted on the link, and there is no way to verify that the forwarding action does occur. Although some local wireless networks such as IEEE 802.11 do provide link layer acknowledgments, such acknowledgment schemes are not universal and we refrain from changing basic network functions. Given this decision, the credit that a node receives will depend on whether or not its forwarding action is successful -a forwarding is successful if and only if the next node on the path receives the message. In other words, the CCS believes that a node has forwarded a message if and only if there is a successor of that node on the path reporting a valid receipt of the message.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Objectives of the payment scheme</head><p>The second basic question is about the objective of the payment scheme. After all, the objectives of our payment scheme are to prevent cheating actions and to provide incentive for the nodes to cooperate. Given such objectives, our system does not target balanced payment; that is, we do not require that the total charge to the sender be equal to the total credit received by other nodes for a message. In fact, in order to prevent one type of cheating actions, our CCS charges the sender more than it gives to the other nodes (see Section III-F). In order to offset long-term net outflow of credit from the mobile nodes to the CCS, if in a large network, the CCS periodically returns the credit back to the mobile nodes uniformly; otherwise, the CCS periodically gives each mobile node a fixed amount of credit. Note that this return will not enable any cheating action or reduce the incentive of the nodes to forward others' messages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Cheating actions in the receipt-submission game</head><p>Since the mobile nodes are selfish, without a proper payment scheme, they may not forward others' messages or they may try to cheat the system, if the cheating can maximize their welfare. In particular, a selfish node can exhibit one of the three selfish actions:</p><p>1) After receiving a message, the node saves a receipt but does not forward the message; 2) The node has received a message but does not report the receipt; 3) The node does not receive a message but falsely claims that it has received the message. Note that any of the selfish actions above can be further complicated by collusion of two or more nodes. We next progressively determine the requirements on our system in order to prevent the above actions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Motivating nodes to forward messages</head><p>In order to motivate a selfish node to forward others' messages, the CCS should give more credit to a node who forwards a message than to a node who does not forward a message. A basic scheme to achieve this objective is as follows. First, the CCS determines the last node on the path that has ever received the message. Then the CCS asks the sender to pay β to this node, and α to each of its predecessors, where β &lt; α. Note that the CCS does not ask the sender to pay anything to the successors of the last node. Comparing this scheme with those in <ref type="bibr" target="#b4">[5]</ref> and <ref type="bibr" target="#b5">[6]</ref>, we observe that the approaches in <ref type="bibr" target="#b4">[5]</ref> and <ref type="bibr" target="#b5">[6]</ref> are just the special case that β is very small and α is close to 1. Figure <ref type="figure" target="#fig_2">2</ref> illustrates the basic idea with an example. In this example, only the first three intermediate nodes submit their receipts. Therefore, nodes 1 and 2 will each receive a payment of α, and node 3 a payment of β. Since node 4 and the destination do not submit any receipt, they do not receive any credit. The sender pays a total of 2α + β. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Motivating nodes to report their receipts</head><p>Obviously, each single node having received a message is motivated to report its receipt, if β is greater than its cost of submitting a receipt, which, as we discussed previously, should be low since a receipt is generally small.</p><p>Unfortunately, there is still a collusion that can work against the above design. As an example, the last node (or in the general case, the last k nodes) ever received the message can collude with the sender. In particular, if the last node does not report its receipt, the sender saves α while the last node</p><formula xml:id="formula_1">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</formula><p>loses β. However, if the sender gives the last node a behindthe-scene compensation of β + , where &gt; 0, the last node will be better-off while the sender still enjoys a net gain of α -(β + ). Thus, the colluding group gets a net benefit of about α -β.</p><p>In order to prevent this cheating action, the CCS charges the sender an extra amount of credit if the destination does not report the receipt of a message. This extra charge goes to the CCS instead of any nodes. The overall charge to the sender (including payments to other nodes and the extra charge) should be kβ less than the charge to the sender when the message arrives at the destination, where k is the number of nodes not submitting receipts. Given such extra charge, even a colluding group cannot benefit from this cheating action. Again consider the example in Figure <ref type="figure" target="#fig_2">2</ref>. Figure <ref type="figure" target="#fig_3">3</ref> shows the revised amount paid by the sender, which is equal to </p><formula xml:id="formula_2">(4α + β) -2β.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. Preventing false receipts</head><p>Next we consider a countermeasure to the third type of selfish actions. As we discussed before, in order to save bandwidth and storage, our system requires that the nodes submit receipts instead of full messages. Given such a scheme for receipts, a group of colluding nodes can try to attack our system in several ways. For example, instead of forwarding the whole message, an intermediate node can forward only the receipt of a message to its successor, which is sufficient for getting credit. Moreover, the intermediate node can even wait until it has a fast connection to the successor to forward the false receipt, thus further saving resource usage.</p><p>The key to prevent such attack depends on the destination. We distinguish two cases: 1) the destination colludes with the intermediate nodes; or 2) the destination does not collude with the intermediate nodes.</p><p>We first consider the case that the destination colludes with the intermediate nodes, and therefore submits a receipt of a message even when it does not receive the whole message. For this case, we argue that the intermediate nodes and the destination should be paid as if no cheating had happened, because after all, the message is for the destination and the destination does submit a receipt for the message, indicating that it has received the message. If the sender needs to make sure that the destination receives the whole message, a higherlayer protocol to validate the receipt of the whole message by the destination can be easily implemented, e.g., see <ref type="bibr" target="#b30">[31]</ref>.</p><p>We next consider the case that the destination does not collude with the intermediate nodes. In this case, if the intermediate nodes forward only the receipt of a message instead of the whole message, then the destination will not be able to receive a valid message payload, and therefore will not submit a receipt for the message. Based on this observation, we can prevent the potential cheating action of the intermediate nodes by greatly reducing the amount of credit given to the intermediate nodes, if the message is not reported to be received by the destination. With such reduction of credit, the cheating nodes cannot get enough credit even to cover the minimum expense needed for this type of cheating, i.e., the cost of forwarding a receipt. To be more exact, if the destination does not report a receipt of a message, we multiply the credit paid to each node by γ, where γ &lt; 1 (the exact requirement on γ will be presented in Section V). Still consider the example in Figure <ref type="figure" target="#fig_2">2</ref>. Figure <ref type="figure" target="#fig_4">4</ref> shows the revised amount of credit received by each node. In particular, comparing Figure <ref type="figure" target="#fig_4">4</ref> with Figure <ref type="figure" target="#fig_3">3</ref>, due to this revision, we reduce the charge to the sender by γβ instead of β, for each node on the path who does not report a receipt. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. MESSAGE-FORWARDING PROTOCOL: SPECIFICATION</head><p>In the following formal specification of our protocol, we denote the public/private key pair of node n i by (P K i , SK i ). Each node n i maintains a sequence-number matrix seq i , where seq i (j, k) is the sequence number of messages from sender n j to destination n k , observed by node n i . We assume that (sign SK (), verify P K ()) is a digital signature scheme. In practice, we can use the RSA or the elliptic curve signature scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Sending a message</head><p>Suppose that node n 0 is to send message payload m with sequence number seq 0 (0, d) to destination n d , through path p. Node n 0 first computes a signature, s, on (MD(m), p, seq 0 (0, d)), where MD() is a message digest function such as MD5 <ref type="bibr" target="#b31">[32]</ref> or SHA-1 <ref type="bibr" target="#b32">[33]</ref>. Then, n 0 transfers (m, p, seq 0 (0, d), s) to the next hop and increases seq 0 (0, d) by 1. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Receiving a message</head><p>Suppose that node n i receives (m, p, seq, s). It first checks three conditions: 1) n i is on the path; 2) the message has a sequence number greater than seq i (0, d); and 3) the signature </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Computing payments</head><p>A receipt (D, p, seq, s) submitted by node n i is regarded as valid if verif y P K0 ((D, p, seq), s) = T RUE, where P K 0 is the public key of the sender.</p><p>Without loss of generality, we assume that p = (n 0 , n 1 , . . . , n e , . . . , n d ), where n e is the last node on path p that submits a valid receipt with sequence number seq. Then the CCS charges C from node n 0 , and pays P i to node n i , where</p><formula xml:id="formula_3">C = (d -1)α + β -(d -e)γβ, P i =        α if i &lt; e = d β if i = e = d γα if i &lt; e &lt; d γβ if i = e &lt; d.</formula><p>Note that in implementation, the CCS will issue credit gradually. For example, when the last intermediate node submits its receipt for a message but the destination has not submitted its receipt yet, the last intermediate node will get γβ. Later, when the destination submits its receipt, the node will get its full credit of α.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. MESSAGE-FORWARDING PROTOCOL: A FORMAL MODEL AND ANALYSIS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. A model of the receipt-submission game</head><p>For convenience of analysis, we model the submissions of receipts regarding a given message m as a one-round game.</p><p>Players. This game has d + 1 players, n 0 , n 1 , . . . , n d , from the sender to the destination. 2 Players' Information. Let T i be the information held by player n i that is unknown to the CCS. For i &gt; 0, T i = T RUE if node n i has ever received message m; T i = F ALSE otherwise. Obviously, the sender n 0 and the set of nodes that have ever received message m constitute a prefix of the path. Therefore,</p><formula xml:id="formula_4">T i = T RUE if 0 &lt; i ≤ e F ALSE if e &lt; i ≤ d,</formula><p>where e is the index of the last node that has ever received message m. Note that e is secret to the CCS when the game starts. Also note that a player has some partial information about e , i.e., the information inferred from its own information. For completeness, we define T 0 = T RUE.</p><p>Actions. Each player, n i (i &gt; 0), has two possible actions: reporting that it has ever received message m (by submitting a valid receipt), or withholding its report. We denote the action of n i by A i . Then A i is either T RUE or F ALSE. The only exception is n 0 , which has no choice of action. We define A 0 = T RUE, for completeness of our model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cost of Actions.</head><p>We denote the cost of n i 's action by U i . As discussed before, in general, the cost of sending a receipt to the CCS is very low. However, if player n i does not receive message m but can successfully claim that it has received the message, then a colluding node must have forwarded n i a copy of the receipt. Let δ be the cost of forwarding a receipt from one mobile node to another node. Then the colluding node incurs a cost of δ and n i must compensate the colluding node with δ. Counting this cost on n i , we have</p><formula xml:id="formula_5">U i = δ if T i = F ALSE and A i = T RUE 0 otherwise.</formula><p>Payment. Recall that the system's payment to n i (i &gt; 0) is</p><formula xml:id="formula_6">P i =        α if i &lt; e = d β if i = e = d γα if i &lt; e &lt; d γβ if i = e &lt; d.</formula><p>For n 0 , the charge of C can be viewed as a negative payment</p><formula xml:id="formula_7">P 0 = -C = -((d -1)α + β -(d -e)γβ).</formula><p>Welfare. For player n i , deducting its cost from its received payment, the node has a welfare of</p><formula xml:id="formula_8">W i = P i -U i .</formula><p>2 Recall that each receipt contains a signed path. Therefore, nodes not on the path are easily excluded from this game. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Analysis of the receipt-submission game: the security perspective</head><p>If A i = T i , then we say that n i tells the truth. Otherwise, we say that n i cheats. The strategy of n i can be truth-telling, cheating, or a probability distribution over these two choices. The strategy profile of a group of players refers to the ordered set of the strategies of these players.</p><p>Definition 1: For a player, an optimal strategy is a strategy that brings the maximum expected welfare to it, regardless of the strategies of all the other nodes.</p><p>Theorem 1: In the receipt-submission game, truth-telling is an optimal strategy for every node n i , if δ ≥ γβ, and n d does not cheat in case of T d = F ALSE. (Please see Appendix IX-A for a proof.)</p><p>Besides individual cheating, we further consider the possibility of collusion. Definition 2: A game is collusion-resistant, if any group of colluding players cannot increase the expected sum of their welfare by using any strategy profile other than that in which everybody tells the truth.</p><p>Theorem 2: The receipt-submission game is collusionresistant, if δ ≥ (d -1)γα, and n d does not cheat in case of T d = F ALSE. (Please see Appendix IX-B for a proof.) Definition 3: A game is cheat-proof, if truth-telling is an optimal strategy for every player and the game is collusionresistant.</p><p>Theorem 3: The receipt-submission game is cheat-proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Analysis of performance: the incentive perspective</head><p>In the above proofs, we have essentially shown that each selfish node should report faithfully to the CCS. With this knowledge in mind, comparing the expected gain of credit from forwarding a message with that of not forwarding the message, an intermediate node can expect a net gain of p 2 α + (p 1 -p 2 )γα+(1-p 1 )γβ -γβ, where p 1 is the probability that the message arrives at the next node, and p 2 the probability that the message arrives at the destination. Simplifying, we have p 2 (1 -γ)α + p 1 γ(α -β). Note that this payment gain is alway greater than 0 since γ is small, and α &gt; β.</p><p>If this payment gain is sufficient to cover the cost of forwarding a message, the node has incentive to forward the message. Note that we can further fine-tune the payment parameters to optimize the system performance. However, this optimization issue is orthogonal to the main theme of this paper, and a thorough investigation of the optimization issue will be presented in a separate paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. STIMULATING COOPERATION IN ROUTE DISCOVERY</head><p>AND MULTICAST Since route discovery uses message broadcast, the approach we have presented cannot be applied directly. Here we propose a slightly different approach, which is a bit more expensive. But since route discovery is performed less frequently, this approach is affordable in general. This approach is based on DSR, and essentially we will show how to improve DSR to stimulate cooperation in route discovery. Note that the reply to ROUTE REQUEST can be sent as a regular message. Therefore we only need to stimulate the re-broadcasting of ROUTE REQUEST.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Sending a ROUTE REQUEST</head><p>In general, when a node starts to broadcast a ROUTE REQUEST, the message includes the source address and a sequence number. Then the node signs and broadcasts the message, and increases its sequence number counter by 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Receiving a ROUTE REQUEST</head><p>Suppose that a node receives a ROUTE REQUEST. It first decides whether the message is a replay by looking at the sequence number. The node saves the received ROUTE REQUEST for getting payment in the future. When the node decides to rebroadcast the ROUTE REQUEST, it appends its own address to the ROUTE REQUEST and signs the extended message.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Computing payment</head><p>When the CCS computes payment, a ROUTE REQUEST is rejected if any signature in the message is invalid. Furthermore, if a ROUTE REQUEST submitted by a node is a part of another ROUTE REQUEST submitted by the same node, then the former message is rejected. Finally, the CCS builds a tree based on the accepted ROUTE REQUEST messages. The sender pays α to each non-leaf node of the tree, and β to each leaf of the tree. For each node outside the tree, the sender node pays α -β to the CCS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Discussion and extension</head><p>The above approach is secure for route discovery. Its security can be argued in a similar way as the unicast case. As route-discovery broadcast can be viewed as a special case of multicast, this approach can also be applied to multicast if multicast is not frequently used in the system. If multicast is frequently used, we can use a combination of the above approach and the approach presented for stimulating forwarding messages, which is less expensive. However, we do not have a provable result for the second type of cheating in this case. We leave the proof as a future research topic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. EVALUATIONS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Overhead</head><p>We first evaluate the overhead of our system. In order to measure the overhead, we have implemented a prototype of our system using the Crypto++4.0 library <ref type="bibr" target="#b33">[34]</ref>. The implementation can run over a wide range of platforms such as Linux and Win32.</p><p>In the evaluations below, our mobile node is a Laptop with an Intel Mobile Pentium III processor at 866MHz. The</p><formula xml:id="formula_9">0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</formula><p>OS of the mobile node is Windows XP. The length of a message payload is 1000 bytes. The message digest function is MD5. We consider two digital signature schemes: RSA with a modulus of 1024 bits, and ECNR over GF(p) 168 <ref type="bibr" target="#b34">[35]</ref>. We assume that the average path length is 8 hops. We first evaluate the CPU processing time on a mobile node. In our system, the major online processing overhead is the signing operation by the sender and the verification operation by the intermediate nodes. The second and third columns of Table <ref type="table">I</ref> show the CPU processing time of the sender to send a message and that of an intermediate node to forward a message, respectively. We observe that RSA has a much smaller forwarding overhead. Thus, if reducing forwarding overhead is the major objective, RSA is a better implementation choice. However, for both schemes, we observe that the CPU processing time is acceptable, if the nodes do not send a large number of messages, which is the expected case when the mobile nodes have limited bandwidth and energy.</p><p>We next evaluate the bandwidth and storage requirement. Compared with a message using DSR as the routing protocol but without message authentication, the major increased overhead is the digital signature for message authentication. For RSA with a modulus of 1024 bits, the authentication header is about 128 bytes; for ECNR GF(p) with 168 bits, the header is about 42 bytes. In terms of storage requirement for the receipts, for RSA 1024, the total storage of a receipt is 180 bytes, and for the Elliptic Curve based ECNR, it is 94 bytes. Comparing RSA with ECNR, we observe that ECNR has a much smaller bandwidth and storage requirement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. System performance vs. network resource</head><p>We next evaluate the performance of our system. One major metric of the performance of our system is the message success rate, i.e., the percentage of messages that are successfully relayed from the sender to the destination. For the purpose of this evaluation, we ignore message drops due to channel errors. Note that success rate will depend on the sending/forwarding strategy of the mobile nodes. As we have discussed in Section III, although our system provides incentive for cooperation by giving more credit for forwarding a message, whether or not to forward a specific message will depend on the objectives and the status of a node.</p><p>To demonstrate the generality of our system, for the purpose of this evaluation, we consider a special class of mobile nodes, namely the power-and-credit-conservative nodes. Specifically, a node is power-conservative if its remaining power allows it to send (and forward) only a limited amount of messages; a node is credit-conservative if it refrains from sending any new message when its credit balance is insufficient to cover the charge for sending a message. For this type of nodes, we can show that, if the objective of such a node is to maximize the total number of its own messages sent and at the same time to send the messages as early as possible, then the optimal send/forward strategy is the following: when it receives a transient message, if the number of messages allowed to be sent by its estimated credit balance is smaller than the number of messages allowed to be sent by its remaining battery, forward the transient message and increase its estimated credit balance by pα, where p is the probability that the forwarded message will arrive at its destination; otherwise, drop the message. In summary, let c and b denote the estimated credit balance and the number of messages allowed to be transmitted by the remaining battery of a node, respectively. Assume that each message takes an average of L hops. Then the policy of such a node is the following: if c L &lt; b, forward a transient message; otherwise, drop the message. Given the strategy above, we next evaluate the message success rate of our system. We first evaluate the message success rate under different configurations of network resource. Figure <ref type="figure" target="#fig_7">7</ref> shows the message success rates for two ad hoc networks: one network with 70 nodes uniformly distributed in an area of 1000 by 1000, and another network with 200 nodes uniformly distributed in an area of 2000 by 2000. The communication radius of each node is 250. In this experiment, since the nodes are power-andcredit-conservative, their estimated credit balance c is close to 0 and we choose their initial credit to be uniformly distributed in [0, C], where C = 10. To observe the effect of the amount of node resource on the overall message success rate, for each node, we choose its b, the number of messages that can be sent/forwarded by the remaining battery of the node, uniformly from [0, B], where B is from 30 to 640. Note that even the maximum number of 640 is very conservative <ref type="bibr" target="#b1">[2]</ref>. For this scenario, first we can drive an approximate analytical expression for the message success rate as (1 -C+1 2BL ) L , where L is the average path hops. In addition to this analytical result, Figure <ref type="figure" target="#fig_7">7</ref> also plots the results from simulations in order to capture the full details such as traffic concentration. To control the number of experiments for each configuration, we repeat the experiment of a configuration with a different random seed until the 5% confidence interval is narrower than 5% of the mean value. From Figure <ref type="figure" target="#fig_7">7</ref>, we observe clearly that with increasing resource, the nodes are more willing to forward others' messages, and therefore the message success rate is very close to 1.</p><p>We next evaluate the dynamics of message success rate; that is, how message success rate evolves as the nodes send more  messages. Figure <ref type="figure">8</ref> shows the result. Under this experiment, the initial credit of each node is 3, and the initial battery of each node is B, where B = 100 or 500. The value of B = 100 is in the very low end, and the objective is to observe message drops. The x-axis of Figure <ref type="figure">8</ref> is the index of the number of messages generated by the mobile nodes, and the y-axis shows the message success rate. From this figure, we observe that as system evolves and no new node joins, the batteries of the nodes are consumed and the nodes tend to be more conservative. However, we observe that, even in a low battery configuration, considerable number of messages will be generated before the message success rate decreases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>In this paper, we presented Sprite, a system to provide incentive to mobile nodes to cooperate. Our system determines payments and charges from a game-theoretic perspective, and we showed that our system motivates each node to report its behavior honestly, even when a collection of the selfish nodes collude. We also modeled the essential component of our system as the receipt-submission game, and proved the correctness of our system under this model. As far as we know, this is the first pure-software solution that has formal proofs of security. Our main result works for packetforwarding in unicast, and we extended it for route discovery and multicast as well. We also implemented a prototype of our system and showed the overhead of our system is insignificant. Simulations and analysis of the power-and-credit-conservative nodes showed that the nodes can cooperate and forward each other's messages, unless the resource of the nodes is extremely low.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>We thank Joan Feigenbaum for many valuable suggestions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IX. APPENDIX</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Proof of Theorem 1</head><p>Proof: Consider a strategy profile of all of the rest players, in which each player, n j (j = i), tells the truth with probability x j . We distinguish four cases here.</p><p>• Case A. i = 0. Since A i = T i = T RUE is the only possible strategy, it is also the best response. • Case B. 0 &lt; i &lt; e . Recall that e is the index of the last node that has ever received the message. If n i tells the truth, its expected welfare</p><formula xml:id="formula_10">EW + i = EP + i is                        (1 - e j=i+1 (1 -x j ) d-1 j=e +1 x j )γα + e j=i+1 (1 -x j ) d-1 j=e +1 x j γβ if e &lt; d x d α + (1 -x d )((1 - e -1 j=i+1 (1 -x j ))γα + e -1 j=i+1 (1 -x j )γβ) if e = d;</formula><p>if n i cheats, its expected welfare</p><formula xml:id="formula_11">EW - i = EP - i is              (1 - e j=i+1 (1 -x j ) d-1 j=e +1 x j )γα if e &lt; d x d α + (1 -x d )(1 - e -1 j=i+1 (1 -x j ))γα if e = d.</formula><p>Therefore, we always have EW + i ≥ EW - i , which implies that telling the truth with probability 1 will bring the maximum expected welfare to n i .</p><p>• Case C. i = e . If n i tells the truth, its expected welfare</p><formula xml:id="formula_12">EW + i = EP + i is        (1 - d-1 j=i+1 x j )γα + d-1 j=i+1 x j γβ if e &lt; d β if e = d;</formula><p>if n i cheats, its expected welfare</p><formula xml:id="formula_13">EW - i = EP - i is    (1 - d-1 j=i+1 x j )γα if e &lt; d 0 if e = d.</formula><p>As in the previous case, we always have EW + i ≥ EW - i , which implies that telling the truth with probability 1 will bring the maximum expected welfare to n i . • Case D. e &lt; i ≤ d. Note that T d = F ALSE here, which implies that n i always tells the truth in case of i = d. So we only need to consider the case of i &lt; d. If n i tells the truth, the expected welfare is If n i cheats, it gets an expected payment of</p><formula xml:id="formula_14">EW + i = EP + i = (1 -</formula><formula xml:id="formula_15">EP - i = (1 - d-1</formula><p>x j )γα + d-1 j=i+1</p><p>x j γβ, while its gets a cost of U - i = δ. So its expected welfare is</p><formula xml:id="formula_16">EW - i = EP - i -U - i = (1- d-1 j=i+1</formula><p>x j )γα+ d-1 j=i+1</p><p>x j γβ-δ.</p><p>As in Cases B and C, we always have EW + i ≥ EW - i , which implies that telling the truth with probability 1 will bring the maximum expected welfare to n i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Proof of Theorem 2</head><p>Proof: Consider strategizing group G that uses a strategy profile other than everybody telling the truth. For any set of nodes L ⊆ G, denote by P (L) the probability that L is the set of nodes in G that lie. The expected sum of welfare of G is</p><formula xml:id="formula_17">EW G = L⊆G P (L)W G (L),</formula><p>where W G (L) denotes the sum of welfare of G in case that the set of lying players is L. Our goal is to show</p><formula xml:id="formula_18">EW G ≤ W G (φ).</formula><p>Obviously, we only need to prove ∀L ⊆ G, W G (L) ≤ W G (φ).</p><p>We distinguish two cases here. (Hereafter, we use G(u, v) to denote |{i|u ≤ i ≤ v ∧ n i ∈ G}|.) </p><formula xml:id="formula_19">•</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>0</head><label></label><figDesc>-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The architecture of Sprite.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Illustration of our payment scheme (version 1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Illustration of our payment scheme (version 2).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Illustration of our payment scheme (final version).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 Fig. 5 .</head><label>55</label><figDesc>Fig. 5. Node n 0 sends a message to n d .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>0</head><label></label><figDesc>-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Message success rate vs. network battery resource.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>d- 1 j=i+1x</head><label>1</label><figDesc>j )γα. 0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>Case A. n 0 ∈ G. By considering the indices of players in L, we further distinguish three sub-cases.-Sub-case A-A. ∀n i ∈ L, i &lt; e . Then trivially we haveW G (L) = W G (φ). -Sub-case A-B. ∀n i ∈ L, i ≤ e , and n e ∈ L. Then W G (L) is equal to                                            W G (φ) -((e -1)γα + γβ)) if e &lt; d and ∀i ≤ e , n i ∈ L W G (φ) -((e -1)α + β) if e = d and ∀i ≤ e , n i ∈ L W G (φ) -( G(e, e)(γα -γβ) + G(e + 1, e -1)γα + γβ) if e &lt; d and ∃i ≤ e , n i ∈ L W G (φ) -( G(1, e -1)(1 -γ)α + G(e, e)(α -γβ) + G(e + 1, e -1)α + β) if e = d and ∃i ≤ e , n i ∈ L,where e = max i≤e ,ni ∈L i. Therefore,W G (L) ≤ W G (φ). -Sub-case A-C. ∃n i ∈ L, i &gt; e . Then W G (L) = W G (φ) + G(e , e )(γα -γβ) + G(e + 1, e -1)γα + γβ -δ,where e = max e &lt;i&lt;d,ni∈L i. It's easy to seeW G (L) ≤ W G (φ) + (e -e )γα -δ ≤ W G (φ) + (d -1)γα -δ ≤ W G (φ). • Case B. n o ∈ G.As in Case A, we further distinguish three sub-cases.-Sub-case B-A. ∀n i ∈ L, i &lt; e . Trivially, we haveW G (L) = W G (φ).-Sub-case B-B. ∀n i ∈ L, i ≤ e , and n e ∈ L.Then W G (L) is equal to                                                W G (φ) + e γβ -((e -1)γα + γβ)) if e &lt; d and ∀i ≤ e , n i ∈ L W G (φ) + e γβ -((e -1)α + β) if e = d and ∀i ≤ e , n i ∈ L W G (φ) + (e -e)γβ -( G(e, e)(γα -γβ) + G(e + 1, e -1)γα + γβ) if e &lt; d and ∃i ≤ e , n i ∈ L W G (φ) + (e -e)γβ -( G(1, e -1) •(1 -γ)α + G(e, e)(α -γβ) + G(e + 1, e -1)α + β) if e = d and ∃i ≤ e , n i ∈ L, where e = max i≤e ,ni ∈L i. Since γβ &lt; β &lt; α and γβ &lt; γα, it is easy to seeW G (L) ≤ W G (φ). -Sub-case B-C. ∃n i ∈ L, i &gt; e . Then W G (L) = W G (φ) -(e-e )γβ + G(e , e ) •(γα -γβ) + G(e + 1, e -1)γα +γβ -δ, where e = max e &lt;i&lt;d,ni∈L i. It's easy to see W G (L) ≤ W G (φ) + (e -e )γα -δ ≤ W G (φ) + (d -1)γα -δ ≤ W G (φ). 0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>If any of the conditions is not satisfied, the message is dropped. Otherwise, it saves (MD(m), p, seq, s) as a receipt. If n i is not the destination and decides to forward the message, it sends (m, p, seq, s) to the next hop. Figure6specifies the protocol steps.</figDesc><table><row><cell>(m, p, seq, s) is the received message.</cell></row><row><cell>n 0 is the sender, n d the destination.</cell></row><row><cell>if ((n i not in p) || (seq ≤ seq i (0, d)) || (verif y P K0 ((MD(m), p, seq), s) = T RUE)) drop the message</cell></row><row><cell>else</cell></row><row><cell>seq i (0, d) ← seq save (MD(m), p, seq, s) as a receipt</cell></row><row><cell>if (n i is not the destination and decides to forward)</cell></row><row><cell>send (m, p, seq, s) to next hop</cell></row><row><cell>else</cell></row><row><cell>drop the message</cell></row></table><note><p>0-7803-7753-2/03/$17.00 (C) 2003 IEEE IEEE INFOCOM 2003 is valid. Fig. 6. Node n i receives (m, p, seq, s).</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Note that a complete system can include both a component to deal with faulty/malicious nodes and a component to provide incentive to selfish nodes, using the technique proposed in this paper. 0-7803-7753-2/03/$17.00 (C)</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2003" xml:id="foot_1"><p>IEEE IEEE INFOCOM 2003</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the DoD University Research Initiative (URI) program administered by the Office of Naval Research under Grant N00014-01-1-0795. Sheng Zhong was supported by ONR grant N00014-01-1-0795 and NSF grants ANI-0207399 and CCR-TC-0208972. Yang Richard Yang was supported in part by NSF grant ANI-0207399.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Perkins</surname></persName>
		</author>
		<title level="m">Ad Hoc Networking</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Ad Hoc Mobile Wireless Networks: Protocols and Systems</title>
		<author>
			<persName><forename type="first">C.-K</forename><surname>Toh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Prentice Hall PTR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Performance comparison of cellular and multi-hop wireless networks: A quantitative study</title>
		<author>
			<persName><forename type="first">H.-Y</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sivakumar</surname></persName>
		</author>
		<ptr target="http://www.ece.gatech.edu/research/GNAN/archive/sigmetrics01hs.pdf" />
	</analytic>
	<monogr>
		<title level="m">Joint International Conference on Measurement and Modeling of Computer Systems (SIGMETRICS)</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-06">2001. June 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Mitigating routing misbehavior in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Marti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Giuli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Baker</surname></persName>
		</author>
		<ptr target="http://gunpowder.stanford.edu/˜laik/projects/adhoc/mitigating.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of The Sixth International Conference on Mobile Computing and Networking</title>
		<meeting>The Sixth International Conference on Mobile Computing and Networking<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">2000. Aug. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Enforcing service availability in mobile ad-hoc WANs</title>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/ACM Workshop on Mobile Ad Hoc Networking and Computing (MobiHOC)</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Stimulating cooperation in self-organizing mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
		<ptr target="http://lcawww.epfl.ch/Publications/Buttyan/TR01&quot;˙046.ps" />
	</analytic>
	<monogr>
		<title level="j">ACM Journal for Mobile Networks (MONET)</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>special issue on Mobile Ad Hoc Networks, summer</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Nodes bearing grudges: Towards routing security, fairness, and robustness in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buchegger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-Y</forename><forename type="middle">L</forename><surname>Boudec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th Euromicro Workshop on Parallel, Distributed and Network-based Processing</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Performance analysis of the CONFIDANT protocol: Cooperation of nodes -fairness in dynamic ad-hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buchegger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-Y</forename><forename type="middle">L</forename><surname>Boudec</surname></persName>
		</author>
		<ptr target="http://lcawww.epfl.ch/Publications/LeBoudec/BucheggerL02.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE/ACM Workshop on Mobile Ad Hoc Networking and Computing (MobiHOC)</title>
		<meeting>IEEE/ACM Workshop on Mobile Ad Hoc Networking and Computing (MobiHOC)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Reputation propagation and agreement in mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">R</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Wireless Communications and Networking Conference (WCNC)</title>
		<meeting>IEEE Wireless Communications and Networking Conference (WCNC)<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-03">March 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Osborne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rubenstein</surname></persName>
		</author>
		<title level="m">A Course in Game Theory</title>
		<imprint>
			<publisher>The MIT Press</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Energy efficient communications in ad hoc networks using directional antennas</title>
		<author>
			<persName><forename type="first">A</forename><surname>Spyropoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Raghavendra</surname></persName>
		</author>
		<ptr target="http://www.ieee-infocom.org/2002/papers/289.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM &apos;02</title>
		<meeting>IEEE INFOCOM &apos;02<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Energy-limited wireless networking with directional antennas: The case of sessionbased multicasting</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Wieselthier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ephremides</surname></persName>
		</author>
		<ptr target="http://www.ieee-infocom.org/2002/papers/303.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE INFOCOM &apos;02</title>
		<meeting>IEEE INFOCOM &apos;02<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A micropayment scheme encouraging collaboration in multi-hop cellular networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jakobsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Financial Crypto</title>
		<meeting>Financial Crypto<address><addrLine>La Guadeloupe</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-01">2003. January 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Towards mobile ad-hoc WANs: Terminodes</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y L</forename><surname>Boudec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Giordano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hamdi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Blazevic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vojnovic</surname></persName>
		</author>
		<ptr target="http://www.terminodes.com/mics/getDoc.php?" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Wireless Communications and Networking Conference (WCNC)</title>
		<meeting>the IEEE Wireless Communications and Networking Conference (WCNC)<address><addrLine>Chicago, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-09">September 2000</date>
		</imprint>
	</monogr>
	<note>Online. sessid= 003b3dfc72e02704e92bee%31b2460643&quot;&amp;docid=32&quot;&amp;docnum=1</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Towards self-organized mobile ad hoc networks: the project</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y L</forename><surname>Boudec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vetterli</surname></persName>
		</author>
		<ptr target="http://www.terminodes.com/mics/getDoc.php?" />
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<date type="published" when="2001-01">January 2001</date>
		</imprint>
	</monogr>
	<note>Online. sessid= 003b3dfc72e02704e92bee%31b2460643&quot;&amp;docid=31&quot;&amp;docnum=1</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The quest for security in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Buttyan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Capkun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHOC)</title>
		<meeting>ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHOC)<address><addrLine>Long Beach, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">October 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Algorithmic mechanism design</title>
		<author>
			<persName><forename type="first">N</forename><surname>Nisan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ronen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Games and Economic Behavior</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="166" to="196" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Algorithms for selfish agents</title>
		<author>
			<persName><forename type="first">N</forename><surname>Nisan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">16th Annual Symposium on Theoretical Aspects of Computer Science</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="1" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Algorithms, games, and the Internet</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 33rd annual symposium on Theory of computing</title>
		<meeting>the 33rd annual symposium on Theory of computing</meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="749" to="753" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Vickrey prices and shortest paths: What is an edge worth</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hershberger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
		<ptr target="http://theory.stanford.edu/focs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual Symposium on Foudations of Computer Science</title>
		<meeting>the 42nd Annual Symposium on Foudations of Computer Science<address><addrLine>Las Vegas, Nevada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">2001. Oct. 2001. 2001</date>
			<biblScope unit="page" from="252" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Sharing the cost of multicast transmissions</title>
		<author>
			<persName><forename type="first">J</forename><surname>Feigenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<ptr target="http://cs-www.cs.yale.edu/homes/jf/FPS.pdf" />
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences (Special issue on Internet Algorithms.)</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="21" to="41" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Incentives in peer-topeer file sharing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Golle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Leyton-Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mironov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Electronic Commerce (EC&apos; 01)</title>
		<meeting>the ACM Symposium on Electronic Commerce (EC&apos; 01)<address><addrLine>Tampa, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">2001. October 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A BGP-based mechanism for lowest-cost routing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Feigenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<ptr target="http://cs-www.cs.yale.edu/homes/jf/FPSS.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 ACM Symposium on Principles of Distributed Computing</title>
		<meeting>the 2002 ACM Symposium on Principles of Distributed Computing</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">How bad is selfish routing?</title>
		<author>
			<persName><forename type="first">T</forename><surname>Roughgarden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of ACM</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="236" to="259" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Vertical handoffs in wireless overlay networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stemm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Katz</surname></persName>
		</author>
		<ptr target="http://citeseer.nj.nec.com/stemm96vertical.html" />
	</analytic>
	<monogr>
		<title level="s">Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="335" to="350" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Securing ad hoc networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
		<ptr target="http://citeseer.nj.nec.com/cache/papers/cs/16984/http:zSzzSzwww.ee.corn%ell.eduzSz˜haaszSzPublicationszSznetwork99.pdf/zhou99securing.pdf" />
	</analytic>
	<monogr>
		<title level="j">IEEE Network Magazine</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Self-securing ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Zerfos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<ptr target="http://www.cs.ucla.edu/˜jkong/publications/ISCC02.pdf" />
	</analytic>
	<monogr>
		<title level="j">ISCC</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Dynamic Source Routing in Ad Hoc Wireless Networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Malt</surname></persName>
		</author>
		<ptr target="http://www.monarch.cs.cmu.edu/monarch-papers/kluwer-adhoc.ps" />
		<editor>Tomasz Imielinski and Hank Korth</editor>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Kluwer Academic Publishers</publisher>
			<biblScope unit="volume">5</biblScope>
		</imprint>
	</monogr>
	<note>Mobile Computing</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A secure routing protocol for ad hoc networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Dahill</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">N</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shields</surname></persName>
		</author>
		<ptr target="ftp://ftp.cs.umass.edu/pub/techrept/techreport/2001/UM-CS-2001-037.ps" />
	</analytic>
	<monogr>
		<title level="j">UMass, Tech. Rep</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Ariadne: A secure on-demand routing protocol for ad hoc networks</title>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<ptr target="http://www.monarch.cs.rice.edu/monarch-papers/ariadne.ps" />
		<imprint>
			<date type="published" when="2001-12">December 2001</date>
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Rice University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rep. TR01-384</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">TCP congestion control with a misbehaving receiver</title>
		<author>
			<persName><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cardwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Anderson</surname></persName>
		</author>
		<ptr target="http://citeseer.nj.nec.com/savage99tcp.html" />
	</analytic>
	<monogr>
		<title level="j">ACM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="1999-10">Oct. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">The MD5 Message Digest Algorithm, RFC 1321</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<ptr target="http://andrew2.andrew.cmu.edu/rfc/rfc1321.htm" />
		<imprint>
			<date type="published" when="1992-04">Apr. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m">Federal Information Processing Standards Publication 180-1</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note>Secure hash standard</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Dai</surname></persName>
		</author>
		<ptr target="http://www.eskimo.com/wei-dai/cryptlib.html" />
		<title level="m">Crypto++4.0</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">P</forename><surname>Group</surname></persName>
		</author>
		<ptr target="http://grouper.ieee.org/groups/1363/index.html" />
		<title level="m">IEEE P1363 standard</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
