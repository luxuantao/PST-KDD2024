<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">New Generic Hybrids Based Upon Genetic Algorithms</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Michael</forename><surname>Affenzeller</surname></persName>
							<email>ma@cast.uni-linz.ac.at</email>
							<affiliation key="aff0">
								<orgName type="department">Institute of Systems Science Systems Theory and Information Technology</orgName>
								<orgName type="institution">Johannes Kepler University</orgName>
								<address>
									<addrLine>Altenbergerstrasse 69</addrLine>
									<postCode>A-4040</postCode>
									<settlement>Linz</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">New Generic Hybrids Based Upon Genetic Algorithms</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E8A37760B4988D6BC0A3C2FE37BF39AA</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T12:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper we propose some generic extensions to the general concept of a Genetic Algorithm. These biologically and sociologically inspired interrelated hybrids aim to make the algorithm more open for scalability on the one hand, and to retard premature convergence on the other hand without necessitating the development of new coding standards and operators for certain problems. Furthermore, the corresponding Genetic Algorithm is unrestrictedly included in all of the newly proposed hybrid variants under special parameter settings. The experimental part of the paper discusses the new algorithms for the Traveling Salesman Problem as a well documented instance of a multimodal combinatorial optimization problem achieving results which significantly outperform the results obtained with a conventional Genetic Algorithm using the same coding and operators.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Many problems that are treated by Genetic Algorithms belong to the class of NPcomplete problems. The advantage of Genetic Algorithms when being applied to such problems lies in the ability to search through the solution space in a broader sense than heuristic methods that are based upon neighborhood search. Nevertheless, also Genetic Algorithms are frequently faced with a problem which, at least in its impact, is quite similar to the problem of stagnating in a local but not global solution. This drawback, called premature convergence in the terminology of Genetic Algorithms, occurs when the population of a Genetic Algorithm reaches such a suboptimal state that the genetic operators can no longer produce offspring that outperform their parents (e.g. <ref type="bibr" target="#b4">[5]</ref>).</p><p>During the last decades plenty of work has been investigated to introduce new coding standards and operators in order to overcome this essential handicap of Genetic Algorithms. As these coding standards and the belonging operators often are quite problem specific, we try to take a different approach and look upon the concepts of Genetic Algorithms as an artificial self organizing process in a biologically and sociologically inspired generic way in order to improve the global convergence behaviour of Genetic Algorithms independently of the actually employed implementation.</p><p>In doing so we have introduced an advanced selection model for Genetic Algorithms that allows adaptive selective pressure handling in a way quite similar to Evolution Strategies <ref type="bibr" target="#b1">[2]</ref>. Based upon this enhanced GA-model two further generic extensions are discussed:</p><p>(1) The concept of segregation and reunification of subpopulations aims to assure an independent development of building blocks in very different regions of the search space in order to improve global convergence. The algorithm divides the population into subpopulations. These evolve independently until their fitnesses stagnate. By this approach of width-search, building blocks, which would disappear early in case of standard Genetic Algorithms, are evolved in different regions of the search space at the beginning and during the evolutionary process. In contrast to the Island Models for Genetic Algorithms <ref type="bibr" target="#b15">[16]</ref>, in our case the single subpopulations grow together again in case of stagnating fitness in order to end up with a final population containing as much essential building blocks as possible.</p><p>(2) The second newly introduced concept allows the dynamic usage of multiple crossover operators in parallel in order to somehow imitate the parallel evolution of a variety of species that are struggling for limited resources. This strategy seems very adopted for problems which consider more than one crossover operator -especially if the properties of the considered operators may change as evolution proceeds.</p><p>As an important property of all the newly introduced hybrids it has to be pointed out that under special parameter settings the corresponding GA/GAs is/are unrestrictedly included in the new hybrids. The experimental part discusses the new algorithms for the Traveling Salesman Problem as a very well documented instance of a multimodal combinatorial optimization problem. In contrast to all other evolutionary heuristics known to the author that do not use any additional problem specific information, we obtain solutions close to the best known solution for all considered benchmarks (symmetric as well as asymmetric benchmark problems).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Variable Selective Pressure Model</head><p>Similar to any other conventional Genetic Algorithm (e.g. <ref type="bibr" target="#b8">[9]</ref>) we use a population of fixed size that will evolve to a new population of the same size by selection, crossover, and mutation.</p><p>What we additionally have done is to introduce an intermediate step in terms of a so-called virtual population of variable size where the size of the virtual population usually has to be greater than the population size. This virtual population is created by selection, crossover, and mutation in the common sense of Genetic Algorithms. But like in the context of Evolution Strategies, only a certain percentage of this intermediate population will survive. This handling of selective pressure in our context is mainly motivated by (µ, λ)-Evolution Strategies where µ parents produce λ descendants from which the best µ survive. Within the framework of Evolution Strategies, selective pressure is defined as s = µ λ , where a small value of s indicates high selective pressure and vice versa (for a detailed description of Evolution Strategies see for instance <ref type="bibr" target="#b11">[12]</ref>). Even if the interaction between the variable selective pressure within our new model and the notion of temperature within the scope of Simulated Annealing is quite different in detail, we have adopted this notation. Applied to our new Genetic Algorithm, this means that from |P OP | (population size) number of parents |P OP | • T ((size of virtual population) &gt; |P OP |, i.e. T &gt; 1) descendants are generated by crossover and mutation from which the best |P OP | survive as illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>. T for a virtual population built up in the sense of a (µ, λ)-Evolution Strategy.</p><p>Obviously we define selective pressure as s</p><formula xml:id="formula_0">= |P OP | |P OP |•T = 1</formula><p>T , where a small value of s, i.e. a great value of T , stands for high selective pressure and vice versa. Equipped with this enhanced GA-model it is quite easy to adopt further extensions based upon a controllable selective pressure, i.e. it becomes possible either to reset the temperature up/down to a certain level or simply to cool down the temperature in the sense of Simulated Annealing during the evolutionary process in order to steer the convergence of the algorithm.</p><p>Biologically interpreting this (µ, λ)-Evolution Strategy like selective pressure handling, for Genetic Algorithms this means, that some kind of 'infant mortality' has been introduced in the sense that a certain ratio of the population</p><formula xml:id="formula_1">(|P OP | • T -|P OP | = |P OP | • (T -1)</formula><p>) will never become procreative, i.e. this weaker part of a population will not get the possibility of reproduction. Decreasing this 'infant mortality', i.e. reducing the selective pressure during the evolutionary process also makes sense in a biological interpretation because also in nature stronger and higher developed populations suffer less from infant mortality.</p><p>From the point of view of optimization, decreasing the temperature during the optimization process means that a greater part of the search space is explored at the beginning of evolution -whereas at a later stage of evolution, when the average fitness is already quite high, a higher selective pressure is quite critical in that sense that it can easily cause premature convergence. Operating with a temperature converging to zero, this (µ, λ)-Evolution Strategy like selective pressure model for Genetic Algorithms acts like the corresponding Genetic Algorithm with generational replacement. Moreover, implementing the analogue to the (µ + λ)-Evolution Strategy denotes the other extreme of immortal individuals. However, also the implementation of this strategy is quite easy to handle with our model by just copying the old population into the virtual population. Other replacement mechanisms, like elitism or the goldcage-model for example, are also easy to implement by just adding the best individuals respectively the best individual of the last generation to the virtual population.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Hybrid GA-Concepts Based Upon the Variable Selective Pressure Model</head><p>When applying Genetic Algorithms to complex problems, one of the most frequent difficulties is premature convergence. Roughly speaking, premature convergence occurs when the population of a Genetic Algorithm reaches such a suboptimal state that the genetic operators can no longer produce offspring that outperform their parents (e.g. <ref type="bibr" target="#b4">[5]</ref>).</p><p>Several methods have been proposed to combat premature convergence in the context of Genetic Algorithms (e.g. <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b5">[6]</ref>). These include the restriction of the selection procedure, the operators and the according probabilities as well as the modification of fitness assignment. However, all these methods are heuristic in nature. Their effects vary with different problems and their implementation strategies need ad hoc modifications with respect to different situations.</p><p>A critical problem in studying premature convergence is the identification of its occurrence and the characterization of its extent. Srinivas and Patnaik <ref type="bibr" target="#b13">[14]</ref>, for example, use the difference between the average and maximum fitness as a standard to measure premature convergence and adaptively vary the crossover and mutation probabilities according to this measurement. As in the present paper, the term 'population diversity' has been used in many papers to study premature convergence (e.g. <ref type="bibr" target="#b12">[13]</ref>) where the decrease of population diversity is considered as the primary reason for premature convergence. Therefore, a very homogeneous population, i.e. little population diversity, is considered as the major reason for a Genetic Algorithm to prematurely converge.</p><p>The following generic extensions that are built up upon the variable selective pressure model primarily aim to avoid or at least to retard premature convergence in a general way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Segregative Genetic Algorithms (SEGA)</head><p>In principle, our new SEGA introduces two enhancements to the general concept of Genetic Algorithms. The first is to bring in a variable selective pressure, as described in section 2, in order to control the diversity of the evolving population. The second concept introduces a separation of the population to increase the broadness of the search process and joins the subpopulation after their evolution in order to end up with a population including all genetic information sufficient for locating the region of a global optimum.</p><p>The aim of dividing the whole population into a certain number of subpopulations (segregation) that grow together in case of stagnating fitness within those subpopulations (reunification) is to combat premature convergence which is the source of GA-difficulties. This segregation and reunification approach is a new technique to overcome premature convergence <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b2">[3]</ref>.</p><p>Whereas Island Models for Genetic Algorithms (e.g. in <ref type="bibr" target="#b15">[16]</ref>) are mainly driven by the idea of using simultaneous computer systems, SEGA attempts to utilize migration more precisely in order to achieve superior results in terms of global convergence. The principle idea is to divide the whole population into a certain number of subpopulations at the beginning of the evolutionary process. These subpopulations evolve independently from each other until the fitness increase stagnates because of too similar individuals within the subpopulations. Then a reunification from n to (n -1) subpopulations is done. Roughly spoken this means, that there is a certain number of villages at the beginning of the evolutionary process that are slowly growing together to bigger cities, ending up with one big town containing the whole population at the end of evolution. By this approach of width-search, building blocks in different regions of the search space are evolved at the beginning and during the evolutionary process, which would disappear early in case of standard genetic algorithms and whose genetic information could not be provided at a later date of evolution when the search for global optima is of paramount importance.</p><p>Monitoring the behaviour of a Genetic Algorithm when applied to optimization problems shows that the average fitness as well as the fitness of the best member of the actual population often stagnates at a certain point of the evolution process even if the actual fitness is wide off the mark of a potentially best or at least a best-known solution (premature convergence). Furthermore it appears that Genetic Algorithms prematurely converge to very different regions of the solution space when repeatedly running a Genetic Algorithm. Moreover it is known from GA-theory <ref type="bibr" target="#b8">[9]</ref>, that extending the population size does not help to avoid premature convergence. In fact, depending on the problem-type and the problem-dimension there is a certain population size, where exceeding this population size doesn't effect any more improvements in the quality of the solution.</p><p>Motivated by these observations, we have developed an extended approach to Genetic Algorithms where the total population is split into a certain number of subpopulations or villages, all evolving independently from each other (segregation) until a certain stage of stagnation in the fitness of those subpopulations is reached. Then, in order to bring some new genetic information into each village, the number of villages is reduced by one which causes new overlappingpoints of the villages. Fig. <ref type="figure" target="#fig_1">2</ref> shows a schematic diagram of the described process. This process is repeated until all villages are growing together ending up in one town (reunification). The variable selective pressure is of particular importance if the number of subpopulations is reduced by one because this event brings new diversification into the population. In this case a higher selective pressure is reasonable, i.e. if reunifying members of neighboring villages, the temperature is reset to a higher level in order to cool down to 1 as the new system of subpopulations evolves. While the number of villages decreases during evolution, it is recommended to reset the selective pressure to a higher level because the genetic diversity of the emerging greater subpopulations is growing.</p><p>SEGA uses a fixed number of iterations for termination. Depending on this total number of iterations and the initial number of subpopulations (villages), the dates of reunification may statically be calculated at the beginning of the evolutionary process as done in the experimental result section. Further improvements, particularly in the sense of running time, are possible, if, in order to determine the dates of reunification, a dynamic criterion for the detection of stagnating genetic diversity within the subpopulations is used.</p><p>Again, like in the context of the variable selective pressure model which is included in SEGA as well, it should be pointed out that a corresponding Genetic Algorithm is unrestrictedly included in the SEGA when the number of subpopulations (villages) and the cooling temperature are both set to 1 at the beginning of the evolutionary process. Moreover, the introduced techniques also do not use any problem specific information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Dynamic Habitat Adaptation</head><p>Genetic Algorithms as well as its most common variants consider the evolution of a single species, i.e. crossover can be done between all members of the population. This supports the aspect of depth-search but not the aspect of width-search. Considering natural evolution, where a multiplicity of species evolve in parallel, as a role model, we could introduce a number of crossover operators and apply each one to a certain subpopulation. In order to keep that model realistically it is necessary to choose the size of those subpopulations dynamically, i.e. depending on the actual success of a certain species its living space is expanded or restricted. Speaking in the words of Genetic Algorithms, this means that the size of subpopulations (defined by the used crossover and mutation operators) with lower success in the sense of the quality function is restricted in support of those subpopulations that push the process of evolution.</p><p>But as no Genetic Algorithm known to the author is able to model jumps in the evolutionary process and no exchange of information between the subpopulations takes place, the proposed strategy would fail in generating results superior to the results obtained when running the Genetic Algorithms with the certain operators one after another. Therefore, it seems reasonable to allow also recombination of individuals that have emerged from different crossover operators, i.e. the total population is taken into account for each crossover operator and the living space (habitat) of each virtual subpopulation is defined by its success during the last iterations as illustrated in Fig. <ref type="figure" target="#fig_2">3</ref>.</p><p>Exemplarily considering the properties of the OX (order crossover) and the ERX (edge recombination crossover) operators for crossover it is reported (e.g. in <ref type="bibr" target="#b8">[9]</ref>) that the OX-operator significantly outperforms the ERX-operator in terms of speed whereas the ERX-operator surpasses OX in terms of global convergence. Dynamically using multiple crossover operators in parallel utilizes the 'fast' OXoperator for a long evolution period until the performance in terms of solution quality of ERX outperforms OX at a later stage of evolution. Even more, experiments have shown that the described strategy significantly surpasses the results obtained when just using one single operator in terms of solution quality.</p><p>Anyway, this dynamic (self-organizing) strategy seems particularly suitable for situations where a couple of crossover operators whose properties are not exactly known are taken into account.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experimental Results</head><p>In our experiment, all computations are performed on a Pentium III PC with 256 megabytes of main memory. The programs are written in the Java programming language. Even if ongoing experimental research on a variety of shows quite similar results it would go beyond the scope of the present paper to present all these tests. So we just give a short summary of the results obtained by SEGA on a selection of symmetric as well as asymmetric TSP benchmark problem instances taken from the TSPLIB <ref type="bibr" target="#b10">[11]</ref> using updated results<ref type="foot" target="#foot_0">1</ref> for the best, or at least the best known, solutions. In doing so, we have performed a comparison of SEGA with a conventional GA using exactly the same operators for crossover and mutation and the same parameter settings and with the COSA-algorithm <ref type="bibr" target="#b14">[15]</ref> as an established and successful ambassador of a heuristic especially developed for routing problems. For the tests the parameters of COSA are set as suggested by the author in <ref type="bibr" target="#b14">[15]</ref>. Both, GA and SEGA use a mutation probability of 0.05 and a combination of OX-crossover and ERX-crossover <ref type="bibr" target="#b8">[9]</ref> combined with the golden-cage population model, i.e. the entire population is replaced with the exception that the best member of the old population survives until the new population generates a better one (wild-card strategy). Within SEGA, the described strategies are applied to each subpopulation. The results of a test presented in the present paper start with 32 villages (subpopulations), each consisting of 64 individuals, i.e. the total population size is set to 2048 for SEGA (as well as for COSA and GA). Table <ref type="table" target="#tab_0">1</ref> shows the experimental results of SEGA (with dynamic habitat adaptation), COSA, and GA concerning various types of problems in the TSPLIB. For each problem the algorithms were run ten times. The efficiency for each algorithm is quantified in terms of the relative difference of the best's individual fitness after a given number or iterations to the best or best-known solution. In this experiment, the relative difference is defined as relativeDifference = ( F itness Optimal -1) * 100%. These examples demonstrate the predominance of the new SEGA (together with an adaptive steering of OX and ERX operators) compared to the standard-GA. The preeminence of especially when being compared to the rather problem specific COSA heuristic, becomes even more evident, if asymmetric benchmark problems are considered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>In this paper an enhanced Genetic Algorithm and two upgrades have been presented and exemplarily tested on some TSP benchmarks. The proposed GAbased techniques couple aspects from Evolution Strategies (selective pressure), Simulated Annealing (temperature, cooling) as well as a special segregation and reunification strategy with crossover, mutation, and selection in a general way, so that established crossover and mutation operators for certain problems may be used analogously to the corresponding Genetic Algorithm. The investigations in this paper have mainly focused on the avoidance of premature convergence and on the introduction of methods which make the algorithm more open for scalability in the sense of convergence versus running time. Concerning the speed of SEGA, it has to be pointed out that the superior performance concerning convergence requires a higher running time, mainly because of the the greater population size |P OP | required. This should allow to transfer already developed GA-concepts to increasingly powerful computer systems in order to achieve better results. Using simultaneous computers seems especially suited to increase the performance of SEGA. Anyway, under special parameter settings the corresponding Genetic Algorithm is fully included within the introduced concepts achieving a performance only marginally worse than the performance of the equivalent Genetic Algorithm. In other words, the introduced models can be interpreted as a superstructure to the GA model or as a technique upwards compatible to Genetic Algorithms. Therefore, an implementation of the new algorithm(s) for a certain problem should be quite easy to do, presumed that the corresponding Genetic Algorithm (coding, operators) is known.</p><p>However, the efficiency of a variable selective pressure certainly depends on the genetic diversity of the entire population. Ongoing research indicates that it could be a very fruitful approach to define the actual selective pressure depending on the actual genetic diversity of the population.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Evolution of a new population with selective pressure s = 1T for a virtual population built up in the sense of a (µ, λ)-Evolution Strategy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. Evolution of a new population for the instance that four subpopulations are merged to three.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Evolution of a new population for the instance that four crossover operators are used in parallel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Experimental results of COSA, GA (using OX or ERX for crossover) and the new SEGA together with a dynamic combination of OX-and ERX crossover.</figDesc><table><row><cell>Problem</cell><cell>Iter.No.</cell><cell cols="3">Average difference(%)</cell></row><row><cell></cell><cell></cell><cell cols="3">COSA GA OX GA ERX GA new</cell></row><row><cell>eil76(symm.)</cell><cell cols="3">5000 6.36 17.56 7.62</cell><cell>0.32</cell></row><row><cell>ch130(symm.)</cell><cell cols="4">5000 14.76 84.54 32.44 0.35</cell></row><row><cell cols="5">kroA150(symm.) 5000 20.91 102.40 71.97 0.74</cell></row><row><cell cols="5">kroA200(symm.) 10000 48.45 95.69 117.11 1.24</cell></row><row><cell>br17(asymm.)</cell><cell>200</cell><cell>0.00 0.00</cell><cell>0.00</cell><cell>0.00</cell></row><row><cell cols="5">ftv55(asymm.) 5000 44.22 41.34 23.52 0.27</cell></row><row><cell cols="5">kro124p(asymm.) 10000 26.78 30.61 15.49 0.48</cell></row><row><cell cols="5">ftv170(asymm.) 15000 187.34 87.12 126.22 1.09</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Updates for the best (known) solutions can for example be found on ftp://ftp.zib.de/pub/Packages/mp-testdata/tsp/tsplib/index.html</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A New Approach to Evolutionary Computation: Segregative Genetic Algorithms (SEGA)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Affenzeller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Connectionist Models of Neurons, Learning Processes, and Artificial Intelligence</title>
		<title level="s">Lecture Notes of Computer Science</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2084</biblScope>
			<biblScope unit="page" from="594" to="601" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Transferring the Concept of Selective Pressure from Evolutionary Strategies to Genetic Algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Affenzeller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Systems Science</title>
		<meeting>the 14th International Conference on Systems Science</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="346" to="353" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Segregative Genetic Algorithms (SEGA): A Hybrid Superstructure Upwards Compatible to Genetic Algorithms for Retarding Premature Convergence</title>
		<author>
			<persName><forename type="first">M</forename><surname>Affenzeller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internatinal Journal of Computers, Systems and Signals (IJCSS)</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="18" to="32" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Genetic Algorithms for Tracking Changing Environment</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Cobb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Grefenstette</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth International Conference on Genetic Algorithms</title>
		<meeting>the Fifth International Conference on Genetic Algorithms</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="523" to="530" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An Introduction to Simulated Evolutionary Optimization</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Fogel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Neural Networks</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="14" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Genetic Alogorithms in Search, Optimization and Machine Learning</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Addison Wesley Longman</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
		<title level="m">Adaption in Natural and Artificial Systems. 1st</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<author>
			<persName><forename type="first">S</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Gelatt</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Vecchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Optimization by Simulated Annealing</title>
		<imprint>
			<date type="published" when="1983">1983</date>
			<biblScope unit="volume">220</biblScope>
			<biblScope unit="page" from="671" to="680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Genetic Algorithms + Data Structures = Evolution Programs. 3rd edn</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Michalewicz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin Heidelberg New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">I</forename><surname>Rechenberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973">1973</date>
			<publisher>Evolutionsstrategie. Friedrich Frommann Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">TSPLIB -A Traveling Salesman Problem Library</title>
		<author>
			<persName><forename type="first">G</forename><surname>Reinelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="376" to="384" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Genetische Algorithmen und Evolutionsstrategien</title>
		<author>
			<persName><forename type="first">E</forename><surname>Schneburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Heinzmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Feddersen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Perelson</surname></persName>
		</author>
		<title level="m">Population Diversity in an Immune System Model: Implications for Genetic Search. Foundations of Genetic Algorithms</title>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="153" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Adaptive Probabilities of Crossover and Mutation in Genetic Algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Srinivas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Patnaik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="656" to="667" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Tourenplanung durch Einsatz naturanaloger Verfahren</title>
		<author>
			<persName><forename type="first">O</forename><surname>Wendt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Deutscher Universitätsverlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A Genetic Algorithm Tutorial</title>
		<author>
			<persName><forename type="first">D</forename><surname>Whitley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Statistics and Computing</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="65" to="85" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
