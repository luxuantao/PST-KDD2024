<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Iterative two-step genetic-algorithm-based method for efficient polynomial B-spline surface reconstruction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010-10-08">8 October 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Akemi</forename><surname>Gálvez</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Applied Mathematics and Computational Sciences</orgName>
								<orgName type="institution" key="instit1">University of Cantabria</orgName>
								<orgName type="institution" key="instit2">Avda. de los Castros s/n</orgName>
								<address>
									<postCode>E-39005</postCode>
									<settlement>Santander</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Andrés</forename><surname>Iglesias</surname></persName>
							<email>iglesias@unican.es</email>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Applied Mathematics and Computational Sciences</orgName>
								<orgName type="institution" key="instit1">University of Cantabria</orgName>
								<orgName type="institution" key="instit2">Avda. de los Castros s/n</orgName>
								<address>
									<postCode>E-39005</postCode>
									<settlement>Santander</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jaime</forename><surname>Puig-Pey</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Applied Mathematics and Computational Sciences</orgName>
								<orgName type="institution" key="instit1">University of Cantabria</orgName>
								<orgName type="institution" key="instit2">Avda. de los Castros s/n</orgName>
								<address>
									<postCode>E-39005</postCode>
									<settlement>Santander</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Iterative two-step genetic-algorithm-based method for efficient polynomial B-spline surface reconstruction</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2010-10-08">8 October 2010</date>
						</imprint>
					</monogr>
					<idno type="MD5">042E1D234CE5C98A2380F2012F8E6E52</idno>
					<idno type="DOI">10.1016/j.ins.2010.09.031</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Evolutionary computation Genetic algorithms Reverse engineering Surface reconstruction B-spline surfaces</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Surface reconstruction is a very challenging problem arising in a wide variety of applications such as CAD design, data visualization, virtual reality, medical imaging, computer animation, reverse engineering and so on. Given partial information about an unknown surface, its goal is to construct, to the extent possible, a compact representation of the surface model. In most cases, available information about the surface consists of a dense set of (either organized or scattered) 3D data points obtained by using scanner devices, a today's prevalent technology in many reverse engineering applications. In such a case, surface reconstruction consists of two main stages: (1) surface parameterization and (2) surface fitting. Both tasks are critical in order to recover surface geometry and topology and to obtain a proper fitting to data points. They are also pretty troublesome, leading to a high-dimensional nonlinear optimization problem. In this context, present paper introduces a new method for surface reconstruction from clouds of noisy 3D data points. Our method applies the genetic algorithm paradigm iteratively to fit a given cloud of data points by using strictly polynomial B-spline surfaces. Genetic algorithms are applied in two steps: the first one determines the parametric values of data points; the later computes surface knot vectors. Then, the fitting surface is calculated by least-squares through either SVD (singular value decomposition) or LU methods. The method yields very accurate results even for surfaces with singularities, concavities, complicated shapes or nonzero genus. Six examples including open, semi-closed and closed surfaces with singular points illustrate the good performance of our approach. Our experiments show that our proposal outperforms all previous approaches in terms of accuracy and flexibility.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>One of the most visible effects of globalization is the growing global competition among manufacturers and industrial corporations to deliver more competitive products with better quality and lower prices. As a consequence, manufacturers are constantly challenged to optimize processes in order to reduce the product development time cycle. For instance, digital data must be available for efficient storage and transmission between different providers and manufacturers. Reverse engineering is a crucial technology in this process. While conventional engineering transforms engineering concepts and models into real parts, in reverse engineering real parts are transformed backward into engineering models and concepts. Advantages of this process are obvious: digital models can be used even although the real objects are lost or become unavailable or unusable. Further, digital models are also often easier and cheaper to modify and analyze than the physical objects themselves.</p><p>Currently, laser scanner is the most common method used in reverse engineering applications because it is fast and robust relative to other methods. Laser scanner systems yield a (possibly massive) cloud of 3D data points from which a 3D model is to be reconstructed. This latter process, called surface reconstruction, has many remarkable advantages. By using a mathematical surface model, the same complex shape can be economically represented by as few as 50-500 parameters. This issue becomes increasingly important with the rapid development of powerful communication technologies, making it possible to send those models all over the world in seconds. Furthermore, parametric mathematical models such as B-splines are the preferred representations in engineering design applications because they can be readily modified by changing only a small set of parameters, such as control points or knot vectors.</p><p>To obtain a reliable surface reconstruction method for parametric surfaces is however not an easy task. After decades of intensive research, parametric surface reconstruction is still a challenging problem and many data sets cannot be properly reconstructed. The motivation of this paper is to develop an efficient method for surface reconstruction by using polynomial B-splines and with the ability to reconstruct a wide variety of complicated shapes while achieving the highest degree of accuracy.</p><p>In this context, the present paper introduces a new method for surface reconstruction from clouds of noisy 3D data points by using polynomial B-spline surfaces as fitting surfaces. The originality of our approach lies in the fact that genetic algorithms are applied iteratively in two steps: the first one determines the parametric values of data points; the later computes surface knot vectors. Then, the fitting surface is calculated by least-squares through either SVD (singular value decomposition) or LU methods. The method yields very accurate results even for surfaces with singularities, concavities, complicated shapes or nonzero genus. Further, it outperforms all previous approaches in terms of flexibility, accuracy and computation times. All these claims will be adequately justified throughout the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.">Evolutionary computation</head><p>Evolutionary computation (EC) is a subfield of artificial intelligence aimed at solving combinatorial optimization problems by using processes and methods inspired by biological mechanisms of evolution, such as selection, reproduction and survival of the fittest. The field encompasses computer-based problem solving systems involving metaheuristic optimization algorithms such as evolutionary algorithms (genetic algorithms, evolutionary programming, evolutionary strategies, genetic programming and so on) and swarm intelligence (ant colony optimization, particle swam optimization) along with many other evolutionary techniques (artificial immune systems, self-organization systems, cultural algorithms, differential evolution, etc.). Among them, genetic algorithms (GA) have been recognized as one of the most powerful computational paradigms for optimization and global search problems. Originated from the seminal work of John Holland in the 70s <ref type="bibr" target="#b28">[29]</ref>, they combine bio-inspired processes emulating genetic evolution (namely, natural selection, mutation and crossover) in order to describe the growth and development of populations associated with the target problem. In GA populations are formulated as abstract representations (called chromosomes) of candidate solutions (called individuals or phenotypes) to an optimization problem. Typically, evolution starts from a population of randomly generated individuals and happens in generations. In each generation, the fitness (a measure of the quality of the represented solution) of every individual in the population is evaluated. Multiple individuals are then stochastically selected based on their fitness and modified under the action of the genetic operators to form a new population to be subsequently used in the next iteration of the algorithm. Ideally, the algorithm is expected to evolve over time toward better solutions, although convergence to global optima cannot be generally assured.</p><p>In spite of their surprising simplicity, GA are seen nowadays as a powerful tool to solve complex optimization problems in various fields of applications. Examples include pattern-classification problems <ref type="bibr" target="#b32">[33]</ref>, association of visual textures with human perceptions <ref type="bibr" target="#b23">[24]</ref>, manufacturing process modeling <ref type="bibr" target="#b7">[8]</ref>, forensic identification <ref type="bibr" target="#b34">[35]</ref>, optimization of fuzzy-logic controllers for perturbed autonomous wheeled mobile robots <ref type="bibr" target="#b50">[51]</ref>, multimodal biometry <ref type="bibr" target="#b26">[27]</ref>, tuning of PID controllers <ref type="bibr" target="#b82">[83]</ref>, companies failure prediction <ref type="bibr" target="#b63">[64]</ref>, control charts size determination <ref type="bibr" target="#b38">[39]</ref>, spectral estimation of time series <ref type="bibr" target="#b33">[34]</ref>, path planning <ref type="bibr" target="#b71">[72]</ref> and multi-objective optimization <ref type="bibr" target="#b64">[65]</ref>. In order to improve performance and/or overcome certain drawbacks (such as premature and slow convergence to the global minimum), genetic algorithms have been either modified <ref type="bibr" target="#b47">[48,</ref><ref type="bibr" target="#b65">66]</ref> or combined with other approaches, such as evolutionary <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b81">82]</ref>, rough sets <ref type="bibr" target="#b8">[9]</ref> and fuzzy logic <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b31">32]</ref> techniques. More details on GA will be given in Section 4. The interested reader is referred to the nice books in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b52">53]</ref> for an in-depth overview about genetic algorithms, their main features, variants and applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.">Surface reconstruction</head><p>The problem of finding a mathematical description of the 3D shape of a physical surface, usually referred to as surface reconstruction, has been a hot topic of research for the last two decades. Given partial information about an unknown surface U, the goal of surface reconstruction methods is to construct, to the extent possible, a compact representation of a surface model S that approximates U. This problem appears ubiquitously in reverse engineering, a field that aims at transforming real parts into engineering models and concepts for further use in manufacturing and rapid prototyping in the automotive, aerospace, ship building, shoe last, etc. industries. Depending on the available information about the surface (2D sections, clouds of points, grid of curves, interactive surface sketching, etc.), qualitatively different approaches can be formulated in order to tackle this issue (see Section 2 for details).</p><p>In this paper we consider the case of an initial input comprised of a (possibly massive) set of (noisy) 3D data points. In other words, we assume that no additionala prioriinformation about the surface is available and therefore we must rely completely on the sampled set of data points. This has become the most common input in surface reconstruction, because of the wide availability of new affordable optical devices for 3D scanning and measurement. Our aim is to reconstruct the surface from such data points by using a (strictly polynomial) tensor-product B-spline surface (by far the most common parametric surface representation in CAD/CAM-based industries and computer graphics) as fitting surface. In this case, surface reconstruction comprises two main stages: (1) surface parameterization and (2) surface fitting. Both are critical in order to recover surface geometry and topology and to obtain a good fitting to data points. A proper parameterization is essential in order to determine the relationships among neighbor points in the surface parametric domain, and hence surface's topology and boundaries. Furthermore, suitable surface fitting requires a good parameterization of data points. But as soon as the parametric values of data points are considered as variables, surface reconstruction becomes a complicated high-dimensional nonlinear optimization problem. On the other hand, even with a good parameterization, there is no guarantee that the resulting fitting surface will be smooth enough. For instance, improperly chosen knot vectors might lead to a poor matching of data points. As it will be shown later on, our proposed method overcomes these problems at full extent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3.">Overview of the method</head><p>In this paper, we introduce a new method to address the surface reconstruction problem by using a genetic algorithm approach. Our proposal is briefly summarized in Fig. <ref type="figure">1</ref>. A set of 3D data points obtained from a laser scanning process are fitted with an unknown tensor-product B-spline surface of a certain order. In order to do so, two genetic algorithm methods are applied: the first one determines the parametric values of data points; the later computes surface knot vectors. Then, the fitting surface is calculated by LSQ (least-squares) through either SVD (singular value decomposition) or a modification of the LU method (called LU-mod onwards). Reconstructed data points are then compared with the original ones. This pipeline is applied iteratively until a prescribed threshold error for data points is achieved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4.">Main contributions and structure of this paper</head><p>Main contributions of our method are: Generality: Our method is quite general: input data consists exclusively of clouds of 3D points. We do not impose any constraint (such as continuity, differentiability or others) on the original surface data points come from. The method performs well no matter data points come from surfaces given in polynomial, rational, trigonometric, free-form or any other family of functions. In addition, the method can reconstruct surfaces regardless they are open, closed or semi-closed. This is not a trivial question, since we restrict ourselves to strictly polynomial B-spline surfaces, as opposed to other methods which make use of NURBS surfaces, which are very well suited to represent quadrics and closed surfaces. Our method can Fig. <ref type="figure">1</ref>. Workflow of the proposed method. also deal with surfaces exhibiting singularities (see Examples 2, 3, 4 and 6 below) or concavities (see <ref type="bibr">Examples 2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr">5 and 6)</ref>. Furthermore, as shown in Example 5, surfaces must not necessarily be of genus zero as it happens in many surface reconstruction methods. These are outstanding result since (as it will shown in Section 6.3) all previous methods fail to reconstruct surfaces in Examples 2-6 as meshless analytical surfaces. Global method: Most of surface reconstruction approaches require the combination of several methods or techniques in order to fully determine suitable values for all variables of the problem. Even worse, they fail to fully accomplish all steps of the reconstructon process. For instance, surface parameterization is not computed, but assumed (see Section 6.3 for details). Previous methods rely on the projection of data points onto a base flat surface (usually a plane) and usually skip the determination of knot vectors, which are also assumed. All these assumptions prevent those methods from effectively reconstructing non-trivial shapes. As opposed, our method is global and self-contained in the sense that it returns all data necessary to recover the surface without the addition of extra methods or further any pre-/post-processing. Good performance: To test our method, we considered several point clouds from known surfaces of different types including open, closed and semi-closed surfaces with singular points, nonzero genus and complicated shapes. Notably, our method has been able to replicate the original surfaces (written in terms of strictly polynomial B-spline surfaces) in all cases. This is a remarkable result, as polynomial B-spline basis functions lack the flexibility inherent to rational basis functions such as NURBS. This good performance does not come at the cost of expensive computation times. Back to front, our results show that our CPU times are much better than those of previous approaches (see <ref type="bibr">Section 6.4</ref> for details). Accuracy: In the reported examples, mean error of data points is about 10 À4 for the worst cases, but generally as good as 10 À6 -10 À15 . In other words, this method outperforms previous methods by orders of magnitude in terms of numerical accuracy of data points. Remarkably, these excellent results are obtained for examples that are qualitatively much more complicated than those usually reported in the literature. Robustness against noise and GA parameters: Since the method is based on approximating the data points rather than interpolating them, it is robust against noise in data points. To test this issue, we introduced small random perturbations on some samples extracted from data points. As expected, global results were very similar, meaning that the method is not globally affected by noisy data points provided that noise intensity is kept below a certain threshold. Also, our results show that the method is robust against variations of GA parameters such as crossover and mutation probability values within a prescribed range (see Section 6.5 for details).</p><p>The structure of this paper is as follows: firstly, previous literature regarding relevant surface reconstruction methods is reported in Section 2. Then, some basic concepts about B-spline surfaces and genetic algorithms are given in Sections 3 and 4, respectively. The core of the paper is in Section 5: it begins with a detailed explanation about the fitting surface problem. Then, main steps of our approach along with the numerical procedures used in the process are discussed in detail. Section 6 reports our experimental results. Some implementation issues, a detailed comparison with previous approaches and a careful analysis about the computation times and the influence of GA parameters on the method are also given in this section. The paper closes with the main conclusions and our future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Previous work</head><p>Surface reconstruction has received a lot of attention from the scientific community during the last 20 years, with several papers reporting outstanding applications in approximation theory <ref type="bibr" target="#b9">[10]</ref>, numerical analysis <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b58">59]</ref>, geometric modeling <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b75">76]</ref>, computer-aided geometric design (CAGD) <ref type="bibr" target="#b56">[57]</ref>, Computer-aided manufacturing (CAM) <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b59">60]</ref>, data visualization <ref type="bibr" target="#b60">[61]</ref>, cultural heritage preservation <ref type="bibr" target="#b45">[46]</ref>, virtual reality <ref type="bibr" target="#b44">[45]</ref> and many others.</p><p>Depending on the initial input available, surface reconstruction methods can be roughly classified into three groups. The first group addresses the problem by obtaining a surface model exclusively from a set of given cross-sections <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b51">52,</ref><ref type="bibr" target="#b53">54]</ref>. This is a classical problem in medical science, biomedical engineering and CAD/CAM in which a volumetric object (such as a body inner organ, for instance) is typically defined by a sequence of 2D cross-sections or thin layers (acquired from computer tomography, magnetic resonance imaging, ultrasound imaging, etc.). The second group makes use of iso-parametric curves on the surface <ref type="bibr" target="#b21">[22]</ref> and even mixed information, such as scattered points and contours <ref type="bibr" target="#b49">[50,</ref><ref type="bibr" target="#b69">70]</ref> or isoparametric curves and data points <ref type="bibr" target="#b35">[36,</ref><ref type="bibr" target="#b36">37]</ref>.</p><p>In most cases, however, available information about the surface is typically a dense set of (either organized or scattered) 3D data points, leading to the third group of surface reconstruction methods. Such points are usually obtained by using scanner devices, the most common data point acquisition technique in reverse engineering applications (see, e.g., <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b46">47,</ref><ref type="bibr" target="#b48">49,</ref><ref type="bibr" target="#b70">71]</ref>). This is the case we focus on in this paper. In particular, our problem can be stated as follows: given a set of sample points Q assumed to lie on an unknown surface U, construct, to the extent possible, a B-spline representation of a surface model S that approximates U.</p><p>Depending on the nature of data points, two different approaches are employed: interpolation and approximation. In interpolation, the parametric surfaces are constrained to pass through all the given set of data points. This approach is generally suitable when the shape of data points describing the physical object is sufficiently smooth and accurate. In contrast, approximating surfaces should pass near (but not necessarily through) the given data points. Approximation techniques are specially recommended when data are not exact, but subjected to measurement errors. Another important reason to choose approximation could be the great computational effort required to obtain surfaces by interpolating an infinite number of data, such as curve forms. An example is given in surface skinning problems, where we look for a smooth surface passing through a set of cross-sectional curves. In <ref type="bibr" target="#b57">[58]</ref> it has been mentioned that, using the NURBS representation, interpolation of only a few cross-sections of various types may require as high a number as hundreds of thousands of surface control points. Furthermore, because industrial parts can easily contain hundreds of surfaces, interpolation of these parts becomes unrealizable in practice. Finally, in many applications, data consist of a very large number of measurements, causing the number of basis functions to be very large as well. In addition, new measurement points may change the structure of the solution.</p><p>The obvious solution to these problems is to consider an approximation scheme that allows us significant saving of time and memory. This is also the approach taken in this paper. This problem has been analyzed from several points of view, such as parametric methods <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b70">71]</ref> or implicit surfaces <ref type="bibr" target="#b46">[47,</ref><ref type="bibr" target="#b61">62]</ref>. The interested reader is referred to <ref type="bibr" target="#b75">[76]</ref> for a comprehensive introduction to the field and many interesting references. See also <ref type="bibr" target="#b79">[80]</ref>.</p><p>Some papers have shown that the application of artificial intelligence techniques can achieve remarkable results regarding this problem <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b40">41,</ref><ref type="bibr" target="#b42">43,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b36">37,</ref><ref type="bibr" target="#b72">73]</ref>. Most of these methods rely on some kind of neural networks, either standard neural networks <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b73">74]</ref>, Kohonen's SOM (self-organizing maps) nets <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b42">43]</ref>, or the Bernstein basis function (BBF) network <ref type="bibr" target="#b40">[41]</ref>. In some cases, the network is used exclusively to order the data and create a grid of control vertices with quadrilateral topology <ref type="bibr" target="#b27">[28]</ref>. After this pre-processing step, any other classical surface reconstruction method operating on organized points is subsequently applied. A work using a combination of neural networks and partial differential equation (PDE) techniques for the parameterization and reconstruction of surfaces from 3D scattered points can be found in <ref type="bibr" target="#b2">[3]</ref>. Other sophisticated techniques include functional networks <ref type="bibr" target="#b36">[37]</ref>, a generalization of neural networks based on functional equations <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>. Finally, other techniques use evolutionary computation principles to solve the problem, such as genetic algorithms <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b41">42]</ref>, particle swarm optimization <ref type="bibr" target="#b16">[17]</ref>, artificial inmune systems <ref type="bibr" target="#b72">[73,</ref><ref type="bibr" target="#b74">75]</ref>, simulated evolution <ref type="bibr" target="#b66">[67,</ref><ref type="bibr" target="#b77">78]</ref> or dominant point solution <ref type="bibr" target="#b54">[55]</ref>. However, these works restrict to the case of curves and little attention has been placed upon the case of surfaces.</p><p>Reconstruction of free-form objects consists typically of two main stages: (1) surface parameterization and (2) surface fitting. Two basic approaches have been considered to solve these stages <ref type="bibr" target="#b75">[76,</ref><ref type="bibr" target="#b79">80]</ref>: the first one uses an iterative process in which the region is approximated by an initial surface which is then smoothed iteratively <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b48">49]</ref>. The initial surface, usually called base surface, is chosen so that it reflects the distribution of points in the 3D space. Potential base surfaces are planes, cylinders or Coons patches. Sample points are projected onto this base surface in order to extract boundary features as well as a coarse 2D parameterization of the surface. These approaches fail in case data points cannot be projected in an unambiguous way. An alternative is to consider a 3D triangulation and then derive a topologically equivalent 2D triangulation <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b12">13]</ref>. These methods are, however, slow and computational expensive for large numbers of data points and find difficulties when the point cloud contains concavities or holes. The second approach uses a variational scheme that seeks to minimize a hybrid functional accounting simultaneously for good approximation and smoothness <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b22">23]</ref>. They tend to fail in case of uneven distributions of points over the region of interest, and present the problem that additional coefficients (such as the smoothness weighted factor) must be determined. Another problem is the correct determination of the length of knot vectors, as it affects the surface quality and the computational efficiency of the process. In general, a trade-off must be achieved between increasing the number of knots to increase the degrees of freedom and to reduce such a number in order to alleviate the computation time. All these methods also tend to fail for surfaces of non-zero genus. Our proposed method overcomes such limitations, as we will show later on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Basic definitions and notation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">B-spline surfaces</head><p>Let M ¼ fl 0 ; l 1 ; l 2 ; . . . ; l MÀ1 ; l M g be a nondecreasing sequence of real numbers called knots. M is called the knot vector.</p><p>The ith B-spline basis function N i,k (u) of order k (or equivalently, degree k À 1) is defined by the recurrence relations</p><formula xml:id="formula_0">N i;1 ðuÞ ¼ 1 if l i 6 u &lt; l iþ1 ; 0 otherwise &amp;<label>ð1Þ</label></formula><p>with i = 0,. . ., M À 1 and</p><formula xml:id="formula_1">N i;k ðuÞ ¼ u À l i l iþkÀ1 À l i N i;kÀ1 ðuÞ þ l iþk À u l iþk À l iþ1 N iþ1;kÀ1 ðuÞ ð<label>2Þ</label></formula><p>for k &gt; 1. Note that ith B-spline basis function of order 1, N i,1 (u), is a piecewise constant function with value 1 on the interval [l i , l i+1 ), called the support of N i,1 (u), and zero elsewhere. This support can be either an interval or reduce to a point, as knots l i and l i+1 must not necessarily be different. If necessary, the convention 0 0 ¼ 0 in Eq. ( <ref type="formula" target="#formula_1">2</ref>) is applied. Any basis function of order k &gt; 1, N i,k (u), is a linear combination of two consecutive functions of order k À 1, where the coefficients are linear polinomials in u, such that its order (and hence its degree) increases by 1. Simultaneously, its support is the union of the (partially overlapping) supports of the former basis functions of order k À 1 and, consequently, it usually enlarges.</p><p>The number of times a knot appears in the knot vector is called the multiplicity of the knot and has an important effect on the shape and properties of the associated basis functions. Basically, knot vectors can be classified into two groups. The first one is the uniform knot vector: each knot appears only once and the distance between consecutive knots is always the same. As a consequence, each basis function N i,k (u) is plotted similarly to the previous one, N iÀ1,k (u), but shifted to the right according to such a distance. A qualitatively different behavior is obtained when any of the knots appears more than once or knots are not equally spaced (such cases are usually referred to as non-uniform knot vector). The most common case of non-uniform knot vectors consists of repeating the end knots as many times as the order while interior knots appear only once (such a knot vector is called non-periodic knot vector).</p><p>With the same notation, given a set of three-dimensional points (called control points as they roughly determine the shape of the surface) {P ij } i = 0, . . ., m; j = 0, . . ., n (note that in this paper vectors are denoted in bold) in a bidirectional net and two knot vectors M ¼ fl 0 ; l 1 ; . . . ; l MÀ1 ; l M g and N ¼ fm 0 ; m 1 ; . . . ; m NÀ1 ; m N g, a B-spline surface S(u, v) of order (k, l) is a parametric surface given by:</p><formula xml:id="formula_2">Sðu; vÞ ¼ X m i¼0 X n j¼0 P i;j N i;k ðuÞN j;l ðvÞ;<label>ð3Þ</label></formula><p>where the {N i,k (u)} i = 0, . . ., m and {N j,l (v)} j = 0, . . ., n are the B-spline basis functions of order k and l, respectively, defined following Eqs. ( <ref type="formula" target="#formula_0">1</ref>) and ( <ref type="formula" target="#formula_1">2</ref>). Without loss of generality parameters u, v can be assumed to take values on the interval [0, 1] <ref type="bibr" target="#b56">[57]</ref>. For a proper definition of a B-spline surface in Eq. ( <ref type="formula" target="#formula_2">3</ref>), the following relationships must hold (see <ref type="bibr" target="#b56">[57]</ref> for further explanation):</p><formula xml:id="formula_3">M = m + k, N = n + l.</formula><p>In general, a B-spline surface does not interpolate any of its control points; interpolation only occurs for non-periodic knot vectors (in that case, the B-spline surface does interpolate the corner control points). Since they are the most common in computer graphics and industrial domains, in this work we will restrict ourselves to non-periodic knot vectors. Note however that our method does not preclude any other kind of knot vectors to be used at all.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Some vector definitions</head><p>The vectorization of a matrix C, denoted by vec(C), is a linear transformation which converts the matrix into a column vector by stacking its columns on top of one another. For instance, for:</p><formula xml:id="formula_4">C ¼ c 1;1 Á Á Á c 1;n c 2;1 Á Á Á c 2;n . . . . . . . . . c m;1 Á Á Á c m;n 0 B B B B @ 1 C C C C A ; vecðCÞ ¼ ðc 1;1 ; . . . ; c m;1 ; . . . ; c 1;n ; . . . ; c m;n Þ T :</formula><p>Given two vectors X = (x 1 , x 2 , . . ., x m ) and Y = (y 1 , y 2 , . . ., y n ) of lengths m and n, respectively, its outer product, denoted by X Y, is a matrix of size m Â n given by:</p><formula xml:id="formula_5">X Y ¼ x 1 y 1 x 1 y 2 Á Á Á x 1 y n x 2 y 1 x 2 y 2 Á Á Á x 2 y n . . . . . . . . . . . . x m y 1 x m y 2 Á Á Á x m y n 0 B B B B @ 1 C C C C A :</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Genetic algorithms</head><p>Genetic algorithms (GA) are search procedures based on principles of evolution and natural selection. They can be used in optimization problems where the search of optimal solutions is carried out in a space of solutions coded as finite-length strings called chromosomes. To do so, GA handle populations consisting of sets of potential solutions, i.e. the algorithm maintains a population of p individuals Pop(g) = {x 1 (g), . . ., x p (g)} for each iteration g (also called generation), where each individual represents a potential solution of the problem. Normally the initial population is randomly selected, but some knowledge about the specific problem can be used to include in the initial population special potential solutions in order to improve the convergence speed. The size of this initial population is one of the most important aspects to be considered and may be critical in many applications. If the size is too small, the algorithm may converge too quickly, and if it is too large the algorithm may waste computational resources. The population size is usually chosen to be constant although GA with varying population size are also possible. A study about the optimal population size can be found in <ref type="bibr" target="#b18">[19]</ref>. Each individual in the population, i.e. each potential solution, must be represented using a genetic representation. Commonly, a binary representation is used, however other approaches are possible. Each one of the potential solutions must be evaluated by means of a fitness function; the result of this evaluation is a measure of individual adaptation.</p><p>The algorithm is an iterative process in which new populations are obtained using a selection process (reproduction) based on individual adaptation and some ''genetic" operators (crossover and mutation). The individuals with the best adaptation measure have more chance of reproducing and generating new individuals by crossing and muting. The reproduction operator can be implemented in several ways, such as tournament, roulette wheel, rank-based, hall of fame and others (see <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b52">53]</ref>). The selection process is repeated d times and the selected individuals form a tentative new population for further genetic operator actions.</p><p>After reproduction some of the members of the new tentative population undergo transformations. A crossover operator creates two new individuals (offsprings) by combining parts from two randomly selected individuals of the population. In GA the crossover operator is randomly applied with a specific probability, p c . A good GA performance requires the choice of a high crossover probability. Mutation is a unitary transformation which creates, with certain probability, p m , a new individual by a small change in a single individual. In this case, a good algorithm performance requires the choice of a low mutation probability (inversely proportional to the population size). The mutation operator guarantees that all the search space has a nonzero probability of being explored. Using these genetic operators, the general structure of the algorithm is described in Table <ref type="table" target="#tab_0">1</ref>.</p><p>This procedure is repeated several times (thus yielding successive generations) until a termination condition has been reached. Common terminating criteria are that a solution is found that satisfies a lower threshold value, or that a fixed number of generations has been reached, or that successive iterations no longer produce better results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Our proposal</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Surface fitting problem</head><p>Let us suppose that we are provided with a set of three-dimensional data points arranged in a matrix as: Q = {Q r, s = (x r, s , y r, s ,z r, s )} r=0,. . .,R; s=0,. . .,S . We want now to fit such points with a B-spline surface S(u, v) of order (k, l) defined as above (with M &lt; R, N &lt; S) such that:</p><formula xml:id="formula_6">Q r;s ¼ X m i¼0 X n j¼0 P i;j N i;k ðu r ÞN j;l ðv s Þ 8r ¼ 0; . . . ; R; s ¼ 0; . . . ; S:<label>ð4Þ</label></formula><p>To do so, we must first make an association (parameterization) of parametric values (u r , v s ) to each of our data points Q r, s .</p><p>Given this association, surface fitting can be formulated from ( <ref type="formula" target="#formula_2">3</ref>) and (4) as finding the surface which minimizes the following least-squares expression:</p><formula xml:id="formula_7">E lsq ¼ X R r¼0 X S s¼0 Q r;s À Sðu r ; v s Þ À Á 2 ¼ X R r¼0 X S s¼0 Q r;s À X m i¼0 X n j¼0 P i;j N i;k ðu r ÞN j;l ðv s Þ ! 2 :<label>ð5Þ</label></formula><p>The case of unorganized points can be handled in a quite similar way by replacing matrix Q by a vector. In other words, data points are now arranged along a vector {Q t = (x t , y t , z t )} t=0,. . .,T , where T is the number of data points. In this case, we must associate suitable parametric values (u t , v t ) to each of our data points Q t so the surface fitting problem is expressed as:</p><formula xml:id="formula_8">E lsq ¼ X T t¼0 ðQ t À Sðu t ; v t ÞÞ 2 ¼ X T t¼0 Q t À X m i¼0 X n j¼0 P t N i;k ðu t ÞN j;l ðv t Þ ! 2 :<label>ð6Þ</label></formula><p>As a result, an over-constrained system of linear equations can be generated from either <ref type="bibr" target="#b4">(5)</ref> or <ref type="bibr" target="#b5">(6)</ref> where control points P i,j or P t are the unknowns, respectively. Therefore, a least-squares solution can be performed in order to compute such control points. The problem is that in real applications, we are not given any parameterization of data points. In fact, even the number of control points and the number of knots are also unknown. Because the B-spline basis functions are nonlinear functions, the problem requires to solve a nonlinear optimization process, with a high number of unknowns for large sets of data points, a case that happens very often in practice. As a conclusion, obtaining a feasible solution of the B-spline surface fitting problem requires to perform next steps:</p><p>(1) Firstly, a careful choice of suitable parameters is needed in order to construct the B-spline basis functions in Eq. <ref type="bibr" target="#b2">(3)</ref>.</p><p>Such parameters include the order of B-spline basis functions and the number of control points and knots. In practical applications these parameters are usually chosen by end-users and so are in our method. (2) Secondly, a proper parameterization of data points must be achieved.</p><p>(3) We should then obtain surface knot vectors. (4) Next, coefficients of the least-squares problem are to be determined.</p><p>(5) Lastly, reconstructed data points are generated and compared with the original ones. Previous steps are repeated if error is larger than a prescribed threshold.</p><p>All these sub-problems are solved in next section by applying a genetic algorithm approach in order to determine all relevant parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">The proposed method</head><p>The proposed method has been briefly sketched in Section 1.3. In this section, we describe all steps in detail. The initial input of our problem is given by: The collection of 3D data points, Q;</p><p>The order of the B-spline surface (k, l); The number of control points, (m, n), and Possibly, a threshold tolerance error, .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1.">Step 1: Data points parameterization</head><p>First step consists of obtaining an adequate parameterization of data points. We perform this task by using a genetic algorithm. In order to do so, some aspects must be previously considered. First of all, a typical GA requires two elements to be defined prior to its use: (1) a genetic representation of each potential solution of the problem and (2) a measure of the quality of the solution (the fitness function). Since in this step we are interested in the assignment process of parameter values to data points, we propose the use of a real-coded genetic algorithm in which the genetic representation (chromosome) of an individual will be a real r-dimensional vector, where each coordinate represents the parameter value assigned to a data point. Although we have (R + 1) Â (S + 1) data points, the tensor-product structure of B-spline surfaces implies that we only need two vectors of length (R + 1) and (S + 1), respectively to store the parametric values in u and v along the interval [0, 1].</p><p>As initial population we consider a randomly generated set of parameter vectors. To widen the search area of the algorithm it is desirable that the population size be large; however the computation time increases as this parameter rises, so a trade-off between both considerations is actually required. In addition, some standard parameterizations can be included in order to speed up the convergence of the process <ref type="bibr" target="#b56">[57]</ref>, such as the chord length method:</p><formula xml:id="formula_9">a 0 ¼ 0; a W ¼ 1; a n ¼ a nÀ1 þ jQ n À Q nÀ1 j P W l¼1 jQ l À Q lÀ1 j</formula><p>or the centripetal method:</p><formula xml:id="formula_10">a 0 ¼ 0; a W ¼ 1; a n ¼ a nÀ1 þ ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi jQ n À Q nÀ1 j p P W l¼1 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi jQ l À Q lÀ1 j p for n = 1,. . ., W À 1, where a = u (resp. v) and W = R (resp. S).</formula><p>Regarding the fitness function to measure the quality of our assignment, it is the error function of the fitting process, i.e.</p><p>Eq. ( <ref type="formula" target="#formula_7">5</ref>) or <ref type="bibr" target="#b5">(6)</ref>. Note that they require to specify an initial knot vector for each u and v. Initially, they are chosen randomly and then optimized in the second step of our process. The algorithm then uses three genetic operators to obtain new populations of individuals: selection, crossover and mutation. In our case, the selection operator is implemented as the classical biased roulette wheel with slots weighted in proportion to individual fitness values. For crossover we use a one-point operator that randomly selects a crossover point within an individual, then swaps the two parent chromosomes to the right from this point and eventually sorts the obtained vectors to produce two new offsprings. This process is illustrated in Table <ref type="table" target="#tab_1">2</ref>. Finally, as a mutation method we propose to select the position u with worst fit error in the parameter vector of the solution and change the value of the selected parameter by the arithmetic mean of the previous and next parameters in the vector, that is, a u ¼ a uÀ1 þa uþ1 2 . Note that a uÀ1 &lt; a u &lt; a u+1 , hence no sorting method is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2.">Step 2: Knot vectors computation</head><p>In second step of our method we compute the knot vectors by using another genetic algorithm. In this case, individuals are encoded as two real vectors of lengths M + 1 and N + 1 valued onto the interval [0, 1], initialized with random values. In this paper we consider nonperiodic knot vectors exclusively, so we have respectively, k and l end knots fixed as 0s and 1s and only m À k + 1 and n À l + 1 knots to be calculated. This initial population is enriched with the knot vectors calculated by the averaging method:</p><formula xml:id="formula_11">b 0 ¼ Á Á Á ¼ b fÀ1 ¼ 0; b HÀðfÀ1Þ ¼ Á Á Á ¼ b H ¼ 1 b jþfÀ1 ¼ 1 f À 1 X jþfÀ2 h¼j b h ðj ¼ 1; . . . ; H À f þ 1Þ;</formula><p>where b = l (resp. m), f = k (resp. l) and H = M (resp. N). Both the fitness function and the genetic operators are similar to those in previous step. Genetic algorithms in steps 1 and 2 of our method also share some parameter values: probability of crossover p c = 0.9 and probability of mutation p m = 0.2, while population size changes from example to example, ranging from p = 50 to p = 500. In our experiments, the order of the fitting surface is chosen based on the visual complexity of data points; simple problems are assigned values between 3 and 8, and this value is increased for intricate shapes. However, Bsplines are piecewise polynomial functions, so this choice is not critical at all. Finally, our termination criterion is that of not improving the solution after 10 consecutive generations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3.">Step 3: Control points calculation</head><p>Once parametric values of data points and knot vectors are obtained, the method computes the control points of the Bspline surface by using least-squares method. Before explaining the procedure in detail, let us firstly introduce the following notation: NðũÞ ¼ ðN 0;k ðũÞ; N 1;k ðũÞ; . . . ; N m;k ðũÞÞ; NðṽÞ ¼ ðN 0;l ðṽÞ; N 1;l ðṽÞ; . . . ; N n;l ðṽÞÞ;</p><formula xml:id="formula_12">N i;k ¼ ðN i;k ðu 0 Þ; N i;k ðu 1 Þ; . . . ; N i;k ðu R ÞÞ; N j;l ¼ ðN j;l ðv 0 Þ; N j;l ðv 1 Þ; . . . ; N j;l ðv S ÞÞ; Q ¼ Q 0;0 Q 0;1 Á Á Á Q 0;S Q 1;0 Q 1;1 Á Á Á Q 1;S . . . . . . . . . . . . Q R;0 Q R;1 Á Á Á Q R;S 0 B B B B B @ 1 C C C C C A ; P ¼ P 0;0 P 0;1 Á Á Á P 0;n P 1;0 P 1;1 Á Á Á P 1;n . . . . . . . . . . . . P m;0 P m;1 Á Á Á P m;n 0 B B B B @ 1 C C C C A :</formula><p>Expression (4) can now be rewritten as:</p><formula xml:id="formula_13">Q r;s ¼ Nðu r Þ Á P Á N T ðv s Þ 8r ¼ 0; . . . ; R; s ¼ 0; . . . ; S;<label>ð7Þ</label></formula><p>where (Á) T means the transpose of the matrix. Extending Eq. ( <ref type="formula" target="#formula_13">7</ref>) to all indices (r, s) and applying the vectorization operator to matrices Q and P leads to the general expression: where each element N i,k N(v s ) of the expanded matrix in the right-hand side of Eq. ( <ref type="formula" target="#formula_14">8</ref>) (denoted as M henceforth) has size (R + 1) Â (n + 1). Note that vec(Q) is a column vector of length (R + 1) Â (S + 1) while vec(P) is a column vector of length (m + 1) Â (n + 1) so system (8) is overdetermined. Pre-multiplication of both sides by M T yields:</p><formula xml:id="formula_14">vecðQ Þ ¼ N 0;k Nðv 0 Þ N 1;k Nðv 0 Þ ÁÁÁ N m;k Nðv 0 Þ N 0;k Nðv 1 Þ N 1;k Nðv 1 Þ ÁÁÁ N m;k Nðv 1 Þ . . . . . . . . . . . . N 0;k Nðv S Þ N 1;k Nðv S Þ ÁÁÁ N m;k Nðv S Þ 0 B B B B @ 1 C C C C A Á vecðPÞ;<label>ð8Þ</label></formula><formula xml:id="formula_15">M T Á vecðQ Þ ¼ M T Á M Á vecðPÞ:<label>ð9Þ</label></formula><p>By this way, the problem becomes a classical linear least-squares minimization. Computation of coefficients P i,j will give the best fit in the discrete least-squares sense to the data points, thus actually reconstructing the fitting B-spline surface. To solve Eq. ( <ref type="formula" target="#formula_15">9</ref>) a modification of two standard numerical routines for the least squares problem have been used in this paper: the LU decomposition method and a non-iterative least squares fitting method accomplished by the singular value decomposition (SVD) method <ref type="bibr" target="#b62">[63]</ref>. Method LU, primarily chosen because of its theoretical simplicity, can be computed by several algorithms (Doolittle, Crout, etc.) at a cost of O(2p 3 /3) excluding pivoting. We also used the SVD method, mostly because of its robustness and because it provides the best numerical answer in the sense of least-squares for those cases in which the exact solution is not possible <ref type="bibr" target="#b62">[63]</ref>. To this aim, matrix M in Eq. ( <ref type="formula" target="#formula_14">8</ref>) is decomposed as the matrix product M = U Á U Á V T where U is a column-orthogonal matrix, U is a diagonal matrix with positive or zero elements / k called the singular values and V is a square orthogonal matrix. Similar decomposition can be performed on M T Á M in case Eq. ( <ref type="formula" target="#formula_15">9</ref>) is alternatively used. Furthermore, since M T Á M is square, its inverse can readily be obtained as:</p><formula xml:id="formula_16">V Á diag 1 / k h i Á U T .</formula><p>SVD can be computed by a two-step procedure with a computational cost of O (p Á q 2 ) for a problem of size p Â q. In general, SVD performs well and yields very accurate results, although special care is needed in case of very small (or even zero) singular values <ref type="bibr" target="#b62">[63]</ref>. Because of this reason, in this paper we applied optimized Matlab routines (mostly based on LAPACK numerical procedures) that handle this issue automatically (see Section 6.2 for details).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4.">Step 4: Data points reconstruction</head><p>In this step we collect all output of previous steps in order to perform surface reconstruction. Reconstructed data points, denoted as b Q r;s (organized points) or b Q t (scattered points), are then compared to original data points according to some error measure, such as the point-wise Euclidean distance, the mean squared error or the root mean squared error. In this paper we consider the maximum error value and the mean error value (ME), given by:</p><formula xml:id="formula_17">ME ¼ P R r¼0 P S s¼0 jQ r;s À b Q r;s j ðRþ1ÞðSþ1Þ ðorganized pointsÞ; P T t¼0 jQ t À b Q t j T ðscattered pointsÞ: 8 &gt; &lt; &gt; :</formula><p>Steps 1-4 can be iteratively applied until the computed error does not longer improve. In this paper, the workflow shown in Fig. <ref type="figure">1</ref> is repeated until that the difference between the mean error of two consecutive iterations becomes smaller than a given tolerance threshold value g.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Experimental results</head><p>In this section we report our experimental results. Some implementation issues are also briefly outlined. Finally, a comparison with some previous approaches and the issues of computation times and choice of GA parameters are discussed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Illustrative examples</head><p>We have tested our algorithm on several examples from different families of functions. In this paper we present six of them: a genuine free-form B-spline surface and five surfaces defined parametrically. Examples have been primarily chosen to reflect the diversity of situations our algorithm can be applied to, and hence they provide a potential benchmark for future experiments. Our catalogue includes open (Example 1), semi-closed (Examples 2 and 3) and closed surfaces (Examples 4-6). To the aim of checking the performance of our proposal, examples also contain pretty challenging features, such as intricate shapes (Examples 1, 2, 5 and 6), singularities (Examples 2, 3, 4 and 6), concavities (Examples 1, 2, 3, 5 and 6) and non-zero genus (Example 5). In all cases, we were able to yield a B-spline surface with extremely small fitting errors, showing the robustness, flexibility and excellent performance of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1.">Example 1: A B-spline surface</head><p>As first example we consider a set of 14,400 data points from a (5, 4)-order B-spline surface with 8 Â 6 control points. Data points have been fitted to a B-spline surface with orders varying from 3 to 9 for both u and v and with a number of control points ranging from 5 to 20 in both directions. Fig. <ref type="figure">2</ref> shows the fitting B-spline surface of order <ref type="bibr" target="#b5">(6,</ref><ref type="bibr" target="#b5">6)</ref>  In general, we could reconstruct the original surface very well although, depending on our choice of surface parameters (order and number of control points), fitting errors vary from 10 À4 to 10 À6 . For instance, for a (3, 3)-order B-spline surface with 8 Â 8 control points, mean errors were 9.7 Â 10 À4 , 4.2 Â 10 À4 and 2.6 Â 10 À4 for x, y and z, respectively. For the genetic algorithms of our method we used several initial population sizes ranging from 50 to 500 individuals, but reported errors were quite similar in all cases.</p><p>We also tested the robustness of our approach against noise, by perturbing some sampled data points by a real uniform random variable of mean 0 and variance 0.05 Â d, where d is a parameter accounting for surface size. Our trials showed that the method is robust against low-intensity noise, since our results are not quantitatively different than those obtained in absence of noise. We applied such perturbations to all other examples and obtained very similar results in all cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2.">Example 2: Shell surface</head><p>Next example is a parametric surface known as shell and given by:</p><formula xml:id="formula_18">x ¼ 1 5 1 À v 2p À Á cosð2vÞ½1 þ cosðuÞ þ 1 10 cosð2vÞ; y ¼ 1 5 1 À v 2p À Á sinð2vÞ½1 þ cosðuÞ þ 1 10 sinð2vÞ; u; v 2 ½0; 2p; z ¼ v 2p þ 1 5 1 À v 2p À Á sinðuÞ: 8 &gt; &lt; &gt; :</formula><p>We applied our method on a given set of 7500 data points with a B-spline surface of order varying from 3 to 9. In our trials, error improved as the order increased up to 7, with no further improvement for larger values. Genetic algorithms in steps 1 and 2 of our approach have been applied on a population of 100 individuals. Fig. <ref type="figure">3</ref> shows the fitting surface obtained by our method for a (7, 7)-order B-spline surface with a net of 20 Â 20 control points. Mean errors in this example for data points coordinates are 8.84 Â 10 À7 , 7.34 Â 10 À7 and 1.47 Â 10 À9 , respectively. Although this surface does neither exhibit self-intersections nor holes, it still has a complicated, twisted and concave, shape. Furthermore, it exhibits a singularity at the end point and it is a closed surface in one parametric direction while it is open in the other one, so knots determination is not trivial. In fact, we remark that current surface reconstruction methods usually fail to reconstruct it accurately through polynomial B-spline surfaces. Since our method is iterative, it might be helpful to display the evolution of the reconstructed surface from generation to generation. This is done in Fig. <ref type="figure">4</ref> for the shell surface. To keep the paper at reasonable length, only three generations are shown: g = 3 (left), g = 7 (middle) and g = 11 (right). For each, two different views -high-angle view (top) and cenital view (bottom) -are used for better visualization. This figure illustrates the convergence process from the initial surface to an extremely accurate fitting surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3.">Example 3: Horn surface</head><p>In this example we consider a parametric surface called horn described mathematically by:</p><p>x ¼ ½2 þ u cosðvÞ sinð2puÞ; y ¼ ½2 þ u cosðvÞ cosð2puÞ þ 2u; 0 6 u 6 1; 0 6 v 6 p;</p><p>z ¼ u sinðvÞ: Similarly to previous example, this surface is closed in one parametric direction and open in the other one, and also has a singularity point. Given a set of 6000 data points, the best fitting surface we got (depicted in Fig. <ref type="figure">5</ref>) is a (4, 4)-order B-spline surface with 12 Â 12 control points and a population of 100 individuals. Mean error for data points coordinates are respectively, 3.24 Â 10 À6 , 3.04 Â 10 À6 and 7.84 Â 10 À7 , while maximum errors in data points are 1.78 Â 10 À5 , 2.16 Â 10 À5 and 9.63 Â 10 À6 . Results do not improve significantly when increasing the order and/or the number of control points from those in Fig. <ref type="figure">5</ref>. Good errors we obtained reflect the ability of our method to reconstruct complicated surfaces through a strictly polynomial low-order B-spline surface with a limited amount of control points. To our knowledge, no previous method has achieved this goal, as they usually rely on NURBS surfaces which are very well suited to fitting quadrics and closed surfaces, whilst in this work we fit shapes by using polynomial surfaces exclusively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.4.">Example 4: Teardrop surface</head><p>This surface, called teardrop because of its droplet shape, is an example of a closed surface with a singular point. It is expressed parametrically by:</p><p>x ¼ 1 2 ½1 À cosðuÞ sinðuÞ cosðvÞ; y ¼ 1 2 ½1 À cosðuÞ sinðuÞ sinðvÞ; 0 6 u 6 p; 0 6 v 6 2p;</p><formula xml:id="formula_19">z ¼ cosðuÞ: 8 &gt; &lt; &gt; :</formula><p>For a set of 6000 data points, the best fitting surface in this case (shown in Fig. <ref type="figure">6</ref>) is a (3, 3)-order B-spline surface with 16 Â 16 control points for a population of 200 individuals, with mean errors 1.23 Â 10 À7 , 1.21 Â 10 À7 and 3.77 Â 10 À8 for x, y and z, respectively. Once again, this surface has been quite challenging since only polynomial basis functions are allowed in our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.5.">Example 5: Pisot triaxial surface</head><p>In this example, we consider a complicated non-zero genus surface known as Pisot triaxial, given in parametric form by:</p><formula xml:id="formula_20">x ¼ A cosðB þ uÞð2 þ cosðvÞÞ; y ¼ C cosðD À uÞð2 þ E cosðF þ vÞÞ; 0 6 u; v 6 2p; z ¼ E cosðF þ uÞð2 þ G cosðH À vÞÞ; 8 &gt; &lt; &gt; :</formula><p>In this paper the following parameter values are used: A = 0.655866, B = 1.03002, C = 0.754878, D = 1.40772, E = 0.868837, F = 2.43773, G = 0.495098 and H = 0.377696. We applied our method to a set of 10,500 data points from this surface and obtained extremely accurate results. Best fitting surface for this example was a (20, 20)-order B-spline surface (displayed in Fig. <ref type="figure">7</ref>) with a net of 20 Â 20 control points. Our trials show that decreasing B-spline order or number of control points yields worse (although still very accurate) fitting errors. In surface of Fig. <ref type="figure">7</ref>, mean errors for the data points coordinates are 2.90 Â 10 À15 , 3.92 Â 10 À15 and 4.85 Â 10 À15 , respectively. This example shows that the method performs extremely well even for non-zero genus surfaces, which are traditionally troublesome for many surface reconstruction methods.</p><p>6.1.6. Example 6: Cresent surface Last example corresponds to a surface called Cresent defined parametrically by:</p><p>x ¼ ½2 þ sinð2puÞ sinð2pvÞ sinð3pvÞ with 0 6 u, v 6 1. In this case, the best fitting surface (shown in Fig. <ref type="figure">8</ref>) to a set of 14,200 data points is a (8, 8)-order B-spline surface with a net of 30 Â 30 control points. Mean error for data points coordinates is 1.01 Â 10 À10 , 1.07 Â 10 À10 and 5.32 Â 10 À11 , respectively. We remark the excellent results obtained by the method in this example and previous one; to the best of our knowledge, they improve by far those found in the literature on the subject.</p><formula xml:id="formula_21">y ¼ ½2 þ<label>sinð2puÞ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Implementation issues</head><p>All computations in this paper have been performed on a 2.4 GHz. Intel Core 2 Duo processor with 4 GB of RAM. The source code has been implemented by the authors in the native programming language of the popular scientific program Matlab, version 2009a. In our opinion, Matlab is a very suitable tool for this task: it is fast and provides reliable, well-tested routines for efficient matrix manipulations. It also contains a bulk of resources regarding the solving of systems of equations. This feature proved to be very valuable in case of ill-conditioned matrices, i.e., with too large (or even infinite) condition number. This is a situation that can actually happen in practice, for instance, when one or several singular values in SVD decomposition are null or very near to zero. Advisable answer to this problem is to set reciprocals of such singular values to zero. Matlab command svd handles this situation for us. Similarly, when LU decomposition is used instead, Matlab command lu returns a suitable matrix factorization regardless the sparsity of the matrix, although different (mostly LAPACK and UMFPACK) routines are invoked in each case. Also, Matlab provides us with the command mldivide to solve the equation AÁX = B for both squared and non-squared systems (by using Gaussian elimination with partial pivoting and least-squares techniques, respectively). Depending on the general structure of matrix A, this command applies specialized LAPACK and BLAS routines to get the best possible solution to this system. Besides, Matlab provides excellent graphical options and optimized code for input/output interaction and high performance computations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Comparison with other approaches</head><p>As shown earlier, our GA-based surface reconstruction method performs very well for the problems analyzed above and others not included here to keep the paper at reasonable length. Compared with other surface reconstruction approaches found in the literature, our method outperforms them in terms of accuracy and flexibility. To support this claim, a careful comparison with recent alternative surface reconstruction methods that use smooth piecewise surfaces and are based on evolutionary techniques has been carried out. This gives four methods <ref type="bibr" target="#b67">[68,</ref><ref type="bibr" target="#b76">77,</ref><ref type="bibr" target="#b78">79,</ref><ref type="bibr" target="#b80">81]</ref>. Another powerful method for piecewise surface reconstruction but not based on evolutionary techniques has been included to enrich the discussion <ref type="bibr" target="#b2">[3]</ref>. Methods considering polygonal meshes fall out of the scope of this paper and therefore should not be considered for comparison. However, for illustrative purposes we decided to include a recent powerful method for polygonal meshes <ref type="bibr" target="#b17">[18]</ref>.</p><p>Table <ref type="table" target="#tab_4">4</ref> summarizes our main results. Compared methods are arranged in rows and sorted so that methods not based on evolutionary algorithms appear first <ref type="bibr" target="#b2">[3]</ref>; then, evolutionary-based methods for polygonal meshes <ref type="bibr" target="#b17">[18]</ref> and piecewise surfaces <ref type="bibr" target="#b67">[68,</ref><ref type="bibr" target="#b76">77,</ref><ref type="bibr" target="#b80">81,</ref><ref type="bibr" target="#b78">79]</ref> follow; finally, our method is reported. For each method, the following issues are discussed: technique employed in the method, number of data points in examples reported in the corresponding entries, population size (when applicable), output of the method and number of parameters involved, runtime, reported error, behavior of the method with respect to our examples 1-6 and some additional comments.</p><p>First method compared is that by <ref type="bibr">Barhak and Fisher [3]</ref> where two different schemes, SOM (self-organizing map) neural network and PDEs (partial differential equations), are used to cope with the surface parameterization issue, and GDA (gradient descent algorithm) is used to create a 3D base surface that is iteratively modified to get the reconstructed surface. Such a surface is described in terms of cubic polynomial B-splines with errors of about 10 À1 -10 À2 for sets of about 10 4 data points. However, this method requires data points to be projected onto the base surface and therefore, only examples of neither selfintersecting nor high-genus surfaces are properly handled. In particular, the method fails for our examples 2-6 because data points cannot unambiguously projected.</p><p>In next method <ref type="bibr" target="#b17">[18]</ref> evolutionary algorithms are used to recover the shape of tessellated surfaces such as a sphere, a fractal surface and a head (the Igea model). For a population size of 30-50 particles, a polygonal mesh is obtained. The method is able to reconstruct examples 1-4, but fails for examples 5 and 6, where a proper triangulation cannot be obtained. Moreover, since the surface is only linearly approximated, points on the reconstructed surface different from data points exhibit very large errors, several orders of magnitude larger than ours. However, its most important limitation does not concern the errors but the fact that it does not return an analytical surface, just merely an approximating polygonal mesh.</p><p>The method by Weinert et al. <ref type="bibr" target="#b78">[79]</ref> combines NURBS with Constructive Solid Geometry in a hybrid evolutionary algorithm/ genetic programming approach. In practice, however, the method is much simpler and less powerful than ours since no parameterization of data points is actually computed. Instead, it is assumed that the NURBS patch represents a surface of a solid which is infinite in the negative direction of the z-axis. This constraint, designed to avoid the parameterization process, has proved to be very limiting: examples 2-6 of this paper cannot be reconstructed with this method. In fact, the method is limited to very simple examples in which a planar base surface can be used (thus preventing closed or semi-closed surfaces to be used). And even in this case, reported errors for data points are quite large, of order 10 À2 for an almost trivial example.</p><p>A very recent approach is given in <ref type="bibr" target="#b76">[77]</ref>, where a multi-objective evolutionary algorithm (MOEA) approach is applied to reconstruct a simple smooth surface with different sets of data points: the initial set of 17,307 data points was reduced to a set of 823 data points in order to decrease the runtime from several days to 9 h for errors of magnitude 10 À2 . The method is also limited since it is assumed that sampled points are uniformly spaced in the (u, v) domain, so clouds of scattered data points cannot be reconstructed. Finally, data points should also be projected in order to perform the evaluation within the MOEA. As a consequence, the method is restricted to rather simple examples. In fact, the only reported example is by far much simpler than ours. Also, examples 2-6 of this paper cannot be reconstructed with this method.</p><p>Next method by Wen <ref type="bibr" target="#b80">[81]</ref> applies simulated annealing for optimizing NURBS ship hull fitting. This work performs surface reconstruction from a set of cross-sections (called NURBS skinning) rather than from clouds of points. Given a set of data points, they are used to generate a set of cross-sections for surface fitting by making all those cross-sections compatible and joining them with one another. Then, surface optimization is accomplished on either Y or Z coordinate using simulated annealing (SA). In other words, SA is only applied to achieve surface optimization (not surface reconstruction), while nonevolutionary techniques are used for data points parameterization and surface fitting. Errors with this method are quite large, and the method is limited to very specific surfaces for which suitable cross-sections can readily be obtained. Once again, examples 2-6 of this paper cannot be reconstructed with this method.</p><p>In <ref type="bibr" target="#b67">[68]</ref> an evolutionary heuristic technique known as simulated evolution (SimE) is applied to curve and surface fitting problems using NURBS. This method is very limited in nature, since instead of computing the knot vectors and the parameterization of data points, their values are assumed a priori. Similarly, it is assumed that the number of control points is equal to the order of the NURBS, then control points are calculated by least-squares method directly. In fact, all relevant NURBS parameters but the weights are either assumed or computed in standard way and SimE is only applied to determine such weights. Furthermore, curves and surfaces are assumed not self-intersecting. Compared with our approach, reported errors are very large and the reconstructed surface is of low quality. Moreover, this method fails for non-height-map surfaces so examples 2-6 of this paper cannot be reconstructed.</p><p>It is worthwhile to mention that in this paper we use strictly polynomial B-spline surfaces as fitting surfaces, while several approaches make use of NURBS surfaces, which are more flexible and versatile, and therefore they should yield smaller fitting errors. Even in this case, none of previous methods reported fitting errors as low as those achieved in this work. Besides, some examples analyzed here are, by far, much more complex and challenging that those usually found in previous approaches. Our method is conceptually simple, and can be implemented in a straightforward manner. It is also very versatile and exhibits a remarkable flexibility, being able to adapt to a wide range of situations. On the contrary, previous methods usually focus on specific surface types, derived from particular (although interesting) problems. In addition, previous methods discussed above introduce some assumptions to skip the calculation of some relevant parameters, mostly knot vectors and parametric values of data points. This is the reason why none of previous methods was able to reconstruct our examples 2-6 with Bspline surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">Computation times</head><p>Another important issue concerns the computation time. For this work we carried out several thousands of executions of our method on a number of different examples and got some interesting conclusions. The most important one is that the reported method is not as very-time consuming as it might appear at first sight. A crude version of the method can be computed in ''reasonable" time for many applications, although our approach is not well suited for real-time applications; the emphasis is on accuracy. A typical run may take from a few seconds to several minutes (with the most complicated examples tested so far demanding about 2-3 h). CPU times depend on many factors such as surface complexity, number of initial data points, initial population, numerical procedure employed, required accuracy, and GA parameters. Therefore, it is hard to obtain a general rule for determining how long does it take for a given example to be solved.</p><p>However, some hints can still be given. Our trials show that the most important factors are the number of initial data points, the required accuracy and the initial population for the GA (in general, the larger, the longer the CPU time), while surface parameters have smaller influence on the overall computation times. Table <ref type="table" target="#tab_3">3</ref> shows the CPU times and order of accuracy we obtained for the examples in this paper. The role of GA parameters in the computation times is analyzed in next section.</p><p>On the other hand, the crude version of our method can be improved for better performance. A feasible way to do it is to include any extra information you can know from your problem, as we actually do in our paper. For instance, in step 1 of our approach, GA are applied to compute a parameterization of data points. Initial population for such GA is randomly generated, but some standard parameterizations have been added to speed up the convergence of the process. A similar idea is applied in step 2 to the determination of knot vectors (in this case, by using the averaging method, as explained in Section 5.2.2). This strategy paid off: even although these individuals were not usually the best, computation times in our experiments were significantly reduced. Another key factor to reduce computation times concerns the code optimization. Using Matlab and its core of highly-optimized routines has reduced CPU times significantly with respect to a coarse, brute-force implementation.</p><p>We also noticed that our approach is much faster than previous methods even although our examples are much more complicated. The paper in <ref type="bibr" target="#b2">[3]</ref> reported times of about 200-350 min, while in <ref type="bibr" target="#b11">[12]</ref> the fitting of tens of thousands of points took hundreds of minutes on a HP 735 workstation. However, this comparison is not totally fair, since those papers were written time ago and hardware and software have improved dramatically since then. A more pertinent comparison of runtimes with recent entries <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b67">68,</ref><ref type="bibr" target="#b76">77,</ref><ref type="bibr" target="#b78">79]</ref> is done in Table <ref type="table" target="#tab_4">4</ref>. The method in <ref type="bibr" target="#b17">[18]</ref> reported runtimes from minutes to hours even although the output is a polygonal mesh, while times reported in <ref type="bibr" target="#b67">[68,</ref><ref type="bibr" target="#b80">81]</ref> are not comparable, since they correspond to the optimization process only, just a small step of the whole procedure. A more adequate comparison can be done with <ref type="bibr" target="#b76">[77,</ref><ref type="bibr" target="#b78">79]</ref>; they reported times of one to several days for sets of data points comparable to our simplest examples (that take only from tens of seconds to 2-3 min with our approach), while our most complicated examples take about 2-3 h. It must also be noticed that all those methods reported much worse fitting errors than our method. This observation is important, since most of previous methods include an optimization stage in addition to the fitting <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b43">44,</ref><ref type="bibr" target="#b68">69]</ref>. Not by chance, such optimization stage is typically the time bottleneck <ref type="bibr" target="#b2">[3]</ref> meaning that fitting error enhancement with those methods may demand significantly longer even for modest improvement factors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.">Analysis of GA parameters</head><p>In this section we discuss the influence of GA parameters on the overall performance of the method and the computation time. In general, a good GA performance requires the choice of a high crossover probability p c and a low mutation probability p m . Accordingly, we applied our method to examples 1-6 of our paper for different values of the probabilities of crossover p c from 0.8 to 1.0 and mutation p m from 0 to 0.2 and step-size 0.02 for both parameters. This generates a matrix of 11 Â 11 couples (p c , p m ). For each, we carried out 10 executions and computed the mean value of the results. Such results are depicted in Fig. <ref type="figure" target="#fig_5">9</ref> (from top to bottom) for the horn, shell and cresent surfaces, where p c and p m are represented in the horizontal and    The main conclusion we obtained is that neither p c nor p m play a significant role in the performance or CPU times of the method in the given range. Performance decreases however outside such range, especially for the crossover. In fact, we noticed that values of p c near to 0.8 degrade the performance noticeably, and this degradation effect increases as the value decreases. In other words, our reported results regarding the accuracy of the method and CPU times are robust against variations of p c and p m in the prescribed range.</p><p>Finally, in our experiments population size changes from example to example, ranging from p = 50 to p = 500. Since the population size affects the CPU time (the larger, the longer), our strategy is to keep this value initially as low as possible, then check if an increase of the population size improves the accuracy. This process is repeated until accuracy is no longer improved. Of course, this is at the cost of increasing the PCU times, but as mentioned above, our goal is accuracy rather than speed, so we found this strategy very convenient for our purposes. Moreover, our reported times are still much lower than those of previous works. In general, we found that a population of p = 100 individuals is usually enough to get the best accuracy, and larger values do not improve it, only CPU times, but we cannot assure this is a perennial rule for all cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions and future work</head><p>In this paper, we introduce an efficient GA-based surface reconstruction method from clouds of 3D data points. The method does not assume any input information other than the given set of data points and considers strictly polynomial B-spline surfaces as fitting surfaces. In our approach, GA are applied iteratively to accomplish two tasks: on one hand, to determine the parametric values of data points; on the other hand, to compute surface knot vectors. Then, the fitting surface is calculated by least-squares through either SVD or LU methods. Six examples including open, semi-closed and closed surfaces illustrate the good performance of our approach. Experiments show that the proposed method yields very good results even in presence of problematic features, such as intricate shapes, singularities, non-zero genus, concavities and noisy data. In all examples our fitting errors are astonishingly small when compared to any other previous approach.</p><p>In spite of these excellent results, there is still room for further improvement. Future work includes the consideration of NURBS surfaces as fitting surfaces of our method. It is also an open question how to optimize the process in order to reduce the computational load of this approach. On the other hand, our scheme is very general and can therefore be applied to a wide range of practical problems. We expect to apply it to some real-world settings described in the literature. This task will give us a very valuable feedback towards the potential improvement of our current approach.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .Fig. 3 .</head><label>23</label><figDesc>Fig. 2. Reconstruction of a (5, 4)-order B-spline surface: (left) cloud of 3D data points; (right) (6, 6)-order fitting B-spline surface.</figDesc><graphic coords="11,89.35,54.71,369.61,130.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Fig. 4. High-angle view (top) and top view (bottom) of the evolution of the reconstructed shell surface for: (left) g = 3, (middle) g = 7 and (right) g = 11 generations.</figDesc><graphic coords="12,76.54,197.35,387.51,263.17" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>sinð2pvÞ cosð3pvÞ z ¼ cosð2puÞ sinð2pvÞ þ 4v À 2 Fig. 6 .</head><label>26</label><figDesc>Fig. 6. Reconstruction of teardrop surface: (left) cloud of 3D data points; (right) (3, 3)-order fitting B-spline surface.</figDesc><graphic coords="13,151.71,516.13,241.01,156.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Reconstruction of Pisot triaxial surface: (left) cloud of 3D data points; (right) (20, 20)-order fitting B-spline surface.</figDesc><graphic coords="14,113.39,54.71,312.70,109.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>vertical axis respectively. Results for the other three examples (and others not described in this paper) were very similar, so they are omitted for the sake of brevity. For each example, we display the mean error of the method (left) and the mean value of the CPU time (right). Our results are displayed in color map code where lowest values are colored in dark blue,1 then light blue, green, yellow, orange, light red and finally dark red for upper values. Corresponding numerical values are indicated in the color bar on the right of each picture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Mean error of: (left) the method; (right) the CPU time for the examples (from top to bottom) shell, horn and cresent surfaces. For each figure 10 executions have been carried out; then, mean value of the results is displayed.</figDesc><graphic coords="18,82.21,54.71,375.26,511.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>General structure of the genetic algorithm. begin Let g = 0 be the generation counter Create and initialize a population, Pop(0) repeat Evaluate the fitness, f(x i (g)), of each individual x i of Pop(g) Select individuals from Pop(g) Apply crossover with probability p c to produce offspring Apply mutation with probability p m on offspring Set population of new generation Pop(g + 1) Advance to the new generation g = g + 1 until stopping condition is true end</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Crossover operator.</figDesc><table><row><cell>Parent 1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.123</cell><cell>0.178</cell><cell>0.274</cell><cell>0.456</cell><cell>0.571</cell><cell>0.701</cell><cell>0.789</cell><cell>0.843</cell><cell>0.921</cell><cell>0.950</cell></row><row><cell>Parent 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.086</cell><cell>0.167</cell><cell>0.197</cell><cell>0.271</cell><cell>0.367</cell><cell>0.521</cell><cell>0.679</cell><cell>0.781</cell><cell>0.812</cell><cell>0.912</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Cross point</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Offspring 1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.123</cell><cell>0.178</cell><cell>0.274</cell><cell>0.271</cell><cell>0.367</cell><cell>0.521</cell><cell>0.679</cell><cell>0.781</cell><cell>0.812</cell><cell>0.912</cell></row><row><cell>Chromosomes sorting</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Offspring 1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.123</cell><cell>0.178</cell><cell>0.271</cell><cell>0.274</cell><cell>0.367</cell><cell>0.521</cell><cell>0.679</cell><cell>0.781</cell><cell>0.812</cell><cell>0.912</cell></row><row><cell>Offspring 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.086</cell><cell>0.167</cell><cell>0.197</cell><cell>0.456</cell><cell>0.571</cell><cell>0.701</cell><cell>0.789</cell><cell>0.843</cell><cell>0.921</cell><cell>0.950</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3</head><label>3</label><figDesc>Computation times and accuracy for the examples reported in this paper.</figDesc><table><row><cell>Example</cell><cell>CPU time</cell><cell>Accuracy</cell></row><row><cell>B-spline surface</cell><cell>8-15 s</cell><cell>10 À6</cell></row><row><cell>Shell surface</cell><cell>11-19 min</cell><cell>10 À7 -10 À8</cell></row><row><cell>Horn surface</cell><cell>1-2 min</cell><cell>10 À7</cell></row><row><cell>Teardrop surface</cell><cell>20-65 s</cell><cell>10 À7</cell></row><row><cell>Pisot triaxial surface</cell><cell>2-3 h</cell><cell>10 À15</cell></row><row><cell>Cresent surface</cell><cell>14-20 min</cell><cell>10 À11</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4</head><label>4</label><figDesc>Comparison of the proposed method with other alternative surface reconstruction methods.</figDesc><table><row><cell>Authors</cell><cell>Method</cell><cell cols="2"># Data points Population</cell><cell>Output</cell><cell>Runtime</cell><cell>Error</cell><cell>Examples</cell><cell>Additional comments</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1-6</cell><cell></cell></row><row><cell cols="2">Not evolutionary approach</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Barak and</cell><cell>Neural network SOM and</cell><cell>10 4</cell><cell>Not applicable</cell><cell>Cubic</cell><cell>3-6 h</cell><cell>Data points: 10 À1 -10 À2</cell><cell>Only ex. 1 works</cell><cell>Requires projection of data</cell></row><row><cell>Fisher [3]</cell><cell>PDE with GDA (gradient</cell><cell></cell><cell>here</cell><cell>polynomial</cell><cell></cell><cell></cell><cell>properly</cell><cell>points onto a base surface</cell></row><row><cell></cell><cell>descent algorithm)</cell><cell></cell><cell></cell><cell>B-spline</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ex. 2-6 fail</cell><cell></cell></row><row><cell cols="2">Evolutionary approach</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Goinski [18]</cell><cell>Evolutionary algorithms</cell><cell>Not reported</cell><cell>30 (sphere)</cell><cell>Polygonal</cell><cell>Tens of</cell><cell>Not reported for data points (in</cell><cell>Ex. 1-4</cell><cell>Not actual surface is</cell></row><row><cell></cell><cell>(EA)</cell><cell></cell><cell>30 (fractal)</cell><cell>mesh</cell><cell>min. $ hours</cell><cell>general, high)</cell><cell>reconstructed</cell><cell>reconstructed (it is a</cell></row><row><cell></cell><cell></cell><cell></cell><cell>50 (head)</cell><cell>(triangulation)</cell><cell></cell><cell></cell><cell>Ex. 5 and 6 fail</cell><cell>polygonal mesh)</cell></row><row><cell>Weinert et al.</cell><cell>Evolutionary search (ES)</cell><cell>192</cell><cell>500</cell><cell>Polynomial B-</cell><cell>24 h</cell><cell>Data points: 10 À2</cell><cell>Only ex. 1 works</cell><cell>No parameterization is</cell></row><row><cell>[79]</cell><cell>and Genetic programming</cell><cell></cell><cell></cell><cell>spline</cell><cell></cell><cell></cell><cell>properly</cell><cell>computed</cell></row><row><cell></cell><cell>(GP)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ex. 2-6 fail</cell><cell>Pre-processing required</cell></row><row><cell>Wagner et al.</cell><cell>Multi-objective</cell><cell>823-17,307</cell><cell>20</cell><cell>Polynomial B-</cell><cell>Tens of</cell><cell>Data points: 10 À2</cell><cell>Only ex. 1 works</cell><cell>No parameterization is</cell></row><row><cell>[77]</cell><cell>evolutionary and genetic</cell><cell></cell><cell></cell><cell>spline</cell><cell>hours $ days</cell><cell></cell><cell>properly</cell><cell>computed</cell></row><row><cell></cell><cell>algorithm (MOEA)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ex. 2-6 fail</cell><cell>Pre-processing required</cell></row><row><cell>Wen [81]</cell><cell>Simulated annealing (SA)</cell><cell>Not reported</cell><cell>Not applicable</cell><cell>NURBS</cell><cell>Not reported</cell><cell>Data points: 10 À1 -10 À2</cell><cell>Only ex. 1 works</cell><cell>SA only applied to Y or Z</cell></row><row><cell></cell><cell></cell><cell>(cross-</cell><cell>here</cell><cell>skinning</cell><cell></cell><cell></cell><cell>properly</cell><cell>coordinate optimization</cell></row><row><cell></cell><cell></cell><cell>sections)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ex. 2-6 fail</cell><cell>Pre-/post-processing</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>required</cell></row><row><cell>Sarfraz [68]</cell><cell>Simulated evolution</cell><cell>441-1024</cell><cell>Not applicable</cell><cell>Polynomial B-</cell><cell>Minutes</cell><cell>Data points: 10 À1</cell><cell>Only ex. 1 works</cell><cell>Neither parameterization</cell></row><row><cell></cell><cell>algorithm (SimE)</cell><cell></cell><cell>here</cell><cell>spline</cell><cell>(just weights</cell><cell></cell><cell>properly</cell><cell>nor fitting is computed</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>optimization)</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ex. 2-6 fail</cell><cell>Pre-/post-processing</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>required</cell></row><row><cell>Our method</cell><cell>Iterative two-steps genetic</cell><cell>14,400 (ex. 1)</cell><cell>50-500</cell><cell>Polynomial B-</cell><cell>Tens of</cell><cell>Data points: 10 À6 -10 À15 (worst</cell><cell>All work properly</cell><cell>Automatic data points</cell></row><row><cell></cell><cell>algorithm with SVD/LU-</cell><cell>7500 (ex. 2)</cell><cell></cell><cell>spline</cell><cell>secs. $ 2-3 h</cell><cell>cases: 10 À4 )</cell><cell></cell><cell>parameterization and knot</cell></row><row><cell></cell><cell>mod LSQ fitting</cell><cell>6000 (ex. 3)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>vector determination</cell></row><row><cell></cell><cell></cell><cell>6000 (ex. 4)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>10,500 (ex. 5)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>14,200 (ex. 6)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>No pre-/post-processing</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>required</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>A. Gálvez et al. / Information Sciences 182 (2012) 56-76</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>A.Gálvez  et al. / Information Sciences 182 (2012) 56-76</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_2"><p>For interpretation of color in Fig.9, the reader is referred to the web version of this article.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This research has been supported by the Computer Science National Program of the Spanish Ministry of Education and Science, Project Ref. #TIN2006-13615 and the University of Cantabria. We also thank the Editor-in-Chief and the four anonymous reviewers for their encouraging and constructive comments and very helpful feedback that allowed us to improve our paper significantly.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Back</surname></persName>
		</author>
		<title level="m">Evolutionary Algorithms in Theory and Practice</title>
		<meeting><address><addrLine>NY</addrLine></address></meeting>
		<imprint>
			<publisher>Oxford Univ. Press</publisher>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3D stcans</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;95</title>
		<meeting>SIGGRAPH&apos;95</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Parameterization and reconstruction from 3D scattered points based on neural network and PDE techniques</title>
		<author>
			<persName><forename type="first">J</forename><surname>Barhak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">GP-COACH: Genetic Programming-based learning of COmpact and ACcurate fuzzy rule-based classification systems for High-dimensional problems</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Berlanga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">J</forename><surname>Rivera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Jesus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Herrera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1183" to="1200" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On three-dimensional surface reconstruction methods</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Bolle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="13" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Some characterizations of families of surfaces using functional equations</title>
		<author>
			<persName><forename type="first">E</forename><surname>Castillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="296" to="318" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">E</forename><surname>Castillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ruiz-Cobo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Functional Equations in Applied Sciences</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Elsevier Science</publisher>
			<pubPlace>Amsterdam</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Modeling manufacturing processes using a genetic programming-based fuzzy regression with detection of outliers</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">Y</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Kwong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Fogarty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="506" to="518" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A hybrid model based on rough sets theory and genetic algorithms for stock price forecasting</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">L</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">Y</forename><surname>Wei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1610" to="1629" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Algorithms for spline curves and surfaces</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Cox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fundamental Developments of Computer-Aided Geometric Design</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Piegl</surname></persName>
		</editor>
		<meeting><address><addrLine>London, San Diego</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="51" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Local energy fairing of B-spline curves</title>
		<author>
			<persName><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hadenfeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Farin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Hagen</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Noltemeier</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<date type="published" when="1995">1995</date>
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of B-spline surfaces of arbitrary topological type</title>
		<author>
			<persName><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;96</title>
		<meeting>SIGGRAPH&apos;96</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="325" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Parameterization and smooth approximation of surface triangulations</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Floater</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="231" to="250" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Surface fitting with hierarchical splines</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Forsey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">H</forename><surname>Bartels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="134" to="161" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Optimal surface reconstruction from planar contours</title>
		<author>
			<persName><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Kedem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Uselton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="693" to="702" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Bézier curve and surface fitting of 3D point clouds through genetic algorithms, functional networks and least-squares approximation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gálvez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cobo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Puig-Pey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Espinola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lectures Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">4706</biblScope>
			<biblScope unit="page" from="680" to="693" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Particle swarm optimization for NURBS surface reconstruction from clouds of 3D data points</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gálvez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Evolutionary surface reconstruction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Goinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Conference on Human System Interactions</title>
		<meeting>IEEE Conference on Human System Interactions<address><addrLine>Krakow, Poland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="464" to="469" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Optimal Initial Population Size for Binary-Coded Genetic Algorithms</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">85001</biblScope>
		</imprint>
		<respStmt>
			<orgName>University of Alabama</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">TCGA Report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<title level="m">Genetic Algorithms in Search, Optimization, and Machine Learning</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Baldwinian learning in clonal selection algorithm for optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1218" to="1236" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Spline-blended surface interpolation through curve networks</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Gordon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Mathematics and Mechanics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="931" to="952" />
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Variational design and fairing of spline surfaces</title>
		<author>
			<persName><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="143" to="154" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Associating visual textures with human perceptions using genetic algorithms</title>
		<author>
			<persName><forename type="first">W</forename><surname>Groissboeck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Lughofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Thumfart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2065" to="2084" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Neural network approach to the reconstruction of free-form surfaces for reverse engineering</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="64" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Surface reconstruction from points to splines</title>
		<author>
			<persName><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="269" to="277" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Type-1 and type-2 fuzzy inference systems as integration methods in modular neural networks for multimodal biometry and its optimization with genetic algorithms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hidalgo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Castillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Melin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2123" to="2145" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Numerical control of Kohonen neural network for scattered data approximation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hoffmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerical Algorithms</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="175" to="186" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Adaptation in Natural and Artificial Systems</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>The University of Michigan Press</publisher>
			<pubPlace>Ann Arbor</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Surface reconstruction from unorganized points</title>
		<author>
			<persName><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;92</title>
		<meeting>SIGGRAPH&apos;92</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Smoothing of curves and surfaces</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="97" to="105" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Selection of the optimum promotion mix by integrating a fuzzy linguistic decision model with genetic algorithms</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">N</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">L</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="41" to="52" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Analytic network process for pattern classification problems using genetic algorithms</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2528" to="2539" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A genetic algorithm approach to the spectral estimation of time series with noise and missed observations</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Hung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="issue">24</biblScope>
			<biblScope unit="page" from="4632" to="4643" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Santamarı ´a, An experimental study on the applicability of evolutionary algorithms to craniofacial superimposition in forensic identification</title>
		<author>
			<persName><forename type="first">O</forename><surname>Ibáñez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ballerini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Cordón</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Damas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">23</biblScope>
			<biblScope unit="page" from="3998" to="4028" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A new artificial intelligence paradigm for computer aided geometric design</title>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gálvez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lectures Notes in Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">1930</biblScope>
			<biblScope unit="page" from="200" to="213" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Functional networks for B-spline surface reconstruction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Iglesias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Echevarría</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gálvez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1337" to="1353" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A new approach to the construction of surfaces from contour data</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="75" to="84" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A genetic algorithm approach to determine the sample size for attribute control charts</title>
		<author>
			<persName><forename type="first">I</forename><surname>Kaya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1552" to="1566" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Reconstruction and simplification of surfaces from contours</title>
		<author>
			<persName><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schilling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graphical Models</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="429" to="443" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Free-form surface reconstruction using Bernstein basis function networks</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">K</forename><surname>Knopf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kofman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Intelligent Engineering Systems Through Artificial Neural Networks</title>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Dagli</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="797" to="802" />
			<date type="published" when="1999">1999</date>
			<publisher>ASME Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Parameter optimization for B-spline curve fitting using genetic algorithms</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Kalra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Dhande</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Congress on Evolutionary Computation</title>
		<meeting>Congress on Evolutionary Computation</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1871" to="1878" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Curve and surface reconstruction from points: an approach based on self-organizing maps</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">K</forename><surname>Kalra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">G</forename><surname>Dhande</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Soft Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="55" to="66" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Optimization of a NURBS representation</title>
		<author>
			<persName><forename type="first">P</forename><surname>Laurent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mekhilef</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="699" to="710" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Surface reconstruction for interactive modeling of freeform solids by virtual sculpting</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Leu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CIRP Annals-Manufacturing Technology</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="131" to="134" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pulli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ginzton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ginsberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Shade</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fulk</surname></persName>
		</author>
		<title level="m">The Digital Michelangelo Project: 3D scanning of large statues</title>
		<meeting><address><addrLine>New Orleans</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="131" to="144" />
		</imprint>
	</monogr>
	<note>SIGGRAPH 2000</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Implicit reconstruction of solids from cloud point sets</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Turkiyyah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ganter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Storti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1995 ACM Symposium on Solid Modeling</title>
		<meeting>1995 ACM Symposium on Solid Modeling<address><addrLine>Salt Lake City, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page" from="393" to="402" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Replacement strategies to preserve useful diversity in steady-state genetic algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lozano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Herrera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Cano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="issue">23</biblScope>
			<biblScope unit="page" from="4421" to="4433" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Parameterization of randomly measured points for least squares fitting of B-spline curves and surfaces</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">Y</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Kruth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="663" to="675" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Surface construction by fitting unorganized curves</title>
		<author>
			<persName><forename type="first">I</forename><surname>Maekawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graphical Models</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="316" to="332" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Optimization of interval type-2 fuzzy logic controllers for a perturbed autonomous wheeled mobile robot using genetic algorithms</title>
		<author>
			<persName><forename type="first">R</forename><surname>Martínez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Castillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">T</forename><surname>Aguilar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2158" to="2174" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Surfaces from contours</title>
		<author>
			<persName><forename type="first">D</forename><surname>Meyers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Skinnwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="228" to="258" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">An Introduction to Genetic Algorithms (Complex Adaptive Systems)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mitchell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Smooth surface approximation to serial cross-sections</title>
		<author>
			<persName><forename type="first">H</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="995" to="1005" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Error-bounded B-spline curve approximation based on dominant point selection</title>
		<author>
			<persName><forename type="first">H</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Computer Graphics, Imaging and Visualization (CGIV05)</title>
		<meeting>International Conference on Computer Graphics, Imaging and Visualization (CGIV05)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="437" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M</forename><surname>Patrikalakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Maekawa</surname></persName>
		</author>
		<title level="m">Shape Interrogation for Computer Aided Design and Manufacturing</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">L</forename><surname>Piegl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nurbs</forename><surname>The</surname></persName>
		</author>
		<author>
			<persName><surname>Book</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Algorithm for approximate NURBS skinning</title>
		<author>
			<persName><forename type="first">L</forename><surname>Piegl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tiller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="699" to="706" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Approximation with active B-spline curves and surfaces</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Pacific Graphics</title>
		<meeting>Pacific Graphics</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="8" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Industrial geometry: recent advances and applications in CAD</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="751" to="766" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Single view reconstruction of curved surfaces</title>
		<author>
			<persName><forename type="first">M</forename><surname>Prasad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Fitzgibbon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE Conference on Computer Vision and Pattern Recognition<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Direct least-squares fitting of algebraic surfaces</title>
		<author>
			<persName><forename type="first">V</forename><surname>Pratt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;87</title>
		<meeting>SIGGRAPH&apos;87</meeting>
		<imprint>
			<date type="published" when="1987">1987</date>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes</title>
		<meeting><address><addrLine>Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
	<note>second ed.</note>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Failure prediction of dotcom companies using neural network genetic programming hybrids</title>
		<author>
			<persName><forename type="first">P</forename><surname>Ravisankar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Bose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1257" to="1267" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Integrated multiobjective optimization and a priori preferences using genetic algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sanchis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Marínez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Blasco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">1784</biblScope>
			<biblScope unit="page" from="931" to="951" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A new adaptive genetic algorithm for fixed channel assignment</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>San José-Revuelta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">177</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2655" to="2678" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Computing optimized curves with NURBS using evolutionary intelligence</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sarfraz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Raza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Baig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">3480</biblScope>
			<biblScope unit="page" from="806" to="815" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Computer-aided reverse engineering using simulated evolution on NURBS</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sarfraz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Virtual and Physical Prototyping</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="243" to="257" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Parameter optimization in approximating curves and surfaces to measurement data</title>
		<author>
			<persName><forename type="first">B</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Menq</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="267" to="290" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Function representation of solids reconstructed from scattered surface points and contours</title>
		<author>
			<persName><forename type="first">V</forename><surname>Savchenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pasko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Okunev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kunii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="181" to="188" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">An adaptive subdivision method for surface fitting from sampled data</title>
		<author>
			<persName><forename type="first">F</forename><surname>Schmitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Barsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;86</title>
		<meeting>SIGGRAPH&apos;86</meeting>
		<imprint>
			<date type="published" when="1986">1986</date>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="179" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Path planning on a cuboid using genetic algorithms</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ugur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="issue">16</biblScope>
			<biblScope unit="page" from="3275" to="3287" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">An artificial immune system approach for B-spline surface approximation problem</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ulker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Isler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">4488</biblScope>
			<biblScope unit="page" from="49" to="56" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">The calculation of parametric NURBS surface interval values using neural networks</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ulker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Arslan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">3992</biblScope>
			<biblScope unit="page" from="247" to="254" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Automatic knot adjustment using an artificial immune system for B-spline curve approximation</title>
		<author>
			<persName><forename type="first">E</forename><surname>Ulker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Arslan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="page" from="1483" to="1494" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Reverse engineering</title>
		<author>
			<persName><forename type="first">T</forename><surname>Varady</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Martin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Computer Aided Geometric Design</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Farin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Kim</surname></persName>
		</editor>
		<imprint>
			<publisher>Elsevier Science</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">On the design of optimizers for surface reconstruction</title>
		<author>
			<persName><forename type="first">T</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Michelitsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sacharow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 Genetic and Evolutionary Computation Conference-GECCO2007</title>
		<meeting>the 2007 Genetic and Evolutionary Computation Conference-GECCO2007<address><addrLine>London, England</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="2195" to="2202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Optimized NURBS ship hull fitting using simulated annealing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Weinert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mehnen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Albersmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dreup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Computer Graphics, Imaging and Visualisation (CGIV&apos;06)</title>
		<meeting>International Conference on Computer Graphics, Imaging and Visualisation (CGIV&apos;06)<address><addrLine>Capri, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="431" to="438" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Evolutionary surface reconstruction using CSG-NURBS-hybrids</title>
		<author>
			<persName><forename type="first">K</forename><surname>Weinert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M H</forename><surname>Shamsuddin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Samian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 Genetic and Evolutionary Computation Conference-GECCO</title>
		<meeting>the 2001 Genetic and Evolutionary Computation Conference-GECCO<address><addrLine>San Francisco, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="1456" to="1463" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">Advanced surface fitting techniques</title>
		<author>
			<persName><forename type="first">V</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Or</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Renner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Varady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="19" to="42" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">New solutions for surface reconstruction from discrete point data by means of computational intelligence</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Wen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Intelligent Computation in Manufacturing Engineering-ICME&apos;98</title>
		<meeting>Intelligent Computation in Manufacturing Engineering-ICME&apos;98<address><addrLine>Sydney, Australia</addrLine></address></meeting>
		<imprint>
			<publisher>IEECS Press</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="431" to="438" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">A hybrid genetic algorithm with the Baldwin effect</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="640" to="652" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Self-organizing genetic algorithm based tuning of PID controllers</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1007" to="1018" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
