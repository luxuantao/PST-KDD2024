<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Survey on Compiler Autotuning using Machine Learning</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Amir</forename><forename type="middle">H</forename><surname>Ashouri</surname></persName>
						</author>
						<author>
							<persName><forename type="first">William</forename><surname>Killian</surname></persName>
						</author>
						<author>
							<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
						</author>
						<author>
							<persName><roleName>DEIB, Politecnico</roleName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Di</forename><surname>Politecnico</surname></persName>
						</author>
						<author>
							<persName><roleName>Italy</roleName><surname>Milano</surname></persName>
						</author>
						<author>
							<persName><roleName>Italy</roleName><forename type="first">Di</forename><surname>Milano</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Via</forename><surname>Ponzio</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of Toronto</orgName>
								<address>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Millersville University of Pennsylvania</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Delaware</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">University of Toronto</orgName>
								<address>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">King&apos;s College Rd</orgName>
								<address>
									<postCode>M5S3G8; W</postCode>
									<settlement>Toronto, Killian</settlement>
									<region>ON</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">J. Cavazos</orgName>
								<orgName type="institution">Millersville University of Pennsylvania</orgName>
								<address>
									<addrLine>1 S George St</addrLine>
									<postCode>19551</postCode>
									<settlement>Millersville</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="institution">University of Delaware</orgName>
								<address>
									<postCode>19716</postCode>
									<region>Newark, DE</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Survey on Compiler Autotuning using Machine Learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">9D1C666B963D65DB4B65916668CB3879</idno>
					<idno type="DOI">10.1145/3197978</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Autotuning</term>
					<term>phase ordering</term>
					<term>optimizations</term>
					<term>compilers</term>
					<term>machine learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Since the mid-1990s, researchers have been trying to use machine-learning-based approaches to solve a number of different compiler optimization problems. These techniques primarily enhance the quality of the obtained results and, more importantly, make it feasible to tackle two main compiler optimization problems: optimization selection (choosing which optimizations to apply) and phase-ordering (choosing the order of applying optimizations). The compiler optimization space continues to grow due to the advancement of applications, increasing number of compiler optimizations, and new target architectures. Generic optimization passes in compilers cannot fully leverage newly introduced optimizations and, therefore, cannot keep up with the pace of increasing options. This survey summarizes and classifies the recent advances in using machine learning for the compiler optimization field, particularly on the two major problems of (1) selecting the best optimizations, and (2) the phase-ordering of optimizations. The survey highlights the approaches taken so far, the obtained results, the fine-grain classification among different approaches, and finally, the influential papers of the field. CCS Concepts: • Computing methodologies → Machine learning; • Software and its engineering → Compilers;</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Moore's Law <ref type="bibr" target="#b219">[220]</ref> states that transistor density doubles every two years. However, the rate at which compilers improve is on the order of a few percentage points each year. Compilers are necessary tools bridging the gap between written software and target hardware. There are many unsolved research challenges in the domain of compilers <ref type="bibr" target="#b114">[115]</ref>. Entering the post-Moore's Law era <ref type="bibr" target="#b80">[81]</ref>, compilers struggle to keep up with the increasing development pace of ever-expanding hardware landscape (e.g., CPUs, GPUs, FPGAs) and software programming paradigms and models (e.g., OpenMP, MPI, OpenCL, and OpenACC). Additionally, the growing complexity of modern compilers and increasing concerns over security are among the most serious issues that the compilation research community faces.</p><p>Compilers have been used for the past 50 years <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b114">115]</ref> for generating machine-dependent executable binary from high-level programming languages. Compiler developers typically design optimization passes to transform each code segment of a program to produce an optimized version of an application. The optimizations can be applied at different stages of the compilation process, since compilers have three main layers: (1) front-end, (2) intermediate-representation (IR), and (3) backend. At the same time, optimizing source code by hand is a tedious task. Compiler optimizations provide automatic methods for transforming code. To this end, optimizing the intermediate phase plays an important role in the performance metrics. Enabling compiler optimization parameters (e.g., loop unrolling, register allocation, etc.) could substantially benefit several performance metrics. Depending on the objectives, these metrics could be execution time, code size, or power consumption. A holistic exploration approach to trade-off these metrics also represents a challenging problem <ref type="bibr" target="#b192">[193]</ref>.</p><p>Autotuning <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b255">256]</ref> addresses automatic code-generation and optimization by using different scenarios and architectures. It constructs techniques for automatic optimization of different parameters to maximize or minimize the satisfiability of an objective function. Historically, several optimizations were done in the backend, where scheduling, resource-allocation, and code-generation are done <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b92">93]</ref>. The constraints and resources form a linear system (ILP) that needs to be solved. Recently, researchers have shown increased effort in introducing front-end and IR-optimizations. Two observations support this claim: <ref type="bibr" target="#b0">(1)</ref> the complexity of a backend compiler requires exclusive knowledge strictly by the compiler designers, and (2) lower overheads with external compiler modification compared with back-end modifications. The IR-optimization process normally involves fine-tuning compiler optimization parameters by a multi-objective optimization formulation that can be harder to explore. Nonetheless, each approach has its benefits and drawbacks and are subject to analysis under their scope.</p><p>A major challenge in choosing the right set of compiler optimizations is the fact that these code optimizations are programming language, application, and architecture dependent. Additionally, the word optimization is a misnomer-there is no guarantee the transformed code will perform better than the original version. In fact, aggressive optimizations can even degrade the performance of the code to which they are applied <ref type="bibr" target="#b250">[251]</ref>. Understanding the behavior of the optimizations, the perceived effects on the source-code, and the interaction of the optimizations with each other are complex modeling problems. This understanding is particularly difficult, because compiler developers must consider hundreds of different optimizations that can be applied during the various compilation phases. The phase-ordering problem is realized when considering the order in which these hundreds of optimizations are used. There are several open problems associated with the compiler optimization field that have not been adequately tackled <ref type="bibr" target="#b273">[274]</ref>. These problems include finding what optimizations to use, which set of parameters to choose from (e.g., loop tiling size, etc.), and in which order to apply them to yield the best performance improvement. The first two questions create the problem of selecting the best compiler optimizations and the taking into account the third question is forming the phase-ordering problem of compiler optimizations.</p><p>The problem of phase-ordering has been an open problem in the field of compiler research for many decades <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b147">148,</ref><ref type="bibr" target="#b150">151,</ref><ref type="bibr" target="#b253">254,</ref><ref type="bibr" target="#b261">262]</ref>. The inability of researchers to fully address the phaseordering problem has led to advances in the simpler problem of selecting the right set of optimizations, but even the latter has yet to be solved <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b41">42,</ref><ref type="bibr" target="#b59">60]</ref>. The process of selecting the right optimizations for snippets of code, or kernels, is typically done manually, and the sequence of optimizations is constructed with little insight into the interaction between the preceding compiler A Survey on Compiler Autotuning using Machine Learning 96:3 optimizations in the sequence. The task of constructing heuristics to select the right sequence of compiler optimizations is infeasible given the increasing number of compiler optimizations being integrated into compiler frameworks. For example, GCC has more than 200 compiler passes, referred to as compiler options, <ref type="foot" target="#foot_1">1</ref> and LLVM-clang and LLVM-opt each have more than 150 transformation passes. <ref type="foot" target="#foot_2">2</ref> Additionally, these optimizations are targeted at different phases of the compilation process. Some of these passes only analyze data access while others may look at loop nests. Most compiler optimization flags are disabled by default, and compiler developers rely on software developers to know which optimizations should be beneficial for their application. Compiler developers provide standard "named" optimization levels, e.g., -O1, -O2, -Os, and so on, to introduce a fixed-sequence of compiler optimizations that on average achieve better performance on a set of benchmark applications chosen by the compiler developers. However, using predefined optimizations usually is not good enough to bring the best achievable application-specific performance. One of the key approaches recently used in the literature to find the best optimizations to apply given an application is inducing prediction models using different classes of Machine Learning (ML) <ref type="bibr" target="#b7">[8]</ref>. The central focus of this survey is to highlight approaches that leverage machine learning to find the best optimizations to apply.</p><p>Contribution. In this survey, we provide an extensive overview of techniques and approaches proposed by the authors tackling the aforementioned problems. We highlight over 200 recent papers proposed for compiler autotuning when machine learning was used. The classification in different subfields is done by several representative features shown in Figure <ref type="figure" target="#fig_0">1</ref>. To the best of our knowledge, the first application of machine learning adapted for autotuning compilers were proposed by References <ref type="bibr" target="#b68">[69,</ref><ref type="bibr" target="#b142">143,</ref><ref type="bibr" target="#b179">180]</ref>. However, there were other original works that discuss the problems and acted as the driving force of using machine learning <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b41">42,</ref><ref type="bibr" target="#b63">64,</ref><ref type="bibr" target="#b163">164,</ref><ref type="bibr" target="#b190">191,</ref><ref type="bibr" target="#b206">207,</ref><ref type="bibr" target="#b253">254,</ref><ref type="bibr" target="#b262">263,</ref><ref type="bibr" target="#b268">269]</ref>. Thus, we consider the past 25 years of research related to autotuning compilers as it covers the entire time span of the literature. <ref type="foot" target="#foot_3">3</ref> Additionally, this article can be leveraged as a connecting point for two existing surveys <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b222">223]</ref> on the compiler optimization field.</p><p>Organization. We organize this survey as follows: We start by providing an overview of the different methods of data acquisition; followed by presenting preprocessing techniques. We then discuss different machine-learning models and the types of objectives a model is constructed. Finally, we elaborate on the different target platforms these techniques have been applied. Additionally, to facilitate this organizational flow depicted in Figure <ref type="figure" target="#fig_0">1</ref>, we provide Figure <ref type="figure" target="#fig_1">2</ref>, for which we show a sample autotuning framework leveraging compilers and machine learning. We discuss more on the autotuning nomenclatures in Section 2.4. Section 2 discusses the motivations and challenges involved in the compiler optimization research; this is followed by an analysis of the optimization space for the two major optimization problems in Section 2.3. We review the existing characterization techniques and the classification of those in Section 3. Furthermore, we discuss the machine learning models used in Section 4 and provide a full classification of different prediction techniques used in the recent research in Section 5. Section 6 examines the various space exploration techniques on how optimization configurations are traversed within the optimization space. In Section 7, we discuss the different target architectures and compiler frameworks involved in the tuning process. We include a brief review of the Polyhedral compilation framework along with other widely used compiler frameworks in Section 7. Section 8 includes a discussion on the influential papers of the field classified by their obtained (1) performance, (2) novelty, influence they had on the succeeding work, and (3) number of citations. Finally, we conclude the article with a brief discussion on past and future trends of compiler autotuning methodologies using machine learning.</p><p>Scope of the survey. We organize the research performed in this survey in different categories to highlight their similarities and differences. However, it is important to note that the presented study has many potential classifications in the domain of machine learning and compilers research. We organize the survey in a way that all research papers corresponding to a specific type of classification are cited under each classification. Furthermore, under every classification, we selectively picked the more notable works, and we provide more elaboration on their contribution. As an example, Cavazos et al. <ref type="bibr" target="#b50">[51]</ref> proposed to use performance counters to characterize an application. The vector of features then can be used to construct prediction models. Since this work was using this novel way of characterization, it is elaborated more on the Section 3.2.1. Due to our classification policy, this work is also cited in other classification tables (prediction type, target platform). We hope this survey will be useful for a wide range of readers, including computer architects, compiler developers, researchers, and technical professionals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">COMPILER OPTIMIZATIONS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">A Note on Terminology and Metrics</head><p>Since research works mentioned in this survey originated from varying authors, terminologies may be locally and contextually defined. This results in term definitions that may not strictly be A Survey on Compiler Autotuning using Machine Learning 96:5 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classes References</head><p>Selection Problem <ref type="bibr">[3, 6, 11, 15-17, 21, 22, 24, 27-29, 39, 42, 50-55, 61, 62, 67, 69, 70, 72, 78, 79, 83, 91, 92, 96, 98-101, 105-108, 116, 122, 123, 132, 135, 136, 142, 143, 152, 155, 157, 160, 162, 162, 163, 166, 169, 170, 178, 183, 195-198, 200, 201, 202, 206, 208-210, 217-219, 221, 235-238, 240, 243, 244, 248, 250, 253, 259, 267, 271, 273</ref>] Phaseordering Problem <ref type="bibr">[17-19, 25, 26, 28, 68, 111, 127, 146-149, 151, 153, 171, 184-187, 199, 212, 213, 251, 254, 262, 263]</ref> defined to apply to all cited publications. We clarify terms used in this survey here and relate them to the publications discussed. The field of compiler optimization has been referred to as compiler autotuning, compilation, code optimization, collective optimization, and program optimization. To maintain clarity, we do not use all these terms but instead use optimizing compilers or compiler autotuning. Moreover, under each classified subsection, we will point out the other nomenclatures that have been used widely and our reference subsequently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Compiler Optimization Challenges and Benefits</head><p>The majority of potential speedup no longer arrives at the increase of processor core clock frequencies. Automatic methods of exploiting parallelism and reducing dependencies are needed. As such, compiler optimizations <ref type="bibr" target="#b190">[191]</ref> allow a user to affect the generated code without changing the original high-level source code. When these optimizations are applied may result in a program running better on a target architecture. Since a user is not able to manually tune a large code base, automatic methods must be introduced. Furthermore, manual tuning is not portable -transformations applied to code running on one architecture is not guaranteed to yield the same performance increase on another architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Compiler Optimization Problems</head><p>The problem of interdependency among phases of compiler optimizations is not unique to the compiler optimization field. Phase inter-dependencies have been noted in traditional optimizing compilers between flow analysis and constant folding as well as between code generation and register allocation <ref type="bibr" target="#b155">[156,</ref><ref type="bibr" target="#b253">254]</ref>. In optimization theory, "a feasible set, search space, or solution space is the set of all possible points (sets of values of the choice variables) of an optimization problem that satisfy the problem's constraints, potentially including inequalities, equalities, and integer constraints" <ref type="bibr" target="#b238">[239]</ref>. The optimization process normally starts by finding the initial set, and the candidates are usually pruned and down-sampled (depending on the algorithm/scenario). Compiler optimization problems can be split into one of two subareas based on whether we (i) enable/disable a set of optimizations (optimization selection problem) or (ii) change the ordering of those optimizations (phase-ordering problem). Here, we briefly discuss the different optimization space of the two. Table <ref type="table" target="#tab_0">1</ref> classifies the existing literature based on the type of the compiler optimization problem. More recent work has addressed the selection problem, since the phase-ordering problem is a more difficult research problem to solve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.3.1</head><p>The Problem of Selecting the Best Compiler Optimizations. Several compiler optimization passes form an optimization sequence. When we ignore the ordering of these optimizations and focus on whether to apply the optimizations, we define the problem scope to be the selection of the best compiler optimizations. Previous researchers have shown that the interdependencies and the interaction between enabling or disabling optimizations in a sequence can dramatically alter the performance of a running code even by ignoring the order of phases <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b41">42]</ref>.</p><p>Optimizations Space. Let o be a Boolean vector having elements o i as different compiler optimizations. An optimization element o i can be defined as either o i = 1 (enabled), or o i = 0 (disabled). An optimization sequence can be specified by a vector o. This vector is Boolean and has n dimensions:</p><formula xml:id="formula_0">|Ω Selection | = {0, 1} n .<label>(1)</label></formula><p>For application a i being optimized, n shows the number of optimizations under analysis <ref type="bibr" target="#b14">[15]</ref>. The selection problem's optimization space has an exponential space as its upper-bound. For example, with n = 10, there is a total state space of 2 n (1024) optimization options to select among. The different optimizations scale by the total number of target applications a i , yielding a search space of A = a 0 ...a N , where A is the set of our applications under analysis. One can define an extended version of the optimization space by switching a binary choice (on or off) to a manychoice variant per each compiler optimization. Equation <ref type="bibr" target="#b0">(1)</ref> shows the case where we have more than just a binary choice. Certain compiler optimizations such as loop unrolling and tiling offer multiple constant factors of tuning, i.e., 4, 8, 16, m. Also, some optimizations can take more than one parameter. To simplify the presentation of the equation, we consider m as their total number of optimization choices a compiler optimization have. We restrict this proposed presentation to discretized values. Continuous ranges could be approximated by predefining a discrete number of options within the continuous range of values; however, we did not find continuous options with any compilers used in this research domain. Consequently, we have the previous equation as</p><formula xml:id="formula_1">|Ω Selection_Extended | = {0, 1, . . . ,m} n .</formula><p>(2)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">The Phase-ordering Problem.</head><p>A problem common to multi-phase optimizing compilers is that there is no ideal ordering of phases. An optimization pass A, transforms the program in ways that hinders the effect of some optimizations that otherwise could have been performed by the following pass B. If the order of the two phases is switched, then phase B performs optimizations that may deprive phase A of opportunities. The dual of this situation is one in which the two phases open up new opportunities for each other <ref type="bibr" target="#b155">[156]</ref>. Compiler designers must take into account the order in which each optimization phase is placed and performed. "A pair of optimization phases (comprises of many passes) may be interdependent in the sense that each phase could benefit from transformation produced by the other" <ref type="bibr" target="#b155">[156,</ref><ref type="bibr" target="#b253">254]</ref>.</p><p>Optimizations Space. A phase-ordering optimization sequence is in the factorial space due to having permutations:</p><formula xml:id="formula_2">|Ω Phases | = n!, (<label>3</label></formula><formula xml:id="formula_3">)</formula><p>where n shows the number of optimizations under analysis <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18]</ref>. However, the mentioned bound is a simplified phase-ordering problem having a fixed length optimization sequence length and no repetitive application of optimizations. Allowing optimizations to be repeatedly applied and a variable length sequence of optimizations will expand the problem space to</p><formula xml:id="formula_4">|Ω Phases_Repetition_variableLength | = l i=0 n i , (<label>4</label></formula><formula xml:id="formula_5">)</formula><p>where n is the number of optimizations under study and l is the maximum desired length for the optimization sequence. Even having reasonable values for n and m, the formed optimization search space is enormous. For example, assuming n and m are both equal to 10 leads to an optimization search space of more than 11 billion different optimization sequences to identify given each piece of code being optimized. The problem of finding the right phases does not have a deterministic upper-bound given an unbounded optimization length <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b155">156]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Autotuning Techniques Overview</head><p>Autotuning refers to a methodology where there is some model (can be a search heuristic, an algorithm, etc.) that infers one or more objectives with minimal or no interaction from a user <ref type="bibr" target="#b265">[266]</ref>.</p><p>Figure <ref type="figure" target="#fig_1">2</ref> shows a sample autotuning framework leveraging compilers and machine learning. This section will go over each of the components for this example framework. In the domain of compilers, autotuning usually refers to defining an optimization strategy by means of a design of experiment (DoE) <ref type="bibr" target="#b214">[215]</ref>, where a tuning parameter space is defined. This parameter space creates many versions of a given input program. When many versions of a given input program are explored, this is known as iterative exploration. Iterative exploration can either be done exhaustively by examining all versions of a given input or sampling a subset of the space by using a search exploration heuristic. When a search exploration heuristic is used, the entire search space may not be examined. This causes a trade-off between the number of instances used to construct a model (accuracy) and the computational complexity required to construct a model (time). An autotuning framework must also have a desired target or outcome that is usually defined in terms of performance. Extracted information from an application and measured objectives are fed into a machine-learning algorithm from which a predictive model is emitted. The extracted application information could be extremely large or may be of varying sizes. Some form of dimension reduction is usually applied to the extracted features to reduce the amount of information. Dimension reduction is also necessary to form consistent features across varying applications. Principle component analysis is one of the more popular dimension reduction methods, as indicated by the surveyed research in this domain <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b22">23]</ref>.</p><p>Finally, once the model is constructed, the test set can be fed through feature extraction and dimension reduction to produce a feature vector that can be fed into the predictive model. A predicted outcome is yielded from this model and can be compared to the known outcome for evaluations and prediction error measurement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">APPLICATION CHARACTERIZATION TECHNIQUES</head><p>For computer architects and compiler designers, understanding the characteristics of applications running on current and future computer systems is of utmost importance during design.  <ref type="bibr" target="#b150">151,</ref><ref type="bibr" target="#b151">152,</ref><ref type="bibr" target="#b154">155,</ref><ref type="bibr" target="#b156">157,</ref><ref type="bibr" target="#b159">160,</ref><ref type="bibr" target="#b161">162,</ref><ref type="bibr" target="#b165">166,</ref><ref type="bibr" target="#b168">169,</ref><ref type="bibr" target="#b169">170,</ref><ref type="bibr" target="#b177">178,</ref><ref type="bibr" target="#b182">183,</ref><ref type="bibr" target="#b195">196,</ref><ref type="bibr" target="#b197">198,</ref><ref type="bibr" target="#b199">200,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b212">213,</ref><ref type="bibr" target="#b216">217,</ref><ref type="bibr" target="#b234">235,</ref><ref type="bibr" target="#b235">236,</ref><ref type="bibr" target="#b249">250,</ref><ref type="bibr" target="#b269">270,</ref><ref type="bibr" target="#b270">271</ref>] Graph-based (IR) Features <ref type="bibr" target="#b51">[52,</ref><ref type="bibr" target="#b52">53,</ref><ref type="bibr" target="#b66">67,</ref><ref type="bibr" target="#b71">72,</ref><ref type="bibr" target="#b77">78,</ref><ref type="bibr" target="#b91">92,</ref><ref type="bibr" target="#b95">96,</ref><ref type="bibr" target="#b142">143,</ref><ref type="bibr" target="#b154">155,</ref><ref type="bibr" target="#b156">157,</ref><ref type="bibr" target="#b165">166,</ref><ref type="bibr" target="#b168">169,</ref><ref type="bibr" target="#b182">183,</ref><ref type="bibr" target="#b185">186,</ref><ref type="bibr" target="#b195">196,</ref><ref type="bibr" target="#b199">200,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b234">235,</ref><ref type="bibr" target="#b236">237,</ref><ref type="bibr" target="#b239">240,</ref><ref type="bibr" target="#b249">250,</ref><ref type="bibr" target="#b261">262]</ref> Dynamic Architecture Dependent <ref type="bibr">[51, 61, 77, 79, 96, 98, 100, 136, 160, 169, 195, 196, 199-202, 217, 235, 237, 250, 253, 259</ref>] Architecture Independent <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b60">61,</ref><ref type="bibr" target="#b77">78,</ref><ref type="bibr" target="#b198">199]</ref> Hybrid features <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b76">77,</ref><ref type="bibr" target="#b154">155,</ref><ref type="bibr" target="#b156">157,</ref><ref type="bibr" target="#b168">169,</ref><ref type="bibr" target="#b195">196,</ref><ref type="bibr" target="#b199">200,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b216">217,</ref><ref type="bibr" target="#b249">250]</ref> Applications of machine learning to compiler optimizations require a representation of the code being optimized. Thus, a tool is required to scan the code being optimized to collect its representative features. To obtain a more accurate model, compiler researchers have been trying to better understand the behavior of running applications and build a vector of features that best represents pair functionality. In general, (1) the derived feature vector must be representative enough of its application, and (2) different applications must not have the same feature vector. Thus, constructing a large, inefficient feature vector slows down-or even halts-the ML process and can reduce the precision. In this survey, we present different program characterization techniques used in the referenced literature on compiler autotuning: (i) Static analysis of the features, (ii) Dynamic feature collection, and (iii) Hybrid feature collection, which uses a combination of the previous two or other extraction methods. Table <ref type="table" target="#tab_1">2</ref> refers to such classifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Static Analysis</head><p>Static Analysis, or static features collection, tries to collect features that are non-functional to a code being run on a given architecture. Static analysis involves parsing source code at the frontend, intermediate representation (IR), the backend, or any combination of the three. Collecting static features does not require the code to be executed and is considered to be one of the strongest support cases for its use. We briefly classify source code features leveraged in prior research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Source Code Features.</head><p>Source code (SRC) features are abstractions of some selected properties of an input application or the current compiler intermediate state when other optimizations have already been applied. These features range from simple information such as the name of the current function to the values of compiler parameters to the pass ordering in the current run of the compiler. There are numerous source-code feature extractors used in the literature. Fursin et al. proposed Milepost GCC <ref type="bibr" target="#b100">[101,</ref><ref type="bibr" target="#b104">105]</ref>, as a plugin to GCC compiler to extract source-level features. <ref type="foot" target="#foot_4">4</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Graph-based Features.</head><p>Graph-based representation makes data and control dependencies explicit for each operation in a program. "Data dependence graphs have provided an explicit representation of the definition-use relationships implicitly present in a source-code" <ref type="bibr" target="#b85">[86,</ref><ref type="bibr" target="#b169">170]</ref>. A control flow graph (CFG) <ref type="bibr" target="#b4">[5]</ref> has often been the representation of the control flow relationships of an application. The program dependence graph explicitly represents both the essential control relationships and the essential data relationships (as present in the data dependence graph). This A Survey on Compiler Autotuning using Machine Learning 96:9 information is available without the unnecessary sequencing present in the control flow graph <ref type="bibr" target="#b85">[86]</ref>. There are numerous tools to extract a control flow graph of a kernel, a function, or an application. MinIR <ref type="bibr" target="#b175">[176]</ref>, LLVM's Opt, and IDA pro <ref type="bibr" target="#b79">[80]</ref> are such examples of these tools available.</p><p>Koseki et al. <ref type="bibr" target="#b142">[143]</ref> used CFG and dependency graphs to understand good unrolling factors to apply to loops. According to the formula for determining the efficiency of loop execution P increases monotonically until it saturates. Therefore, their algorithm never chooses directions that lead to local maximum points. Moreover, they showed the method can find the point for which unrolling is performed the fewest times, as it chooses the nearest saturated point to determine the number of times and the directions in which loop unrolling is performed.</p><p>Park et al. <ref type="bibr" target="#b197">[198]</ref> introduced a novel compiler autotuning framework that used graph-based features of an application from its intermediate representation (IR). The authors used MinIR on the SSA form of the application to collect control flow graph of the basic blocks including the directed edges to which they have predecessor and successors. To construct the feature vectors needed in the predictive modeling, the authors used shortest path graph kernels <ref type="bibr" target="#b45">[46]</ref>. The method compared the similarity of two application's shortest path at each basic block. Once the feature vectors were built, a machine-learning model was created to predict the speedup of a given sequence. Finally, the authors experimentally evaluated their proposed approach using polyhedral optimization and PolyBench suite against using source-code features and dynamic features with multiple compiler backends.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Dynamic Characterization</head><p>Dynamic characterization involves extracting the performance counters (PC) that are used to provide information as to how well an application executes. The data can help determine system bottlenecks and provides hints on the fine-tuning of an application's performance. Applications can also use performance counter data to determine how many system resources to utilize. For example, an application that is data cache intensive can be tuned by exploiting more cache locality. Here, we briefly describe and classify the different types of collecting performance counters. Refer to Table <ref type="table" target="#tab_1">2</ref> for full classification on different application characterization techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Architecture Dependent Characterization.</head><p>Recent processors provide a special group of registers that make it possible to collect several measurable events corresponding to their performance. These events can be measured with minimal disruption to a running application and can describe several characteristics such as cache behaviors (hits and misses) and memory footprints <ref type="bibr" target="#b166">[167]</ref>. For example, in the work of Cavazos et al. <ref type="bibr" target="#b50">[51]</ref>, there were 4 registers on the AMD Athlon that could collect performance counter events; however, 60 different events could be collected. "By multiplexing the use of special registers, it is possible to collect anywhere between 4 and 60 types of events per run" <ref type="bibr" target="#b50">[51]</ref>. A downside of using performance counters to characterize applications is its limited reuse for other platforms. The metrics collected are solely intended for the platform the data was collected on, reducing the platform portability.</p><p>There are tools publicly available to collect such metrics as suggested by References <ref type="bibr" target="#b82">[83,</ref><ref type="bibr" target="#b168">169,</ref><ref type="bibr" target="#b200">201]</ref>, such as PAPI <ref type="bibr" target="#b181">[182]</ref>. PAPI is able to specify a standard application programming interface (API) on different architectures for collecting "portable" hardware-specific performance counters.</p><p>Monitoring these events helps the tuning process by constructing a correlation between the type of object code and the performance of that code on the target architecture. Triantafyllis et al. <ref type="bibr" target="#b250">[251]</ref> used PFMon <ref type="bibr" target="#b127">[128]</ref>, another notable performance monitoring tool when executing programs for the Intel Itanium platform.</p><p>Cavazos et al. <ref type="bibr" target="#b50">[51]</ref> proposed an offline machine-learning-based model that can be used to predict a good set of compiler optimization sequences. Their method uses performance counters to construct an application's feature vector and use them to predict good compiler optimization sequences. The authors showed that using this method, they could outperform existing static techniques, because they were able to capture memory and cache behaviors of applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.2.2</head><p>Architecture Independent Characterization. The information collected from a dynamic characterization, referred to as feature vector, is a compact summary of an application's dynamic behavior at run-time. This information summarizes essential aspects of an application's running performance, i.e., number of cache misses or the utilization of floating point unit <ref type="bibr" target="#b50">[51]</ref>. However, the information can be inaccurate or misleading if the application is run on different target architectures. Variances may exist between different targets such as cache size, execution ports, and scheduling algorithms. Architecture-dependent counters, while accurate, are unable to be used in a cross-platform manner. Because of this limitation, researchers proposed a different way of collecting dynamic behaviors that can be ported to other platform if they have the same instruction set architecture (ISA), i.e., X86_64. This way of collecting features are known as instrumentation and are done using the dynamic program analysis tools.</p><p>Intel Pin <ref type="bibr" target="#b164">[165]</ref> is a noteworthy framework that enables an instrumented collection. Pin is a dynamic binary instrumentation tool that analyzes a binary as it executes on a given architecture. Microarchitecture-independent workload Characterization of Applications (MICA) <ref type="bibr" target="#b120">[121]</ref> is an example of a Pintool that is capable of collecting a number of program features at run-time. These collected features are independent from the microarchitecture and consider components such as the branch predictor, memory footprint, and other components that exist across various architectures instead of the specific program counters previously mentioned.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Hybrid Characterization</head><p>The hybrid characterization technique consists of the combination of the previously known technique in a way that adds more information on the application under analysis. In some cases <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b199">200]</ref>, hybrid feature selection can more accurately capture application behaviors, since different levels of feature extraction are considered.</p><p>Park et al. <ref type="bibr" target="#b199">[200]</ref> used HERCULES, a pattern-driven tool to characterize an application <ref type="bibr" target="#b132">[133,</ref><ref type="bibr" target="#b133">134]</ref>. This characterization technique is suitable for identifying interesting patterns within an application. They used HERCULES to construct prediction models that effectively select good sets of compiler optimization sequences given an application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Dimension Reduction Techniques</head><p>In the studied literature, a dimension-reduction process is important for three main reasons: (i) it eliminates the noise that may perturb further analyses, (ii) it reduces the size and training time of a model, and (iii) it improves understanding of the feature space. The techniques used are mainly Principal Component Analysis (PCA) <ref type="bibr" target="#b129">[130]</ref>, and Exploratory Factor Analysis (EFA) <ref type="bibr" target="#b112">[113]</ref>. Reducing the input feature space for a machine-learning algorithm may yield better learning results; however, the type of feature reduction used can be an important factor itself <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b20">21]</ref>. For instance, PCA was used in the original work proposed by Ashouri et al. <ref type="bibr" target="#b14">[15]</ref>, but later the authors revised the model by exploiting EFA and observed clear benefits <ref type="bibr" target="#b20">[21]</ref>. We elaborate more on these methods in latter sections of the survey. Table <ref type="table" target="#tab_2">3</ref> classifies the use of each technique in the studied literature.</p><p>Let γ be a characterization vector having all feature data of an application's execution. This vector represents l variables to account for either the static, dynamic or a hybrid analyses. Let us consider a set of feature vectors representing the application characterization profiles A consisting of m vectors γ . The feature vectors can be organized in a matrix P with m rows and l columns. Each </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classification</head><p>References Principal Component Analysis (PCA) <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b60">61,</ref><ref type="bibr" target="#b77">78,</ref><ref type="bibr" target="#b141">142,</ref><ref type="bibr" target="#b197">198,</ref><ref type="bibr" target="#b198">199,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b247">248]</ref> Factor Analysis (FA) <ref type="bibr" target="#b20">[21]</ref> vector γ (a row in P) includes a large set of characteristics obtained through analysis. Many of these application characteristics (columns of matrix P) are correlated to each other in complex ways, while other characteristics may have no apparent correlation. "Both PCA and FA are statistical techniques aimed at identifying a way to represent γ with a shorter vector α while minimizing the information loss. Nevertheless, they rely on different concepts for organizing this reduction" <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b112">113,</ref><ref type="bibr" target="#b246">247]</ref>. In both cases, output values are derived by applying the dimension reduction and no longer directly representing a certain feature. Contrary to PCA, where the components are given by a combination of the observed features, EFA has factors represent a hidden process behind the feature generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1">Principal Component Analysis.</head><p>The goal is to identify a summary of γ . A second vector, ρ, of the same length of γ (l) is organized by some extracted variable change. ρ is calculated with a linear combination of the elements in γ . The combination of γ 's elements yielding ρ is decided upon the analysis of the matrix P. All elements in ρ are orthogonal (uncorrelated) and are sorted by their variance. Because of these two properties, the first elements of ρ (also named principal components) carry most of the information of γ . The reduction can be obtained by generating a vector α that keeps only the k most significant principal components in ρ. Note that principal components in ρ are not meant to have a meaning; they are only used to summarize the vector γ as a signature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">Factor Analysis.</head><p>It explains the correlation between the different variables in γ . Correlated variables in γ are likely to depend on the same hidden variable in α . The relationship between α and the observed variables is obtained by exploiting the maximum likely method based on the data in matrix P. When adopting PCA, each variable in α tends to be composed of all variables in γ . Because of this characteristic, it is difficult to tell what a specific component in PCA space represents. When adopting EFA, the components α tend to depend on a smaller set of elements in γ that correlate with each other. α is a compressed representation of γ , where elements in γ that are correlated (i.e., that carry the same information) are compressed into a reduced number of elements in α .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MACHINE-LEARNING MODELS</head><p>Machine learning investigates the study and construction of techniques and algorithms that are able to learn certain attributes from data and make predictions on them <ref type="bibr" target="#b176">[177]</ref>. Many types and subfields of machine learning exist, so we chose to classify them based on three broad categories: (i) Supervised learning, (ii) Unsupervised learning, and (iii) Other Methods (including reinforcement learning, graph-based technique, and statistical methods). The classification is depicted in Table <ref type="table" target="#tab_3">4</ref>. In each subsection, we provide an overview of the method and provide a summary of the notable related work. When adapting an application of machine learning to compilers, the general optimization problem is to construct a function that "takes as input a tuple (F ,T ), where F is the feature vector of the collected characteristics of an application being optimized" <ref type="bibr" target="#b198">[199]</ref>; and T is one of the several possible compiler optimization sequences applied to this application. Its output may be a predicted speedup value of T , or depending on the scenario, the predicted optimization Reinforcement Learning <ref type="bibr" target="#b65">[66,</ref><ref type="bibr" target="#b171">172,</ref><ref type="bibr" target="#b172">173]</ref> sequence of T , when applied to the original code <ref type="bibr" target="#b198">[199]</ref>. There are other prediction types that we discuss and classify in details in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Supervised Learning</head><p>Supervised learning is the subclass of machine learning that deals with learning a function from labeled data in the training set <ref type="bibr" target="#b75">[76,</ref><ref type="bibr" target="#b176">177]</ref>. The learner receives a set of labeled examples as training data and makes predictions for all unseen points. This is the most common scenario associated with classification, regression, and ranking problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Bayesian</head><p>Networks. Bayesian Networks (BN) <ref type="bibr" target="#b94">[95,</ref><ref type="bibr" target="#b203">204]</ref> are powerful classifiers to infer the probability distribution variables, which can be binary as well, that characterize a certain attribute such as the optimality of compiler optimization sequences. "A Bayesian Network is a direct acyclic graph whose nodes are variables and whose edges are the inter-dependencies between them" <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21]</ref>. Computed probabilities of those observed variables categorized under nodes can be further used as input to the model as evidence. The probability distributions of compiler optimizations depend on the program features and the relationship between the different optimizations that are applied. Ashouri et al. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21]</ref> proposed a Bayesian Network approach to infer the best compiler optimizations suitable for an embedded processor. The approach uses static, dynamic, and hybrid features of an application as evidence to the trained networks. Rather than using all training data, the authors proposed to base their training data on only those instances of compiler sequences having the best 15% speedup w.r.t. the GCC's standard optimization level -O3. This way, BN is trained with only good sequences of optimizations and subsequently ables to populates the optimal solutions for an unseen application. The evaluations were carried out with Cbench <ref type="bibr" target="#b96">[97]</ref> and Polybench <ref type="bibr" target="#b113">[114,</ref><ref type="bibr" target="#b210">211]</ref> suites and the authors showed that employing BN with an iterative compilation outperforms GCC's -O2 and -O3 by around 50%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>96:13</head><p>4.1.2 Linear Models and SVMs. Linear models are one of the most popular supervised learning methods to be widely used by researchers in tackling many machine-learning applications. "Linear regression, nearest-neighbor, and linear threshold algorithms are generally very stable" <ref type="bibr" target="#b75">[76]</ref>. Linear models are algorithms whose output classifier does not yield dramatic fluctuation against minor changes in the training set. Moreover, "SVMs are a type of supervised machine-learning technique, can be used for both regression and classification scenarios" <ref type="bibr" target="#b200">[201]</ref>. In SVMs, there are algorithms that can adapt linear methods to a non-linear class of problems using a technique called kernel trick <ref type="bibr" target="#b223">[224]</ref>. Aside from constructing hyperplane or a set of hyperplanes in an highdimensional space, SVMs can find the best hyperplane (so-called maximum margin clustering <ref type="bibr" target="#b136">[137,</ref><ref type="bibr" target="#b198">199]</ref>).</p><p>Sanchez et al. <ref type="bibr" target="#b216">[217]</ref> proposed to SVMs to learn models to focus on autotuning the JIT compiler of IBM Testarossa and the build compilation plan. They used scalar features to construct feature vectors and employed the learning scheme of SVMs to experimentally test the quality of their model using a single-iteration and 10-iteration scenarios on SPECjvm98 benchmark suite.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Decision Trees and Random Forests.</head><p>A binary decision tree is a tree representation of a partition of the feature space. Decision trees can be defined using more complex node questions resulting in partitions based on more complex decision surfaces <ref type="bibr" target="#b176">[177]</ref>. Random forests, or random decision forests, are an ensemble learning method that use multiple learning methods to provide a better prediction for regression and classification purposes. Random forests start by constructing many decision trees at training time and output the class that fits the mode of classes (in the case of classification) or means of classes (in the case of regression). "Random decision forests correct decision trees' habit of overfitting to their training set" <ref type="bibr" target="#b75">[76,</ref><ref type="bibr" target="#b93">94]</ref>.</p><p>Fraser et al. <ref type="bibr" target="#b91">[92]</ref> proposed to use machine learning to perform code compression. It used the IR structure of codes to automatically infer a decision tree that separates intermediate representation code into a stream that compresses more efficiently. They evaluated their code compression approach with GCC and used opcodes that can also help predict elements of the operand stream.</p><p>Monsifrot <ref type="bibr" target="#b177">[178]</ref> addressed the automatic generation of optimization heuristics for a target processor through machine learning. They used decision trees to learn the behavior of the loop unrolling optimization on the code being studied to decide whether to unroll on UltraSPARC and IA-64 machines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">Graph Kernels.</head><p>Graph kernels construct a low-dimensional data representation by a cost function that preserves properties of the data. "The use of kernel functions is very attractive, because the input data does not always need to be expressed as feature vectors" <ref type="bibr" target="#b142">[143,</ref><ref type="bibr" target="#b185">186,</ref><ref type="bibr" target="#b197">198]</ref>. Graph kernels are emerging as a means of exploiting many different machine-learning applications on a wide range of applications from semi-supervised learning <ref type="bibr" target="#b56">[57]</ref> to clustering and classification <ref type="bibr" target="#b47">[48]</ref>.</p><p>Park et al. <ref type="bibr" target="#b197">[198]</ref> proposed the use of graph kernels to characterize an application. The authors used the control flow graph of programs. Instead of flattening the control flow graph information into a fixed-length characterization vector, the authors created a similarity matrix to feed into SVM algorithm using the shortest path graph kernel <ref type="bibr" target="#b45">[46]</ref>. The output of the shortest path graph kernel is a similarity score between two graphs. They evaluated the approach by using a model for both non-iterative and iterative fashion on two multicore systems. GCC and Intel compiler were the two back-end compilers once the code passed through a polyhedral source-to-source compiler. Finally, they compared the proposed model against using static features derived by MilepostGCC, performance counters, and 5-Reactions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.5">Other Supervised Methods.</head><p>For conciseness purposes, we decided to classify other supervised learning methods under this subsection. These include Neural Networks, ANOVA, K-nearest neighbor, Gaussian process learning <ref type="bibr" target="#b176">[177]</ref>, and so on.</p><p>Moss et al. <ref type="bibr" target="#b179">[180]</ref> showed a machine-learning process to construct heuristics for instruction scheduling, more specifically, scheduling a straight-line code. They used static and IR features of the basic block with the SPEC benchmark to experimentally evaluate their approach by using Geometric mean as fitness function and fold-cross-validation.</p><p>Cavazos and Moss <ref type="bibr" target="#b51">[52]</ref> used the JIT Java compiler and SPECjvm98 benchmarks with a rule set induction learning model to decide whether to schedule instructions. They exploited supervised learning to induce heuristics to predict which blocks should schedule to maximize the benefit where the induced function acts as a binary classification. The authors experimentally showed they could obtain at least 90% of scheduling improvement for every block while spending at most 25% of the needed effort.</p><p>Haneda et al. <ref type="bibr" target="#b115">[116]</ref> introduced a statistical model to build a methodology that reduces the size of the optimization search space, thus allowing a smaller set of solutions for exploring strategies. They showed that the technique found a single compiler sequence across a set of SPECint95 benchmarks that could perform better on average against the GCC's standard optimization set.</p><p>Tournavitis et al. <ref type="bibr" target="#b249">[250]</ref> proposed a technique using profile-driven parallelism detection in which they could improve the usability of source code features. The proposed approach enabled the authors to identify and locate more parallelism on an application with user feedback required at the final stage. Moreover, the authors exploit a machine-learning-based prediction mechanism that replaces the target-specific mapping heuristic. This new mapping scheme made better mapping decisions while being more scalable and practical to use on other architectures.</p><p>Namolaru et al. <ref type="bibr" target="#b182">[183]</ref> proposed a general method for systematically generating numerical features from an application. The authors implemented the approach on GCC. This method does not place any restriction on how to logically and algebraically aggregate semantical properties into numerical features. Therefore, it statistically covers all relevant information that can be collected from an application. They used static features of MilePost GCC and MiBench to evaluate their approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Unsupervised Learning</head><p>Unsupervised learning is the machine-learning task of inferring a function to describe hidden structure from unlabeled data. Since the examples given to the learner are unlabeled, there is no error or reward signal to evaluate a potential solution <ref type="bibr" target="#b116">[117,</ref><ref type="bibr" target="#b176">177]</ref>. Unsupervised learning is closely tightened with the problem of density estimation in statistics <ref type="bibr" target="#b230">[231]</ref>; however, unsupervised learning also encompasses many other techniques that seek to summarize and explain key features of the data such as the use of evolutionary algorithms. In unsupervised learning targets do not exist, but an environment that permits model evaluation does exist. An environment can score a model with some value, i.e., which is the value passed to a model's objective function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Clustering Methods.</head><p>One of unsupervised learning's key subclasses is clustering. Clustering helps to downsample the chunk of unrelated compiler optimization passes into meaningful clusters that correspond to each other, i.e., targets loop-nests or scalar values, or they should follow each other in the same sequence. The other importance of clustering and downsampling is to reduce the compiler optimization space, which can be tens of thousands orders of magnitude smaller (mentioned in Section 2.3).</p><p>Thomson et al. <ref type="bibr" target="#b247">[248]</ref> proposed a methodology to decrease the training time of a machinelearning-based autotuning. They proposed to use a clustering technique, namely Gustafson Kessel algorithm <ref type="bibr" target="#b31">[32]</ref>, after applying the dimension reduction process. They evaluated the clustering approach on the EEMBCv2 benchmark suite and showed a factor of seven on reducing the training time with the proposed approach.</p><p>Ashouri et al. <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b28">29]</ref> developed a hardware/software co-design toolchain to explore compiler design space jointly with microarchitectural properties of a VLIW processor. The authors have used clustering to derive to four good hardware architectures followed by mitigating the selection of promising compiler optimization with statistical techniques such as Kruskal-Wallis test and Pareto-optimal filtering. (This method is involved with statistical methods as well. Refer to Section 4.1.5.)</p><p>Martins et al. <ref type="bibr" target="#b169">[170,</ref><ref type="bibr" target="#b170">171]</ref> tackled the problem of phase-ordering by a clustering-based selection method for grouping functions with similarities. Authors used DNA encoding where program elements (e.g., operators and loops in function granularity) are encoded in a sequence of symbols and followed by calculating the distance matrix and a tree construction of the optimization set. Finally, they applied the optimization passes already included in the optimization space to measure the exploration speedup versus the state-of-the-art techniques such as Genetic algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Evolutionary Algorithms.</head><p>Evolutionary algorithms are inspired by biological evolution such as the process of natural selection and mutation. Candidate solutions in the optimization space play the role of individuals in a population. A common practice to identify the quality of solutions is using a fitness function such as an execution speedup. Evolution of the population takes place after the repeated application of the fitness function <ref type="bibr" target="#b176">[177]</ref>. Here, we briefly mention some of the more notable techniques used in the literature.</p><p>Genetic Algorithm (GA) is a meta-heuristic algorithm under this class that can be paired with any other machine-learning technique or be used independently. A notable fast GA heuristic is NSGA-II (Non-dominated Sorting Genetic Algorithm II) <ref type="bibr" target="#b74">[75]</ref>, which is a popular method for many multi-objective optimization problems and have had numerous applications mostly in the computer architecture domain <ref type="bibr" target="#b167">[168,</ref><ref type="bibr" target="#b228">229]</ref>. NSGA-II is shown to alleviate the computational complexity of classic GA algorithms.</p><p>Another interesting evolutionary model is Neuro Evolution of Augmenting Topologies (NEAT) <ref type="bibr" target="#b233">[234]</ref>. They proved to be a powerful model for learning complex problems, since they are able to change the network topology and parameter weight to find the best-balanced fitness function. NEAT specifically has been used in many notable recent research work as well <ref type="bibr" target="#b65">[66,</ref><ref type="bibr" target="#b150">151,</ref><ref type="bibr" target="#b151">152]</ref>. This section summarized a few notable research work that used evolutionary algorithms.</p><p>Cooper et al. <ref type="bibr" target="#b68">[69,</ref><ref type="bibr" target="#b69">70]</ref> addressed the code size issue of the generated binaries by using genetic algorithms. The results of this approach were compared to an iterative algorithm generating fixed optimization sequence and also at random frequency. Given the comparison, the authors concluded that by using their GAs they could develop new fixed optimization sequences that generally work well on reducing the code-size of the binary.</p><p>Knijnenburg et al. <ref type="bibr" target="#b141">[142]</ref> proposed an iterative compilation approach to tackle the selection size of the tiling and the unrolling factors in an architecture-independent manner. The authors evaluated their approach using a number of state-of-the-art iterative compilation techniques, e.g., simulated annealing and GAs, and a native Fortran77 or g77 compiler enabling optimizations for Matrix-Matrix Multiplication (M×M), Matrix-Vector Multiplication (M×V), and Forward Discrete Cosine Transform.</p><p>Agakov et al. <ref type="bibr" target="#b2">[3]</ref> adapted a number of models to speed up the exploration of an iterative compilation space. The methodology exploits a Markov chain oracle and an independent identically distributed (IID) probability distribution oracle. The authors gained significant speedup by guiding their iterative compilation using these two models when tested on unseen applications. When predicting the best optimizations given an unseen application, they use a nearest-neighbor classifier. First, it identifies the training application having the smallest Euclidean distance in the feature vector space (derived by PCA). Then, it learns the probability distribution of the best compiler optimizations for this neighboring application either by means of the Markov chain or IID model. The probability distribution learned is then used as the predicted optimal distribution for the new application. The Markov chain oracle outperformed the IID oracle, followed by the RIC methodology using a uniform probability distribution.</p><p>Leather et al. <ref type="bibr" target="#b154">[155]</ref> used a grammatical evolution-based approach with a genetic algorithm to describe the feature space. The authors showed that the selection of the right features for a compiler can lead to substantial performance improvement to the quality of machine-learning heuristic. They described the space formed by the features with a grammar and then they generated many features from it. These generated features are later used in the predictive modeling to search the optimization space using GCC and Mediabench and experimentally validate the proposed approach on a Pentium machine.</p><p>Kulkarni et al. developed two approaches to tackle both optimization selection <ref type="bibr" target="#b151">[152]</ref> and phaseordering <ref type="bibr" target="#b150">[151]</ref>. The approach for selecting the good compiler passes is done using NEAT and static features to tune the Java Hotspot compiler with SPEC Java benchmarks (using two benchmarks for training and two for testing). The authors used NEAT to train decision trees for the caller and the callee whether to inline. When addressing the phase-ordering problem, they proposed an intermediate speedup prediction method that used static features of the current state of the application being studied to query the model and induce the current best optimization to use. This way, iteratively a compiler sequence is formed on an application-based manner.</p><p>Purini et al. <ref type="bibr" target="#b211">[212]</ref> defined a machine-learning-based approach to downsample a set of compiler optimization sequences within LLVM's -O2 and applied machine learning to train a model. The authors introduced a clustering algorithm to cluster sequences based on the similarity matrix by calculating the Euclidean distance between the two sequence vectors. In the experimental evaluation, they have mentioned the most frequent optimization passes with their fitness function (execution speedup) as well. Later, Ashouri et al. <ref type="bibr" target="#b18">[19]</ref> used such similarity matrix for LLVM's -O3 passes to speed up the exploration, or recommendation, of predicted sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Reinforcement Learning</head><p>Reinforcement learning (RL) is an area of machine learning that cannot be classified as supervised or unsupervised. It is inspired by behaviorist psychology and uses the notion of rewards or penalties so that a software agent interacts with an environment and maximizes his cumulative reward. The interesting difference in RL is that the training and testing phases are intertwined <ref type="bibr" target="#b176">[177]</ref>. RL uses Markov decision process (MDP) <ref type="bibr" target="#b123">[124]</ref> to adapt and interact with its environments. In this section, we have provided the works done with RL in the field.</p><p>McGovern et al. <ref type="bibr" target="#b171">[172]</ref> presented two methods of building instruction scheduler using rollouts, an improved Monte Carlo search <ref type="bibr" target="#b245">[246]</ref>, and a reinforcement learning. The authors showed that the combined reinforcement learning and rollout approach could outperform the commercial Compaq scheduler on evaluated benchmarks from SPEC95 suite.</p><p>Coons et al. <ref type="bibr" target="#b65">[66]</ref> used NEAT as a reinforcement learning tool for finding good instruction placements for an EDGE architecture. The authors showed that their approach could outperform stateof-the-art methods using simulated annealing to find the best placement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">PREDICTION TYPES</head><p>The major classes of prediction type are: (i) to predict the right set of compiler optimizations to be used, (ii) to predict the speedup of a compiler optimization sequence without actually executing  <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151,</ref><ref type="bibr" target="#b198">199,</ref><ref type="bibr" target="#b200">201,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b250">251]</ref> Feature Prediction <ref type="bibr" target="#b65">[66,</ref><ref type="bibr" target="#b72">73,</ref><ref type="bibr" target="#b76">77,</ref><ref type="bibr" target="#b156">157,</ref><ref type="bibr" target="#b201">202,</ref><ref type="bibr" target="#b252">253]</ref> the sequence, (iii) to predict the right set of features to be used to characterize the application, (iv) the intermediate speedup (tournament) prediction, and (v) the reduction of the search space through down-sampling of optimizations. Table <ref type="table" target="#tab_4">5</ref> shows the classification of the related literature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Clustering and Downsampling</head><p>Clustering, or a cluster analysis, is the task of investigating the similarities between a set of variables in such a way that similar variables can be placed into the same group called a cluster. Clustering is most commonly used in the field of data mining and a common technique for statistical data analysis. Cluster analysis is used in many fields including unsupervised machine learning, pattern recognition, and compiler autotuning <ref type="bibr" target="#b176">[177]</ref>. To approach reasonable solutions to the compiler optimization problems, the optimization search space needs to be reduced. Researchers try to find ways to decrease the enormous size of the optimization space by orders of magnitudes. This technique, known as downsampling, has been used in many recent works. We mention these papers in Table <ref type="table" target="#tab_4">5</ref>.</p><p>Ashouri et al. <ref type="bibr" target="#b18">[19]</ref> presented a full-sequence speedup predictor for the phase-ordering problem that rapidly converges to optimal points and outperforms both standard optimization levels and the state-of-the-art ranking approach <ref type="bibr" target="#b197">[198,</ref><ref type="bibr" target="#b198">199]</ref>. The authors applied a clustering technique on all optimization passes available in LLVM's -O3 and trained their model using the resulted subsequences. The infeasibly large phase-ordering space is reduced to a fairly big yet explorable using iterative compilation and a machine-learning method. The authors showed their approach could outperform LLVM's highest optimization level and other existing speedup predictors with just a few predictions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Speedup Prediction</head><p>Speedup predictive modeling is the process of constructing, testing, and validating a model to predict an unobserved timing outcome. The model is constructed based on the characterization of a state. The state being characterized is the code being optimized and the predicted outcome corresponds to the speedup metric calculated by normalizing the execution time of the current optimization sequence by the execution time of the baseline optimization sequence. "The general form of a speedup predictor is to construct a function that takes as input a tuple (F ,T ), where F is the collected feature vector of the of an application being optimized" <ref type="bibr" target="#b198">[199]</ref>. T can be one of the many possible compiler optimization sequences in the design space. The model's output is the predicted value of a speedup that the sequence T is to achieve when applied to the application's source-code in its original state. This prediction type is one of the more widely used among the researchers, and here we mention some of its notable usages.</p><p>Dubach et al. <ref type="bibr" target="#b77">[78,</ref><ref type="bibr" target="#b78">79]</ref> proposed a speedup predictor based on the source code features of the optimized applications. The authors used static features from SUIF compiler infrastructure <ref type="bibr" target="#b265">[266]</ref> for VLIW and compared the result with non-feature-based alternative predictors such as mean predictors, sequence encoding-based predictors, and reaction-based predictors.</p><p>Park et al. <ref type="bibr" target="#b197">[198]</ref><ref type="bibr" target="#b198">[199]</ref><ref type="bibr" target="#b199">[200]</ref><ref type="bibr" target="#b200">[201]</ref><ref type="bibr" target="#b201">[202]</ref> proposed several predictive modeling methodologies to tackle the problem of selecting the right set of compiler optimizations. In Reference <ref type="bibr" target="#b197">[198]</ref>, the authors used Control Flow Graphs (CFGs) with graph kernel learning to construct a machine-learning model. First, they constructed CFGs by using the LLVM compiler and convert the CFGs to Shortest Path Graphs (SPGs) by using the Floyd-Warshall algorithm. Then, they apply the shortest graph kernel method <ref type="bibr" target="#b45">[46]</ref> to compare each one of the possible pairs of the SPGs and calculate a similarity score of two graphs. They calculated similarity scores for all pairs are saved into a matrix and directly fed into the selected machine-learning algorithm, specifically SVMs in their work. Later, in Reference <ref type="bibr" target="#b198">[199]</ref>, instead of using hardware-dependent features, authors used static features from the source-code on a polyhedral space and predict the performance of each high-level complex optimization sequence with trained models. In a later work <ref type="bibr" target="#b199">[200]</ref>, they used user-defined patterns as program features, named HERCULES <ref type="bibr" target="#b132">[133]</ref>, to derive arbitrary patterns coming from users. They focused on defining patterns related to loops: the number of loops having memory accesses, having loop-carried dependencies, or certain types of data dependencies. These works use static program features mainly focusing on loop and instruction mixes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Compiler Sequence Prediction</head><p>A compiler sequence predictor is a type of prediction model that outputs the best set of compiler passes or sequences to apply on a given application. Application characterization is fed to this model, and the model induces a prediction of a set of compiler passes ō ∈ O to apply to the given application. The objective could be configurable-it could maximize its performance or fulfill other objectives such as code size or energy consumption <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b200">201]</ref>. This specific prediction type has attracted the most interest among research, and we have seen the bulk of work addressing this. Here, we discuss a few notable contributions.</p><p>Cavazos et al. <ref type="bibr" target="#b50">[51]</ref> investigated the problem of selecting the right set of compiler optimizations by means of dynamic characteristics of an application under analysis. The authors used logistic regression for model construction and showed that using their approach could outperform existing techniques used by static code features and rapidly reaching the achievable speedup.</p><p>Ashouri et al. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21]</ref> proposed a Bayesian Network (BN) approach that was fed by either of static, dynamic or a hybrid characterization vector of an application. The BN model could subsequently induce a probabilistic model. The authors combined their model with iterative compilation to derive good compiler sequences and experimentally showed they could outperform the stateof-the-art models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Tournament and Intermediate Prediction</head><p>A tournament predictor, proposed by Reference <ref type="bibr" target="#b200">[201]</ref>, predicts a binary classification between two input optimization sequences. This type of predictor can rank compiler sequences accordingly and select the best among them. However, intermediate speedup predictor (also referred to as Reactionbased modeling <ref type="bibr" target="#b49">[50]</ref>) <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151]</ref> is a prediction model that tends to iteratively predict the speedup of the current state of an application being optimized. Applications' characteristics in each state along with the compiler sequence T serves as input, and the model predicts the speedup T should achieve. Since intermediate speedup predictors behave more or less the same as a tournament predictor, as both work on individual optimizations at a time to be applied on the current state, we decided to group these two under one classification. An intermediate sequence approach needs multiple execution profiles of the application being optimized; therefore, it tends to be slower in comparison to other methods. Nevertheless, it has been shown an effective method specifically to tackle the phase-ordering problems <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151]</ref>.</p><p>Park et al. <ref type="bibr" target="#b200">[201]</ref> have proposed tournament predictors in order classify whether an optimization should be applied as an immediate optimization. Park et al. evaluated three prediction models using program counters (PC) derived by PAPI <ref type="bibr" target="#b181">[182]</ref>: sequence, speedup, and tournament on several benchmarks (Polybench, NAS, etc.) using the Open64 compiler. They showed on many occasions tournament predictors can outperform other techniques.</p><p>Kulkarni and Cavazos <ref type="bibr" target="#b150">[151]</ref> developed an intermediate speedup predictor using NEATs that selects the best order of compiler optimization passes iteratively based on its current state. They evaluated their approach using JAVA Jikes dynamic compilers and observed on average 5-10% speedup when adjusting the different ordering of the phases.</p><p>Ashouri et al. <ref type="bibr" target="#b17">[18]</ref> demonstrated a predictive methodology to predict the intermediate speedup obtained by an optimization from the configuration space given the current state of the application. The authors used dynamic features of an application for their prediction model unlike the work of Kulkarni and Cavazos <ref type="bibr" target="#b150">[151]</ref>. They also used speedup values between the execution times of the program before and after the optimization process as their fitness function and defined heuristics to traverse the optimization space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Feature Prediction</head><p>Constructing a model from empirical data must have minimal user intervention. The accuracy of predictions is heavily related to the type of features and characterization collected from an application under optimization process. Therefore, feature prediction models are advantageous to use for learning the most promising features affecting performance. During this process, choosing the right set of features to characterize an application is crucial.</p><p>Vaswani et al. <ref type="bibr" target="#b252">[253]</ref> used empirical data to construct a model that is sensitive to microarchitecture parameters and compiler optimization sequences. The proposed model automatically learns the relationship from data and constructs automatic heuristics. The authors evaluated their approach using SPEC-CPU2000 and GCC compiler and on average attained performance improvement over 10% higher than the highest standard optimization levels available with GCC.</p><p>Li et al. <ref type="bibr" target="#b156">[157]</ref> used a machine-learning-based optimization focused on feature processing. The authors adapted this method based on an application under analysis and apart from predefined source code features. They developed an approach to automatically generate several features of an application to be fed to a model constructor using a template. Furthermore, they observed fluctuation on the values of the features when using different compiler optimizations and alleviated this by designing a feature extractor to iteratively extract the required features at runtime to be fed to the optimization model.</p><p>Ding et al. <ref type="bibr" target="#b76">[77]</ref> proposed an autotuning framework capable of incorporating different inputs in a two-level approach to overcome the challenge of input sensitivity. They leveraged the Petabricks language and compiler <ref type="bibr" target="#b9">[10]</ref> and used an input-aware learning technique to differentiate between inputs. The work clustered the space and chose its centroid for autotuning (i) to identify a set of configurations for each class of inputs, and (ii) to identify a production classifier that allowed them to efficiently identify the best landmark optimization to use for a new input. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classification References</head><p>Adaptive Compilation <ref type="bibr">[6, 10, 11, 41, 51, 55, 62, 67, 69, 70, 77, 79, 83, 91, 96, 98, 99, 101, 105, 107, 108, 116, 122, 123, 146, 151, 155, 162, 163, 166, 169, 183, 189, 196, 197, 206, 217, 219, 235-237, 240, 253, 260, 267]</ref> Iterative Compilation <ref type="bibr">[1, 3, 6, 10, 11, 15, 16, 16, 18, 19, 21, 28, 29, 38, 39, 42, 50, 51, 53-55, 58, 61, 67, 69, 70, 77-79, 83, 91, 96, 98-101, 105-108, 116, 122, 123, 135, 136, 142, 143, 146-153, 155, 160, 162, 163, 163, 166, 169-171, 183-186, 189, 196-202</ref> In a broader perspective, the strategies are derived by the desired type of optimization space exploration. Design space exploration (DSE) is the activity of exploring design alternatives before implementation. Historically, it has been used at system-level design, but the methodologies can be adapted to use at compiler-level exploration as well <ref type="bibr" target="#b28">[29]</ref>. DSE helps to define and follow exploration policies that undertake generation of candidates within certain or all optimization space and has been proven useful for many optimization tasks <ref type="bibr" target="#b144">[145]</ref>. In general, different applications could impose different energy and performance requirements. The main goal of this phase is to efficiently traverse and configure the exploration parameters <ref type="bibr" target="#b191">[192,</ref><ref type="bibr" target="#b193">194]</ref>. In this section, we classify the different exploration strategies used by researchers in literature to overcome this challenge. Table <ref type="table" target="#tab_5">6</ref> represents our fine-grain classification of the different related works based on the exploration type.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Adaptive Compilation</head><p>Adaptive optimization <ref type="bibr" target="#b259">[260]</ref>, also known as profile-guided optimization, is a technique where the optimization space is explored based on the outcome of fitness functions, e.g., execution time to profile the executable and dynamically modifies/recompiles certain segments of an application under optimization. The profiling provides enough features so the compiler can decide on what portion of the code to be recompiled. An adaptive compiler is placed between a just-in-time (JIT) compiler and an interpreter of instructions. As suggested by Reference <ref type="bibr" target="#b66">[67]</ref>, an adaptive compiler can benefit from a compilation-execution feedback loop to select the best optimization that satisfies the objectives of a scenario. The following works go over the state of the art and practice with profile-guided optimization. Cooper et al. <ref type="bibr" target="#b66">[67,</ref><ref type="bibr" target="#b69">70]</ref> developed an adaptive compiler, ACME, and a user-interface to control the process of recompilation and exploration of different compiler optimizations. The authors introduced virtual execution-a technique to mitigate the concurrent execution of code being optimized. By running an application once, this technique helps to keep a record of information needed to estimate the run-time performance of different compiler optimization sequences without the need to re-run the application again. This technique was later referred to as speedup prediction <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151,</ref><ref type="bibr" target="#b200">201]</ref>.</p><p>Fursin and Cohen <ref type="bibr" target="#b98">[99]</ref> built an iterative and adaptive compiler framework targeting the SPEC benchmark suite using a modified version of GCC. The authors also developed a transparent framework that reused all the compiler program analysis routines from a program transformation database to avoid duplicates in external optimization tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Iterative Compilation</head><p>In computer science, an iterative method is a sequence of approximated procedures that are applied to further improve the quality of the solution of a problem. Iterative compilation is the most commonly used exploration technique for the compiler optimization field. Many recent works found this technique interesting and successful either (i) alone <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b142">143]</ref>, (ii) combined with machinelearning techniques <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b50">51]</ref>, or (iii) combined with other search and meta-heuristics techniques such as random exploration <ref type="bibr" target="#b41">[42]</ref> and DSE techniques <ref type="bibr" target="#b169">[170,</ref><ref type="bibr" target="#b184">185]</ref>.</p><p>Bodin et al. <ref type="bibr" target="#b41">[42]</ref> investigated an early path towards analysis of the applicability of iterative search techniques in program optimization. The authors showed that iterative compilation is feasible to practice on embedded applications where the primary cost is paid back by fabrication and distribution at scale. An embedded application usually considers with fewer parameters, so the cost of iterative compilation is worthwhile on small parameter counts. They used profile feedback in the form of execution time and to downsample the space on restricted optimization passes. In this work, the authors investigated unrolling, tiling, and padding parameters. Later, Other researchers, inspired by the iterative approach, explored other optimization parameters to scalar, loop-nest, and other optimizations <ref type="bibr">[16, 29, 83, 106, 139-141, 201, 209]</ref>.</p><p>Triantafyllis et al. <ref type="bibr" target="#b250">[251]</ref> proposed a generic optimizer that used practical iterative compilation framework called Optimization-Space Exploration (OSE). Their approach involved using compiler writer's knowledge to prune and exclude several configuration parameters in the design space. The OSE had function granularity and could apply different optimizations on the same code segments. They used an iterative method for selecting the next compiler optimization to be used based on the current state of the application being optimized. A sub-classification of this approach was later named as intermediate speedup prediction <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Non-Iterative Compilation</head><p>Unlike iterative compilation, a non-iterative approach tries to presents a global optimization approach for a class of compiler optimization problem. Fewer recent works are observed tackling compiler optimization problems using this method <ref type="bibr" target="#b155">[156]</ref>. As we noted in Section 1, the driving force towards using approximation methods such as iterative compilation and machine learning was the inability of researchers to tackle the phase-ordering problem using straightforward noniterative approaches. Thus, this branch of compiler autotuning has suffered from further investigation. The polyhedral compilation community has gained attention in many interesting directions and is an orthogonal approach to optimizing compilers. We address polyhedral compilation in Section 7.</p><p>Vegdahl et al. <ref type="bibr" target="#b253">[254]</ref> have used constant-unfolding to produce code sequences that can be more compacted on a horizontal target architecture. A constant-unfolding axiom replaces a constant by a constant expression of equal value. The goal is to make use of constants that are hard-wired into the micro machine, replacing difficult-to-generate constants with expressions involving only hard-wired constants.</p><p>Whitfield et al. <ref type="bibr" target="#b262">[263]</ref> proposed a framework that investigates the use of Gospel specifications <ref type="bibr" target="#b260">[261]</ref> for improving the performance of the code being optimized. The authors implemented a tool called Genesis that was able to transform codes based on the Gospel specifications. They demonstrated the benefits of the proposed framework through binary (enabling or disabling) exploration of compiler optimizations. essentially a compiler target <ref type="bibr" target="#b202">[203]</ref>. For example, consider special loop instructions found in an application. Assume that instead of decrementing by one, the compiler wanted to increment by four, or instead of branching on not equal zero, the compiler wanted to branch if the index was less than or equal to the limit. As a result, the loop instruction may be a mismatch having different target instruction sets ISAs or architectures. Choosing the right set of optimizations given an architecture is a necessary task. A classification based on the type of target platform is shown in Table <ref type="table">7</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1">Embedded Domain.</head><p>In terms of embedded computing, embedded encompasses nearly all computing that is not considered general purpose (GP) and High-Performance Computing (HPC). Embedded processors include a large number of interesting chips: those found in cars, mobile phones, pagers, handheld consoles, appliances, and other consumer electronics <ref type="bibr" target="#b89">[90]</ref>. Some of the more notable embedded architectures are Very Long Instruction Word (VLIW) <ref type="bibr" target="#b86">[87,</ref><ref type="bibr" target="#b87">88]</ref> and the big.LITTLE heterogeneous architecture from ARM <ref type="bibr" target="#b128">[129]</ref>. There are many recent low-cost implementation boards with different system-on-a-chip (SoC) specifications such as Raspberry Pi <ref type="bibr" target="#b251">[252]</ref> and Texas Instrument's Pandaboard <ref type="bibr" target="#b124">[125]</ref>. Readers can refer to the already available surveys in the field of embedded computing and FPGAs <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b64">65,</ref><ref type="bibr" target="#b117">118]</ref>. One of the key differences of leveraging compiler optimization techniques for the embedded domain is the trade-off between the application's code-size, performance, and power consumption. Code-size optimization specially in VLIW architecture has been extensively investigated <ref type="bibr" target="#b83">[84,</ref><ref type="bibr" target="#b162">163]</ref>. However, due to recent advancements in the embedded SoC code-size is no longer the main issue. Thus, the focus has shifted towards the Pareto-frontiers of performance, power, and energy metrics <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b191">192,</ref><ref type="bibr" target="#b193">194]</ref>. Compiler optimization techniques can be exploited for this task as well <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b86">87,</ref><ref type="bibr" target="#b183">184]</ref>.</p><p>Namolaru et al. <ref type="bibr" target="#b182">[183]</ref> proposed a general method for systematically generating numerical features from an application. The authors implemented their approach on top of GCC. This method does not place any restriction on how to logically and algebraically aggregate semantical properties into numerical features; therefore, it statistically covers all relevant information that can be collected from an application. They used static features of MilePost GCC and MiBench to evaluate their approach on an ARC 725D embedded processor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2">Desktop and Workstations.</head><p>Despite the fact that the majority of the research has been done for desktops and workstations, the focus has recently shifted towards the both ends of the architectural spectrum, namely embedded and high-performance computing. In this section, we have classified those works by their experimental setup where the target platform was not either of the two ends, thus we classify them as desktops and workstation category. This classification is shown in Table <ref type="table">7</ref>.</p><p>Thomson et al. <ref type="bibr" target="#b247">[248]</ref> proposed a clustering technique to decrease the offline training that normally supervised machine-learning techniques have. The authors achieved this goal by focusing only on those applications that best characterize the optimization space. They leveraged the Gustafson-Kessel algorithm after applying the dimension reduction process and evaluated their clustering approach with the EEMBCv2 benchmark suite and an Intel Core 2 Duo E6750 machine. They experimentally showed that employing technique could drastically reduce the training time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.3">HPC Domain.</head><p>There are fundamental differences between a cluster and supercomputer. For instance, mainframes and clusters run multiple programs concurrently and support many concurrent users versus supercomputers, which focus on processing power to execute a few programs or instructions as quickly as possible and to accelerating performance to push boundaries of what hardware and software can accomplish <ref type="bibr" target="#b46">[47,</ref><ref type="bibr" target="#b242">243]</ref>. However, for conciseness purposes in this survey, we have placed the recent works having used mainframes and clusters together with those having supercomputers as their experimental setup.</p><p>Tiwari et al. <ref type="bibr" target="#b248">[249]</ref> proposed a scalable autotuning framework that incorporated Active Harmony's parallel search backend <ref type="bibr" target="#b241">[242]</ref> on the CHiLL compiler framework <ref type="bibr" target="#b58">[59]</ref>. The proposed methodology enabled the authors to explore the search space in parallel and rapidly find better transformed versions of a kernel that bring higher performance gain.</p><p>Ding et al. <ref type="bibr" target="#b76">[77]</ref> presented an autotuning framework capable of leveraging different input in twolevel approach. The framework is built upon the Petabricks language and its compiler <ref type="bibr" target="#b9">[10]</ref>. It uses input-aware learning technique to differentiate between inputs, clusters the space, and chooses its centroid for autotuning. The two level approach consists of identifying a set of configurations for each class of inputs and producing a classifier to efficiently identify the best optimization to use for a new input.</p><p>Fang et al. <ref type="bibr" target="#b82">[83]</ref> proposed IODC; an iterative optimization approach that could be deployed on data centers. They used intrinsic characteristics of data centers to overcome the well-known hurdle of running an iterative compilation method, since the technique normally requires a large number of runs per each scenario. IODC approach this challenge by spawning a large number of iterative compilation jobs at once to many workers and collect their performance back to a master node so that an optimal compilation policy can be rapidly found. Moreover, they evaluate their approach using a MapReduce and a compute intensive approach by, e.g., âĂŞ-Ox flags. They used the clang compiler targeting a multicore ARM processor in an ODROID board and a dual x86 desktop representative of a node in a supercomputing center.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Target Compiler</head><p>In instruction-level parallelism (ILP) and super-scalar architectures <ref type="bibr" target="#b256">[257]</ref>, parallelism mainly comes from the compiler heuristics. This insight is key to reach peak performance, energy efficiency, and lower power consumption. Therefore, it is important to guide the compiler to look for the trade-off that satisfies specific objectives on a platform. "The typical investment for a compiler back-end before maturity is measured in man-decades, and it is common to find compiler platforms with man-century investments" <ref type="bibr" target="#b86">[87,</ref><ref type="bibr" target="#b88">89]</ref>. Table <ref type="table">8</ref> classifies the recent literature based on the type of the compiler framework used. 7.2.1 GCC. GNU compiler collection (GCC) is the GNU compiler and toolchain project that supports various high-level languages, e.g., C, C++, and so on. "The Free Software Foundation (FSF) distributes GCC under the GNU General Public License (GNU GPL). GCC has played an important role in the growth of free software, as both a tool and an example" <ref type="bibr" target="#b231">[232,</ref><ref type="bibr" target="#b232">233]</ref>. This project has been ported to various processor architectures, including most embedded systems (ARM, AMCC, and Freescale), and is able to be used on many target platforms. Due to the wide support and opensource nature of GCC, it has been the center focus of researchers on compiler autotuning methodologies. It is worth noting that GCC out-of-the-box does not support tuning with the phases of its internal compiler passes as its pass manager overrides predefined ordering. However, modifying the pass manager enables tackling such compiler optimizations problem. The GCC optimizer <ref type="foot" target="#foot_6">5</ref>supports different predefined levels of fixed optimization levels such as standard levels -Ofast, -O1, -O2, and -O3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">LLVM.</head><p>The LLVM Project is a collection of modular and reusable compiler and toolchain technologies used to develop compiler front ends and back ends. Latner and Vikram <ref type="bibr" target="#b153">[154]</ref> described LLVM as "a compiler framework designed to support transparent, lifelong program A Survey on Compiler Autotuning using Machine Learning 96:25 analysis and transformation for arbitrary programs, by providing high-level information to compiler transformations at compile-time, link-time, run-time, and in idle time between runs." LLVM brings many interesting features: (i) It has a common intermediate representation of code called LLVM-IR in static single assignment (SSA) form. (ii) Its C language frontend system called clang offers many pragma-based extensions languages. (iii) Its backend has been ported to various architectures such as x86-64, ARM, FPGA, and even GPUs. Recently, LLVM's community has become a vibrant research community towards porting and building new features into the different LLVM sub-modules e.g., opt (optimizations), clang (C language family front-end), and llc (code generator). There are also many research papers associated with using and building LLVM. <ref type="foot" target="#foot_7">6</ref>7.2.3 Intel-ICC. Intel's propriety compiler (ICC) <ref type="foot" target="#foot_8">7</ref> provides general optimizations, e.g., -O1, -O2, -O3, and processor's specific optimizations depending on the target platform. Moreover, Interprocedural Optimization (IPO) is an automatic, multi-step process that allows the compiler to analyze your code to determine where you can benefit from specific optimizations. With IPO options, you may see additional optimizations for Intel microprocessors than for non-Intel microprocessors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.4">Just-in-time</head><p>Compiler. Just-in-time compilation (JIT), also known as dynamic translation, is a widely known technique that has been used for many decades. "Broadly, JIT compilation includes any translation performed dynamically after a program has started execution" <ref type="bibr" target="#b30">[31]</ref>. Highlevel benefits of using a JIT compiler can be summarized as: (i) Compiled programs run faster, especially if they are compiled into a form that is directly executable on the underlying hardware. (ii) Interpreted programs tend to be more portable. (iii) Interpreted programs can access run-time information. There are many implementations of JIT compilers targeting different programming languages. Majic, a Matlab JIT compiler <ref type="bibr" target="#b6">[7]</ref>, OpenJIT <ref type="bibr" target="#b187">[188]</ref>, a Java JIT compiler, and IBM's JIT compiler targets the Java virtual machine <ref type="bibr" target="#b240">[241]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.5">Java Compiler.</head><p>A Java compiler is specifically designed to compile Java high-level programming code to emit platform-independent classes of Java bytecode. Subsequently, the Java virtual machine (JVM) can load these files and (i) emit a JIT, or (ii) interpret the bytecode into target platform machine code. The optimizations can possibly be done in the process, technically classifying them under HIT compilation as well <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b130">131]</ref>. Some of the notable research works <ref type="bibr" target="#b51">[52,</ref><ref type="bibr" target="#b122">123]</ref>, including a work tackling the phase-ordering problem, have been done using Java JIT compiler <ref type="bibr" target="#b150">[151]</ref>. We have already mentioned these in the Section 4.2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.6">Polyhedral Model.</head><p>Polyhedral compilation community has recently gained attraction due to its wide appliance on the high-performance computing projects. <ref type="foot" target="#foot_9">8</ref> "Polyhedral compilation encompasses the compilation techniques that rely on the representation of programs, especially those involving nested loops and arrays, thanks to parametric polyhedra or Presburger relations" <ref type="bibr" target="#b84">[85,</ref><ref type="bibr" target="#b263">264]</ref>. Wide range of compute-intensive and research applications spend the majority of their execution time in loop-nests and this suitable for targeting high-level compiler optimizations <ref type="bibr" target="#b254">[255]</ref>. Polyhedral compilation can address many of these challenges by efficiently transforming their loop-nest <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b43">44,</ref><ref type="bibr" target="#b44">45,</ref><ref type="bibr" target="#b160">161,</ref><ref type="bibr" target="#b208">209]</ref>. We refrain from focusing more on this interesting topic as it is outside the scope of this survey. compilers worth mentioning, including Cosy <ref type="bibr" target="#b8">[9]</ref> and SUIF <ref type="bibr" target="#b265">[266]</ref>. We classified all work related to use of other compiler in Table <ref type="table">8</ref> under others subfield.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">MOST INFLUENTIAL PAPERS</head><p>Evaluating a research work is no easy task and often involves human error. However, in this survey, we assess and present influential work using their scientific breakthrough, novelty, and a competitive citation metric. We discretized the process by presenting the influential papers by their corresponding topic and elaborate more on their proposed approach. Some had effects on their succeeding work, and this was taken into consideration as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Breakthroughs by Topic</head><p>The following paragraphs highlight novel research in the areas of initial introduction of learning methods with compiler optimizations, genetic algorithms, phase-ordering, iterative compilation, dynamic and hybrid features, creating optimization groups with Bayesian learners, and clustering of optimizations to tackle the phase-ordering problem.</p><p>Introducing Learning Methods. <ref type="bibr">Leverett et al. and Vegdahl et al. [156,</ref><ref type="bibr" target="#b253">254]</ref> were the first to perform non-iterative optimization without leverage machine learning. Reference <ref type="bibr" target="#b261">[262]</ref> extended this work by proposing intelligent ordering of a subset of compiler optimizations. Reference <ref type="bibr" target="#b262">[263]</ref> continued their phase-ordering work with a formal language, Gospel, which could be used to automatically generate transformations. The first usage of machine-learning techniques arrived with Reference <ref type="bibr" target="#b142">[143]</ref> and their work with predicting the optimal unroll size for nested loops. Reference <ref type="bibr" target="#b179">[180]</ref> was the first to use machine-learning techniques to construct flexible instruction schedules, paving the way for continued efforts leveraging ML techniques. Genetic Algorithms. Cooper et al. <ref type="bibr" target="#b68">[69]</ref> expanded machine-learning efforts with optimization selection using genetic algorithms with iterative compilation. Reference <ref type="bibr" target="#b69">[70]</ref> expanded their prior work by switching to adaptive compilation and one of the earliest works creating an adaptive compilation framework. Predictive modeling was first introduced by Reference <ref type="bibr" target="#b250">[251]</ref> where they applied iterative compilation of the SPEC benchmarks. Reference <ref type="bibr" target="#b141">[142]</ref> proposed iterative compilation to select tile and unroll factors using genetic algorithms, random sampling, and simulated annealing. They were able to show that their method worked on many different architectures.</p><p>Phase Ordering. Kulkarni et al. <ref type="bibr" target="#b145">[146]</ref> was one of the first to propose solving the phase-ordering problem using machine learning by combining iterative compilation and meta-heuristics. Reference <ref type="bibr" target="#b150">[151]</ref> tackled the phase-ordering problem within the JIKES Java virtual machine. They leveraged static features fed into a neural network generated with NEAT to construct good optimization sequence orders.</p><p>Iterative Compilation. Bodin et al. <ref type="bibr" target="#b41">[42]</ref> proposed an intelligent iterative compilation method that explored less than 2% of the total space in a non-linear search space. Reference <ref type="bibr" target="#b2">[3]</ref> used Markov chains to focus iterative optimization using static features. Using a relatively small exhaustive search space for learning (14 5 ) and a large test space for testing (80 20 ), they were able to achieve up to 40% speedup.</p><p>Dynamic and Hybrid Features. The first use of dynamic features for learning was introduced by Cavazos et al. <ref type="bibr" target="#b50">[51]</ref>; they showed that using dynamic features for learning outperformed the use of static features. The advancement of multivariate (static, dynamic, hybrid) feature selection and learning algorithms paved the way for tournament predictors introduced by Reference <ref type="bibr" target="#b200">[201]</ref>.</p><p>Practical and Collaborative Autotuning. MILEPOST GCC <ref type="bibr" target="#b100">[101,</ref><ref type="bibr" target="#b104">105]</ref> was the first attempt to make a practical on-the-fly machine-learning-based compiler combined with an infrastructure targeted to autotuning and crowdsourcing scenarios. It has been used in practice and revealed many issues yet to be tackled by researchers, including (1) reproducibility of empirical results collected with multiple users and (2) problems with metadata, data representation, models, and massive datasets <ref type="bibr" target="#b101">[102,</ref><ref type="bibr" target="#b103">104]</ref>.</p><p>Hybrid Characterization and Bayesian Learners. Massive dataset analysis on over 1,000 benchmarks was performed by References <ref type="bibr" target="#b59">[60,</ref><ref type="bibr" target="#b60">61]</ref>. They proposed optimization sequence groups (beyond traditional compilers' -O3 baseline) that are, on average, beneficial to use on the applications in their dataset. Most recently, Ashouri et al. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21]</ref> used the output of the passes suggested by <ref type="bibr" target="#b59">[60]</ref> to construct a Bayesian network to identify the best compiler flags for a given application using static, dynamic, and hybrid features. The Bayesian network generated optimization sequences resulted in application performance outperforming existing models.</p><p>Optimization Clustering and Full-sequence Predictors. Ashouri et al. <ref type="bibr" target="#b18">[19]</ref> introduced MiCOMP framework to cluster all the LLVM's -O3 optimization passes into optimization sub sequences and introduce the first full-sequence speedup predictor for the phase-ordering problem. The authors leveraged a recommender systems <ref type="bibr" target="#b213">[214]</ref> approach to defined exploration policy using dynamic information stored in the pair-wised optimizations across the training applications to outperform the state-of-the-art ranking approach. They show MiCOMP can achieve over 90% of the available speedup and outperform -O3 using just a few predictions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Breakthroughs by Performance</head><p>This section provides a brief quantitative comparison between the proposed approaches regarding their reported results. Evaluating papers using their performance is a hard task and often involves comparison errors <ref type="bibr" target="#b119">[120]</ref>, i.e., using absolute vs. relative speedup values, averaging using different techniques, and so on. To this end, we look into papers that explicitly provided comparison of their proposed approach against their baseline or the state-of-the-art methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.1">Iterative Compilation.</head><p>Random Iterative compilation (RIC) is known to achieve good results when compiling long running applications <ref type="bibr" target="#b41">[42]</ref>. However, the approach is expensive and should be combined with an intelligent search algorithms, such as machine-learning techniques <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b41">42]</ref>. Early work in iterative compilation methods <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b41">42]</ref> involved the exploration of non-linear transformation spaces and finding the fastest execution time in a fixed number of evaluations targeted to embedded domain. In embedded domains, the cost of performing iterative compilation is amortized over the deployment of a large number of devices. Researchers used profile information in the form of execution time, searched a large but restricted subset of transformations to find good results, and often achieve large speedups by exploring only a small fraction of the optimization space. Other work outperformed these approaches by introducing more efficient search algorithms on the space in addition to considering a more extensive optimization space with different unroll factors and tile sizes <ref type="bibr" target="#b141">[142]</ref>. Mpeis et al. <ref type="bibr" target="#b180">[181]</ref> implemented an iterative compilation approach targeted to mobile devices to further optimize the Java bytecode of day-to-day running application when the device was not being used. The authors observed on average a 57% performance improvement using a benchmark with minimal slowdowns. Other major works tried to incorporate iterative compilation methodology with machine-learning techniques, and we will discuss this category next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.2">Machine-Learning Techniques.</head><p>The Selection Problem. Agakov et al. <ref type="bibr" target="#b2">[3]</ref> introduced a machine-learning approach to focus on iterative compilation. Their approach using static features and Markov oracle led to 22% and 27% performance improvement on a Texas instrument and an AMD architecture. Later, Cavazos et al. <ref type="bibr" target="#b50">[51]</ref> outperformed the previous work by 7% using a dynamic feature characterization method. The authors believed that using static features of an application although is good enough for embedded multimedia applications but cannot perform well on a large scale general purpose applications. The use of predictive modeling approaches went on by other authors <ref type="bibr" target="#b96">[97,</ref><ref type="bibr" target="#b104">105,</ref><ref type="bibr" target="#b121">122]</ref>. Park et al. <ref type="bibr" target="#b200">[201]</ref> later introduced a novel approach using tournament predictors (see Section 5.4), by which they outperformed existing methods by around 6%. The authors went on to propose to use graph kernels <ref type="bibr" target="#b198">[199]</ref> (see Section 5.4) as a means of improving existing prediction models. Ashouri et al. introduced COBAYN <ref type="bibr" target="#b20">[21]</ref>, which used hybrid features and Bayesian network learners. The authors showed that this approach can outperform existing methods <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b201">202]</ref> by around 11%.</p><p>The Phase-ordering Problem. Cooper et al. <ref type="bibr" target="#b69">[70]</ref> proposed a search mechanism for finding good ordering of phases using genetic algorithm. The approach relied upon an adaptive compilation flow that could gain up to 49% speedup on the given benchmark. Later, Kulkarni et al. <ref type="bibr" target="#b145">[146]</ref> proposed yet another genetic algorithm that was able to drastically reduce the search time up to 65%. The first intermediate speedup predictor was later proposed by Kulkarni and Cavazos <ref type="bibr" target="#b150">[151]</ref>. The authors used the characterization of the current state of the code and NEAT (refer to Section 4.2.2) and gained up to 20% speedup on applications using Java Jikes compiler. Ashouri et al.</p><p>proposed MiCOMP <ref type="bibr" target="#b18">[19]</ref>, which uses subsequences derived from LLVM's -O3 and a full-sequence speedup predictor. The authors showed that using their approach they could outperform existing approaches <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b150">151]</ref> by 5% and 11%, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.3">Multi Objective Optimization.</head><p>In this subsection, we briefly discuss the quantitative results of investigating the major optimization objectives drawn in the literature. These objectives are code size, area, power metrics, and performance metrics.</p><p>Code Size and Area. Early works were targeting code-size reduction as an optimization objective. Cooper et al. <ref type="bibr" target="#b68">[69]</ref> introduced a Genetic algorithm (GA) method to search for reduced code size and found it had an advantage of 14.5 % against a default fixed sequence. These works were followed by a series of others mostly tackling the code size reduction in VLIW embedded architecture <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b89">90,</ref><ref type="bibr" target="#b267">268]</ref>. However, through the advancement of storage systems specifically in the embedded domain, this issue has become far less of a concern and often has been neglected in the recent literature.</p><p>Performance and Intensity. Roofline model <ref type="bibr" target="#b264">[265]</ref> relates processor performance to off-chip memory traffic, thus provides a theoretical upper bound for operational intensity and attainable performance in modern architectures. Certain works have used the notion to model their optimization approaches and find a Pareto curve to satisfy both objectives <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b74">75,</ref><ref type="bibr" target="#b121">122,</ref><ref type="bibr" target="#b193">194,</ref><ref type="bibr" target="#b271">272]</ref>. Hoste and Eeckhout <ref type="bibr" target="#b121">[122]</ref> tackled iterative compilation on an Intel Pentium machine and observed the feasibility of their approach together with a multi-objective search algorithm called multiple populations, which finds Pareto curves within the different population of an optimization space. They observed up to 37% speedup when they used their evaluation metric. Ashouri et al. <ref type="bibr" target="#b28">[29]</ref> applied a roofline model to a customized VLIW architecture and formed four clusters to satisfy a multiobjective proposed scenario. They observed reaching a speedup of up to 23% in execution time by using those compiler optimizations found in their method that contributed to the satisfaction of the objectives.</p><p>Power. Except for a few recent works <ref type="bibr" target="#b183">[184,</ref><ref type="bibr" target="#b257">258]</ref>, this objective has been mostly investigated at architectural and system-level <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b157">158,</ref><ref type="bibr" target="#b193">194]</ref>. For this reason, it is outside the scope of this survey. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Citation Metric</head><p>In this section, we show the top 16 most-cited papers among more than 200 papers we elaborated. <ref type="foot" target="#foot_11">9</ref>In Table <ref type="table" target="#tab_7">9</ref>, we present their citation count and the average citation per year (ACPY) with a few keywords representing their methodology we already covered in this survey.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">DISCUSSION &amp; CONCLUSION</head><p>In the coming decades, research on compilation techniques and code optimization will play a key role in tackling and addressing various challenges of computer science and the high-performance computing field. This includes auto-parallelization, security, exploiting multi-and many-core processors, reliability, reproducibility, and energy efficiency. Using compiler optimizations to exploit large-scale parallelism available on architectures and power-aware hardware is an essential task. Additionally, machine learning is becoming more powerful by leveraging deep learning to find and construct heuristics. These complex learners allow automated systems to efficiently perform these task with minimal programmer effort. Additionally, research on collaborating tuning methodologies have gained attention by the introduction of Collective Knowledge framework (CK) <ref type="bibr" target="#b100">[101]</ref><ref type="bibr" target="#b101">[102]</ref><ref type="bibr" target="#b102">[103]</ref><ref type="bibr" target="#b173">174]</ref>. CK is a cross-platform open research SDK developed in collaboration with academic and industrial partners to share artifacts as reusable and customizable components with a unified, portable, and customizable experimental work flows. Researchers can automate the tuning process across diverse hardware and environments. Crowdsourcing and reproducing experiments across platforms provided by other researchers would also be feasible. CK is now used as an official platform to support open ACM ReQuEST tournaments on reproducible and Pareto-efficient software/hardware co-design of artificial intelligence, deep learning, and other emerging workloads <ref type="bibr" target="#b178">[179]</ref>.</p><p>By the advent of Deep Learning, i.e., deep neural networks (DNN) <ref type="bibr" target="#b221">[222]</ref>, we are witnessing more and more applications of such techniques, i.e., speech recognition <ref type="bibr" target="#b118">[119]</ref>, image classification <ref type="bibr" target="#b143">[144]</ref>, and so on. Deep-learning algorithms extract high-level and complex abstractions from data through a hierarchical learning process and have shown effectiveness in many applications. DNNs normally require large data to train, thus adapting new benchmarks and large data sets will play an important role in achieving the potential benefits of using DNNs. Recently, we have seen benchmark synthesizers that are able to generate synthetic programs for use in machine-learning-based performance autotuning. Genesis <ref type="bibr" target="#b62">[63]</ref> and CLgen <ref type="bibr" target="#b73">[74]</ref> are such examples that bring diversity and control to the generation of new benchmarks to the user.</p><p>In this survey, we have synthesized the research work on compiler autotuning using machine learning by showing the broad spectrum of the use of machine-learning techniques and their key research ideas and applications. We surveyed research works at different levels of abstraction, application characterization techniques, algorithm and machine-learning models, prediction types, space exploration, target domains, and influence. We discussed both major problems of compiler autotuning, namely, the selection and the phase-ordering problem along with the benchmark suits proposed to evaluate them. We hope this article will be beneficial to computer architects, researchers, and application developers and inspires novel ideas and opens promising research avenues.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Organization of the survey in different sections.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. A Sample Autotuning Framework Using Machine Learning. (1) Top: The data flow through the various components of the training phase, where a model is induced based on the characteristics of applications under training set. (2) Bottom: The data flow through the various components of the test phase, where the already trained model is used to predict an outcome for a given test application with applications under the test set.</figDesc><graphic coords="7,58.92,88.51,368.32,99.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>7. 2 . 7</head><label>27</label><figDesc>Other Compilers. In this survey, we focused on the classification of the more widely known compiler framework in autotuning field. However, there are numerous other well-known 96:26 A. H. Ashouri et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>A Classification Based on the Type of the Problem</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>A Classification Based on Application Characterization Techniques</figDesc><table><row><cell></cell><cell>Classification</cell><cell>References</cell></row><row><cell></cell><cell>Source-code</cell><cell>[3, 21, 28, 50, 52, 55, 66, 72, 78, 92, 96, 101, 105, 107, 108, 112, 115,</cell></row><row><cell>Static</cell><cell>Features</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>A Classification Based on Dimension Reduction Techniques</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 .</head><label>4</label><figDesc>A Classification Based on Machine Learning Models</figDesc><table><row><cell></cell><cell>Classification</cell><cell>References</cell></row><row><cell>Supervised Learning</cell><cell>Bayesian Net Linear Models/SVMs Decision Trees/Random Forests Graph Kernels Others</cell><cell>[15, 21] [18, 19, 21, 71, 199, 201, 217, 237] [41, 77, 92, 99, 99, 101, 105, 152, 162, 166, 178, 200, 253] [138, 170, 171, 198] [3, 11, 16, 19, 21, 21, 28, 28, 50-52, 69, 70, 72, 78, 79, 83, 91, 92, 96,</cell></row><row><cell></cell><cell></cell><cell>96, 98, 100, 101, 105, 107, 108, 116, 132, 136, 151, 152, 155, 162,</cell></row><row><cell></cell><cell></cell><cell>163, 183, 183, 197, 199, 201, 202, 206, 217, 221, 235, 235, 236, 236,</cell></row><row><cell></cell><cell></cell><cell>240, 248, 250, 253, 253, 259, 259]</cell></row><row><cell>Unsupervised</cell><cell>Clustering Evolutionary Algorithms NN) (GAs, NEAT,</cell><cell>[19, 29, 170, 171, 212, 248] [3, 6, 50, 54, 66, 67, 69, 70, 73, 78, 82, 110, 110, 122, 123, 142, 146-148, 151-153, 155, 157, 162, 171, 184, 186, 198, 202, 205, 209, 212, 235, 236, 238, 244, 259]</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 .</head><label>5</label><figDesc>A Classification Based on Prediction Types</figDesc><table><row><cell>Classification</cell><cell>References</cell></row><row><cell>Clustering/</cell><cell>[19, 29, 111, 122, 142, 170, 171, 185, 186, 212, 248]</cell></row><row><cell>Downsampling</cell><cell></cell></row><row><cell>Speedup</cell><cell>[18, 19, 21, 28, 50, 67, 77, 78, 96, 99, 100, 136, 152, 155, 199-202,</cell></row><row><cell>Prediction</cell><cell>235, 236, 259]</cell></row><row><cell>Compiler</cell><cell>[3, 6, 14-16, 21, 28, 29, 38, 41, 42, 50, 51, 52, 53, 54, 55, 61, 67, 69, 70, 79, 83,</cell></row><row><cell>Sequence</cell><cell>91, 98, 99, 101, 105, 106, 107, 108, 116, 122, 123, 132, 142, 146-149, 151, 160,</cell></row><row><cell>Prediction</cell><cell>162, 163, 166, 169-171, 178, 183-185, 196, 198, 201, 202, 206, 208, 209, 212,</cell></row><row><cell></cell><cell>213, 217, 221, 235-237, 240, 248, 250, 253, 259]</cell></row><row><cell>Tournament/</cell><cell></cell></row><row><cell>Intermediate</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 .</head><label>6</label><figDesc>A Classification Based on Space Exploration Methods</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>As previously mentioned in Section 2.3, traversing the large compiler optimization space made by the different combinations of optimizations requires a proper exploration strategy. Iterative compilation and genetic algorithms are among the most mentioned strategies in the literature.</figDesc><table><row><cell></cell><cell>, 206,</cell></row><row><cell></cell><cell>208-210, 217, 219, 221, 235-237, 243, 245, 248, 250, 253, 259, 267, 270, 271]</cell></row><row><cell>Non-iterative</cell><cell>[92, 167, 209, 210, 213, 235, 254, 262, 263]</cell></row><row><cell cols="2">6 OPTIMIZATION SPACE EXPLORATION TECHNIQUES</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 9 .</head><label>9</label><figDesc>A Classification of Top 16 Influential Papers by Their Citation Count</figDesc><table><row><cell></cell><cell></cell><cell>Citation</cell><cell></cell><cell></cell></row><row><cell>No</cell><cell>Reference</cell><cell>Count</cell><cell>ACPY</cell><cell>Keywords</cell></row><row><cell>1</cell><cell>Agakov et al. [2006] [3]</cell><cell>377</cell><cell>33</cell><cell>iterative compilation, static features, Markov chain oracle, PCA</cell></row><row><cell>2</cell><cell>Cooper et al. [1999] [69]</cell><cell>322</cell><cell>17</cell><cell>genetic algorithm, iterative compilation, reduced code-size</cell></row><row><cell>3</cell><cell>Triantafyllis et al. [2003] [251]</cell><cell>277</cell><cell>19</cell><cell>iterative compilation, SPEC, predictive modeling</cell></row><row><cell>4</cell><cell>Stephenson et al. [2003] [236]</cell><cell>274</cell><cell>19</cell><cell>iterative compilation, genetic programming, metaheuristics</cell></row><row><cell>5</cell><cell>Fursin et al. [2008, 2011][101,</cell><cell>251</cell><cell>22</cell><cell>MilePost GCC, self-tuning, crowdsourcing, Iterative</cell></row><row><cell></cell><cell>105]</cell><cell></cell><cell></cell><cell>compilation</cell></row><row><cell>6</cell><cell>Cooper et al. [2002] [70]</cell><cell>242</cell><cell>15</cell><cell>adaptive compilation, biased random search, sequence</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>predictor</cell></row><row><cell>7</cell><cell>Knijnenburg et al. [2003] [142]</cell><cell>238</cell><cell>16</cell><cell>iterative compilation, unrolling factor,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>architecture-independent</cell></row><row><cell>8</cell><cell>Tournavitis et al. [2009] [250]</cell><cell>234</cell><cell>27</cell><cell>static-analysis, profile-driven parallelism, NAS, SPEC</cell></row><row><cell>9</cell><cell>Cavazos et al. [2007] [51]</cell><cell>225</cell><cell>20</cell><cell>iterative compilation, dynamic characterization, sequence</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>predictor</cell></row><row><cell>10</cell><cell>Tiwari et al. [2009] [249]</cell><cell>200</cell><cell>25</cell><cell>CHiLL framework, iterative compilation, sequence predictor</cell></row><row><cell>11</cell><cell>Almagor et al. [2004] [6]</cell><cell>196</cell><cell>14</cell><cell>adaptive compilation, compiler sequence predictor, SPARC</cell></row><row><cell>12</cell><cell>Monsifrot et al. [2002] [178]</cell><cell>175</cell><cell>11</cell><cell>decision trees, boosting, abstract loop representation</cell></row><row><cell>13</cell><cell>Stephenson et al. [2005] [237]</cell><cell>170</cell><cell>13</cell><cell>supervised learning, unrolling factor, multiclass classification</cell></row><row><cell>14</cell><cell>Pan et al. [2006] [197]</cell><cell>161</cell><cell>13</cell><cell>combined elimination, iterative compilation, SPEC</cell></row><row><cell>15</cell><cell>Bodin et al. [1998] [42]</cell><cell>151</cell><cell>7</cell><cell>iterative compilation, multi-objective exploration</cell></row><row><cell>16</cell><cell>Hoste et al. [2008] [122]</cell><cell>134</cell><cell>13</cell><cell>iterative compilation, metaheuristic, genetic algorithm</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>ACM Computing Surveys, Vol. 51, No. 5, Article 96. Publication date: September 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_1"><p>https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_2"><p>http://llvm.org/docs/Passes.html.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_3"><p>We look forward to keep updating the current survey on a quarterly basis at its arXiv branch<ref type="bibr" target="#b19">[20]</ref>, and we encourage researchers to inform us about their new related works. ACM Computing Surveys, Vol. 51, No. 5, Article 96. Publication date: September 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_4"><p>http://ctuning.org/wiki/index.php/CTools:MilepostGCC:StaticFeatures:MILEPOST_V2.1. ACM Computing Surveys, Vol.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_5"><p>51, No. 5, Article 96. Publication date: September 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_6"><p>https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_7"><p>http://llvm.org/pubs/.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_8"><p>https://software.intel.com/en-us/intel-compilers.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_9"><p>http://polyhedral.info/. ACM Computing Surveys, Vol. 51, No. 5, Article</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="96" xml:id="foot_10"><p>Publication date: September 2018.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_11"><p>Data has been extracted from Google Scholar on July 2018 and they subject to change. ACM Computing Surveys, Vol. 51, No. 5, Article 96. Publication date: September 2018.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work is partially supported by the EU Commission H2020-FET-HPC program under the Grant No. ANTAREX-671623.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>96:22</head><p>A. H. Ashouri et al. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Platform</head><p>References Embedded Domain <ref type="bibr">[1, 3, 11, 15, 16, 21, 28, 29, 39, 41, 49, 50, 70, 78, 91, 92, 96, 101, 105, 135, 143, 148, 170, 171, 183-186, 195, 197, 202, 273]</ref> Desktop <ref type="bibr">[3, 6, 10, 11, 18, 19, 28, 44, 51-55, 58, 61, 67, 69, 70, 79, 91, 96, 98-101, 105-108, 116, 122, 123, 135, 136, 142, 146, 151, 152, 155, 157, 162, 162, 163, 166, 169, 178, 183, 186, 187, 189, 196-202, 206, 208-210, 212, 213, 217, 219, 221, 230, 235-238, 240, 248, 250, 253, 259, 270, 271</ref>] HPC Domain <ref type="bibr">[10, 11, 19, 36, 77, 83, 98, 101, 105, 109, 153, 159, 160, 175, 184, 198, 208, 209, 217, 221, 225-228, 240, 243, 249, 250, 270, 271]</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">TARGET DOMAIN</head><p>Finding the best set of compiler optimizations to apply on a given application is heavily correlated with the type of compiler, target processor architecture, and target platform to be tuned.</p><p>Research on compiler autotuning has tried to avoid generic optimizations due to this very reason. By employing machine-learning models, a framework should be adaptable based on a given application or target platform. An optimized code segment for a given compiler or a target platform may not yield the same optimality on a different compiler or platform. Each compiler and target platform combination have different ways of generating the binaries and executing the code segments. Moreover, optimization techniques might be useful for a class of applications, e.g., security, scientific, etc., but they might not be for other classes. To this end, we classify the literature based on the two aforementioned subclasses. These are shown in Tables <ref type="table">7</ref> and<ref type="table">8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Target Platform</head><p>Today, essentially all programming for desktop and HPC application is done using high-level languages (as is most programming for embedded applications). This observation implies that since most instructions executed are the output of a compiler, an instruction set architecture is</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">OCEANS: Optimizing compilers for embedded applications</title>
		<author>
			<persName><forename type="first">Bas</forename><surname>Aarts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michel</forename><surname>Barreteau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">François</forename><surname>Bodin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Brinkhaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zbigniew</forename><surname>Chamski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henri-Pierre</forename><surname>Charles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christine</forename><surname>Eisenbeis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Gurd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jan</forename><surname>Hoogerbrugge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ping</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Conference on Parallel Processing</title>
		<meeting>the European Conference on Parallel Processing</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="1351" to="1356" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast, effective code generation in a just-in-time java compiler</title>
		<author>
			<persName><forename type="first">Ali-Reza</forename><surname>Adl-Tabatabai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michał</forename><surname>Cierniak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guei-Yuan</forename><surname>Lueh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vishesh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><forename type="middle">M</forename><surname>Parikh</surname></persName>
		</author>
		<author>
			<persName><surname>Stichnoth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGPlAN Notices</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="280" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Using machine learning to focus iterative optimization</title>
		<author>
			<persName><forename type="first">Felix</forename><surname>Agakov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Edwin</forename><surname>Bonilla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Björn</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><forename type="middle">K I</forename><surname>Toussaint</surname></persName>
		</author>
		<author>
			<persName><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="295" to="305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">Alfred</forename><forename type="middle">V</forename><surname>Aho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ravi</forename><surname>Sethi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><forename type="middle">D</forename><surname>Ullman</surname></persName>
		</author>
		<title level="m">Compilers, Principles, Techniques</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Control flow analysis</title>
		<author>
			<persName><forename type="first">Frances</forename><forename type="middle">E</forename><surname>Allen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Sigplan Notices</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1970">1970</date>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Finding effective compilation sequences</title>
		<author>
			<persName><forename type="first">L</forename><surname>Almagor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
		<ptr target="http://www.anc.ed.ac.uk/machine-learning/colo/repository/LCTES04.pdf" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="231" to="239" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">MaJIC: A MATLAB just-in-time compiler</title>
		<author>
			<persName><forename type="first">George</forename><surname>Almasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Padua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Languages and Compilers for Parallel Computing</title>
		<meeting>the International Workshop on Languages and Compilers for Parallel Computing</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="68" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">Ethem</forename><surname>Alpaydin</surname></persName>
		</author>
		<title level="m">Introduction to Machine Learning</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cosy compiler phase embedding with the cosy compiler model</title>
		<author>
			<persName><forename type="first">Martin</forename><surname>Alt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Uwe</forename><surname>Aßmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hans</forename><surname>Van Someren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Compiler Construction</title>
		<meeting>the International Conference on Compiler Construction</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="278" to="293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">PetaBricks: A language and compiler for algorithmic choice</title>
		<author>
			<persName><forename type="first">Jason</forename><surname>Ansel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cy</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yee</forename><forename type="middle">Lok</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marek</forename><surname>Olszewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qin</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Edelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saman</forename><surname>Amarasinghe</surname></persName>
		</author>
		<idno type="DOI">10.1145/1542476.1542481</idno>
		<ptr target="http://dx.doi.org/10.1145/1542476.1542481" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;09)</title>
		<meeting>the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;09)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="38" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Ansel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kamil</surname></persName>
		</author>
		<title level="m">Proceedings of the 23rd International Conference on Parallel Architectures and Compilation</title>
		<meeting>the 23rd International Conference on Parallel Architectures and Compilation</meeting>
		<imprint>
			<biblScope unit="page" from="303" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Control and embedded computing: Survey of research directions</title>
		<author>
			<persName><forename type="first">Karl-Erik</forename><surname>Årzén</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anton</forename><surname>Cervin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IFAC Proc</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="191" to="202" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A system-level framework for evaluating area/performance/power trade-offs of VLIW-based embedded systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Ascia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Catania</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Palesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Patti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Design Automation Conference (ASP-DAC&apos;05)</title>
		<meeting>the Design Automation Conference (ASP-DAC&apos;05)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="940" to="943" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A study of conflicting pairs of compiler optimizations</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>Yosi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gadi</forename><surname>Asher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Esti</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName><surname>Stein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE 11th International Symposium on Embedded Multicore/Many-core Systems-on-Chip (MCSoC&apos;17)</title>
		<meeting>the IEEE 11th International Symposium on Embedded Multicore/Many-core Systems-on-Chip (MCSoC&apos;17)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="52" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Bayesian network approach for compiler auto-tuning for embedded processors</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mariani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1109/ESTIMedia.2014.6962349</idno>
		<ptr target="http://dx.doi.org/10.1109/ESTIMedia.2014.6962349" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Embedded Systems for Real-Time Multimedia (ESTIMedia)</title>
		<meeting>the IEEE Embedded Systems for Real-Time Multimedia (ESTIMedia)</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="90" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Design space exploration methodology for compiler parameters in VLIW processors. Master&apos;s thesis</title>
		<author>
			<persName><forename type="first">Ashouri</forename><surname>Amir Hossein</surname></persName>
		</author>
		<ptr target="http://hdl.handle.net/10589/72083" />
		<imprint>
			<date type="published" when="2012">2012</date>
			<pubPlace>Milano, Italy</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Dissertation. Politecnico Di</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName><forename type="first">Ashouri</forename><surname>Amir Hossein</surname></persName>
		</author>
		<ptr target="http://hdl.handle.net/10589/129561" />
		<title level="m">Compiler Autotuning Using Machine Learning Techniques. Ph.D. Dissertation. Politecnico di</title>
		<meeting><address><addrLine>Milano, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Predictive modeling methodology for compiler phase-ordering</title>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Amir Hossein Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Bignoli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1145/2872421.2872424</idno>
		<ptr target="http://dx.doi.org/10.1145/2872421.2872424" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Workshop on Parallel Programming and Run-Time Management Techniques for Many-core Architectures and the 5th Workshop on Design Tools and Architectures For Multicore Embedded Computing Platforms (PARMA-DITAM&apos;16)</title>
		<meeting>the 7th Workshop on Parallel Programming and Run-Time Management Techniques for Many-core Architectures and the 5th Workshop on Design Tools and Architectures For Multicore Embedded Computing Platforms (PARMA-DITAM&apos;16)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="7" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">MiCOMP: Mitigating the compiler phase-ordering problem using optimization sub-sequences and machine learning</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Bignoli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sameer</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><surname>Cavazos</surname></persName>
		</author>
		<idno type="DOI">10.1145/3124452</idno>
		<ptr target="http://dx.doi.org/10.1145/3124452" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<date type="published" when="2017-09">2017. Sept. 2017</date>
		</imprint>
	</monogr>
	<note>Article</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Killian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1801.04405</idno>
		<title level="m">A survey on compiler autotuning using machine learning</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">COBAYN: Compiler autotuning framework using bayesian networks</title>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Amir Hossein Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Mariani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eunjung</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1145/2928270</idno>
		<ptr target="http://dx.doi.org/10.1145/2928270" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">21</biblScope>
			<date type="published" when="2016-06">2016. June 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Automatic Tuning of Compilers Using Machine Learning</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Background</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9_1</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9_1" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="1" to="22" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Design Space Exploration of Compiler Passes: A Co-Exploration Approach for the Embedded Domain</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9_2</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9_2" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="23" to="39" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">The Phase-Ordering Problem: A Complete Sequence Prediction Approach</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9_5</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9_5" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="85" to="113" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">The Phase-Ordering Problem: An Intermediate Speedup Prediction Approach</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9_4</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9_4" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="71" to="83" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Selecting the Best Compiler Optimizations: A Bayesian Network Approach</title>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-71489-9_3</idno>
		<ptr target="http://dx.doi.org/10.1007/978-3-319-71489-9_3" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="41" to="70" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">An evaluation of autotuning techniques for the compiler optimization problems</title>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Amir Hossein Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<ptr target="http://ceur-ws.org/Vol-1643/#paper-05" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Resource Awareness and Application Autotuning in Adaptive and Heterogeneous Computing (RES4ANT&apos;16), colocated with the Design Automation and Test in Europe Conference and Expo (DATE&apos;16)</title>
		<meeting>the Workshop on Resource Awareness and Application Autotuning in Adaptive and Heterogeneous Computing (RES4ANT&apos;16), colocated with the Design Automation and Test in Europe Conference and Expo (DATE&apos;16)</meeting>
		<imprint>
			<biblScope unit="page" from="23" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A framework for Compiler Level statistical analysis over customized VLIW architecture</title>
		<author>
			<persName><forename type="first">Vittorio</forename><surname>Amir Hossein Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sotirios</forename><surname>Zaccaria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Xydis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><surname>Silvano</surname></persName>
		</author>
		<idno type="DOI">10.1109/VLSI-SoC.2013.6673262</idno>
		<ptr target="http://dx.doi.org/10.1109/VLSI-SoC.2013.6673262" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Very Large Scale Integration (VLSI-SoC&apos;13)</title>
		<meeting>the International Conference on Very Large Scale Integration (VLSI-SoC&apos;13)</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="124" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Energy-aware compilation and hardware design for VLIW embedded systems</title>
		<author>
			<persName><forename type="first">Jose</forename><forename type="middle">L</forename><surname>Ayala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marisa</forename><surname>López-Vallejo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Atienza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Praveen</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Francky</forename><surname>Catthoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Diederik</forename><surname>Verkest</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Embed. Syst</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="73" to="82" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A brief history of just-in-time</title>
		<author>
			<persName><forename type="first">John</forename><surname>Aycock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surveys</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="97" to="113" />
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Improved covariance estimation for Gustafson-Kessel clustering</title>
		<author>
			<persName><forename type="first">R</forename><surname>Babuka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Van Der Veen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Kaymak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE&apos;02)</title>
		<meeting>the 2002 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE&apos;02)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1081" to="1085" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Compiler transformations for high-performance computing</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">F</forename><surname>Bacon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Susan</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oliver</forename><forename type="middle">J</forename><surname>Sharp</surname></persName>
		</author>
		<idno type="DOI">10.1145/197405.197406</idno>
		<ptr target="http://dx.doi.org/10.1145/197405.197406" />
	</analytic>
	<monogr>
		<title level="j">Comput. Surveys</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="345" to="420" />
			<date type="published" when="1994-12">1994. Dec. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Iterative enhancement: A practical technique for software development</title>
		<author>
			<persName><forename type="first">R</forename><surname>Victor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Albert</forename><forename type="middle">J</forename><surname>Basil</surname></persName>
		</author>
		<author>
			<persName><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Softw. Eng</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="390" to="396" />
			<date type="published" when="1975">1975. 1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Towards making autotuning mainstream</title>
		<author>
			<persName><forename type="first">Protonu</forename><surname>Basu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Malik</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Suchit</forename><surname>Maindola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saurav</forename><surname>Muralidharan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shreyas</forename><surname>Ramalingam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Axel</forename><surname>Rivera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manu</forename><surname>Shantharam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anand</forename><surname>Venkat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. High Perform. Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="379" to="393" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Compilerbased code generation and autotuning for geometric multigrid on GPU-accelerated supercomputers. Parallel Comput</title>
		<author>
			<persName><forename type="first">Protonu</forename><surname>Basu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Van Straalen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leonid</forename><surname>Oliker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Phillip</forename><surname>Colella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Hall</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="50" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">The polyhedral model is more widely applicable than you think</title>
		<author>
			<persName><forename type="first">Mohamed-Walid</forename><surname>Benabderrahmane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Louis-Noël</forename><surname>Pouchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Albert</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cédric</forename><surname>Bastoul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Compiler Construction</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="283" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A logic programming approach to predict effective compiler settings for embedded software</title>
		<author>
			<persName><forename type="first">Craig</forename><surname>Blackmore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oliver</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kerstin</forename><surname>Eder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory Pract. Logic Program</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="481" to="494" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<author>
			<persName><forename type="first">Craig</forename><surname>Blackmore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oliver</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kerstin</forename><surname>Eder</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1703.08228</idno>
		<title level="m">Automatically tuning the GCC compiler to optimize the performance of applications running on the ARM cortex-M3</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Automatically tuning the GCC compiler to optimize the performance of applications running on the ARM cortex</title>
		<author>
			<persName><forename type="first">Craig</forename><surname>Blackmore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oliver</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kerstin</forename><surname>Eder</surname></persName>
		</author>
		<idno>arxiv:1703.08228</idno>
		<ptr target="http://arxiv.org/abs/1703.08228" />
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Integrating algorithmic parameters into benchmarking and design space exploration in 3D scene understanding</title>
		<author>
			<persName><forename type="first">Bruno</forename><surname>Bodin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luigi</forename><surname>Nardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Zeeshan</forename><surname>Zia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Harry</forename><surname>Wagstaff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Govind</forename><surname>Sreekar Shenoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Murali</forename><surname>Emani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Mawer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christos</forename><surname>Kotselidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andy</forename><surname>Nisbet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mikel</forename><surname>Lujan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 International Conference on Parallel Architectures and Compilation</title>
		<meeting>the 2016 International Conference on Parallel Architectures and Compilation</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="57" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Iterative compilation in a non-linear optimisation space</title>
		<author>
			<persName><forename type="first">François</forename><surname>Bodin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Toru</forename><surname>Kisuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O'</forename><surname>Mike</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erven</forename><surname>Boyle</surname></persName>
		</author>
		<author>
			<persName><surname>Rohou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Profile and Feedback-Directed Compilation</title>
		<meeting>the Workshop on Profile and Feedback-Directed Compilation</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Automatic transformations for communication-minimized parallelization and locality optimization in the polyhedral model</title>
		<author>
			<persName><forename type="first">U</forename><surname>Bondhugula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Baskaran</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-78791-4</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/978-3-540-78791-4" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Compiler Construction</title>
		<meeting>the International Conference on Compiler Construction</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="132" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">A practical automatic polyhedral parallelizer and locality optimizer</title>
		<author>
			<persName><forename type="first">U</forename><surname>Bondhugula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hartono</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1375595" />
		<imprint>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">PLuTo: A practical and fully automatic polyhedral program optimization system</title>
		<author>
			<persName><forename type="first">A</forename><surname>Uday Bondhugula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hartono</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ramanujam</surname></persName>
		</author>
		<author>
			<persName><surname>Sadayappan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGPLAN 2008 Conference on Programming Language Design and Implementation (PLDI&apos;08)</title>
		<meeting>the ACM SIGPLAN 2008 Conference on Programming Language Design and Implementation (PLDI&apos;08)</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Shortest-path kernels on graphs</title>
		<author>
			<persName><forename type="first">Karsten</forename><forename type="middle">M</forename><surname>Borgwardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hans-Peter</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th IEEE International Conference on Data Mining (ICDM&apos;05)</title>
		<meeting>the 5th IEEE International Conference on Data Mining (ICDM&apos;05)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Market-oriented cloud computing: Vision, hype, and reality for delivering it services as computing utilities</title>
		<author>
			<persName><forename type="first">Rajkumar</forename><surname>Buyya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chee</forename><surname>Shin Yeo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Srikumar</forename><surname>Venugopal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th IEEE International Conference on High Performance Computing and Communications (HPCC&apos;08</title>
		<meeting>the 10th IEEE International Conference on High Performance Computing and Communications (HPCC&apos;08</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="5" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Semi-supervised graph-based hyperspectral image classification</title>
		<author>
			<persName><forename type="first">Gustavo</forename><surname>Camps-Valls</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tatyana</forename><forename type="middle">V Bandos</forename><surname>Marsheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dengyong</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Geosci. Remote Sens</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="3044" to="3054" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Embedded Computing for High Performance: Efficient Mapping of Computations Using Customization, Code Transformations and Compilation</title>
		<author>
			<persName><forename type="first">João</forename><surname>Manuel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paiva</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">José</forename><surname>Gabriel De Figueiredo Coutinho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pedro</forename><forename type="middle">C</forename><surname>Diniz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Automatic performance model construction for the fast software exploration of new hardware designs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dubach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Agakov</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1176765" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 International Conference on Compilers, Architecture and Synthesis for Embedded Systems</title>
		<meeting>the 2006 International Conference on Compilers, Architecture and Synthesis for Embedded Systems</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="24" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Rapidly selecting good compiler optimizations using performance counters</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Agakov</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;07</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;07</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Inducing heuristics to decide whether to schedule</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E B</forename><surname>Moss</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=996864" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E B</forename><surname>Moss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O'boyle</surname></persName>
		</author>
		<idno type="DOI">10.1007/11688839</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/11688839" />
		<title level="m">Hybrid optimizations: Which optimization algorithm to use?Compiler Construction</title>
		<imprint>
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Automatic tuning of inlining heuristics</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O'boyle</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM/IEEE SC 2005 Conference on Supercomputing</title>
		<meeting>the ACM/IEEE SC 2005 Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="14" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Method-specific dynamic compilation using logistic regression</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O'boyle</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1167492" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Register allocation via coloring</title>
		<author>
			<persName><forename type="first">Gregory</forename><forename type="middle">J</forename><surname>Chaitin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><forename type="middle">A</forename><surname>Auslander</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ashok</forename><forename type="middle">K</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cocke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><forename type="middle">E</forename><surname>Hopkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><forename type="middle">W</forename><surname>Markstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Lang</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="47" to="57" />
			<date type="published" when="1981">1981. 1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Semi-supervised learning</title>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Chapelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bernhard</forename><surname>Scholkopf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Zien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Neural Netw</title>
		<editor>
			<persName><forename type="first">O</forename><surname>Chapelle</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="542" to="542" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Combining models and guided empirical search to optimize for multiple levels of the memory hierarchy</title>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chame</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="111" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">CHiLL: A Framework for Composing High-level Loop Transformations</title>
		<author>
			<persName><forename type="first">Chun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jacqueline</forename><surname>Chame</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><surname>Hall</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Citeseer</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Deconstructing iterative optimization</title>
		<author>
			<persName><forename type="first">Yang</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shuangde</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuanjie</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lieven</forename><surname>Eeckhout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Temam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chengyong</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">21</biblScope>
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Evaluating iterative optimization across 1000 datasets</title>
		<author>
			<persName><forename type="first">Yang</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuanjie</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lieven</forename><surname>Eeckhout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liang</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Temam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chengyong</forename><surname>Wu</surname></persName>
		</author>
		<idno type="DOI">10.1145/1806596.1806647</idno>
		<ptr target="http://dx.doi.org/10.1145/1806596.1806647" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;10)</title>
		<meeting>the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;10)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="448" to="459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">A model-based framework: An approach for profit-driven optimization</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">R</forename><surname>Childers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Soffa</surname></persName>
		</author>
		<idno type="DOI">10.1109/CGO.2005.2</idno>
		<ptr target="http://dx.doi.org/10.1109/CGO.2005.2" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="317" to="327" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Genesis: A language for generating synthetic training programs for machine learning</title>
		<author>
			<persName><forename type="first">Alton</forename><surname>Chiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Garvey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tarek</forename><forename type="middle">S</forename><surname>Abdelrahman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th ACM International Conference on Computing Frontiers</title>
		<meeting>the 12th ACM International Conference on Computing Frontiers</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Combining analyses, combining optimizations</title>
		<author>
			<persName><forename type="first">Cliff</forename><surname>Click</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Keith</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="181" to="196" />
			<date type="published" when="1995">1995. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Reconfigurable computing: A survey of systems and software</title>
		<author>
			<persName><forename type="first">Katherine</forename><surname>Compton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Scott</forename><surname>Hauck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surveys</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="171" to="210" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Feature selection and policy optimization for distributed instruction placement using reinforcement learning</title>
		<author>
			<persName><forename type="first">Katherine</forename><forename type="middle">E</forename><surname>Coons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Behnam</forename><surname>Robatmili</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">E</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bertrand</forename><forename type="middle">A</forename><surname>Maher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doug</forename><surname>Burger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kathryn</forename><forename type="middle">S</forename><surname>Mckinley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th International Conference on Parallel Architectures and Compilation Techniques</title>
		<meeting>the 17th International Conference on Parallel Architectures and Compilation Techniques</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="32" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">ACME: Adaptive compilation made efficient</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Grosul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Harvey</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1065921" />
	</analytic>
	<monogr>
		<title level="j">In ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="69" to="77" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<monogr>
		<title level="m" type="main">Compilation Order Matters</title>
		<author>
			<persName><forename type="first">K</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><forename type="middle">J</forename><surname>Harvey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Devika</forename><surname>Subramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Linda</forename><surname>Torczon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Optimizing for reduced code space using genetic algorithms</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Schielke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Subramanian</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=314414" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices. Retrieved from</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Adaptive optimizing compilers for the 21st Century</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Subramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Torczon</surname></persName>
		</author>
		<idno type="DOI">10.1023/A:1015729001611</idno>
		<ptr target="http://link.springer.com/article/10.1023/A:1015729001611" />
	</analytic>
	<monogr>
		<title level="j">J. Supercomput</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Stencil autotuning with ordinal regression: Extended abstract</title>
		<author>
			<persName><forename type="first">Biagio</forename><surname>Cosenza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juan</forename><forename type="middle">J</forename><surname>Durillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Ermon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Juurlink</surname></persName>
		</author>
		<idno type="DOI">10.1145/3078659.3078664</idno>
		<ptr target="http://dx.doi.org/10.1145/3078659.3078664" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th International Workshop on Software and Compilers for Embedded Systems (SCOPES&apos;17)</title>
		<meeting>the 20th International Workshop on Software and Compilers for Embedded Systems (SCOPES&apos;17)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="72" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<author>
			<persName><forename type="first">Chris</forename><surname>Cummins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pavlos</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michel</forename><surname>Steuwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hugh</forename><surname>Leather</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.02490</idno>
		<title level="m">Autotuning OpenCL workgroup size for stencil patterns</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">End-to-end deep learning of optimization heuristics</title>
		<author>
			<persName><forename type="first">C</forename><surname>Cummins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Leather</surname></persName>
		</author>
		<idno type="DOI">10.1109/PACT.2017.24</idno>
		<ptr target="http://dx.doi.org/10.1109/PACT.2017.24" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th International Conference on Parallel Architectures and Compilation Techniques (PACT&apos;17)</title>
		<meeting>the 26th International Conference on Parallel Architectures and Compilation Techniques (PACT&apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="219" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Synthesizing benchmarks for predictive modeling</title>
		<author>
			<persName><forename type="first">Chris</forename><surname>Cummins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pavlos</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zheng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hugh</forename><surname>Leather</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/ACM International Symposium on Code Generation and Optimization (CGO&apos;17)</title>
		<meeting>the IEEE/ACM International Symposium on Code Generation and Optimization (CGO&apos;17)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="86" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">A fast and elitist multiobjective genetic algorithm: NSGA-II</title>
		<author>
			<persName><forename type="first">Kalyanmoy</forename><surname>Deb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amrit</forename><surname>Pratap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sameer</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">A M T</forename><surname>Meyarivan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="182" to="197" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Ensemble methods in machine learning</title>
		<author>
			<persName><forename type="first">G</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><surname>Dietterich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Multiple Classifier Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="1" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Autotuning algorithmic choice for input sensitivity</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ansel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Veeramachaneni</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2737969" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="379" to="390" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Fast compiler optimisation evaluation using code-feature based performance prediction</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dubach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Franke</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1242553" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Conference on Computing Frontiers</title>
		<meeting>the 4th International Conference on Computing Frontiers</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="131" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Portable compiler optimisation across embedded programs and microarchitectures using machine learning</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dubach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">M</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">V</forename><surname>Bonilla</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1669124" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual IEEE/ACM International Symposium on Microarchitecture</title>
		<meeting>the 42nd Annual IEEE/ACM International Symposium on Microarchitecture</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="78" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title level="m" type="main">The IDA Pro Book: The Unofficial Guide to the World&apos;s Most Popular Disassembler</title>
		<author>
			<persName><forename type="first">Chris</forename><surname>Eagle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>No Starch Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Dark silicon and the end of multicore scaling</title>
		<author>
			<persName><forename type="first">Emily</forename><surname>Hadi Esmaeilzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Renee</forename><surname>Blem</surname></persName>
		</author>
		<author>
			<persName><surname>St</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karthikeyan</forename><surname>Amant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doug</forename><surname>Sankaralingam</surname></persName>
		</author>
		<author>
			<persName><surname>Burger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 38th Annual International Symposium on Computer Architecture (ISCA&apos;11)</title>
		<meeting>the 38th Annual International Symposium on Computer Architecture (ISCA&apos;11)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="365" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Machine learning based auto-tuning for enhanced opencl performance portability</title>
		<author>
			<persName><forename type="first">Thomas</forename><forename type="middle">L</forename><surname>Falch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anne</forename><forename type="middle">C</forename><surname>Elster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Parallel and Distributed Processing Symposium Workshop (IPDPSW&apos;15)</title>
		<meeting>the IEEE International Parallel and Distributed Processing Symposium Workshop (IPDPSW&apos;15)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1231" to="1240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Practical iterative optimization for the data center</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Eeckhout</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2739048" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Lx: A technology platform for customizable VLIW embedded processing</title>
		<author>
			<persName><forename type="first">Paolo</forename><surname>Faraboschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giuseppe</forename><surname>Desoli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fred</forename><surname>Homewood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGARCH Computer Architecture News</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="203" to="213" />
			<date type="published" when="2000">2000</date>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Parametric integer programming</title>
		<author>
			<persName><forename type="first">Paul</forename><surname>Feautrier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RAIRO Rech. Opération</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="243" to="268" />
			<date type="published" when="1988">1988. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">The program dependence graph and its use in optimization</title>
		<author>
			<persName><forename type="first">Jeanne</forename><surname>Ferrante</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karl</forename><forename type="middle">J</forename><surname>Ottenstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joe</forename><forename type="middle">D</forename><surname>Warren</surname></persName>
		</author>
		<idno type="DOI">10.1145/24039.24041</idno>
		<ptr target="http://dx.doi.org/10.1145/24039.24041" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="319" to="349" />
			<date type="published" when="1987-07">1987. July 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">VLIW processors: Once blue sky, now commonplace</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Faraboschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Solid-State Circ. Mag</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="10" to="17" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Microcode compaction</title>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page">7</biblScope>
			<date type="published" when="1981">1981. 1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<monogr>
		<title level="m" type="main">Embedded Computing: A VLIW Approach to Architecture, Compilers and Tools</title>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paolo</forename><surname>Faraboschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cliff</forename><surname>Young</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">Embedded Computing: A VLIW Approach to Architecture</title>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paolo</forename><surname>Faraboschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cliff</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Compilers and Tools</title>
		<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title level="m" type="main">Probabilistic source-level optimisation of embedded programs</title>
		<author>
			<persName><forename type="first">B</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1065922" />
		<imprint>
			<date type="published" when="2005">2005. 2005</date>
			<publisher>ACM SIGPLAN Notices</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">Automatic inference of models for statistical code compression</title>
		<author>
			<persName><forename type="first">Christopher</forename><forename type="middle">W</forename><surname>Fraser</surname></persName>
		</author>
		<idno type="DOI">10.1145/301631.301672</idno>
		<ptr target="http://dx.doi.org/10.1145/301631.301672" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="242" to="246" />
			<date type="published" when="1999-05">1999. May 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">Phase ordering of register allocation and instruction scheduling</title>
		<author>
			<persName><forename type="first">Stefan</forename><forename type="middle">M</forename><surname>Freudenberger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">C</forename><surname>Ruttenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Code GenerationâĂŤ Concepts, Tools, Techniques</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="146" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<monogr>
		<author>
			<persName><forename type="first">Jerome</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Trevor</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Tibshirani</surname></persName>
		</author>
		<title level="m">The Elements of Statistical Learning</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">Bayesian network classifiers</title>
		<author>
			<persName><forename type="first">Nir</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dan</forename><surname>Geiger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Moises</forename><surname>Goldszmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mach. Learn</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="131" to="163" />
			<date type="published" when="1997">1997. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<monogr>
		<title level="m" type="main">Iterative compilation and performance prediction for numerical applications</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G</forename><surname>Fursin</surname></persName>
		</author>
		<ptr target="https://www.era.lib.ed.ac.uk/handle/1842/565" />
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<monogr>
		<title level="m" type="main">Collective benchmark (cbench), a collection of open-source programs with multiple datasets assembled by the community to enable realistic benchmarking and research on program and architecture optimization</title>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<ptr target="http://ctuning.org/wiki/index.php/CTools:CBench" />
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Midatasets: Creating the conditions for a more realistic evaluation of iterative optimization</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Temam</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-69338-3</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/978-3-540-69338-3" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on High-Performance Embedded Architectures and Compilers</title>
		<meeting>the International Conference on High-Performance Embedded Architectures and Compilers</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="245" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">Building a practical iterative interactive compiler</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
		<ptr target="https://www.researchgate.net/profile/Chuck" />
	</analytic>
	<monogr>
		<title level="m">Workshop Proceedings</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">A practical method for quickly evaluating program optimizations</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Temam</surname></persName>
		</author>
		<idno type="DOI">10.1007/11587514</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/11587514" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on High-Performance Embedded Architectures and Compilers</title>
		<meeting>the International Conference on High-Performance Embedded Architectures and Compilers</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="29" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">Milepost GCC: Machine learning enabled self-tuning compiler</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kashnikov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">W</forename><surname>Memon</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10766-010-0161-2</idno>
		<ptr target="http://link.springer.com/article/10.1007/s10766-010-0161-2" />
	</analytic>
	<monogr>
		<title level="j">Int. J. Parallel Program</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="296" to="327" />
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">Collective knowledge: Towards R&amp;D sustainability</title>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anton</forename><surname>Lokhmotov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ed</forename><surname>Plowman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE&apos;16)</title>
		<meeting>the Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE&apos;16)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="864" to="869" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<monogr>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anton</forename><surname>Lokhmotov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dmitry</forename><surname>Savenko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eben</forename><surname>Upton</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1801.08024</idno>
		<title level="m">A collective knowledge workflow for collaborative research into multi-objective autotuning and machine learning techniques</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b103">
	<monogr>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdul</forename><surname>Memon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christophe</forename><surname>Guillon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anton</forename><surname>Lokhmotov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1506.06256</idno>
		<title level="m">Collective mind, part II: Towards performance-and cost-aware software engineering as a natural science</title>
		<imprint>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title level="a" type="main">MILEPOST GCC: Machine learning based research compiler</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Miranda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Temam</surname></persName>
		</author>
		<ptr target="https://hal.inria.fr/inria-00294704/" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the GCC Summit</title>
		<meeting>the GCC Summit</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M W</forename><surname>Knijnenburg</surname></persName>
		</author>
		<idno type="DOI">10.1007/11596110</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/11596110" />
		<title level="m">Evaluating iterative compilation. Proceedings of the International Workshop on Languages and Compilers for Parallel Computing</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="362" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">Collective optimization</title>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Temam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on High-Performance Embedded Architectures and Compilers</title>
		<meeting>the International Conference on High-Performance Embedded Architectures and Compilers</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="34" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<analytic>
		<title level="a" type="main">Collective optimization: A practical collaborative approach</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Temam</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1880047" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2010">2010. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title level="a" type="main">SOCRATES-A seamless online compiler and system runtime autotuning framework for energy-aware applications</title>
		<author>
			<persName><forename type="first">Davide</forename><surname>Gadioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pedro</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emanuele</forename><surname>Vitali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><surname>Cardoso</surname></persName>
		</author>
		<idno type="DOI">10.23919/DATE.2018.8342183</idno>
		<ptr target="http://dx.doi.org/10.23919/DATE.2018.8342183" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Design, Automation and Test in Europe Conference &amp; Exhibition (DATE&apos;18)</title>
		<meeting>the Design, Automation and Test in Europe Conference &amp; Exhibition (DATE&apos;18)</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1143" to="1146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<analytic>
		<title level="a" type="main">Evolutionary optimization of compiler flag selection by learning and exploiting flags interactions</title>
		<author>
			<persName><forename type="first">Unai</forename><surname>Garciarena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Santana</surname></persName>
		</author>
		<idno type="DOI">10.1145/2908961.2931696</idno>
		<ptr target="http://dx.doi.org/10.1145/2908961.2931696" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 on Genetic and Evolutionary Computation Conference Companion (GECCO&apos;16)</title>
		<meeting>the 2016 on Genetic and Evolutionary Computation Conference Companion (GECCO&apos;16)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1159" to="1166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b110">
	<monogr>
		<author>
			<persName><forename type="first">Kyriakos</forename><surname>Georgiou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Craig</forename><surname>Blackmore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Xavier-De Souza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kerstin</forename><surname>Eder</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.09845</idno>
		<title level="m">Less is more: Exploiting the standard compiler optimization levels for better performance and energy consumption</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b111">
	<analytic>
		<title level="a" type="main">An empirical study of the effect of sourcelevel transformations on compiler stability</title>
		<author>
			<persName><forename type="first">Zhangxiaowen</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Justin</forename><forename type="middle">Josef</forename><surname>Szaday</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zehra</forename><surname>Sura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Neftali</forename><surname>Watkinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saeed</forename><surname>Maleki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Padua</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexandru</forename><surname>Nicolau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><forename type="middle">V</forename><surname>Veidenbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Compilers for Parallel Computing (CPC&apos;18)</title>
		<meeting>the Workshop on Compilers for Parallel Computing (CPC&apos;18)</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title level="a" type="main">Exploratory factor analysis</title>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">L</forename><surname>Gorsuch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Multivariate Experimental Psychology</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1988">1988</date>
			<biblScope unit="page" from="231" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<analytic>
		<title level="a" type="main">Auto-tuning a highlevel language targeted to GPU codes</title>
		<author>
			<persName><forename type="first">Scott</forename><surname>Grauer-Gray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lifan</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Searles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sudhee</forename><surname>Ayalasomayajula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Innovative Parallel Computing (InPar&apos;12)</title>
		<meeting>the Conference on Innovative Parallel Computing (InPar&apos;12)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<analytic>
		<title level="a" type="main">Compiler research: The next 50 years</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Padua</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Pingali</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1461946" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b115">
	<analytic>
		<title level="a" type="main">Optimizing general purpose compiler optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Haneda</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1062293" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd Conference on Computing frontiers</title>
		<meeting>the 2nd Conference on Computing frontiers</meeting>
		<imprint>
			<date type="published" when="2005">2005. 2005</date>
			<biblScope unit="page" from="180" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b116">
	<analytic>
		<title level="a" type="main">Unsupervised learning</title>
		<author>
			<persName><forename type="first">Trevor</forename><surname>Hastie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Tibshirani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jerome</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Elements of Statistical Learning</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="485" to="585" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title level="a" type="main">A survey and taxonomy of location systems for ubiquitous computing</title>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gaetano</forename><surname>Borriello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="57" to="66" />
			<date type="published" when="2001">2001. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<analytic>
		<title level="a" type="main">Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups</title>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Li</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dong</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><forename type="middle">E</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdel-Rahman</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Navdeep</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Vanhoucke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Patrick</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tara</forename><forename type="middle">N</forename><surname>Sainath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Process. Mag</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="82" to="97" />
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b119">
	<analytic>
		<title level="a" type="main">Scientific benchmarking of parallel computing systems: Twelve ways to tell the masses when reporting performance results</title>
		<author>
			<persName><forename type="first">Torsten</forename><surname>Hoefler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Belli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis</title>
		<meeting>the International Conference for High Performance Computing, Networking, Storage and Analysis</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page">73</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<analytic>
		<title level="a" type="main">Microarchitecture-independent workload characterization</title>
		<author>
			<persName><forename type="first">Kenneth</forename><surname>Hoste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lieven</forename><surname>Eeckhout</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Micro</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="63" to="72" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b121">
	<analytic>
		<title level="a" type="main">Cole: Compiler optimization level exploration</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hoste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Eeckhout</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1356080" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th Annual IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the 6th Annual IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="165" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b122">
	<analytic>
		<title level="a" type="main">Automated just-in-time compiler tuning</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hoste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Georges</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Eeckhout</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1772965" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th Annual IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the 8th Annual IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2010">2010. 2010</date>
			<biblScope unit="page" from="62" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b123">
	<analytic>
		<title level="a" type="main">Dynamic programming</title>
		<author>
			<persName><forename type="first">Ronald</forename><forename type="middle">A</forename><surname>Howard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="317" to="348" />
			<date type="published" when="1966">1966. 1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b124">
	<analytic>
		<title/>
		<author>
			<orgName type="collaboration">Texas Instruments</orgName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SoC Dev. Board</title>
		<imprint>
			<biblScope unit="volume">4430</biblScope>
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
	<note>OMAP</note>
</biblStruct>

<biblStruct xml:id="b125">
	<analytic>
		<title level="a" type="main">Compiling and optimizing java 8 programs for gpu execution</title>
		<author>
			<persName><forename type="first">Kazuaki</forename><surname>Ishizaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Akihiro</forename><surname>Hayashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gita</forename><surname>Koblents</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vivek</forename><surname>Sarkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Parallel Architecture and Compilation (PACT&apos;15)</title>
		<meeting>the International Conference on Parallel Architecture and Compilation (PACT&apos;15)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="419" to="431" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b126">
	<analytic>
		<title level="a" type="main">Exploiting phase inter-dependencies for faster iterative compiler optimization phase order searches</title>
		<author>
			<persName><forename type="first">R</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prasad</forename><forename type="middle">A</forename><surname>Jantz</surname></persName>
		</author>
		<author>
			<persName><surname>Kulkarni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Compilers, Architecture and Synthesis for Embedded Systems (CASES&apos;13)</title>
		<meeting>the International Conference on Compilers, Architecture and Synthesis for Embedded Systems (CASES&apos;13)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b127">
	<monogr>
		<title level="m" type="main">A Methodology for Using the Itanium 2 Performance Counters for Bottleneck Analysis</title>
		<author>
			<persName><forename type="first">Sverre</forename><surname>Jarp</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
		<respStmt>
			<orgName>HP Labs</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b128">
	<analytic>
		<title level="a" type="main">LITTLE system architecture from ARM: Saving power through heterogeneous multiprocessing and task context migration</title>
		<author>
			<persName><forename type="first">Brian</forename><surname>Jeff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Design Automation Conference</title>
		<meeting>the 49th Annual Design Automation Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1143" to="1146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b129">
	<monogr>
		<author>
			<persName><forename type="first">Richard</forename><surname>Arnold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Johnson</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Dean</forename><forename type="middle">W</forename><surname>Wichern</surname></persName>
		</author>
		<title level="m">Applied Multivariate Statistical Analysis</title>
		<meeting><address><addrLine>Upper Saddle River, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">5</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b130">
	<monogr>
		<author>
			<persName><forename type="first">Bill</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guy</forename><surname>Steele</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Gosling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gilad</forename><surname>Bracha</surname></persName>
		</author>
		<title level="m">Java (TM) Language Specification</title>
		<imprint>
			<publisher>Addisson-Wesley</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b131">
	<analytic>
		<title level="a" type="main">Statistical models to accelerate software development by means of iterative compilation</title>
		<author>
			<persName><forename type="first">Agnieszka</forename><surname>Kamiadska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wacodzimierz</forename><surname>Bielecki</surname></persName>
		</author>
		<ptr target="https://journals.agh.edu.pl/csci/article/view/1800" />
	</analytic>
	<monogr>
		<title level="j">Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page">407</biblScope>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b132">
	<analytic>
		<title level="a" type="main">HERCULES: A pattern driven code transformation system</title>
		<author>
			<persName><forename type="first">Christos</forename><surname>Kartsaklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oscar</forename><surname>Hernandez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chung-Hsing</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Ilsche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wayne</forename><surname>Joubert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE 26th International Parallel and Distributed Processing Symposium Workshops &amp; PhD Forum (IPDPSW&apos;12)</title>
		<meeting>the IEEE 26th International Parallel and Distributed Processing Symposium Workshops &amp; PhD Forum (IPDPSW&apos;12)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="574" to="583" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b133">
	<analytic>
		<title level="a" type="main">HSLOT: The HERCULES scriptable loop transformations engine</title>
		<author>
			<persName><forename type="first">Christos</forename><surname>Kartsaklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eunjung</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Workshop on Domain-Specific Languages and High-Level Frameworks for High Performance Computing</title>
		<meeting>the 4th International Workshop on Domain-Specific Languages and High-Level Frameworks for High Performance Computing</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="31" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b134">
	<analytic>
		<title level="a" type="main">A methodology pruning the search space of six compiler transformations by addressing them together as one problem and by exploiting the hardware architecture details</title>
		<author>
			<persName><forename type="first">Vasilios</forename><surname>Kelefouras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="page" from="1" to="24" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b135">
	<monogr>
		<title level="m" type="main">Performance improvement in kernels by guiding compiler auto-vectorization heuristics. PRACE-RI</title>
		<author>
			<persName><forename type="first">William</forename><surname>Killian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Renato</forename><surname>Miceli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eunjung</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marco</forename><surname>Alvarez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<ptr target="http://www.prace-ri.eu/IMG/pdf/WP183.pdf" />
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b136">
	<analytic>
		<title level="a" type="main">Financial time series forecasting using support vector machines</title>
		<author>
			<persName><forename type="first">Kyoung-Jae</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="307" to="319" />
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b137">
	<monogr>
		<title level="m" type="main">Graph-based features for machine learning driven code optimization</title>
		<author>
			<persName><forename type="first">Anton</forename><surname>Kindestam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
	<note>Master of science Dissertation, KTH, urn:nbn:se:kth:diva-211444</note>
</biblStruct>

<biblStruct xml:id="b138">
	<analytic>
		<title level="a" type="main">Iterative compilation in program optimization</title>
		<author>
			<persName><forename type="first">P</forename><surname>Toru Kisuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><surname>Wijshoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Compilers for Parallel Computers (CPC&apos;10)</title>
		<meeting>the Conference on Compilers for Parallel Computers (CPC&apos;10)</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b139">
	<analytic>
		<title level="a" type="main">A feasibility study in iterative compilation</title>
		<author>
			<persName><forename type="first">Toru</forename><surname>Kisuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mike</forename><forename type="middle">F P</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">François</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Harry</forename><forename type="middle">A G</forename><surname>Bodin</surname></persName>
		</author>
		<author>
			<persName><surname>Wijshoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">High Performance Computing</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="121" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b140">
	<analytic>
		<title level="a" type="main">Combined selection of tile sizes and unroll factors using iterative compilation</title>
		<author>
			<persName><forename type="first">Toru</forename><surname>Kisuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><surname>O'boyle</surname></persName>
		</author>
		<idno type="DOI">10.1109/PACT.2000.888348</idno>
		<ptr target="http://dx.doi.org/10.1109/PACT.2000.888348" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2000 International Conference on Parallel Architectures and Compilation Techniques (PACT&apos;00)</title>
		<meeting>the 2000 International Conference on Parallel Architectures and Compilation Techniques (PACT&apos;00)</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="237" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b141">
	<analytic>
		<title level="a" type="main">Combined selection of tile sizes and unroll factors using iterative compilation</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M W</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kisuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O 'boyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Supercomput</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="43" to="67" />
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b142">
	<analytic>
		<title level="a" type="main">A method for estimating optimal unrolling times for nested loops</title>
		<author>
			<persName><forename type="first">A</forename><surname>Koseki</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd International Symposium on Parallel Architectures, Algorithms, and Networks (I-SPAN&apos;97)</title>
		<meeting>the 3rd International Symposium on Parallel Architectures, Algorithms, and Networks (I-SPAN&apos;97)</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="376" to="382" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b143">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName><forename type="first">Alex</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<publisher>Curran Associates, inc</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b144">
	<analytic>
		<title level="a" type="main">Design space exploration</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">C</forename><surname>Ku</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><forename type="middle">De</forename><surname>Micheli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">High Level Synthesis of ASICs under Timing and Synchronization Constraints</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="83" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b145">
	<analytic>
		<title level="a" type="main">Fast searches for effective optimization phase sequences</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hines</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hiser</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=996863" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="171" to="182" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b146">
	<analytic>
		<title level="a" type="main">Improving both the performance benefits and speed of optimization phase sequence searches</title>
		<author>
			<persName><forename type="first">Prasad</forename><forename type="middle">A</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">R</forename><surname>Jantz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Whalley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Sigplan Notices</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b147">
	<analytic>
		<title level="a" type="main">Evaluating heuristic optimization phase order search algorithms</title>
		<author>
			<persName><forename type="first">Prasad</forename><forename type="middle">A</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Whalley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gary</forename><forename type="middle">S</forename><surname>Tyson</surname></persName>
		</author>
		<idno type="DOI">10.1109/CGO.2007.9</idno>
		<ptr target="http://dx.doi.org/10.1109/CGO.2007.9" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;07)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;07)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="157" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b148">
	<analytic>
		<title level="a" type="main">Exhaustive optimization phase order space exploration</title>
		<author>
			<persName><forename type="first">Prasad</forename><forename type="middle">A</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Whalley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gary</forename><forename type="middle">S</forename><surname>Tyson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jack</forename><forename type="middle">W</forename><surname>Davidson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;06)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;06)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page">13</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b149">
	<analytic>
		<title level="a" type="main">Practical exhaustive optimization phase order exploration and evaluation</title>
		<author>
			<persName><forename type="first">Prasad</forename><forename type="middle">A</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Whalley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gary</forename><forename type="middle">S</forename><surname>Tyson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jack</forename><forename type="middle">W</forename><surname>Davidson</surname></persName>
		</author>
		<idno type="DOI">10.1145/1509864.1509865</idno>
		<ptr target="http://dx.doi.org/10.1145/1509864.1509865" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2009-04">2009. Apr. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b150">
	<monogr>
		<title level="m" type="main">Mitigating the compiler optimization phase-ordering problem using machine learning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2384628" />
		<imprint>
			<date type="published" when="2012">2012. 2012</date>
			<publisher>ACM SIGPLAN Notices</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b151">
	<analytic>
		<title level="a" type="main">Automatic construction of inlining heuristics using machine learning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b152">
	<analytic>
		<title level="a" type="main">Compiler phase ordering and optimizing MPI runtime parameters using heuristic algorithms on SMPs</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">Satish</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sakthivel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Sushil</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Arun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Appl. Eng. Res</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="30831" to="30851" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b153">
	<analytic>
		<title level="a" type="main">LLVM: A compilation framework for lifelong program analysis &amp; transformation</title>
		<author>
			<persName><forename type="first">Chris</forename><surname>Lattner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vikram</forename><surname>Adve</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;04)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;04)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="75" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b154">
	<analytic>
		<title level="a" type="main">Automatic feature generation for machine learning based optimizing compilation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Leather</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bonilla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>O'boyle</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;09)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;09)</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="81" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b155">
	<monogr>
		<title level="m" type="main">An Overview of the Production Quality Compiler-Compiler Project</title>
		<author>
			<persName><forename type="first">Bruce</forename><forename type="middle">W</forename><surname>Leverett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roderic</forename><surname>Geoffrey Galton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><forename type="middle">O</forename><surname>Cattell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><forename type="middle">M</forename><surname>Hobbs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">H</forename><surname>Newcomer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bruce</forename><forename type="middle">R</forename><surname>Reiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">A</forename><surname>Schatz</surname></persName>
		</author>
		<author>
			<persName><surname>Wulf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University, Department of Computer Science</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b156">
	<analytic>
		<title level="a" type="main">Feature mining for machine learning based compilation optimization</title>
		<author>
			<persName><forename type="first">Fengqian</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Feilong</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yao</forename><surname>Shen</surname></persName>
		</author>
		<idno type="DOI">10.1109/IMIS.2014.26</idno>
		<ptr target="http://dx.doi.org/10.1109/IMIS.2014.26" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS&apos;14</title>
		<meeting>the 8th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS&apos;14</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="207" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b157">
	<analytic>
		<title level="a" type="main">McPAT: An integrated power, area, and timing modeling framework for multicore and manycore architectures</title>
		<author>
			<persName><forename type="first">Sheng</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jung</forename><surname>Ho Ahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">D</forename><surname>Strong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jay</forename><forename type="middle">B</forename><surname>Brockman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dean</forename><forename type="middle">M</forename><surname>Tullsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Norman</forename><forename type="middle">P</forename><surname>Jouppi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO&apos;09)</title>
		<meeting>the 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO&apos;09)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="469" to="480" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b158">
	<analytic>
		<title level="a" type="main">A note on auto-tuning GEMM for GPUs</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dongarra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tomov</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-01970-8</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/978-3-642-01970-8" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Computational Science (ICCS&apos;09</title>
		<meeting>the Conference on Computational Science (ICCS&apos;09</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b159">
	<monogr>
		<title level="m" type="main">ALIC: A low overhead compiler optimization prediction model. Wireless Personal Commun</title>
		<author>
			<persName><forename type="first">Hui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rongcai</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yingying</forename><surname>Li</surname></persName>
		</author>
		<idno type="DOI">10.1007/s11277-018-5479-x</idno>
		<ptr target="http://dx.doi.org/10.1007/s11277-018-5479-x" />
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b160">
	<monogr>
		<title level="m" type="main">PolyLib: A library for manipulating parameterized polyhedra</title>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Loechner</surname></persName>
		</author>
		<ptr target="http://icps.u-strasbg.fr/PolyLib/" />
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b161">
	<analytic>
		<title level="a" type="main">Automatic WCET reduction by machine learning based heuristics for function inlining</title>
		<author>
			<persName><forename type="first">P</forename><surname>Lokuciejewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gedikli</surname></persName>
		</author>
		<ptr target="https://www.researchgate.net/profile/Peter" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd Workshop on Statistical and Machine Learning Approaches to Architectures and Compilation (SMART&apos;09)</title>
		<meeting>the 3rd Workshop on Statistical and Machine Learning Approaches to Architectures and Compilation (SMART&apos;09)</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b162">
	<analytic>
		<title level="a" type="main">Multi-objective exploration of compiler optimizations for real-time systems</title>
		<author>
			<persName><forename type="first">Paul</forename><surname>Lokuciejewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sascha</forename><surname>Plazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Heiko</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Marwedel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lothar</forename><surname>Thiele</surname></persName>
		</author>
		<idno type="DOI">10.1109/ISORC.2010.15</idno>
		<ptr target="http://dx.doi.org/10.1109/ISORC.2010.15" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC&apos;10)</title>
		<meeting>the 13th IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC&apos;10)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b163">
	<analytic>
		<title level="a" type="main">Program improvement by source-to-source transformation</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Loveman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="121" to="145" />
			<date type="published" when="1977">1977. 1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b164">
	<analytic>
		<title level="a" type="main">Pin: Building customized program analysis tools with dynamic instrumentation</title>
		<author>
			<persName><forename type="first">Chi-Keung</forename><surname>Luk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Cohn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Muth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Harish</forename><surname>Patil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Artur</forename><surname>Klauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoff</forename><surname>Lowney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vijay</forename><forename type="middle">Janapa</forename><surname>Reddi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kim</forename><surname>Hazelwood</surname></persName>
		</author>
		<idno type="DOI">10.1145/1065010.1065034</idno>
		<ptr target="http://dx.doi.org/10.1145/1065010.1065034" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;05)</title>
		<meeting>the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI&apos;05)<address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="190" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b165">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1407.4075</idno>
		<ptr target="http://arxiv.org/abs/1407.4075" />
		<title level="m">Finding representative sets of optimizations for adaptive multiversioning applications</title>
		<imprint>
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b166">
	<analytic>
		<title level="a" type="main">Effective compiler support for predicated execution using the hyperblock</title>
		<author>
			<persName><forename type="first">Scott</forename><forename type="middle">A</forename><surname>Mahlke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">C</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Hank</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roger</forename><forename type="middle">A</forename><surname>Bringmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGMICRO Newsletter</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="45" to="54" />
			<date type="published" when="1992">1992</date>
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b167">
	<analytic>
		<title level="a" type="main">A correlation-based design space exploration methodology for multi-processor systems-on-chip</title>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Mariani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aleksandar</forename><surname>Brankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jovana</forename><surname>Jovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vittorio</forename><surname>Zaccaria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 47th ACM/IEEE Design Automation Conference</title>
		<meeting>the 47th ACM/IEEE Design Automation Conference</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="120" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b168">
	<analytic>
		<title level="a" type="main">Scenario based optimization: A framework for statically enabling online optimizations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mars</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Hundt</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1545068" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Annual IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the 7th Annual IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b169">
	<analytic>
		<title level="a" type="main">Clustering-based selection for the exploration of compiler optimization sequences</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G A</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nobre</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2883614" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page">28</biblScope>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b170">
	<analytic>
		<title level="a" type="main">Exploration of compiler optimization sequences using clustering-based selection</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Luiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">B</forename><surname>Alexandre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eduardo</forename><surname>Delbem</surname></persName>
		</author>
		<author>
			<persName><surname>Marques</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>João</surname></persName>
		</author>
		<author>
			<persName><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGPLAN Notices</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b171">
	<monogr>
		<title level="m" type="main">Scheduling straight-line code using reinforcement learning and rollouts</title>
		<author>
			<persName><forename type="first">Amy</forename><surname>Mcgovern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eliot</forename><surname>Moss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">G</forename><surname>Barto</surname></persName>
		</author>
		<idno>no. 99-23</idno>
		<imprint>
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b172">
	<analytic>
		<title level="a" type="main">Building a basic block instruction scheduler with reinforcement learning and rollouts</title>
		<author>
			<persName><forename type="first">Amy</forename><surname>Mcgovern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eliot</forename><surname>Moss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><forename type="middle">G</forename><surname>Barto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mach. Learn</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="141" to="160" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b173">
	<analytic>
		<title level="a" type="main">Crowdtuning: Systematizing auto-tuning using predictive modeling and crowdsourcing</title>
		<author>
			<persName><forename type="first">Abdul</forename><surname>Wahid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Memon</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the PARCO Mini-Symposium on Application Autotuning for HPC (Architectures)</title>
		<meeting>the PARCO Mini-Symposium on Application Autotuning for HPC (Architectures)</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b174">
	<analytic>
		<title level="a" type="main">Autotune: A plugin-driven approach to the automatic tuning of parallel applications</title>
		<author>
			<persName><forename type="first">R</forename><surname>Miceli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Civario</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sikora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>César</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-36803-5</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/978-3-642-36803-5" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Applied Parallel Computing</title>
		<meeting>the International Workshop on Applied Parallel Computing</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="328" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b175">
	<monogr>
		<ptr target="http://www.assembla.com/wiki/show/minir-dev" />
		<title level="m">MinIR 2011. MINimal IR space</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b176">
	<monogr>
		<author>
			<persName><forename type="first">Mehryar</forename><surname>Mohri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Afshin</forename><surname>Rostamizadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ameet</forename><surname>Talwalkar</surname></persName>
		</author>
		<title level="m">Foundations of Machine Learning</title>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b177">
	<analytic>
		<title level="a" type="main">A machine learning approach to automatic production of compiler heuristics</title>
		<author>
			<persName><forename type="first">A</forename><surname>Monsifrot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bodin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Quiniou</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-46148-5</idno>
		<ptr target="http://link.springer.com/chapter/10.1007/3-540-46148-5" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Artificial Intelligence: Methodology, Systems, and Applications</title>
		<meeting>the International Conference on Artificial Intelligence: Methodology, Systems, and Applications</meeting>
		<imprint>
			<date type="published" when="2002">2002. 2002</date>
			<biblScope unit="page" from="41" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b178">
	<monogr>
		<title level="m" type="main">Introducing ReQuEST: An open platform for reproducible and quality-efficient systems-ML tournaments</title>
		<author>
			<persName><forename type="first">Thierry</forename><surname>Moreau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anton</forename><surname>Lokhmotov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<idno>CoRR abs/1801.06378. arxiv:1801.06378</idno>
		<ptr target="http://arxiv.org/abs/1801.06378" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b179">
	<analytic>
		<title level="a" type="main">Learning to schedule straight-line code</title>
		<author>
			<persName><forename type="first">Eliot</forename><surname>Moss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Utgoff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Doina</forename><surname>Precup</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Stefanovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carla</forename><surname>Brodley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Scheeff</surname></persName>
		</author>
		<ptr target="http://books.nips.cc/papers/files/nips10/0929.pdf" />
	</analytic>
	<monogr>
		<title level="j">Adv. Neural Info. Process. Syst</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="929" to="935" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b180">
	<monogr>
		<title level="m" type="main">Iterative compilation on mobile devices</title>
		<author>
			<persName><forename type="first">Paschalis</forename><surname>Mpeis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pavlos</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hugh</forename><surname>Leather</surname></persName>
		</author>
		<idno>CoRR abs/ 1511.02603</idno>
		<ptr target="http://arxiv.org/abs/1511.02603" />
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b181">
	<analytic>
		<title level="a" type="main">PAPI: A portable interface to hardware performance counters</title>
		<author>
			<persName><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Mucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shirley</forename><surname>Browne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christine</forename><surname>Deane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">George</forename><surname>Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Department of Defense HPCMP Users Group Conference</title>
		<meeting>the Department of Defense HPCMP Users Group Conference</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="7" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b182">
	<analytic>
		<title level="a" type="main">Practical aggregation of semantical program properties for machine learning based optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Namolaru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1878951" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 International Conference on Compilers, Architectures and Synthesis for Embedded Systems</title>
		<meeting>the 2010 International Conference on Compilers, Architectures and Synthesis for Embedded Systems</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b183">
	<analytic>
		<title level="a" type="main">Compiler phase ordering as an orthogonal approach for reducing energy consumption</title>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reis</forename><surname>Luis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th Workshop on Compilers for Parallel Computing (CPC&apos;16)</title>
		<meeting>the 19th Workshop on Compilers for Parallel Computing (CPC&apos;16)</meeting>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b184">
	<analytic>
		<title level="a" type="main">Use of previously acquired positioning of optimizations for phase ordering exploration</title>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Luiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename><forename type="middle">M P</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th International Workshop on Software and Compilers for Embedded Systems</title>
		<meeting>the 18th International Workshop on Software and Compilers for Embedded Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="58" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b185">
	<analytic>
		<title level="a" type="main">A graph-based iterative compiler pass selection and phase ordering approach</title>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Luiz</surname></persName>
		</author>
		<author>
			<persName><surname>Martins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>João</surname></persName>
		</author>
		<author>
			<persName><surname>Cardoso</surname></persName>
		</author>
		<idno type="DOI">10.1145/2907950.2907959</idno>
		<ptr target="http://dx.doi.org/10.1145/2907950.2907959" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">30</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b186">
	<analytic>
		<title level="a" type="main">Impact of compiler phase ordering when targeting GPUs</title>
		<author>
			<persName><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luís</forename><surname>Reis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>João</surname></persName>
		</author>
		<author>
			<persName><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Parallel Processing Workshops</title>
		<editor>
			<persName><forename type="first">Dora</forename><forename type="middle">B</forename><surname>Heras</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Luc</forename><surname>Bougé</surname></persName>
		</editor>
		<meeting>the Parallel Processing Workshops<address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="427" to="438" />
		</imprint>
	</monogr>
	<note type="report_type">Euro-Par&apos;17</note>
</biblStruct>

<biblStruct xml:id="b187">
	<analytic>
		<title level="a" type="main">OpenJIT: An open-ended, reflective JIT compiler framework for Java</title>
		<author>
			<persName><forename type="first">Hirotaka</forename><surname>Ogawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kouya</forename><surname>Shimura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Satoshi</forename><surname>Matsuoka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fuyuhiko</forename><surname>Maruyama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yukihiko</forename><surname>Sohda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yasunori</forename><surname>Kimura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Conference on Object-Oriented Programming</title>
		<meeting>the European Conference on Object-Oriented Programming</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="362" to="387" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b188">
	<analytic>
		<title level="a" type="main">Minimizing the cost of iterative compilation with active learning</title>
		<author>
			<persName><forename type="first">F</forename><surname>William</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pavlos</forename><surname>Ogilvie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zheng</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hugh</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><surname>Leather</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="245" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b189">
	<monogr>
		<title level="m" type="main">Data-flow graphs as an intermediate program form</title>
		<author>
			<persName><forename type="first">Karl</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ottenstein</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1978">1978</date>
		</imprint>
		<respStmt>
			<orgName>Purdue University</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b190">
	<analytic>
		<title level="a" type="main">Advanced compiler optimizations for supercomputers</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Padua</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Wolfe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1184" to="1201" />
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b191">
	<analytic>
		<title level="a" type="main">A system-level methodology for fast multi-objective design space exploration</title>
		<author>
			<persName><forename type="first">G</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Valsecchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Zaccaria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th ACM Great Lakes Symposium on VLSI</title>
		<meeting>the 13th ACM Great Lakes Symposium on VLSI</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="92" to="95" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b192">
	<analytic>
		<title level="a" type="main">Multi-objective design space exploration of embedded systems</title>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vittorio</forename><surname>Zaccaria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Embed. Comput</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="305" to="316" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b193">
	<analytic>
		<title level="a" type="main">Multi-objective design space exploration of embedded systems</title>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vittorio</forename><surname>Zaccaria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Embed. Comput</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="305" to="316" />
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b194">
	<analytic>
		<title level="a" type="main">Identifying compiler options to minimize energy consumption for embedded platforms</title>
		<author>
			<persName><forename type="first">James</forename><surname>Pallister</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Simon</forename><forename type="middle">J</forename><surname>Hollis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>Bennett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. J</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="page" from="95" to="109" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b195">
	<analytic>
		<title level="a" type="main">Rating compiler optimizations for automatic performance tuning</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eigenmann</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1049958" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 ACM/IEEE Conference on Supercomputing</title>
		<meeting>the 2004 ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">14</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b196">
	<analytic>
		<title level="a" type="main">Fast and effective orchestration of compiler optimizations for automatic performance tuning</title>
		<author>
			<persName><forename type="first">Zhelong</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rudolf</forename><surname>Eigenmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;06)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;06)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page">12</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b197">
	<analytic>
		<title level="a" type="main">Using graph-based program characterization for predictive modeling</title>
		<author>
			<persName><forename type="first">E</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Alvarez</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2259042" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="295" to="305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b198">
	<analytic>
		<title level="a" type="main">Predictive modeling in a polyhedral optimization space</title>
		<author>
			<persName><forename type="first">E</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Pouchet</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10766-013-0241-1</idno>
		<ptr target="http://link.springer.com/article/10.1007/s10766-013-0241-1" />
	</analytic>
	<monogr>
		<title level="j">International J. Parallel Program</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="704" to="750" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b199">
	<analytic>
		<title level="a" type="main">HERCULES: Strong patterns towards more intelligent predictive modeling</title>
		<author>
			<persName><forename type="first">Eunjung</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christos</forename><surname>Kartsaklis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICPP.2014.26</idno>
		<ptr target="http://dx.doi.org/10.1109/ICPP.2014.26" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd International Conference on Parallel Processing</title>
		<meeting>the 43rd International Conference on Parallel Processing</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="172" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b200">
	<analytic>
		<title level="a" type="main">An evaluation of different modeling techniques for iterative compilation</title>
		<author>
			<persName><forename type="first">E</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2038711" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Compilers, Architectures and Synthesis for Embedded Systems (CASES&apos;11)</title>
		<meeting>the 14th International Conference on Compilers, Architectures and Synthesis for Embedded Systems (CASES&apos;11)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b201">
	<monogr>
		<title level="m" type="main">Automatic selection of compiler optimizations using program characterization and machine learning title</title>
		<author>
			<persName><forename type="first">Eun</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Park</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
			<pubPlace>USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Delaware</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b202">
	<monogr>
		<title level="m" type="main">Computer Organization and Design: The Hardware/Software Interface</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">L</forename><surname>Hennessy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
			<pubPlace>Newnes</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b203">
	<analytic>
		<title level="a" type="main">Bayesian Networks: A Model of Self-activated Memory for Evidential Reasoning</title>
		<author>
			<persName><forename type="first">Judea</forename><surname>Pearl</surname></persName>
		</author>
		<idno>no. CSD-850017</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Conference of the Cognitive Science Society</title>
		<meeting>the 7th Conference of the Cognitive Science Society</meeting>
		<imprint>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="329" to="334" />
		</imprint>
	</monogr>
	<note type="report_type">UCLA Technical report</note>
</biblStruct>

<biblStruct xml:id="b204">
	<monogr>
		<title level="m" type="main">Automatic configuration of GCC using irace</title>
		<author>
			<persName><forename type="first">Leslie</forename><surname>Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cáceres</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Federico</forename><surname>Pagnozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alberto</forename><surname>Franzin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Stützle</surname></persName>
		</author>
		<editor>Artificial Evolution, Evelyne Lutton, Pierrick Legrand, Pierre Parrend, Nicolas Monmarché, and Marc Schoenauer</editor>
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="202" to="216" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b205">
	<analytic>
		<title level="a" type="main">Statistical selection of compiler options</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P J</forename><surname>Pinkers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M W</forename><surname>Knijnenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Haneda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A G</forename><surname>Wijshoff</surname></persName>
		</author>
		<idno type="DOI">10.1109/MASCOT.2004.1348305</idno>
		<ptr target="http://dx.doi.org/10.1109/MASCOT.2004.1348305" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Computer Society&apos;s Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems (MASCOTS&apos;04)</title>
		<meeting>the IEEE Computer Society&apos;s Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems (MASCOTS&apos;04)</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="494" to="501" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b206">
	<analytic>
		<title level="a" type="main">Incremental global optimization for faster recompilations</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Pollock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Soffa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Computer Languages</title>
		<meeting>the International Conference on Computer Languages</meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
			<biblScope unit="page" from="281" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b207">
	<analytic>
		<title level="a" type="main">Iterative optimization in the polyhedral model. Part I: One-dimensional time</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Pouchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bastoul</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;07)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;07)</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="144" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b208">
	<analytic>
		<title level="a" type="main">Iterative optimization in the polyhedral model. Part II: Multidimensional time</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Pouchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bastoul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cavazos</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1375594" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices. Retrieved from</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b209">
	<analytic>
		<title level="a" type="main">Combined iterative and model-driven optimization in an automatic parallelization framework</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Pouchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Bondhugula</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1884672" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 ACM/IEEE International Conference for High Performance Computing, Networking, Storage and Analysis</title>
		<meeting>the 2010 ACM/IEEE International Conference for High Performance Computing, Networking, Storage and Analysis</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b210">
	<monogr>
		<title level="m" type="main">Polybench: The polyhedral benchmark suite</title>
		<author>
			<persName><forename type="first">Louis-Noël</forename><surname>Pouchet</surname></persName>
		</author>
		<ptr target="http://www.cs.ucla.edu/pöouchet/software/polybench/" />
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b211">
	<analytic>
		<title level="a" type="main">Finding good optimization sequences covering program space</title>
		<author>
			<persName><forename type="first">S</forename><surname>Purini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Jain</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2400715" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b212">
	<monogr>
		<title level="m" type="main">Phase-ordering in optimizing compilers</title>
		<author>
			<persName><forename type="first">Matthieu</forename><surname>Stéphane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Benoit</forename><surname>Queva</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">2800</biblScope>
			<pubPlace>Kgs. Lyngby, Denmark</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Technical University of Denmark, DTU</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">MS thesis</note>
</biblStruct>

<biblStruct xml:id="b213">
	<analytic>
		<title level="a" type="main">Introduction to recommender systems handbook</title>
		<author>
			<persName><forename type="first">Francesco</forename><surname>Ricci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lior</forename><surname>Rokach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bracha</forename><surname>Shapira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Recommender Systems Handbook</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="1" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b214">
	<monogr>
		<title level="m" type="main">Design of Experiments Using the Taguchi Approach: 16 Steps to Product and Process Improvement</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ranjit</surname></persName>
		</author>
		<author>
			<persName><surname>Roy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Wiley-Interscience</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b215">
	<analytic>
		<title level="a" type="main">Automating compiler-directed autotuning for phased performance behavior</title>
		<author>
			<persName><forename type="first">T</forename><surname>Rusira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Basu</surname></persName>
		</author>
		<idno type="DOI">10.1109/IPDPSW.2017.152</idno>
		<ptr target="http://dx.doi.org/10.1109/IPDPSW.2017.152" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW&apos;17)</title>
		<meeting>the IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW&apos;17)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1362" to="1371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b216">
	<analytic>
		<title level="a" type="main">Using machines to learn method-specific compilation strategies</title>
		<author>
			<persName><forename type="first">Ricardo Nabinger</forename><surname>Sanchez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jose</forename><forename type="middle">Nelson</forename><surname>Amaral</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Duane</forename><surname>Szafron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marius</forename><surname>Pirvu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Stoodley</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2190072" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th Annual IEEE/ACM International Symposium on Code Generation and Optimization</title>
		<meeting>the 9th Annual IEEE/ACM International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="257" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b217">
	<analytic>
		<title level="a" type="main">Automatic selection of high-order transformations in the IBM XL FORTRAN compilers</title>
		<author>
			<persName><forename type="first">Vivek</forename><surname>Sarkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM J. Res. Dev</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="233" to="264" />
			<date type="published" when="1997">1997. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b218">
	<analytic>
		<title level="a" type="main">Optimized unrolling of nested loops</title>
		<author>
			<persName><forename type="first">V</forename><surname>Sarkar</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=335246" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Supercomputing</title>
		<meeting>the 14th International Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="153" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b219">
	<analytic>
		<title level="a" type="main">Moore&apos;s law: Past, present, and future</title>
		<author>
			<persName><forename type="first">R</forename><surname>Robert</surname></persName>
		</author>
		<author>
			<persName><surname>Schaller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Spectrum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="52" to="59" />
			<date type="published" when="1997">1997. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b220">
	<analytic>
		<title level="a" type="main">Stochastic optimization of floating-point programs with tunable precision</title>
		<author>
			<persName><forename type="first">E</forename><surname>Schkufza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Aiken</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2594302" />
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices. Retrieved from</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b221">
	<analytic>
		<title level="a" type="main">Deep learning in neural networks: An overview</title>
		<author>
			<persName><forename type="first">Jürgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Netw</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="85" to="117" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b222">
	<analytic>
		<title level="a" type="main">A survey of compiler optimization techniques</title>
		<author>
			<persName><forename type="first">B</forename><surname>Paul</surname></persName>
		</author>
		<author>
			<persName><surname>Schneck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Annual Conference</title>
		<meeting>the ACM Annual Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1973">1973</date>
			<biblScope unit="page" from="106" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b223">
	<analytic>
		<title level="a" type="main">The kernel trick for distances</title>
		<author>
			<persName><forename type="first">Bernhard</forename><surname>Schölkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<publisher>Curran Associates, inc</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="301" to="307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b224">
	<analytic>
		<title level="a" type="main">ANTAREX-AutoTuning and adaptivity approach for energy efficient eXascale HPC systems</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Agosta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Bartolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Beccari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Benini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename><forename type="middle">M P</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlo</forename><surname>Cavazzoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Radim</forename><surname>Cmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jan</forename><surname>Martinovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE 18th International Conference on Computational Science and Engineering (CSE&apos;15)</title>
		<meeting>the IEEE 18th International Conference on Computational Science and Engineering (CSE&apos;15)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="343" to="346" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b225">
	<analytic>
		<title level="a" type="main">AutoTuning and adaptivity appRoach for energy efficient eXascale HPC systems: The ANTAREX approach</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Agosta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Bartolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><forename type="middle">R</forename><surname>Beccari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Benini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">João</forename><surname>Bispo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Radim</forename><surname>Cmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>João</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlo</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName><surname>Cavazzoni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE&apos;16)</title>
		<meeting>the Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE&apos;16)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016-01">Jan Martinovič et al. 2016</date>
			<biblScope unit="page" from="708" to="713" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b226">
	<analytic>
		<title level="a" type="main">The ANTAREX approach to autotuning and adaptivity for energy efficient hpc systems</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Agosta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Cherubin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Davide</forename><surname>Gadioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Bartolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Benini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jan</forename><surname>Martinovič</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Palkovič</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kateřina</forename><surname>Slaninová</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM International Conference on Computing Frontiers</title>
		<meeting>the ACM International Conference on Computing Frontiers</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="288" to="293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b227">
	<analytic>
		<title level="a" type="main">The ANTAREX tool flow for monitoring and autotuning energy efficient HPC systems</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Bartolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Beccari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Candida</forename><surname>Manelfi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlo</forename><surname>Cavazzoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Davide</forename><surname>Gadioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erven</forename><surname>Rohou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Agosta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Embedded Computer Systems: Architecture, Modeling, and Simulation (SAMOS&apos;17)</title>
		<meeting>the International Conference on Embedded Computer Systems: Architecture, Modeling, and Simulation (SAMOS&apos;17)</meeting>
		<imprint>
			<date type="published" when="2017-01">Jan Martinovič et al. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b228">
	<analytic>
		<title level="a" type="main">Multicube: Multi-objective design space exploration of multi-core architectures</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Fornaciari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vittorio</forename><surname>Zaccaria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabrizio</forename><surname>Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marcos</forename><surname>Martinez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sara</forename><surname>Bocchio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Zafalon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prabhat</forename><surname>Avasare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geert</forename><surname>Vanmeerbeeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the VLSI 2010 Annual Symposium</title>
		<meeting>the VLSI 2010 Annual Symposium</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="47" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b229">
	<analytic>
		<title level="a" type="main">Autotuning and adaptivity in energy efficient HPC systems: The ANTAREX toolbox</title>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Agosta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Amir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Davide</forename><surname>Ashouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Gadioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emanuele</forename><surname>Cherubin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luca</forename><surname>Vitali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Benini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniele</forename><surname>Bartolini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename><surname>Cesarini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joao</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pedro</forename><surname>Bispo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Riccardo</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erven</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Loïc</forename><surname>Rohou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Imane</forename><surname>Besnard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nico</forename><surname>Lasri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlo</forename><surname>Sanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Radim</forename><surname>Cavazzoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jan</forename><surname>Cmar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kateřina</forename><surname>Martinovič</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Slaninová</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><forename type="middle">R</forename><surname>Golasowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Candida</forename><surname>Beccari</surname></persName>
		</author>
		<author>
			<persName><surname>Manelfi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Computing Frontiers Conference</title>
		<meeting>the Computing Frontiers Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b230">
	<monogr>
		<title level="m" type="main">Density estimation for statistics and data analysis</title>
		<author>
			<persName><forename type="first">Bernard</forename><forename type="middle">W</forename><surname>Silverman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>CRC press</publisher>
			<biblScope unit="volume">26</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b231">
	<monogr>
		<title level="m" type="main">Using and porting the GNU compiler collection</title>
		<author>
			<persName><forename type="first">Richard</forename><surname>Stallman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
		<respStmt>
			<orgName>MIT Artificial Intelligence Laboratory. Citeseer</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b232">
	<monogr>
		<title level="m" type="main">Using GCC: the GNU compiler collection reference manual</title>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">M</forename><surname>Stallman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>GNU Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b233">
	<analytic>
		<title level="a" type="main">Efficient reinforcement learning through evolving neural network topologies</title>
		<author>
			<persName><forename type="first">Kenneth</forename><forename type="middle">O</forename><surname>Stanley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Genetic and Evolutionary Computation Conference</title>
		<meeting>the Genetic and Evolutionary Computation Conference</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b234">
	<monogr>
		<title level="m" type="main">Automating the construction of compiler heuristics using machine learning</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Stephenson</surname></persName>
		</author>
		<ptr target="http://groups.csail.mit.edu/commit/papers/2006/stephenson_phdthesis.pdf" />
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b235">
	<monogr>
		<title level="m" type="main">Meta optimization: Improving compiler heuristics with machine learning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stephenson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Amarasinghe</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=781141" />
		<imprint>
			<date type="published" when="2003">2003. 2003</date>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="77" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b236">
	<analytic>
		<title level="a" type="main">Predicting unroll factors using supervised classification</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stephenson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Amarasinghe</surname></persName>
		</author>
		<idno type="DOI">10.1109/CGO.2005.29</idno>
		<ptr target="http://dx.doi.org/10.1109/CGO.2005.29" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b237">
	<analytic>
		<title level="a" type="main">Genetic programming applied to compiler heuristic optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stephenson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">M</forename><surname>O'reilly</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-36599-0</idno>
		<ptr target="http://link.springer.com/chapter" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the European Conference on Genetic Programming</title>
		<meeting>the European Conference on Genetic Programming</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="238" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b238">
	<monogr>
		<author>
			<persName><forename type="first">Ralph</forename><forename type="middle">E</forename><surname>Steuer</surname></persName>
		</author>
		<title level="m">Multiple Criteria Optimization: Theory, Computation, and Applications</title>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b239">
	<analytic>
		<title level="a" type="main">Using machine learning to improve automatic vectorization</title>
		<author>
			<persName><forename type="first">K</forename><surname>Stock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">N</forename><surname>Pouchet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sadayappan</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2086729" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">50</biblScope>
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b240">
	<analytic>
		<title level="a" type="main">Overview of the IBM Java just-in-time compiler</title>
		<author>
			<persName><forename type="first">Toshio</forename><surname>Suganuma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Takeshi</forename><surname>Ogasawara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mikio</forename><surname>Takeuchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Toshiaki</forename><surname>Yasue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Motohiro</forename><surname>Kawahito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kazuaki</forename><surname>Ishizaki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hideaki</forename><surname>Komatsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Toshio</forename><surname>Nakatani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Syst. J</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="175" to="193" />
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b241">
	<analytic>
		<title level="a" type="main">Active harmony: Towards automated performance tuning</title>
		<author>
			<persName><forename type="first">Cristian</forename><surname>Ţăpuş</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I-Hsin</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><forename type="middle">K</forename><surname>Hollingsworth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 ACM/IEEE Conference on Supercomputing</title>
		<meeting>the 2002 ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b242">
	<analytic>
		<title level="a" type="main">Parallel iterative compilation: Using MapReduce to speedup machine learning in compilers</title>
		<author>
			<persName><forename type="first">Michele</forename><surname>Tartara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reghizzi</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 3rd International Workshop on MapReduce and Its Applications Date</title>
		<meeting>3rd International Workshop on MapReduce and Its Applications Date</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="33" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b243">
	<analytic>
		<title level="a" type="main">Continuous learning of compiler heuristics</title>
		<author>
			<persName><forename type="first">Michele</forename><surname>Tartara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reghizzi</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Architect. Code Optim</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">46</biblScope>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b244">
	<analytic>
		<title level="a" type="main">Continuous learning of compiler heuristics</title>
		<author>
			<persName><forename type="first">Michele</forename><surname>Tartara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Crespi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reghizzi</forename></persName>
		</author>
		<idno type="DOI">10.1145/2400682.2400705</idno>
		<ptr target="http://dx.doi.org/10.1145/2400682.2400705" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">46</biblScope>
			<date type="published" when="2013-01">2013. Jan. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b245">
	<analytic>
		<title level="a" type="main">On-line policy improvement using monte-carlo search</title>
		<author>
			<persName><forename type="first">Gerald</forename><surname>Tesauro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gregory</surname></persName>
		</author>
		<author>
			<persName><surname>Galperin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Neural Information Processing Systems (NIPS&apos;96)</title>
		<meeting>the Conference on Neural Information Processing Systems (NIPS&apos;96)</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page">41</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b246">
	<analytic>
		<title level="a" type="main">Statistical, practical, and clinical: How many kinds of significance do counselors need to consider?</title>
		<author>
			<persName><forename type="first">Bruce</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Counsel. Dev</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="64" to="71" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b247">
	<analytic>
		<title level="a" type="main">Reducing training time in a one-shot machine learning-based compiler</title>
		<author>
			<persName><forename type="first">J</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>O'boyle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Franke</surname></persName>
		</author>
		<ptr target="http://link.springer.com/10.1007" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Languages and Compilers for Parallel Computing</title>
		<meeting>the International Workshop on Languages and Compilers for Parallel Computing</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="399" to="407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b248">
	<analytic>
		<title level="a" type="main">A scalable auto-tuning framework for compiler optimization</title>
		<author>
			<persName><forename type="first">A</forename><surname>Tiwari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chame</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Symposium on Parallel &amp; Distributed Processin (IPDPS&apos;09)</title>
		<meeting>the IEEE International Symposium on Parallel &amp; Distributed Processin (IPDPS&apos;09)</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b249">
	<analytic>
		<title level="a" type="main">Towards a holistic approach to auto-parallelization: Integrating profile-driven parallelism detection and machine-learning based mapping</title>
		<author>
			<persName><forename type="first">Georgios</forename><surname>Tournavitis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zheng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Björn</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><surname>O'boyle</surname></persName>
		</author>
		<idno type="DOI">10.1145/1543135.1542496</idno>
		<ptr target="http://dx.doi.org/10.1145/1543135.1542496" />
	</analytic>
	<monogr>
		<title level="j">ACM Sigplan Not</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="177" to="187" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b250">
	<analytic>
		<title level="a" type="main">Compiler optimization-space exploration</title>
		<author>
			<persName><forename type="first">S</forename><surname>Triantafyllis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vachharajani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vachharajani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I</forename></persName>
		</author>
		<idno type="DOI">10.1109/CGO.2003.1191546</idno>
		<ptr target="http://dx.doi.org/10.1109/CGO.2003.1191546" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization (CGO&apos;03)</title>
		<meeting>the International Symposium on Code Generation and Optimization (CGO&apos;03)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003-08">August. 2003</date>
			<biblScope unit="page" from="204" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b251">
	<monogr>
		<author>
			<persName><forename type="first">Eben</forename><surname>Upton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gareth</forename><surname>Halfacree</surname></persName>
		</author>
		<title level="m">Raspberry Pi User Guide</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b252">
	<analytic>
		<title level="a" type="main">Microarchitecture sensitive empirical models for compiler optimizations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Vaswani</surname></persName>
		</author>
		<ptr target="http://ieeexplore.ieee.org/xpls/abs" />
	</analytic>
	<monogr>
		<title level="m">International Symposium on Code Generation and Optimization (CGO&apos;07</title>
		<imprint>
			<date type="published" when="2007">2007. 2007</date>
			<biblScope unit="page" from="131" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b253">
	<analytic>
		<title level="a" type="main">Phase coupling and constant generation in an optimizing microcode compiler</title>
		<author>
			<persName><forename type="first">R</forename><surname>Steven</surname></persName>
		</author>
		<author>
			<persName><surname>Vegdahl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIG-MICRO Newslett</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="125" to="133" />
			<date type="published" when="1982">1982. 1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b254">
	<analytic>
		<title level="a" type="main">Statistical models for empirical search-based performance tuning</title>
		<author>
			<persName><forename type="first">Richard</forename><surname>Vuduc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><forename type="middle">W</forename><surname>Demmel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeff</forename><forename type="middle">A</forename><surname>Bilmes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. High Perform. Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="65" to="94" />
			<date type="published" when="2004">2004. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b255">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">W</forename><surname>Vuduc</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-0-387-09766-4_68</idno>
		<ptr target="http://dx.doi.org/10.1007/978-0-387-09766-4_68" />
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
			<biblScope unit="page" from="102" to="105" />
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b256">
	<monogr>
		<title level="m" type="main">Limits of Instruction-level Parallelism</title>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">W</forename><surname>Wall</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>ACM</publisher>
			<biblScope unit="volume">19</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b257">
	<analytic>
		<title level="a" type="main">Energy auto-tuning using the polyhedral approach</title>
		<author>
			<persName><forename type="first">Wei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Allan</forename><surname>Porterfield</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Polyhedral Compilation Techniques</title>
		<meeting>the Workshop on Polyhedral Compilation Techniques</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b258">
	<analytic>
		<title level="a" type="main">Mapping parallelism to multi-cores: A machine learning based approach</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F P</forename><surname>O'boyle</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=1504189" />
	</analytic>
	<monogr>
		<title level="j">ACM Sigplan Not</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="75" to="84" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b259">
	<monogr>
		<title level="m" type="main">Adaptive Compilation and Inlining</title>
		<author>
			<persName><forename type="first">Todd</forename><surname>Waterman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
		<respStmt>
			<orgName>Rice University</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b260">
	<analytic>
		<title level="a" type="main">Automatic generation of global optimizers</title>
		<author>
			<persName><forename type="first">Deborah</forename><surname>Whitfield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Lou</forename><surname>Soffa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGPLAN Notices</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="120" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b261">
	<analytic>
		<title level="a" type="main">An approach to ordering optimizing transformations</title>
		<author>
			<persName><forename type="first">D</forename><surname>Whitfield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Soffa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Whitfield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Soffa</surname></persName>
		</author>
		<idno type="DOI">10.1145/99163.99179</idno>
		<ptr target="http://dx.doi.org/10.1145/99163.99179" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPOPP&apos;90)</title>
		<meeting>the 2nd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPOPP&apos;90)<address><addrLine>New York, New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1990">1990</date>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="137" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b262">
	<analytic>
		<title level="a" type="main">An approach for exploring code improving transformations</title>
		<author>
			<persName><forename type="first">Deborah</forename><forename type="middle">L</forename><surname>Whitfield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Lou</forename><surname>Soffa</surname></persName>
		</author>
		<idno type="DOI">10.1145/267959.267960</idno>
		<ptr target="http://dx.doi.org/10.1145/267959.267960" />
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1053" to="1084" />
			<date type="published" when="1997-11">1997. Nov. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b263">
	<monogr>
		<title level="m" type="main">A Library for Doing Polyhedral Operations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Doran</surname></persName>
		</author>
		<author>
			<persName><surname>Wilde</surname></persName>
		</author>
		<idno>no. 785. IRISA</idno>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b264">
	<analytic>
		<title level="a" type="main">Roofline: An insightful visual performance model for multicore architectures</title>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Waterman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Patterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="65" to="76" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b265">
	<analytic>
		<title level="a" type="main">SUIF: An infrastructure for research on parallelizing and optimizing compilers</title>
		<author>
			<persName><forename type="first">Robert</forename><forename type="middle">P</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><forename type="middle">S</forename><surname>French</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><forename type="middle">S</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saman</forename><forename type="middle">P</forename><surname>Amarasinghe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jennifer</forename><forename type="middle">M</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steve</forename><forename type="middle">W K</forename><surname>Tjiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shih-Wei</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chau-Wen</forename><surname>Tseng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">W</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Monica</forename><forename type="middle">S</forename><surname>Lam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Sigplan Not</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="31" to="37" />
			<date type="published" when="1994">1994. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b266">
	<monogr>
		<title level="m" type="main">Method and apparatus for improving compiler performance during subsequent compilations of a source program</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Wolczko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Ungar</surname></persName>
		</author>
		<ptr target="https://www.google.com/patents/US6078744" />
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">744</biblScope>
			<biblScope unit="page">78</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b267">
	<analytic>
		<title level="a" type="main">ρ-VEX: A reconfigurable and extensible softcore VLIW processor</title>
		<author>
			<persName><forename type="first">Stephan</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thijs</forename><surname>Van As</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on ICECE Technology (FPT&apos;08)</title>
		<meeting>the International Conference on ICECE Technology (FPT&apos;08)</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="369" to="372" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b268">
	<monogr>
		<title level="m" type="main">The Design of an Optimizing Compiler</title>
		<author>
			<persName><forename type="first">William</forename><surname>Allan Wulf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">K</forename><surname>Johnsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><forename type="middle">B</forename><surname>Weinstock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><forename type="middle">O</forename><surname>Hobbs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><forename type="middle">M</forename><surname>Geschke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>Elsevier Science Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b269">
	<monogr>
		<title level="m" type="main">Alphaz: A system for analysis, transformation, and code generation in the polyhedral equational model</title>
		<author>
			<persName><forename type="first">T</forename><surname>Yuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Basupalli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Iooss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kim</surname></persName>
		</author>
		<ptr target="http://www.cs.colostate.edu/TechReports/Reports/2012/tr12-101.pdf" />
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b270">
	<analytic>
		<title level="a" type="main">AlphaZ: A system for design space exploration in the polyhedral model</title>
		<author>
			<persName><forename type="first">T</forename><surname>Yuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rajopadhye</surname></persName>
		</author>
		<ptr target="http://people.rennes.inria.fr/Tomofumi.Yuki/papers/yuki-lcpc2012.pdf" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Languages and Compilers for Parallel Computing</title>
		<meeting>the International Workshop on Languages and Compilers for Parallel Computing</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="17" to="31" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b271">
	<analytic>
		<title level="a" type="main">Multicube explorer: An open source framework for design space exploration of chip multi-processors</title>
		<author>
			<persName><forename type="first">Gianluca</forename><surname>Vittorio Zaccaria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabrizio</forename><surname>Palermo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Silvano</surname></persName>
		</author>
		<author>
			<persName><surname>Mariani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Conference on Architecture of Computing Systems (ARCS&apos;10)</title>
		<meeting>the 23rd International Conference on Architecture of Computing Systems (ARCS&apos;10)</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">VDE</biblScope>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b272">
	<analytic>
		<title level="a" type="main">Predicting the impact of optimizations for embedded systems</title>
		<author>
			<persName><forename type="first">Min</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bruce</forename><surname>Childers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Lou</forename><surname>Soffa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Min</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bruce</forename><surname>Childers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Lou</forename><surname>Soffa</surname></persName>
		</author>
		<idno type="DOI">10.1145/780732.780734</idno>
		<ptr target="http://dx.doi.org/10.1145/780732.780734" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2003 ACM SIGPLAN Conference on Language, Compiler, and Tool for Embedded Systems (LCTES&apos;03)</title>
		<meeting>the 2003 ACM SIGPLAN Conference on Language, Compiler, and Tool for Embedded Systems (LCTES&apos;03)<address><addrLine>New York, New York, 1</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">38</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b273">
	<analytic>
		<title level="a" type="main">A model-based framework: An approach for profit-driven optimization</title>
		<author>
			<persName><forename type="first">Min</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bruce</forename><forename type="middle">R</forename><surname>Childers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mary</forename><forename type="middle">Lou</forename><surname>Soffa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Code Generation and Optimization</title>
		<meeting>the International Symposium on Code Generation and Optimization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="317" to="327" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
