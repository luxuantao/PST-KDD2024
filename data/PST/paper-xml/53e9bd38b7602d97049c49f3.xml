<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Utility Optimal Scheduling in Energy-Harvesting Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013-08-14">August 14, 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Longbo</forename><surname>Huang</surname></persName>
							<email>longbo.huang@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">12th ACM International Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc)</orgName>
								<address>
									<addrLine>May 16-19</addrLine>
									<postCode>2011</postCode>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Institute for Theoretical Computer Science</orgName>
								<orgName type="department" key="dep2">In-stitute for Interdisciplinary Information Sciences</orgName>
								<orgName type="institution">Tsinghua University</orgName>
								<address>
									<postCode>100084</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">12th ACM International Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc)</orgName>
								<address>
									<addrLine>May 16-19</addrLine>
									<postCode>2011</postCode>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">University of Southern California</orgName>
								<address>
									<postCode>90089</postCode>
									<settlement>Los Angeles</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Utility Optimal Scheduling in Energy-Harvesting Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2013-08-14">August 14, 2013</date>
						</imprint>
					</monogr>
					<idno type="MD5">F8CF2EF9BE6B3EDB14918562CA1DF66F</idno>
					<idno type="DOI">10.1109/TNET.2012.2230336</idno>
					<note type="submission">received July 04, 2011; revised April 13, 2012; accepted August 31, 2012; approved by IEEE/ACM TRANSACTIONS ON NETWORKING Editor S. Shakkottai. Date of publication December 20, 2012; date of current version</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Energy-harvesting networks</term>
					<term>Lyapunov analysis</term>
					<term>queueing</term>
					<term>stochastic network</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we show how to achieve close-to-optimal utility performance in energy-harvesting networks with only finite capacity energy storage devices. In these networks, nodes are capable of harvesting energy from the environment. The amount of energy that can be harvested is time-varying and evolves according to some probability law. We develop an online algorithm, called the Energy-limited Scheduling Algorithm (ESA), which jointly manages the energy and makes power allocation decisions for packet transmissions. ESA only has to keep track of the amount of energy left at the network nodes and does not require any knowledge of the harvestable energy process. We show that ESA achieves a utility that is within of the optimal, for any , while ensuring that the network congestion and the required capacity of the energy storage devices are deterministically upper-bounded by bounds of size . We then also develop the Modified-ESA (MESA) algorithm to achieve the same close-to-utility performance, with the average network congestion and the required capacity of the energy storage devices being only , which is close to the theoretical lower bound .</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>R ECENT developments in hardware design have enabled many general wireless networks to support themselves by harvesting energy from the environment-for instance, by converting mechanical vibration into energy <ref type="bibr" target="#b0">[1]</ref>, by using solar panels <ref type="bibr" target="#b1">[2]</ref>, by utilizing thermoeletric generators <ref type="bibr" target="#b2">[3]</ref>, or by converting ambient radio power into energy <ref type="bibr" target="#b3">[4]</ref>. Such harvesting methods are also referred to as "recycling" energy <ref type="bibr" target="#b4">[5]</ref>. This energy-harvesting ability is crucial for many network design problems. It frees the network devices from having an "always-on" energy source and provides a way of operating the network with a potentially infinite lifetime. These two advantages are particularly useful for networks that work autonomously, e.g., wireless sensor networks that perform monitoring tasks in dangerous fields <ref type="bibr" target="#b5">[6]</ref>, tactical networks <ref type="bibr" target="#b6">[7]</ref>, or wireless handheld devices that operate over a longer period <ref type="bibr" target="#b7">[8]</ref>, etc.</p><p>However, to take full advantage of the energy-harvesting technology, efficient scheduling algorithms must consider the finite capacity for energy storage at each network node. In this paper, we consider the problem of constructing utility optimal scheduling algorithms in a discrete stochastic network, where the communication links have time-varying qualities, and the nodes are powered by finite capacity energy storage devices, but are capable of harvesting energy. Every time-slot, the network decides how much new data to admit and how much power to allocate over each communication link for data transmission. The objective of the network is to maximize the aggregate traffic utility subject to the constraint that the average network backlog is finite, and the "energy-availability" constraint is met, i.e., at all time, the energy consumed is no more than the energy stored. We see that the "energy-availability" constraint greatly complicates the design of an efficient scheduling algorithm due to the fact that the current energy expenditure decision may cause energy outage in the future and thus affect the future decisions. Such problems can in principle be formulated as dynamic programs (DPs) and be solved optimally. However, the DP approach typically requires substantial statistical knowledge of the harvestable energy process and the channel-state process and often runs into the "curse-of-dimensionality" problem when the network size is large.</p><p>There have been many previous works developing algorithms for such energy-harvesting networks. Reference <ref type="bibr" target="#b8">[9]</ref> develops algorithms for a single sensor node for achieving maximum capacity and minimizing delay when the rate-power curve is linear. Reference <ref type="bibr" target="#b9">[10]</ref> considers the problem of optimal power management for sensor nodes, under the assumption that the harvested energy satisfies a leaky-bucket-type property. Reference <ref type="bibr" target="#b10">[11]</ref> looks at the problem of designing energy-efficient schemes for maximizing the decay exponent of the queue length. Reference <ref type="bibr" target="#b11">[12]</ref> develops scheduling algorithms to achieve close-to-optimal utility for energy-harvesting networks with time-varying channels. Reference <ref type="bibr" target="#b12">[13]</ref> develops an energy-aware routing scheme that approaches optimal as the network size increases. Outside the energy-harvesting context, <ref type="bibr" target="#b13">[14]</ref> considers the problem of maximizing the lifetime of a network with finite energy capacity and constructs a scheme that achieves a close-to-maximum lifetime. References <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b15">[16]</ref> develop algorithms for minimizing the time-average network energy consumption for stochastic networks with "always-on" energy sources. However, most of the existing results focus on single-hop networks and often require sufficient statistical knowledge of the harvestable energy, and results for multihop networks often do not give explicit queueing bounds and do not provide explicit characterizations of the needed energy storage capacities.</p><p>We tackle this problem using the Lyapunov optimization technique developed in <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b16">[17]</ref>, combined with the idea of weight perturbation, e.g., <ref type="bibr" target="#b17">[18]</ref> and <ref type="bibr" target="#b18">[19]</ref>. The idea of this approach is to construct the algorithm based on a quadratic Lyapunov function, but carefully perturb the weights used for decision making, so as to "push" the target queue levels toward certain nonzero values to avoid underflow (in our case, the target queue levels are the energy levels at the nodes). Based on this idea, we construct the Energy-limited Scheduling Algorithm (ESA) for achieving optimal utility in general multihop energy-harvesting networks powered by finite-capacity energy storage devices. ESA is an online algorithm that makes greedy decisions every time-slot without requiring any knowledge of the harvestable energy and without requiring any statistical knowledge of the channel qualities. We show that ESA is able to achieve an average utility that is within of the optimal for any and only requires energy storage devices that are of sizes. We also explicitly compute the required storage capacity and show that ESA also guarantees that the network backlog is deterministically bounded by . Furthermore, we develop the Modified-ESA (MESA) algorithm to achieve the same close-to-optimal utility performance with energy storage devices that are only of sizes. We note that the approach of using perturbation in Lyapunov algorithms is novel. It not only allows us to resolve the energy outage problem easily, but also enables an easy analysis of the algorithm performance.</p><p>Our paper is mostly related to the recent work <ref type="bibr" target="#b11">[12]</ref>, which considers a similar problem. Reference <ref type="bibr" target="#b11">[12]</ref> uses a similar Lyapunov optimization approach (without perturbation) for algorithm design and achieves a similar utility-backlog performance using energy storage sizes of for single-hop networks. Multihop networks are also considered in <ref type="bibr" target="#b11">[12]</ref>. However, the performance bounds for multihop networks are given in terms of unknown parameters. In our paper, we compute the explicit capacity requirements for the data buffers and energy storage devices for general multihop networks for achieving the close-to-optimal utility performance. Such an explicit characterization will be particularly useful for practical implementations. Our perturbation approach also has the unique feature that it allows us to develop a scheme to achieve the same utility performance with only energy storage capacities. Our paper is organized as follows. In Section II, we state our network model and the objective. In Section III, we first derive an upper bound on the maximum utility. Section IV presents the ESA algorithm. The performance results of ESA are presented in Section V. We then construct the MESA in Section VI. Simulation results are presented in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. NETWORK MODEL</head><p>We consider a general interconnected multihop network that operates in slotted time. The network is modeled by a directed graph , where is the set of the nodes in the network, and is the set of communication links in the network. For each node , we use to denote the set of nodes with , and use to denote the set of nodes with . We then define <ref type="bibr" target="#b0">(1)</ref> to be the maximum in-degree/out-degree that any node can have.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Traffic and Utility Model</head><p>At every time-slot, the network decides how many packets destined for node to admit at node . We call this traffic the commodity data and use to denote the amount of new commodity data admitted. We assume that for all , with some finite at all time. <ref type="foot" target="#foot_0">1</ref> We assume that each commodity is associated with a utility function , where is the time-average rate of the commodity traffic admitted into node , defined as (assumed to exist for now). Each function is assumed to be increasing, continuously differentiable, and strictly concave in with a bounded first derivative and . We use to denote the maximum first derivative of , i.e., and denote</p><p>(2)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Transmission Model</head><p>In order to deliver the data to their destinations, each node needs to allocate power to each link for data transmission at every time-slot. To model the effect that the transmission rates typically also depend on the link conditions and that the link conditions may be time-varying, we let be the network channel state, i.e., the -by-matrix where the component of denotes the channel condition between nodes and . We assume that takes values in some finite set . We will assume in the following that the pair of energy state (defined later) and is i.i.d. every slot. At every time-slot, if , then the power allocation vector , where is the power allocated to link at time , must be chosen from some feasible power allocation set . We assume that is compact for all , and that every power vector in satisfies the constraint that for each node , for some . Also, we assume that setting any in a vector to zero yields another power vector that is still in . Given the channel state and the power allocation vector , the transmission rate over the link is given by the rate-power function . For each , we assume that the function satisfies the following properties.</p><p>Property 1: For any , where is obtained by changing any single component in to zero, we have for some finite constant that</p><formula xml:id="formula_0">(3)</formula><p>Property 2: If is obtained by setting the entry in to zero, then <ref type="bibr" target="#b3">(4)</ref> Property 1 states that the rate obtained over a link is upper-bounded by some linear function of the power allocated to it, whereas Property 2 states that reducing the power over any link does not reduce the rate over any other links. We see that Properties 1 and 2 can be satisfied by most rate-power functions, e.g., when the rate function is differentiable and has finite directional derivatives with respect to power <ref type="bibr" target="#b14">[15]</ref>, and the link rates do not improve with increased interference.</p><p>We also assume that there exists some finite constant such that for all time under any power allocation vector and any channel state . <ref type="foot" target="#foot_1">2</ref> In the following, we also use to denote the rate allocated to the commodity data over link at time . It is easy to see that at any time , we have (5)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Energy Queue Model</head><p>We now specify the energy model. Every node in the network is assumed to be powered by a finite capacity energy storage device, e.g., a battery or ultra-capacitor <ref type="bibr" target="#b8">[9]</ref>. We model such a device using an energy queue. We use the energy queue size at node at time , denoted by , to measure the amount of the energy left in the storage device at node at time . We assume each node knows its own current energy availability . In any time-slot , the power allocation vector must satisfy the following "energy-availability" constraint:<ref type="foot" target="#foot_2">3</ref>  <ref type="bibr" target="#b5">(6)</ref> That is, the consumed power must be no more than what is available. Each node in the network is assumed to be capable of harvesting energy from the environment, using, for instance, solar panels <ref type="bibr" target="#b8">[9]</ref>. However, the amount of harvestable energy in a time-slot is typically not fixed and varies over time. We use to denote the amount of harvestable energy by node at time , and denote by the harvestable energy vector at time , called the energy state. We assume that takes values in some finite set . In the following, we carry out the algorithm construction and analysis assuming that the pair is i.i.d. over slots (possibly correlated in the same slot), with distribution and marginals , , respectively. We then extend the results to the case when they are Markovian.</p><p>We assume that there exists such that for all , . The energy harvested at time is assumed to be available for use in time . In the following, it is convenient for us to assume that each energy queue has infinite capacity, and that each node can decide whether or not to harvest energy on each slot. We model this harvesting decision by using to denote the amount of energy that is actually harvested at time . We will show later that our algorithm always harvests energy when the energy queue is below a finite threshold of size and drops it otherwise. Thus, it can be implemented with finite-capacity storage devices. We will also show that the results developed under our model are very useful for practical systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Queueing Dynamics</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Let</head><p>, be the data queue backlog vector in the network, where is the amount of commodity data queued at node . We assume the following queueing dynamics: <ref type="bibr" target="#b6">(7)</ref> with for all , , and . The inequality in ( <ref type="formula">7</ref>) is due to the fact that some nodes may not have enough commodity packets to fill the allocated rates. In this paper, we say that the network is stable if the following is met: <ref type="bibr" target="#b7">(8)</ref> Similarly, let be the vector of the energy queue sizes. Due to the energy availability constraint (6), we see that for each node , the energy queue evolves according to the following:<ref type="foot" target="#foot_3">4</ref>  <ref type="bibr" target="#b8">(9)</ref> with for all . <ref type="foot" target="#foot_4">5</ref> Note again that by using the queueing dynamic (9), we start by assuming that each energy queue has infinite capacity. Later, we will show that under our algorithms, all the values are determinstically upper-bounded, thus we only need a finite energy capacity in algorithm implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Utility Maximization With Energy Management</head><p>The goal of the network is thus to design a joint flow control, routing and scheduling, and energy management algorithm that at every time-slot admits the right amount of data , chooses power allocation vector subject to (6), and transmits packets accordingly, so as to maximize the utility function <ref type="bibr" target="#b9">(10)</ref> subject to the network stability constraint <ref type="bibr" target="#b7">(8)</ref>. Here, is the vector of the average expected admitted rates. We will refer to this problem as the Utility Maximization with Energy Management problem (UMEM).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. Discussion of the Model</head><p>I) Our model is quite general and can be used to model many networks where nodes are powered by finite-capacity batteries-for instance, a field monitoring sensor network <ref type="bibr" target="#b5">[6]</ref> or many mobile ad hoc networks <ref type="bibr" target="#b20">[21]</ref>. Also, our model allows the harvestable energy to be arbitrarily correlated among network nodes. This is particularly useful, as in practice, nodes that are collocated may have similar harvestable energy conditions.</p><p>II) Although our model looks similar to the utility maximization model considered in <ref type="bibr" target="#b16">[17]</ref> and <ref type="bibr" target="#b21">[22]</ref>, the problem considered in this paper is much more complicated. The main difficulty here is imposed by the constraint <ref type="bibr" target="#b5">(6)</ref>. Indeed, (6) couples the current power allocation action and the future actions in that a current action may cause the energy queue to be empty and hence block some power allocation actions in the future. Problems involving such "no-underflow" constraints, e.g., <ref type="bibr" target="#b22">[23]</ref>, usually have to be modeled as DPs <ref type="bibr" target="#b23">[24]</ref>. However, DP typically suffers from a curse of dimensionality and requires significant knowledge of the network probabilities. The work in <ref type="bibr" target="#b11">[12]</ref> overcomes this "no-underflow" requirement by enforcing a positive drift constraint on the harvested energy and using Lyapunov optimization with this new constraint. Our approach is different and uses a modified Lyapunov function, which simplifies analysis and provides more explicit performance guarantees for the multihop case. Our MESA algorithm also fundamentally improves the resulting buffer size tradeoffs from to . III) Finally, note that our algorithm can also be shown to perform well under arbitrary and processes using the universal scheduling technique developed in <ref type="bibr" target="#b24">[25]</ref>. We omit the details for brevity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. UPPER-BOUNDING THE OPTIMAL NETWORK UTILITY</head><p>In this section, we first obtain an upper bound on the optimal utility. This upper bound will be useful for our later analysis. The result is presented in the following theorem, in which we use to denote the optimal solution of the UMEM problem, subject to the constraint that the network nodes are powered by finite-capacity energy storage devices. The parameter in the theorem can be any positive constant that is greater or equal to 1, and it is included for our later analysis.</p><p>Theorem 1: The optimal network utility satisfies , where is obtained over the class of stationary and randomized policies that have the following structure: allocate constant admission rates every slot; when , choose a power vector and allocate service rate to node with probability ;</p><p>and harvest energy with probability when , subject to (5), <ref type="bibr" target="#b6">(7)</ref>, and <ref type="bibr" target="#b8">(9)</ref>, without regard to the energy availability constraint <ref type="bibr" target="#b5">(6)</ref> In the theorem, <ref type="bibr" target="#b11">(12)</ref> says that the rate of incoming data to node is no more than the transmission rate out, and the equality constraint <ref type="bibr" target="#b12">(13)</ref> says that the rate of harvested energy is equal to the energy consumption rate. We note that Theorem 1 indeed holds under more general ergodic and processes, e.g., when and evolve according to some finite-state irreducible and aperiodic Markov chains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. ENGINEERING THE QUEUES</head><p>In this section, we present our ESA for the UMEM problem. ESA is designed based on the Lyapunov optimization technique developed in <ref type="bibr" target="#b16">[17]</ref> and <ref type="bibr" target="#b25">[26]</ref>. The idea of ESA is to construct a Lyapunov scheduling algorithm with perturbed weights for determining the energy harvesting, power allocation, routing, and scheduling decisions. We will show that, by carefully perturbing the weights, one can ensure that whenever a node allocates power to the links, there is always enough energy in the energy queue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. ESA Algorithm</head><p>To start, we first choose a perturbation vector (to be specified later). We then define a perturbed Lyapunov function as follows: <ref type="bibr" target="#b13">(14)</ref> The intuition behind the use of the vector is that by keeping the Lyapunov function value small, we indeed "push" the value toward . Thus, by carefully choosing the value of , we can ensure that the energy queues always have enough energy for transmission. Now denote , and define a one-slot conditional Lyapunov drift as follows: <ref type="bibr" target="#b14">(15)</ref> Here, the expectation is taken over the randomness of the channel state and the energy state, as well as the randomness in choosing the data admission action, the power allocation action, the routing and scheduling action, and the energy harvesting action. For notation simplicity, we also define <ref type="bibr" target="#b15">(16)</ref> We have the following lemma regarding the drift.</p><p>Lemma 1: Under any feasible data admission action, power allocation action that satisfies the energy availability constraint <ref type="bibr" target="#b5">(6)</ref>, routing and scheduling action, and energy harvesting action that can be implemented at time , we have <ref type="bibr" target="#b16">(17)</ref> Here, , and is defined in Section II as the maximum in-degree/ out-degree of any node in the network.</p><p>Proof: See Appendix A. We now present ESA. The idea of the algorithm is to approximately minimize the right-hand side (RHS) of ( <ref type="formula">17</ref>) subject to the energy-availability constraint <ref type="bibr" target="#b5">(6)</ref>. In ESA, we use a parameter , which is used in the link weight definition to allow deterministic upper bounds on queue sizes.</p><p>Energy-limited Scheduling Algorithm (ESA): Initialize . At every time-slot , observe , , , and do: • Energy Harvesting: If , perform energy harvesting and store the harvested energy, i.e., . Else set . Note that this decision on indeed minimizes the term in <ref type="bibr" target="#b16">(17)</ref>.</p><p>• Data Admission: Choose to be the optimal solution of the following optimization problem:</p><formula xml:id="formula_1">s.t. (<label>18</label></formula><formula xml:id="formula_2">)</formula><p>Note that this decision minimizes the terms involving in the RHS of ( <ref type="formula">17</ref>). • Power Allocation: Define the weight of the commodity data over link as <ref type="bibr" target="#b18">(19)</ref> Then, define the link weight , and choose to maximize <ref type="bibr" target="#b19">(20)</ref> subject to the energy availability constraint (6). • Routing and Scheduling: For every node , find any . If , set</p><p>that is, allocate the full rate over the link to any commodity that achieves the maximum positive weight over the link. Use idle-fill if needed. 7  • Queue Update: Update and according to the dynamics ( <ref type="formula">7</ref>) and ( <ref type="formula">9</ref>), respectively. The combined Power Allocation and Routing and Scheduling step would have minimized the terms involving and in the RHS of (17) if we had defined . However, we have included a nonzero in the differential backlog definition <ref type="bibr" target="#b18">(19)</ref>, resulting in a decision that comes within an additive constant of minimizing the RHS of <ref type="bibr" target="#b16">(17)</ref>. The advantage of using this is that it leads to a deterministic bound on all queue sizes, as we show in Section V.</p><p>Note that in the energy-harvesting step of ESA, node will perform energy harvesting only when the energy volume is less than , and hence for all . This is an important feature for two reasons: 1) It allows us to implement ESA with finite energy storage capacity, i.e., use an energy storage size of (we will assume that ESA is implemented with this energy capacity). 2) As we will show later, it provides us with a very easy way to size our energy storage devices for achieving a utility that is within of the optimal, i.e., use energy storage devices of size . In practice, once the energy storage capacity is set to , we can implement ESA as follows. Each node maintains a virtual energy level that is updated exactly according to ESA. Then, each node performs energy harvesting in every time-slot and spends power according to ESA based on . In this case, it can be shown that the actual energy level is always no less than . Therefore, no energy outage happens, and the utility performance is at least as good as ESA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Implementation of ESA</head><p>I) First we note that ESA only requires the knowledge of the instant channel state and the queue sizes and . It does not even require any knowledge of the energy state process . This is very useful in practice when knowledge of the energy source is difficult to obtain. ESA is also very different from previous algorithms for energy-harvesting networks, e.g., 7 Note that we still use the same power allocation (can be nonzero) in the case when idle fill is used, although all the rates are zero. We will show that doing this still yields performance that can be pushed arbitrarily close to optimal. In the actual implementation, however, we can always save the power when . Similar performance results can also be obtained. <ref type="bibr" target="#b8">[9]</ref> and <ref type="bibr" target="#b9">[10]</ref>, where sufficient statistical knowledge of the energy source is often required. II) Note that the implementation of ESA involves maximizing <ref type="bibr" target="#b19">(20)</ref>. Thus, ESA's complexity is the same as the widely used max-weight algorithms, which in general requires centralized control and can be NP-hard <ref type="bibr" target="#b16">[17]</ref>. However, in many cases, ESA can easily be implemented in a distributed manner to achieve good utility performance. One example is when the links do not interfere with each other. In this case, each node can maximize the term in ( <ref type="formula">20</ref>) locally with queue size information of its neighbor nodes. Another example is to use a maximal weighted matching approach as in, e.g., [17, Sections 4.7 and 5.2.1] and <ref type="bibr" target="#b26">[27]</ref>. In this case, (20) can be maximized to within a constant factor, and this in turn guarantees that the overall utility performance is optimal within a constant factor. Such approximation results can usually be found in a distributed manner in polynomial time, and ESA can likely be shown to achieve a utility that is at least a constant factor of under these solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. PERFORMANCE ANALYSIS</head><p>We now present the performance results of ESA. In the following, we first present the results under i.i.d. network randomness and give its proof in the appendix. We later extend the performance results of ESA to the case when the network randomness is Markovian. Below, the parameter is the largest first derivative of the utility functions defined in (2), and the parameter is defined <ref type="bibr" target="#b21">(22)</ref> We note that the value can easily be determined. It only requires knowledge of the maximum derivatives of the utility function and the power-rate curve, and the maximum power expenditure, and requires no knowledge of . This feature is desirable for practical implementations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. ESA Under i.i.d. Randomness</head><p>Theorem 2: Under ESA with and defined in (2) and ( <ref type="formula">22</ref>), we have the following.</p><p>(a) The data queues and the energy queues satisfy the following for all time-steps under any arbitrary and processes:</p><formula xml:id="formula_4">(23) (24)</formula><p>Moreover, when a node allocates nonzero power to any of its outgoing links, . (b) Let be the time-average admitted rate vector achieved by ESA up to time , i.e., . Then <ref type="bibr" target="#b24">(25)</ref> where is an optimal solution of the UMEM problem, and , which is , i.e., independent of . Proof: See Appendix B.</p><p>We note the following of Theorem 2. 1) Part (a) is a sample path result. Hence, it holds even under nonstationary and processes. 2) By taking , Part (a) implies that the average data queue size is . Combining this with Part (b), we see that ESA achieves an utility-backlog tradeoff for the UMEM problem.</p><p>3) We see from Part (a) that the energy queue size is deterministically upper-bounded by a constant of size . This provides an explicit characterization of the size of the energy storage device needed for achieving the desired utility performance. Such explicit bounds are particularly useful for practical system deployments. 4) Note that we prove a utility performance bound, i.e., <ref type="bibr" target="#b24">(25)</ref>, that is slightly different from the objective of . The reason is that the limit may not exist. However, whenever the limit does exist, we can replace with the regular limit and push the limit inside the summation. Then, <ref type="bibr" target="#b24">(25)</ref> becomes .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. ESA Under Markovian Randomness</head><p>We now extend our results to the more general setting where the channel state and the energy state both evolve according to some finite-state irreducible and aperiodic Markov chains. In this case, and represent the steady-state probability of the events and , respectively. In this case, the performance results of ESA are summarized in the following theorem.</p><p>Theorem 3: Suppose evolves according to some finite-state irreducible and aperiodic Markov chain. Then, under ESA with and defined in ( <ref type="formula">2</ref>) and ( <ref type="formula">22</ref>), we have: (a) the bounds ( <ref type="formula">23</ref>) and <ref type="bibr" target="#b23">(24)</ref> still hold; and (b) the average utility is within of , i.e., . Proof: Part (a) follows from Theorem 2, since ( <ref type="formula">23</ref>) and ( <ref type="formula">24</ref>) are indeed sample-path results. The proof of the utility performance is similar to that in <ref type="bibr" target="#b27">[28]</ref>, and hence is omitted for brevity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. REDUCING THE BUFFER SIZE</head><p>In this section, we show that it is possible to achieve the same close-to-optimal utility performance guarantee using energy storage devices with only sizes while also guaranteeing a much smaller average data queue size, i.e., . Our algorithm is motivated by the "exponential attraction" result developed in <ref type="bibr" target="#b21">[22]</ref>, which states that the probability for the network backlog vector to deviate from some fixed point typically decreases exponentially with the deviation distance. This suggests that most of the queue backlogs are kept in the queues to maintain a "proper" queue vector value on which to base the decisions. If we can somehow learn the value of this vector, then we can "subtract out" a large amount of data and energy backlog from the network and reduce the required buffer sizes. In the following, we present MESA to achieve this goal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Modified-ESA</head><p>To start, for a given , let and define . We then associate with each node a virtual energy queue process and a set of virtual data queues . We also associate with each node an actual energy queue with size . We assume that is chosen to be such that . MESA consists of two phases. Phase I runs the system using the virtual queue processes to discover the "attraction point" values of the queues (explained below). Phase II then uses these values to carefully perform the actions so as to ensure energy availability and reduce network delay. We emphasize that, although MESA looks similar to the algorithms developed in <ref type="bibr" target="#b21">[22]</ref>, it only uses finite energy storage capacities. This feature makes it very different and requires a new analysis for its performance.</p><p>Modified-ESA (MESA): Initialize according to <ref type="bibr" target="#b21">(22)</ref>. Do:  <ref type="formula">9</ref>) and <ref type="bibr" target="#b6">(7)</ref>. Note here we have used the operator for updating in the energy harvesting part. This is due to the fact that the power allocation decisions are now made based on but not . Hence, it can happen that . If never gets below or above , then we always have . Similarly, if is always above and is always in , then we always have</p><p>. MESA is designed to ensure that and mostly stay in these "right" ranges. We will see in the following lemma that, although and can go out of the ranges, our algorithm ensures that the queue processes are in fact close to each other.</p><p>Lemma 2: For all time , we have the following:</p><p>Proof: See Appendix C. By Lemma 2, when , we have . Thus, all the power allocations are valid under MESA, i.e., although the power allocation decisions are made based on , the energy availability constraint is still ensured for all time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Performance of MESA</head><p>To study the performance of MESA, we first denote the dual function of the problem <ref type="bibr" target="#b10">(11)</ref>. The following lemma shows that the dual function can be written in a form that is without the variables and . This fact greatly simplifies the evaluation of the dual function.</p><p>Lemma 3: The dual problem of ( <ref type="formula">11</ref>) is given by</p><formula xml:id="formula_6">s.t.<label>(28)</label></formula><p>where , , and is the dual function defined as <ref type="bibr" target="#b28">(29)</ref> Proof: The proof uses a similar argument as in the proof of [26, Lemma 1], hence is omitted for brevity.</p><p>We now summarize the performance results of MESA in the following theorem. In the theorem, we denote and write as a function of . We also recall that, under MESA, the energy storage capacity is . Theorem 4: Suppose is finite and unique, is chosen such that , and for all with , the dual function satisfies:</p><p>(30) for some constant independent of . Also suppose the system is in steady state at time , and a steady-state distribution for the queues exists under ESA. Then, under MESA with a sufficiently large , with probability , we have</p><formula xml:id="formula_7">(31)<label>(32)</label></formula><p>where is defined in Theorem 2. Furthermore, the fraction of packets dropped in the packet dropping step is . Proof: See Appendix D. Note that the theorem also holds when are Markovian as in Theorem 3. The condition (30) is indeed the condition needed for proving the exponential attraction result in <ref type="bibr" target="#b21">[22]</ref>. It has been observed, e.g., in <ref type="bibr" target="#b21">[22]</ref>, that (30) typically holds in practice, particularly when the network action set is finite, in which case the dual function is polyhedral in (see <ref type="bibr" target="#b21">[22]</ref> for more discussions). It has been shown that in this case, the queue backlog vector pair is "exponentially attracted" to the fixed point , in that the probability of deviating decreases exponentially with the deviation distance. Therefore, the probability of deviating by some distance will be , which will be very small when is large. Theorem 4 then shows that under this condition, one can significantly reduce the energy capacity needed to achieve the close-to-optimal utility performance and greatly reduce the network congestion. Finally, we remark that MESA ensures no energy outage under any values. The requirement that is large in Theorem 4 is to ensure that the vectors , learned in Phase I of MESA are accurate with high probability, so that MESA achieves an close-to-optimal utility performance with high probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Lower Bound of the Energy Storage Capacity</head><p>In this section, we show that in general, it is not possible to use an energy storage of size smaller than to achieve a utility performance that is within of the optimal value. To do so, we consider the single-queue network shown in Fig. <ref type="figure" target="#fig_0">1</ref>.</p><p>In this network, there is a single node trying to deliver packets over a time-varying channel. The node is powered by a finite-capacity energy storage device of size and can harvest energy from the environment. There is only a single commodity, and the utility function is strictly increasing and concave in the average packet rate . We assume the following for the system. <ref type="foot" target="#foot_6">8</ref>1) The channel state is i.i.d. over time and takes value " " or " " with probabilities and , respectively. 2) The harvestable energy is i.i.d. over time and is either 1 or 0 with probabilities and , respectively. We assume that . 3) with and . 4) If and , the service rate , otherwise . In this case, we have the following theorem, in which we use to denote the limiting maximum utility achievable in the systems with finite energy capacity, in the limit when the energy capacity goes to infinity.</p><p>Theorem 5: If a control policy achieves a utility that is within of the optimal value , then the energy storage capacity must satisfy . Proof: Consider a control policy that achieves a utility that is within of . Since if , we can assume without loss of generality that only allocates power when and the queue is not empty, and that it always harvests energy unless the energy buffer is full. Otherwise, we can impose these constraints on and obtain a new policy that again achieves a utility that is within of and work with the new policy. Now, let be the average power spent by , and let be the average rate of the packets admitted into the queue. It can be seen that . Also, since every unit power can be used to send one packet over the channel when , if the data queue is stable, then we must have . Now using the same argument, the definition of <ref type="bibr" target="#b10">(11)</ref>, and the facts that and , it can be shown as in <ref type="bibr" target="#b17">[18]</ref> that , where is the average harvestable energy rate.</p><p>Define . Since the control policy achieves a utility within of , we see that , which implies (33) Now we define to be the average rate of the harvestable energy arrivals to the queue when the energy buffer is full. We see that this fraction of the harvestable energy will be wasted due to energy buffer overflow. However, by (33), we see that this energy waste rate must be no more than , i.e., . We now construct a fictitious system to compute a lower bound of the energy waste rate as follows. In this fictitious system, the energy buffer also has size . The harvestable energy process and the channel-state process in the fictitious system are exactly the same as those in the actual system, and the node in the fictitious system also always harvests energy unless the buffer is full. However, the node allocates one unit power whenever (even when the queue is empty). In this case, we see that the energy queue in the fictitious system can be modeled as a Bernoulli/Bernoulli/1 queue with a finite buffer size , as shown in Fig. <ref type="figure" target="#fig_1">2(a)</ref>.  Since only allocates power when the queue is not empty and , we see that the energy queue size in the fictitious queue is always no larger than that in the actual energy buffer. Thus, the energy waste rate due to energy buffer overflow in this fictitious system is no larger than the energy waste rate due to energy buffer overflow in the actual system. Since the energy queue in the fictitious system can be modeled as a Bernoulli/Bernoulli/1 queue, it can be analyzed as an queue using a discrete time Markov chain shown in Fig. <ref type="figure" target="#fig_1">2</ref>(b) <ref type="bibr" target="#b28">[29]</ref>. In this case, the energy waste rate due to buffer overflow in the fictitious system can be computed to be (34) Thus, by (33) and (34), we see that , which implies Thus, we see that the energy buffer capacity must be , and this completes the proof.</p><p>We remark the following important implications of Theorem 5. First, it says that in order to achieve an close-to-optimal utility performance (recall that ), it is necessary to use an energy buffer of capacity . This implies that if we are given an energy capacity of , then at best we can achieve a utility that is within of the optimal, for some constant . Second, it shows that our MESA algorithm indeed achieves a near-optimal utility-energy buffer tradeoff.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. SIMULATION</head><p>In this section, we provide simulation results of our algorithms.</p><p>We consider a data collection network shown in Fig. <ref type="figure" target="#fig_2">3</ref>. Such a network typically appears in the sensor network scenario where sensors are used to sense data and forward them to the sink. In this network, there are six nodes. The node represents the sink node; the nodes 1-3 sense data and deliver them to node via the relay of nodes 4 and 5.</p><p>The channel state of each communication link, represented by a directed edge, is i.i.d. every time-slot and can be either "</p><p>" or " " with equal probability. One unit of power can serve two packets over a link when the channel state is good, but can only serve one when the channel is bad. We assume and the utility functions are given by: and . For simplicity, we also assume that all the links do not interfere with each other. We assume that for each node, the available energy is i.i.d. and with equal probability.</p><p>In this case, we can use , , , , , and . Using Theorem 2, we set . We simulate . Each simulation is run for 10 slots. The simulation results are plotted in Fig. <ref type="figure" target="#fig_3">4</ref>. We see that the total network utility converges quickly to very close to the optimal value, which can be shown to be roughly 2.03, and that the average data queue size and the average energy queue size both grow linearly in .</p><p>Fig. <ref type="figure" target="#fig_4">5</ref> also shows two sample-path data queue processes and two energy queue processes under . It can be verified that all the queue sizes satisfy the queueing bounds in Theorem 2. We also observe the "exponential attraction" behavior of the queues, as shown in <ref type="bibr" target="#b21">[22]</ref>. However, different from the simulation results in previous works, e.g., <ref type="bibr" target="#b21">[22]</ref>, we see that the queue size of does not approach the fixed point from below. It instead first has a "burst" in the early time-slots. This is due to the fact that the system "waits" for to come close enough to its fixed point. Such an effect can be mitigated by storing an initial energy of size in the energy queue. We also simulate MESA for the same network with the same vector. We use in Phase I for obtaining the vectors and . Fig. <ref type="figure" target="#fig_5">6</ref> plots the performance results. We observe that no packet was dropped throughout the simulations under any values. The utility again quickly converges to the optimal as increases. We also see from the second and third plots that the actual queues only grow polylogarithmically in , i.e., , while the virtual queues, which are the same as the actual queues under ESA, grows linearly in . This shows a good match between the simulations and Theorem 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSION</head><p>In this paper, we develop the Energy-limited Scheduling Algorithm for achieving optimal utility in general energy-harvesting networks equipped with finite-capacity energy storage devices.  is the total network energy buffer size.</p><p>Using the fact that , we see that . Thus which implies . Thus, <ref type="bibr" target="#b26">(27)</ref> holds. This completes the proof of ( <ref type="formula">27</ref>) and proves the lemma.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX D PROOF OF THEOREM 4</head><p>Here, we prove Theorem 4. We will use the following "exponential attraction" theorem, which is a modified version of <ref type="bibr" target="#b21">[22,</ref><ref type="bibr">Theorem 2]</ref>. In the theorem, we write as a function of and use to denote an optimal solution of . Theorem 6: Suppose evolves according some finite-state irreducible and aperiodic Markov chain, is finite and unique, is chosen such that , and for all with , the dual function satisfies (46) for some constant independent of . Then, , and that under ESA, there exists constants , i.e., all independent of , such that for any <ref type="bibr">(47)</ref> where is defined</p><formula xml:id="formula_8">E (48)</formula><p>with E being the following deviation event:</p><formula xml:id="formula_9">E (49)</formula><p>Proof: The proof is similar to the proof of [22, Theorem 1] and is omitted for brevity. Now we present the proof of Theorem 4 Proof (Theorem 4): Since a steady-state distribution for the queues exists under ESA, we see that is the steady-state probability that event E happens. Now consider a large value that satisfies and , and define (50) Since at time , the system is in its steady state, by (47) and (50), we see that</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E E</head><p>Using the definition of E , we see that when is large enough, i.e., when (50) holds, with probability , the vectors and satisfy the following for all :</p><p>(51) Using the fact that and , (51), and the facts that and , we see that when is large enough, with probability , we have </p><p>Having established (52)-( <ref type="formula" target="#formula_10">54</ref>), (31) can now be proven using <ref type="bibr" target="#b25">(26)</ref> in Lemma 2 and a same argument as in the proof of <ref type="bibr" target="#b21">[22,</ref><ref type="bibr">Theorem 4</ref>]. Now we consider (32). Since at every time , MESA performs ESA's data admission and routing and scheduling actions, if there was no packet dropping, then MESA will achieve the same utility performance as ESA. However, since all the utility functions have bounded derivatives, to prove the utility performance of MESA, it suffices to show that the average rate of the packets dropped is . To prove this, we first see that packet dropping happens at time only when the following event E happens, i.e., E</p><p>However, assuming (52)-( <ref type="formula" target="#formula_10">54</ref>) hold, we have , and for all . Therefore, the following event must happen for E to happen:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E</head><p>Thus, E E . However, it can be seen from ( <ref type="formula">49</ref>) that E E with . Hence, E E . Using (47) again, we see that</p><formula xml:id="formula_12">E E<label>(56)</label></formula><p>Using the facts that and , we see that (57) Thus, we conclude that 11   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E</head><p>Since at every time-slot the total amount of packets dropped is no more than , we see that the average rate of packets dropped is . Finally, by ( <ref type="formula" target="#formula_12">56</ref>) and (57), we see that the packet drop rate is . This completes the proof of Theorem 4.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Single-queue energy-harvesting network.</figDesc><graphic coords="8,371.04,64.14,115.92,73.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. (a) Fictitious queue with Bernoulli arrivals and services. (b) Queue size evolves according to a discrete-time Markov chain. The state of the chain is the amount of energy stored in the energy buffer.</figDesc><graphic coords="9,40.98,63.12,246.00,52.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Data collection network.</figDesc><graphic coords="9,85.02,150.12,158.10,79.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Simulation results of ESA for the data collection network.</figDesc><graphic coords="9,302.04,64.14,252.96,147.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Sample path queue processes.</figDesc><graphic coords="10,39.00,65.16,252.00,181.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Simulation results of MESA.is the total network energy buffer size.</figDesc><graphic coords="10,40.02,278.16,249.96,145.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>The proof argument is similar to the proof of [26, Theorem 1], hence is omitted for brevity.</figDesc><table><row><cell>s.t.</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>(12)</cell></row><row><cell></cell><cell></cell><cell></cell><cell>(13)</cell></row><row><cell>Here</cell><cell>and</cell><cell cols="2">are the marginal distribution of the random</cell></row><row><cell cols="3">channel state and energy state , and</cell><cell>. 6</cell></row><row><cell cols="2">Proof:</cell><cell></cell></row><row><cell>, to satisfy</cell><cell></cell><cell></cell></row><row><cell>(11)</cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Note that this setting implicitly assumes that nodes always have packets to admit. The case when the number of packets available is random can also be incorporated into our model and solved by introducing auxiliary variables, as in<ref type="bibr" target="#b19">[20]</ref>. Also note this traffic admission model can be viewed as "shaping" the arrivals from some external sending nodes. One future extension of our model is to also evaluate the backlogs at these sending nodes.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Note that in our transmission model, we did not explicitly take into account the reception power. We can incorporate that into our model at the expense of more complicated notations. In that case, our algorithm will also optimize over the reception power consumption, and the results in this paper still hold.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>We measure time in unit size "slots," so that our power has units of energy/slot, and is the resulting energy use in one slot. For simplicity, we suppress the implicit multiplication by 1 slot when converting between power and energy.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Note that we do not explicitly consider energy leakage due to the imperfections of the energy storage devices. This is a valid assumption if the rate of energy leakage is very small compared to the amount spent in each time-slot.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p><ref type="bibr" target="#b4">5</ref> We can also prestore energy in the energy queue and initialize to any finite positive value up to its capacity. The results in the paper will not be affected.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>The number is due to the use of Caratheodory's Theorem in the proof argument used in<ref type="bibr" target="#b25">[26]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_6"><p>These assumptions are chosen for the ease of presentation. Theorem 5 can be proven for more general cases.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>. This work was supported in part by the National Basic Research Program of China under Grants 2011CBA00300 and 2011CBA00301; the National Natural Science Foundation of China under Grants 61033001, 61061130540, and 61073174; the Network Science Collaborative Technology Alliance sponsored by the U.S. Army Research Laboratory under Grant W911NF-09-2-0053; and the NSF under Grant 1049541. This work was</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>ESA is an online algorithm and does not require any knowledge of the harvestable energy processes. We show that ESA achieves an average utility that is within of the optimal for any using energy storage devices of sizes while guaranteeing that the time-average network congestion is . We then also develop the Modified-ESA and show that MESA can achieve the same utility performance using energy storage devices of only sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A PROOF OF LEMMA 1</head><p>Here, we prove Lemma 1.</p><p>Proof: First by squaring both sides of (7), and using the fact that for any , , we have</p><p>Multiplying both sides by , and defining , 9 we have (36)</p><p>Using a similar approach, we get that (37)</p><p>where . Now by summing (36) over all and (37) over all , and by defining , we have Taking expectations on both sides over the random channel and energy states and the randomness over actions conditioning on , subtracting from both sides the term , and rearranging the terms, we see that the lemma follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX B PROOF OF THEOREM 2</head><p>Here we prove Theorem 2.</p><p>Proof [Part (a)]: We first prove (23) using a similar argument as in <ref type="bibr" target="#b14">[15]</ref>. It is easy to see that it holds for since for all . Now assume that for all at , we want to show that it holds for time . First, if node does not receive any new commodity data, then . Second, if node receives endogenous commodity data from any other node , then we must have However, since any node can receive at most commodity packets in any time-slot, we have . 9 Here, we have used the facts that and .</p><p>Finally, if node does not receive endogenous arrivals but receives exogenous packets from outside, then according to (18), we must have . Hence, . Now it is also easy to see from the energy storage part of ESA that , which proves <ref type="bibr" target="#b23">(24)</ref>. We now show that if , then in (20) will be maximized by choosing for all at node . To see this, first note that since all the data queues are upper-bounded by , we have for all and for all time. Now let the power vector that maximizes be and assume that there exists some that is positive. We now create a new power allocation vector by setting only in . Then, we have the following, in which we write only as a function of to simplify notation:</p><p>Here in the last step, we have used (4) in Property 2 of , which implies that for all . Now suppose . We see then . Using Property 1 and the fact that , the above implies This shows that cannot have been the power vector that maximizes if . Therefore, whenever node allocates any nonzero power over any of its outgoing links. Hence, all the power allocation decisions are feasible. This shows that the constraint ( <ref type="formula">6</ref>) is indeed redundant in ESA and completes the proof of Part (a).</p><p>[Part (b)] We now prove Part (b). We first show that ESA approximately minimizes the RHS of <ref type="bibr" target="#b16">(17)</ref>. To see this, note from Part (A) that ESA indeed minimizes the following function at time : <ref type="bibr">(38)</ref> subject to only the constraints: , , and (5), i.e., without the energy-avail-ability constraint <ref type="bibr" target="#b5">(6)</ref>. Now define as follows:</p><p>(39)</p><p>Note that is indeed the function inside the expectation on the RHS of the drift bound <ref type="bibr" target="#b16">(17)</ref> That is, the value of under ESA is no greater than its value under any other alternative policy plus a constant, including the ones that ignore the energy availability constraint <ref type="bibr" target="#b5">(6)</ref>. Furthermore, Part (a) shows that the energy availability constraint ( <ref type="formula">6</ref>) is naturally satisfied under ESA without explicitly being enforced. Now using the definition of , ( <ref type="formula">17</ref>) can be rewritten as Using (40), we get (41)</p><p>where . Now plugging into (41) the policy in Theorem 1, which by comparing <ref type="bibr" target="#b10">(11)</ref> and (39) can be shown to result in , and using the fact that , we have Taking expectations over and summing the above over , we have Rearranging the terms, using the facts that and , dividing both sides by , we get Using Jensen's inequality, we see that Taking a as and using the definition of , i.e.,</p><p>, we have This completes the proof of Part (b).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX C PROOF OF LEMMA 2</head><p>Proof of Lemma 2: Here, we prove Lemma 2. We recall that is the size of the energy buffer. Proof: We first prove <ref type="bibr" target="#b25">(26)</ref>. Define an intermediate process that evolves exactly as except that it does not discard packets when or . We see then</p><p>. Using <ref type="bibr" target="#b21">[22,</ref><ref type="bibr">Lemma 3]</ref>, we see that . Hence, , and (26) follows. 10  We now look at <ref type="bibr" target="#b26">(27)</ref>. First, it holds at time 0 since . Now suppose that it holds for . We want to show that it holds for . First note that if , then <ref type="bibr" target="#b26">(27)</ref> always holds because is nonnegative for all . Therefore, in the following we only consider the case when , i.e.,</p><p>Also note that since all the actions are made based on and , by Theorem 2, we always have , thus</p><p>We consider the following three cases. 10 Note that [22, Lemma 3] concerns only data queues, whereas here we also have the energy queues. However, by neglecting the effect of them, the same lemma applies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I)</head><p>. Since , we must have . Then, according to the harvesting rule Here, the first inequality uses the property of , and the second inequality uses and . II)</p><p>. In this case, we see by the induction assumption that , which implies that . Then, by the update rule, we see that (44) Thus, <ref type="bibr" target="#b26">(27)</ref> still holds. III) . In this case, we have by induction that (45)</p><p>We have two subcases. III-A) If , then using (42) and (43), we have Here, the first inequality uses the property of the operator , and the second inequality uses the induction (45) that . III-B) If</p><p>, then we must have , and that .</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vibration-to-electric energy conversion</title>
		<author>
			<persName><forename type="first">S</forename><surname>Meninger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">O</forename><surname>Mur-Miranda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Amirtharajah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chandrakasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Lang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. VLSI Syst</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="76" />
			<date type="published" when="2001-02">Feb. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Design considerations for solar energy harvesting wireless embedded systems</title>
		<author>
			<persName><forename type="first">V</forename><surname>Raghunathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE IPSN</title>
		<meeting>IEEE IPSN</meeting>
		<imprint>
			<date type="published" when="2005-04">Apr. 2005</date>
			<biblScope unit="page" from="457" to="462" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A survey of energy harvesting sources for embedded systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chalasani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Conrad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Southeastcon</title>
		<meeting>IEEE Southeastcon</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="442" to="447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Challenge: Ultra-low-power energy-harvesting active networked tags (EnHANTs)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gorlatova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kinget</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kymissis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rubenstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zussman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. MobiCom</title>
		<meeting>MobiCom</meeting>
		<imprint>
			<date type="published" when="2009-09">Sep. 2009</date>
			<biblScope unit="page" from="253" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Power from thin air</title>
	</analytic>
	<monogr>
		<title level="j">Economist</title>
		<imprint>
			<date type="published" when="2010-06-10">Jun. 10, 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fidelity and yield in a volcano monitoring sensor network</title>
		<author>
			<persName><forename type="first">G</forename><surname>Werner-Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lorincz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lees</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welsh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th USENIX OSDI</title>
		<meeting>7th USENIX OSDI</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="381" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Barrage relay networks: System &amp; protocol design</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">R</forename><surname>Halford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Chugg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Polydoros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 21st IEEE PIMRC</title>
		<meeting>21st IEEE PIMRC</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1133" to="1138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Wireless power harvesting for cell phones</title>
		<author>
			<persName><forename type="first">D</forename><surname>Graham-Rowe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIT Technol. Rev</title>
		<imprint>
			<date type="published" when="2009-06">Jun. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Optimal energy management policies for energy harvesting sensor nodes</title>
		<author>
			<persName><forename type="first">V</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Mukherji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1326" to="1336" />
			<date type="published" when="2010-04">Apr. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Power management in energy harvesting sensor networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zahedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">B</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. Embed. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2007-09">Sep. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Basic tradeoffs for energy management in rechargeable sensor networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename></persName>
		</author>
		<idno>ArXiv: 1009.0569v1</idno>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
	<note type="report_type">ArXiv Techreport</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Control of wireless networks with rechargeable batteries</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gatzianas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Georgiadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="581" to="593" />
			<date type="published" when="2010-02">Feb. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Asymptotically optimal poweraware routing for multihop wireless networks with renewable energy sources</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Shroff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1262" to="1272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Energy-aware routing in sensor networks: A large system approach</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Shroff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Netw</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="818" to="831" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Energy optimal control for time-varying wireless networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inf. Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="2915" to="2934" />
			<date type="published" when="2006-07">Jul. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Optimal energy and delay tradeoffs for multi-user wireless downlinks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inf. Theory</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="3095" to="3113" />
			<date type="published" when="2007-09">Sep. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Resource allocation and cross-layer control in wireless networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Georgiadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Found. Trends Netw</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="144" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Dynamic product assembly and inventory control for maximum profit</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE CDC</title>
		<meeting>IEEE CDC<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-12">Dec. 2010</date>
			<biblScope unit="page" from="2805" to="2812" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Utility Optimal Scheduling in Processing Networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perform. Eval</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1002" to="1021" />
			<date type="published" when="2011-11">Nov. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Fairness and optimal stochastic control for heterogeneous networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Modiano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="396" to="409" />
			<date type="published" when="2008-04">Apr. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Opportunistic networking: Data forwarding in disconnected mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Pelusi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Passarella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="134" to="141" />
			<date type="published" when="2006-11">Nov. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Delay reduction via Lagrange multipliers in stochastic network optimization</title>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="842" to="857" />
			<date type="published" when="2011-04">Apr. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Energy-efficient transmission scheduling for wireless media streaming with strict underflow constraints</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I</forename><surname>Shuman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WiOpt</title>
		<meeting>WiOpt</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="354" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Dynamic Programming and Optimal Control, Vols. I and II</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Athena Scientific</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Universal scheduling for networks with arbitrary traffic, channels, and mobility</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE CDC</title>
		<meeting>IEEE CDC<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-12">Dec. 2010</date>
			<biblScope unit="page" from="1822" to="1829" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Utility optimal scheduling in processing networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<idno>ArXiv: 1010</idno>
		<imprint>
			<date type="published" when="2010">1862v1, 2010</date>
		</imprint>
	</monogr>
	<note type="report_type">ArXiv Techreport</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">The impact of imperfect scheduling on cross-layer congestion control in wireless networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Shroff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Netw</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="302" to="315" />
			<date type="published" when="2006-04">Apr. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Max-weight achieves the exact utility-delay tradeoff under Markov dynamics</title>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Neely</surname></persName>
		</author>
		<idno>ArXiv:1008.0200v1</idno>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">University of Southern California, Los Angeles, where he is currently an Associate Professor. His research interests are in the areas of stochastic network optimization and queueing theory, with applications to wireless networks, mobile ad hoc networks, and switching systems. Dr. Neely is a member of Tau Beta Pi and Phi Beta Kappa. He received the NSF Career</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Gallager</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Data</forename><surname>Networks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">S&apos;00-M&apos;02-SM&apos;08) received the B.S. degrees in both electrical engineering and mathematics from the University of Maryland, College Park, in 1997, and the M.S. and Ph.D. degrees in electrical engineering from the Massachusetts Institute of Technology (MIT)</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Michael</surname></persName>
		</editor>
		<editor>
			<persName><surname>Neely</surname></persName>
		</editor>
		<meeting><address><addrLine>Upper Saddle River, NJ; Guangzhou, China; New York, NY; Beijing, China; Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1992">1992. 2003. 2011. 2011 to 2012. 1999 and 2003</date>
		</imprint>
		<respStmt>
			<orgName>Sun Yat-sen University ; Columbia University ; University of California, Berkeley ; Tsinghua University</orgName>
		</respStmt>
	</monogr>
	<note>all in electrical engineering. He then worked as a Postdoctoral Researcher with the Electrical Engineering and Computer Sciences Department. Award in 2008 and the Viterbi School of Engineering Junior Research Award in 2009. He was awarded a three-year Department of Defense NDSEG Fellowship for graduate study at MIT</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
