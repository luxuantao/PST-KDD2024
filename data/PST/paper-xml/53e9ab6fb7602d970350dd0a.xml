<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A survey of QoS architectures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Cristina</forename><surname>Aurrecoechea</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Telecommunication Research</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Andrew</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
							<email>campbell@ctr.columbia.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Center for Telecommunication Research</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Linda</forename><surname>Hauw</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Telecommunication Research</orgName>
								<orgName type="institution">Columbia University</orgName>
								<address>
									<postCode>10027</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A survey of QoS architectures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">A9EB673DC30F18F24AEC8F4DF3A7AB85</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:14+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Over the past several years there has been a considerable amount of research within the field of quality-ofservice (QoS) support for distributed multimedia systems. To date, most of the work has been within the context of individual architectural layers such as the distributed system platform, operating system, transport subsystem and network layers. Much less progress has been made in addressing the issue of overall end-to-end support for multimedia communications. In recognition of this, a number of research teams have proposed the development of QoS architectures which incorporate QoS-configurable interfaces and QoS driven control and management mechanisms across all architectural layers. This paper examines the state-of-theart in the development of QoS architectures. The approach taken is to present QoS terminology and a generalized QoS framework for understanding and discussing QoS in the context of distributed multimedia systems. Following this, we evaluate a number of QoS architectures that have emerged in the literature.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Meeting Quality-of-Service (QoS) guarantees in distributed multimedia systems is fundamentally an end-to-end issue, that is, from application to application. Consider, for example, the remote playout of a sequence of audio and video: in the distributed system platform, QoS assurances should apply to the complete flow of media from the remote server across the network to the point/s of delivery. As illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>, this generally requires end-to-end admission testing and resource reservation in the first instance, followed by careful co-ordination of disk and thread scheduling in the end-system, packet/cell scheduling and flow control in the network and, finally, active monitoring and maintenance of the delivered QoS. A key observation is that for applications relying on the transfer of multimedia and, in particular, continuous media flows, it is essential that QoS is configurable, predictable and maintainable system-wide, including Correspondence to: C. Aurrecoechea the end-system devices, communications subsystem and networks. Furthermore, it is also important that all end-to-end elements of distributed-systems architecture work in unison to achieve the desired application level behavior.</p><p>To date, most of the developments in the area of QoS support have occurred in the context of individual architectural components <ref type="bibr" target="#b19">[20]</ref>. Much less progress has been made in addressing the issue of an overall QoS architecture for multimedia communications. There has been, however, considerable progress in the separate areas of distributed-systems platforms <ref type="bibr" target="#b19">[20]</ref><ref type="bibr" target="#b20">[21]</ref><ref type="bibr" target="#b21">[22]</ref><ref type="bibr" target="#b22">[23]</ref><ref type="bibr" target="#b23">[24]</ref><ref type="bibr" target="#b24">[25]</ref><ref type="bibr" target="#b25">[26]</ref><ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref>, operating systems <ref type="bibr" target="#b28">[29]</ref><ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref><ref type="bibr" target="#b32">[33]</ref><ref type="bibr" target="#b33">[34]</ref><ref type="bibr" target="#b34">[35]</ref>, transport systems <ref type="bibr" target="#b35">[36]</ref><ref type="bibr" target="#b36">[37]</ref><ref type="bibr" target="#b37">[38]</ref><ref type="bibr" target="#b38">[39]</ref><ref type="bibr" target="#b39">[40]</ref><ref type="bibr" target="#b40">[41]</ref><ref type="bibr" target="#b41">[42]</ref><ref type="bibr" target="#b42">[43]</ref><ref type="bibr" target="#b43">[44]</ref><ref type="bibr" target="#b44">[45]</ref> and multimedia networking  support for QoS. In end-systems, most of the progress has been made in the areas of scheduling <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b30">31]</ref>, flow synchronisation <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref> and transport support <ref type="bibr" target="#b35">[36]</ref><ref type="bibr" target="#b36">[37]</ref><ref type="bibr" target="#b37">[38]</ref><ref type="bibr" target="#b38">[39]</ref><ref type="bibr" target="#b39">[40]</ref><ref type="bibr" target="#b40">[41]</ref><ref type="bibr" target="#b41">[42]</ref><ref type="bibr" target="#b42">[43]</ref><ref type="bibr" target="#b43">[44]</ref><ref type="bibr" target="#b44">[45]</ref>. In networks, research has focused on providing suitable traffic models <ref type="bibr" target="#b1">[2]</ref> and service disciplines <ref type="bibr" target="#b51">[52]</ref>, as well as appropriate admission control and resource reservation protocols <ref type="bibr" target="#b47">[48,</ref><ref type="bibr" target="#b50">51,</ref><ref type="bibr" target="#b52">53]</ref>. Many current network architectures, however, address QoS from a provider's point of view and analyze network performance, failing to comprehensively address the quality needs of applications. Until recently, there has been little work on QoS support in distributed systems platforms. What work there is has been mainly carried out in the context of the open distributed processing <ref type="bibr" target="#b26">[27]</ref>.</p><p>The current state of QoS support in architectural frameworks can be summarized as follows <ref type="bibr" target="#b19">[20]</ref>: i) incompleteness: current interfaces (e.g., application programming interfaces such as Berkeley Sockets) are generally not QoS configurable and provide only a small subset of the facilities needed for control and management of multimedia flows; ii) lack of mechanisms to support QoS guarantees: research is needed in distributed control, monitoring and maintenance QoS mechanisms, so that contracted levels of service can be predictable and assured; and iii) lack of an overall framework: it is necessary to develop an overall architectural framework to build upon and reconcile the existing notion of QoS at different system levels and among different network architectures. In recognition of the above limitations, a number of research teams have proposed systems architectural approaches to QoS support. In this paper, these are referred to as QoS architectures . The intention of QoS architecture research is to define a set of QoS configurable interfaces that formalize QoS in the end-system and network, providing a framework for the integration of QoS control and management mechanisms.</p><p>In this paper, we present, in Sect. 2, a generalized QoS framework and terminology <ref type="foot" target="#foot_0">1</ref> for distributed multimedia applications operating over multimedia networks with QoS guarantees. The generalized QoS framework is based on a set of principles that govern the behavior of QoS architectures. Following this, we evaluate a number of QoS architectures found in the literature that have been developed by the telecommunications, computer communications and standards communities. We then present a short qualitative comparison and discussion in Sects. 4 and 5, respectively. Finally, in Sect. 6 we offer some concluding remarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Generalized QoS framework</head><p>In what follows, a set of elements used in building QoS into distributed multimedia systems is described. This includes QoS principles which govern the construction of a generalized QoS framework, QoS specification which captures application-level QoS requirements, and QoS mechanisms which realize the desired application end-to-end QoS behavior.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">QoS principles</head><p>A number of QoS principles motivate the design of a generalized QoS framework:</p><p>• transparency principle states that applications should be shielded from the complexity of underlying QoS specification and QoS management. An important aspect of transparency is the QoS-based API <ref type="bibr" target="#b72">[74,</ref><ref type="bibr" target="#b8">9]</ref> at which desired QoS levels are stated (see QoS management policy in Sect. 2.2). The benefits of transparency are that it reduces the need to embed functionality in the application, hides the detail of underlying service specification from the application and it delegates the complexity of handling QoS management activities to the underlying framework;</p><p>• integration principle states that QoS must be configurable, predictable and maintainable over all architectural layers to meet end-to-end QoS <ref type="bibr" target="#b66">[68]</ref>. Flows<ref type="foot" target="#foot_1">2</ref> traverse resource modules (e.g., CPU, memory, multimedia devices, network, etc.) at each layer from source media devices, down through the source protocol stack, across the network, up through the receiver protocol stack to the playout devices. Each resource module traversed must provide QoS configurability (based on a QoS specification), resource guarantees (provided by QoS control mechanisms) and maintenance of ongoing flows; • separation principle states that media transfer, control and management are functionally distinct architectural activities <ref type="bibr" target="#b67">[69]</ref>. The principle states that these tasks should be separated in architectural QoS frameworks. One aspect of this separation is the distinction between signaling and media transfer. Flows (which are isochronous in nature) generally require a wide variety of highbandwidth, low-latency, non-assured services with some form of jitter correction. On the other hand, signaling (which is full duplex and asynchronous in nature) generally requires low-bandwidth, assured-type services; • multiple time scales principle <ref type="bibr" target="#b67">[69]</ref> guides the division of functionality between architectural modules and pertains to the modeling of control and management mechanisms. It is necessitated by, and is a direct consequence of, fundamental time contraints that operate in parallel between resource management activities (e.g., scheduling, flow control, routing, QoS management, etc.) in distributed communications environments; and • performance principle subsumes a number of widely agreed rules for the implementation of QoS-driven communications systems which guide the division of functionality in structuring communication protocols for high performance in accordance with systems design principles <ref type="bibr" target="#b5">[6]</ref>, avoidance of multiplexing <ref type="bibr" target="#b6">[7]</ref>, recommendations for structuring communications protocols <ref type="bibr" target="#b7">[8]</ref>, and the use of hardware assists for efficient protocol processing <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b54">55]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">QoS specification</head><p>QoS specification is concerned with capturing applicationlevel QoS requirements and management policies. QoS specification is generally different at each system layer and is used to configure and maintain QoS mechanisms resident in the end-system and network. For example, at the distributed system platform level, QoS specification is primarily application-oriented rather than system oriented. Lower level considerations such as tightness of synchronisation of multiple related audio and video flows, the rate and burst size of flows, or the details of thread scheduling in the endsystem should all be hidden at this level. QoS specification is therefore declarative in nature; applications specify what is required rather than how this is to be achieved by underlying QoS mechanisms. QoS specification encompasses but is not limited <ref type="foot" target="#foot_2">3</ref> to the following:</p><p>• flow performance specification, which characterizes the user's flow performance requirements <ref type="bibr" target="#b4">[5]</ref>. The ability to guarantee traffic throughput rates, delay, jitter and loss rates is particularly important for multimedia communications. These performance-based metrics are likely to vary from one application to another. To be able to commit necessary end-system and network resources, QoS frameworks must have prior knowledge of the expected traffic characteristics associated with each flow before resource guarantees can be met; • level of service, which specifies the degree of end-toend resource commitment required (e.g., deterministic <ref type="bibr" target="#b48">[49]</ref>, predictive <ref type="bibr" target="#b46">[47]</ref> and best effort <ref type="bibr" target="#b7">[8]</ref>). While the flow performance specification permits the user to express the required performance metrics in a quantitative manner, level of service allows these requirements to be refined in a qualitative way to allow a distinction to be made between hard and soft performance guarantees. Level of service expresses a degree of certainty that the QoS levels requested at the time of flow establishment or renegotiation will be honored; • QoS management policy, which captures the degree of QoS adaptation <ref type="bibr" target="#b72">[74]</ref> that the flow can tolerate and the scaling actions to be taken in the event of violations in the contracted QoS <ref type="bibr" target="#b84">[86]</ref>. By trading off temporal and spatial quality to available bandwidth, or manipulating the playout time of continuous media in response to variation in delay, audio and video flows can be presented at the playout device with minimal perceptual distortion. The QoS management policy also includes applicationlevel selection for QoS indications (aka QoS alerts <ref type="bibr" target="#b65">[67]</ref>) in the case of violations in the requested QoS and periodic QoS availability notifications for bandwidth, delay, jitter and loss; • cost of service, which specifies the price the user is willing to incur for the level of service <ref type="bibr" target="#b9">[10]</ref>. Cost of service is a very important factor when considering QoS specification. If there is no notion of cost of service involved in QoS specification, there is no reason for the user to select anything other than maximum level of service, e.g., guaranteed service; and • flow synchronization specification, which characterizes the degree of synchronisation (i.e., tightness) between multiple related flows <ref type="bibr" target="#b17">[18]</ref>. For example, simultaneously recorded video perspectives must be played in precise frame-by-frame synchrony so that relevant features may be simultaneously observed. On the other hand, lip synchronization in multimedia flows does not need to be absolutely precise <ref type="bibr" target="#b18">[19]</ref> when the main information channel is auditory and video is only used to enhance the sense of presence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">QoS mechanisms</head><p>QoS mechanisms are selected and configured according to user-supplied QoS specification, resource availability and resource management policy. In resource management, QoS mechanisms can be categorized as either static or dynamic in nature. Static resource management deals with flow establishment and end-to-end QoS re-negotiation phases (which we describe as QoS provision) and dynamic resource management deals with the media-transfer phase (which we describe as QoS control and management). The distinction between QoS control and QoS management is characterized by the different time scales over which they operate. QoS control operates on a faster time scale than QoS management.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">QoS provision mechanisms</head><p>QoS provision is comprised of the following components:</p><p>• QoS mapping, which performs the function of automatic translation between representations of QoS at different system levels (i.e., operating system, transport layer, network, etc.) and thus relieves the user of the necessity of thinking in terms of lower level specification. For example, the transport-level QoS specification may express flow requirements in terms of level of service, average and peak bandwidth, jitter, loss and delay constraints.</p><p>For admission testing and resource allocation purposes, this representation must be translated to something more meaningful to the end-system. As illustrated in Fig. <ref type="figure" target="#fig_1">2</ref>, QoS mapping derives the scheduler QoS parameters (viz. period, quantum and deadline times of the threads) from the transport-level QoS specification parameters <ref type="bibr" target="#b33">[34]</ref>; • admission testing, which is responsible for comparing the resource requirement arising from the requested QoS against the available resources in the system. The decision whether a new request can be accommodated generally depends on system-wide resource management policies and resource availability. Once admission testing has been successfully completed on a particular resource module, local resources are reserved immediately and then committed later if the end-to-end admission control test (i.e., accumulation of hop-by-hop tests) is successful; and • resource reservation protocols, which arrange for the allocation of suitable end-system and network resources according to the user QoS specification. In doing so, the resource reservation protocol interacts with QoS-based routing to establish a path through the network in the first instance, then, based on QoS mapping and admission control at each local resource module traversed (e.g. CPU, memory, I/O devices, switches, routers, etc.), endto-end resources are allocated. The result is that QoS • flow scheduling, which manages the forwarding of flows (chunks of media based on application-layer framing) in the end-system <ref type="bibr" target="#b29">[30]</ref><ref type="bibr" target="#b30">[31]</ref><ref type="bibr" target="#b31">[32]</ref><ref type="bibr" target="#b32">[33]</ref><ref type="bibr" target="#b33">[34]</ref><ref type="bibr" target="#b34">[35]</ref> and network (packets and/or cells) in an integrated manner <ref type="bibr" target="#b51">[52]</ref>. Flows are generally scheduled independently in the end-systems, but may be aggregated and scheduled in unison in the network. This is dependent on the level of service and the scheduling discipline <ref type="bibr" target="#b1">[2]</ref> adopted; • flow shaping, which regulates flows based on usersupplied flow performance specifications. Flow shaping can be based on a fixed-rate throughput (i.e., peak rate) or some form of statistical representation (i.e., sustainable rate and burstiness) of the required bandwidth <ref type="bibr" target="#b48">[49]</ref>. The benefit of shaping traffic is that it allows the QoS frameworks to commit sufficient end-to-end resources and to configure flow schedulers to regulate traffic through the end-systems and network. It has been mathematically proven <ref type="foot" target="#foot_3">4</ref> that the combination of traffic shaping at the edge of the network and scheduling in the network can provide hard performance guarantees; • flow policing, which can be viewed as the dual of monitoring. Monitoring, which is usually associated with QoS management, observes whether the QoS contracted by a provider is being maintained, whereas policing observes whether the QoS contracted by a user is being adhered to. Policing is often only appropriate where administrative and charging boundaries are being crossed, for example, at a user-to-network interface <ref type="bibr" target="#b52">[53]</ref>. Flow-shaping schemes at the source allow the policing mechanism to detect misbehaving flows; • flow control, which includes both open-loop and closedloop schemes. Open-loop flow control is used widely in telephony and allows the sender to inject data into the network at the agreed levels, given that resources have been allocated in advance. Closed-loop flow control requires the sender to adjust its rate based on feedback from the receiver <ref type="bibr" target="#b40">[41]</ref> or network <ref type="bibr" target="#b63">[64]</ref>. Applications using closed-loop flow control based protocols must be able to adapt to fluctuations in the available resources.</p><p>On the other hand, applications which cannot adjust to changes in the delivered QoS are more suited to openloop schemes, where bandwidth, delay and loss can be deterministically guaranteed for the duration of the session; and • flow synchronization, which is required to control the event ordering and precise timings of multimedia interactions. Lip-sync is the most commonly cited form of multimedia synchronization (i.e., synchronization of video and audio flows at a playout device). Other synchronization scenarios reported include: event synchronization with and without user interaction, continuous synchronization other than lip-sync, continuous synchronization for disparate sources and sinks. All scenarios place fundamental QoS requirements on flow synchronization protocols <ref type="bibr" target="#b43">[44]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">QoS management mechanisms</head><p>In order to maintain agreed levels of QoS, it is often insufficient to just commit resources. Rather, QoS management is frequently required to ensure that the contracted QoS is sustained. QoS management of flows is functionally similar to QoS control. However, it operates on a slower time scale; that is, over longer monitoring and control intervals <ref type="bibr" target="#b14">[15]</ref>. The fundamental QoS management mechanisms include the following:</p><p>• QoS monitoring, which allows each level of the system to track the ongoing QoS levels achieved by the lower layer. QoS monitoring often plays an integral part in a QoS maintenance feedback loop which maintains the QoS achieved by resource modules. Monitoring algorithms operate over different time scales. For example, they can run as part of a scheduler (as a QoS control mechanism) to measure individual performance of ongoing flows. In this case, measured statistics can be used to control packet scheduling and admission control <ref type="bibr" target="#b46">[47]</ref>. Alternatively, QoS monitoring can operate on an end-toend basis as part of a transport-level feedback mechanism <ref type="bibr" target="#b43">[44]</ref> or as part of the application itself <ref type="bibr" target="#b12">[13]</ref>; • QoS availability, which allows the application to specify the interval over which one or more QoS parameters (e.g., delay, jitter, bandwidth, loss, synchronization) can be monitored and the application informed of the delivered performance via a QoS signal <ref type="bibr" target="#b72">[74]</ref>. Both single and multiple QoS signals can be selected based on the user-supplied QoS management policy (see Sect. 2.2); • QoS degradation, which issues a QoS indication to the user when it determines that the lower layers have failed to maintain the QoS of the flow and nothing further can be done by the QoS maintenance mechanism. In response to such an indication, the user can choose either to adapt to the available level of QoS or scale back <ref type="bibr" target="#b83">[85]</ref> to a reduced level of service (i.e., end-to-end renegotiation); • QoS maintenance, which compares the monitored QoS against the expected performance and then exerts tun-ing operations (i.e., fine-or coarse-grain resource adjustments) on resource modules to sustain the delivered QoS. Fine-grain resource adjustment counters QoS degradation by adjusting local resource modules (e.g., loss via the buffer management, throughput via the flow regulation, and queuing delays and continuous-media playout calculation via the flow scheduling <ref type="bibr" target="#b84">[86]</ref>); and • QoS scalability, which comprises QoS filtering (which manipulates flows as they progress through the communications system) and QoS adaptation (which scales flows at the end-systems only) mechanisms. Many continuous-media applications exhibit robustness in adapting to fluctuations in end-to-end QoS. Based on the usersupplied QoS management policy, QoS adaptation in the end-systems can take remedial actions to scale flows appropriately. Resolving heterogeneous QoS issues is a particularly acute problem in the case of multicast flows.</p><p>Here individual receivers may have differing QoS capabilities to consume audio-visual flows; QoS filtering helps to bridge this heterogeneity gap, while simultaneously meeting individual receivers' QoS requirements <ref type="bibr" target="#b88">[90]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">QoS architectures</head><p>Until recently, research in providing QoS guarantees has primarily focused on network-oriented traffic models and service-scheduling disciplines. These guarantees are not, however, end-to-end in nature. Rather, they preserve QoS guarantees only between network access points that endsystems are attached to <ref type="bibr" target="#b79">[81]</ref>. Work on QoS-driven endsystem architecture needs to be integrated with networkconfigurable QoS services and protocols to meet applicationto-application QoS requirements. In recognition of this, researchers have recently proposed new communication architectures which are broader in scope and cover both network and end-system domains. In this section, we review a number of QoS architectures which have recently emerged in the literature . Each architecture tends to use its own distinctive QoS terminology. We do not attempt to resolve that here. We present, rather, the pertinent and novel features of each architecture and then, in Sect. 4, compare them with the generalized QoS framework introduced in the preceding section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Heidelberg QoS model</head><p>The HeiProject at IBM's European Networking Center in Heidelberg has developed a comprehensive QoS model, which provides guarantees in the end-systems and network <ref type="bibr" target="#b69">[71]</ref>. The communications architecture includes a continuous-media transport systems (HeiTS/TP) <ref type="bibr" target="#b41">[42]</ref>, which provides QoS mapping and media scaling <ref type="bibr" target="#b83">[85]</ref> as illustrated in Fig. <ref type="figure" target="#fig_2">3</ref>. Underlying the transport is an internetworking layer based on ST-II <ref type="bibr" target="#b45">[46]</ref>, which supports both guaranteed and statistical levels of service. In addition, the network supports QoS-based routing and QoS filtering. Key to providing end-to-end guarantees is HieRAT (resource administration technique) <ref type="bibr" target="#b69">[71]</ref>. HeiRAT is comprised of a comprehensive QoS management scheme which includes QoS negotiation, QoS calculation, admission control, QoS enforcement and resource scheduling. The HeiRAT operating system scheduling policy is a rate-monotonic scheme, whereby the priority of a system thread performing protocol processing is proportional to the message rate requested. The Heidelberg QoS model has been designed to handle heterogeneous QoS demands from individual receivers in a multicast group and to support QoS adaptivity via flowfiltering and media-scaling techniques. Media scaling <ref type="bibr" target="#b83">[85]</ref> and codec translation at the end-systems and flow filtering and resource sharing in the network are fundamental to meeting heterogeneous QoS demands. Media scaling matches the source with the receivers' QoS capability by manipulating flows at the network edges. In contrast, filtering accommodates the receivers' QoS capability by manipulating flows at the core of the network as flows traverse bridges, switches and routers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">XRM</head><p>The COMET group at Columbia University is developing an Extended Integrated Reference Model (XRM) <ref type="bibr" target="#b27">[28]</ref> as a modeling framework for control and management of multimedia telecommunications networks (which comprise multimedia computing platforms and broadband networks). The COMET group argues that the foundations for operability (i.e., control and management) of multimedia computing and networking devices are equivalent; that is, both classes of devices can be modeled as producers, consumers and processors of media.The only difference between computing and network devices is the overall goal that a group of devices has set to achieve in the network or end-system. The XRM is divided into five distinct planes <ref type="bibr" target="#b67">[69]</ref> as illustrated in Fig. <ref type="figure" target="#fig_3">4:</ref> • management function, which resides in the network management plane (N-plane) and covers the OSI functional areas of network and system management; • traffic control function, which comprises the resource control (M-plane) and connection management and control (C-plane) planes. Resource control constitutes cell scheduling, call admission, call routing in the network, process scheduling, memory management, routing, admission control and flow control in the end-systems; The XRM is built on theoretical work of guaranteeing QoS requirements in ATM networks and end-systems populated with multimedia devices. General concepts for characterizing the capacity of network <ref type="bibr" target="#b80">[82]</ref> and end-system <ref type="bibr" target="#b71">[73]</ref> devices (e.g., disks, switches, etc.) have been developed. At the network layer, XRM characterizes the capacity region of an ATM multiplexer with QoS guarantees as a schedulable region. Network resources such as switching bandwidth and link capacity are allocated based on four cell-level traffic classes (class I, II, III, and C) for circuit emulation, voice and video, data, and network management, respectively. A traffic class is characterized by its statistical properties and QoS requirements. Typically, QoS requirements reflect cell loss and delay constraints. In order to efficiently satisfy the QoS requirements of the cell level, scheduling and buffer management algorithms dynamically allocate communication bandwidth and buffer space appropriately.</p><p>In the end-system, flow requirements are modeled through service class specifications with QoS constraints. For example, in the audio video unit, the service class specification is in terms of JPEG, MPEG-I, MPEG-II video and CD audio quality flows with QoS guarantees. QoS for these classes is specified by a set of frame delay and loss constraints.The methodology of characterizing network resources is extended to the end-system to represent the capacity of multimedia devices. Using the concept of a multimedia capacity region, the problem of scheduling flows in the end-system becomes identical to the real-time binpacking exercise of the network layer. The implementation of XRM including key resource abstractions (viz. schedulable and multimedia capacity region) is currently being realized as part of a binding architecture <ref type="bibr" target="#b27">[28]</ref> for open signaling, control and management of multimedia networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">OMEGA</head><p>During the past 3 years the University of Pennsylvania has been developing an end-point architecture called the OMEGA architecture <ref type="bibr" target="#b68">[70]</ref>. OMEGA is the result of an interdisciplinary research effort that is examining the relationship between application QoS requirements (which make stringent resource demands) and the ability of local (the operating system) and global resource management (combining communication and remotely managed resources) to satisfy these demands. The OMEGA architecture illustrated in Fig. <ref type="figure" target="#fig_4">5</ref> assumes a network subsystem which provides bounds on delay, errors and can meet bandwidth demands, and an operating system which is capable of providing run-time QoS guarantees. The essence of the OMEGA architecture is resource reservation and management of end-to-end resources. Communication is preceded by a call setup phase, where application requirements, expressed in terms of QoS parameters, are negotiated, and guarantees are made at several logical levels, such as between applications and the network subsystem, applications and the operating system, the network subsystem and the operating system. This establishes customized connections and results in the allocation of resources appropriate to meet application requirements and operating system/ network capabilities. To facilitate this resource management process, the University of Pennsylvania has also developed a QoS brokerage model <ref type="bibr" target="#b86">[88]</ref>, which incorporates QoS translation, and QoS negotiation and re-negotiation (see <ref type="bibr" target="#b87">[89]</ref> for full details on similar work on QoS negotiation protocol at University of Montreal).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">int-serv architecture</head><p>The work by the Integrated Services (int-serv) Group <ref type="bibr" target="#b61">[62]</ref> of the Internet Engineering Task Force (IETF) is a significant contribution to providing controlled QoS for multimedia applications over an integrated services internetwork. The group has defined a comprehensive int-serv architecture <ref type="bibr" target="#b61">[62]</ref> and a QoS framework <ref type="bibr" target="#b77">[79]</ref> used to specify the functionality of internetwork system elements (known as elements) which make multiple, dynamically selectable QoS available to applications. The behavior of elements, which constitute routers, subnetworks and end-point operating systems, is captured as a set of services, of which some or all are offered by each element. Each element is QoS-aware and supports interfaces required by the service definition <ref type="bibr" target="#b61">[62]</ref>. The concatenation of service elements along an endto-end data path provides an overall statement of end-to-end QoS. The following int-serv services are offered in addition to best effort: (i) controlled delay, which attempts to provide several levels of delay which the application can choose from; (ii) predicated delay, which provides a statistical delay bound similar to Tenet Group's statistical service <ref type="bibr" target="#b48">[49]</ref> and the COMET Group's guaranteed service <ref type="bibr" target="#b60">[61]</ref>; and (iii) guaranteed delay, which provides an absolute guaranteed delay bound.</p><p>Flows in an int-serv architecture are characterized by two specifications: a traffic specification, which is a specification of the traffic pattern which a flow expects to exhibit; and a service request specification, which is a specification of the QoS a flow desires from a service elements. The int-serv architecture, which is restricted to the network but also applicable in the end-system, is comprised of four components <ref type="bibr" target="#b61">[62]</ref>: In <ref type="bibr" target="#b78">[80]</ref>, Clark introduces some early work on a Quality-of-Service Manager (QM) as part of the end-system int-serv architecture. As illustrated in Fig. <ref type="figure" target="#fig_5">6</ref>, the QM, which constitutes a user interface, service agents and dispatcher, presents an abstract management layer designed to isolate applications from underlying details of the specific services provided by a QoS-driven internet <ref type="bibr" target="#b61">[62]</ref>. One motivating factor behind the introduction of a QM is that applications can negotiate desired QoS without needing to know the details of a specific network service described above. In this case, the QM provides a degree of transparency, whereby applications express desired levels of QoS in application-oriented language rather than using communication QoS specifics. The QM is responsible for determining what QoS management capabilities are available on the application's communication path and chooses the path best suited to the application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">QoS-A</head><p>The Quality-of-Service Architecture (QoS-A) <ref type="bibr" target="#b66">[68]</ref> is a layered architecture of services and mechanisms for QoS management and control of continuous media flows in multiservice networks. The architecture incorporates the following key notions: flows, which characterize the production, transmission and eventual consumption of single media streams (both unicast and multicast) with associated QoS; service contracts, which are binding agreements of QoS levels between users and providers; and flow management, which provides for the monitoring and maintenance of the contracted QoS levels. The realization of the flow concept demands active QoS management and tight integration between device management, end-system thread scheduling, communications protocols and networks. In functional terms, the QoS-A (as illustrated Fig. <ref type="figure" target="#fig_6">7</ref>) is composed of a number of layers and planes. The upper layer consists of a distributed-applications platform augmented with services to provide multimedia communications and QoS specification in an object-based environment <ref type="bibr" target="#b23">[24]</ref>. Below the platform level is an orchestration layer which provides jitter correction and multimedia synchronization services across multiple related application flows <ref type="bibr" target="#b43">[44]</ref>. Supporting this is a transport layer which contains a range of QoS-configurable services and mechanisms <ref type="bibr" target="#b33">[34]</ref>. Below this, an internetworking layer and lower layers form the basis for end-to-end QoS support.</p><p>QoS management is realized in three vertical planes in the QoS-A. The protocol plane, which consists of distinct user and control subplanes, is motivated by the principle of separation. QoS-A uses separate protocol profiles for the control and media components of flows because of the different QoS requirements of control and data. The QoS maintenance plane contains a number of layer-specific QMs. These are each responsible for the fine-grained monitoring and maintenance of their associated protocol entities. For example, at the orchestration layer <ref type="bibr" target="#b43">[44]</ref>, the QM is interested in the tightness of synchronization between multiple related flows. In contrast, the transport QM is concerned with intraflow QoS such as bandwidth, loss, jitter and delay. Based on flow monitoring information and a user-supplied service contract, QMs maintain the level of QoS in the managed flow by means of fine-grained resource-tuning strategies. The final QoS-A plane pertains to flow management, which is responsible for flow establishment (including end-to-end admission control, QoS-based routing and resource reservation), QoS mapping (which translates QoS representations between layers) and QoS scaling (which constitutes QoS filtering and QoS adaptation for coarse-grained QoS maintenance control).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">OSI QoS framework</head><p>One early contribution to the field of QoS-driven architecture is the OSI QoS Framework <ref type="bibr" target="#b65">[67]</ref>, which concentrates primar- • QoS requirements, which are realized through QoS management and maintenance entities; • QoS characteristics, which are a description of the fundamental measures of QoS that have to be managed; • QoS categories, which represent a policy governing a group of QoS requirements specific to a particular environment such as time-critical communications; and • QoS management functions, which can be combined in various ways and applied to various QoS characteristics in order to meet QoS requirements.</p><p>The OSI QoS framework (as illustrated in Fig. <ref type="figure" target="#fig_7">8</ref>) is made up of two types of management entities (viz. layer-specific and system-wide entities) that attempt to meet the QoS requirements by monitoring, maintaining and controlling endto-end QoS. The task of the policy control function is to determine the policy which applies at a specific layer of an open system. The policy control function models any priority actions that must be performed to control the operation of the layer. The definition of a particular policy is layerspecific and therefore cannot be generalized. Policy may, however, include aspects of security, time-critical communications and resource control. The role of the QoS control function is to determine, select and configure the appropriate protocol entities to meet layer-specific QoS goals. The system management agent is used in conjunction with OSI systems management protocols to enable system resources to be remotely managed. The local resource manager represents end-system control of resources. The system QoS control function combines two system-wide capabilities: to tune performance of protocol entities and to modify the capability of remote systems via OSI systems management. The OSI systems management interface is supported by the systems </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.7">Tenet architecture</head><p>The Tenet Group at the University of California at Berkeley has developed a family of protocols <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b48">49]</ref> which run over an experimental wide-area ATM network. As illustrated in Fig. <ref type="figure" target="#fig_8">9</ref>, the Tenent Architecture <ref type="bibr" target="#b82">[84]</ref> includes a Real-Time Channel Administration Protocol (RCAP) <ref type="bibr" target="#b50">[51]</ref> in addition to Real-Time Internet Protocol (RTIP), Continuous Media Transport Protocol (CMTP) <ref type="bibr" target="#b36">[37]</ref>. The former provides generic connection establishment, resource reservation and signaling functions for the rest of the protocol family. RCAP spans the transport and network layers for overall resource reservation and flow setup. CMTP is explicitly designed for continuous media support. It is a lightweight protocol which runs on top of RTIP and provides sequenced and periodic delivery of continuous media samples with QoS control over throughput, delays and error bounds. The Tenet Group makes a distinction between deterministic and statistical guarantees for hard real-time and continuous media flows <ref type="bibr" target="#b49">[50]</ref>, respectively. In the deterministic case, guarantees provide a hard bound on the performance of all cells within a session. Statistical guarantees promise that no more than x% of packets would experience a delay greater than specified, or no more that x% of cells might in a session might be lost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.8">TINA QoS framework</head><p>The TINA architecture is governed by the separation between telecommunication applications and the TINA Distributed Processing Environment (TDPE). The TDPE software can be visualized as a distributed operating system layer which supports the execution of telecommunication applications. Multimedia services offered by a provider utilize the TDPE and underlying computing and communications capabilities. The TINA QoS Framework <ref type="bibr" target="#b74">[76]</ref> addresses the specification and realization of QoS support for telecommunications applications. The framework is partly based on the ANSA <ref type="bibr" target="#b26">[27]</ref> and CNET QoS Frameworks <ref type="bibr" target="#b25">[26]</ref>. QoS specification is stated declaratively, using the notion of service attributes as part of the computational specification. This has been integrated into the TINA-ODL specification language which provides extensions to OMG-IDL <ref type="bibr" target="#b73">[75]</ref>. QoS mechanisms have been specified as part of the TDPE specification for QoS provision and QoS negotiation. These mechanisms consider QoS mapping from the application level to the QoS offered by the TDPE kernel and QoS degradation reports in the case that the contracted QoS fails to meet its agreed targets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.9">MASI end-to-end model</head><p>The CESAME Project <ref type="bibr" target="#b75">[77]</ref> at Laboratoire MASI, Université Pierre et Marie Curie, is developing an architecture for multimedia communications which takes end-to-end QoS support as it primary objective. As with the QoS-A, the MASI architecture (shown in Fig. <ref type="figure" target="#fig_9">10</ref>) offers a generic QoS framework to specify and implement the required QoS requirements of distributed multimedia applications operating over ATM-based networks. The CESAME Project considers endto-end resource management which spans the host operating system, host communication subsystem and ATM networks. The research is motivated by i) the need to map QoS requirements from the ODP layer to specific resource modules in a clean and efficient manner; ii) the need to resolve multimedia synchronization needs of multiple related ODP streams <ref type="bibr" target="#b22">[23]</ref>; and iii) the need to provide suitable communication protocol support for multimedia services being developed at Université Pierre et Marie Curie.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.10">End system QoS framework</head><p>At Washington University, Gopal and Purulkar <ref type="bibr" target="#b70">[72]</ref> have developed a QoS framework for providing QoS guarantees within the end-system for networked multimedia applications. There are four components of the Washington University end system QoS framework as illustrated in Fig. <ref type="figure" target="#fig_10">11</ref>: QoS specification, QoS mapping, QoS enforcement and protocol implementation. QoS specification is at a high level and uses a small number of parameters to allow applications greater ease in specifying their flow requirements. Based on QoS specification, QoS mapping operations derive resource requirements for each end-to-end application session. Important system resources considered in <ref type="bibr" target="#b70">[72]</ref> include the CPU, QoS enforcement is mainly concerned with providing real-time processing guarantees for media transfer. A real-time upcall (RTU) facility <ref type="bibr" target="#b79">[81]</ref> has been developed for structuring protocols. RTUs are scheduled using a rate-monotonic policy <ref type="bibr" target="#b11">[12]</ref> with delayed preemption that takes advantage of the iterative nature of protocol processing to reduce context-switching overhead and increase end-system scheduling efficiency. The final component of the framework is an application-level protocol implementation model. Protocol code is structured as RTUs with attributes that are derived from high-level specifications by QoS mapping operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Comparison</head><p>In this section, we present a simple qualitative comparison of the QoS architectures survey in Sect. 3. We use the elements of the generalized QoS framework (described in Sect. 2) as a basis for the comparison summarized in Table <ref type="table" target="#tab_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>All QoS architectures surveyed in Sect. 3 consider QoS specification (e.g., services contracts, flow specs, and service and traffic classes, etc.) to be fundamental in capturing application-level QoS requirements. Although there is a broad consensus on the need for a flow spec which captures quantitative performance requirements, there exist two schools of thought on what it should be. On the one hand, XRM and ATM <ref type="bibr" target="#b52">[53]</ref> solutions are based on a flow spec that is made up of one or two QoS parameters that identify a traffic class and an average bandwidth. On the other hand, the Tenet, QoS-A and OMEGA architectures adopt a multivalued flow spec (cf. RFC1633, ST-II, RSVP, HieTS). Although both of these proposals seem similar, philosophically they are rather different in practice. The COMET group <ref type="bibr" target="#b27">[28]</ref> argues that, by limiting a flow spec to a set of welldefined services in the end-system and traffic classes in the network, complexity in the end-system and network is more manageable. In contrast, Tenet, QoS-A and OMEGA architectures consider such an approach unnecessarily limiting. These groups argue that, by defining a set of discrete QoS classes, applications may be unduly constrained to conform to a QoS class which may not meet the desired applicationlevel QoS requirements.</p><p>Level of service (Sect. 2.2) expresses the degree of certainty that the QoS levels specified in a flow spec will be honored. Each architecture offers a different set of services to applications. For example, the Washington University QoS Framework supports three application classes to which it maps application-level flows. These include: i) an isochronous class, which is suitable for continuous media flows; ii) a burst class, which is appropriate for bulk data transfer; and iii) a low-delay class, which is suitable for applications that require a small response time such as an RPC request. The Washington QoS Framework assumes that all applications fall into one of these three general application classes. While all architectures provide services based on both hard (i.e., guaranteed service) and soft (i.e., best effort) QoS guarantees, it is difficult to determine which set optimally covers the application base. Additional services found in the literature include the predicted service (IETF), statistical service (Tenet, XRM and Heidelberg) and the available bit rate service (ATM Forum).</p><p>With the exception of the IETF work (which uses RSVP maintained state), all architectures advocate connectionoriented or 'hard-state' solutions to network-level QoS provision; that is, hard state couples path establishment and resource reservation. Work in the IETF on an integrated services architecture (using RSVP and IPv6 flows) described in Sect. 3.4 assumes that network-level QoS guarantees can be built using a 'soft-state' approach; that is, no explicit connection is established but flows traverse intermediate routers on paths that are temporarily (i.e., network state is timed out and periodically refreshed) established. In this instance, path establishment and resource reservation are decoupled. It is argued that a soft-state approach provides better scalability, robustness, and eradicates the round-trip call setup time found in connection-oriented approaches. In <ref type="bibr" target="#b64">[66]</ref>, Turner suggests a hybrid approach called ATM-soft, which benefits from the use of soft state in a native ATM environment. It is still too early to determine which approach is more suitable for future QoS architectures, given the need to support both high-end (e.g., telesurgery and time-critical applications) and low-end (e.g., video conferencing and audio tools) multimedia applications.</p><p>Commonalities exist between QoS control and management strategies found in the end-system and network: e.g., admission control, resource management, scheduling mechanisms. The extent to which network-level QoS mechanisms are applicable in the end-systems (or vice versa) remains an open issue. End-system and network devices can be modelled in a similar way: the only real difference is the overall goal that end-system or network devices are set to achieve. For example, the XRM models the end-system as a virtual switch <ref type="bibr" target="#b27">[28]</ref> and a set of configurable multimedia devices based on a DAN architecture <ref type="bibr" target="#b15">[16]</ref>. It is evident that commonalities exist between scheduling strategies found in switches/routers and end-system operating systems (e.g., fair-share techniques can be found in the end-system and network switches/routers). This seems encouraging in the first instance. A counter argument, however, is that endsystems have fundamentally different scheduling goals than routers and switches. End-systems schedule a wide variety of both isochronous (e.g., continuous media flows) and asynchronous (e.g., RPCs) work, whereas switches and routers a The term "E2E coordination" refers to the coordination of end-system and network resources for flows. This could be provided by a resource reservation protocol (e.g., RSVP <ref type="bibr" target="#b47">[48]</ref>), connection setup protocol (e.g., RCAP <ref type="bibr" target="#b50">[51]</ref>) or signaling protocol (e.g., UNI 4.0 <ref type="bibr" target="#b52">[53]</ref>).</p><p>The legend for the comparison table is as follows:</p><p>-"not addressed" E/N "addressed in detail in the end-system/network" (E)/(N) "mentioned only in the end-system/network" R "QoS renegotiation addressed in detail" (R) "QoS renegotiation mentioned only" S "QoS scaling addressed in detail" D "QoS degradation addressed in detail" (D) "QoS degradation mentioned only" A "QoS availability in detail" are mainly involved with switching/routing of cells/packets. This means that in the end-system application execution times (i.e., a quantum <ref type="bibr" target="#b33">[34]</ref> of work as illustrated in Fig. <ref type="figure" target="#fig_1">2</ref>) can vary widely (e.g., uncompressing a video flow is computationally more intensive than displaying video to a screen).</p><p>In contrast, switch and router schedulers are generally moving packets/cells from queues to ports or vice versa and are optimized for that task. Therefore, techniques resident in switches (such as HRR <ref type="bibr" target="#b57">[58]</ref>) may be inappropriate in host operating systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we have argued that multimedia systems designers should adopt an end-to-end approach to meet application-level QoS requirements. To meet this challenge we have proposed a generalized QoS framework that is motivated by five design principles; that is, the principles of transparency, integration, separation, multiple time scales and performance. Elements of our generalized framework include QoS specification and static and dynamic QoS management. We have summarized and evaluated key research in QoS architectures for distributed systems and discussed some of the issues that emerged during a comparison of the existing QoS architectures. The work presented in this survey represents a growing body of research which is laying the foundations for future QoS programmable multimedia platforms <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b89">91]</ref>. While the area of QoS research in multimedia networking is mature <ref type="bibr" target="#b0">[1]</ref>, work on QoS architecture remains in its early stages of development with no substantial implementation results having been published to validate the approach. Given that, the work presented in this paper contributes towards a qualitative understanding of the key principles, services and mechanisms needed to build QoS into distributed multimedia systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. End-to-end QoS scenario for a continuous media flow</figDesc><graphic coords="2,46.31,30.93,346.07,72.62" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. QoS parameters derived during QoS mapping</figDesc><graphic coords="4,46.31,30.65,232.68,65.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Heidelberg QoS model</figDesc><graphic coords="5,308.55,30.78,130.28,146.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. XRM</figDesc><graphic coords="6,46.31,31.41,331.17,298.01" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. OMEGA</figDesc><graphic coords="7,46.31,31.41,229.77,121.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. int-serv QM</figDesc><graphic coords="7,308.55,31.20,232.86,157.79" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. QoS-A</figDesc><graphic coords="8,46.31,31.17,209.64,186.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. OSI QoS framework</figDesc><graphic coords="8,308.55,30.62,209.60,197.49" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Tenet Architecture</figDesc><graphic coords="9,46.31,30.70,209.49,121.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. MASI schematic</figDesc><graphic coords="9,308.55,30.46,235.12,134.58" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. End system QoS framework</figDesc><graphic coords="10,46.31,30.78,243.50,112.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Comparison of QoS architectures</figDesc><table><row><cell>QoS</cell></row><row><cell>framework</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Where appropriate, we have adopted the standard terminology of the ISO QoS Working Group<ref type="bibr" target="#b65">[67]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>The notion of a flow is an important abstraction which underpins the development of QoS frameworks. Flows characterize the production, transmission and eventual consumption of a single media source (viz. audio, video, data) as integrated activities governed by single statements of endto-end QoS. Flows are simplex in nature and can be either unicast or multicast. Flows generally require end-to-end admission control and resource reservation, and support heterogeneous QoS demands.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>Note that QoS specification could also include other important areas such as security. However, we do not deal with security in this paper.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Parekh [56]  has shown that, if a source is shaped by a token bucket with leaky bucket rate control and scheduled by the weighted fair-queuing service discipline<ref type="bibr" target="#b57">[58]</ref>, it is possible to achieve strong guarantees on delay.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Report on the Workshop on Quality of Service Issues in High-Speed Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput Commun Rev</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="6" to="15" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Open Issues and Challenges in Providing Quality of Service Guarantees in High-Speed Networks</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Kurose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput Commun Rev</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="6" to="15" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Distributed Multimedia Applications and Quality of Service -A Survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vogel</surname></persName>
		</author>
		<author>
			<persName><surname>Bochinatin G Von</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Disallow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Geckos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kerherv</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-04">1994. April 1994</date>
			<publisher>IEEE Multimedia</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Quality of Service Research for Distributed Multimedia Applications</title>
		<author>
			<persName><forename type="first">I</forename><surname>Miloucheva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Pacific Workshop on Distributed Multimedia Systems</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A Proposed Flow Specification, Internet Request for Comments, No. 1363. Network Information Center</title>
		<author>
			<persName><forename type="first">C</forename><surname>Partridge</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990-09">1990. September 1990</date>
			<publisher>SRI International</publisher>
			<pubPlace>Menlo Park, Calif</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">End-to-end Arguments in Systems Design</title>
		<author>
			<persName><forename type="first">J</forename><surname>Saltzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans Comput Syst</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Layered Multiplexing Considered Harmful, Protocols for High-Speed Networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Tennenhouse</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>Elsevier</publisher>
			<pubPlace>North-Holland</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Architectural Consideration for a New Generation of Protocols</title>
		<author>
			<persName><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Tennenhouse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM&apos;90, Philadelphia</title>
		<meeting>ACM SIGCOMM&apos;90, Philadelphia<address><addrLine>Pa</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Adaptive QoS-based API for Networking</title>
		<author>
			<persName><forename type="first">V</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Siracusa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Hearn</surname></persName>
		</author>
		<author>
			<persName><surname>Ramamurthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Raychaudhuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fifth International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting><address><addrLine>Durham, New Hampshire</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1995. April 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On Tariffs, Policing and Admission Control for Multiservice Networks</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">P</forename><surname>Kelly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Multiservice Networks &apos;93, Cosener&apos;s House, Abingdon, July 1993, and Internal Report</title>
		<meeting>Multiservice Networks &apos;93, Cosener&apos;s House, Abingdon, July 1993, and Internal Report<address><addrLine>Cambridge, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
		<respStmt>
			<orgName>Statistical Laboratory</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Scheduling Algorithms for Multiprogramming in Hard Real Time Environment</title>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Layland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973">1973</date>
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Implications of Classical Scheduling Results for Real-Time Systems</title>
		<author>
			<persName><surname>Stankovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput (Special Issue on Scheduling and Real-Time Systems)</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">VAT: Visual Audio Tool</title>
		<author>
			<persName><forename type="first">V</forename><surname>Jacobson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1994. Feb 1993</date>
		</imprint>
	</monogr>
	<note>vat manual pages</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An Adaptive Congestion Control Scheme for Real Time Packet Video Transport</title>
		<author>
			<persName><forename type="first">H</forename><surname>Kanakia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Reibman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM&apos;93</title>
		<meeting>ACM SIGCOMM&apos;93<address><addrLine>San Francisco, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-10">1993. October 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An Architecture for Performance Management of Multimedia Networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Pacifici</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Stadler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IFIP/IEEE International Symposium on Integrated Network Management</title>
		<meeting>IFIP/IEEE International Symposium on Integrated Network Management<address><addrLine>Santa Barbara</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-06">1995. June 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The Desk Area Network</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hayter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mcaurely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Oper Syst Rev</title>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A Software-Oriented Approach to the Design of Media Processing Environments</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Tennenhouse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Adam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Carver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">H</forename><surname>Houh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ismert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Linblad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Stasior</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wetherall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE International Conference on Multimedia Computing and Systems</title>
		<meeting>IEEE International Conference on Multimedia Computing and Systems<address><addrLine>Boston, Mass</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Synchronisation Properties and Storage Models for Multimedia Objects</title>
		<author>
			<persName><forename type="first">Tdc</forename><surname>Little</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghafoor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="229" to="238" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Flow Synchronisation Protocol</title>
		<author>
			<persName><forename type="first">J</forename><surname>Escobar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Deutsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Partridge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE GLOBECOM&apos;92</title>
		<meeting><address><addrLine>Orlando, Fl.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-06">1992. June 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Quality of Service Management in Distributed Systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hutchison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Blair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Distributed Systems Management</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Sloman</surname></persName>
		</editor>
		<meeting><address><addrLine>Reading, Mass</addrLine></address></meeting>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="volume">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">ANSAware 3.0 Implementation Manual</title>
		<author>
			<persName><surname>Apm Ltd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">APM Ltd</title>
		<imprint>
			<date type="published" when="1991">1991</date>
			<pubPlace>Poseidon House, Castle Park, Cambridge CB3 0RD, UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Distributed Computing Environment. 11 Cambridge Center</title>
	</analytic>
	<monogr>
		<title level="m">Open Software Foundation</title>
		<meeting><address><addrLine>Cambridge, MA 02142, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">ODP Draft recommendations X.903: basic reference model of open distributed processing</title>
		<idno>ISO/IEC JTC1/SC21/WG7</idno>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>International Standards Organization</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Extensions to ANSA for Multimedia Computing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Blair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Davies</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Networks ISDN Syst</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="305" to="323" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">An Architecture for Real-Time Multimedia Communication Systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Nicolaou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Towards the Integration of Real-Time and QoS Handling in ANSA</title>
		<author>
			<persName><forename type="first">L</forename><surname>Hazard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Stefani</surname></persName>
		</author>
		<idno>CNET.RC.ARCADE.01</idno>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note type="report_type">CNET Report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">A Model of Real-Time QoS for ANSA</title>
		<author>
			<persName><surname>Guangxing</surname></persName>
		</author>
		<idno>APM.1151.00.04</idno>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>APM Ltd</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A Binding Architecture for Multimedia Networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bhonsle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Lim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of COST-237 Conference on Multimedia Transport and Teleservices</title>
		<meeting>COST-237 Conference on Multimedia Transport and Teleservices<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-11">1994. November 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Multimedia Synchronisation and UNIX</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Bulterman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Liere</surname></persName>
		</author>
		<author>
			<persName><surname>Van</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Second International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting>Second International Workshop on Network and Operating System Support for Digital Audio and Video<address><addrLine>Berlin Heidelberg New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Pegasus -Operating Systems Support for Distributed Multimedia Systems</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">M</forename><surname>Leslie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mcauely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Mullender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper Syst Rev</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Scheduling and IPC Mechanisms for Continuous Media</title>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thirteenth ACM Symposium on Operating Systems Principles, Asilomar Conference Center</title>
		<meeting><address><addrLine>Pacific Grove, California, SIGOPS</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="68" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The Real-Time Producer/Consumer Paradigm: A Paradigm for Construction of Efficient, Predictable Real-Time Systems</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jeffay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1993 ACM/SIGAPP Symposium on Applied Computing, Indianapolis</title>
		<meeting>1993 ACM/SIGAPP Symposium on Applied Computing, Indianapolis</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note>Ind</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Dynamic QoS Control Based on Real-Time Threads</title>
		<author>
			<persName><forename type="first">H</forename><surname>Tokuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kitayama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fourth International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting>Fourth International Workshop on Network and Operating System Support for Digital Audio and Video<address><addrLine>Lancaster LA1 4YR, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
		<respStmt>
			<orgName>Lancaster University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Design of a QoS Controlled ATM-Based Communication System in Chorus</title>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Robin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun (Special Issue on ATM LANs: Implementation and Experiences with Emerging Technology)</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A Rate-Based Execution Abstraction For Multimedia Computing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Jeffay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bennett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fifth International Workshop on Network and Operating Systems Support for Digital Audio and Video</title>
		<meeting>Fifth International Workshop on Network and Operating Systems Support for Digital Audio and Video<address><addrLine>Durham, NH</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-04">1995. April 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Danthine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Baguette</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Leduc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Leonard</surname></persName>
		</author>
		<title level="m">The OSI 95 Connection-Mode Transport Service -Enhanced QoS. In: 4th IFIP Conference on High-Performance Networking</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
		<respStmt>
			<orgName>University of Liège Belgium</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A Continuous Media Data Transport Service and Protocol for Real-time Communication in High-Speed Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wolfinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Moran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting><address><addrLine>Heidelberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
		<respStmt>
			<orgName>IBM ENC</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">A Framework of Architectural Concepts for High Speed Communication Systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Feldmeier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<pubPlace>Bellcore, Morristown</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Communication Research Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A Survey of Light-Weight Transport Protocols for High-speed Networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Doeringer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dykeman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaiserswerth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Meister</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Rudin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Williamson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans on Commun</title>
		<imprint>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">XTP/PE Overview</title>
		<author>
			<persName><forename type="first">G</forename><surname>Chesson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Conference on Local Computer Networks, Pladisson Plaza Hotel</title>
		<meeting>13th Conference on Local Computer Networks, Pladisson Plaza Hotel<address><addrLine>Minneapolis, Minn</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">NETBLT: A High-Throughput Transport Protocol</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Commun Rev</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Implementing HeiTS: Architecture and Implementation Strategy of the Heidelberg High-Speed Transport System</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Hehmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Herrtwich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Schuett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Steinmetz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting><address><addrLine>Heidelberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
		<respStmt>
			<orgName>IBM ENC</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">RTP: A Transport Protocol for Real-Time Applications</title>
		<author>
			<persName><forename type="first">H</forename><surname>Schulzrinne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Casner</surname></persName>
		</author>
		<ptr target="&lt;draft-ietf-avt-rtp-05.ps&gt;" />
	</analytic>
	<monogr>
		<title level="j">Work in Progress</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note>Internet Draft</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">A Continuous Media Transport and Orchestration Service</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hutchison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM &apos;92</title>
		<meeting>ACM SIGCOMM &apos;92<address><addrLine>Baltimore, Md</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-08">1992. August 1992</date>
			<biblScope unit="page" from="99" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Saran</surname></persName>
		</author>
		<ptr target="http://www.cs.att.com/csrc/keshav/nauers.html" />
		<title level="m">Semantics and Implementation of a Native-Mode ATM Protocol Stack. Bell Labs Technical Memorandum</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Experimental Internet Stream Protocol, Version 2 (ST-II)</title>
		<author>
			<persName><forename type="first">C</forename><surname>Topolcic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Internet Request for Comments No. 1190 RFC1190</title>
		<imprint>
			<date type="published" when="1990-10">1990. October</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM&apos;92</title>
		<meeting>ACM SIGCOMM&apos;92<address><addrLine>Baltimore, Md</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-08">1992. August 1992</date>
			<biblScope unit="page" from="14" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">RSVP Functional Specification</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note>Working Draft, draft-ietf-rsvp-spec-10.ps</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A Scheme for Real-Time Channel Establishment in Wide-Area Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ferrari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Verma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="368" to="377" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Client-Network Interactions in Quality of Service Communication Environments</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ferrari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ramaekers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Ventre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 4th IFIP Conference on High Performance Networking</title>
		<meeting>4th IFIP Conference on High Performance Networking</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
		<respStmt>
			<orgName>University of Liège Belgium</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">The Real-Time Channel Administration Protocol</title>
		<author>
			<persName><forename type="first">A</forename><surname>Benerjea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Mah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second International Workshop on Network and Operating System Support for Digital Audio and Video</title>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Comparison of Rate-Based Service Disciplines</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>ACM SIGCOMM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<author>
			<persName><surname>Forum</surname></persName>
		</author>
		<title level="m">ATM User-Network Interface Specifications, Version 4.0, ATM Forum</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">A Scheduling Service Model and a Scheduling Architecture for an Integrated Service Packet Network</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note>Working Draft available via anonymous ftp from parcftp.xerox.com: /transient/service-model.ps.Z</note>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">A Model for Flexible High-Performance Communication Subsystems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Zitterbart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Stiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Tantawy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A Generalised Processor Sharing Approach to Flow Control in Integrated Service Networks -The Multiple Node Case</title>
		<author>
			<persName><forename type="first">A</forename><surname>Parekh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Gallagher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM&apos;93</title>
		<meeting>IEEE INFOCOM&apos;93<address><addrLine>San Francisco, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-04">1993. April 1993</date>
			<biblScope unit="page" from="521" to="530" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">A Stop and Go Queueing Framework for Congestion Management</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Golestani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM&apos;90</title>
		<meeting>ACM SIGCOMM&apos;90<address><addrLine>San Francisco, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">On the Efficient Implementation of Fair Queueing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Keshav</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internetworking: Research and Experiences</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="157" to="173" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Equivalent Capacity and its Application to Bandwidth Allocation in High-Speed Networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Guerin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ahmadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naghshineh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">A Calculus for Network Delay: Part I: Network Elements in Isolation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cruz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Inform Theory</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Real-Time Scheduling with Quality of Service Constraints</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hyman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pacifici</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J Sel Areas Commun</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">R</forename><surname>Braden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<idno>RFC-1633</idno>
	</analytic>
	<monogr>
		<title level="j">Internet Architecture: an Overview. Request for Comments</title>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
	<note>Integrated Services in the</note>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<title level="m" type="main">Link-Sharing and Resource Management Models for Packet Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Floyd</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993-09">1993. September 1993</date>
		</imprint>
	</monogr>
	<note>Draft available via anonymous ftp from ftp.ee.lbl.gov: link.ps.Z</note>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Comput Networks ISDN Syst 65. Dabbous W, Diot C (1995) High Performance Protocol Architectures</title>
		<author>
			<persName><forename type="first">R</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Congestion Control and Traffic Management in ATM Networks: Recent Advances and a Survey</title>
		<meeting><address><addrLine>Sophia Antipolis, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<title level="m" type="main">ATM-Soft: A Mini-Proposal for ATM Network Control Using Soft State</title>
		<author>
			<persName><forename type="first">J</forename><surname>Turner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<pubPlace>Washington University</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Note</note>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">ISO Quality of Service Framework</title>
		<idno>ISO/IEC JTC1/SC21/WG1 N9680</idno>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>International Standards Organization</publisher>
			<pubPlace>UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Integrated Quality of Service for Multimedia Communications</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Garc Ía</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hutchison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leopold</forename><forename type="middle">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM&apos;93</title>
		<meeting>IEEE INFOCOM&apos;93<address><addrLine>San Francisco, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993-04">1993. April 1993</date>
			<biblScope unit="page" from="732" to="739" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">A Real-time Control, Management, Information Transport Architecture for Broadband Networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Zurich Seminar on Digital Communications</title>
		<meeting>International Zurich Seminar on Digital Communications</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="281" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<monogr>
		<title level="m" type="main">Design, Implementation and Experiences of the OMEGA End-Point Architecture</title>
		<author>
			<persName><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Smith</surname></persName>
		</author>
		<idno>(MS-CIS- 95-22</idno>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>University of Pennsylvania</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">HeiRAT -Quality of Service Management for Distributed Multimedia Systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Volg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wolf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Herrtwich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wittig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multimedia Syst J</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title level="m" type="main">Efficient Quality of Service in Multimedia Computer Operating Systems. Department of computer science</title>
		<author>
			<persName><forename type="first">G</forename><surname>Gopalakrishna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Parulkar</surname></persName>
		</author>
		<idno>WUCS-TM-94-04</idno>
		<imprint>
			<date type="published" when="1994-08">1994. August 1994</date>
		</imprint>
		<respStmt>
			<orgName>Washington University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b71">
	<analytic>
		<title level="a" type="main">Challenges in Multimedia Networking</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Hi-Tech Forum</title>
		<meeting>International Hi-Tech Forum<address><addrLine>Osaka, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">A Quality of Service Architecture</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hutchison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput Communic Rev</title>
		<imprint>
			<date type="published" when="1994-04">1994. April 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<monogr>
		<title level="m" type="main">The Common Object Request Broker: Architecture &amp; Specification</title>
		<author>
			<persName><surname>Omg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993-12-03">1993. Rev 1.3. December 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Tina-C</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1995-06">1995. June 1995</date>
		</imprint>
	</monogr>
	<note type="report_type">The QoS Framework. Internal Technical Report</note>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Towards an Architecture for Distributed Multimedia Application Support</title>
		<author>
			<persName><forename type="first">L</forename><surname>Besse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Dairaine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Fedaoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tawbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Thai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Conference on Multimedia Computing and Systems</title>
		<meeting>International Conference on Multimedia Computing and Systems<address><addrLine>Boston, Mass</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<monogr>
		<title level="m" type="main">Quality of Service in Distributed Systems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Sluman</surname></persName>
		</author>
		<idno>BSI/IST21/-/1/5:33</idno>
		<imprint>
			<date type="published" when="1991-10">1991. October 1991</date>
			<publisher>British Standards Institution</publisher>
			<pubPlace>UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<monogr>
		<title level="m" type="main">Network Element Specification Template</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wroclawski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995-06">June 1995</date>
		</imprint>
	</monogr>
	<note>Internet Draft</note>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
		<ptr target="ftp://mercury.lcs.mit.edu/pub/intserv" />
		<title level="m">Slides from IETF meeting 31</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
	<note>Integrated Service Working Group</note>
</biblStruct>

<biblStruct xml:id="b79">
	<analytic>
		<title level="a" type="main">A Real-time Upcall Facility for Protocol Processing with QoS Guarantees</title>
		<author>
			<persName><forename type="first">G</forename><surname>Gopalakrishna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Parulkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th ACM Symposium on Operating Systems Principles</title>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="page">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Joint Scheduling and Admission Control</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hyman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pacifici</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGCOMM &apos;92</title>
		<meeting>ACM SIGCOMM &apos;92<address><addrLine>Baltimore, Md</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-08">1992. August 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<analytic>
		<title level="a" type="main">Multimedia Networking Abstraction with Quality of Services Guarantees</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Lazar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">H</forename><surname>Ngoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sahai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE Conference on Multimedia Computing and Networking</title>
		<meeting>SPIE Conference on Multimedia Computing and Networking<address><addrLine>San Jose, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">The Tenet Experience and the Design of Protocols for Integrated Services Internetworks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ferrari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multimedia Syst J</title>
		<imprint>
			<date type="published" when="1996-05">1996. May 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Media Scaling for Audiovisual Communication with the Heidelberg Transport System</title>
		<author>
			<persName><forename type="first">L</forename><surname>Delgrossi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Halstrinck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Hehmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Herrtwich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sandvoss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Vogt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Multimedia &apos;93</title>
		<meeting>ACM Multimedia &apos;93<address><addrLine>Anaheim, Calif</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Transporting QoS Adaptive Flows</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Coulson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multimedia Syst J</title>
		<imprint>
			<date type="published" when="1996-04">1996. April 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">SRP: A Resource Reservation Protocol for Guaranteed Performance Communication in the Internet</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G</forename><surname>Herrtwich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schaefer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internal Report</title>
		<imprint>
			<date type="published" when="1991">1991</date>
		</imprint>
		<respStmt>
			<orgName>University of California at Berkeley, Calif</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Smith</surname></persName>
		</author>
		<title level="m">The QoS Broker. IEEE Multimedia</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">On QoS Negotiation in Distributed Multimedia Application</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vogel</surname></persName>
		</author>
		<author>
			<persName><surname>Bochmann G Von</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Dssouli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gecsei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hafid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kerherve</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Protocol for High-Speed Networks</title>
		<meeting>Protocol for High-Speed Networks</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">QoS Adaptation and Flow Filtering in ATM Networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Yeadon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hutchison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second International Workshop on Advanced Teleservices and High Speed Communication Architectures</title>
		<meeting><address><addrLine>Heidelberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<title level="m">Making Multimedia Networks Programmable Workshop on Gigabit Network Technology Distribution</title>
		<meeting><address><addrLine>St. Louis, Mo</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>Washington University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
