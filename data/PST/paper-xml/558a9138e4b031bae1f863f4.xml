<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A 100-MHz, 16-b, Direct Digital Frequency Synthesizer with a 100-dBc Spurious-Free Dynamic Range</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Avanindra</forename><surname>Madisetti</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Alan</forename><forename type="middle">Y</forename><surname>Kwentus</surname></persName>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Alan</forename><forename type="middle">N</forename><surname>Willson</surname><genName>Jr</genName></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<address>
									<postCode>92618</postCode>
									<settlement>Irvine</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">is with Pentomics, Inc</orgName>
								<address>
									<postCode>91107</postCode>
									<settlement>Pasadena</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>90095</postCode>
									<settlement>Los Angeles</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A 100-MHz, 16-b, Direct Digital Frequency Synthesizer with a 100-dBc Spurious-Free Dynamic Range</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7F3EF5C57DD6746F4F861BFFEBE55D7E</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:23+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CMOS integrated circuit design</term>
					<term>direct digital synthesizers</term>
					<term>frequency synthesizers</term>
					<term>very large-scale integration (VLSI) for digital communications</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper describes the architecture and the IC implementation of a direct digital frequency synthesizer (DDFS) that is based on an angle rotation algorithm (similar to CORDIC). It is shown that the architecture can be implemented as a multiplierless, feedforward, and easily pipelineable datapath. A prototype IC has been designed, fabricated in 1.0-m CMOS, and tested. The IC produces 16-b sine and cosine outputs with a spurious-free dynamic range of more than 100 dBc. A 36-b frequency control word gives a tuning resolution of 0.0015 Hz at a 100-MHz sampling rate.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>D IRECT digital frequency synthesis (DDFS) systems [1]   are characterized by fast switching, fine frequency discrimination, low phase noise, and transient-free frequency changes. Frequency changes are phase continuous, which is desirable in phase or frequency modulation. The fast frequency switching is useful in frequency-agile and spread-spectrum systems. Depending on the particular application, there exist tradeoffs among the power, IC area, size, and spectral purity of the implementation. For example, output resolution and spectral purity are of primary importance in instrumentation applications. Area and power are of considerable importance for digital mobile radio and cellular telephony. Simple modifications to the phase generation circuitry produces synthesized chirps useful in radar and electronic warfare systems and in the implementation of continuous-phase modulators (e.g., GMSK).</p><p>A DDFS consists of a phase accumulator and a sine/cosine generator, as shown in the shaded portion of Fig. <ref type="figure" target="#fig_0">1</ref>. The phase accumulator is an overflowing -bit accumulator whose value specifies the instantaneous phase. The -bit value may be truncated to another -bit value, which is fed as the argument to a sine/cosine generator that computes the digital and values to a precision of bits. The digital sine and cosine values are subsequently converted to their analog values by a digital-to-analog converter (DAC) and then low-pass filtered (LPF) to remove all unwanted frequency components. The terminology associated with a DDFS is reviewed below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Output Frequency</head><p>In Fig. <ref type="figure" target="#fig_0">1</ref>, denotes an external input to the phase accumulator called the "frequency control word." At each clock cycle (clock frequency ), the phase accumulator increments itself by the value until it overflows and wraps around. Each overflow of the accumulator corresponds to one period of a sine (or cosine) wave. Thus, controls the rate at which the accumulator overflows, thereby controlling the frequency of the sine or cosine waveform.</p><p>The value of the -bit accumulator represents a signed fractional number in the interval <ref type="bibr" target="#b0">[ 1,</ref><ref type="bibr" target="#b0">1]</ref>. This value is mapped to an angle (or phase value) in the interval [ ]. The output frequency <ref type="bibr" target="#b1">[2]</ref> can be calculated as</p><p>. By the Nyquist theorem, since at least two samples are required per clock cycle, the largest value to which can be assigned is 2 , and therefore the maximum output frequency is limited to . In practice, however, the output frequency is usually constrained to be less than because the digital sine and cosine values are usually fed to a DAC, as shown in Fig. <ref type="figure" target="#fig_0">1</ref>. The spectrum of the DAC's output signal has images at frequencies given by , where is an integer, as shown in Fig. <ref type="figure">2(a)</ref>. The frequency spacing between the output frequency and the closest image frequency is given by . An LPF is used to provide image rejection with its passband and stopband as shown in Fig. <ref type="figure">2(b</ref>). The output frequency determines the LPF's passband edge, and the closest image frequency determines its stopband edge. Thus, as the output frequency moves closer to the maximum frequency , the first aliased image also moves closer to . This results in a narrower transition band. The complexity of the low-pass filter is determined by the width of the transition band. Therefore, in order to keep the LPF simple, as a rule of thumb, the output frequency is usually constrained to be less than .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Bandwidth</head><p>The bandwidth of a DDFS is defined as the difference between the highest and lowest attainable output frequencies. The highest frequency is determined by the maximum attainable clock frequency or the speed of the available logic circuitry. The lowest frequency is determined by the smallest value of the frequency control word (usually zero).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Frequency Resolution</head><p>The word length of the phase accumulator determines the frequency discrimination, or frequency resolution, of the frequency synthesizer. It is the smallest increment (typically a fraction of 1 Hz) by which the output frequency can be tuned. In other words, it is the change in the output frequency obtained by changing the frequency control word by one least significant bit (LSB). It is given by .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Spurious-Free Dynamic Range (SFDR)</head><p>SFDR is defined as the ratio of the amplitude of the desired frequency component to that of the largest undesired frequency component at the output of a DDFS. It is usually expressed in decibels: SFDR , where is the amplitude of the desired frequency component and is the amplitude of the largest undesired frequency component, as shown in Fig. <ref type="figure">3</ref>. An undesired (spurious) frequency component is often called a spur. Spurs are introduced into the output spectrum by amplitude quantization and phase quantization.</p><p>The upper bound on spurs caused by amplitude or phase quantization can be shown to exhibit a 6-dB/bit behavior. Detailed analyses of spurious performance can be found in <ref type="bibr" target="#b1">[2]</ref>- <ref type="bibr" target="#b5">[5]</ref>.</p><p>Most practical DDFS designs reported during the last two decades rely on some variant of the basic pioneering tablelookup algorithm that originated in <ref type="bibr" target="#b0">[1]</ref>, wherein the phase accumulator provides an address to a ROM lookup table that stores the and values. To keep the size of the ROM manageable, the output of the phase accumulator is truncated from an -bit word to an -bit word such that the size of the ROM is 2 words. This truncation, however, results in a phase error and introduces spurious frequency components into the output frequency spectrum. The amplitude of the worst case spur depends on the number of bits used to address the ROM and, to a first approximation, is given by 6 dB. With each increasing address bit, the size of the ROM doubles. Moreover, large ROM tables become difficult to access at high clock rates. Thus, much research has focused on trying to reduce the size of the ROM while maintaining spectral purity.</p><p>One technique to reduce the size of the ROM table exploits the quarter-wave symmetry in the sine and cosine values. Additionally, since the sine samples for angles from zero to are the same as the cosine samples for angles from to , one need only store the sine and cosine samples for angles from zero to in the case of a quadrature DDFS. Thus, the quadrature outputs can be obtained with the same size ROM as would be required for a sine-only ROM.</p><p>The approach used in <ref type="bibr" target="#b1">[2]</ref> and <ref type="bibr" target="#b2">[3]</ref> employs coarse and fine ROM's in which the most significant bits (MSB's) of the phase word are used to access the coarse ROM and the LSB's are used to access the fine ROM, which adds a correction to the coarse ROM value. The grouping of the phase word into MSB's and LSB's and the contents of the ROM's have to be carefully optimized in order to meet the spectral purity requirements <ref type="bibr" target="#b2">[3]</ref>. For example, the DDFS design of <ref type="bibr" target="#b1">[2]</ref> uses the coarse/fine ROM approach and achieves an 80-90-dB SFDR using a 15-b address to the ROM lookup table.</p><p>Recursive oscillator structures <ref type="bibr" target="#b6">[6]</ref> that simultaneously generate sine and cosine values have been proposed as an alternative to table-lookup methods. However, these implementations are plagued with accuracy problems and need to be reinitialized frequently.</p><p>One of our main objectives is to describe an approach [14] that will permit the implementation of high-speed DDFS designs with high-precision spectrally pure sine and cosine outputs. As a result, simple tradeoffs among the power, IC area, sample rate, resolution, and spectral purity of the implementation can be performed. Our approach is based on an architecture that evaluates the projections of a phasor rotating on the unit circle onto the and axes in a manner very similar to, but simpler than, the CORDIC algorithm <ref type="bibr" target="#b7">[7]</ref>, <ref type="bibr" target="#b8">[8]</ref>. It is not based on a table-lookup architecture. It will be shown that the overall architecture can be implemented as a simple multiplierless feed-forward datapath (and one simple hardwired scaling multiplier in the "radian converter"), which allows for easy pipelining and limits the accumulation of roundoff errors. A prototype DDFS IC has been designed, fabricated in 1-m CMOS, and tested <ref type="bibr" target="#b9">[9]</ref>. The IC produces 16-b sine and cosine outputs with an SFDR greater than 100 dBc and a tuning resolution of 0.0015 Hz at a sample rate of 100 MHz. This paper is organized as follows. A simplified anglerotation technique and its application to the generation of sines and cosines is described in Section II. The architecture is described in Section III. Some implementational issues in the design of the prototype IC are discussed in Section IV.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. SINE/COSINE GENERATION</head><p>Let us consider the computation of the sine and cosine of an angle specified in radians, where 0 4. For the given angle , the computation of and can be viewed as the computation of the -axis and the -axis coordinates ) of a point on the unit circle, as shown in Fig. <ref type="figure" target="#fig_2">4(a)</ref>. This point can be located by rotating a phasor counterclockwise from an initial position coincident with the -axis through the angle . In principle, and can be computed from the initial point by the equation Of course, this equation cannot be implemented directly since the and coefficients are themselves the variables to be determined. However, if the rotation can be decomposed into a sequence of subrotations, as shown in Fig. <ref type="figure" target="#fig_2">4(b)</ref>, and if the magnitudes of the subrotations (but not their directions) are known a priori, then the above equation can be implemented. For example, if the arbitrary angle can be represented as , where and the are known, fixed angles, the rotation by can be rewritten as with being a scale factor. If takes on the value 1 (or 1), a positive (or negative) rotation by the angle is performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The CORDIC Algorithm</head><p>A well-known iterative technique <ref type="bibr" target="#b7">[7]</ref> for computing angle rotations with directions of rotation is the CORDIC algorithm. In the CORDIC algorithm, and atan . Since , the multiplication by in the above equation can be implemented as a simple shiftand-add operation, resulting in a multiplierless datapath. Since , the product becomes a constant, independent of the specific directions of the subrotations. (This is true as long as a positive or negative subrotation is actually performed at each iteration.) Usually, the scale factor is simply introduced into the initial conditions as . The values determine whether a positive or negative subrotation by an angle is required. The values are determined iteratively by the method of successive approximation. If, at the th iteration, the current approximation is larger (smaller) than the input angle , its value is adjusted by subtracting (adding) the angle . The CORDIC algorithm requires hardware that a) computes and updates the current approximation by the angle and b) performs the rotation by . Roughly one-third of the total CORDIC hardware is required for computing the and updating the current approximation.</p><p>The throughput of the CORDIC datapath can be improved by using redundant carry-save arithmetic, which eliminates the carry-propagate delay in the adders. However, the evaluation of each requires a knowledge of the sign of the difference between two angles at each iteration. Detection of the sign in redundant arithmetic is nontrivial and presents a bottleneck for high-speed CORDIC implementations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Angle Recoding</head><p>Consider an arbitrary positive angle ( 1 rad), which can be represented as . The are the bits corresponding to the -bit fractional binary representation of the angle (sign bit and fractional bits) and the are the positional power-of-two weights. In other words, and . Since the angle is constrained to be positive, does not appear in the above summation. The binary can be recoded into signed digits such that where is a constant. The recoding can be understood intuitively if we visualize a positive subrotation by 2 rad as the sum of two equal positive half rotations by 2 rad and a zero rotation as two equal but opposite half-rotations by 2 rad. It is quite easy to see from the binary representation of the angle that a binary bit results in a rotation by 2 rad, whereas a results in a zero rotation. Thus, the th subrotation stage consists of a fixed rotation by 2 rad followed by a positive or negative rotation by 2 rad that is controlled by the bit . Combining all the fixed rotations, we obtain the initial fixed rotation rad. Thus, the rotation after recoding can be represented as a fixed initial rotation followed by a sequence of positive or negative rotations whose directions are controlled by the binary bits . A bit corresponds to a positive (or counterclockwise) rotation by 2 rad, and a bit corresponds to a negative (or clockwise) rotation by 2 rad. Thus, for . The recoding need not be performed explicitly since it corresponds to simply replacing all "0" values in the binary representation by " 1."</p><p>The recoding maintains a constant scale factor in the datapath. The scaling by and the initial rotation by are most efficiently accounted for in the implementation by starting each sequence of angle rotations from the initial point . Because the rotations always start from the fixed point, the computational sequence consists of a cascade of feedforward rotational stages. The desired output precision in bits determines the number of stages. By always starting the sequence of rotations from a fixed point, the algorithm does not suffer from an error buildup such as that which limits the accuracy of most recursive digital oscillator structures.</p><p>One of the major benefits of recoding over CORDIC is that the direction of rotation at each stage is immediately obtained from the binary representation of the angle , thereby eliminating the need for comparing angles at each stage. This is possible because the subangles used in recoding are different from the subangles atan used in CORDIC. The penalty for using different subangles is that the multipliers used in the first few subrotation stages cannot be implemented as simple shift-and-add operations. However, as will be shown subsequently, this limitation can be overcome by implementing these stages as a small ROM. Thus, recoding results in reduced chip area and higher operating speed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. ARCHITECTURE</head><p>For frequency synthesis, the argument fed to the sine and cosine generators is derived from an overflowing two'scomplement accumulator. The contents of this accumulator represent a signed, normalized-by-angle in the interval <ref type="bibr" target="#b0">[ 1,</ref><ref type="bibr" target="#b0">1]</ref>. However, the sequence of rotations described in the above equations requires the binary representation of an angle measured in radians. Therefore, the normalized angle must be converted to an appropriate radian value in the interval [0, 4] which is input to the sine/cosine generator. Since is less than 1 rad, the binary bits representing the angle control the directions of the subrotations that compute the and values to a precision of bits. An output stage is required to generate the correct and from the computed and values. Thus, the overall architecture consists of the following blocks:</p><p>1) a phase accumulator that generates the normalized angle in the interval [ 1, 1]; 2) a radian converter that performs the mapping ; 3) a sine/cosine generator that computes and ; 4) an output stage that converts and to and . </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Phase Accumulator</head><p>The phase accumulator, shown in Fig. <ref type="figure">5</ref>, is an -bit adder that repeatedly increments the phase angle by an amount . That is, its output increases by at each clock cycle. At time , the output of the phase accumulator is , and the sine/cosine generator must compute and . The frequency control word can be supplied to the chip in a bit-serial or parallel fashion. It is usually produced by offchip circuitry that is asynchronous with the on-chip clock and is synchronized by use of on-chip registers. A load control signal loads the frequency control word, and a reset signal initializes the contents of the phase accumulator to zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Radian Converter</head><p>The two most significant bits of the normalized angle , MSB and MSB , determine the quadrant occupied by . The third most significant bit MSB determines whether this angle is in the upper or lower half of the quadrant. These three most significant bits are stored and used later to control an interchange/negation operation in the output stage.</p><p>The value of is first modified by setting its two most significant bits to zero. This maps any angle in the normalized second, third, or fourth quadrants to a corresponding angle in the first quadrant, as shown in Fig. <ref type="figure">6(a)</ref>. This angle lies in the upper half of the quadrant whenever MSB . The sine and cosine of any angle above 4 can be obtained from those of an angle equally below 4, as shown in Fig. <ref type="figure">6(b</ref>    The multiplication by is performed by a hardwired multiplier; the product is a positive angle in radians such that 0 4. The multiplication by is unique to this architecture and is not performed for table-lookup DDFS architectures (where the multiplication by is implicit in the table's structure). For CORDIC-based architectures, the elementary angles are, in effect, divided by such that atan . Since the directions of the subrotations are controlled only by the sign of the difference between two angles (and not the magnitude), the multiplication by is not required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Sine/Cosine Generator</head><p>The sequence of subrotations expressed as can be implemented by the butterfly shown in Fig. <ref type="figure" target="#fig_4">7</ref>.</p><p>For an -bit output resolution, the sine/cosine generator datapath consists of a cascade butterflies, each implementing a negative subrotation by a fixed angle rad. The datapath architecture is shown in Fig. <ref type="figure" target="#fig_5">8</ref>. The IC layout for each butterfly must be carefully optimized to minimize the IC area while achieving the target speed specification, particularly since any savings in area is multiplied -fold.</p><p>Since the inputs to the th butterfly are multiplied by , the optimization of this multiplier is of particular importance. Since is a power of two, the implementation of can be simplified by employing the approximation for sufficiently small (i.e., for sufficiently large ). This reduces the multiplication to a simple shift operation by a fixed number of bits ( ). This approximation causes no loss of accuracy in the representation so long as is sufficiently small that the difference is smaller than the finite-precision limits of the datapath. More precisely, given a -bit internal datapath word length, we have to full precision for all . This means that for all butterfly stages with , the computations reduce to a pair of -bit shift-and-add operations. This fact is made evident by employing the Taylor series expansion . For , . Table <ref type="table" target="#tab_1">I</ref> shows, for example, that for a 22-b (</p><p>) datapath word length, the values of 2 and 2 are indistinguishable for . The initial values for the first butterfly are always the same. Therefore, the first butterflies can be merged together and implemented as a 2 -word ROM. This avoids the implementing of any of the multipliers. The address word fed to the ROM is , which accesses and . Since all computed angles lie in the interval [0, 4], all angle rotations are performed in the first quadrant. Therefore, the and values computed by each butterfly are always positive. This has the important architectural consequence that no sign extensions are ever needed by the 2 shifts, thereby reducing the load on the MSB's at each stage, facilitating high-speed operation.</p><p>1) Merging Butterflies: It is also possible to merge final butterflies such that and can be obtained directly from and as follows:</p><p>This merging is valid for all . The inequality is implicitly assumed, which ensures that to full precision of the datapath (this assumption is valid for all word lengths</p><p>). This "lookahead by " property is useful because it allows the individual terms in the summation to be computed independently and summed in parallel, as shown in Fig. <ref type="figure" target="#fig_6">9</ref>. As a consequence, the implicit latency in the butterfly, requiring to be computed   before can be computed, is avoided. One benefit of the parallelization is that it results in a reduced latency. Additionally, a reduction in routing occurs, which can result in some savings in IC area. Another benefit arises in situations where only a single-ended output (only sine or cosine) is required, in which case one merged-butterfly structure can be omitted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Output Stage</head><p>The output stage, shown in Fig. <ref type="figure" target="#fig_7">10</ref>  <ref type="table" target="#tab_2">II</ref>. The negation is assumed to occur before the interchange. Since the control signals are generated from , they must be suitably delayed until the and values are computed. This delay is determined by the latency of the sine/cosine-generating datapath and can be implemented as a simple shift-register chain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. IC IMPLEMENTATION</head><p>A clock rate of 100 MHz, a 36-bit phase accumulator, and sine and cosine outputs with 16-b precision were chosen as the target IC specifications. The target specifications were chosen such that our implementation would have the highest clock rate, the most precise sine and cosine outputs, and the finest tuning resolution for the given technology. The 16-b design parameter was also chosen to emphasize our architecture's advantage over traditional ROM lookup-table approaches.</p><p>To achieve a 100-MHz sample rate, the 36-b phase accumulator was partitioned into 22-and 14-b carry-select-adder sections. This partitioning was motivated by speed and layout considerations. The 36-b output of the phase accumulator was truncated to 22 bits. A 22-b internal word length in the radian converter ( 4 multiplier) results in an SFDR of greater than 100 dBc. A ROM-lookup-table architecture would need a 19-b ROM address to achieve similar performance, and this would correspond to a rather huge 2 -word ROM (which could, of course, be made smaller, to some degree, by the use of coarse/fine architectures as described in <ref type="bibr" target="#b1">[2]</ref>).</p><p>The three most significant bits MSB are extracted from the truncated phase accumulator and used to control the conditional interchange/negation operations in the output stage. The residual angle with its three most-significant bits set to zero represents the normalized angle , which is fed to the radian converter. The radian converter computes as (so that all internal angles can be represented as fractional binary two's-complement numbers). The multiply by four is trivially accomplished by a two-bit shift-left operation.</p><p>For a 16-b output resolution, simulations indicate that 4 can be represented by five nonzero bits:</p><p>. Thus, the implementation of the hardwired multiplier requires only five partial products and is shown in Fig. <ref type="figure" target="#fig_8">11</ref>.</p><p>The 22-b output of this radian converter is truncated to 16 b to represent . The 16 bits are suitably delayed to control the subrotations performed by the butterflies in the sine/cosine generator. The first four bits are used to address the initial ROM. The remaining 12 bits control the subrotation stages. The overall architecture is shown in Fig. <ref type="figure" target="#fig_9">12</ref>.</p><p>Since our prototype IC produces 16-b sine and cosine outputs, the datapath consists of a cascade of 16 butterfly stages. Worst case calculations and simulations indicate that using a 22-b internal word length avoids the propagation of truncation errors to the outputs (see Fig. <ref type="figure" target="#fig_11">13</ref>). Simulations also indicate that 16-b accuracy can be retained on the sine and cosine outputs while retaining the approximation for all stages beyond Stage 4. Thus, the first four butterflies have been implemented as a 16-word ROM, and therefore all stages are multiplierless. The contents of the ROM that stores the initial and coordinates are shown in Table <ref type="table" target="#tab_3">III</ref>. The addresses 1101, 1110, and 1111 are invalid since they correspond to angles larger than 4; that is, a 13-word ROM is sufficient. The error in the use of 2 to approximate 2 (see Table <ref type="table" target="#tab_1">I</ref>) occurs in the twentyfirst bit in the implementation of the "multipliers" in the      These stages were implemented using carry-save adders that were merged together into a carry-save-adder tree with three pipeline registers. Its critical path consists of one XOR gate and two one-bit full adders between registers. Its 22-b carryand-sum outputs are merged together to produce the and outputs. Our prototype IC was designed using the Mentor Graphics GDT computer-aided design tools and fabricated through MOSIS in a double-metal, 1.0-m CMOS N-well process. The IC core contains 58 000 transistors in an area of 12 mm ; it produces 16-b sine and cosine outputs. The chip operates from a nominal 5-V power supply. The tuning resolution has been determined to be 0.0015 Hz at a 100-MHz clock frequency. The chip micrograph is shown in Fig. <ref type="figure" target="#fig_12">14</ref>, and a fast Fourier transform of the chip's output for a frequency of is shown in Fig. <ref type="figure" target="#fig_13">15</ref>.</p><p>Our IC testing using the Tektronix LV500 IC tester and a custom board has found the chip to be fully functional. The most significant bits of the sine and cosine outputs at a 100-MHz clock rate are shown in Fig. <ref type="figure" target="#fig_14">16</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>The architecture and IC design of a high-speed CMOS direct digital frequency synthesizer have been described. Instead of table lookup, it uses a simplified angle-rotation algorithm implemented as a multiplierless feed-forward datapath that allows easy pipelining and limits the accumulation of roundoff errors. The modular architecture permits outputs of arbitrary precision by simply cascading enough angle-rotation stages in the datapath. (Some increase in word width, and related architectural implications, would of course also accompany this increase in precision.) The chip has been fabricated and tested to be functional at a clock rate of 100 MHz. The prototype DDFS IC produces 16-b sinusoids with a spuriousfree dynamic range of 100 dBc at a sample rate of 100 MHz. The chip characteristics are summarized in Table <ref type="table" target="#tab_1">IV</ref>.</p><p>The architecture that we have described is quite flexible. While we have given an illustration of its capability to achieve high clock rates and excellent SFDR values, it is also capable of being optimized in other directions. For example, a version of this architecture in which low (much lower) power dissipation was a desirable feature has been employed in a commercial product <ref type="bibr" target="#b10">[10]</ref>. It is readily apparent that one can reduce die area by eliminating pipelining stages if speed is not an issue. Even though ours was a quick prototype design with standard library cells, our chip's performance compares favorably with the DDFS of <ref type="bibr" target="#b1">[2]</ref> and to other currently available commercial IC's <ref type="bibr" target="#b11">[11]</ref>- <ref type="bibr" target="#b13">[13]</ref>. Table V provides information on these comparisons.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Traditional DDFS architecture.</figDesc><graphic coords="1,307.32,197.64,248.64,58.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .Fig. 3 .</head><label>23</label><figDesc>Fig. 2. (a) Spectrum at output of DAC. (b) Frequency response of low-pass filter.</figDesc><graphic coords="2,86.94,217.08,163.20,114.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. (a) Rotation by in Cartesian coordinates. (b) Rotation decomposed into several smaller subrotations.</figDesc><graphic coords="3,45.18,59.58,246.72,84.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Phase accumulator.</figDesc><graphic coords="4,339.24,59.58,184.80,110.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. (a) Butterfly unit for computing subrotations. (b) Symbolic representation of butterfly.</figDesc><graphic coords="5,149.58,55.02,300.96,89.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Datapath architecture consisting of a cascade of N butterflies controlled by the binary representation of the angle . Here, the first four butterflies can be merged into a 16-word ROM.</figDesc><graphic coords="5,138.54,184.92,323.04,118.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Merged butterflies: carry-save-adder implementation (right shift by k bits is denoted by k).</figDesc><graphic coords="6,129.90,54.96,340.32,144.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Output stage for mapping the computed sin and cos values to the corresponding sin and cos .</figDesc><graphic coords="6,325.02,234.96,213.12,110.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Implementation of the =4 multiplier (right shift by k bits is denoted by k).</figDesc><graphic coords="6,316.38,544.26,230.40,123.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Overall architecture of prototype 16-b frequency synthesizer.</figDesc><graphic coords="7,139.92,54.96,320.40,184.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>, maps the computed and values to the desired and values, where lies in the correct interval within [ ]. As mentioned previously, this can be accomplished by simple negation and/or interchange operations. The control signals xinvert and yinvert control the negation of and , respectively, and the control signal controls the interchange. The control signals, derived from the three most significant bits of the normalized angle , are generated as shown in Table</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. DDFS output resolution versus datapath word length.</figDesc><graphic coords="8,42.30,59.58,252.48,155.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Chip micrograph of prototype IC.</figDesc><graphic coords="8,59.52,484.49,218.20,131.89" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Digital output spectrum for F o = F clk =4.</figDesc><graphic coords="8,44.22,278.64,248.64,177.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Speed testing: MSB and LSB waveforms of sine and cosine at 100 MHz.</figDesc><graphic coords="8,308.10,229.20,246.96,322.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I APPROXIMATING</head><label>I</label><figDesc></figDesc><table /><note><p>tan k BY k</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II CONTROL</head><label>II</label><figDesc>SIGNALS FOR THE OUTPUT STAGE</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE III CONTENTS</head><label>III</label><figDesc>OF THE ROM</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE IV PERFORMANCE SUMMARY TABLE V COMPARISON</head><label>IVSUMMARYV</label><figDesc>OF PERFORMANCE</figDesc><table /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>From 1989 to 1996, he was with TRW, Redondo Beach, CA, where he worked on the design of satellite communication systems. He is currently a Staff Scientist with Broadcom Corp., Irvine, CA, where he works on the design of high-performance signal-processing and communication systems. His research interests include VLSI circuit design, architectures, and algorithms for high-performance digital signal processing; and communication systems. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A digital frequency synthesizer</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tierney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Rader</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Audio Electroacoust</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="48" to="56" />
			<date type="published" when="1971-03">Mar. 1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A 150 MHz direct digital frequency synthesizer in 1.25-m CMOS with 090 dBc spurious performance</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Nicholas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Samueli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Solid-State Circuits</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1959" to="1969" />
			<date type="published" when="1991-12">Dec. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An analysis of the output spectrum of direct digital frequency synthesizers in the presence of phase accumulator truncation</title>
	</analytic>
	<monogr>
		<title level="m">Proc</title>
		<meeting>null</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><surname>Annu</surname></persName>
		</author>
		<title level="m">Frequency Control Symp. (USERACOM)</title>
		<imprint>
			<date type="published" when="1987-05">May 1987</date>
			<biblScope unit="page" from="495" to="502" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Noise spectra of digital sine-generators using the table lookup method</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mehrgardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Acoust., Speech, Signal Processing</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="1037" to="1039" />
			<date type="published" when="1983-08">Aug. 1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Spur-reduced digital sinusoid synthesis</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Flanagan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Zimmerman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="2254" to="2262" />
			<date type="published" when="1995-07">July 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Complex digital oscillators and FSK modulators</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J</forename><surname>Fliege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Processing</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="333" to="342" />
			<date type="published" when="1992-02">Feb. 1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The CORDIC trigonometric computing technique</title>
		<author>
			<persName><forename type="first">J</forename><surname>Volder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Computers</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="330" to="334" />
			<date type="published" when="1959-09">Sept. 1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A 540 MHz 10b polar to Cartesian converter</title>
		<author>
			<persName><forename type="first">G</forename><surname>Gielis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Van De Plassche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Valburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Solid-State Circuits</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="1645" to="1650" />
			<date type="published" when="1991-11">Nov. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A sine/cosine generator based on an angle rotation algorithm</title>
		<author>
			<persName><forename type="first">A</forename><surname>Madisetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kwentus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Willson</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Int. Solid State Circuits Conf. Dig. Tech. Papers</title>
		<imprint>
			<biblScope unit="page" from="178" to="179" />
			<date type="published" when="1995-02">Feb. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m">Analog Devices AD9850 Rev. E datasheet</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Harris HSP45106 datasheet</title>
		<imprint>
			<date type="published" when="1999-01">Jan. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Stanford Telecommunications 1178A datasheet</title>
		<imprint>
			<date type="published" when="1994-03">Mar. 1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Synthesizer Data Book, 80-24127-1A</title>
		<imprint>
			<date type="published" when="1997-08">Aug. 1997</date>
		</imprint>
	</monogr>
	<note>Qualcomm 2368</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Method and apparatus for direct digital frequency synthesizer</title>
		<author>
			<persName><forename type="first">A</forename><surname>Madisetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Kwentus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">U.S. Patent</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">737</biblScope>
			<date type="published" when="1998-07">Apr. 7, 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">where he is currently engaged in the design of high-speed transceivers for fast ethernet and gigabit networking. His other research interests include architectures and implementations for communication circuits and video image compression</title>
	</analytic>
	<monogr>
		<title level="m">Kharagpur, the M.S. degree in electrical engineering from the University of California, Davis, and the Ph.D. degree in electrical engineering from the</title>
		<meeting><address><addrLine>Newport Beach, CA; Irvine, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
		<respStmt>
			<orgName>Avanindra Madisetti received the B.Tech. from the Indian Institute of Technology, ; University of California, Los Angeles</orgName>
		</respStmt>
	</monogr>
	<note>From 1995 to 1996, he was with Rockwell Semiconductor Systems</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
