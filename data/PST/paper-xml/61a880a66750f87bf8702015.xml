<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Transfer Learning of Graph Neural Networks with Ego-graph Information Maximization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Qi</forename><surname>Zhu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
							<email>j.carlyang@emory.edu</email>
							<affiliation key="aff1">
								<orgName type="institution">Emory University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yidan</forename><surname>Xu</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Washington</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Haonan</forename><surname>Wang</surname></persName>
							<email>haonan3@illinois.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Chao</forename><surname>Zhang</surname></persName>
							<email>chaozhang@gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois Urbana-Champaign</orgName>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
							<email>hanj@illinois.edu</email>
						</author>
						<title level="a" type="main">Transfer Learning of Graph Neural Networks with Ego-graph Information Maximization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T12:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Graph neural networks (GNNs) have achieved superior performance in various applications, but training dedicated GNNs can be costly for large-scale graphs. Some recent work started to study the pre-training of GNNs. However, none of them provide theoretical insights into the design of their frameworks, or clear requirements and guarantees towards their transferability. In this work, we establish a theoretically grounded and practically useful framework for the transfer learning of GNNs. Firstly, we propose a novel view towards the essential graph information and advocate the capturing of it as the goal of transferable GNN training, which motivates the design of EGI (Ego-Graph Information maximization) to analytically achieve this goal. Secondly, when node features are structure-relevant, we conduct an analysis of EGI transferability regarding the difference between the local graph Laplacians of the source and target graphs. We conduct controlled synthetic experiments to directly justify our theoretical conclusions. Comprehensive experiments on two real-world network datasets show consistent results in the analyzed setting of direct-transfering, while those on large-scale knowledge graphs show promising results in the more practical setting of transfering with fine-tuning. 1 * These two authors contribute equally. 1 Code and processed data are available at https://github.com/GentleZhu/EGI.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Graph neural networks (GNNs) have been intensively studied recently <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b67">68]</ref>, due to their established performance towards various real-world tasks <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b68">69,</ref><ref type="bibr" target="#b52">53]</ref>, as well as close connections to spectral graph theory <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b15">16]</ref>. While most GNN architectures are not very complicated, the training of GNNs can still be costly regarding both memory and computation resources on real-world large-scale graphs <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b62">63]</ref>. Moreover, it is intriguing to transfer learned structural information across different graphs and even domains in settings like few-shot learning <ref type="bibr" target="#b55">[56,</ref><ref type="bibr" target="#b43">44,</ref><ref type="bibr" target="#b24">25]</ref>. Therefore, several very recent studies have been conducted on the transferability of GNNs <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b58">59,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b46">47]</ref>. However, it is unclear in what situations the models will excel or fail especially when the pre-training and fine-tuning tasks are different. To provide rigorous analysis and guarantee on the transferability of GNNs, we focus on the setting of direct-transfering between the source and target graphs, under an analogous setting of "domain adaptation" <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b58">59]</ref>.</p><p>In this work, we establish a theoretically grounded framework for the transfer learning of GNNs, and leverage it to design a practically transferable GNN model. Figure <ref type="figure" target="#fig_0">1</ref> gives an overview of our framework. It is based on a novel view of a graph as samples from the joint distribution of its k-hop ego-graph structures and node features, which allows us to define graph information and similarity, so as to analyze GNN transferability ( §3). This view motivates us to design EGI, a novel GNN training objective based on ego-graph information maximization, which is effective in capturing the graph information as we define ( §3.1). Then we further specify the requirement on transferable node features and analyze the transferability of EGI that is dependent on the local graph Laplacians of source and target graphs ( §3.2).</p><p>All of our theoretical conclusions have been directly validated through controlled synthetic experiments (Table <ref type="table">1</ref>), where we use structural-equivalent role identification in an direct-transfering setting to analyze the impacts of different model designs, node features and source-target structure similarities on GNN transferability. In §4, we conduct real-world experiments on multiple publicly available network datasets. On the Airport and Gene graphs ( §4.1), we closely follow the settings of our synthetic experiments and observe consistent but more detailed results supporting the design of EGI and the utility of our theoretical analysis. On the YAGO graphs ( §4.2), we further evaluate EGI on the more generalized and practical setting of transfer learning with task-specific fine-tuning. We find our theoretical insights still indicative in such scenarios, where EGI consistently outperforms state-of-the-art GNN representation and transfer learning frameworks with significant margins.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Representation learning on graphs has been studied for decades, with earlier spectral-based methods <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b45">46,</ref><ref type="bibr" target="#b51">52]</ref> theoretically grounded but hardly scaling up to graphs with over a thousand of nodes. With the emergence of neural networks, unsupervised network embedding methods based on the Skip-gram objective <ref type="bibr" target="#b36">[37]</ref> have replenished the field <ref type="bibr" target="#b50">[51,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b41">42,</ref><ref type="bibr" target="#b44">45,</ref><ref type="bibr" target="#b65">66,</ref><ref type="bibr" target="#b61">62,</ref><ref type="bibr" target="#b64">65]</ref>. Equipped with efficient structural sampling (random walk, neighborhood, etc.) and negative sampling schemes, these methods are easily parallelizable and scalable to graphs with thousands to millions of nodes. However, these models are essentially transductive as they compute fully parameterized embeddings only for nodes seen during training, which are impossible to be transfered to unseen graphs.</p><p>More recently, researchers introduce the family of graph neural networks (GNNs) that are capable of inductive learning and generalizing to unseen nodes given meaningful node features <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b66">67]</ref>. Yet, most existing GNNs require task-specific labels for training in a semi-supervised fashion to achieve satisfactory performance <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b52">53,</ref><ref type="bibr" target="#b63">64]</ref>, and their usage is limited to single graphs where the downstream task is fixed. To this end, several unsupervised GNNs are presented, such as the auto-encoder-based ones like VGAE <ref type="bibr" target="#b27">[28]</ref> and GNFs <ref type="bibr" target="#b34">[35]</ref>, as well as the deep-infomax-based ones like DGI <ref type="bibr" target="#b53">[54]</ref> and InfoGraph <ref type="bibr" target="#b49">[50]</ref>. Their potential in the transfer learning of GNN remains unclear when the node features and link structures vary across different graphs.</p><p>Although the architectures of popular GNNs such as GCN <ref type="bibr" target="#b28">[29]</ref> may not be very complicated compared with heavy vision and language models, training a dedicated GNN for each graph can still be cumbersome <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b62">63]</ref>. Moreover, as pre-training neural networks are proven to be successful in other domains <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b17">18]</ref>, the idea is intriguing to transfer well-trained GNNs from relevant source graphs to improve the modeling of target graphs or enable few-shot learning <ref type="bibr" target="#b58">[59,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b2">3]</ref> when labeled data are scarce. In light of this, pioneering works have studied both generative <ref type="bibr" target="#b21">[22]</ref> and discriminative <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b22">23]</ref> GNN pre-training schemes. Though Graph Contrastive Coding <ref type="bibr" target="#b42">[43]</ref> shares the most similar view towards graph structures as us, it utilizes contrastive learning across all graphs instead of focusing on the transfer learning between any specific pairs. On the other hand, unsupervised domain adaptive GCNs <ref type="bibr" target="#b58">[59]</ref> study the domain adaption problem only when the source and target tasks are homogeneous.</p><p>Most previous pre-training and self-supervised GNNs lack a rigorous analysis towards their transferability and thus have unpredictable effectiveness. The only existing theoretical work on GNN transferability studies the performance of GNNs across different permutations of a single original graph <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref> and the tradeoff between discriminability and transferability of GNNs <ref type="bibr" target="#b46">[47]</ref>. We, instead, are the first to rigorously study the more practical setting of transferring GNNs across pairs of different source and target graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Transferable Graph Neural Networks</head><p>In this paper, we design a more transferable training objective for GNN (EGI) based on our novel view of essential graph information ( §3.1). We then analyze its transferability as the gap between its abilities to model the source and target graphs, based on their local graph Laplacians ( §3.2).</p><p>Based on the connection between GNN and spectral graph theory <ref type="bibr" target="#b28">[29]</ref>, we describe the output of a GNN as a combination of its input node features X, fixed graph Laplacian L and learnable graph filters Ψ. The goal of training a GNN is then to improve its utility by learning the graph filters that are compatible with the other two components towards specific tasks.</p><p>In the graph transfer learning setting where downstream tasks are often unknown during pre-training, we argue that the general utility of a GNN should be optimized and quantified w.r.t. its ability of capturing the essential graph information in terms of the joint distribution of its topology structures and node features, which motivates us to design a novel ego-graph information maximization model (EGI) ( §3.1). The general transferability of a GNN is then quantified by the gap between its abilities to model the source and target graphs. Under reasonable requirements such as using structurerespecting node features as the GNN input, we analyze this gap for EGI based on the structural difference between two graphs w.r.t. their local graph Laplacians ( §3.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Transferable GNN via Ego-graph Information Maximization</head><p>In this work, we focus on the direct-transfering setting where a GNN is pre-trained on a source graph G a in an unsupervised fashion and applied on a target graph G b without fine-tuning. <ref type="foot" target="#foot_0">2</ref> Consider a graph G = {V, E}, where the set of nodes V are associated with certain features X and the set of edges E form graph structures. Intuitively, the transfer learning will be successful only if both the features and structures of G a and G b are similar in some ways, so that the graph filters of a GNN learned on G a are compatible with the features and structures of G b .</p><p>Graph kernels <ref type="bibr" target="#b56">[57,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b37">38]</ref> are well-known for their capability of measuring similarity between pair of graphs. Motivated by k-hop subgraph kernels <ref type="bibr" target="#b3">[4]</ref>, we introduce a novel view of a graph as samples from the joint distribution of its k-hop ego-graph structures and node features. Since GNN essentially encodes such k-hop ego graph samples, this view allows us to give concrete definitions towards structural information of graphs in the transfer learning setting, which facilitates the measuring of similarity (difference) among graphs. Yet, none of the existing GNN training objectives are capable of recovering such distributional signals of ego graphs. To this end, we design Ego-Graph Information maximization (EGI), which alternatively reconstructs the k-hop ego-graph of each center node via mutual information maximization <ref type="bibr" target="#b19">[20]</ref>. Definition 3.1 (K-hop ego-graph). We call a graph g i = {V (g i ), E(g i )} a k-hop ego-graph centered at node v i if it has a k-layer centroid expansion <ref type="bibr" target="#b3">[4]</ref> such that the greatest distance between v i and any other nodes in the ego-graph is k, i.e. ∀v j ∈ V (g i ), |d(v i , v j )| ≤ k, where d(v i , v j ) is the graph distance between v i and v j .</p><p>In this paper, we use directed k-hop ego-graph and its direction is decided by whether it is composed of incoming or outgoing edges to the center node, i.e., g i and gi . The results apply trivially to undirected graphs with g i = gi . Definition 3.2 (Structural information). Let G be a topological space of sub-graphs, we view a graph G as samples of k-hop ego-graphs {g i } n i=1 drawn i.i.d. from G with probability µ, i.e.,</p><formula xml:id="formula_0">g i i.i.d. ∼ µ ∀i = 1, • • • , n.</formula><p>The structural information of G is then defined to be the set of k-hop ego-graphs of {g i } n i=1 and their empirical distribution.</p><p>As shown in Figure <ref type="figure" target="#fig_0">1</ref>, three graphs G 0 , G 1 and G 2 are characterized by a set of 1-hop ego-graphs and their empirical distributions, which allows us to quantify the structural similarity among graphs as shown in §3.2 (i.e., G 0 is more similar to G 1 than G 2 under such characterization). In practice, the nodes in a graph G are characterized not only by their k-hop ego-graph structures but also their associated node features. Therefore, G should be regarded as samples {(g i , x i )} drawn from the joint distribution P on the product space of G and a node feature space X . Ego-Graph Information Maximization. Given a set of ego-graphs {(g i , x i )} i drawn from an empirical joint distribution (g i , x i ) ∼ P. We aim to train an GNN encoder Ψ to maximize the mutual informaion (MI (g i , Ψ(g i , x i ))) between the defined structural information g i<ref type="foot" target="#foot_1">3</ref> (i.e. k-hop ego-graph) and node embedding z i = Ψ(g i , x i ). To maximize the MI, another discriminator D(g i , z i ) : E(g i ) × z i → R + is introduced to compute the probability of an edge e belongs to the given ego-graph g i . We use the Jensen-Shannon MI estimator <ref type="bibr" target="#b19">[20]</ref> in the EGI objective,</p><formula xml:id="formula_1">L EGI = −MI (JSD) (G, Ψ) = 1 N N i=1 [sp (D(g i , z i )) + sp (−D(g i , z i ))] ,<label>(1)</label></formula><p>where sp(x) = log(1 + e x ) is the softplus function and (g i , z i ) is randomly drawn from the product of marginal distributions, i.e. z i = Ψ(g i , x i ), (g i , x i ) ∼ P, i = i. In general, we can also randomly draw negative g i in the topological space, while enumerating all possible graphs g i leads to high computation cost.</p><p>In Eq. 1, the computation of D on E(g i ) depends on the node orders. Following the common practice in graph generation <ref type="bibr" target="#b69">[70]</ref>, we characterize the decision process of D with a fixed graph ordering, i.e., the BFS-ordering π over edges E(g i ). D = f • Φ is composed by another GNN encoder Φ and scoring function f over an edge sequence E π : {e 1 , e 2 , ..., e n }, which makes predictions on the BFS-ordered edges.</p><p>Recall our previous definition on the direction of k-hop ego-graph, the center node encoder Ψ receives pairs of (g i , x i ) while the neighbor node encoder Φ in discriminator D receives ( gi , x i ). Both encoders are parameterized as GNNs,</p><formula xml:id="formula_2">Ψ(g i , x i ) = GNN Ψ (A i , X i ), Φ( gi , x i ) = GNN Φ (A i , X i ),</formula><p>where A i , A i is the adjacency matrix with self-loops of g i and gi , respectively. The self-loops are added following the common design of GNNs, which allows the convolutional node embeddings to always incorporate the influence of the center node. A i = A i . The output of Ψ, i.e., z i ∈ R n , is the center node embedding, while Φ outputs representation H ∈ R |gi|×n for neighbor nodes in the ego-graph.</p><p>Once node representation H is computed, we now describe the scoring function f . For each of the node pair (p, q) ∈ E π , h p is the source node representation from Φ, x q is the destination node features. The scoring function is,</p><formula xml:id="formula_3">f (h p , x q , z i ) = σ U T • τ W T [h p ||x q ||z i ] ,<label>(2)</label></formula><p>where σ and τ are Sigmoid and ReLU activation functions. Thus, the discriminator D is asked to distinguish a positive ((p, q), z i ) and negative pair ((p, q), z i )) for each edge in g i .</p><formula xml:id="formula_4">D(g i , z i ) = (p,q)∈E π log f (h p , x q , z i ), D(g i , z i ) = E π (p,q) log f (h p , x q , z i ).<label>(3)</label></formula><p>There are two types of edges (p, q) in our consideration of node orders, type-a -the edges across different hops (from the center node), and type-b -the edges within the same hop (from the center node). The aforementioned BFS-based node ordering guarantees that Eq. 3 is sensitive to the ordering of type-a edges, and invariant to the ordering of type-b edges, which is consistent with the requirement of our theoretical analysis on ∆ D . Due to the fact that the output of a k-layer GNN only depends on a k-hop ego-graph for both encoders Ψ and Φ, EGI can be trained in parallel by sampling batches of g i 's. Besides, the training objective of EGI is transferable as long as (g i , x i ) across source graph G a and G b satisfies the conditions given in §3.2. More model details in Appendix §B and source code in the Supplementary Materials.</p><p>Connection with existing work. To provide more insights into the EGI objective, we also present it as a dual problem of ego-graph reconstruction. Recall our definition of ego-graph mutual information MI(g i , Ψ(g i , x i )). It can be related to an ego-graph reconstruction loss R(g i |Ψ(g i , x i )) as max MI(g i , Ψ(g i ,</p><formula xml:id="formula_5">x i )) = H(g i ) − H(g i |Ψ(g i , x i )) ≤ H(g i ) − R(g i |Ψ(g i , x i )). (<label>4</label></formula><formula xml:id="formula_6">)</formula><p>When EGI is maximizing the mutual information, it simultaneously minimizes the upper error bound of reconstructing an ego-graph g i . In this view, the key difference between EGI and VGAE <ref type="bibr" target="#b27">[28]</ref> is they assume each edge in a graph to be observed independently during the reconstruction. While in EGI, edges in an ego-graph are observed jointly during the GNN decoding. Moreover, existing mutual information based GNNs such as DGI <ref type="bibr" target="#b53">[54]</ref> and GMI <ref type="bibr" target="#b40">[41]</ref> explicitly measure the mutual information between node features x and GNN output Ψ. In this way, they tend to capture node features instead of graph structures, which we deem more essential in graph transfer learning as discussed in §3.2.</p><p>Use cases of EGI framework. In this paper, we focus on the classical domain adaption (directtransferring) setting <ref type="bibr" target="#b6">[7]</ref>, where no target domain labels are available and transferability is measured by the performance discrepancy without fine-tuning. In this setting, the transferability of EGI is theoretically guaranteed by Theorem 3.1. In §4.1, we validated this with the airport datasets. Beyond direct-transferring, EGI is also useful in the more generalized and practical setting of transfer learning with fine-tuning, which we introduced in §4.2 and validated with the YAGO datasets. In this setting, the transferability of EGI is not rigorously studied yet, but is empirically shown promising.</p><p>Supportive observations. In the first three columns of our synthetic experimental results (Table <ref type="table">1</ref>), in both cases of transfering GNNs between similar graphs (F-F) and dissimilar graphs (B-F), EGI significantly outperforms all competitors when using node degree one-hot encoding as transferable node features. In particular, the performance gains over the untrained GIN show the effectiveness of training and transfering, and our gains are always larger than the two state-of-the-art unsupervised GNNs. Such results clearly indicate advantageous structure preserving capability and transferability of EGI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Transferability analysis based on local graph Laplacians</head><p>We now study the transferability of a GNN (in particular, with the training objective of L EGI ) between the source graph G a and target graph G b based on their graph similarity. We firstly establish the requirement towards node features, under which we then focus on analyzing the transferability of EGI w.r.t. the structural information of G a and G b .</p><p>Recall our view of the GNN output as a combination of its input node features, fixed graph Laplacian and learnable graph filters. The utility of a GNN is determined by the compatibility among the three.</p><p>In order to fulfill such compatibility, we require the node features to be structure-respecting: Definition 3.3 (Structure-respecting node features). Let g i be an ordered ego-graph centered on node v i with a set of node features {x i p,q } k,|Vp(gi)| p=0,q=1 , where V p (g i ) is the set of nodes in p-th hop of g i . Then we say the node features on g i are structure-respecting if x i p,q = [f (g i )] p,q ∈ R d for any node v q ∈ V p (g i ), where f : G → R d×|V (gi)| is a function. In the strict case, f should be injective.</p><p>In its essence, Def 3.3 requires the node features to be a function of the graph structures, which is sensitive to changes in the graph structures, and in an ideal case, injective to the graph structures (i.e., mapping different graphs to different features). In this way, when the learned graph filters of a transfered GNN is compatible to the structure of G, they are also compatible to the node features of G. As we will explain in Remark 2 of Theorem 3.1, this requirement is also essential for the analysis of EGI transferability which eventually only depends on the structural difference between two graphs.</p><p>In practice, commonly used node features like node degrees, PageRank scores <ref type="bibr" target="#b39">[40]</ref>, spectral embeddings <ref type="bibr" target="#b10">[11]</ref>, and many pre-computed unsupervised network embeddings <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b50">51,</ref><ref type="bibr" target="#b13">14]</ref> are all structure-respecting in nature. However, other commonly used node features like random vectors <ref type="bibr" target="#b67">[68]</ref> or uniform vectors <ref type="bibr" target="#b59">[60]</ref> are not and thus non-transferable. When raw node attributes are available, they are transferable as long as the concept of homophily <ref type="bibr" target="#b35">[36]</ref> applies, which also implies Def 3.3, but we do not have a rigorous analysis on it yet.</p><p>Supportive observations. In the fifth and sixth columns in Table <ref type="table">1</ref>, where we use same fixed vectors as non-transferable node features to contrast with the first three columns, there is almost no transferability (see δ(acc.)) for all compared methods when non-transferable features are used, as the performance of trained GNNs are similar to or worse than their untrained baselines. More detailed experiments on different transferable and non-transferable features can be found in Appendix §C.1.</p><p>With our view of graphs and requirement on node features both established, now we derive the following theorem by characterizing the performance difference of EGI on two graphs based on Eq. 1.</p><formula xml:id="formula_7">Theorem 3.1 (GNN transferability). Let G a = {(g i , x i )} n i=1 and G b = {(g i , x i )} m i =1</formula><p>be two graphs, and assume node features are structure-relevant. Consider GCN Ψ θ with k layers and a 1-hop polynomial filter φ. With reasonable assumptions on the local spectrum of G a and G b , the empirical performance difference of Ψ θ evaluated on L EGI satisfies</p><formula xml:id="formula_8">|L EGI (G a ) − L EGI (G b )| ≤ O (∆ D (G a , G b ) + C) .<label>(5)</label></formula><p>On the RHS, C is only dependent on the graph encoders and node features, while ∆ D (G a , G b ) measures the structural difference between the source and target graphs as follows,</p><formula xml:id="formula_9">∆ D (G a , G b ) = C 1 nm n i=1 m i =1 λ max ( Lgi − Lg i )<label>(6)</label></formula><p>where λ max (A) := λ max (A T A) 1/2 , and Lgi denotes the normalised graph Laplacian of gi by its in-degree. C is a constant dependant on λ max ( Lgi ) and D.</p><p>Proof. The full proof is detailed in Appendix §A. In particular, we define the EGI gap as ∆ D in Eq. 6, as other term C is the same for different methods using same GNN encoder. It can be computed to bound the transferability of EGI regarding its loss difference on the source and target graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The analysis in</head><p>Remark 1. Our view of a graph G as samples of k-hop ego-graphs is important, as it allows us to obtain node-wise characterization of GNN similarly as in <ref type="bibr" target="#b54">[55]</ref>. It also allows us to set the depth of ego-graphs in the analysis to be the same as the number of GNN layers (k), since the GNN embedding of each node mostly depends on its k-hop ego-graph instead of the whole graph. Remark 2. For Eq. 1, Def 3.3 ensures the sampling of GNN embedding at a node always corresponds to sampling an ego-graph from G, which reduces to uniformly sampling from G = {g i } n i=1 under the setting of Theorem 3.1. Therefore, the requirement of Def 3.3 in the context of Theorem 3.1 guarantees the analysis to be only depending on the structural information of the graph.</p><p>Supportive observations. In Table <ref type="table">1</ref>, in the d columns, we compute the average structural difference between two Forest-fire graphs (∆ D (F,F)) and between Barabasi and Forest-fire graphs (∆ D (B,F)), based on the RHS of Eq. 5. The results validate the topological difference between graphs generated by different random-graph models, while also verifying our view of graph as k-hop ego-graph samples and the way we propose based on it to characterize structural information of graphs. We further highlight in the δ(acc) columns the accuracy difference between the GNNs transfered from Forest-fire graphs and Barabasi graphs to Forest-fire graphs. Since Forest-fire graphs are more similar to Forest-fire graphs than Barabasi graphs (as verified in the ∆ D columns), we expect δ(acc.) to be positive and large, indicating more positive transfer between the more similar graphs. Indeed, the behaviors of EGI align well with the expectation, which indicates its well-understood transferability and the utility of our theoretical analysis.</p><p>Use cases of Theorem 3.1. Our Theorem 3.1 naturally allows for two practical use cases among many others: point-wise pre-judge and pair-wise pre-selection for EGI pre-training. Suppose we have a target graph G b which does not have sufficient training labels. In the first setting, we have a single source graph G a which might be useful for pre-training a GNN to be used on G b . The EGI gap ∆ D (G a , G b ) in Eq. 6 can then be computed between G a and G b to pre-judge whether such transfer learning would be successful before any actual GNN training (i.e., yes if ∆ D (G a , G b ) is empirically much smaller than 1.0; no otherwise). In the second setting, we have two or more source graphs {G 1 a , G 2 a , . . .} which might be useful for pre-training the GNN. The EGI gap can then be computed between every pair of G i a and G b to pre-select the best source graph (i.e., select the one with the least EGI gap).</p><p>In practice, the computation of eigenvalues on the small ego-graphs can be rather efficient <ref type="bibr" target="#b1">[2]</ref>, and we do not need to enumerate all pairs of ego-graphs on two compared graphs especially if the graphs are really large (e.g., with more than a thousand nodes). Instead, we can randomly sample pairs of ego-graphs from the two graphs, update the average difference on-the-fly, and stop when it converges. Suppose we need to sample M pairs of k-hop ego-graphs to compare two large graphs, and the average size of ego-graphs are L, then the overall complexity of computing Eq. 5 is O(M L 2 ), where M is often less than 1K and L less than 50. In Appendix §C.4, we report the approximated ∆ D 's w.r.t. different sampling frequencies, and they are indeed pretty close to the actual value even with smaller sample frequencies, showing the feasible efficiency of computing ∆ D through sampling.</p><p>Limitations. EGI is designed to account for the structural difference captured by GNNs (i.e., khop ego-graphs). The effectiveness of EGI could be limited if the tasks on target graphs depend on different structural signals. For example, as Eq. 6 is computing the average pairwise distances between the graph Laplacians of local ego-graphs, ∆ D is possibly less effective in explicitly capturing global graph properties such as numbers of connected components (CCs). In some specific tasks (such as counting CCs or community detection) where such properties become the key factors, ∆ D may fail to predict the transferability of GNNs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Real Data Experiments</head><p>Baselines. We compare the proposed model against existing self-supervised GNNs and pre-training GNN algorithms. To exclude the impact of different GNN encoders Ψ on transferability, we always use the same encoder architecture for all compared methods (i.e., GIN <ref type="bibr" target="#b59">[60]</ref> for direct-transfering experiments, GCN <ref type="bibr" target="#b28">[29]</ref> for transfering with fine-tuning).</p><p>The self-supervised GNN baselines are GVAE <ref type="bibr" target="#b27">[28]</ref>, DGI <ref type="bibr" target="#b53">[54]</ref> and two latest mutual information estimation methods GMI <ref type="bibr" target="#b40">[41]</ref> and MVC <ref type="bibr" target="#b16">[17]</ref>. As for pre-training GNN algorithms, MaskGNN Table <ref type="table">1</ref>: Synthetic experiments of identifying structural equivalent nodes. We randomly generate 40 graphs with the Forest-fire model (F) <ref type="bibr" target="#b31">[32]</ref> and 40 graphs with the Barabasi model (B) <ref type="bibr" target="#b0">[1]</ref>, The GNN model is GIN <ref type="bibr" target="#b59">[60]</ref> with random parameters (baseline with only the neighborhood aggregation function), VGAE <ref type="bibr" target="#b27">[28]</ref>, DGI <ref type="bibr" target="#b53">[54]</ref>, and EGI with GIN encoder. We train VGAE, DGI and EGI on one graph from either set (F and B), and test them on the rest of Forest-fire graphs (F). Transferable feature is node degree one-hot encoding and non-transferable feature is uniform vectors. More details about the results and dataset can be found in Appendix §C. Experimental Settings. The main hyperparameter k is set 2 in EGI as a common practice. We use Adam <ref type="bibr" target="#b26">[27]</ref> as optimizer and learning rate is 0.01. We provide the experimental result with varying k in the Appendix §C.4. All baselines are set with the default parameters. Our experiments were run on an AWS g4dn.2xlarge machine with 1 Nvidia T4 GPU. By default, we use node degree one-hot encoding as the transferable feature across all different graphs. As stated before, other transferable features like spectral and other pre-computed node embeddings are also applicable. We focus on the setting where the downstream tasks on target graphs are unspecified but assumed to be structure-relevant, and thus pre-train the GNNs on source graphs in an unsupervised fashion. <ref type="foot" target="#foot_2">4</ref> In terms of evaluation, we design two realistic experimental settings: (1) Direct-transfering on the more structure-relevant task of role identification without given node features to directly evaluate the utility and transferability of EGI. ( <ref type="formula" target="#formula_3">2</ref>) Few-shot learning on relation prediction with task-specific node features to evaluate the generalization ability of EGI.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Direct-transfering on role identification</head><p>First, we use the role identification without node features in a direct-transfering setting as a reliable proxy to evaluate transfer learning performance regarding different pre-training objectives. Role in a network is defined as nodes with similar structural behaviors, such as clique members, hub and bridge <ref type="bibr" target="#b18">[19]</ref>. Across graphs in the same domain, we assume the definition of role to be consistent, and the task of role identification is highly structure-relevant, which can directly reflect the transferability of different methods and allows us to conduct the analysis according to Theorem 3.1. Upon convergence of pre-training each model on the source graphs, we directly apply them to the target graphs and further train a multi-layer perceptron (MLP) upon their outputs. The GNN parameters are frozen during the MLP training. We refer to this strategy as direct-transfering since there is no fine-tuning of the models after transfering to the target graphs.</p><p>We use two real-world network datasets with role-based node labels: (1) Airport <ref type="bibr" target="#b44">[45]</ref> contains three networks from different regions-Brazil, USA and Europe. Each node is an airport and each link is the flight between airports. The airports are assigned with external labels based on their level of popularity.</p><p>(2) Gene <ref type="bibr" target="#b67">[68]</ref> contains the gene interactions regarding 50 different cancers. Each gene has a binary label indicating whether it is a transcription factor. More details about the results and dataset can be found in Appendix C.2.</p><p>The experimental setup on the Airport dataset closely resembles that of our synthetic experiments in Table <ref type="table">1</ref>, but with real data and more detailed comparisons. We train all models (except for the untrained ones) on the Europe network, and test them on all three networks. The results are presented in Table <ref type="table" target="#tab_1">2</ref>. We notice that the node degree features themselves (with MLP) show reasonable performance in all three networks, which is not surprising since the popularity-based airport role labels are highly relevant to node degrees. The untrained GIN encoder yields a significant margin over just node features, as GNN encoder incorporates structural information to node representations.</p><p>While training of the DGI can further improve the performance on the source graph, EGI shows the best performance there with the structure-relevant node degree features, corroborating the claimed effectiveness of EGI in capturing the essential graph information (i.e. recover the k-hop ego-graph distributions) as we stress in §3.</p><p>When transfering the models to USA and Brazil networks, EGI further achieves the best performance compared with all baselines when structure relevant features are used (64.55 and 73.15), which reflects the most significant positive transfer. Interestingly, direct application of GVAE, DGI and MVC that do not capture the input k-hop graph jointly, leads to rather limited and even negative transferrability (through comparison against the untrained GIN encoders). The recently proposed transfer learning frameworks for GNN like MaskGNN and Structural Pre-train are able to mitigate negative transfer to some extent, but their performances are still inferior to EGI. We believe this is because their models are prone to learn the graph-specific information that is less transferable across different graphs. GMI is also known to capture the graph structure and node features, so it achieves second best result comparing with EGI.</p><p>Similarly as in Table <ref type="table">1</ref>, we also compute the structural differences among three networks w.r.t. the EGI gap in Eq. 6. The structural difference is 0.869 between the Europe and USA networks, and 0.851 between the Europe and Brazil datasets, which are pretty close. Consequently, the transferability of EGI regarding its performance gain over the untrained GIN baseline is 4.8% on the USA network and 4.4% on the Brazil network, which are also close. Such observations again align well with our conclusion in Theorem 3.1 that the transferability of EGI is closely related to the structural differences between source and target graphs.  <ref type="bibr" target="#b27">[28]</ref> 0.539±0.053 0.555±0.029 0.663±0.089 DGI (GIN) <ref type="bibr" target="#b53">[54]</ref> 0.578±0.050 0.549±0.028 0.673±0.084 Mask-GIN <ref type="bibr" target="#b20">[21]</ref> 0.564±0.053 0.608±0.027 0.667±0.073 ContextPred-GIN <ref type="bibr" target="#b20">[21]</ref> 0.527±0.048 0.504±0.030 0.621±0.078 Structural Pre-train <ref type="bibr" target="#b22">[23]</ref> 0.560±0.050 0.622±0.030 0.688±0.082 MVC <ref type="bibr" target="#b16">[17]</ref> 0.532±0.050 0.597±0.030 0.661±0.093 GMI <ref type="bibr" target="#b40">[41]</ref> 0.581±0.054 0.593±0.031 0.731±0.107 EGI (GIN) 0.592±0.046 * * 0.646±0.029 * * 0.732±0.078</p><p>On the Gene dataset, with more graphs available, we focus on EGI to further validate the utility of Eq. 5 in Theorem 3.1, regarding the connection between the EGI gap (Eq. 6) and the performance gap (micro-F1) of EGI on them. Due to severe label imbalance that removes the performance gaps, we only use the seven brain cancer networks that have a more consistent balance of labels. As shown in Figure <ref type="figure" target="#fig_3">3</ref>, we train EGI on one graph and test it on the other graphs. The x-axis shows the EGI gap, and y-axis shows the improvement on micro-F1 compared with an untrained GIN. The negative correlation between two quantities is obvious. Specifically, when the structural difference is smaller than 1, positive transfer is observed (upper left area) as the performance of transferred EGI is better than untrained GIN, and when the structural difference becomes large (&gt; 1), negative transfer is observed. We also notice a similar graph pattern, i.e. single dense cluster, between source graph and positive transferred target graph G 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Few-shot learning on relation prediction</head><p>Here we evaluate EGI in the more generalized and practical setting of few-shot learning on the less structure-relevant task of relation prediction, with task-specific node features and fine-tuning. The source graph contains a cleaned full dump of 579K entities from YAGO <ref type="bibr" target="#b48">[49]</ref>, and we investigate 20shot relation prediction on a target graph with 24 relation types, which is a sub-graph of 115K entities sampled from the same dump. In post-fine-tuning, the models are pre-trained with an unsupervised loss on the source graph and fine-tuned with the task-specific loss on the target graph. In joint-finetuning, the same pre-trained models are jointly optimized w.r.t. the unsupervised pre-training loss and task-specific fine-tuning loss on the target graph. In Table <ref type="table" target="#tab_2">3</ref>, we observe most of the existing models fail to transfer across pre-training and fine-tuning tasks, especially in the joint-fine-tuning setting. In particular, both Mask-GIN and ContextPred-GIN rely a lot on task-specific fine-tuning, while EGI focuses on the capturing of similar ego-graph structures that are transferable across graphs. The mutual information based method GMI also demonstrates considerable transferability and we believe the ability to capture the graph structure is the key to the transferability. As a consequence, EGI significantly outperforms all compared methods in both settings. More detailed statistics and running time are in Appendix §C.3. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>To the best of our knowledge, this is the first research effort towards establishing a theoretically grounded framework to analyze GNN transferability, which we also demonstrate to be practically useful for guiding the design and conduct of transfer learning with GNNs. For future work, it is intriguing to further strengthen the bound with relaxed assumptions, rigorously extend it to the more complicated and less restricted settings regarding node features and downstream tasks, as well as analyze and improve the proposed framework over more transfer learning scenarios and datasets. It is also important to protect the privacy of pre-training data to avoid potential negative societal impacts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Theory Details</head><p>From the L EGI objective, we have assumed</p><formula xml:id="formula_10">g i i.i.d. ∼ µ, x i i.i.d.</formula><p>∼ ν, and (g i , x i ) i.i.d.</p><p>∼ p, for (g i , x i ) ∈ G × X . Then for a sample {(g i , x i )} i , we have access to the empirical distributions of the three. In the procedure of evaluating the objective, we sample uniformly. Note that, in Eq. 2 of the main paper, we used a d dimensional hidden state h p to denote an edge's source node representation and x q as destination node features from the structure of the ego-graph and the associated source node feature with GNN. In our proof, we denote v p,q as the q-th node in the p-th layer of the ego-graph and let h p,q = h p and x p,q = x q . For simplicity, in i-th layer, we denote f (x i ) = h i p,q x i p,q , where [• •] is the concatenation operation. Finally, as we are considering GNN with k layers, its computation only depends on the k-hop egographs of G, which is an important consideration when unfolding the embedding of GNN at a centre node with Lamma A.1. Lemma A.1. For any A ∈ R m×n , where m ≥ n, and A is a submatrix of B ∈ R m ×n , where m &lt; m , we have</p><formula xml:id="formula_11">A 2 ≤ B 2 .</formula><p>Proof. Note that, AA T is a principle matrix of BB T , i.e., AA T is obtained by removing the same set of rows and columns from BB T . Then, by Eigenvalue Interlacing Theorem <ref type="bibr" target="#b23">[24]</ref> and the fact that A T A and AA T have the same set of non-zero singular values, the matrix operator norm satisfies</p><formula xml:id="formula_12">A 2 = λ max (A T A) = λ max (AA T ) ≤ λ max (BB T ) = B 2 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Center-node view of GCN</head><p>Recall that V p (g i ) denotes the set of nodes in the pth hop of k-hop ego-graph g i , and x i p,q denotes the feature for qth node in pth hop of g i , for any p = 0, . . . , k; q = 1, . . . , |V p (g i )|. Similarly, V (g i ) denotes the entire set of nodes in g i . In each ego-graph sample {g i , x i }, the layer-wise propagation rules for the center node embedding in encoder Ψ and discriminator D can be written into the form of GCN as followed</p><formula xml:id="formula_13">Z (l) = ReLU(D − 1 2 (I + A)D − 1 2 Z (l−1) θ (l)</formula><p>) where A is adjacency matrix of G. I adds the self-loop and D ii = j A ij is the degree matrix.</p><p>We focus on the center node's embedding obtained from a k-layer GCN with 1-hop polynomial filter φ(L) = Id − L. Inspired by the characterization of GCN from a node-wise view in <ref type="bibr" target="#b54">[55]</ref>, we similarly denote the embedding of node x i ∀i = 1, • • • , n in the final layer of the GCN as</p><formula xml:id="formula_14">z (k) i = z i = Ψ θ (x i ) = σ( j∈N (xi) e ij z (k−1) j T θ (k) ) ∈ R d ,</formula><p>where e ij = [φ(L)] ij ∈ R the weighted link between node i and j; and θ (k) ∈ R d×d is the weight for the kth layer sharing across nodes. Then θ = {θ ( ) } k =1 . We may denote z <ref type="figure" target="#fig_9">and z</ref> </p><formula xml:id="formula_15">( ) i ∈ R d similarly for = 1, • • • , k − 1,</formula><formula xml:id="formula_16">0 i = x i ∈ R d</formula><p>as the node feature of center node x i . With the assumption of GCN in the statement, it is clear that only the k-hop ego-graph g i centered at x i is needed to compute z With such observation in mind, let us denote the matrix of node embeddings of g i at the th layer as [z</p><formula xml:id="formula_17">( ) i ] ∈ R |V (gi)|×d for = 1, • • • , k; and let [z (0) i ] ≡ [x i ] ∈ (R d ) |V (gi)|</formula><p>denote the matrix of node features in the k-hop ego-graph g i . In addition, denote [z ( ) i ] p as the principle submatrix, which includes embeddings for nodes in the 0 to pth hop of g i , 0 ≤ p ≤ k.</p><p>We denote L gi as the out-degree normalised graph Laplacian of g i . Here, the out-degree is defined with respect to the direction from leaves to centre node in g i . Similarly, denote Lgi as the in-degree normalised graph Laplacian of g i , where the direction is from centre to leaves. WLOG, we write the th layer embedding in matrix notation of the following form</p><formula xml:id="formula_18">[z ( ) i ] k− +1 = σ([φ(L gi )] k− +1 [z ( −1) i ] k− +1 θ ( ) ),</formula><p>where the GCN only updates the embedding of nodes in the 0 to (k − )th hop. We also implicitly assume the embedding of nodes in (k − + 1) to kth hop are unchanged through the update, due to the directed nature of g i . Hence, we obtain</p><formula xml:id="formula_19">z i ≡ [z (k) i ] 0 from the following [z (k) i ] 1 = σ([φ(L gi )] 1 [z (k−1) i ] 1 θ (k) ).</formula><p>Similarly, we are able to write down the form of discriminator using matrix representation for GCN. The edge information at th time point for nodes in V (g i ) can be described as follows [h</p><formula xml:id="formula_20">( ) i ] = ReLU (φ( Lgi )[h ( −1) i ] θ( ) ),</formula><p>A.2 Proof for Theorem 4.1</p><p>We restate Theorem 4.1 from the main paper as below.</p><formula xml:id="formula_21">Theorem A.2. Let G a = {(g i , x i )} n i=1 and G b = {(g i , x i )} m i =1</formula><p>be two graphs and node features are structure-respecting with x i = f (L gi ), x i = f (L g i ) for some function f : R |V (gi)|×|V (gi)| → R d . Consider GCN Ψ θ with k layers and a 1-hop polynomial filter φ,the empirical performance difference of Ψ θ with L EGI satisfies</p><formula xml:id="formula_22">|L EGI (G a ) − L EGI (G b )| ≤ O 1 nm n i=1 m i =1 [M + Cλ max (L gi − L g i ) + Cλ max ( Lgi − Lg i ))] , (<label>7</label></formula><formula xml:id="formula_23">)</formula><p>where M is dependant on Ψ, D, node features, and the largest eigenvalue of L gi and Lgi . C is a constant dependant on the encoder, while C is a constant dependant on the decoder. With a slight abuse of notation, we denote λ max (A) := λ max (A T A) 1/2 . Note that, in the main paper, we have</p><formula xml:id="formula_24">C := M + Cλ max (L gi − L g i ), and ∆ D (G a , G b ) := Cλ max ( Lgi − Lg i ).</formula><p>Proof. Now,</p><formula xml:id="formula_25">|L EGI (G) − L EGI (G )| = 1 n 2 n i,j=1 (D(g i , z j )) − 1 n n i=1 (−(−D(g i , z i )) − ( 1 m 2 m i ,j =1 (D(g i , z j )) − 1 m m i =1 (−(−D(g i , z i )))) ≤ 1 n 2 m 2 n i,j=1 m i ,j =1 |D(g i , z j ) − D(g i , z j )| + 1 nm n i=1 m i =1 |D(g i , z i ) − D(g i , z i )| = 1 n 2 m 2 n i,j=1 m i ,j =1 A + 1 nm n i=1 m i =1 B.</formula><p>We make the following assumptions in the proof, 1. Assume the size of the neighborhood for each node is bounded by 0 &lt; r &lt; ∞, then the maximum number of node for p-th layer subgraph is bounded by r p . WLOG, let</p><formula xml:id="formula_26">1 ≤ |V p (g i )| ≤ |V p (g i )| ≤ r p ;</formula><p>2. Assume h i p,q x i p,q = 0 if |V p (g i )| &lt; q, i.e. assume non-informative edge information and node features for non-existed nodes in the smaller neighborhood with no links;</p><p>From Assumption 2, we add isolated nodes to the smaller neighborhood V p (g i ) such that the neighborhood size at each hop match. It can be found in our code to compute EGI gap as pad_nbhd. For the following proof, we WLOG assume</p><formula xml:id="formula_27">|V p (g i )| = |V p (g i )| ∀p.</formula><p>First we consider B. Recall that, V p (g i ) is the set of nodes in layer p of g i ,</p><formula xml:id="formula_28">D(g i , z i ) = k p=1 |Vp(gi)| q=1 log(σ sig U T τ W T [f (x i ) z i ] ),</formula><p>where σ sig (t) = 1 1+e −t is the sigmoid function, τ is some γ τ -Lipschitz activation function and [• •] denotes the concatenation of two vectors. Then we obtain</p><formula xml:id="formula_29">U T τ W T [f (x i ) z i ] = U T τ W T 1 f (x i ) + W T 2 z i . Since log(σ sig (t)) = − log(1 + e −t ), which is 1-Lipschitz, it gives B ≤ k p | |Vp(g i )| q σ s (U T τ W T 1 f (x i ) + W T 2 z i ) − σ s (U T τ W T 1 f (x i ) + W T 2 z i )| ≤ γ τ U 2 k p=1 |Vp(g i )| q=1 ( W T 1 f (x i ) − W T 1 f (x i ) 2 + W T 2 z i − W T 2 z i 2 ) ≤ γ τ U 2 s w   k p=1 |Vp(g i )| q=1 h i p,q − h i p,q 2 + x i p,q − x i p,q 2 + k p=1 |Vp(g i )| q=1 z i − z i 2   ≤ C 1   k p=1 |Vp(g i )| q=1 h i p,q − h i p,q 2 + x i p,q − x i p,q 2 / k p=1 r p + z i − z i 2   = C 1 (I 1 + I 2 )<label>(8)</label></formula><p>We provide the derivation for the unfolding of th layer GCN with the centre-node view in Lemma A.3. This will be used in the derivation of I 1 and I 2 .</p><p>Lemma A.3. For any = 1, • • • , k, we have an upper bound for the hidden representation difference between g i and g i ,</p><formula xml:id="formula_30">[z ( ) i ] k− − [z ( ) i ] k− 2 ≤ (γ σ c θ ) φ(L gi ) 2 [x i ] − [x i ] 2 + (γ σ c θ ) φ(L gi ) 2 + 1 γ σ c θ φ(L gi ) 2 − 1 γ σ c θ c z φ(L gi ) − φ(L g i ) 2 . (<label>9</label></formula><formula xml:id="formula_31">)</formula><p>Specifically, for = k, we obtain the expansion for center node embedding [z</p><formula xml:id="formula_32">(k) i ] 0 − [z (k) i ] 0 ≡ z i − z i . Proof. By Lemma A.1, for any = 1, • • • , k, the following holds [z ( ) i ] k− − [z ( ) i ] k− 2 ≤ [z ( ) i ] k− +1 − [z ( ) i ] k− +1 2 .</formula><p>Assume max [z</p><formula xml:id="formula_33">( ) i ] 2 ≤ c z &lt; ∞ ∀i, and max θ ( ) 2 ≤ c θ &lt; ∞, where c θ = ∨ s θ ( ) the largest singular value. Then, for = 1, • • • , k − 1, we have [z ( ) i ] k− − [z ( ) i ] k− 2 ≤ [σ([φ(L gi )] k− +1 [z ( −1) i ] k− +1 θ ( ) ) − σ([φ(L g i )] k− +1 [z ( −1) i ] k− +1 θ ( ) )] k− ) 2 ≤γ σ [φ(L gi )] k− +1 [z ( −1) i ] k− +1 − [φ(L g i )] k− +1 [z ( −1) i ] k− +1 2 θ (k) 2 ≤γ σ c θ [φ(L gi )] k− +1 2 [z ( −1) i ] k− +1 − [z ( −1) i ] k− +1 2 + γ σ c θ [z ( −1) i ] k− +1 2 [φ(L gi )] k− +1 − [φ(L g i )] k− +1 2 ≤γ σ c θ φ(L gi ) 2 [z ( −1) i ] k− +1 − [z ( −1) i ] k− +1 2 + γ σ c θ c z φ(L gi ) − φ(L g i ) 2 .</formula><p>(10) since [φ(L gi )] k− +1 is the principle submatrix of φ(L gi ). Then we equivalently write the above equation as E ≤ bE −1 + a, which gives</p><formula xml:id="formula_34">E ≤ b E 1 + b + 1 b − 1 a. With [x i ] = [z (0)</formula><p>i ] k , we see the following is only dependant on the structure of g i and g i , [z</p><formula xml:id="formula_35">( ) i ] k− − [z ( ) i ] k− 2 ≤ (γ σ c θ ) φ(L gi ) 2 [x i ] − [x i ] 2 + (γ σ c θ ) φ(L gi ) 2 + 1 γ σ c θ φ(L gi ) 2 − 1 γ σ c θ c z φ(L gi ) − φ(L g i ) 2 .</formula><p>Since the the graph Laplacians are normalised, we have φ(L gi ) 2 ≤ c L &lt; ∞ ∀i. In addition, let</p><formula xml:id="formula_36">x i p,q − x i p,q 2 ≤ sup i sup p,q x i p,q − x i p,q 2 = sup i f (L gi ) − f (L g i ) 2 := δ x .</formula><p>Hence,</p><formula xml:id="formula_37">[x i ] − [x i ] 2 ≤ δ x ( k p=1 r p ) 1/2 := c x . From Lemma A.3</formula><p>, it is clear that we obtain the following at the final layer</p><formula xml:id="formula_38">I 2 = z i − z i 2 ≤ (γ σ c θ c L ) k c x + (γ σ c θ c L ) k + 1 γ σ c θ c L − 1 γ σ c θ c z φ(L gi ) − φ(L g i ) 2 ≤ C(M c x + L gi − L g i 2 ) = C(M c x + λ max (L gi − L g i ) 1/2 ). (<label>11</label></formula><formula xml:id="formula_39">)</formula><p>since φ is a linear function for L. Indeed, this can be generalised to polynomial function φ of higher powers.</p><p>Now, consider the following term that is related with discriminator D,</p><formula xml:id="formula_40">I 1 = k p=1 |Vp(g i )| q=1 h i p,q − h i p,q 2 + x i p,q − x i p,q 2 / k p=1 r p</formula><p>Firstly, we denote Lp,q as the in-degree graph Laplacian derived with the subgraph g q of g i centred at q ∈ V p (g i ). Different from the encoder, we utilize every node's hidden embedding in the computation. Specifically, g q is obtained by retrieving links in g i that connects to the qth node in the pth layer. This is a principle submatrix of the in-degree graph Laplacian Lgi of g i .</p><p>Just as defined in §A.1, we denote [h</p><formula xml:id="formula_41">(p)</formula><p>q ] as the pth layer GCN embedding for nodes in hop 0 to hop ∈ [0, p] of g q . Note that in this case, [h</p><formula xml:id="formula_42">(p) q ] 0 = h (p) q , which is one row of [h (p)</formula><p>i ], corresponding to the q-th node in the neighborhood. So we may write the first term in I 1 as</p><formula xml:id="formula_43">k p=1 |Vp(g i )| q=1 h (p) q − h<label>(p) q where h (p)</label></formula><p>q := h i p,q for short. In this way, we regard each node q ∈ V p (g i ) as the centre node, which allows us to unfold the convolution similarly as expanding the I 2 term. Now, for any q ∈ V k (g i ), i.e. when p = k, we apply Lemma A.3 similarly as for z i − z i 2 . Then,</p><formula xml:id="formula_44">h (k) q − h (k) q ≤ (γ σ c θ c L) k c x + (γ σ c θ c L) k + 1 γ σ c θ c L − 1 γ σ c θ c h φ( Lk,q ) − φ( Lk,q ) 2 ≤ Ck ( Mk c x + φ( Lgi ) − φ( Lg i ) 2 )</formula><p>where Lp,q is the principle submatrix of Lgi and Lemma A.1 can be applied iin the last inequality. In addition, Ck and Mk are taken to be the maximum over any q ∈ V k (g i ). In general, for q ∈ V p (g i ), 0 &lt; p &lt; k, we have</p><formula xml:id="formula_45">h (p) q − h (p) q 2 ≤ Cp ( Mp c x + φ( Lgi ) − φ( Lg i ) 2 )</formula><p>Take a common upper bound for Cp , Mp over 0 &lt; p ≤ k, we obtain</p><formula xml:id="formula_46">k p=1 |Vp(g i )| q=1 h (p) q − h (p) q / k p=1 r p ≤ C( M c x + Lgi − Lg i 2 ) = C( M c x + λ max ( Lgi − Lg i ) 1/2 )</formula><p>In addition, for the other half of I 1 , we have</p><formula xml:id="formula_47">k p=1 |Vp(g i )| q=1 x i p,q − x i p,q 2 / k p=1 r p ≤ sup i sup p,q x i p,q − x i p,q 2 = δ x = c x /( k p=1 r p ) 1/2</formula><p>We can write B in terms of weights C and C, which is dependant on the activation function σ, k and sup i λ max (L gi ). Hence,</p><formula xml:id="formula_48">B ≤ (CM + C M + 1/( k p=1 r p ))c x + Cλ max (L gi − L g i ) + Cλ max ( Lgi − Lg i ) = M c x + Cλ max (L gi − L g i ) + Cλ max ( Lgi − Lg i )</formula><p>Note that the derived I 1 for B is the same for A, since the node features, edge information and embedded features are bounded by separate terms in Eq. 8. The only difference is given by I 2 , where a different set of graph Laplacians L gj , L g j and node features (x j ) are used. Therefore,</p><formula xml:id="formula_49">A ≤ M c x + Cλ max (L gj − L g j ) + Cλ max ( Lgi − Lg i )</formula><p>Hence the result.</p><p>Note that, our view of structural information is closely related to graph kernels <ref type="bibr" target="#b3">[4]</ref> and graph perturbation <ref type="bibr" target="#b54">[55]</ref>. Specifically, our Definition on k-hop ego-graph is motivated by the concept of k-layer expansion sub-graph in <ref type="bibr" target="#b3">[4]</ref>. However, <ref type="bibr" target="#b3">[4]</ref> used the Jensen-Shannon divergence between pairwise representations of sub-graphs to define a depth-based sub-graph kernel, while we depict G as samples of its ego-graphs. In this sense, our view is related to the setup in <ref type="bibr" target="#b54">[55]</ref>, which derived a uniform algorithmic stability bound of a 1-layer GNN under 1-hop structure perturbation of G.</p><p>In the setting of domain adaptation, <ref type="bibr" target="#b6">[7]</ref> draws a connection between the difference in the distributions of source and target domains and the model transferability, and learns a transferable model by minimizing such distribution differences. This coincides with our approach of connecting the structure difference of two graphs in terms of k-hop subgraph distributions and the transferability of GNNs in the above theory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Model Details</head><p>Following the same notations used in the main paper, EGI consists of a GNN encoder Ψ and a GNN discriminator D. In general, the GNN encoder Ψ and discriminator D can be any existing GNN models. For each ego-graph and its node features {g i , x i }, the GNN encoder returns node embedding z i for the center node v i . As mentioned in Eq. 2 in the main paper, the GNN discriminator D makes edge-level predictions as follows,</p><formula xml:id="formula_50">D(e ṽv |h q p,q , x i p,q , z i ) = σ U T • τ W T [h q p,q ||x i p,q ||z i ] ,<label>(12)</label></formula><p>where e ṽv ∈ E(g i ) and h q p,q ∈ R d (simplified as h p in the main paper, same for x i p,q = x q ) is the representation for edge e ṽv between node v p−1,q in hop p − 1 and v p,q in hop p. The prediction relies on the combination of center node embedding z i , destination node feature x i p,q and source node representation h q p,q . And now we describe how we calculate the source node representation in D. To obtain the source node representation representations h, the GNN in discriminator D operates on a reversed ego-graph gi while encoder Ψ performs forward propagation on g i . The discriminator GNN starts from the center node v i and compute the hidden representation m p−1,q for node v p−1,q at each hop. We denote the source node at p − 1 hop as q ∈ Qp,q , Qp,q = {q : v p−1,q ∈ V p−1 (g i ), e (p−1,q)(p,q) ∈ E(g i )}. Although h p,q is calculated as node embedding, in reversed ego graph gi , node only has one incoming edge. Thus, we can also interpret h q p,q as the edge embedding as it combines source node's hidden representation m p−1,q and destination node features x p,q as follows, Sample M ego-graphs {(g 1 , x 1 ), ..., (g M , x M )} from empirical distribution P without replacement, and obtained their positive and negative node embeddings z i , z i through Ψ</p><formula xml:id="formula_51">h q p,q = ReLU W T p m p−1,q + x i p,q , m p−1,q = 1 | Qp−1,q | q ∈ Qp−1q h q p−1,q<label>(13)</label></formula><formula xml:id="formula_52">z i = Ψ(g i , x i ), z i = Ψ(g i , x i ),</formula><p>/* Initialize positive and negative expectation in Eq. 1 in the main paper*/ for e (p−1,q)(p,q) ∈ E(g i ) do 9 generate source node embedding h q p,q in Eq. 13 ;</p><p>10 When p = 1, every edge origins from the center node v i and m 0,q is the center node feature x vi . Note that we the elaborated aggregation rule is equivalent as layer-wise propagation rules (different in-degree matrix for each h p,q ) of EGI earlier in §A.1.</p><formula xml:id="formula_53">E pos = E pos + σ U T • τ W T [h q p,q ||x i p,q ||z i ] 11 E neg = E neg + σ U T • τ W T [h q p,q ||x i p,q ||z i ]</formula><p>In every batch, we sample a set of ego-graphs and their node features {g i , x i }. During the forward pass of encoder Ψ, it aggregates from neighbor nodes to the center node v i . Then, the discriminator calculates the edge embedding in Eq. 13 from center node v i to its neighbors and make edge-level predictions-fake or true. Besides training framework Figure <ref type="figure" target="#fig_1">2</ref> in the main paper, the algorithm EGI is depicted in Algorithm 1.</p><p>We implement our method and all of the baselines using the same encoders Ψ: 2-layer GIN <ref type="bibr" target="#b59">[60]</ref> for synthetic and role identification experiments, 2-layer GraphSAGE <ref type="bibr" target="#b14">[15]</ref> for the relation prediction experiments. We set hidden dimension as 32 for both synthetic and role identification experiments, For relation prediction fine-tuning task, we set hidden dimension as 256. We train EGI in a mini-batch fashion since all the information for encoder and discriminators are within the k-hop ego-graph g i and its features x i . Further, we conduct neighborhood sampling and set maximum neighbors as 10 to speed up the parrallel training. The space and time complexity of EGI is O(BN K ), where B is the batch size, N is the number of the neighbors and k is the number of hops of ego-graphs. Notice that both the encoder Ψ and discriminator D propagate message on the k-hop ego-graphs, so the extra computation cost of D compared with a common GNN module is a constant multiplier over the original one. The scalability of EGI on million scale YAGO network is reported in section C.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1 Transfer Learning Settings</head><p>The goal of transfer learning is to train a model on a dataset or task, and use it on another. In our graph learning setting, we focus on training the model on one graph and using it on another. In particular, we focus our study on the setting of unsupervised-transfering, where the model learned on the source graph is directly applied on the target graph without fine-tuning. We study this setting because it allows us to directly measure the transferability of GNNs, which is not affected by the fine-tuning process on the target graph. In other words, the fine-tuning process introduces significant uncertainty to the analysis, because there is no guarantee on how much the fine-tuned GNN is different from the pre-trained one. Depending on specific tasks and labels distributions on the two graphs, the fine-tuned GNN might be quite similar to the pre-trained one, or it can be significantly different. It is then very hard to analyze how much the pre-trained GNN itself is able to help. Another reason is about efficiency. The fine-tuning of GNNs requires the same environment set-up and computation resource as training GNNs from scratch, although it may take less training time eventually if pre-training is effective. It is intriguing if this whole process can be eliminated when we guarantee the performance with unsupervised-transfering.</p><p>In our experiments, we also study the setting of transfer learning with fine-tuning, particularly on the real-world large-scale YAGO graphs. Since we aim to study the general transferability of GNNs not bounded to specific tasks, we always pre-train GNNs with the unsupervised pre-training objective on source graphs. Then we enable two types of fine-tuning. The first one is post-fine-tuning (L = L s ), where the pre-trained GNNs are fine-tuned with the supervised task specific objective L s on the target graphs. The second on is joint-fine-tuning (L = L s + L u ), where pre-training is the same, but fine-tuning is done w.r.t. both the pre-training objective L u and task specific objective L s on target graphs in a semi-supervised learning fashion. The unsupervised pre-training objective L u of EGI is Algorithm 1, while those of the compared algorithms are as defined in their papers. The supervised fine-tuning objective L s is the same as in the DistMult paper <ref type="bibr" target="#b60">[61]</ref> for all algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Additional Experiment Details</head><p>C.1 Synthetic Experiments Data. As mentioned in the main paper, we use two traditional graph generation models for synthetic data generation: (1) barabasi-albert graph <ref type="bibr" target="#b4">[5]</ref> and (2) forest-fire graph <ref type="bibr" target="#b31">[32]</ref>. We generate 40 graphs each with 100 nodes with each model. We control the parameters of two models to generate two graphs with different ego-graph distributions. Specifically, we set the number of attached edges as 2 for barabasi-albert model and set p forward = 0.4, p backward = 0.3 for forest-fire model. In Figure <ref type="figure" target="#fig_9">4a</ref> and 4b, we show example graphs from two families in our datasets. They have the same size but different appearance which leads to our study on the transferability gap ∆ D (F, F) and ∆ D (B, F) in Table <ref type="table">1</ref> in the main paper. The accuracy of this task defined as the percentage of nearest neighbors for target node in the embedding space z = Ψ(•) that are structure-equivalent, i.e. #correct k-nn neighbors / #ground truth equivalent nodes. Results. The structural equivalence label is obtained by a 2-hop WL-test <ref type="bibr" target="#b57">[58]</ref> on the ego-graphs. If two nodes have the same 2-hop ego-graphs, they will be assigned the same label. In the example of Figure <ref type="figure" target="#fig_8">4c</ref>, the nodes labeled with same number (e.g. 2, 4) have the isomorphic 2-hop ego-graphs. Note that this task is exactly solvable when node features and GNN architectures are powerful enough like GIN <ref type="bibr" target="#b59">[60]</ref>. In order to show the performance difference among different methods, we set the length of one-hot node degree encoding to 3 (all nodes with degrees higher than 3 have the same encoding). Here, we present the performance comparison with different length of degree encodings (d) in Table <ref type="table" target="#tab_3">4</ref>. When the capacity of initial node features is high (d=10), the transfer learning gap diminishes between different methods and different graphs because the structural equivalence problem can be exactly solved by neighborhood aggregations. However, when the information in initial node features is limited, the advantage of EGI in learning and transfering the graph structural information is obvious. In Table <ref type="table" target="#tab_4">5</ref>, we also show the performance of different transferable and non-transferable features discussed after Definition 4.3 in the main paper, i.e. node embedding <ref type="bibr" target="#b41">[42]</ref> and random feature vectors. The observation is similar with Table <ref type="table">1</ref> in the main paper: the transferable feature can reflect the performance gap between similar and dissimilar graphs while non-transferable features can not.</p><p>In both Table <ref type="table" target="#tab_3">4</ref> and 8 here as well as Table <ref type="table">1</ref> in the main paper, we report the structural difference among graphs in the two sets ( d) calculated w.r.t. the term ∆ D (G a , G b ) on the RHS of Theorem 4.1 in the main paper. This indicates that the Forest fire graphs are structurally similar to the other Forest fire graphs, while less similar to the Barabasi graphs, as can be verified from Figure <ref type="figure" target="#fig_9">4a</ref> and 4b. Our bound in Theorem 4.1 then tells us that the GNNs (in particular, EGI) should be more transferable in the F-F case than B-F. This is verified in Table <ref type="table" target="#tab_3">4</ref> and 5 when using the transferable node features of degree encoding with limited dimension (d=3) as well as DeepWalk embedding, as EGI pre-trained on Forest fire graphs performs significantly better on Forest fire graphs than on Barabasi graphs (with +0.094 and +0.057 differences, respectively). Data. We report the number of nodes, edges and classes for both airport and gene dataset. The numbers for the Gene dataset are the aggregations of the total 52 gene networks in the dataset. For the three airport networks, Figure <ref type="figure" target="#fig_10">5</ref> shows the power-law degree distribution on log-log scale. The class labels are between 0 to 3 reflecting the level of the airport activities <ref type="bibr" target="#b44">[45]</ref>. For the Gene dataset, we matched the gene names in the TCGA dataset <ref type="bibr" target="#b67">[68]</ref> to the list of transcription factors on wikipedia <ref type="foot" target="#foot_3">5</ref> . 75% of the genes are marked as 1 (transcription factors) and some gene graphs have extremely imbalanced class distributions. So we conduct experiments on the relatively balanced gene graphs   Results. As we can observe from Figure <ref type="figure" target="#fig_10">5</ref>, the three airport graphs have quite different sizes and structures (e.g., regarding edge density and connectivity pattern). Thus, the absolute classification accuracy in both Table <ref type="table" target="#tab_1">2</ref> in the main paper and Table <ref type="table" target="#tab_7">8</ref> here varies across different graphs. However, as we mention in the main paper, the structural difference we compute based on Eq. 5 in Theorem 3.1 is close among the Europe-USA and Europe-Brazil graph pairs (0.869 and 0.851), which leads to close transferability of EGI from Europe to USA and Brazil. This indicates the effectiveness of our view over essential structural information. We also provide detailed standard deviations of Table <ref type="table" target="#tab_1">2</ref> (main paper) when using node degree as features. Besides that, the results present in Table <ref type="table" target="#tab_7">8</ref> are the accuracy of GNNs directly trained and evaluated on each network without transfering. Therefore, only the Europe column has the same results as in Table <ref type="table" target="#tab_1">2</ref> in the main paper, while the USA and Brazil columns can be regarded as providing an upper-bound performance of GNN transfered from other graphs. As we can see, EGI gives the closest results from Table <ref type="table" target="#tab_1">2</ref> (main paper) to Table <ref type="table" target="#tab_7">8</ref> here, demonstrating the its plausible transferability. The scores are so close, showing a possibility to skip fine-tuning when the source and target graphs are similar enough. Also note that, although the variances are pretty large (which is also observed in other works like <ref type="bibr" target="#b44">[45]</ref> since the networks are small), our t-tests have shown the improvements of EGI to be significant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.3 Real-world large-scale Relation Prediction Experiments</head><p>Data. As shown in Table <ref type="table" target="#tab_8">9</ref>, the source graph we use to pre-train GNNs is the full graph cleaned from the YAGO dump <ref type="bibr" target="#b48">[49]</ref>, where we assume the relations among entities are unknown. The target graph we use is a subgraph uniformed sampled from the same YAGO dump (we sample the nodes and then include all edges among the sampled nodes). The similar ratio between number of nodes and edges can be observed in Table <ref type="table" target="#tab_8">9</ref>. On the target graph, we also have the access to 24 different relations <ref type="bibr" target="#b47">[48]</ref> such as isAdvisedBy, isMarriedTo and so on. Such relation labels are still relevant to the graph structures, but the relevance is lower compared with the structural role labels. We use the 256-dim degree encoding as node features for pre-training on the source graph, then we use the 128-dim positional embedding generated by LINE <ref type="bibr" target="#b50">[51]</ref> for fine-tuning on the target graph, to explicitly make the features differ across source and target graphs.</p><p>Results. In Section B.1, we introduced two different types of fine-tuning, i.e., post-fine-tuning and joint-fine-tuning. For both types of fine-tuning, we add one feature encoder E before feeding it into the GNNs for two purposes. First, the target graph fine-tuning feature usually has different dimensions with the pre-training features, such as the node degree encoding we use. Second, the semantics and distributions of fine-tuning features can be different from pre-training features. The feature encoder aims to bridge the gap between feature difference in practice. The supervised loss used in this experiment is the same as in DistMult <ref type="bibr" target="#b60">[61]</ref>. In particular, the bilinear score function is calculated as s(h, r, t) = z T h M r z t , where M r is a diagonal matrix for each relation r, z h and z t the the embedding of GNN encoder Ψ for head and tail entities. The experiments were run on GTX1080 with 12G memories. We report the average training time per epoch of our algorithm in pre-training and fine-tuning stage in Table <ref type="table" target="#tab_8">9</ref> as well. The pre-training and fine-tuning takes about 40 epochs and 10 epochs to converge, respectively. In Table <ref type="table" target="#tab_8">9</ref>, we also present the per-epoch training time of EGI. EGI takes about 338 seconds per epoch for optimizing the ego-graph information maximization objective on YAGO-source. As we can see, fine-tuning also takes significant time compared to pre-training, which strengthens our arguments about avoiding or reducing fine-tuning through structural analysis. We implement all baselines within the same pipeline, and the running times are all in same scale.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.4 Parameter study</head><p>In this section, we provide additional parameter analysis towards proposed EGI model -choices of k, and efficiency study on EGI gap ∆ D -sampling frequencies.</p><p>Performance of different size of ego-graphs. In our Theorem 3.1 and EGI algorithm (Eq. 1), number of hops k determines the size of ego-graphs. In principle, k may affect the transferability of EGI in two ways: (1) larger k may make the EGI model (both center node encoder Ψ and neighbor node encoder Φ) more expressive (better precision) and the EGI gap ∆ D more accurate (better predictiveness); (2) However, the GNN encoders may suffer from the over-smoothing problem and the computations may suffer from more noises. Therefore, it is hard to determine the influence of k without empirical analysis. As we can observe in , when k = 1 or k = 3, the classification accuracy of the source graph is worse than k = 2, likely because the GNN encoder is either less powerful or over-smoothed. As a result, k = 2 obtains the best transferability to both the USA and Brazil networks. When k = 3, ∆ D likely accounts for too subtle/noisy ego-graph differences and may become less effective in predicting the transferability. Therefore, we choose k = 2 to conduct experiments in main paper.</p><p>Precision of ∆ D under different sampling frequencies. In Table <ref type="table" target="#tab_10">11</ref>, we present the estimated ∆ D versus sampling frequency for 10 runs on airport dataset. A theoretical study on its convergence could be an interesting future direction. As we can observe, large sample frequency leads to more accurate and robust estimation of ∆ D . Between Europe and USA, although 100 pairs of ego-graphs are only equivalent as 2.1% of the total pair-wise enumerations, the estimated ∆ D is pretty close. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Overview of our GNN transfer learning framework: (1) we represent the toy graph as a combination of its 1-hop ego-graph and node feature distributions; (2) we design a transferable GNN regarding the capturing of such essential graph information; (3) we establish a rigorous guarantee of GNN transferability based on the node feature requirement and graph structure difference.</figDesc><graphic url="image-1.png" coords="2,147.60,72.00,316.80,165.05" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The overall EGI training framework.</figDesc><graphic url="image-3.png" coords="4,213.93,363.91,66.16,69.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Theorem 3.1 naturally instantiates our insight about the correspondence between structural similarity and GNN transferability. It allows us to tell how well an EGI trained on G a can work on G b by only checking the local graph Laplacians of G a and G b without actually training any model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Transfer learning performance of role identification on the Gene dataset. We visualize the source graph G0 and two example target graphs that are relatively more different (G4) or similar (G2) with G0.</figDesc><graphic url="image-4.png" coords="10,107.24,75.29,120.72,75.58" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>any i = 1, • • • , n instead of the whole of G. Precisely, p-hop of subgraph corresponds to the = (k − p)th layer in the model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Algorithm 1 :</head><label>1</label><figDesc>Pseudo code for training EGI 1 The GNN encoder Ψ and the GNN discriminator D, k-hop ego graph and features {g i , x i }; 2 /* EGI-training starts */ 3 while L EGI not converges do 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>5 E 6 for p = 1 to k do 7 /</head><label>567</label><figDesc>pos = 0, E neg = 0 * Compute JSD on edges at each hop*/ 8</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>15 L</head><label>15</label><figDesc>EGI = E neg − E pos 16 /* Update Ψ, D */ 17 θ Ψ + ← − −∇ Ψ L EGI , θ D + ← − −∇ D L EGI 18 end</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Visualizations of the graphs and labels we use in the synthetic experiments.</figDesc><graphic url="image-8.png" coords="21,110.49,458.30,118.80,89.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>( a )</head><label>a</label><figDesc>Europe airport log-log plot (b) USA airport log-log plot (c) Brazil airport log-log plot</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Visualizations of power-law degree distribution on three airport dataset.</figDesc><graphic url="image-11.png" coords="23,110.49,133.34,126.72,95.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Results of role identification with direct-transfering on the Airport dataset. We report mean and standard deviation over 100 runs. The scores marked with * * passed t-test with p &lt; 0.01 over the second runners.</figDesc><table><row><cell>Method</cell><cell>Europe</cell><cell>Airport [45] USA</cell><cell>Brazil</cell></row><row><cell>features</cell><cell>0.528±0.052</cell><cell>0.557±0.028</cell><cell>0.671±0.089</cell></row><row><cell>GIN (random-init)</cell><cell>0.558±0.050</cell><cell>0.616±0.030</cell><cell>0.700±0.082</cell></row><row><cell>GVAE (GIN)</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Performance of few-shot relation prediction on YAGO. The scores marked with * * passed t-test with p &lt; 0.01 over the second best results.</figDesc><table><row><cell>Method</cell><cell cols="2">post-fine-tuning AUROC MRR</cell><cell cols="2">joint-fine-tuning AUROC MRR</cell></row><row><cell>No pre-train</cell><cell>0.687±0.002</cell><cell>0.596±0.003</cell><cell>N.A.</cell><cell>N.A.</cell></row><row><cell>GVAE</cell><cell>0.701±0.003</cell><cell>0.601±0.007</cell><cell>0.679±0.004</cell><cell>0.568±0.008</cell></row><row><cell>DGI</cell><cell>0.689±0.011</cell><cell>0.586±0.025</cell><cell>0.688±0.012</cell><cell>0.537±0.023</cell></row><row><cell>MaskGNN</cell><cell>0.713±0.009</cell><cell>0.631±0.015</cell><cell>0.712±0.005</cell><cell>0.560±0.010</cell></row><row><cell>ContextPredGNN</cell><cell>0.692±0.030</cell><cell>0.662±0.030</cell><cell>0.705±0.011</cell><cell>0.575±0.021</cell></row><row><cell>GMI</cell><cell>0.728±0.005</cell><cell>0.625±0.009</cell><cell>0.721±0.007</cell><cell>0.643±0.011</cell></row><row><cell>Structural Pre-train</cell><cell>OOM</cell><cell>OOM</cell><cell>OOM</cell><cell>OOM</cell></row><row><cell>MVC</cell><cell>OOM</cell><cell>OOM</cell><cell>OOM</cell><cell>OOM</cell></row><row><cell>EGI</cell><cell cols="3">0.739± 0.009  *  *  0.670±0.014 0.787 ± 0.011</cell><cell></cell></row></table><note>* * 0.729 ± 0.016 * *</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 :</head><label>4</label><figDesc>Synthetic experiments of identifying structural-equivalent nodes with different degree encoding dimensions.</figDesc><table><row><cell>Method</cell><cell cols="6">#dim degree encoding d = 3 # dim degree encoding d = 10 structural difference F-F B-F δ(acc.) F-F B-F δ(acc.) ∆ D (F,F) ∆ D (B,F)</cell></row><row><cell cols="2">GCN (untrained) 0.478 0.478</cell><cell>/</cell><cell>0.940 0.940</cell><cell>/</cell><cell></cell><cell></cell></row><row><cell>GIN (untrained)</cell><cell>0.572 0.572</cell><cell>/</cell><cell>0.940 0.940</cell><cell>/</cell><cell></cell><cell></cell></row><row><cell>VGAE (GIN)</cell><cell>0.498 0.432</cell><cell>+0.066</cell><cell>0.939 0.937</cell><cell>0.002</cell><cell>0.752</cell><cell>0.883</cell></row><row><cell>DGI (GIN)</cell><cell>0.578 0.591</cell><cell>-0.013</cell><cell>0.939 0.941</cell><cell>-0.002</cell><cell></cell><cell></cell></row><row><cell>EGI (GIN)</cell><cell>0.710 0.616</cell><cell>+0.094</cell><cell>0.942 0.942</cell><cell>0</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 :</head><label>5</label><figDesc>Synthetic experiments of identifying structural-equivalent nodes with different transferable and nontransferable features.</figDesc><table><row><cell>Method</cell><cell cols="2">DeepWalk embedding F-F B-F δ(acc.)</cell><cell cols="3">random vectors F-F B-F δ(acc.) ∆ D (F,F) ∆ D (B,F) structural difference</cell></row><row><cell cols="2">GCN (untrained) 0.658 0.658</cell><cell>/</cell><cell>0.246 0.246</cell><cell>/</cell></row><row><cell>GIN (untrained)</cell><cell>0.663 0.663</cell><cell>/</cell><cell>0.520 0.520</cell><cell>/</cell></row><row><cell>GVAE (GIN)</cell><cell cols="3">0.713 0.659 +0.054 0.266 0.264</cell><cell>0.002</cell><cell>0.752</cell><cell>0.883</cell></row><row><cell>DGI (GIN)</cell><cell cols="4">0.640 0.613 +0.027 0.512 0.576 -0.064</cell></row><row><cell>EGI (GIN)</cell><cell cols="4">0.772 0.715 +0.057 0.507 0.485 +0.022</cell></row><row><cell cols="4">C.2 Real-world Role Identification Experiments</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 :</head><label>6</label><figDesc>Overall Dataset Statistics Figure2in the main paper). Both datasets do not have organic node attributes. The role-based node labels are highly relevant to their local graph structures, but are not trivially computable such as from node degrees.</figDesc><table><row><cell cols="4">Dataset # Nodes # Edges # Classes</cell></row><row><cell>Europe</cell><cell>399</cell><cell>5,995</cell><cell>4</cell></row><row><cell>USA</cell><cell>1,190</cell><cell>13,599</cell><cell>4</cell></row><row><cell>Brazil</cell><cell>131</cell><cell>1,074</cell><cell>4</cell></row><row><cell>Gene</cell><cell>9,228</cell><cell>57,029</cell><cell>2</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7 :</head><label>7</label><figDesc>Results of role identification with direct-transfering on the Airport dataset (Table2, main paper). The performance reported (%) are the average over 100 runs. We set all node features same as non-transferable features.</figDesc><table><row><cell>Method</cell><cell cols="6">Europe (source) node degree same feat. node degree same feat. node degree same feat. USA (target) Brazil (target)</cell></row><row><cell>features</cell><cell>52.81</cell><cell>20.59</cell><cell>55.67</cell><cell>20.22</cell><cell>67.11</cell><cell>19.63</cell></row><row><cell>GIN (untrained)</cell><cell>55.75</cell><cell>53.88</cell><cell>61.56</cell><cell>58.32</cell><cell>70.04</cell><cell>70.37</cell></row><row><cell>GVAE</cell><cell>53.90</cell><cell>21.12</cell><cell>55.51</cell><cell>22.39</cell><cell>66.33</cell><cell>17.70</cell></row><row><cell>DGI</cell><cell>57.75</cell><cell>22.13</cell><cell>54.90</cell><cell>21.76</cell><cell>67.93</cell><cell>18.78</cell></row><row><cell>MaskGNN</cell><cell>56.37</cell><cell>55.53</cell><cell>60.82</cell><cell>54.64</cell><cell>66.71</cell><cell>74.54</cell></row><row><cell>ContextPredGNN</cell><cell>52.69</cell><cell>49.95</cell><cell>50.38</cell><cell>54.75</cell><cell>62.11</cell><cell>70.66</cell></row><row><cell>Structural Pre-train</cell><cell>56.00</cell><cell>53.83</cell><cell>62.17</cell><cell>57.49</cell><cell>68.78</cell><cell>72.41</cell></row><row><cell>MVC</cell><cell>53.16</cell><cell>51.69</cell><cell>59.66</cell><cell>50.42</cell><cell>66.07</cell><cell>61.55</cell></row><row><cell>GMI</cell><cell>58.12</cell><cell>46.25</cell><cell>59.28</cell><cell>47.64</cell><cell>73.07</cell><cell>62.96</cell></row><row><cell>EGI (GIN)</cell><cell>59.15  *  *</cell><cell>54.98</cell><cell>64.55  *  *</cell><cell>57.40</cell><cell>73.15</cell><cell>70.00</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8 :</head><label>8</label><figDesc>Role identification that identifies structurally similar nodes on real-world networks. The performance reported are the average and standard deviation for 10 runs. Our classification accuracy on three datasets all passed the t-test (p&lt;0.01) with the second best result in the table. 69% ± 6.12% 56.22% ± 4.05% 58.52% ± 10.18% Structural Pre-train 56.00% ± 4.58% 62.29% ± 3.51% 71.48% ± 9.38 % MVC 53.16% ± 4.07% 62.81 % ± 3.12% 67.78 % ± 4.79% GMI 58.12 % ± 5.28% 63.36 % ± 2.92% 73.70% ± 4.21% EGI (GIN) 59.15% ± 4.44% 65.88% ± 3.65% 74.07% ± 5.49%</figDesc><table><row><cell>Method</cell><cell>Europe</cell><cell>Airport [45] USA</cell><cell>Brazil</cell></row><row><cell>node degree</cell><cell cols="2">52.81% ± 5.81% 55.67% ± 3.63%</cell><cell>67.11% ± 7.58%</cell></row><row><cell cols="3">GCN (random-init) 52.96% ± 4.51% 56.18% ± 3.82%</cell><cell>55.93% ± 1.38%</cell></row><row><cell>GIN (random-init)</cell><cell cols="2">55.75% ± 5.84% 62.77% ± 2.35%</cell><cell>69.26% ± 9.08%</cell></row><row><cell>GVAE (GIN)</cell><cell cols="2">53.90% ± 4.65% 58.99% ± 2.44%</cell><cell>55.56% ± 6.83%</cell></row><row><cell>DGI (GIN)</cell><cell cols="2">57.75% ± 4.47% 62.44% ± 4.46%</cell><cell>68.15% ± 6.24%</cell></row><row><cell>Mask-GIN</cell><cell cols="3">56.37% ± 5.07% 63.78% ± 2.79% 61.85% ± 10.74%</cell></row><row><cell>ContextPred-GIN</cell><cell>52.</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 9 :</head><label>9</label><figDesc>dataset statistics and running time of EGI</figDesc><table><row><cell>Dataset</cell><cell># Nodes</cell><cell># Edges</cell><cell cols="3"># Relations # Train/Test Training time per epoch</cell></row><row><cell cols="3">YAGO-Source 579,721 2,191,464</cell><cell>/</cell><cell>/</cell><cell>338 seconds</cell></row><row><cell cols="2">YAGO-Target 115,186</cell><cell>409,952</cell><cell>24</cell><cell>480/409,472</cell><cell>134 seconds</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 10 :</head><label>10</label><figDesc>Comparison of EGI with different k. Accuracy and EGI gap ∆D are reported.</figDesc><table><row><cell></cell><cell>Europe (source)</cell><cell cols="2">USA (target)</cell><cell cols="2">Brazil (target)</cell></row><row><cell></cell><cell>acc.</cell><cell>acc.</cell><cell>∆ D</cell><cell>acc.</cell><cell>∆ D</cell></row><row><cell>EGI (k=1)</cell><cell>58.25</cell><cell cols="4">60.08 0.385 60.74 0.335</cell></row><row><cell>EGI (k=2)</cell><cell>59.15</cell><cell cols="4">64.55 0.869 73.15 0.851</cell></row><row><cell>EGI (k=3)</cell><cell>57.63</cell><cell cols="4">64.12 0.912 72.22 0.909</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 11 :</head><label>11</label><figDesc>EGI gap ∆D on airport dataset with different sampling frequencies. Sampling frequency ∆ D (Europe, USA) ∆ D (Europe, Brazil)</figDesc><table><row><cell>100 pairs</cell><cell>0.872±0.039</cell><cell>0.854±0.042</cell></row><row><cell>1000 pairs</cell><cell>0.859±0.012</cell><cell>0.848±0.007</cell></row><row><cell>All pairs</cell><cell>0.869 ±0.000</cell><cell>0.851 ±0.000</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0">In the experiments, we show our model to be generalizable to the more practical settings with task-specific pre-training and fine-tuning, while the study of rigorous bound in such scenarios is left as future work.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_1">Later in section 3.2, we will discuss the equivalence between MI(gi, zi) and MI((gi, xi), zi) when node feature is structure-respecting.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_2">The downstream tasks are unspecified because we aim to study the general transferability of GNNs that is not bounded to specific tasks. Nevertheless, we assume the tasks to be relevant to graph structures.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_3">https://en.wikipedia.org/wiki/Transcription_factor</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments and Disclosure of Funding</head><p>Research was supported in part by US DARPA KAIROS Program No. FA8750-19-2-1004, SocialSim Program No. W911NF-17-C-0099, and INCAS Program No. HR001121C0165, National Science Foundation IIS-19-56151, IIS-17-41317, and IIS 17-04532, and the Molecule Maker Lab Institute: An AI Research Institutes program supported by NSF under Award No. 2019897. Chao Zhang is supported NSF IIS-2008334, IIS-2106961, and ONR MURI N00014-17-1-2656. We would like to thank AWS Machine Learning Research Awards program for providing computational resources for the experiments in this paper. This work is also partially supported by the internal funding and GPU servers provided by the Computer Science Department of Emory University. Any opinions, findings, and conclusions or recommendations expressed herein are those of the authors and do not necessarily represent the views, either expressed or implied, of DARPA or the U.S. Government.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Statistical mechanics of complex networks</title>
		<author>
			<persName><forename type="first">Réka</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Albert-László</forename><surname>Barabási</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reviews of modern physics</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">47</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast algorithms for approximate semidefinite programming using the multiplicative weights update method</title>
		<author>
			<persName><forename type="first">Sanjeev</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elad</forename><surname>Hazan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Satyen</forename><surname>Kale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
				<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="339" to="348" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Learning to extrapolate knowledge: Transductive few-shot out-of-graph link prediction</title>
		<author>
			<persName><forename type="first">Jinheon</forename><surname>Baek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dong</forename><surname>Bok Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sung</forename><forename type="middle">Ju</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fast depth-based subgraph kernels for unattributed graphs</title>
		<author>
			<persName><forename type="first">Lu</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Edwin</forename><forename type="middle">R</forename><surname>Hancock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="233" to="245" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Emergence of scaling in random networks</title>
		<author>
			<persName><forename type="first">Albert-László</forename><surname>Barabási</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Réka</forename><surname>Albert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">science</title>
		<imprint>
			<biblScope unit="volume">286</biblScope>
			<biblScope unit="issue">5439</biblScope>
			<biblScope unit="page" from="509" to="512" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Laplacian eigenmaps and spectral techniques for embedding and clustering</title>
		<author>
			<persName><forename type="first">Mikhail</forename><surname>Belkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Partha</forename><surname>Niyogi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="585" to="591" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Analysis of representations for domain adaptation</title>
		<author>
			<persName><forename type="first">Shai</forename><surname>Ben-David</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Blitzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Koby</forename><surname>Crammer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fernando</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="137" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">Karsten</forename><surname>Borgwardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elisabetta</forename><surname>Ghisu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Felipe</forename><surname>Llinares-López</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O'</forename><surname>Leslie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bastian</forename><surname>Bray</surname></persName>
		</author>
		<author>
			<persName><surname>Rieck</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2011.03854</idno>
		<title level="m">Graph kernels: State-of-the-art and future challenges</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Spectral networks and locally connected networks on graphs</title>
		<author>
			<persName><forename type="first">Joan</forename><surname>Bruna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wojciech</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arthur</forename><surname>Szlam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yann</forename><surname>Lecun</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Fastgcn: fast learning with graph convolutional networks via importance sampling</title>
		<author>
			<persName><forename type="first">Jie</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tengfei</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cao</forename><surname>Xiao</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Spectral graph theory</title>
		<author>
			<persName><forename type="first">Fan</forename><surname>Rk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chung</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Fan</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Graham</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
			<publisher>American Mathematical Soc</publisher>
			<biblScope unit="volume">92</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Convolutional neural networks on graphs with fast localized spectral filtering</title>
		<author>
			<persName><forename type="first">Michaël</forename><surname>Defferrard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xavier</forename><surname>Bresson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pierre</forename><surname>Vandergheynst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="3844" to="3852" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Bert: Pre-training of deep bidirectional transformers for language understanding</title>
		<author>
			<persName><forename type="first">Jacob</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming-Wei</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenton</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kristina</forename><surname>Toutanova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="4171" to="4186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">node2vec: Scalable feature learning for networks</title>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="855" to="864" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Inductive representation learning on large graphs</title>
		<author>
			<persName><forename type="first">Will</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhitao</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1024" to="1034" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Wavelets on graphs via spectral graph theory</title>
		<author>
			<persName><forename type="first">Pierre</forename><surname>David K Hammond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rémi</forename><surname>Vandergheynst</surname></persName>
		</author>
		<author>
			<persName><surname>Gribonval</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACHA</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="129" to="150" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Contrastive multi-view representation learning on graphs</title>
		<author>
			<persName><forename type="first">Kaveh</forename><surname>Hassani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amir</forename><surname>Hosein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Khasahmadi</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
				<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="4116" to="4126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName><forename type="first">Kaiming</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiangyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shaoqing</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="770" to="778" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Rolx: structural role extraction &amp; mining in large graphs</title>
		<author>
			<persName><forename type="first">Keith</forename><surname>Henderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Gallagher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tina</forename><surname>Eliassi-Rad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hanghang</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sugato</forename><surname>Basu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leman</forename><surname>Akoglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Danai</forename><surname>Koutra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christos</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lei</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1231" to="1239" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Learning deep representations by mutual information estimation and maximization</title>
		<author>
			<persName><forename type="first">Devon</forename><surname>Hjelm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Fedorov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Lavoie-Marchildon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karan</forename><surname>Grewal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Phil</forename><surname>Bachman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adam</forename><surname>Trischler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Strategies for pre-training graph neural networks</title>
		<author>
			<persName><forename type="first">Weihua</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bowen</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marinka</forename><surname>Zitnik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Percy</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vijay</forename><surname>Pande</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note>In ICLR</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Gpt-gnn: Generative pre-training of graph neural networks</title>
		<author>
			<persName><forename type="first">Ziniu</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuxiao</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kuansan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai-Wei</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yizhou</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1857" to="1867" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Pre-training graph neural networks for generic structural feature extraction</title>
		<author>
			<persName><forename type="first">Ziniu</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Changjun</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ting</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai-Wei</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yizhou</forename><surname>Sun</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.13728</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Cauchy&apos;s interlace theorem for eigenvalues of hermitian matrices</title>
		<author>
			<persName><forename type="first">Suk-Geun</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The American Mathematical Monthly</title>
		<imprint>
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="157" to="159" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Zero-shot scene graph relation prediction through commonsense knowledge integration</title>
		<author>
			<persName><forename type="first">Xuan</forename><surname>Kan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hejie</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECML-PKDD</title>
				<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Universal invariant and equivariant graph neural networks</title>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Keriven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gabriel</forename><surname>Peyré</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="7090" to="7099" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<author>
			<persName><forename type="first">P</forename><surname>Diederik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><surname>Ba</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.6980</idno>
		<title level="m">Adam: A method for stochastic optimization</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Variational graph auto-encoders</title>
		<author>
			<persName><forename type="first">N</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName><surname>Welling</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.07308</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Semi-supervised classification with graph convolutional networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName><surname>Welling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
				<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A survey on graph kernels</title>
		<author>
			<persName><forename type="first">Fredrik</forename><forename type="middle">D</forename><surname>Nils M Kriege</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Network Science</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="42" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Node classification on graphs with few-shot novel labels via meta transformed network embedding</title>
		<author>
			<persName><forename type="first">Lin</forename><surname>Lan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pinghui</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuefeng</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kaikai</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jing</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaohong</forename><surname>Guan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Graphs over time: densification laws, shrinking diameters and possible explanations</title>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jon</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christos</forename><surname>Faloutsos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</title>
				<meeting>the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="177" to="187" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Transferability of spectral graph convolutional neural networks</title>
		<author>
			<persName><forename type="first">Ron</forename><surname>Levie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wei</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lorenzo</forename><surname>Bucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gitta</forename><surname>Michael M Bronstein</surname></persName>
		</author>
		<author>
			<persName><surname>Kutyniok</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1907.12972</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">On the transferability of spectral graph filters</title>
		<author>
			<persName><forename type="first">Ron</forename><surname>Levie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elvin</forename><surname>Isufi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gitta</forename><surname>Kutyniok</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 13th International conference on Sampling Theory and Applications (SampTA)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Graph normalizing flows</title>
		<author>
			<persName><forename type="first">Jenny</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aviral</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jamie</forename><surname>Kiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kevin</forename><surname>Swersky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="13556" to="13566" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Birds of a feather: Homophily in social networks</title>
		<author>
			<persName><forename type="first">Lynn</forename><surname>Miller Mcpherson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><forename type="middle">M</forename><surname>Smith-Lovin</surname></persName>
		</author>
		<author>
			<persName><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual review of sociology</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="415" to="444" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<author>
			<persName><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1310.4546</idno>
		<title level="m">Distributed representations of words and phrases and their compositionality</title>
				<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Graph kernels: A survey</title>
		<author>
			<persName><forename type="first">Giannis</forename><surname>Nikolentzos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giannis</forename><surname>Siglidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michalis</forename><surname>Vazirgiannis</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1904.12218</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Graph neural networks exponentially lose expressive power for node classification</title>
		<author>
			<persName><forename type="first">Kenta</forename><surname>Oono</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Taiji</forename><surname>Suzuki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">The pagerank citation ranking: Bringing order to the web</title>
		<author>
			<persName><forename type="first">Lawrence</forename><surname>Page</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sergey</forename><surname>Brin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rajeev</forename><surname>Motwani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Terry</forename><surname>Winograd</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<pubPlace>Stanford InfoLab</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Graph representation learning via graphical mutual information maximization</title>
		<author>
			<persName><forename type="first">Zhen</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenbing</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minnan</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qinghua</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yu</forename><surname>Rong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tingyang</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Junzhou</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="259" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Deepwalk: Online learning of social representations</title>
		<author>
			<persName><forename type="first">Bryan</forename><surname>Perozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rami</forename><surname>Al-Rfou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Skiena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="701" to="710" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Gcc: Graph contrastive coding for graph neural network pre-training</title>
		<author>
			<persName><forename type="first">Jiezhong</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qibin</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuxiao</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jing</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hongxia</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kuansan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1150" to="1160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Optimization as a model for few-shot learning</title>
		<author>
			<persName><forename type="first">Sachin</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hugo</forename><surname>Larochelle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
				<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Learning node representations from structural identity</title>
		<author>
			<persName><forename type="first">Pedro</forename><forename type="middle">Hp</forename><surname>Leonardo Fr Ribeiro</surname></persName>
		</author>
		<author>
			<persName><surname>Saverese</surname></persName>
		</author>
		<author>
			<persName><surname>Daniel R Figueiredo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="385" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Nonlinear dimensionality reduction by locally linear embedding</title>
		<author>
			<persName><forename type="first">T</forename><surname>Sam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lawrence</forename><forename type="middle">K</forename><surname>Roweis</surname></persName>
		</author>
		<author>
			<persName><surname>Saul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">290</biblScope>
			<biblScope unit="issue">5500</biblScope>
			<biblScope unit="page" from="2323" to="2326" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Graphon neural networks and the transferability of graph neural networks</title>
		<author>
			<persName><forename type="first">Luana</forename><surname>Ruiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luiz</forename><surname>Chamon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alejandro</forename><surname>Ribeiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Easing embedding learning by comprehensive transcription of heterogeneous information networks</title>
		<author>
			<persName><forename type="first">Yu</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fang</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</title>
				<meeting>the 24th ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="2190" to="2199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Yago: a core of semantic knowledge</title>
		<author>
			<persName><forename type="first">Gjergji</forename><surname>Fabian M Suchanek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gerhard</forename><surname>Kasneci</surname></persName>
		</author>
		<author>
			<persName><surname>Weikum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
				<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="697" to="706" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Infograph: Unsupervised and semi-supervised graph-level representation learning via mutual information maximization</title>
		<author>
			<persName><forename type="first">Fan-Yun</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jordan</forename><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vikas</forename><surname>Verma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Tang</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Line: Largescale information network embedding</title>
		<author>
			<persName><forename type="first">Jian</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Meng</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mingzhe</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jun</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qiaozhu</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1067" to="1077" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">A global geometric framework for nonlinear dimensionality reduction</title>
		<author>
			<persName><forename type="first">Joshua</forename><forename type="middle">B</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vin</forename><forename type="middle">De</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><forename type="middle">C</forename><surname>Langford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">290</biblScope>
			<biblScope unit="issue">5500</biblScope>
			<biblScope unit="page" from="2319" to="2323" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Graph attention networks</title>
		<author>
			<persName><forename type="first">Petar</forename><surname>Velickovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guillem</forename><surname>Cucurull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Arantxa</forename><surname>Casanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adriana</forename><surname>Romero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pietro</forename><surname>Lio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">Deep graph infomax</title>
		<author>
			<persName><forename type="first">Petar</forename><surname>Velickovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Fedus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pietro</forename><surname>William L Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Lio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Devon</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><surname>Hjelm</surname></persName>
		</author>
		<editor>ICLR</editor>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Stability and generalization of graph convolutional neural networks</title>
		<author>
			<persName><forename type="first">Saurabh</forename><surname>Verma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhi-Li</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Matching networks for one shot learning</title>
		<author>
			<persName><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><surname>Blundell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tim</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daan</forename><surname>Wierstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="3630" to="3638" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Graph kernels</title>
		<author>
			<persName><forename type="first">N</forename><surname>Vichy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicol</forename><forename type="middle">N</forename><surname>Vishwanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Risi</forename><surname>Schraudolph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Karsten</forename><forename type="middle">M</forename><surname>Kondor</surname></persName>
		</author>
		<author>
			<persName><surname>Borgwardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1201" to="1242" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">A reduction of a graph to a canonical form and an algebra arising during this reduction</title>
		<author>
			<persName><forename type="first">Boris</forename><surname>Weisfeiler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrei</forename><forename type="middle">A</forename><surname>Lehman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nauchno-Technicheskaya Informatsia</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="12" to="16" />
			<date type="published" when="1968">1968</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Unsupervised domain adaptive graph convolutional networks</title>
		<author>
			<persName><forename type="first">Man</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shirui</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chuan</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaojun</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xingquan</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="1457" to="1467" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">How powerful are graph neural networks? In ICLR</title>
		<author>
			<persName><forename type="first">Keyulu</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Weihua</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefanie</forename><surname>Jegelka</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Embedding entities and relations for learning and inference in knowledge bases</title>
		<author>
			<persName><forename type="first">Bishan</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wen-Tau</forename><surname>Yih</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jianfeng</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Li</forename><surname>Deng</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.6575</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Meta-graph based hin spectral embedding: Methods, analyses, and insights</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yichen</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pan</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yu</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM</title>
				<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Multisage: Empowering graphsage with contextualized multi-embedding on webscale multipartite networks</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Pal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nikil</forename><surname>Pancha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chuck</forename><surname>Rosenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<title level="m" type="main">Heterogeneous network representation learning: A unified framework with survey and benchmark</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yuxin</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yizhou</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
		<editor>TKDE</editor>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Did you enjoy the ride? understanding passenger experience via heterogeneous network embedding</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xuewen</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jieping</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE</title>
				<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Co-embedding network nodes and hierarchical labels with taxonomy based generative adversarial nets</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jieyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Relation learning on social networks with multi-modal graph edge variational autoencoders</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jieyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haonan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sha</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Myungwan</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matt</forename><surname>Walker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yiou</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WSDM</title>
				<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Conditional structure generation through graph variational generative adversarial nets</title>
		<author>
			<persName><forename type="first">Carl</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peiye</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wenhan</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Luu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pan</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="1338" to="1349" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Hierarchical graph representation learning with differentiable pooling</title>
		<author>
			<persName><forename type="first">Zhitao</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiaxuan</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiang</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
				<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">GraphRNN: Generating realistic graphs with deep auto-regressive models</title>
		<author>
			<persName><forename type="first">Jiaxuan</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rex</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiang</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th International Conference on Machine Learning</title>
				<meeting>the 35th International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="5708" to="5717" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
