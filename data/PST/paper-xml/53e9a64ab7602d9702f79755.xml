<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Three power-aware routing algorithms for sensor networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Javed</forename><surname>Aslam</surname></persName>
						</author>
						<author role="corresp">
							<persName><forename type="first">Qun</forename><surname>Li</surname></persName>
							<email>liqun@cs.dartmouth.edu</email>
						</author>
						<author>
							<persName><forename type="first">Daniela</forename><surname>Rus</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science Dartmouth College</orgName>
								<address>
									<postCode>03755</postCode>
									<settlement>Hanover</settlement>
									<region>NH</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Dartmouth College</orgName>
								<address>
									<postCode>03755</postCode>
									<settlement>Hanover</settlement>
									<region>NH</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Card Tr Rv Idle Slp Power mA mA mA mA Sup. V</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Three power-aware routing algorithms for sensor networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C5C248B1DD3E85FF7A65BE945CE57818</idno>
					<idno type="DOI">10.1002/wcm.111)</idno>
					<note type="submission">RangeLAN2-7410 265 130 n/a 2 5 WaveLAN(11Mbps) 284 190 156 10 4.74 Smart Spread 150 80 n/a 5 5</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:08+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper discusses online power-aware routing in large wireless ad hoc networks (especially sensor networks) for applications in which the message sequence is not known. We seek to optimize the lifetime of the network. We show that online power-aware routing does not have a constant competitive ratio to the off-line optimal algorithm. We develop an approximation algorithm called max -min zP min that has a good empirical competitive ratio. To ensure scalability, we introduce a second online algorithm for power-aware routing. This hierarchical algorithm is called zone-based routing. Our experiments show that its performance is quite good. Finally, we describe a distributed version of this algorithm that does not depend on any centralization.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The proliferation of low-power analog and digital electronics has created huge opportunities in the field of wireless computing. It is now possible to deploy hundreds of devices of low computation, communication and battery power. They can create ad hoc networks and be used as distributed sensors to monitor large geographical areas, as communication enablers for field operations, or as grids of computation. These applications require great care in the utilization of power. The power level is provided by batteries and thus it is finite. Every message sent and every computation performed drains the battery.</p><p>In this paper we examine a class of algorithms for routing messages in wireless networks subject to power constraints and optimization. We envision a large ad hoc network consisting of thousands of computers such as a sensor network distributed over a large geographical area. Clearly, this type of network has a high degree of redundancy. We would like to develop a power-aware approach to routing messages in such a system that is fast, scalable, and is online in that it does not know ahead of time the sequence of messages that has to be routed over the network.</p><p>The power consumption of each node in an ad hoc wireless system can be divided according to functionality into: (i) the power utilized for the transmission of a message; (ii) the power utilized for the reception of a message; and (iii) the power utilized while the system is idle. Table I lists power consumption numbers for several wireless cards. This suggests two complementary levels at which power consumption can be optimized: (i) minimizing power consumption during the idle time and (ii) minimizing power consumption during communication. In this paper we focus only on issues related to minimizing power consumption during communication-that is, while the system is transmitting and receiving messages. We believe that efficient message-routing algorithms, coupled with good solutions for optimizing power consumption during the idle time will lead to effective power management in wireless ad hoc networks, especially for a sparsely deployed network.</p><p>Several metrics can be used to optimize power routing for a sequence of messages. Minimizing the energy consumed for each message is an obvious solution that optimizes locally the power consumption. Other useful metrics include minimizing the variance in each computer power level, minimizing the ratio of cost/packet, and minimizing the maximum node cost. A drawback of these metrics is that they focus on individual nodes in the system instead of the system as a whole. Therefore, routing messages according to these metrics might quickly lead to a system in which nodes have high residual power but the system is not connected because some critical nodes have been depleted of power. We choose to focus on a global metric by maximizing the lifetime of the network. We model this as the time to the earliest time a message cannot be sent. This metric is very useful for ad hoc networks in which each message is important and the networks are sparsely deployed.</p><p>In this paper we build on our previous work <ref type="bibr" target="#b3">[4]</ref> and show that the online power-aware message routing problem is very hard (Section 3). This problem does not have a constant competitive ratio to the off-line optimal algorithm that knows the message sequence. Guided by this theoretical result, we propose an online approximation algorithm for poweraware message routing that optimizes the lifetime of the network and examines its bounds (Section 4). Our algorithm, called the max -min zP min algorithm, combines the benefits of selecting the path with the minimum power consumption and the path that maximizes the minimal residual power in the nodes of the network. Despite the discouraging theoretical result concerning the competitive ratio for online routing, we show that the max -min zP min algorithm has a good competitive ratio in practice, approaching the performance of the optimal off-line routing algorithm under realistic conditions. Table <ref type="table">I</ref>. Power consumption comparison among different wireless LAN cards <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref>. For RangeLAN2, the power consumption for doze mode (which is claimed to be network aware) is 5 mA. The last one is Smart Spread Spectrum of Adcon Telemetry.</p><p>Our proposed max -min zP min algorithm requires information about the power level of each computer in the network. Having accurate knowledge of this information is not a problem in small networks. However, for large networks it is difficult to aggregate and maintain this information. This makes it hard to implement the max -min zP min algorithm for large networks. Instead, we propose another online algorithm called zone-based routing that relies on max -min zP min and is scalable (Section 5). Our experiments show that the performance of zone-based routing is very close to the performance of max -min zP min with respect to optimizing the lifetime of the network.</p><p>Zone-based routing is a hierarchical approach in which the area covered by the (sensor) network is divided into a small number of zones. Each zone has many nodes and thus there is a lot of redundancy in routing a message through it. To send a message across the entire area we find a 'global' path from zone to zone and give each zone control over how to route the message within itself. Thus, zone-based power-aware routing consists of (i) an algorithm for estimating the power level of each zone; (ii) an algorithm for computing a path for each message across zones; and (iii) an algorithm for computing the best path for the message within each zone (with respect to the power lifetime of the zone.)</p><p>The algorithm max -min zP min has the great advantage of not relying on the message sequence but the disadvantage of being centralized and requiring knowledge of the power level of each node in the system. These are unrealistic assumptions for field applications, for example, involving sensor networks in which the computation is distributed and information localized. The third type of routing we describe is a distributed version of our centralized algorithms. A distributed version of the max -min zP min algorithm has the flavor of the distributed Bellman-Ford algorithm. This distributed algorithm requires n message broadcasts for each node if there is no clock synchronization, and only one message broadcast if the host clocks are synchronized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related Work</head><p>We are inspired by recent exciting results in ad hoc networks and in sensor networks. Most previous research on ad hoc network routing <ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref><ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b11">[11]</ref><ref type="bibr" target="#b12">[12]</ref><ref type="bibr" target="#b13">[13]</ref> focused on the protocol design and performance evaluation in terms of the message overhead and loss rate. To improve the scalability of routing algorithms for large networks, many hierarchical routing methods have been proposed in <ref type="bibr" target="#b14">[14]</ref><ref type="bibr" target="#b15">[15]</ref><ref type="bibr" target="#b16">[16]</ref><ref type="bibr" target="#b17">[17]</ref><ref type="bibr" target="#b18">[18]</ref><ref type="bibr" target="#b19">[19]</ref><ref type="bibr" target="#b20">[20]</ref>. In <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b22">22]</ref>, zones, which are the route maintenance units, are used to find the routes. This previous work focused on how to find the correct route efficiently, but did not consider optimizing power while sending messages.</p><p>Singh et al. <ref type="bibr" target="#b23">[23]</ref> proposed power-aware routing and discussed different metrics in power-aware routing. Some of the ideas in this paper are extensions of what that paper proposed. Minimal energy consumption was used in <ref type="bibr" target="#b24">[24]</ref>. Stojmenovic and Lin proposed the first localized power-aware algorithm in their paper series <ref type="bibr" target="#b25">[25]</ref>. Their algorithm is novel in combining the power and cost into one metric and running only on the basis of the local information. Chang and Tassiulas <ref type="bibr" target="#b26">[26]</ref> also used the combined metric to direct the routing. Their algorithm is proposed to maximize the lifetime of a network when the message rate is known. Their main idea, that is, to avoid using lowpower nodes and to choose the short path at the beginning, has inspired the approach described in this paper. We also use the same formula to describe the residual power fraction. The work presented in this paper is different from these previous results in that we develop online, hierarchical, and scalable algorithms that do not rely on knowing the message rate and optimize the lifetime of the network. In <ref type="bibr" target="#b27">[27]</ref>, Gupta and Kumar discussed the critical power at which a node needs to transmit in order to ensure the network is connected. Energy-efficient MAC layer protocols can be found in <ref type="bibr" target="#b28">[28]</ref><ref type="bibr" target="#b29">[29]</ref><ref type="bibr" target="#b30">[30]</ref>. Wu et al. <ref type="bibr" target="#b31">[31]</ref> proposed the power-aware approach in dominating set-based routing. Their idea is to use rules based on energy level to prolong the lifetime of a node in the refining process of reducing the number of nodes in the dominating set.</p><p>Another branch of the related work concerns optimizing power consumption during idle time rather than during the time of communicating messages <ref type="bibr" target="#b32">[32,</ref><ref type="bibr" target="#b33">33]</ref>. These protocols put some nodes in the network into sleep mode to conserve energy, while maintaining the connectivity of the network to ensure communication. In a related work <ref type="bibr" target="#b31">[31,</ref><ref type="bibr" target="#b34">34]</ref>, Wu and Stojmenovic give an elegant solution by using connecting dominating sets, which generalize the idea of maintaining a connected network while keeping most of the nodes in sleeping mode. This work is complementary to the results of the idle-time power-conservation optimizing methods. Combined, efficient ways for dealing with idle time and with communication can lead to powerful power-management solutions.</p><p>Work on reducing the communication overhead in broadcasting tasks <ref type="bibr" target="#b35">[35]</ref> bears similarity with our approach to reducing the message broadcasting in routing application. In the paper by Stojmenovic et al., a node will rebroadcast a message only if there are neighbors not covered by the previous broadcasts. In contrast, our distributed algorithms <ref type="bibr" target="#b36">[36]</ref> eliminate the message broadcasts that are useless by discerning them with the message delay. As a result, in some of the algorithms we proposed, we can get a constant message broadcast for each node.</p><p>Related results in sensor networks include <ref type="bibr" target="#b37">[37]</ref><ref type="bibr" target="#b38">[38]</ref><ref type="bibr" target="#b39">[39]</ref><ref type="bibr" target="#b40">[40]</ref><ref type="bibr" target="#b41">[41]</ref><ref type="bibr" target="#b42">[42]</ref>. The high-level vision of wireless sensor networks was introduced in <ref type="bibr" target="#b37">[37,</ref><ref type="bibr" target="#b38">38]</ref>. Achieving energy-efficient communication is an important issue in sensor network design. Using directed diffusion for sensor coordination is described in <ref type="bibr" target="#b39">[39,</ref><ref type="bibr" target="#b40">40]</ref>. In <ref type="bibr" target="#b43">[43]</ref> a low-energy adaptive protocol that uses data fusion is proposed for sensor networks. Our approach is different from the previous work in that we consider message routing in sensor networks, and our solution does not require to know or aggregate the data transmitted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Formulation of Power-aware Routing</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">The Model</head><p>Power consumption in ad hoc networks can be divided into two parts: (i) the idle mode and (ii) the transmit/receive mode. The nodes in the network are either in idle mode or in transmit/receive mode at all times. The idle mode corresponds to a baseline power consumption. Optimizing this mode is the focus of <ref type="bibr" target="#b31">[31]</ref><ref type="bibr" target="#b32">[32]</ref><ref type="bibr" target="#b33">[33]</ref><ref type="bibr" target="#b34">[34]</ref>. We instead focus on studying and optimizing the transmit/receive mode. When a message is routed through the system, all the nodes, with the exception of the source and destination nodes, receive a message and then immediately relay it. Because of this, we can view the power consumption at each node as an aggregate between transit and receive powers that we will model as one parameter.</p><p>More specifically, we assume an ad hoc network that can be represented by a weighted graph G V, E . The vertices of the graph correspond to computers in the network. They have weights that correspond to the computer's power level. The edges in the graph correspond to pairs of computers that are in communication range. Each edge weight is the power cost of sending a unit message Ł between the two nodes. Our results are independent of the power consumption model as long as we assume the power consumption of sending a unit message between two nodes does not change during a run of the algorithm. That is, the weight of any edge in the network graph is fixed.</p><p>Although our algorithms are independent of the power consumption model, we fixed one model for our implementation and simulation experiments. Suppose a host needs power e to transmit a message to another host who is d distance away. We use the model of <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b24">24,</ref><ref type="bibr" target="#b43">43]</ref> to compute the power consumption for sending this message:</p><formula xml:id="formula_0">e D kd c C a</formula><p>where k and c are constants for the specific wireless system (usually 2 Ä c Ä 4), and a is the electronics energy that depends on factors such as digital coding, modulation, filtering, and spreading of the signal. Since our algorithms can use any power consumption model, we use a D 0 to simplify the implementation.</p><p>We focus on networks in which power is a finite resource. Only a finite number of messages can be transmitted between any two hosts. We wish to solve the problem of routing messages so as to maximize the battery lives of the hosts in the system. The lifetime of a network with respect to a sequence of messages is the earliest time when a message cannot be sent because of saturated nodes. We selected this metric under the assumption that all messages are important. Our results, however, can be relaxed to accommodate up to m message delivery failures, with m being a constant parameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Relationship to Classical Network Flow</head><p>Power-aware routing is different from the maximal network flow problem although there are similarities. The classical network flow problem constrains the capacity of the edges instead of limiting the capacity of the nodes. If the capacity of a node does not depend on the distances to neighboring nodes, our problem can also be reduced to maximal network flow.</p><p>We use the following special case of our problem in which there is only one source node and one sink node to show that the problem is NP-hard. The maximal number of messages sustained by a network from the source nodes to the sink nodes can be formulated as linear programming. Let n ij be the total number of messages from node v i to node v j , e ij denote the power cost to send a message between node v i to node v j , and s and t denote the source and sink in the network. Let P i denote the power of node i. We wish to maximize the number of messages in the system subject to the following constraints: (i) the total power used to send all messages from node v i does not exceed P i and (ii) the number of messages from v i to all other nodes is the same as the number of messages from all other nodes to v i , which are given below:</p><formula xml:id="formula_1">maximize j n sj subject to j n ij Ð e ij Ä P i 1 j n ij D j n ji for i 6 D s, t<label>2</label></formula><p>This linear programming formulation can be solved in polynomial time. However, we need the integer solution, but computing the integer solution is NPhard. Figure <ref type="figure" target="#fig_1">1</ref> shows the reduction to set partition for proving the NP-hardness of the integer solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Competitive Ratio for Online Power-aware Routing</head><p>In a system where the message rates are unknown, we wish to compute the best path to route a message.  The integer solution problem can be reduced to set partition as follows. Construct a network based on the given set. The power of x i is a i for all 1 Ä i Ä n, and the power of y is a i 2A a i /2. The weight of each edge is marked on the network. For any set of integers S D a 1 , a 2 , . . . , a n , we are asked to find the subset of S, A such that a i 2A a i D a i 2S A a i . We can construct a network as depicted here. The maximal flow of the network is a i 2A a i /2, and it can only be gotten when the flow of x i y is a i for all a i 2 A, and for all other x i y, the flow is 0.</p><p>Since the message sequence is unknown, there is no guarantee that we can find the optimal path. For example, the path with the least power consumption can quickly saturate some of the nodes. The difficulty of solving this problem without knowledge of the message sequence is summarized by the theoretical properties of its competitive ratio. The competitive ratio of an online algorithm is the ratio between the performance of that algorithm and the optimal offline algorithm that has access to the entire execution sequence prior to making any decisions.</p><p>Theorem 1 No online algorithm for message routing has a constant competitive ratio in terms of the lifetime of the network or the number of messages sent.</p><p>Theorem 1, whose proof is shown in Figure <ref type="figure">2</ref>, shows that it is not possible to compute online an optimal solution for power-aware routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Online Power-Aware Routing with max -min zP min</head><p>In this section we develop an approximation algorithm for online power-aware routing and show experimentally that our algorithm has a good empirical competitive ratio and comes close to the optimal.</p><p>We believe that it is important to develop algorithms for message routing that do not assume prior knowledge of the message sequence because for ad hoc network applications this sequence is dynamic and depends on sensed values and goals communicated to the system as needed. Our goal is to increase the lifetime of the network when the message sequence is not known. We model lifetime as the earliest time that a message cannot be sent. Our assumption is that each message is important and thus the failure of delivering a message is a critical event.</p><p>Our results can be extended to tolerate up to m message delivery failures, where m is a parameter. We focus the remaining of this discussion on the failure of the first message delivery.</p><p>Intuitively, message routes should avoid nodes whose power is low because overuse of these nodes will deplete their battery power. Thus, we would like to route messages along the path with the maximal minimal fraction of remaining power after the message is transmitted. We call this path the max-min path. The performance of max-min path can be very bad, as shown by the example in Figure <ref type="figure" target="#fig_2">3</ref>. Another concern with the max-min path is that going</p><formula xml:id="formula_2">X 1 Y 1 Y 2 1 X 2 X n-1 X n Y n Y n-1 . . . . . . T S 1 1 1 S X 1 Y 1 Y 2 X 2 X n-1 X n Y n Y n-1 . . . . . . T S X 1 Y 1 Y 2 X 2 X n-1 X n Y n Y n-1 . . . . . . T (a) (b) (c)</formula><p>Fig. <ref type="figure">2</ref>. In this network, the power of each node is 1 C ε and the weight on each edge is 1. (a) gives the network; (b) is the route for the online algorithm; and (c) is the route for the optimal algorithm. Consider the message sequence that begins with a message from S to T, say, ST. Without loss of generality (since there are only two possible paths from S to T), the online algorithm routes the message via the route</p><formula xml:id="formula_3">SX 1 X 2 X 3 Ð Ð Ð X n 1 X n T. The message sequence is X 1 X 2 , X 2 X 3 , X 3 X 4 , . . ., X n 1 X n . It is easy to see that the optimal algorithm [see (c)] routes the first message through SY 1 Y 2 Y 3 Ð Ð Ð Y n 1 Y n T,</formula><p>then routes the remaining messages through X 1 X 2 , X 2 X 3 , X 3 X 4 , . . ., and X n 1 X n . Thus the optimal algorithm can transmit n messages. The online algorithm (b) can transmit at most 1 message for this message sequence because the nodes X 1 , X 2 , . . ., X n are all saturated after routing the first message.</p><p>The competitive ratio is small when n is large.</p><p>through the nodes with high residual power may be expensive as compared to the path with the minimal power consumption. Too much power consumption decreases the overall power level of the system and thus decreases the lifetime of the network. There is a trade-off between minimizing the total power consumption and maximizing the minimal residual power of the network. We propose to enhance a max-min path by limiting its total power consumption. The two extreme solutions to power-aware routing for one message are (i) compute a path with minimal power consumption P min and (ii) compute a path that maximizes the minimal residual power in the network. We look for an algorithm that optimizes both But the optimal number of messages that follows the straight edges with black arrows is 10 n 4 where n is the number of nodes.</p><p>criteria. We relax the minimal power consumption for the message to be zP min with parameter z ½ 1 to restrict the power consumption for sending one message to zP min . We propose an algorithm we call max -min zP min that consumes at most zP min while maximizing the minimal residual power fraction. The rest of the section describes the max -min zP min algorithm, presents empirical justification for it, a method for adaptively choosing the parameter z and describes some of its theoretical properties.</p><p>The following notation is used in the description of the max -min zP min algorithm. Given a network graph V, E , let P v i be the initial power level of node v i , e ij the weight of the edge v i v j , and P t v i is the power of the node v i at time t. Let u tij D P t v i e ij /P v i be the residual power fraction after sending a message from i to j.</p><p>Algorithm 1 max -min zP min -path algorithm 1: Find the path with the least power consumption, P min by using the Dijkstra algorithm 2: while true do 3: Find the path with the least power consumption in the graph 4: if the power consumption &gt; z Ð P min or no path is found then 5: the previous shortest path is the solution, stop 6: Find the minimal u tij on that path, let it be u min 7: Find all the edges whose residual power fraction u tij Ä u min , remove them from the graph Algorithm 1 describes the algorithm. In each round we remove at least one edge from the graph. The algorithm runs the Dijkstra algorithm to find the shortest path for at most jEj times where jEj is the number of edges. The running time of the Dijkstra algorithm is O jEj C jVj log jVj where jVj is the number of nodes. Then the running time of the algorithm is at most O jEj Ð jEj C jVj log jVj . By using binary search, the running time can be reduced to O log jEj Ð jEj C jVj log jVj . To find the pure max-min path, we can modify the Bellman-Ford algorithm by changing the relaxation procedure. The running time is O jVj Ð jEj .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Adaptive Computation for z</head><p>An important factor in the max -min zP min algorithm is the parameter z that measures the trade-off between the max-min path and the minimal power path. When z D 1, the algorithm computes the minimal power consumption path. When z D 1, it computes the max-min path. We would like to investigate an adaptive way of computing z &gt; 1 such that max -min zP min will lead to a longer lifetime for the network than each of the max -min and minimal power algorithms. Algorithm 2 describes the algorithm for adaptively computing z. P is the initial power of a host. P t is the residual power decrease at time t compared to time t T. Basically, P/P t gives an estimation for the lifetime of that node if the message sequence is regular with some cyclicity. The adaptive algorithm works well when the message distributions are similar as time elapses.</p><p>Algorithm 2 Adaptive max -min zP min algorithm 1: Choose initial value z, the step υ 2: Run the max -min zP min algorithm for some interval T 3: Compute P/P t for every host, let the minimal one be t 1 4: while true do 5: Increase z by υ, and run the algorithm again for time T 6: Compute the minimal P/P t among all hosts, let it be t 2 7: if some host is saturated then 8: exit 9:</p><p>if t 1 &lt; t 2 then 10:</p><formula xml:id="formula_4">t 1 D t 2 11: if t 1 &gt; t 2 then 12: υ D υ/2, t 1 D t 2</formula><p>We conducted several simulation experiments to evaluate the adaptive computation of z. In a first experiment we generated the positions of hosts in a square field randomly using the following parameters.</p><p>The scope of the network is 10 Ł 10, the number of hosts in the network is 20, the power consumption weights for transmitting a message are e ij D 0.001 Ł d 3 ij , and the initial power of each host is 30. Messages are generated between all possible pairs of hosts and are distributed evenly. Figure <ref type="figure">4</ref>(a) shows the number of messages transmitted until the first message delivery failure for different values of z. Using the adaptive method for selecting z with z init D 10, the total number of messages sent increases to 12, 207, which is almost the best performance by max -min zP min algorithm. The parameter z The maximal messages transmitted (a) (b) Fig. <ref type="figure">4</ref>. The effect of z on the maximal number of messages in a square network space. The positions of hosts are generated randomly. In the first graph the network scope is 10 Ł 10, the number of hosts is 20, the weights are generated by e ij D 0.001 Ł d 3 ij , the initial power of each host is 30, and messages are generated between all possible pairs of the hosts and are distributed evenly. In the second graph the number of hosts is 40, the initial power of each node is 10, and all other parameters are the same as in the first graph.</p><p>In the second experiment, we generated the positions of hosts evenly distributed on the perimeter of a circle. The radius of the circle is 20, number of hosts 20; the weight formula: e ij D 0.0001 Ł d 3 ij ; and the initial power of each host is 10. Messages are generated between all possible pairs of the hosts and are distributed evenly. The performance according to various z can be found in Figure <ref type="figure" target="#fig_5">5(a)</ref>. By using the adaptive method, the total number of messages sent until reaching a network partition is 11, 588, which is much better than in most cases when we choose a fixed z.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Empirical Evaluation of the max -min zP min Algorithm</head><p>We conducted several experiments for evaluating the performance of the max -min zP min algorithm.</p><p>In the first set of experiments (Figure <ref type="figure">4</ref>), we compare how z affects the performance of the lifetime of the network. In the first experiment, a set of hosts are randomly generated on a square. For each pair of nodes, one message is sent in both directions for a unit of time. Thus, there is a total of n Ł n 1 The parameter z The maximal messages transmitted gives the performance when z changes. The vertical axis shows the maximal messages sent before the first host is saturated. The number of hosts is 40; the weight formula is e ij D 0.001 Ł d 3 ij ; the initial power of each host is 1; messages are generated between all possible pairs of the hosts and are distributed evenly. messages sent in each unit time, where n is the number of the hosts in the network. We experimented with other network topologies. Figure <ref type="figure" target="#fig_5">5(a)</ref> shows the results obtained in a ring network. Figure <ref type="figure" target="#fig_5">5(b)</ref> shows the results obtained when the network consists of four columns where nodes are approximately aligned in each column. The same method used in experiment 1 varies the value of z. These experiments show that adaptively selecting z leads to a superior performance over the minimal power algorithm (z D 1) and the max-min algorithm (z D 1). Furthermore, when compared to an optimal routing algorithm, max -min zP min has a constant empirical competitive ratio (see Figure <ref type="figure">6a</ref>).</p><p>Figure <ref type="figure">6</ref>(b) shows more data that compares the max -min zP min algorithm to the optimal routing strategy. We computed the optimal strategy by using a linear programming package † . We ran 500 experiments. In each experiment a network with 20 nodes was generated randomly in a 10 Ł 10 network space. The messages were sent to one gateway node repeatedly. We computed the ratio of the lifetime of the max -min zP min algorithm to the optimal lifetime. Figure <ref type="figure">6</ref> shows that max -min zP min performs better than 80% of the optimal for 92% of the experiments and performs within more than 90% of the optimal for 53% of the experiments. Since the optimal algorithm has the advantage of knowing the message sequence, we believe that max -min zP min is practical for applications in which there is no knowledge of the message sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Analysis of the max -min zP min Algorithm</head><p>In this section we quantify the experimental results from the previous section in an attempt to formulate more precisely our original intuition about the tradeoff between the minimal power routing and max-min power routing. We provide a lower bound for the lifetime of the max -min zP min algorithm as compared to the optimal solution. We discuss this bound for a general case in which there is some cyclicity to the messages that flow in the system and then show the specialization to the no-cyclicity case.</p><p>Suppose the message distribution is regular, that is, in any period of time [t 1 , t 1 C υ , the message distributions on the nodes in the network are the same. Since in sensor networks we expect some sort of † To compute the optimal lifetime, the message rates are known. The max-min algorithm does not have this information. , the initial power of each host is 10, messages are generated from each host to a specific gateway host, the ratio z is 100.0. (b) shows the histogram that compares max -min zP min to the optimal for 500 experiments. In each experiment the network consists of 20 nodes randomly placed in a 10 Ł 10 network space. The cost of messages is given by e ij D 0.001 Ł d 3 ij . The hosts have the same initial power and messages are generated for hosts to one gateway host. The horizontal axis is the ratio between the lifetime of the max -min zP min max-min algorithm and the optimal lifetime, which is computed off-line.</p><p>cyclicity for message transmission, we assume that we can schedule the message transmission with the same policy in each time slice we call υ. In other words, we partition the time line into many time slots [0, υ , [υ, 2υ , [2υ, 3υ , . . .. Note that υ is the lifetime of the network if there is no cyclical behavior in message transmission. We assume the same messages are generated in each υ slot but their sequence may be different.</p><p>Let the optimal algorithm be denoted by O, and the max -min zP min algorithm be denoted by M. In M, each message is transmitted along a path whose overall power consumption is less than z times the minimal power consumption for that message. The initial time is 0. The lifetime of the network by algorithm O is T O , and the lifetime by algorithm M is T M . The initial power of each node is: P 10 , P 20 , P 30 , . . ., P n 1 0 , P n0 . The remaining power of each node at T O by running algorithm O is: P 1O , P 2O , P 3O , . . ., P n 1O , P nO . The remaining power of each node at T M by running algorithm M is: P 1M , P 2M , P 3M , . . ., P n 1M , P nM . Let the message sequence in any slot be m 1 , m 2 , . . . , m s , and the minimal power consumption to transmit these messages be P 0m 1 , P 0m 2 , P 0m 3 , . . ., P 0m s .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 2</head><p>The lifetime of algorithm M satisfies where M T M is the number of messages transmitted from time point 0 to T M . P Mm k is the power consumption of the kth message by running algorithm M. We also have:</p><formula xml:id="formula_5">T M ½ T O z C υ Ð</formula><formula xml:id="formula_6">n kD1 P k0 D n kD1 P kO C M T O kD1 P Om k D P O</formula><p>where M T O is the number of messages transmitted from time point 0 to T O . P Om k is the power consumption of the kth message by running algorithm O.</p><p>Since the messages are the same for any two slots without considering their sequence, we can schedule the messages such that the message rates along the same route are the same in the two slots (think about dividing every message into many tiny packets, and average the message rate along a route in algorithm O into the two consecutive slots evenly). We have P Mmkj is the power consumption of the kth message in slot j by running algorithm M. We also have the following assumption and the minimal power of P 0mk . For any 1 Ä j Ä T M υ and k, we have only one corresponding l, P Mmkj Ä z Ð P 0m l and P Om k ½ P 0m k Then,</p><formula xml:id="formula_7">M T O kD1 P Om k D M T O s Ð s kD1 P Om k D T O υ Ð</formula><formula xml:id="formula_8">P O ½ n kD1 P kO C T O υ Ð s kD1 P 0m k P M Ä n kD1 P kM C z Ð T M υ Ð s kD1 P 0m k Thus, n kD1 P kM C z Ð T M υ Ð s kD1 P 0m k ½ n kD1 P kO C T O υ Ð s kD1 P 0m k</formula><p>We have:</p><formula xml:id="formula_9">T M ½ T O z C υ Ð n kD1 P kO n kD1 P kM z Ð s kD1 P 0m k</formula><p>Theorem 2 gives us insight into how well the message-routing algorithm does with respect to optimizing the lifetime of the network. Given a network topology and a message distribution, T O , υ, n kD1 P kO , s kD1 P 0m k are all fixed in Equation ( <ref type="formula" target="#formula_12">3</ref>). The variables that determine the actual lifetime are n kD1 P kM and z. The smaller n kD1 P kM ‡ is, the better the performance lower bound is. And the smaller z is, the better the performance lower bound is. However, a small z will lead to a large n kD1 P kM . This explains the trade-off between minimal power path and max-min path.</p><p>Theorem 2 can be used in applications that have a regular message distribution without the restriction that all the messages are the same in two different slots. For these applications, the ratio between υ and s kD1 P 0m k must be changed to 1/ r kD1 P 0m k , where P 0m k is the minimal power consumption for the message generated in a unit of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 3</head><p>The optimal lifetime of the network is at most </p><formula xml:id="formula_10">t</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Hierarchical Routing Using Zone-based max -min zP min</head><p>Although it has very nice theoretical and empirical properties, the max -min zP min algorithm is hard to implement on large-scale networks. The main obstacle is that max -min zP min requires accurate power level information for all the nodes in the network. It is difficult to collect this information from all the nodes in the network. One way to do it is by broadcast, but this would generate a huge power consumption that defeats our original goals. Furthermore, it is not clear how often such a broadcast would be necessary to keep the network data current. In this section we propose a hierarchical approach to power-aware routing that does not use as much information, does not ‡ This is the remaining power of the network at the limit of the network.</p><p>know the message sequence, and relies in a feasible way on max -min zP min . We propose to organize the network structurally in geographical zones, and hierarchically to control routing across the zones. The idea is to group together all the nodes that are in geographic proximity as a zone, treat the zone as an entity in the network, and allow each zone to decide how to route a message across § . The hosts in a zone autonomously direct local routing and participate in estimating the zone power level. Each message is routed across the zones using information about the zone power estimates. In our vision, a global controller for message routing manages the zones. This may be the node with the highest power, although other schemes such as roundrobin may also be employed.</p><p>If the network can be divided into a relatively small number of zones, the scale for the global routing algorithm is reduced. The global information required to send each message across is summarized by the power-level estimate of each zone. We believe that in sensor networks this value will not need frequent updates because observable changes will occur only after long periods of time.</p><p>The rest of this section discusses (i) how the hosts in a zone collaborate to estimate the power of the zone; (ii) how a message is routed within a zone; and (iii) how a message is routed across zones. The max -min zP min algorithm will be used in (i) and (ii), which can be implemented in a distributed way by slightly modifying our definition of the max -min zP min path. The max-min algorithm used in (iii) is basically the Bellman-Ford algorithm, which can also be implemented as a distributed algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Zone Power Estimation</head><p>The power estimate for each zone is controlled by a node in the zone. This estimation measures the number of messages that can flow through the zone. Since the messages come from one neighboring zone and get directed to a different neighboring zone, we propose a method in which the power estimation is done relative to the direction of message transmission.</p><p>The protocol employed by the controller node consists of polling each node for its power level followed by running the max -min zP min algorithm. The returned value is then broadcast to all the zones in the system. The frequency of this procedure is inversely § This geographical partitioning can be implemented easily using GPS information from each host. proportional to the estimated power level. When the power level is high, the power estimation update can be done infrequently because messages routed through the zone in this period will not change the overall power distribution in the entire network much. When the power level is low, message transmission through the zone is likely to change the power distribution significantly.</p><p>Without loss of generality, we assume that zones are square so that they have four neighbors pointed to the North, South, East, and West ¶ . We assume further that it is possible to communicate between the nodes that are close to the border between two zones, so that in effect the border nodes are a part of both zones. In other words, neighboring zones that can communicate with each other have an area of overlap (see Figure <ref type="figure">7a</ref>).</p><p>The power estimate of a zone can be approximated as follows. We can use the max -min zP min algorithm to evaluate the power level, find the max -min zP min path, simulate sending  messages through the path, and repeat until the network is saturated.  is chosen to be proportionate to the power level of the zone.</p><p>More precisely, consider Figure <ref type="figure">7</ref>(a). To estimate the power of zone B with respect to sending messages in the direction from A to C, let the left part of the overlap between A and B be the source area and the right part of the overlap between B and C be the sink area. The power of zone B in the direction from A to C is the maximal number of messages that can flow from the source nodes to the sink nodes before a node in B gets saturated. This can be computed with the max -min zP min algorithm (see Algorithm 3). We start with the power graph of zone B and augment it.</p><p>We create an imaginary source node S and connect it to all the source nodes. We create an imaginary sink node T and connect all the sink nodes to it. Let the weights of the newly added edges be 0. The max -min zP min algorithm run on this graph determines the power estimate for zone B in the direction of A to C. Algorithm 3 An approximation algorithm for zone power evaluation.</p><p>1: choose  for the message granularity. P D 0 2: while no node is depleted of power do 3: Find the max -min zP min path for  messages 4: send the  messages through the zone 5: P D P C  6: return P</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Global Path Selection</head><p>Given power-levels for each possible direction of message transmission, it is possible to construct a small zone-graph that models the global message routing problem. Figure <ref type="figure" target="#fig_11">8</ref> shows an example of a zone graph. A zone with k neighbors is represented by k C 1 vertices in this graph jj . One vertex labels the zone; k vertices correspond to each message direction through the zone. The zone label vertex is connected to all the message direction vertices by edges in both direction. In addition, the message direction vertices are connected to the neighboring zone vertices if the current zone can go to the next neighboring zone in that direction. Each zone vertex has a power level of 1. Each zone-direction vertex is labeled by its estimated power level computed with the procedure jj For square zones k D 4 C 1 as shown in Figure <ref type="figure" target="#fig_11">8</ref>. in Section 5.1. Unlike in the model we proposed in Section 3.1, the edges in this zone graph do not have weights. Thus, the global route for sending a message can be found as the max-min path in the zone graph that starts in the originator's zone vertex and ends in the destination zone vertex for the message. We would like to bias toward a path selection that uses the zones with higher power level. We can modify the Bellman-Ford algorithm (Algorithm 4) to accomplish this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 4 Maximal minimum power level path</head><p>1: Given graph G V, E , annotated with power level p v for each v 2 V 2: Find the path from s to t,</p><formula xml:id="formula_11">s D v 0 , v 1 , . . . , v k 1 , v k D t such that min k 1 iD1 p v i is maximal 3: for each vertex v 2 V[G] do 4: if edge s, v 2 E[G] then 5: d[v] 1, [v] s 6: else 7: d[v] 0, [v] NIL 8: d[s] 1 9: for i 1 to jV[G]j 1 do 10: for each edge u, v 2 E[G] and u 6 D s do 11: if d[v] &lt; min d[u], p[u] then 12: d[v] min d[u], p[u] 13: [v] u 14: return [t]</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Local Path Selection</head><p>Given a global route across zones, our goal is to find actual routes for messages within a zone. The max -min zP min algorithm is used directly to route a message within a zone.</p><p>If there are multiple entry points into the zone, and multiple exit points to the next zone, it is possible that two paths through adjacent zones do not share any nodes. These paths have to be connected.</p><p>The following algorithm is used to ensure that the paths between adjacent zones are connected (see Figure <ref type="figure">7b</ref>). For each node in the overlap region, we compute how many paths can be routed locally through that node when the zone power is evaluated. In order to optimize the message flow between zones, we find paths that go through the nodes that can sustain the maximal number of messages. Thus, to route a message through zone B in the direction from A to C we select the node with maximum message weight in the overlap between A and B, then we select the node with maximum message weight in the overlap between B and C, and compute the max -min zP min paths between these two nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">Performance Evaluation for Zone-based Routing</head><p>The zone-based routing algorithm does not require as much information as would be required by the max -min zP min algorithm over the entire network. By giving up this information, we can expect the zone-based algorithm to perform worse than the max -min zP min algorithm. We designed large experiments to measure how the zone-based algorithm does relative to the max -min zP min algorithm. (In the following experiments, we only consider the power consumption used for the application messages instead of the control messages. Thus, we can compare how close the performance of our zone-based algorithm is to that of the max -min zP min algorithm without the influence of the control messages.)</p><p>We disperse 1 000 nodes randomly in a regular network space (see Figure <ref type="figure">9</ref>). The zone partition is described in the figure. Each zone has an average of 40 nodes. Each node sends one message to a gateway node in each round (A round is the time for all the nodes to finish sending messages to the gateway). The zone power-evaluation protocol is executed after each round. By running the max -min zP min algorithm, we ran the algorithm for about 41 000 messages before one of the hosts got saturated. By running the zone-based routing algorithm, we got about 39 000 messages before the first message could not be sent through. The performance ratio between the two algorithms in terms of the lifetime of the network is 94.5%. Without the zone structure, the number of control messages on the power of each node in every information update is 1000, and they need to be broadcast to 1000 nodes. In the zone-based algorithm, the number of control messages is just the number of the zones, 48 in this case, and they are broadcast to 24 zones after the zone power evaluation. In addition, the zone-based routing dramatically reduces the running time to find a route in our simulation. In another experiment, we disperse 1240 sensors to a square field with size 6.2 Ł 6.2. The sensors are distributed randomly in the field. Each sensor has an initial power of 400. The power consumption formula is e ij D 10 Ł d 3 ij . The network field is divided by 5 Ł 5 squares each of which corresponds to four zones in four directions (left, right, up, and down). The zonebased algorithm achieved 96% of the lifetime of the max -min zP min algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Distributed Power-Aware Routing with max -min zP min</head><p>The algorithms discussed in the previous sections do not work for applications in which it is impossible to control in a centralized way the message flow in the ad hoc network. Applications in which nodes move frequently and unpredictably fall in this category. In this section we investigate a class of routing algorithms for which computation is distributed and information localized.</p><p>We introduce three new algorithms: a distributed minimal power algorithm, a distributed max-min power algorithm, and the distributed max -min zP min power-aware algorithm. The first two algorithms are used to define the third, although they are very interesting and useful in their own right for applications Fig. <ref type="figure">9</ref>. The scenario used for the zone-based experiment. The network space is a 10 Ł 10 square with nine buildings blocking the network. Each building is of size 2 Ł 2, and regularly placed at distance 1 from the others. The sensors are distributed randomly in the space near the buildings. Each sensor has an initial power of 4000. The power consumption formula is e ij D 10 Ł d 3 ij . We partition the network space into 24 zones, each of which is of size 1 Ł 4 or 4 Ł 1, depending on its layout. For each zone, there is another corresponding zone with the same nodes but with opposite directions. For example, in (b), areas 2, 3, 4, 5, 6 constitute a zone, with 2 and 6 its source and sink areas; and 6, 5, 4, 3, 2 constitute another zone with 6 and 2 its source and sink areas. We have a total of 48 zones. (b) and (c) show the layout of the neighboring zones. In (b), 3 is the sink area of the zone A, and 5 is the source area of zone C. The border area of A and B is 2, 3; and the border area of B and C is 5, 6. (c) shows two perpendicular zones. The source area of B is 1, 2. The border area of A and B is 1, 2,</p><p>in which the optimization criteria are the minimum power and the maximum residual power, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">A Distributed Minimal Power Algorithm</head><p>We can develop a distributed version of Dijkstra's algorithm that is guaranteed to be a minimal-power path, by giving messages variable propagation delays.</p><p>The idea is to have messages traveling along short paths move faster than messages traveling along long paths. Thus, messages traveling along shorter paths will arrive faster than messages traveling along longer paths-that is, the algorithm will select the shortest paths. In this case, the Dijkstra distance corresponds to power consumption. We can implement this idea by augmenting each message with a record of how far it traveled from the base to the current node. This information is represented by a variable attached to the message that measures the cost (distance representing power consumption). Algorithm 5 is the resulting minimal power path algorithm, which represents a distributed version of Dijkstra's algorithm.</p><p>We continue this section by arguing that Algorithm 5 produces the minimal power-consumption path for each node. Furthermore, the running time of the algorithm is proportional to the longest shortest distance from the base node to any node.</p><p>We first examine a special case-when messages are time-sorted in the following sense. Suppose two messages carrying 'distance' values v 1 and v 2 arrive at the same node at time t 1 and t 2 . If for any two messages with v 1 &lt; v 2 , we have t 1 &lt; t 2 , the messages are time-sorted. Let n be the number of nodes in the network. In order to keep our proof simple, we assume that message transmission is instantaneous-this restriction can be relaxed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4 If the messages are time-sorted, then Algorithm 5 requires O n broadcasting messages (O(1) for each node).</head><p>Proof: Let the message value of a message be the distance from the base station to the current node. Since the messages are time-sorted, the earliest message must carry the shortest distance from the base station to the current node. By line 9 of the algorithm, this message will be broadcast only once after the t B waiting period has been completed. Algorithm 5 Minimal Power Path. The input consists of a network system in which each node can determine its location and its power level. The output is the minimal-power routing table at each node (with respect to communicating to the base.) The algorithm uses the following parameters: Á is the unit power for transforming the power level into waiting time; P A is the total power consumption of the optimal path found so far from A to the base node; e A, B is the power consumption of sending one message from A to B directly; t B is the earliest time for B to broadcast the routing message; N B is the route of node B. In Algorithm 5, the messages are not time-sorted. However, the messages become time-sorted if we consider the broadcast time of a node as the message arrival time (because of the delays enforced by the algorithm) and by Theorem 4, Algorithm 5 gives the shortest path within O n broadcasts.</p><p>Note that the performance of our algorithm depends on the granularity at which we can measure power. Let the smallest measurement unit of the power consumption or the tolerable measurement unit be s. The parameter Á, which can be chosen as the smallest time unit a node can distinguish, is the waiting time that corresponds to the distance s. The running time of Algorithm 5 is proportional to 1/s and to the size of the largest minimal power path. A large value for s results in a fast running time, but at the expense of precision. Say, two messages that travel along paths with power consumption of P and P C s 1 (where s 1 &lt; s) arrive at the same node in an interval less than Á. The node may not distinguish them because the time difference is too small. Therefore, the running time is dependent on the precision of the required power consumption measurement. A better running time can be obtained by allowing a low measurement precision, that is, a large unit power consumption Á.</p><p>Algorithm 6 summarizes our ideas for improving the performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 6</head><p>The second minimal-power path algorithm. The input is a network in which each node can determine its location and its power level. The output is a routing table for each node. The parameters are P A , the total power consumption of the optimal path found so far from A to the base node; e A, B , the power consumption of sending a message from A to B directly; and υ, the unit time corresponding to each power slot (P/m), used to transform the power level into waiting time; N B : the route of node B.</p><p>1: Initialization; may not be necessary 2: Handshaking among neighbors: each node broadcasts its id, its position, and its current power level 3: The base initiates the message broadcasting 4: if I am not the base then 5: Let my id be B 6: P B D 1. Initial time is 0. 7: Receive message A, P A ; get the sender id A and the power P A from the message 8: Compute the new power P B D min P B , P A C e A, B , and find the proper slot i D bm Ð P B /Pc if P B D P A C e A, B then N B D A 9: Set waiting timer to iυ (i.e. the time point when a broadcast happens) 10: if the current time is no less than the waiting time point then 11:</p><p>broadcast the message B, P B to its neighbors, and clear the timer.; We do that because there may be several paths being broadcast to the node. But their time must be between iυ and i C 1 υ 12: if the current time is i C 1 υ then 13: stop</p><p>We assume the maximal minimal power consumption from the base station to any node in the network P. Let's divide [0, P into m slots, [0, P/m , [P/m, 2P/m , . . ., [iP/m, i C 1 P/m , . . ., [ m 1 P/m, P . When a node receives a message with value v, it first finds the i th slot such that iP/m Ä v &lt; i C 1 P/m, waits till time iυ, and then broadcasts the message to its neighbors. The running time of the algorithm (mυ) is proportional to m and the parameter υ, which is the time interval corresponding to P/m.</p><p>We can choose υ to be large enough that any message traveling from the base station to any node in the network along a minimal power path will have a total message processing time ε &lt; υ (i.e. the sum of the message-processing time at each node on the minimal power path is less than υ).</p><p>Theorem 5 For Algorithm 6, the number of messages broadcast by each node is no greater than the maximal number of paths from the base to a node with the power consumption in the same slot as that of the minimal power path (i.e. [iP/m,(i C 1)P/m) in which the minimal power consumption lies).</p><p>Proof: Consider a message arriving at node A and scheduled to be broadcast in the slot [iυ, i C 1 υ .</p><p>The message traveling along the minimal power path arrives at A at some time point before iυ C ε since we assume the total message handling time (including message buffering, queuing, and propagation) is less than ε.</p><p>A message traveling along a path with power no less than i C 1 Ð P/m will not be scheduled to be broadcast because the node stops broadcasting at time i C 1 υ.</p><p>There is no path with power consumption less than i Ð P/m to that node, so no message can be broadcast before iυ by that node.</p><p>Thus, only the messages traveling along the paths with power in the range of [P min , i C 1 υ can be scheduled to be broadcast. Theorem 6 Algorithm 6 gives the minimal power consumption route for each node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>The message traveling along the minimal power path arrives at A at some time point before iυ C ε &lt; i C 1 υ since we assume the total message handling time (including message buffering, queuing, and propagation) is less than ε. There is no path with power consumption less than i Ð P/m to that node, so no message can be broadcast before iυ by that node.</p><p>Thus, the message traveling along the minimal power path will be broadcast at each node. Then each node can look at the power consumption value carried by the message and set the node that broadcast the message as its route.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">A Distributed max-min Algorithm</head><p>The minimal power path algorithm does not consider the residual powers of nodes when computing the route. Although a packet is routed along the minimal power path, some nodes on that path may be saturated very quickly. An alternative is to use the nodes with high power and avoid the nodes that are almost saturated, which leads to the max-min path for packet routing.</p><p>The max-min path is defined as the route from a node to the base on which the minimal residual power of the nodes is maximized among all the routes. The minimal residual power of a path p c, d is c D a 1 , a 2 , . . . , a k D d, as m p c,d D min n 1 iD1 P a i e a i , a iC1 / P a i , and the max-min value F c,d D max all p c,d m p c,d . If there may be multiple routes with the same max-min residual power, we can resolve ties arbitrarily.</p><p>Max-min paths can be found by using a modified version of the distributed Bellman-Ford algorithm. Upon computing a new max-min value, each node broadcasts it. The neighbors compute their max-min value according to the new incoming value, and broadcast the result only if the value is changed. The number of message broadcasts may be O n 3 as in the case of the distributed Bellman-Ford algorithm.</p><p>To reduce the message broadcasts, we employ the same method as in Section 6.1 and add a variable waiting time on each node, which controls when the node broadcasts. Algorithm 7 summarizes the resulting protocol. We assume all the nodes are synchronized well, so they can decide locally the global time. Thus, a global clock is not needed to make this protocol work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 7 Distributed Max-min Approximation.</head><p>The input is a network in which each node can determine its location and its power level. The output is a routing table at each node. The parameters are: P A , the current power level of node A; e A, B , the power consumption of sending one message from A to B directly; and υ, the unit time corresponding to each power slot (P/m) used to transform the power level into waiting time. We assume that the base has the maximal max-min value in the beginning of the algorithm. Thus, the base initiates the algorithm in the first slot s 1 . Upon receiving the max-min values from the neighbors, nodes update their max-min value. Nodes wait until the time slot corresponding to the current max-min value, and broadcast the value to its neighbors. If the node receives a new incoming value in some slot, say s i , and finds that its max-min value should also be broadcast in this time slot, the broadcast is immediate. Thus, the nodes with max-min values in [ i 1 F max /m, iF max /m will be found as the messages go around the whole network.</p><p>If all the nodes have synchronized clocks, this algorithm performs O 1 message broadcasts for each node. Otherwise, the base must initiate a synchronized broadcast to all the nodes to start a new slot and the number of broadcasts per node becomes O m .</p><p>Since each node broadcasts at most m messages, the running time of the algorithm is mυ where υ is the time for each round, which is at most n times the per message handling time. Furthermore, we can prove the following result using induction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 7</head><p>For each node, the algorithm gives a route with the minimal residual power fraction F, such that F and F m are in the same slot where F m is the max-min power fraction of the route from the base to that node. Then we have jF F m j Ä F max /m. Proof: We use induction. In the first round, the maximal max-min value is broadcast by the base node. Each node that has the max-min value in the slot will broadcast the message.</p><p>For any node B with max-min value F m B in slot i, it is impossible for B to broadcast its value in slots before i. That is, F B must be no greater than F m B , the actual max-min value of node B. This can be derived by examining the computation of F B .</p><p>Suppose each node that finishes broadcast has F and F m in the same slot. For any node B whose max-min value is in slot i, let A be the upstream node on the max-min path from the base to B. If B broadcasts its max-min value before A, then B can determine A's slot. Otherwise, A must broadcast its max-min value before B and B will hear the max-min value of A. Thus, from the algorithm, we have (see <ref type="bibr">Algorithm 7)</ref>  We can improve Algorithm 7 by using binary search. The running time can be reduced to υ log m, but the number of total messages sent is n log m. The key idea is to split the range [0, F max in two, [0, F max /2 and [F max /2, F max . In the first epoch, the algorithm tries to find all the nodes whose max-min values are in the higher half. In the second epoch, we split each range into two halves to get four ranges. The algorithm finds in parallel all the nodes whose max-min values are in the higher half of each range, and so on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Distributed max -min zP min</head><p>We now derive the distributed version of the centralized online max -min zP min algorithm. Like in the centralized case, our motivation is to define a routing algorithm that optimizes the overall lifetime of the network by avoiding nodes of low power, while not using too much total power. There is a tradeoff between minimizing the total power consumption and maximizing the minimal residual power of the network. We propose to enhance a max-min path by limiting its total power consumption.</p><p>Recall that the network is described as a graph in which each vertex corresponds to a node in the network, and only two nodes within the transmission ranges of each other have an edge connecting them in the graph. The power level of a node a is denoted as P a , and the power consumption to send a message unit to one of its neighbors b is denoted as e a, b . Let s a be the power consumption for sending a unit message from a to the base station along the least power consumption path. Let r a be the minimum residual power fraction of the nodes on a's mmz path. Let P a be the power consumption along the mmz path.</p><p>An mmz path has the following properties:</p><p>1. it consists of two parts: the edge connecting a to one of its neighbors and the mmz path of that neighbor; 2. its total power consumption is less than or equal to z Ð s a ; and 3. among all those paths defined by ( <ref type="formula">1</ref>) and ( <ref type="formula" target="#formula_1">2</ref>), the max-min value of the mmz path is maximized.</p><p>More precisely, p a , the mmz path of node a, is (i) a simple path from a to the base station; (ii) f a &lt; z Ð s a ; and (iii) The definition of the mmz path actually gives a constructive method for computing incrementally the mmz path by keeping track of s node , r node , p node of each node n, because the computation only depends on these values at v's neighbors. Let n node be the next node on the path p node . The resulting algorithm is shown as Algorithm 8. In the algorithm, the base station initiates the route exploration by broadcasting its route information (s base , r base , and n base to its neighbors). When a node's route information changes, it broadcasts its updated information. This broadcast triggers its neighbor nodes to check if their route information changes. Every time the route information of a node changes the information is broadcast until the system achieves equilibrium.</p><p>Algorithm 8 Distributed max -min zP min . The parameters are P B min , the minimal power consumption for node B to send a message to the base; P B , the power consumption of the path discovered so far from the node to the base; P B , node B's current power level; F B , the maximal min residual power level of the found route to base from node B; and N B : the next node on B's found route. υ is an algorithmdependent parameter; different implementations may have difference choices.</p><p>1: Find the minimal power consumption path for each node 2: The base node 0 initiates the route discovery 3: P 0 D 0; F 0 D 1; N 0 D 0 4: Node 0 sends route discovery request to its neighbors 5: Each node B receives message from its neighbors A 1 , A 2 , . . ., A k 6: It waits for time υ, then compute: P B D min P A 1 C e B, A 1 , P A 2 C e B, A 2 , . . ., P A k C e B, A k . Find all the neighboring nodes such that P A i C e B, A i &lt;D zP A i min . Among all those neighbors found, find the node with maximal min F A k , P B e B, A k /P B . Let the node be N B and the min value be F B 7: Broadcast the P B and F B to its neighbors Repeat 3, 4 until the routing table gets to equilibrium</p><p>In our distributed version of the max-min zP min algorithm, we expect O n 3 messages broadcast totally in the worst case.</p><p>It is possible to improve the number of message broadcasts by using timing variables to suppress some of the messages. Two specific approaches are ž In the max-min part, let the message carry the total power consumption on the path and use the power consumption to decide if the max-min value should be accepted. ž In the minimal power path part, incorporate the max-min value in the waiting time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">Experiments in Simulation</head><p>We have implemented the distributed algorithms outlined in this section and studied the performance of the distributed max -min zP min algorithm. Furthermore, we compared this algorithm against a greedystyle distributed algorithm.</p><p>Figure <ref type="figure" target="#fig_12">10</ref> shows the concept behind our greedy routing implementation. Periodically, nodes exchange power information with their neighbors. When there is a message at A for destination D, A finds the node B with the highest power level in its transmission range centered at A with angle Â, which is bisected by line AD, and sends the message to B.</p><p>Figure <ref type="figure" target="#fig_13">11</ref> shows the performance comparison of the distributed max -min zP min algorithm and the distributed greedy algorithm. We conclude that maxmin zP min outperforms a simple greedy algorithm for The parameter z The maximal messages transmitted all values of z, and for some values of z the distributed max -min zP min doubles the performance. More specifically, peak of the max -min zP min algorithm is obtained when z D 1.2, and the number of messages sent is 29 078. When z D 2, the number message sent is the lowest at 18 935. The distributed greedy algorithm sent 14 278 messages in total. The performance improvement is 103% in the best case when z D 1.2 and 32.61% in the worst case.</p><p>We are currently collecting empirical data on the trade-offs between the various parameters we introduced to describe our algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusion</head><p>We have described several online algorithms for power-aware routing of messages in large networks dispersed over large geographical areas. In most applications that involve ad hoc networks made out of small handheld computers, mobile computers, robots, or smart sensors, battery level is a real issue in the duration of the network. Power management can be done at two complementary levels: (i) during communication and (ii) during idle time. We believe that optimizing the performance of communication algorithms for power consumption and for the lifetime of the network is a very important problem.</p><p>It is hard to analyze the performance of online algorithms that do not rely on knowledge about the message arrival and distribution. This assumption is very important as in most real applications the message patterns are not known ahead of time. In this paper we have shown that it is impossible to design an online algorithm that has a constant competitive ratio to the optimal offline algorithm, and we computed a bound on the lifetime of a network whose messages are routed according to this algorithm. These results are very encouraging.</p><p>We developed an online algorithm called the maxmin zP min algorithm and showed that it had a good empirical competitive ratio to the optimal off-line algorithm that knows the message sequence. We also showed empirically that max -min zP min achieves over 80% of the optimal (where the optimal router knows all the messages ahead of time) for most instances and over 90% of the optimal for many problem instances. Since this algorithm requires accurate power values for all the nodes in the system at all times, we proposed a second algorithm that is hierarchical. Zone-based power-aware routing partitions the ad hoc network into a small number of zones. Each zone can evaluate its power level with a fast protocol. These power estimates are then used as weights on the zones. A global path for each message is determined across zones. Within each zone, a local path for the message is computed so as to not decrease the power level of the zone too much. Finally, we have developed a distributed version of the max -min zP min , in which all the decisions use local information only, and showed that this algorithm outperforms significantly a distributed greedy-style algorithm.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig.1. The integer solution problem can be reduced to set partition as follows. Construct a network based on the given set. The power of x i is a i for all 1 Ä i Ä n, and the power of y is a i 2A a i /2. The weight of each edge is marked on the network. For any set of integers S D a 1 , a 2 , . . . , a n , we are asked to find the subset of S, A such that a i 2A a i D a i 2S A a i . We can construct a network as depicted here. The maximal flow of the network is a i 2A a i /2, and it can only be gotten when the flow of x i y is a i for all a i 2 A, and for all other x i y, the flow is 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig.3. The performance of the max-min path can be very bad. In this example, each node except for the source S has the power 20 C ε, and the weight of each edge on the arc is 1. The weight of each straight edge is 2. Let the power of the source be 1. The network can send 20 messages from S to T according to the max-min strategy by taking the edges on the arc (see the arc on the top).But the optimal number of messages that follows the straight edges with black arrows is 10 n 4 where n is the number of nodes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. (a) shows the effect of z on the maximal number of messages in a ring network. The radius of the circle is 20, the number of hosts is 20, the weights are generated by e ij D 0.0001 Ł d 3 ij , the initial power of each host is 10 and messages are generated between all possible pairs of the hosts and are distributed evenly. (b) shows a network with four columns of the size 1 Ł 0.1. Each area has 10 hosts that are randomly distributed. The distance between two adjacent columns is 1. (b)gives the performance when z changes. The vertical axis shows the maximal messages sent before the first host is saturated. The number of hosts is 40; the weight formula is e ij D 0.001 Ł d 3 ij ; the initial power of each host is 1; messages are generated between all possible pairs of the hosts and are distributed evenly.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>1</head><label></label><figDesc>Fig.6. (a) compares the performance of the max -min zP min to the optimal solution. The positions of hosts in the network are generated randomly. The network scope is 10 Ł 10, the weight formula is e ij D 0.0001 Ł d 3 ij , the initial power of each host is 10, messages are generated from each host to a specific gateway host, the ratio z is 100.0. (b) shows the histogram that compares max -min zP min to the optimal for 500 experiments. In each experiment the network consists of 20 nodes randomly placed in a 10 Ł 10 network space. The cost of messages is given by e ij D 0.001 Ł d 3 ij . The hosts have the same initial power and messages are generated for hosts to one gateway host. The horizontal axis is the ratio between the lifetime of the max -min zP min max-min algorithm and the optimal lifetime, which is computed off-line.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Three zones, A, B, and C. SB, SC are the source areas of B and C, and TA, TB are the sink areas of A and B. AB and BC are overlap border areas. (b) shows how to connect the local path in zone B with the local path in zone C. The number next to each node is the number of paths passing through that node in the power evaluation procedure. The vertical stripes are the source and sink areas of the zones.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Theorem 8</head><label>8</label><figDesc>p a D a, b [ p b , where b is a's neighbor such that for any other neighbor c r a D min r b , P a e a, b P a ½ min r c , P a e a, c / P a . There is one node b j such as e a, b j C P b j Ä z Ð s a . Proof: Use induction. The case for the base is obvious. Let b j be the node on the shortest path from a to the base. f b j Ä z Ð s b j and e a, b j C s b j D s a . So e a, b j C f b j Ä e a, b j C z Ð s b j Ä z Ð e a, b j C s b j D z Ð s a . Note that s a can be computed easily by using s a D min fs b C e a, b g where b is a's neighbor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 10 .</head><label>10</label><figDesc>Fig.10. The greedy routing method sends messages to the nearest neighbor within transmission range in a cone of directions captured by a parameter Â.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 11 .</head><label>11</label><figDesc>Fig.11. The performance comparison of distributed max -min zP min algorithm and greedy algorithm. The dashed line shows the performance of the greedy algorithm and the solid line shows the performance of the max -min zP min algorithm. The network includes 100 nodes. The network space is 100 Ł 100, the transmission range is 20, the power consumption formula is E D 2 Ł 10 6 Ł d 3 . The greedy algorithm uses a Â D /3. The routing protocol is run after every 100 messages. The neighbor information update in the greedy algorithm is updated every 100 messages.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>P B D 1, t B D 1 4: if I am base station then 5: initiate the message broadcasting 6: else if I am not base, say my id is B then 7: Receive message A, P A ; get the sender id A and P A from the message 8: Compute P B D min P A C e A, B , P B and t B D min t B , ÁP B if P B D P A C e A, B then N B D A 9: Wait till the current time is t B , broadcast the message B, P B to its neighbors, and stop</figDesc><table><row><cell>1: Initialization; may not be necessary</cell></row><row><cell>2: Handshaking among neighbors; each node</cell></row><row><cell>broadcasts its id, its position, and its current</cell></row><row><cell>power level</cell></row><row><cell>3:</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>For each node B, let F B D 0, B does the following for i D m 1, m 2, . . . , 1, 0. 4: The base node initiates the search and broadcasts the maximal max-min value 5: if Node B receive a message A, P A , F A from its neighbor A then 6: According to the power level of A and the distance between A and B, computeF B D if i C 1 F max /m &gt; F B ½ iF max /m then 10: the max-min value of B is found 11: B broadcasts the message B, P B , F B , the next node in the routing table is A, stop 12: After time υ, i D i 1; go to 5The max-min approximation, Algorithm 7 considers the maximal residual power fraction of all nodes in the networkF max split into m slots ([0, F max /m , [F max /m, 2F max /m , . . . , [iF max /m, i C 1 F max /m , . . . , [ m 1 F max /m, F max ).The m slots are mapped to consecutive  long time slots (s 1 , s 2 , . . . , s m .) In s i the algorithm will find all the nodes whose max-min values are in slot [ i 1 F max /m, iF max /m]. The nodes found in the earlier slots have higher max-min values in the later slots.</figDesc><table><row><cell>1: Initialization; may not be necessary 2: Handshaking among neighbors: each node broadcasts its id, its position, and its current power level 3: max F B , min F A , P A 7: if F B D min F A , P A e A, B e A, B P A P A then 8: N B D A 9:</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Copyright  2003 John Wiley &amp; Sons, Ltd. Wirel. Commun. Mob. Comput. 2003; 3:187-208</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>¶ This method can easily be generalized to zones with finite number of neighboring zones.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work bas been supported in part by Department of Defense contract MURI F49620-97-1-0382 and DARPA contract F30602-98-2-0107, ONR grant N00014-01-1-0675, NSF CAREER award IRI-9624286, NSF award I1S-9912193, Honda corporation, and the Sloan foundation; we are grateful for this support. We thank Professor Ivan Stojmenovic for the suggestions on improving the paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Contract/grant sponsor: DARPA; contract/grant number: F30602-98-2-0107. Contract/grant sponsor: ONR; contract/grant number: N00014-01-1-0675. Contract/grant sponsor: NSF CAREER award; contract/grant number: IRI-9624286. Contract/grant sponsor: NSF award; contract/grant number: I1S-9912193. Contract/grant sponsor: Honda corporation. Contract/grant sponsor: Sloan foundation.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Authors' Biographies</head><p>Javed Aslam is an assistant professor in the Department of Computer Science at Dartmouth College. He received a Ph.D. in computer science from MIT in 1995, and joined the faculty at Dartmouth following a postdoctoral position at Harvard University. His research interests include machine learning, information retrieval and the design and analysis of algorithms. In machine learning, he has focused on developing algorithms that are capable of learning in the presence of noisy or erroneous training data. In information retrieval, he has applied techniques from machine learning, information theory and social choice theory to develop algorithms for automatic information organization, filtering, and metasearch and data fusion. He has also been involved in the fields of scheduling, ad hoc networking, computer security, and functional magnetic resonance imaging.</p><p>Qun Li is currently a Ph.D. student in the Computer Science Department at Dartmouth College. His research interests include mobile ad hoc networks, wireless networks, and sensor networks. He has been designing routing algorithms for wireless ad hoc networks and sensor networks, especially poweraware or energy-conserving routing algorithms. He is also working on reactive sensor networks.</p><p>Daniela Rus is an associate professor in the Computer Science Department at Dartmouth, where she founded and directs the Dartmouth Robotics Laboratory. She also cofounded and codirects the Transportable Agents Laboratory and the Dartmouth Center for Mobile Computing. She holds a Ph.D. degree in computer science from Cornell University. Her research interests include distributed robotics, selfreconfiguring robotics, mobile computing, and information organization. She was the recipient of an NSF Career award. She is an Alfred P. Sloan Foundation Fellow and a MacArthur Fellow.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Lan</forename><surname>Range</surname></persName>
		</author>
		<ptr target="http://www.proxim.com/products/rl2/7410.shtml" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Investigating the energy consumption of a wireless network interface in an ad hoc networking environment</title>
		<author>
			<persName><forename type="first">Maria</forename><surname>Feeney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Laura</forename><surname>Nilsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2001-04">2001. April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Adcon</forename><surname>Telemetry</surname></persName>
		</author>
		<ptr target="http://www.adcon.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Online power-aware routing in wireless ad-hoc networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Aslam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MOBICOM</title>
		<meeting><address><addrLine>Rome</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-07">July 2001</date>
			<biblScope unit="page" from="97" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Dynamic source routing in ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mobile Computing</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Imielinski</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Korth</surname></persName>
		</editor>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="153" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A new routing protocol for the reconfigurable wireless network</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1997 IEEE 6th International Conference on Universal Personal Communications, ICUPC &apos;97</title>
		<meeting>the 1997 IEEE 6th International Conference on Universal Personal Communications, ICUPC &apos;97<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-10">October 1997</date>
			<biblScope unit="page" from="562" to="566" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An efficient routing protocol for wireless networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Murthy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Garcia-Luna-Aceves</forename><surname>Jj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM/Baltzer Journal on Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="issue">1,2</biblScope>
			<biblScope unit="page" from="183" to="197" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note>MANET</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A highly adaptive distributed algorithm for mobile wireless networks</title>
		<author>
			<persName><forename type="first">V</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Corson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of INFOCOM &apos;97</title>
		<meeting>INFOCOM &apos;97<address><addrLine>Kobe, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-04">April 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Highly dynamic destination-sequenced distance-vector routing (DSDV) for mobile computers</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="234" to="244" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A review of current routing protocols for ad hoc mobile wireless networks</title>
		<author>
			<persName><forename type="first">E</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C-K</forename><surname>Toh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Personal Communications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="46" to="55" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first"></forename><surname>Copyright</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Wiley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ltd</forename><surname>Sons</surname></persName>
		</author>
		<author>
			<persName><surname>Wirel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. Mob. Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="187" to="208" />
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Location-aided routing (LAR) in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">B</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE MOBICOM &apos;98</title>
		<meeting>ACM/IEEE MOBICOM &apos;98</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="66" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Communication in disconnected ad-hoc networks using message relay</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Sending messages to mobile users in disconnected ad-hoc wireless networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rus</forename><surname>Daniela</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MOBICOM</title>
		<meeting><address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
			<biblScope unit="page" from="44" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A clusterbased approach for routing in dynamic networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Krishna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chatterjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">K</forename><surname>Pradhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Communications Review</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Routing in ad hoc networks using a spine</title>
		<author>
			<persName><forename type="first">B</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sivakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Sixth International Conference on Computer Communications and Networks</title>
		<meeting>Sixth International Conference on Computer Communications and Networks</meeting>
		<imprint>
			<date type="published" when="1997-09">September 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A mobility-based framework for adaptive clustering in wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">B</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Znati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1466" to="1487" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Max-min d-cluster formation in wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Amis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Prakash</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thp</forename><surname>Vuong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">T</forename><surname>Huynh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE INFOCOM 2000. Conference on Computer Communications</title>
		<meeting>IEEE INFOCOM 2000. Conference on Computer Communications</meeting>
		<imprint>
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Landmark routing for large ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gerla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE GLOBECOM 2000</title>
		<meeting>IEEE GLOBECOM 2000<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-11">November 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Hierarchically-organized, multihop mobile networks for multimedia support</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ramanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Steenstrup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM/Baltzer Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="101" to="119" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A dominating-set-based routing scheme in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Telecommunication Systems Journal</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="63" to="84" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Determining the optimal configuration for the zone routing protocol</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Pearlman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1395" to="1414" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A peer-to-peer zone-based two-level link state routing for mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Joa-Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I-T</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1415" to="1425" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Power-aware routing in mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Raghavendra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking</title>
		<meeting>of Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking<address><addrLine>Dallas, TX</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-10">October 1998</date>
			<biblScope unit="page" from="181" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Minimum energy mobile wireless networks</title>
		<author>
			<persName><forename type="first">V</forename><surname>Rodoplu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Meng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 1998 IEEE International Conference on Communications, ICC &apos;98</title>
		<meeting>of the 1998 IEEE International Conference on Communications, ICC &apos;98<address><addrLine>Atlanda, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-06">June 1998</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1633" to="1639" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Power aware localized routing in wireless networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lin</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1122" to="1133" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Energy conserving routing in wireless ad-hoc networks</title>
		<author>
			<persName><forename type="first">J-H</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM<address><addrLine>Tel Aviv, Israel</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Critical power for asymptotic connectivity in wireless networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Stochastic Analysis, Control, Optimization and Applications: A Volume in Honor of W.H. Fleming</title>
		<meeting><address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="547" to="566" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Energy efficiency of media access protocols for mobile data networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Chockalingam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zorzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1418" to="1421" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Energy-conserving access protocols for identification networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Petrioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Redi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="59" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">An energy-efficient mac protocol for wireless sensor networks</title>
		<author>
			<persName><forename type="first">Wei</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">On calculating poweraware connected dominating set for efficient routing in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/KICS Journal of Communications and Networks</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="70" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Adaptive Energy-Conserving Routing for Multihop Ad Hoc Networks</title>
		<author>
			<persName><surname>Xu Ya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences Institute</title>
		<imprint>
			<biblScope unit="volume">527</biblScope>
			<date type="published" when="2000-10">October 2000</date>
			<pubPlace>Los Angeles</pubPlace>
		</imprint>
	</monogr>
	<note>Research Report</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Span: an energy-efficient coordination algorithm for topology maintenance in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Jamieson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th Annual Int. Conf. Mobile Computing and Networking</title>
		<meeting><address><addrLine>Rome, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2001. July 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Power-aware broadcasting and activity scheduling in ad hoc wireless networks using connected dominating sets</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IASTED International Conference on Wireless and Optical Communication</title>
		<meeting><address><addrLine>Banff, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-07">July 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Dominating sets and neighbor elimination-based broadcasting algorithms in wireless networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stojmenovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Seddigh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zunic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="14" to="25" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Distributed energy-conserving routing protocols for sensor networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Aslam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hawaii International Conference on System Science</title>
		<meeting><address><addrLine>Hawaii</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-01">January 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Wireless integrated network sensors</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">J</forename><surname>Pottie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Kaiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="51" to="58" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">An integrated architecture for cooperative sensing networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Agre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Clare</forename><surname>Loren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="page" from="106" to="108" />
			<date type="published" when="2000-05">2000. May</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Directed diffusion: a scalable and robust communication paradigm for sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Sixth Annual International Conference on Mobile Computing and Networks (MobiCOM 2000)</title>
		<meeting>of the Sixth Annual International Conference on Mobile Computing and Networks (MobiCOM 2000)<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Next century challenges: scalable coordination in sensor networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM MobiCom &apos;99</title>
		<meeting><address><addrLine>Seattle, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">August 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Hierarchical power-aware routing in sensor networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Aslam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DIMACS Workshop on Pervasive Networking</title>
		<imprint>
			<date type="published" when="2001-05">May 2001</date>
		</imprint>
		<respStmt>
			<orgName>Rutgers University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Reactive behavior in selfreconfiguring sensor network</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Derosa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ru</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mobile Computing and Communications Review</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Energy-efficient routing protocols for wireless microsensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Rabiner Heinzelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chandrakasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hawaii International Conference on System Sciences (HICSS &apos;00)</title>
		<imprint>
			<date type="published" when="2000-01">January 2000</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
