<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Stochastic Fractal Search: A powerful metaheuristic algorithm</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Hamid</forename><surname>Salimi</surname></persName>
							<email>salimi.hamid86@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematics and Computer Science</orgName>
								<orgName type="institution">University of Tehran</orgName>
								<address>
									<settlement>Tehran</settlement>
									<country key="IR">Iran</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Stochastic Fractal Search: A powerful metaheuristic algorithm</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">55CDEDA4E6174E545C995E3A15292BF4</idno>
					<idno type="DOI">10.1016/j.knosys.2014.07.025</idno>
					<note type="submission">Received 30 August 2013 Received in revised form 24 June 2014 Accepted 30 July 2014</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Metaheuristic algorithms Fractals Random fractals Global optimization Exploration Exploitation</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Evolutionary Algorithms (EAs) are well-known terms in many science fields. EAs usually interfere with science problems when common mathematical methods are unable to provide a good solution or finding the exact solution requires an unreasonable amount of time. Nowadays, many EA methods have been proposed and developed. Most of them imitate natural behavior, such as swarm animal movement. In this paper, inspired by the natural phenomenon of growth, a new metaheuristic algorithm is presented that uses a mathematic concept called the fractal. Using the diffusion property which is seen regularly in random fractals, the particles in the new algorithm explore the search space more efficiently. To verify the performance of our approach, both the constrained and unconstrained standard benchmark functions are employed. Some classic functions including unimodal and multimodal functions, as well as some modern hard functions, are employed as unconstrained benchmark functions; On the other hand, some well-known engineering design optimization problems commonly used in the literature are considered as constrained benchmark functions. Numerical results and comparisons with other state of the art stochastic algorithms are also provided. Considering both convergence and accuracy simultaneously, experimental results prove that the proposed method performs significantly better than other previous well-known metaheuristic algorithms in terms of avoiding getting stuck in local minimums, and finding the global minimum.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>There are countless applications for optimization in our world. Nowadays, many companies have faced problems in need of optimization. Indeed, there are many challenging problems in industry and science which are really necessary to tackle. They can be formulated as optimization problems.</p><p>We need optimization to minimize time, cost, or risk, and maximize profit, quality or efficiency. Numerous complex real-life optimization problems have emerged in many scientific fields such as engineering, economics and business <ref type="bibr" target="#b0">[1]</ref>, that cannot be solved in a reasonable amount of time and meanwhile yield a precise answer. Indeed, such problems are often highly nonlinear. Moreover, many of them include many different variables and act under complex constraints. These constraints are either in the form of simple bounds such as ranges of material properties, or in the form of nonlinear relationships such as maximum stress, maximum deflection, minimum load capacity, or geometrical configuration <ref type="bibr" target="#b1">[2]</ref>. On the other hand, since the size of the search space increases dramatically while solving high-dimensional optimization problems, classical optimization algorithms like exhaustive search do not provide a suitable solution. Therefore, the main alternative for solving this kind of problem is using approximate algorithms.</p><p>During the 1950s and 1960s, the concept of evolution was investigated by computer scientists as an optimization tool for solving engineering problems, and later on founded a technical method called approximate algorithms. Approximate algorithms can further be divided into two classes: specific heuristics and metaheuristics. The term ''heuristic'' originally comes from Greek and means ''to discover'' and ''to guide an investigation'' <ref type="bibr" target="#b2">[3]</ref>. Heuristics are techniques which seek good (near optimal) solutions at a reasonable computational cost without being able to guarantee either feasibility or optimality, or even in many cases to state how close to optimality a particular feasible solution is <ref type="bibr" target="#b3">(Russell and Norvig, 1995;</ref><ref type="bibr">[4]</ref>). Specific heuristics are designed for particular problems while metaheuristics are applicable for a large variety of optimization problems, and they also accommodate to solve any optimization problem. The competence of metaheuristic algorithms can depend on the fact that they imitate the best features in nature, especially the selection of the fittest in biological systems which has evolved by natural selection over millions of years <ref type="bibr" target="#b1">[2]</ref>.</p><p>Metaheuristics are often employed to solve hard problems which need to explore a larger space. The advantage of metaheuristic algorithms is related to exploring the space efficiently without being sensitive to the size of the search space. Typically, metaheuristics are based on three main purposes: solving problems faster, solving large problems and obtaining robust algorithms <ref type="bibr" target="#b0">[1]</ref>. Moreover, ease of design and implementation along with flexibility should be the other features of these algorithms. Two important characteristics of metaheuristics are: intensification (or exploitation) and diversification (or exploration). Searching around the current best solutions, and selecting the best candidates or solutions are of the intensification properties, while diversification investigates the efficiency of the algorithm in exploring the search space often using the randomization method.</p><p>The last two decades have seen enormous development in use of metaheuristics in many science fields including artificial intelligence, computational intelligence, soft computing, mathematical programming, and operations research. Most metaheuristic algorithms are inspired by natural phenomena behaviors. Among them, Genetic Algorithm (GA) <ref type="bibr" target="#b4">[5]</ref> established Darwin theory as one of the popular algorithms that mimic the natural evolution process. Particle Swarm Optimization (PSO) proposed by Eberhart and Kennedy <ref type="bibr" target="#b5">[6]</ref>, was inspired by social behavior of flocks of birds which are searching for their food. Developed by Karaboga, Artificial Bee Colony (ABC) simulates the foraging behavior of a bee swarm <ref type="bibr" target="#b6">[7]</ref>. Like ABC, Ant colony (AC) is another optimization algorithm inspired by the foraging behavior of ant colonies <ref type="bibr" target="#b7">[8]</ref>. ''Every particle in the universe attracts every other particles'', this is Newtonian gravity rule which Gravitational Search Algorithm (GSA) is based on <ref type="bibr" target="#b8">[9]</ref>. Cuckoo Search (CS) <ref type="bibr" target="#b1">[2]</ref> is another successful metaheuristic which mimics the cuckoo behavior reproduction strategy. Over the last decades, uses of metaheuristic algorithms have increased <ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref><ref type="bibr" target="#b14">[15]</ref><ref type="bibr" target="#b15">[16]</ref><ref type="bibr" target="#b16">[17]</ref>. These algorithms are used to solve complex computational optimization problems, however, fast convergence along with accuracy is not guaranteed.</p><p>The aim of the presented work is to develop an optimization algorithm that overcomes the above shortcomings. In this paper, two novel metaheuristic algorithms based on fractal properties are presented which satisfy both fast convergence and accuracy in a few generations. The main contribution of this paper is the presentation of a new algorithm with new insight into solving optimization problems based on diffusion property turned up in fractals. These algorithms are able to achieve a solution that has the least (or at most, a small) error compared with the globally optimum solution within a minimal number of iterations, thus offering an improvement in terms of accuracy, convergence time and simplicity of operations.</p><p>In the first algorithm, each particle in the system tries to simulate the branching property of a dielectric breakdown, thus making it suitable as a search tool for solving global optimization problems. The second algorithm is the developed version of the first algorithm which can cover all disadvantages of the first algorithm. All procedures in the second algorithm can be divided into two processes called Diffusing and Updating processes. In the first process, to increase the chance of finding the global minimum, similar to the first algorithm, each particle diffuses around its current position. In the latter process, to explore the problem space efficiently, the second algorithm uses some random methods as updating processes. Since the second algorithm is more promising than the first algorithm, further experiments have been done to show the superiority of this algorithm. The main purpose of this study is to introduce a new method for tackling a variety of optimization problems with a novel perspective setting a sight for future researches. On the other hand, the algorithm is extended to solve other problems such as constrained optimization problems.</p><p>Preliminary studies show that this algorithm is very promising and could outperform existing algorithms such as PSO, CS, MCS, BSA, CME-ES, DE, GSA, ABC and other well-known metaheuristic algorithms.</p><p>The rest of paper is organized as follow: Section 2 summarizes Fractals and fractal properties. Fractal Search and Stochastic Fractal Search are described in Sections 3 and 4 respectively. Experimental results are demonstrated in Section 5, and our conclusion is made in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Fractals</head><p>The property of an object or quantity which explains self-similarity on all scales, in a somewhat technical sense, is called fractal. The term of ''fractal'' comes from the Latin word fr actus which means ''broken'' or ''fractured'', and it was first used by Benoı ˆt Mandelbrot in 1975. Mandelbrot also tried to use the concept of fractal theories to describe geometric patterns in nature <ref type="bibr" target="#b17">[18]</ref>.</p><p>Developing research in this area, the example list of fractals including structures from microscopic aggregates to the cluster of galaxies has been become very long. Far-from-equilibrium growth phenomena are an important field where fractals observe, and are engaged to many fields of science and technology. Some examples for such processes include dendritic solidification in an undercooled medium, viscous fingering which is observed when a viscous fluid is injected into a more viscous one, and electrodepositing of ions onto an electrode <ref type="bibr" target="#b18">[19]</ref>.</p><p>Typically, to generate a fractal shape, some common methods such as: Iterated function systems <ref type="bibr" target="#b19">[20]</ref>, Strange attractors <ref type="bibr" target="#b20">[21]</ref>, Lsystems <ref type="bibr" target="#b21">[22]</ref>, Finite subdivision rules <ref type="bibr" target="#b22">[23]</ref> and Random fractals <ref type="bibr" target="#b23">[24]</ref> are used. Based on the fractal characteristics, our new metaheuristic method inspires random fractals grown by Diffusion Limited Aggregation (DLA) method concept as a successful search algorithm in both accuracy and time consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Random fractals</head><p>Random fractals can be generated by modifying the iteration process via stochastic rules such as Levy flight, Gaussian walks, percolation clusters, self-avoiding walks, fractal landscapes, trajectories of Brownian motion and the Brownian tree (i.e., dendritic fractals generated by modeling diffusion-limited aggregation or reaction-limited aggregation clusters) <ref type="bibr" target="#b18">[19]</ref>. Some random fractals, such as the clusters describing a bacterial colony, can be generated by a physically motivated model called ''Diffusion Limited Aggregation'' (DLA) <ref type="bibr" target="#b24">[25]</ref>. For simplicity, consider the formation of such a cluster on a plane, with the initial (seed) particle located at the origin. Other particles are then generated randomly around the original point, and cause diffusion. To simulate the diffusion process, a mathematical algorithm like random walk has been employed. The diffusing particle sticks to the seed particle which is made from it. This process is repeated until a cluster has formed. While forming the cluster, the probability of particle stuck to the end has increased comparing to the ones that penetrate the interior. Therefore, this property leads a cluster to the branch-like structure (Fig. <ref type="figure" target="#fig_0">1</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Dielectric breakdown</head><p>Narrow discharge branchings which are frequently seen in nature are called dielectric breakdown. Study on dielectric breakdown properties shows that the branching tendency can be modeled into complicated stochastic patterns. Examples are lightning, surface discharges (Lichtenberg figures), and treeing in polymers. The global structure of branched discharges often shows a close structural similarity within a large class of discharge types but at the moment even a qualitative classification of these structures is missing. Niemeyer et al. <ref type="bibr" target="#b25">[26]</ref> showed that branched discharges follow fractal properties, and proposed a new stochastic model to describe the discharge pattern of a dielectric breakdown. Their model is roughly similar to DLA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Fractal Search</head><p>According to the previous section, our first method has employed both fractal growth (DLA method) and potential theory. Loosely speaking, Fractal Search uses three simple rules to find a solution:</p><p>1. Each particle has an electrical potential energy. 2. Each particle diffuses, and causes some other random particles to be created, and the energy of the seed particle is divided among generated particles. 3. Only few of the best particles remain in each generation, and the rest of the particles are disregarded.</p><p>Suppose P (where 1 6 P 6 20) particles are taken into account to find the solution for a problem. At the beginning, each particle P i has been placed randomly in the search space with equal energy E i obtained from Eq. ( <ref type="formula" target="#formula_0">1</ref>).</p><formula xml:id="formula_0">E i ¼ E P<label>ð1Þ</label></formula><p>where E, is the maximum electric potential energy considered to solve a problem. To run fractal optimizer, each particle is diffused in each generation, and creates some other particles based on levy flight. A levy flight is a particular type of Brownian motion involving a multilevel of random steps in which, every now and again, the randomly staggering object takes a flying leap into another region of space. A levy flight can be also used to model the spread of an epidemic <ref type="bibr" target="#b23">[24]</ref>. In this model, we apply levy flight to model DLA growth.</p><p>The following equation describes the levy distribution:</p><formula xml:id="formula_1">LðxÞ ¼ 1 p Z 1 0 expðÀaq b Þ cosðqxÞdx<label>ð2Þ</label></formula><p>where b is the distribution index which is restricted to 0 &lt; b 6 2, and a is the distribution scale factor. Demonstrated in Fig. <ref type="figure" target="#fig_1">2</ref>, particle diffusion causes the creation of new particles with random different positions around the particle.</p><p>As a result of diffusion, some other particles are created. To create each point in the diffusion process, both Levy flight and Gaussian distributions are applied based on Eqs. ( <ref type="formula" target="#formula_21">3</ref>) and (4), respectively.</p><p>x q i ¼ x i þ a q i LevyðkÞ; where q is an index ð1 6 q 6 Maximum Diffusion NumberÞ ð 3Þ</p><formula xml:id="formula_2">x q i ¼ x i þ b Â GaussianðP i ; jBPjÞ À ðc Â BP À c 0 Â P i Þ;<label>ð4Þ</label></formula><p>where q is the number of particles acquired from the diffusion of the main particle. The product means entry-wise multiplications. b in Eq. ( <ref type="formula" target="#formula_2">4</ref>) is equal to logðgÞ g , where g is considered the number of iterations. Gaussian(P i , jBPj) is the Gaussian distribution in which the mean and standard deviations are P i and BP respectively. BP is mentioned as the position of the best point. Furthermore, c and c 0 are random parameters between 0 and 1. To use the advantage of both Levy and Gaussian walks, Fractal Search algorithm swaps randomly between them. That is, because Levy distribution usually is employed to guaranty a fast converging algorithm while Gaussian walk is used to exploit a better estimation of the final result.</p><p>Since the search approach relies entirely on random walks, a fast convergence cannot be guaranteed. Therefore, the a parameter plays an important role in terms of fast convergence. Two equations are considered for a, one of them is used to search in a wider space, and the other is applied to find a solution with higher accuracy. Two equations used for a are as follow:</p><formula xml:id="formula_3">a i ¼ logðminð b EÞÞ Â ðU À DÞ g Â logðE i Þ<label>ð5Þ</label></formula><formula xml:id="formula_4">a i ¼ ðU À DÞ ðg Â logðE i ÞÞ e<label>ð6Þ</label></formula><p>where minð b EÞ is consider as the minimum energy which a particle has in the whole system. U and D are the upper and lower bound of the search space. g is the generation number. E i is the particle energy of P i , and e is considered as the power which is usually fixed by 3   2 . After diffusing the particle, the main problem is how to distribute the particle energy among other created particles. A simple idea is presented to distribute energy, and that is: the better the obtained fitness particle, the greater the energy. Let q be the number of particles generated by diffusing the particle P i with energy E i . Each diffused particle has a fitness value of f j where j = 1, 2, . . . , q. The distribution energy equation can be defined as follows:</p><formula xml:id="formula_5">E j i ¼ f j f i þ P q k¼1 f k ! " # Â E i<label>ð7Þ</label></formula><p>where f i is the fitness value of the main particle before diffusion. Although this model performed well in both local and global searches, during iteration the search complexity increased due to the creation of new particles based on diffusion. To tackle this problem, only a few of the best particles are passed into the next generation (less than 10% of all the particles in each generation). The obtained energy from discarding the particles is consumed for the remaining particles and the creation of new particles.</p><p>Suppose / is the sum of all energy obtained from omitting the particles. Let l be the distributing rate of energy between remained particles and created new particles. The distribution energy equation for the remaining particles is as follows:</p><formula xml:id="formula_6">E t new ¼ E t old þ f t P n k¼1 f k ! Â / " # Â l<label>ð8Þ</label></formula><p>where E t new and E t old are the energy of particle t after and before distributing energy. On the other hand, n is the number of all particles in the iteration. For each particle that is going to diffuse, the number of particles considered to be created and placed randomly in the search space is calculated according to the following equation: The energy distributed for creating each particle is equal to that of others, and is as follows:</p><formula xml:id="formula_7"># ¼ logðnumber of discarded particlesÞ logðmaximum diffusionÞ<label>ð9Þ</label></formula><formula xml:id="formula_8">E 0 c ¼ / Â ð1 À lÞ # ; c ¼ 1; 2; . . . ; #<label>ð10Þ</label></formula><p>The standard Fractal Search optimization algorithm can be described as follows:</p><p>Fractal Search Algorithm Initialize a population of N points with equal energy E i While g &lt; maximum generation or (stop criterion) Do { For each Point P i in the system Do { Call Diffusion Process with following process:</p><formula xml:id="formula_9">{ q = (maximum considered number of diffusion Â rand [0, 1].</formula><p>If Fitness Evaluation of q does not pass user error tolerance { Consider Eq. ( <ref type="formula" target="#formula_21">3</ref>) as Levy coefficient for larger flight (a Eq. ( <ref type="formula" target="#formula_2">4</ref>)). } Else { Consider Eq. ( <ref type="formula" target="#formula_21">3</ref>) as Levy coefficient for small flight jump (a Eq. ( <ref type="formula" target="#formula_3">5</ref>)). } For j = 1 to q Do { %Switching random walk between Levy and Gaussian distributions</p><formula xml:id="formula_10">If rand [0, 1] &lt; 0.5 { X 0 i ¼ X i À rand½À1; 1Â (rand [0, 1] Â Best Point À rand [0, 1] Â X i ) + a Levy } Else { X 0 i = (rand [0, 1] Â Best Point À rand [0, 1] Â X i ) -Gaussian (mu, sigma).</formula><p>Where mu = X i , sigma = logðgÞ g Â Best Point. } } } Divide the energy particle of P i among particles created from Diffusion Process based on Eq. <ref type="bibr" target="#b6">(7)</ref>. } Sort all particles based on goodness of fitness. Consider d% of best particles (usually d = 1), and discard (1 À d%) of particles. Distribute discarded particle energies among the best selected particle based on Eq. <ref type="bibr" target="#b9">(10)</ref>. }</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Stochastic Fractal Search</head><p>Although Fractal Search performs well in finding the solution, but this approach suffers from some disadvantages. The main one is having a lot of parameters that need to be well addressed, and the other is that information exchange does not occur among particles. Exchanging information among all participating points in the group is an attempt to speed up convergence to minimum. In FS, no information exchange has turned up between individuals, and, it is essential that the search is performed independently, so, this situation is rectified in our new algorithm by adding a phase called updating process. On the other hand, since Fractal Search is a dynamic algorithm in the sense that the number of agents in the algorithm is modified, we have faced a trade-off between accuracy and time consumption. Therefore, to tackle the mentioned problems, we introduce another version of Fractal Search called Stochastic Fractal Search (SFS).</p><p>Two main processes occurred in the SFS algorithm are: The diffusing process and the updating process. In the first process, similar to Fractal Search, each particle diffuses around its current position to satisfy intensification (exploitation) property. This process increases the chance of finding the global minima, and also prevents being trapped in the local minima. In the latter process, the algorithm simulates how a point in the group updates its position based on the position of other points in the group. Unlike the diffusing phase in FS which causes a dramatic increase in the number of participating points, we consider a static diffusion process for SFS. It means that the best generated particle from the diffusing process is the only particle that is considered, and the rest of the particles are discarded. In addition to efficient exploration of the problem space, SFS uses some random methods as updating processes. In other word, updating process in SFS leads us to diversification (exploration) properties in metaheuristic algorithms.</p><p>To create new particles from the diffusion procedure, two statistical methods called Levy flight and Gaussian are investigated. Preliminary studies over taking advantage of Levy and Gaussian distributions separately show, however, that although Levy flight converges faster than Gaussian walk in a few generations; Gaussian walk is more promising than Levy flight in finding global minima. Therefore, unlike Fractal Search which uses the Levy flight distribution, Gaussian distribution is the only random walk employed in the DLA growth process of SFS. Generally, a series of Gaussian walks participating in the diffusion process have been listed in the following equations:</p><formula xml:id="formula_11">GW 1 ¼ Gaussianðl BP ; rÞ þ ðe Â BP À e 0 Â P i Þ ð 11Þ GW 2 ¼ Gaussianðl P ; rÞ ð 12Þ</formula><p>where e and e 0 are uniformly distributed random numbers restricted to [0, 1]. BP and P i are denoted as the position of the best point and the ith point in the group, respectively. The first two Gaussian parameters are l BP and r where l BP is exactly equal to BP. The two the latter parameters are l P and r where l P is equal to P i . With consideration of Gaussian parameters, the standard deviation is computed by Eq. ( <ref type="formula" target="#formula_12">13</ref>): </p><p>To encourage a more localized search as individuals, and get closer to the solution, the term logðgÞ g is used in order to decrease the size of Gaussian jumps, as the number of generations increases.</p><p>Assume a global optimization problem with dimension D is at hand. Therefore, each denoted individual considered to solve the problem has been built based on a D-dimensional vector. During the initialization process, each point is initialized randomly based on problem constrains by prescribing minimum and maximum bounds. The initialization equation of the jth point, P j , is addressed as follows:</p><formula xml:id="formula_13">P j ¼ LB þ e Â ðUB À LBÞ ð 14Þ</formula><p>where LB and UB are the lower and the upper problem constrained vectors, respectively. As stated in previous equations, e is a uniformly distributed random number which is restricted to [0, 1] continuous area. After initializing all points, the fitness function of each point is computed to attain the best point (BP) among all points. According to the exploitation property in the diffusion procedure, all points have roamed around their current position to exploit problem search space. On the other hand, two statistical procedures aimed to increase the better space exploration are considered due to the exploration property. The first statistical procedure performs on each individual vector index, and the second statistical method is then applied to all points.</p><p>For the first statistical procedure, at first, all the points are ranked based on the value of the fitness function. Each point i in the group is then given a probability value which obeys a simple uniform distribution as following equation:</p><formula xml:id="formula_14">Pa i ¼ rankðP i Þ N<label>ð15Þ</label></formula><p>where rank(P i ) is consider as the rank of point P i among the other points in the group, and N is used as the number of all points in the group. In fact, Eq. ( <ref type="formula" target="#formula_14">15</ref>) wants to state that the better the point, the higher the probability. This equation is used to increase the chance of changing the position of points which have not obtained a good solution. On the other hand, the chance of passing good solutions in the next generation will increase. For each point P i in group, based on whether or not the condition Pa i &lt; e is satisfied, and where e is a uniform random number belonging to [0, 1], the jth component of P i , is updated according to Eq. ( <ref type="formula">16</ref>), otherwise it remains unchanged.</p><p>P 0 i ðjÞ ¼ P r ðjÞ À e Â ðP t ðjÞ À P i ðjÞÞ ð16Þ</p><p>where P 0 i is the new modified position of P i . P r and P t are random selected points in the group, e is the random number selected from the uniform distribution in the continuous space [0, 1].</p><p>Regarding to the first statistical procedure which is carried out on the components of the points, the second statistical change is aimed to change the position of a point considering the position of other points in the group. This property improves the quality of exploration, and it satisfies the diversification property. Before starting the second procedure, once again, all points obtained from the first statistical procedure are ranked based on Eq. <ref type="bibr" target="#b14">(15)</ref>. Similar to the first statistical process, if the condition Pa i &lt; e is held for a new point P 0 i , the current position of P 0 i is modified according to Eqs. ( <ref type="formula" target="#formula_15">17</ref>) and ( <ref type="formula" target="#formula_16">18</ref>), otherwise no update occurs. Eqs. ( <ref type="formula" target="#formula_15">17</ref>) and ( <ref type="formula" target="#formula_16">18</ref>) are presented as follows:</p><formula xml:id="formula_15">P 00 i ¼ P 0 i À ê Â P 0 t À BP À Á j e 0 6 0:5<label>ð17Þ</label></formula><formula xml:id="formula_16">P 00 i ¼ P 0 i þ ê Â P 0 t À P 0 r À Á j e 0 &gt; 0:5<label>ð18Þ</label></formula><p>where P 0 r and P 0 t are random selected points obtained from the first procedure, and ê are random numbers generated by the Gaussian Normal distribution. The new point P 00 i is replaced by P 0 i if its fitness function value is better than P 0 i . You can find the algorithm flowchart in Appendix B. The standard Stochastic Fractal Search can be described as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experimental result</head><p>To study our new approaches, experimental results were carried out on both constrained and unconstrained benchmark functions. For constrained benchmark functions, some engineering optimization design problems commonly used in literature were used. For unconstrained benchmark functions, two types of benchmark functions including classic and modern benchmark functions with different properties were employed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Experiment I -Classic benchmark functions</head><p>To evaluate the relative performance of the proposed method on classic benchmark functions, a series of 23 standard benchmark functions were taken from those widely used in literature <ref type="bibr" target="#b26">[27]</ref>. Without any modification, these functions are presented in Table <ref type="table" target="#tab_0">1</ref>. Typically, these functions can be divided into three categories: (1) Unimodal functions, (2) multimodal functions and (3) multimodal test functions with fixed dimension.</p><p>In this table, D represents the dimension of the function, and the minimum value of the function is demonstrated as Optimum. Except f 08 , f 10 and f 12 which have minimum value of (À418.9829 * n), 8.8818eÀ16 and 1.5705eÀ032 respectively, the rest of the minimum values of functions f 01 -f 13 are zero. For the functions f 01 -f 13 , the optimal locations occur in [0, 0, 0. . . 0], except for f 5 , f 08 , f 12 and f 13 in which they taken place in [1, 1, 1. . . 1],</p><p>[420.96, 420.96. . . 420.96], [À1, À1, À1. . . À1] and [1, 1, 1. . . 1] respectively. The detailed description of these functions f 14 -f 23 , are shown in Table <ref type="table" target="#tab_1">2</ref>. The following section investigates the unimodal and multimodal functions and their properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1.">Unimodal high-dimensional functions</head><p>Unimodal high-dimensional functions are designed to test the convergence rate of search algorithms. Since there are several methods specially designed to optimize unimodal functions, the convergence rate is more important than the final results. Some kinds of these functions are f 01 -f 07 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2.">Multimodal high-dimensional functions</head><p>Because of the fact that we encounter many local minimums, multimodal functions are the most difficult problems to optimize. For these kinds of problems, because the algorithms have challenged to escape from poor local optima and locate a near-global optimum, the final results are more important. Some kinds of these functions are f 08 -f 13 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3.">Multimodal low-dimensional functions</head><p>Similar to multimodal function stated in the previous stage, f 14 -f 23 belong to this category but with little difference, in the sense that since the dimensions of these function are low, we have to deal with a small number of local minimums. </p><formula xml:id="formula_17">f 02 ¼ P n i¼1 jx i j þ Q n i¼1 jx i j 30 [À10, 10] 0 f 03 ¼ P n i¼1 P i j¼1 x j 2 30</formula><p>[À100, 100] 0</p><formula xml:id="formula_18">f 04 = max i {jx i j, 1 6 i 6 D} 30 [À100, 100] 0 f 05 ¼ P DÀ1 i¼1 100 x iþ1 À x 2 i À Á 2 þ ðx i À 1Þ 2 h i 30 [À30, 30] 0 f 06 ¼ P D i¼1 ðbx i þ 0:5cÞ 2 30</formula><p>[À100, 100] 0</p><formula xml:id="formula_19">f 07 ¼ P D i¼1 ix 4 i þ random½0; 1Þ 30 [À1.28, 1.28] 0 f 08 ¼ P D i¼1 À x i sin ffiffiffiffiffiffi ffi jx i j p 30 [À500, 500] À418.9829 Ã n f 09 ¼ P D i¼1 x 2 i À 10 cosð2px i Þ þ 10 Â Ã<label>30</label></formula><p>[À5.12, 5.12] 0</p><formula xml:id="formula_20">f 10 ¼ À20 exp À0:2 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi 1 D P D i¼1 x 2 i q À exp 1 D P D i¼1 cos 2px i þ 20 þ e 30 [À32, 32] 8.8818eÀ16 f 11 ¼ 1 400 P D i¼1 x 2 i À Q D i¼1 cos xi ffi i p þ 1 30 [À600, 600] 0 f 12 ¼ p D f10 sin 2 ðpy i Þ þ P DÀ1 i¼1 ðy i À 1Þ 2 ½1 þ 10 sin 2 ðpy i þ 1Þ þ ðyD À 1Þ 2 þ P D i¼1 uðx i ; 10; 100; 4Þg 30 [À50, 50] 1.5705eÀ032 y i ¼ 1 þ xi þ1 4 uðx i ; a; k; mÞ ¼ kðx i À aÞ m x i &gt; a 0 Àa &lt; x i &lt; a kðÀx i À aÞ m x i &lt; Àa 8 &lt; : f 13 ¼ 0:1f10 sin 2 ðpy i Þ þ P DÀ1 i¼1 ðy i À 1Þ 2 ½1 þ 10 sin 2 ðpy i þ 1Þ þ ðyD À 1Þ 2 g þ P D</formula><p>i¼1 uðx i ; 10; 100; 4Þ 30 [À50, 50] 0</p><formula xml:id="formula_21">f 14 ¼ 1 500 þ P 25 j¼1 1 jþ P 2 i¼1 ðxi Àaij Þ 6 ! À1 2 [ À65.53, 65.53] 0.998004 f 15 ¼ P 11 i¼1 a i À x1 ðb 2 i þbi xi Þ b 2 i þb1 x3 þx4 ! 2 4 [ À5, 5] 0.0003075 f 16 ¼ 4x 2 1 À 2:1x 4 i þ 1 3 x 6 1 þ x 1 x 2 À 4x 2 2 þ 4x 4 2 2 [ À5, 5] À1.0316285 f 17 ¼ ðx 2 À 5:1 4p 2 x 2 1 þ 5 p x 1 À 6Þ 2 þ 10ð1 À 1 8p Þ cos x 1 þ 10 2 [ À5, 10] Ã [0, 15] 0.398 f 18 ¼ 1 þ ðx 1 þ x 2 þ 1Þ 2 19 À 14x 1 þ 3x 2 1 À 14x 2 þ 6x 1 x 2 þ 3x 2 2 À Á j k Â 30 þ ð2x 1 À 3x 2 Þ 2 18 À 32x 1 þ 12x 2 1 þ 48x 2 À 36x 1 x 2 þ 27x 2 2 À Á h i 2 [ À5, 5]<label>3</label></formula><formula xml:id="formula_22">f 19 ¼ À P 4 i¼1 c i exp À P 3 j¼1 a ij x j À p ij 2 3 [0, 1]</formula><p>À3.86</p><formula xml:id="formula_23">f 20 ¼ À P 4 i¼1 c i exp À P 6 j¼1 a ij x j À p ij 2 6 [0, 1] À3.<label>32</label></formula><formula xml:id="formula_24">f 21 ¼ À P 5 i¼1 ðX À a i Þ X À a i ð Þ T þ c i h i À1<label>4</label></formula><p>[0, 10] À10.1532</p><formula xml:id="formula_25">f 22 ¼ À P 7 i¼1 ðX À a i Þ X À a i ð Þ T þ c i h i À1<label>4</label></formula><p>[0, 10] À10.4029</p><formula xml:id="formula_26">f 23 ¼ À P 10 i¼1 ðX À a i Þ X À a i ð Þ T þ c i h i À1 4 [0, 10] À10.5364</formula><p>5.1.4. Algorithm comparison SFS algorithm is implemented by MATLAB 2010 version 7.11 (b). You can also request FS and SFS code from the author. To have a fair comparison, our SFS and FS algorithms have been compared with other well-known algorithms such as: PSO <ref type="bibr" target="#b5">[6]</ref>, MCS <ref type="bibr" target="#b27">[28]</ref>, GSA <ref type="bibr" target="#b8">[9]</ref>, CS <ref type="bibr" target="#b1">[2]</ref> and ABC <ref type="bibr" target="#b6">[7]</ref>. The maximum generation numbers used for all functions are shown in Table <ref type="table" target="#tab_2">3</ref>. Appendix A shows the download link of all algorithms used in our experiments.</p><p>The control parameters of the mentioned algorithms commonly used in literature are given according to Table <ref type="table">4</ref>.</p><p>For Fractal Search (FS), the Maximum energy considered to solve all problem was set to E = 2500 (joule), and the start point was set to 5. The Maximum Diffusion Number (MDN) was 10, the remaining points (RP) were tuned to 0.01, and the Distributed Energy (DE) was considered to be 99%. The obtained results by well-known algorithms over unimodal functions (f 1 -f 7 ) are reported in Table <ref type="table" target="#tab_3">5</ref>. In this table, the average results of 25 independent runs are summarized. We have also ranked the algorithms from smallest mean solution to the highest solution. At last, we have reported the average ranks obtained by algorithms, and concluded the final ranks as the overall rank. As it can be concluded from Table <ref type="table" target="#tab_3">5</ref>, although SFS and FS satisfy the condition of convergence rate which is important for unimodal function, they can also find the global minimum of all functions. Moreover, the reported results in Table <ref type="table" target="#tab_3">5</ref> prove the superiority of SFS and FS over other successful metaheuristic algorithms in solving unimodal functions. Fig. <ref type="figure" target="#fig_3">3</ref> shows the significant difference between SFS and other </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 4</head><p>The control parameters of search algorithms.  The results obtained by PSO, CS, MCS, GSA, ABC, FS and SFS algorithms over multimodal high dimensional functions are presented in Table <ref type="table" target="#tab_4">6</ref>. As stated before, f 08 -f 13 functions are multimodal functions with a lot of local minima. The aim of investigating these functions is scrutinizing the ability of algorithms to overcome the local minima test functions which increase exponentially as long as the dimension of search space increases. Table <ref type="table" target="#tab_4">6</ref> shows the average results of 25 independent algorithms executed over multimodal test functions. According to the Table <ref type="table" target="#tab_4">6</ref>, SFS can succeed in getting rid of functions' local minimums, and comparing with other powerful metaheuristic algorithms, provide better results. As for the better exploration ability, SFS has the first overall rank in solving multimodal test functions. The graphical results of functions f 08 and f 09 are depicted in Fig. <ref type="figure" target="#fig_4">4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Name</head><p>An early look to Table <ref type="table" target="#tab_4">6</ref> reveals the weakness of all algorithms except SFS in preventing getting stuck in local minimums. As can be concluded from Table <ref type="table" target="#tab_4">6</ref>, although FS could find the global minimum of functions f 09 -f 11 , it had a low performance when solving functions like f 08 , f 12 and f 13 . The poor performance of FS over the mentioned functions reflects the sensitivity of FS when initializing its parameters. On the other hand, considering the obtained results by CS and MCS along with FS which uses Levy flight distribution, the disadvantage of Levy flight in getting stuck to local minimums can be easily concluded.</p><p>For functions f 14 -f 23 with few local minima due to low dimensions, the final results are reported in Table <ref type="table" target="#tab_5">7</ref>. These functions are similar to the multimodal function with a small difference. The main difference of these functions with functions of f 08 -f 13 is that instead of containing high dimension functions, these functions deal with low and fixed dimensions. Therefore, it is hard to have a fair comparison among algorithms. The summarized results of Table <ref type="table" target="#tab_5">7</ref> show that in the case of some functions like f 14 , f 16 , f 17 , f 18 , f 19 and so on, almost all metaheuristic algorithms could reach optimal or near optimal solutions. However, we still ranked these algorithms. As can be seen from Table <ref type="table" target="#tab_5">7</ref>, SFS algorithm outperforms other algorithms in solving low-dimensional multimodal  functions. We also depict the graphical analysis of the ANOVA test for functions f 14 and f 16 in Fig. <ref type="figure" target="#fig_5">5</ref>. According to Table <ref type="table" target="#tab_5">7</ref>, FS does not provide a good solution for low-dimensional multimodal. However, SFS could overcome all low-dimensional multimodal functions, some other algorithms such as ABC and GSA also could obtain acceptable results over some low-dimensional multimodal functions such as f 16 , f 17 , f 18 , f 20 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Experiment II -Modern benchmark functions (CEC 2010)</head><p>We also carried our experiments out on the CEC'2010 benchmark functions designed for the special issue as a competition on Large Scale Global Optimization problems <ref type="bibr" target="#b30">[31]</ref>. The advantage of this benchmark suite is that the degree of non-separability is well defined and is adjustable. This benchmark function is known as     separable problems, and includes five major categories which are as follows:</p><p>(1) Separable Functions (f c1 -f c3 ).</p><p>( </p><formula xml:id="formula_28">) m 2n -group m-nonseparable Functions (f c9 -f c13 ). (4) m n -group m-nonseparable Functions (f c14 -f c18 ). (5) Nonseparable Functions (f c19 -f c20 ).<label>3</label></formula><p>In the above list, m refers to the number of interacting variables in a non-separable group and n is the dimensionality of the problem. To visit the details of the functions, you can refer to <ref type="bibr" target="#b30">[31]</ref>. Conserving the originality of functions in the CEC2010 benchmark, we consider these benchmark functions to make them suitable for dimension 30. The maximum iterations for evaluating CEC 2010 benchmark functions are shown in Table <ref type="table" target="#tab_7">8</ref>.</p><p>To evaluate CEC 2010 benchmark functions, the results of SFS are compared with state-of-the art algorithms in relevant literature such as: BSA <ref type="bibr" target="#b31">[32]</ref>, CMA-ES. <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref>, DE <ref type="bibr" target="#b33">[34]</ref>, ABC <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b34">35]</ref> and AMO <ref type="bibr" target="#b35">[36]</ref>. The control parameters of the mentioned algorithms are stated in Table <ref type="table">9</ref>. These tuned parameters are commonly used in literature.</p><p>The results of 25 independent runs on CEC 2010 benchmark functions are summarized in Table <ref type="table" target="#tab_8">10</ref>. Like classic benchmark function, all algorithms are ranked from smallest mean solution to higher solutions. The ranks are then averaged based on these twenty functions and the average rank is obtained.</p><p>According to obtained results from Table <ref type="table" target="#tab_8">10</ref>, it is easily obvious that Stochastic Fractal Search performs much better than other algorithms. As it can be concluded from Table <ref type="table" target="#tab_8">10</ref>, SFS can find the global optimum solution of most functions. As mentioned above, CEC 2010 benchmark functions can be divided into five groups. For the first group which is also called separable functions, SFS, AMO, ABC and DE can almost find the solutions comparing to the rest. The obtained results on the second group of functions called single-group m-nonseparable functions show that SFS is the only pioneer (see Fig. <ref type="figure" target="#fig_2">6</ref>). The results of the second and third group can explicitly reflect the weakness of other well-known metaheuristic algorithms to overcome local minimums. The acquired results on the fourth group show that although all algorithms have poor performance on f 15 benchmark function, comparing with other algorithms, SFS is superior in solving f 14 , f 16 , f 17 and f 18 benchmark functions. For the last group, however, SFS could find the global solutions for both functions f 19 and f 20 . Since these functions are not quite hard optimization problems, some algorithms like DE, GSA and AMO could solve these functions with approximate solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1.">SFS search behavior and parameter analysis</head><p>In this section, the effect of SFS parameter on the approximation error, as well as the learning behavior of SFS are experimentally studied. To evaluate the SFS learning mechanism, three configurations which differ on activated learning mechanisms are considered. The first one corresponds to a coalition of agents without Diffusion learning mechanism. In the second configuration, the agents have the capacity to individually learn without first updating the process. In the last configuration, SFS has learnt without a second update in the process. These three configurations of SFS have been tested on classic and modern benchmark functions. The classic functions used in this experiment were f 01 , f 05 and f CEC 04 ; f CEC 05 ; f CEC 06 selected from CEC 2010 benchmark functions. The iteration number of each function was evaluated according to its previous condition. Table <ref type="table" target="#tab_9">11</ref> reports the average results of 10 runs for each configuration.</p><p>The obtained results from Table <ref type="table" target="#tab_9">11</ref> prove that each part in SFS can significantly effect the quality of final results, and it shows that all parts together make a coherent system to solve optimization problems (see Fig. <ref type="figure" target="#fig_7">7</ref>).</p><p>As stated before, since FS has many parameters, we have introduced SFS which is just sensitive to a parameter called maximum diffusion number (MDN). Empirical results have implied that the diffusion number can influence the resulting performance by a varying amount, depending on the problem being optimized. Some test functions show considerably improved performance as MDN is increased, while others tend to be better optimized only by a slight increase in MDN. However, our experimental results in previous sections showed that while SFS could usually find the global optimum point for MDN = 1, there seems to be a definitive value for MDN that is optimal across all problems. While it may certainly be beneficial to tune this parameter based on the problem at hand, generally speaking it is of relative importance. On the other hand, </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 9</head><p>The control parameters of search algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Name Specification</head><p>Population size BSA mixrate = 1.00 as recommended in <ref type="bibr" target="#b31">[32]</ref> 100 CMAÀES r ¼ 0:25; l ¼ 4þb2 logðNÞc 2 j k have been recommended in <ref type="bibr" target="#b32">[33]</ref> 100 DE F = 0.5 and CR = 0.9 in accordance given in <ref type="bibr" target="#b36">[37]</ref> 100 GSA G o = 100 and a = 20, and T is set to total iterations <ref type="bibr" target="#b8">[9]</ref> 100 ABC limit = 50D has been used as recommended in <ref type="bibr" target="#b6">[7]</ref> 100 AMO</p><p>The number of animals in each group was set to 5 <ref type="bibr" target="#b35">[36]</ref> 100 SFS Maximum Diffusion level is set to 1 100 increasing MDN causes us to face a trade-off between time consumption and convergence rate. Figs. <ref type="figure" target="#fig_8">8</ref> and<ref type="figure" target="#fig_9">9</ref>, shows the effect of MDN on the convergence rate and time consumption for f 01 respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Experiment III -Constrained engineering design optimization problem</head><p>So far, the performance of SFS algorithm is investigated on the type of problems called unconstrained problems. Other types of problems which are of the most important and ubiquitous types of engineering optimization problems are constrained global optimization problems. The general constrained global optimization problem with inequality, equality, lower bound, and upper bound constraints is defined as: min f ðxÞ s:t g j ðxÞ ¼ 0; j ¼ 1; 2; . . . ; p; g j ðxÞ 6 0; j ¼ p þ 1; . . . ; m; l i 6 x i 6 u i ; i ¼ 1; 2; . . . ; n: ð19Þ where f(x) is the objective function, g j (x) = 0 are the equality constraints, g j (x) 6 0 are inequality constraints, l i and u i are the lower bound and the upper bound of x i , respectively <ref type="bibr" target="#b37">[38]</ref>.</p><p>In order to study the performance of solving the real-world engineering design optimization problems, the proposed SFS algorithm is applied to three well-known constrained engineering design problems. The maximum fitness function for all engineering problems was set to 24,000, and the results of 30 independent runs on SFS were placed at the Tables 12-17.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1.">Tension/compression spring design problem</head><p>The tension/compression spring design problem (as shown in Fig. <ref type="figure" target="#fig_10">10</ref>) is described in Belegundu <ref type="bibr" target="#b38">[39]</ref>. The design optimization problem involves three continuous variables and four nonlinear inequality constraints.</p><p>The mathematical model of the spring design problem is expressed as:    </p><formula xml:id="formula_29">¼ ðL þ 2Þw 2 d<label>ð20Þ</label></formula><formula xml:id="formula_30">Subject to g 1 ¼ 1 À d 3 L 71785w 4 6 0 g 2 ¼ dð4dÀwÞ w 3 ð12566dÀwÞ þ 1 5108w 2 À 1 6 0 g 3 ¼ 1 À 140:45w d 2 L 6 0 g 4 ¼ 2ðwþdÞ 3 À 1 6 0<label>ð21Þ</label></formula><p>where w, d and L are recognized as wire diameter, the mean coil diameter, and the length (or number of coils) respectively. The following limits for these parameters are: 0:05 6 w 6 2:0; 0:25 6 d 6 1:3; 2:0 6 L 6 15:0</p><p>This problem has already been solved by several researchers, including Belegundu <ref type="bibr" target="#b38">[39]</ref>, who used Mathematical Programming Methods (MPM), Coelloand Mezura-Montes <ref type="bibr" target="#b39">[40]</ref>, who used genetic algorithm (GA), Krohling and Coelho <ref type="bibr" target="#b40">[41]</ref>, who employed an approach of Coevolutionary Particle Swarm Optimization (CEPSO), Huang et al. <ref type="bibr" target="#b41">[42]</ref> proposed an effective Coevolutionary Differential Evolution (CEDE), and Eskandar et al. <ref type="bibr" target="#b42">[43]</ref>, who applied a Water Cycle Algorithm (WCA).</p><p>The best solutions obtained by SFS in this work for the spring design problem were compared with the five best solutions reported in the literature, and are presented in Table <ref type="table" target="#tab_10">12</ref>. Their statistical results are listed in Table <ref type="table" target="#tab_2">13</ref>.</p><p>As shown in Tables <ref type="table" target="#tab_10">12</ref> and<ref type="table" target="#tab_2">13</ref>, the searching quality of the proposed SFS is superior to that of the other five methods. Moreover, the standard deviation of the results by SFS is much smaller than that of other five stochastic approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.">Pressure vessel design problem</head><p>The pressure vessel design problem (see Fig. <ref type="figure" target="#fig_11">11</ref>) is described in Sandgren <ref type="bibr" target="#b43">[44]</ref> who first proposed this problem. The design problem involves four continuous variables and four inequality constraints. The problem can be stated as follows:</p><formula xml:id="formula_32">min f ðT s ; T h ; R; LÞ ¼ 0:6224T s RL þ 1:7781T h R 2 þ 3:1661T 2 s L þ 19:84T 2 h L<label>ð23Þ</label></formula><formula xml:id="formula_33">Subject to g 1 ¼ ÀT s þ 0:0193R 6 0 g 2 ¼ ÀT h þ 0:0095R 6 0 g 3 ¼ ÀpR 2 L À 4 3 pR 3 þ 1; 296; 000 6 0 g 4 ¼ L À 240 6 0<label>ð24Þ</label></formula><p>where T s , T h , R and L are the thickness, thickness of the head, the inner radius and the length of the cylindrical section of the vessel respectively. The restricted area is as follows:</p><p>1 Â 0:0625 6 T s ; T h 6 99 Â 0:0625; and 10 6 R; L 6 200:</p><p>Coello and Mezura-Montes <ref type="bibr" target="#b39">[40]</ref> used a GA-based method to solve the pressure vessel design problem, Krohling and Coelho <ref type="bibr" target="#b40">[41]</ref> applied Coevolutionary PSO to solve this problem, The CEDE algorithm is proposed by Huang et al. <ref type="bibr" target="#b41">[42]</ref>. Also to solve this problem, Gao and Hailu <ref type="bibr" target="#b44">[45]</ref> used a PSO based algorithm. Table <ref type="table" target="#tab_11">14</ref> lists the optimal solutions that have been determined by GA <ref type="bibr" target="#b39">[40]</ref>, CEPSO <ref type="bibr" target="#b40">[41]</ref>, CEDE <ref type="bibr" target="#b41">[42]</ref>, PSO <ref type="bibr" target="#b44">[45]</ref>, Nonlinear integer and discrete programming (NIDP) <ref type="bibr" target="#b43">[44]</ref>, as well as the proposed SFS in this study, and their statistical results are given in Table <ref type="table" target="#tab_3">15</ref>.</p><p>From Tables <ref type="table" target="#tab_11">14</ref> and<ref type="table" target="#tab_3">15</ref>, with respect to GA, CEPSO, CEDE, and NIDP, SFS provided better results for pressure vessel design prob-    lem. Although the objective value derived by PSO algorithm is acceptable comparing with SFS, the reported value is not feasible. This is because the third constrained condition violated in the results of PSO.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3.">Welded beam design problem</head><p>One of the standard constrained engineering problems is Welded beam (see Fig. <ref type="figure" target="#fig_12">12</ref>) design optimization <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b46">47]</ref>. The problem involves four design variables including the width w and length L of the welded area, the depth h and thickness d of the main beam. The objective is to minimize the overall fabrication cost, under the appropriate constraints of shear stress s, bending stress r, buckling load P and maximum end deflection d.</p><p>The problem can be written as: min f ðw; L; d; hÞ ¼ 1:10471w 2 L þ 0:04811dhð14:0 þ LÞ ð 25Þ Subject to g 1 ¼ w À h 6 0 g 2 ¼ d À 0:25 6 0 g 3 ¼ s À 13; 600 6 0 g 4 ¼ r À 30; 000 6 0 g 5 ¼ 0:10471w 2 þ 0:04811hdð14 þ LÞ À 5:0 6 0 g 6 ¼ 0:125 À w 6 0 g 7 ¼ 6000 À P 6 0 ð26Þ where r ¼ 504;000  </p><formula xml:id="formula_34">hd 2 Q ¼ 6000 14 þ L 2 À Á D ¼ 1 2 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi L 2 þ ðw þ dÞ 2 q J ¼ ffiffiffi 2 p wL L 2 6 þ ðwþdÞ</formula><p>The simple limits or bounds are 0.1 6 L, d 6 10 and 0.1 6 w, h 6 2.0.</p><p>The welded beam structure is a practical design problem that has been often used as a benchmark problem for testing different optimization methods. Deb <ref type="bibr" target="#b47">[48]</ref>, Coello <ref type="bibr" target="#b48">[49]</ref> and Coello and Montes <ref type="bibr" target="#b39">[40]</ref> solved this problem using GA-based methods. Radgsdell and Phillips <ref type="bibr" target="#b46">[47]</ref> compared the optimal results of different optimization methods that were mainly based on mathematical optimization algorithms. These methods, are APPROX (Griffith and Stewart's successive linear approximation), DAVID (Davidon-Fletcher-Powell with a penalty function), SIMPLEX (Simplex method with a penalty function), and RANDOM (Richardson's random method) algorithms. Also, This problem was solved by He and Wang <ref type="bibr" target="#b49">[50]</ref> using CPSO, Montes and Coello <ref type="bibr" target="#b51">[52]</ref> employing evolution strategies and the Kaveh and Talatahari <ref type="bibr" target="#b50">[51]</ref> using the ACO. The comparison of results, are shown in Table <ref type="table" target="#tab_12">16</ref>. The statistical simulation results are summarized in Table <ref type="table" target="#tab_13">17</ref>. From Table <ref type="table" target="#tab_13">17</ref>, it can be seen that, the standard deviation of the results by SFS in 30 independent runs is very small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>In this paper, we propose a new model based on random fractals to solve both constrained and unconstrained global optimization problems with continuous variables. Our method employs two main processes including: Diffusion process and Update process. During the first process, each agent in the group generates some new agents around its current position, and forms the diffusion process. The second process simulates the updating position of each agent based on some statistical approaches. To verify the performance of our algorithm, some benchmark functions including spectrum classic, modern and engineering design functions which are commonly used in literature, have been used. Surprisingly, obtained results show that our new algorithm clearly outperforms some well-known algorithms from literature. The proposed system can contribute to answering many fundamental and practical problems in many fields such as machine learning, bioinformatics, image processing and generally any field in need of optimization. Improving the classification performance, being considered as a powerful feature selection, determining RNA secondary predictions, finding high order SNP interactions, and improving image segmentation are some possible applications contemplated as future studies. However, further research is required to examine the efficiencies of the proposed algorithm on other real world and large scale optimization problems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. A simple Fractal growth by DLA method.</figDesc><graphic coords="3,75.86,67.92,184.35,172.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Particle diffusion.</figDesc><graphic coords="4,342.09,67.92,170.27,119.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>6 ,</head><label>6</label><figDesc>as weight factor and c 1 = c 2 = 2[29] 100 CS b = 1.5 and p a = 0.25 have been recommended in [30] 100 MCS p a = 0.7 and A = 100 according to [28] 100 GSA G o = 100 and a = 20, and T is set to NP [9] 100 ABC limit = 50D has been used as recommended in [7] 100 SFS Maximum Diffusion Number (MDN) is set to 1. 100</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Graphical results of obtained results of PSO, CS, MCS, GSA, ABC, FS and SFS over function f 1 and f 5 .</figDesc><graphic coords="8,78.07,67.92,426.36,179.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. ANOVA test and graphical results of functions f 8 and f 9 respectively.</figDesc><graphic coords="9,87.87,67.92,425.40,177.34" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. ANOVA tests of the global minimum values, which are computed by using the PSO, CS, MCS, GSA, ABC, AMO and SFS for f 14 and f 16 .</figDesc><graphic coords="10,78.07,67.92,425.40,177.11" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. ANOVA test and graphical results of functions F4 and F5 respectively.</figDesc><graphic coords="10,78.07,298.21,425.64,182.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. ANOVA tests for SFS parts.</figDesc><graphic coords="10,78.07,548.50,425.40,178.92" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Effect of MDN on convergence rate for classical benchmark function F1.</figDesc><graphic coords="13,144.57,195.42,312.14,202.79" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Effect of MDN on time consumption for each cycle on classical benchmark function F1.</figDesc><graphic coords="13,337.78,440.50,198.57,164.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Tension/compression spring design problem.</figDesc><graphic coords="15,54.65,183.12,227.03,94.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Pressure vessel.</figDesc><graphic coords="15,54.60,335.34,227.05,106.53" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Welded beam.</figDesc><graphic coords="15,323.60,183.40,226.99,133.91" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>2</head><label>2</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>The benchmark function used in our experiment.</figDesc><table><row><cell>Test function</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>The description detail of low-dimensional multimodal functions.</figDesc><table><row><cell>Functions</cell><cell>Optimal location</cell><cell>Optimum</cell></row><row><cell>f 14</cell><cell>(À32, À32)</cell><cell>0.998004</cell></row><row><cell>f 15</cell><cell>(0.1928, 0.1908, 0.1231, 0.1358)</cell><cell>0.0003075</cell></row><row><cell>f 16</cell><cell>(0.089, À0.712), (À0.089, 0.712)</cell><cell>À1.0316285</cell></row><row><cell>f 17</cell><cell>(À3.14, 12.27), (3.14, 2.275), (9.42, 2.42)</cell><cell>0.398</cell></row><row><cell>f 18</cell><cell>(0, À1)</cell><cell>3</cell></row><row><cell>f 19</cell><cell>(0.114, 0.556, 0.852)</cell><cell>À3.86</cell></row><row><cell>f 20</cell><cell>(0.201, 0.15,0.477, 0.275, 0.311, 0.657)</cell><cell>À3.32</cell></row><row><cell>f 21</cell><cell>5 local minima in a ij i = 1, 2, . . ., 5</cell><cell>À10.1532</cell></row><row><cell>f 22</cell><cell>7 local minima in a ij i = 1, 2, . . ., 7</cell><cell>À10.4029</cell></row><row><cell>f 23</cell><cell>10 local minima in a ij i = 1, 2, . . ., 10</cell><cell>À10.5364</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Maximum iteration for each classic function.</figDesc><table><row><cell>Functions</cell><cell>Iterations</cell><cell>Functions</cell><cell>Iterations</cell></row><row><cell>f 01</cell><cell>500</cell><cell>f 13</cell><cell>2000</cell></row><row><cell>f 02</cell><cell>950</cell><cell>f 14</cell><cell>150</cell></row><row><cell>f 03</cell><cell>500</cell><cell>f 15</cell><cell>400</cell></row><row><cell>f 04</cell><cell>1000</cell><cell>f 16</cell><cell>200</cell></row><row><cell>f 05</cell><cell>8000</cell><cell>f 17</cell><cell>180</cell></row><row><cell>f 06</cell><cell>15</cell><cell>f 18</cell><cell>200</cell></row><row><cell>f 07</cell><cell>1500</cell><cell>f 19</cell><cell>100</cell></row><row><cell>f 08</cell><cell>1500</cell><cell>f 20</cell><cell>250</cell></row><row><cell>f 09</cell><cell>40</cell><cell>f 21</cell><cell>200</cell></row><row><cell>f 10</cell><cell>60</cell><cell>f 22</cell><cell>200</cell></row><row><cell>f 11</cell><cell>70</cell><cell>f 23</cell><cell>200</cell></row><row><cell>f 12</cell><cell>2000</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5</head><label>5</label><figDesc>Minimization result of benchmark functions f 1 -f 7 for different algorithms. Among all mentioned functions, f 05 and f 06 are two of the hardest functions the global minimum of which all algorithms except SFS and FS have failed the attempt to find.</figDesc><table><row><cell>Functions</cell><cell>Algorithm</cell><cell>PSO</cell><cell>CS</cell><cell>MCS</cell><cell>GSA</cell><cell>ABC</cell><cell>FS</cell><cell>SFS</cell></row><row><cell>f 01</cell><cell>Mean</cell><cell>7.8157</cell><cell>90.6072</cell><cell>1.0082</cell><cell>5.8000EÀ18</cell><cell>3.5678EÀ05</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>2.1173</cell><cell>26.2332</cell><cell>0.2719</cell><cell>1.4422EÀ18</cell><cell>3.1143EÀ05</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>5</cell><cell>3</cell><cell>4</cell><cell></cell><cell>1</cell></row><row><cell>f 02</cell><cell>Mean</cell><cell>0.9676</cell><cell>9.7033</cell><cell>0.1814</cell><cell>1.0208EÀ08</cell><cell>7.7417EÀ06</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0781</cell><cell>1.9805</cell><cell>0.0331</cell><cell>1.3353EÀ09</cell><cell>2.3977EÀ06</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>5</cell><cell>3</cell><cell>4</cell><cell></cell><cell>1</cell></row><row><cell>f 03</cell><cell>Mean</cell><cell>65.5158</cell><cell>3.8434E+03</cell><cell>461.9995</cell><cell>248.3737</cell><cell>1.6214E+04</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>16.4385</cell><cell>723.9758</cell><cell>122.9394</cell><cell>92.9878</cell><cell>2.2517E+03</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>6</cell><cell>5</cell><cell>4</cell><cell>7</cell><cell></cell><cell>1</cell></row><row><cell>f 04</cell><cell>Mean</cell><cell>0.9874</cell><cell>7.2334</cell><cell>1.7347</cell><cell>1.0193EÀ09</cell><cell>22.1724</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0176</cell><cell>0.6757</cell><cell>0.5124</cell><cell>1.5271EÀ10</cell><cell>2.4676</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>6</cell><cell>5</cell><cell>3</cell><cell>7</cell><cell></cell><cell>1</cell></row><row><cell>f 05</cell><cell>Mean</cell><cell>24.1219</cell><cell>4.9820</cell><cell>58.1470</cell><cell>18.8115</cell><cell>0.0607</cell><cell>15.5063</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>22.9452</cell><cell>1.7464</cell><cell>33.0726</cell><cell>0.2069</cell><cell>0.1147</cell><cell>0.1294</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>5</cell><cell>3</cell><cell>7</cell><cell>6</cell><cell>2</cell><cell></cell><cell>1</cell></row><row><cell>f 06</cell><cell>Mean</cell><cell>2.6550E+04</cell><cell>4.3129E+04</cell><cell>4.4378e+03</cell><cell>5.5671E+04</cell><cell>4.8813E+04</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>1.6092E+03</cell><cell>7.2109E+03</cell><cell>751.8954</cell><cell>4.4908E+03</cell><cell>6.7554E+03</cell><cell></cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>5</cell><cell>3</cell><cell>7</cell><cell>6</cell><cell></cell><cell>1</cell></row><row><cell>f 07</cell><cell>Mean</cell><cell>111.8227</cell><cell>0.0246</cell><cell>0.0091</cell><cell>0.0048</cell><cell>0.0621</cell><cell>5.7231EÀ04</cell><cell>3.0566eÀ004</cell></row><row><cell></cell><cell>StDev</cell><cell>18.2958</cell><cell>0.0079</cell><cell>0.0022</cell><cell>0.0022</cell><cell>0.0131</cell><cell>1.4647eÀ005</cell><cell>4.3471EÀ04</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>5</cell><cell>4</cell><cell>3</cell><cell>6</cell><cell></cell><cell>1</cell></row><row><cell>Average rank</cell><cell></cell><cell>5</cell><cell>5.5714</cell><cell>4.8571</cell><cell>4.1429</cell><cell>5.1429</cell><cell>1.5714</cell><cell>1</cell></row><row><cell>Overall rank</cell><cell></cell><cell>5</cell><cell>7</cell><cell>4</cell><cell>3</cell><cell>6</cell><cell></cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 6</head><label>6</label><figDesc>Minimization result of benchmark functions f 08 -f 13 for different algorithms.</figDesc><table><row><cell>Functions</cell><cell>Algorithm</cell><cell>PSO</cell><cell>CS</cell><cell>MCS</cell><cell>GSA</cell><cell>ABC</cell><cell>FS</cell><cell>SFS</cell></row><row><cell>f 08</cell><cell>Mean</cell><cell>À2.7722E+03</cell><cell>À8.9784E+03</cell><cell>À9.8013e+03</cell><cell>À2.9244E+03</cell><cell>À1.2255E+04</cell><cell>À6.6156e+03</cell><cell>À1.2569E+04</cell></row><row><cell></cell><cell>StDev</cell><cell>424.8212</cell><cell>198.0568</cell><cell>531.0334</cell><cell>427.6096</cell><cell>57.9874</cell><cell>673.2601</cell><cell>8.5748EÀ13</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>4</cell><cell>3</cell><cell>6</cell><cell>2</cell><cell>5</cell><cell>1</cell></row><row><cell>f 09</cell><cell>Mean</cell><cell>254.8251</cell><cell>294.0493</cell><cell>135.0405</cell><cell>197.3704</cell><cell>197.9254</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>10.6395</cell><cell>14.3249</cell><cell>21.6173</cell><cell>19.4655</cell><cell>16.5509</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>1</cell><cell>1</cell></row><row><cell>f 10</cell><cell>Mean</cell><cell>7.4085</cell><cell>19.3448</cell><cell>12.1188</cell><cell>7.3317</cell><cell>19.0133</cell><cell>8.8818EÀ16</cell><cell>8.8818EÀ16</cell></row><row><cell></cell><cell>StDev</cell><cell>0.3121</cell><cell>0.3503</cell><cell>0.7515</cell><cell>0.6787</cell><cell>0.4813</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>7</cell><cell>5</cell><cell>3</cell><cell>6</cell><cell>1</cell><cell>1</cell></row><row><cell>f 11</cell><cell>Mean</cell><cell>327.2664</cell><cell>212.4145</cell><cell>8.3201</cell><cell>479.4395</cell><cell>135.9647</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>32.8165</cell><cell>39.7384</cell><cell>1.5369</cell><cell>44.4233</cell><cell>34.1362</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>5</cell><cell>3</cell><cell>7</cell><cell>4</cell><cell>1</cell><cell>1</cell></row><row><cell>f 12</cell><cell>Mean</cell><cell>0.8562</cell><cell>1.4726</cell><cell>0.1379</cell><cell>2.8705EÀ20</cell><cell>1.7128EÀ13</cell><cell>0.1278</cell><cell>1.5705EÀ32</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0928</cell><cell>0.3609</cell><cell>0.2862</cell><cell>6.0309EÀ21</cell><cell>1.5969EÀ13</cell><cell>0.0418</cell><cell>2.8850EÀ48</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>5</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>1</cell></row><row><cell>f 13</cell><cell>Mean</cell><cell>0.9136</cell><cell>0.9328</cell><cell>0.0039</cell><cell>3.9379EÀ19</cell><cell>3.3132EÀ12</cell><cell>0.8017</cell><cell>1.3498EÀ32</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0521</cell><cell>0.2126</cell><cell>0.0053</cell><cell>8.4161EÀ20</cell><cell>2.5622EÀ12</cell><cell>0.1226</cell><cell>2.8850EÀ48</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>4</cell><cell>2</cell><cell>3</cell><cell>5</cell><cell>1</cell></row><row><cell>Average rank</cell><cell></cell><cell>5.8333</cell><cell>6.1667</cell><cell>3.8333</cell><cell>4</cell><cell>3.8333</cell><cell>2.8333</cell><cell>1</cell></row><row><cell>Overall rank</cell><cell></cell><cell>6</cell><cell>7</cell><cell>3</cell><cell>5</cell><cell>3</cell><cell>2</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7</head><label>7</label><figDesc>Minimization result of benchmark functions f 14 -f 23 for different algorithms.</figDesc><table><row><cell>Functions</cell><cell>Algorithm</cell><cell>PSO</cell><cell>CS</cell><cell>MCS</cell><cell>GSA</cell><cell>ABC</cell><cell>FS</cell><cell>SFS</cell></row><row><cell>f 14</cell><cell>Mean</cell><cell>1.3959</cell><cell>0.9980</cell><cell>2.3440</cell><cell>5.7804</cell><cell>0.9980</cell><cell>1.8899</cell><cell>0.9980</cell></row><row><cell></cell><cell>StDev</cell><cell>0.5131</cell><cell>1.4658EÀ06</cell><cell>2.1186</cell><cell>2.2194</cell><cell>8.5998EÀ16</cell><cell>1.2743</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>3</cell><cell>6</cell><cell>7</cell><cell>2</cell><cell>5</cell><cell>1</cell></row><row><cell>f 15</cell><cell>Mean</cell><cell>0.0677</cell><cell>5.5634EÀ04</cell><cell>5.4872EÀ04</cell><cell>0.0035</cell><cell>8.2873EÀ04</cell><cell>0.0103</cell><cell>3.0749EÀ04</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0383</cell><cell>7.4905EÀ05</cell><cell>1.5447EÀ04</cell><cell>9.8772EÀ04</cell><cell>2.8229EÀ04</cell><cell>0.0131</cell><cell>1.0222EÀ19</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>3</cell><cell>2</cell><cell>5</cell><cell>4</cell><cell>6</cell><cell>1</cell></row><row><cell>f 16</cell><cell>Mean</cell><cell>À1.0313</cell><cell>À1.0316</cell><cell>À1.0316</cell><cell>À1.0316</cell><cell>À1.0316</cell><cell>À1.0316</cell><cell>À1.0316</cell></row><row><cell></cell><cell>StDev</cell><cell>4.1210EÀ04</cell><cell>7.5569EÀ12</cell><cell>3.6546EÀ10</cell><cell>1.9582EÀ16</cell><cell>2.2204EÀ16</cell><cell>8.2348EÀ07</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>4</cell><cell>5</cell><cell>2</cell><cell>3</cell><cell>6</cell><cell>1</cell></row><row><cell>f 17</cell><cell>Mean</cell><cell>0.3984</cell><cell>0.3979</cell><cell>0.3979</cell><cell>0.3979</cell><cell>0.3979</cell><cell>0.3979</cell><cell>0.3979</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0010</cell><cell>1.1217EÀ08</cell><cell>3.6974EÀ09</cell><cell>0</cell><cell>2.5796EÀ13</cell><cell>4.2354EÀ07</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>5</cell><cell>4</cell><cell>1</cell><cell>3</cell><cell>6</cell><cell>1</cell></row><row><cell>f 18</cell><cell>Mean</cell><cell>4.2797</cell><cell>3.0000</cell><cell>3.0000</cell><cell>3.0000</cell><cell>3.0000</cell><cell>3.0000</cell><cell>3.0000</cell></row><row><cell></cell><cell>StDev</cell><cell>2.3313</cell><cell>2.9873EÀ09</cell><cell>7.8490EÀ08</cell><cell>3.2667EÀ15</cell><cell>1.0726EÀ08</cell><cell>9.0515EÀ06</cell><cell>4.6811EÀ16</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>3</cell><cell>5</cell><cell>2</cell><cell>4</cell><cell>6</cell><cell>1</cell></row><row><cell>f 19</cell><cell>Mean</cell><cell>À3.5427</cell><cell>À3.8628</cell><cell>À3.8628</cell><cell>À3.8564</cell><cell>À3.8628</cell><cell>À3.8365</cell><cell>À3.8628</cell></row><row><cell></cell><cell>StDev</cell><cell>0.2142</cell><cell>8.6922EÀ06</cell><cell>9.7121EÀ08</cell><cell>0.0038</cell><cell>1.7901EÀ10</cell><cell>0.0231</cell><cell>3.9165EÀ16</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>4</cell><cell>3</cell><cell>5</cell><cell>2</cell><cell>6</cell><cell>1</cell></row><row><cell>f 20</cell><cell>Mean</cell><cell>À2.0641</cell><cell>À3.3213</cell><cell>À3.2744</cell><cell>À3.3220</cell><cell>À3.3220</cell><cell>À3.2992</cell><cell>À3.3220</cell></row><row><cell></cell><cell>StDev</cell><cell>0.4120</cell><cell>4.8747EÀ04</cell><cell>0.0614</cell><cell>4.4409EÀ16</cell><cell>1.8245EÀ09</cell><cell>0.0481</cell><cell>3.6260EÀ16</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>4</cell><cell>6</cell><cell>2</cell><cell>3</cell><cell>5</cell><cell>1</cell></row><row><cell>f 21</cell><cell>Mean</cell><cell>À0.7021</cell><cell>À10.1430</cell><cell>À3.4299</cell><cell>À7.4383</cell><cell>À10.1532</cell><cell>À5.5482</cell><cell>À10.1532</cell></row><row><cell></cell><cell>StDev</cell><cell>0.2546</cell><cell>0.0132</cell><cell>2.3623</cell><cell>3.5926</cell><cell>1.5163EÀ07</cell><cell>1.5712</cell><cell>1.7764EÀ15</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>3</cell><cell>6</cell><cell>4</cell><cell>2</cell><cell>5</cell><cell>1</cell></row><row><cell>f 22</cell><cell>Mean</cell><cell>À8.1481</cell><cell>À10.3910</cell><cell>À8.3021</cell><cell>À10.4029</cell><cell>À10.4029</cell><cell>À5.9766</cell><cell>À10.4029</cell></row><row><cell></cell><cell>StDev</cell><cell>1.7271</cell><cell>0.0082</cell><cell>3.3930</cell><cell>2.3685EÀ15</cell><cell>1.3527EÀ05</cell><cell>2.2910</cell><cell>1.6748EÀ15</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>4</cell><cell>5</cell><cell>2</cell><cell>3</cell><cell>7</cell><cell>1</cell></row><row><cell>f 23</cell><cell>Mean</cell><cell>À9.5725</cell><cell>À10.4927</cell><cell>À5.9976</cell><cell>À10.5364</cell><cell>À10.5364</cell><cell>À5.9830</cell><cell>À10.5364</cell></row><row><cell></cell><cell>StDev</cell><cell>1.0623</cell><cell>0.0293</cell><cell>3.9158</cell><cell>2.1349EÀ15</cell><cell>3.2599EÀ05</cell><cell>1.8299</cell><cell>1.8724EÀ15</cell></row><row><cell></cell><cell>Rank</cell><cell>7</cell><cell>4</cell><cell>5</cell><cell>2</cell><cell>3</cell><cell>6</cell><cell>1</cell></row><row><cell>Average rank</cell><cell></cell><cell>6.6000</cell><cell>3.7000</cell><cell>4.7000</cell><cell>3.2000</cell><cell>2.9000</cell><cell>5.8000</cell><cell>1</cell></row><row><cell>Overall rank</cell><cell></cell><cell>7</cell><cell>4</cell><cell>5</cell><cell>3</cell><cell>2</cell><cell>6</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8</head><label>8</label><figDesc>The maximum iteration for each classic function.</figDesc><table><row><cell>Functions</cell><cell>Iterations</cell><cell>Functions</cell><cell>Iterations</cell></row><row><cell>f 01</cell><cell>1900</cell><cell>f 11</cell><cell>9000</cell></row><row><cell>f 02</cell><cell>2150</cell><cell>f 12</cell><cell>6000</cell></row><row><cell>f 03</cell><cell>3000</cell><cell>f 13</cell><cell>10,000</cell></row><row><cell>f 04</cell><cell>15,000</cell><cell>f 14</cell><cell>15,000</cell></row><row><cell>f 05</cell><cell>4700</cell><cell>f 15</cell><cell>4500</cell></row><row><cell>f 06</cell><cell>6300</cell><cell>f 16</cell><cell>15,000</cell></row><row><cell>f 07</cell><cell>5300</cell><cell>f 17</cell><cell>8500</cell></row><row><cell>f 08</cell><cell>7000</cell><cell>f 18</cell><cell>9000</cell></row><row><cell>f 09</cell><cell>15,500</cell><cell>f 19</cell><cell>10,200</cell></row><row><cell>f 10</cell><cell>5000</cell><cell>f 20</cell><cell>8000</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 10</head><label>10</label><figDesc>Minimization result of benchmark functions f 01 -f 20 for different algorithms.</figDesc><table><row><cell>Functions</cell><cell>Algorithm</cell><cell>BSA</cell><cell>CMA-ES</cell><cell>DE</cell><cell>GSA</cell><cell>ABC</cell><cell>AMO</cell><cell>SFS</cell></row><row><cell>f 01</cell><cell>Mean</cell><cell>4.8469EÀ06</cell><cell>6.8632E+07</cell><cell>8.2863EÀ17</cell><cell>7.2092E+06</cell><cell>4.3641EÀ16</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>3.3491EÀ06</cell><cell>3.2056E+07</cell><cell>9.7151EÀ17</cell><cell>1.4321E+06</cell><cell>9.0985EÀ17</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>5</cell><cell>7</cell><cell>3</cell><cell>6</cell><cell>4</cell><cell>1</cell><cell>1</cell></row><row><cell>f 02</cell><cell>Mean</cell><cell>5.9635</cell><cell>223.5477</cell><cell>159.7944</cell><cell>6.6662</cell><cell>0</cell><cell>6.0036EÀ11</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>2.4086</cell><cell>84.8192</cell><cell>24.5465</cell><cell>1.6281</cell><cell>0</cell><cell>1.8940EÀ10</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>7</cell><cell>6</cell><cell>5</cell><cell>1</cell><cell>3</cell><cell>1</cell></row><row><cell>f 03</cell><cell>Mean</cell><cell>1.1438EÀ09</cell><cell>9.4655</cell><cell>5.3291EÀ15</cell><cell>1.3771EÀ09</cell><cell>3.0198EÀ14</cell><cell>3.5527EÀ15</cell><cell>3.5527EÀ15</cell></row><row><cell></cell><cell>StDev</cell><cell>6.0197EÀ10</cell><cell>8.3909</cell><cell>1.8724EÀ15</cell><cell>1.6860EÀ10</cell><cell>3.4526EÀ15</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>5</cell><cell>7</cell><cell>3</cell><cell>6</cell><cell>4</cell><cell>1</cell><cell>1</cell></row><row><cell>f 04</cell><cell>Mean</cell><cell>1.2156E+09</cell><cell>6.7160E+09</cell><cell>1.4413E+08</cell><cell>2.3939E+10</cell><cell>2.7032E+11</cell><cell>2.0024E+10</cell><cell>4.3281EÀ20</cell></row><row><cell></cell><cell>StDev</cell><cell>8.7094E+08</cell><cell>4.5880E+09</cell><cell>3.2666E+08</cell><cell>4.7304E+09</cell><cell>9.9930E+10</cell><cell>8.6509E+09</cell><cell>1.6711EÀ20</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>4</cell><cell>2</cell><cell>6</cell><cell>7</cell><cell>5</cell><cell>1</cell></row><row><cell>f 05</cell><cell>Mean</cell><cell>1.1127E+06</cell><cell>3.2207E+07</cell><cell>6.9659E+05</cell><cell>1.8744E+06</cell><cell>5.7088E+06</cell><cell>6.7998E+05</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>1.0604E+06</cell><cell>1.1619E+07</cell><cell>6.7155E+05</cell><cell>8.4156E+05</cell><cell>1.8671E+06</cell><cell>5.7544E+05</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>7</cell><cell>3</cell><cell>5</cell><cell>6</cell><cell>2</cell><cell>1</cell></row><row><cell>f 06</cell><cell>Mean</cell><cell>5.4374E+03</cell><cell>1.5869E+07</cell><cell>20.8572</cell><cell>4.1346E+05</cell><cell>3.3338E+06</cell><cell>1.9669E+05</cell><cell>3.5531EÀ09</cell></row><row><cell></cell><cell>StDev</cell><cell>5.4528E+03</cell><cell>1.4141E+05</cell><cell>0.0663</cell><cell>5.4665E+05</cell><cell>6.7961E+05</cell><cell>3.0303E+05</cell><cell>1.1235EÀ09</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>7</cell><cell>2</cell><cell>5</cell><cell>6</cell><cell>4</cell><cell>1</cell></row><row><cell>f 07</cell><cell>Mean</cell><cell>894.5796</cell><cell>1.3328E+06</cell><cell>1.1636EÀ22</cell><cell>4.1009E+04</cell><cell>6.5498E+07</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>1.3173E+03</cell><cell>1.4065E+06</cell><cell>1.0730EÀ22</cell><cell>3.9536E+03</cell><cell>4.1649E+07</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>6</cell><cell>3</cell><cell>5</cell><cell>7</cell><cell>1</cell><cell>1</cell></row><row><cell>f 08</cell><cell>Mean</cell><cell>1.2347E+05</cell><cell>2.1351E+09</cell><cell>4.5319EÀ21</cell><cell>1.8478E+07</cell><cell>1.6821E+06</cell><cell>1.3801E+06</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>1.8343E+05</cell><cell>3.8577E+09</cell><cell>8.2374EÀ21</cell><cell>4.7711E+07</cell><cell>1.0682E+06</cell><cell>1.6550E+06</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>7</cell><cell>2</cell><cell>6</cell><cell>5</cell><cell>4</cell><cell>1</cell></row><row><cell>f 09</cell><cell>Mean</cell><cell>4.5688E+03</cell><cell>3.7015E+04</cell><cell>2.0942E+03</cell><cell>4.9286E+04</cell><cell>2.9312E+05</cell><cell>5.0347E+04</cell><cell>5.5108EÀ26</cell></row><row><cell></cell><cell>StDev</cell><cell>2.8090E+03</cell><cell>2.0906E+04</cell><cell>1.8450E+03</cell><cell>1.7239E+04</cell><cell>6.9067E+04</cell><cell>2.7133E+04</cell><cell>1.6724EÀ26</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>4</cell><cell>2</cell><cell>5</cell><cell>7</cell><cell>6</cell><cell>1</cell></row><row><cell>f 10</cell><cell>Mean</cell><cell>27.7971</cell><cell>82.1360</cell><cell>166.1583</cell><cell>37.5427</cell><cell>29.2470</cell><cell>29.4090</cell><cell>14.0978</cell></row><row><cell></cell><cell>StDev</cell><cell>3.0713</cell><cell>24.7454</cell><cell>9.9685</cell><cell>4.4786</cell><cell>4.1242</cell><cell>2.7395</cell><cell>3.8297</cell></row><row><cell></cell><cell>Rank</cell><cell>2</cell><cell>6</cell><cell>7</cell><cell>5</cell><cell>3</cell><cell>4</cell><cell>1</cell></row><row><cell>f 11</cell><cell>Mean</cell><cell>1.9208</cell><cell>52.7430</cell><cell>20.6257</cell><cell>2.3254</cell><cell>4.8453</cell><cell>2.9187</cell><cell>7.1054EÀ15</cell></row><row><cell></cell><cell>StDev</cell><cell>1.1409</cell><cell>0.1785</cell><cell>0.1159</cell><cell>0.9900</cell><cell>0.8090</cell><cell>0.4007</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>2</cell><cell>7</cell><cell>6</cell><cell>3</cell><cell>5</cell><cell>4</cell><cell>1</cell></row><row><cell>f 12</cell><cell>Mean</cell><cell>0.0030</cell><cell>2.0843</cell><cell>4.9146EÀ29</cell><cell>4.3179EÀ18</cell><cell>14.5151</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0019</cell><cell>1.5671</cell><cell>3.9724EÀ29</cell><cell>8.7855EÀ19</cell><cell>6.8952</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>5</cell><cell>6</cell><cell>3</cell><cell>4</cell><cell>7</cell><cell>1</cell><cell>1</cell></row><row><cell>f 13</cell><cell>Mean</cell><cell>0.2250</cell><cell>445.8593</cell><cell>1.1960</cell><cell>2.0048E+03</cell><cell>5.1361</cell><cell>2.6539</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.3140</cell><cell>402.7247</cell><cell>1.9257</cell><cell>586.7841</cell><cell>3.5850</cell><cell>1.6702</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>2</cell><cell>6</cell><cell>3</cell><cell>7</cell><cell>5</cell><cell>4</cell><cell>1</cell></row><row><cell>f 14</cell><cell>Mean</cell><cell>4.2395E+04</cell><cell>1.7432E+04</cell><cell>1.8530E+04</cell><cell>8.2062E+04</cell><cell>3.1586E+05</cell><cell>1.1510E+05</cell><cell>8.8622EÀ25</cell></row><row><cell></cell><cell>StDev</cell><cell>1.5834E+04</cell><cell>1.1117E+04</cell><cell>7.9109E+03</cell><cell>4.0351E+04</cell><cell>1.0169E+05</cell><cell>4.7610E+04</cell><cell>2.9666EÀ25</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>2</cell><cell>3</cell><cell>5</cell><cell>7</cell><cell>6</cell><cell>1</cell></row><row><cell>f 15</cell><cell>Mean</cell><cell>50.9949</cell><cell>42.7921</cell><cell>174.4380</cell><cell>23.5421</cell><cell>61.9689</cell><cell>44.9184</cell><cell>21.7987</cell></row><row><cell></cell><cell>StDev</cell><cell>6.2798</cell><cell>4.9626</cell><cell>8.7652</cell><cell>4.1871</cell><cell>4.2834</cell><cell>5.3825</cell><cell>3.8652</cell></row><row><cell></cell><cell>Rank</cell><cell>5</cell><cell>3</cell><cell>7</cell><cell>2</cell><cell>6</cell><cell>4</cell><cell>1</cell></row><row><cell>f 16</cell><cell>Mean</cell><cell>3.2806</cell><cell>55.7207</cell><cell>39.5581</cell><cell>0.0889</cell><cell>12.9872</cell><cell>8.7969</cell><cell>1.3145EÀ14</cell></row><row><cell></cell><cell>StDev</cell><cell>2.1032</cell><cell>32.9190</cell><cell>20.7530</cell><cell>0.0128</cell><cell>3.1057</cell><cell>2.0553</cell><cell>1.7161EÀ15</cell></row><row><cell></cell><cell>Rank</cell><cell>3</cell><cell>7</cell><cell>6</cell><cell>2</cell><cell>5</cell><cell>4</cell><cell>1</cell></row><row><cell>f 17</cell><cell>Mean</cell><cell>0.0188</cell><cell>0.0024</cell><cell>1.4357EÀ28</cell><cell>5.4468EÀ18</cell><cell>3.8360</cell><cell>1.5146EÀ29</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.0128</cell><cell>0.0020</cell><cell>1.4056EÀ28</cell><cell>9.4311EÀ19</cell><cell>2.0564</cell><cell>2.4388EÀ29</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>5</cell><cell>3</cell><cell>4</cell><cell>7</cell><cell>2</cell><cell>1</cell></row><row><cell>f 18</cell><cell>Mean</cell><cell>7.5503</cell><cell>3.6786E+03</cell><cell>0.3987</cell><cell>312.9730</cell><cell>8.1174</cell><cell>1.6596</cell><cell>1.9722EÀ29</cell></row><row><cell></cell><cell>StDev</cell><cell>2.9290</cell><cell>5.7331E+03</cell><cell>1.2607</cell><cell>705.7324</cell><cell>3.5365</cell><cell>3.3689</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>4</cell><cell>7</cell><cell>2</cell><cell>6</cell><cell>5</cell><cell>3</cell><cell>1</cell></row><row><cell>f 19</cell><cell>Mean</cell><cell>0.4749</cell><cell>0.0074</cell><cell>7.6480EÀ26</cell><cell>8.0626EÀ18</cell><cell>542.0824</cell><cell>1.1620EÀ27</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>0.2948</cell><cell>0.0120</cell><cell>1.3953EÀ25</cell><cell>2.4198EÀ18</cell><cell>259.9031</cell><cell>5.4455EÀ28</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>5</cell><cell>3</cell><cell>4</cell><cell>7</cell><cell>2</cell><cell>1</cell></row><row><cell>f 20</cell><cell>Mean</cell><cell>18.3278</cell><cell>24.4296</cell><cell>8.0986EÀ26</cell><cell>16.2356</cell><cell>0.1212</cell><cell>0.0024</cell><cell>0</cell></row><row><cell></cell><cell>StDev</cell><cell>19.1371</cell><cell>1.9710</cell><cell>8.5162EÀ26</cell><cell>0.2309</cell><cell>0.2115</cell><cell>0.0036</cell><cell>0</cell></row><row><cell></cell><cell>Rank</cell><cell>6</cell><cell>7</cell><cell>2</cell><cell>5</cell><cell>4</cell><cell>3</cell><cell>1</cell></row><row><cell>Average rank</cell><cell></cell><cell>3.9500</cell><cell>5.8500</cell><cell>3.5500</cell><cell>4.8000</cell><cell>5.4000</cell><cell>3.2000</cell><cell>1</cell></row><row><cell>Overall rank</cell><cell></cell><cell>4</cell><cell>7</cell><cell>3</cell><cell>5</cell><cell>6</cell><cell>2</cell><cell>1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 11</head><label>11</label><figDesc>Investigation of SFS parts in final results.</figDesc><table><row><cell cols="2">Function</cell><cell>Without diffusion</cell><cell></cell><cell cols="2">Without first updating process</cell><cell cols="2">Without second updating process</cell></row><row><cell></cell><cell></cell><cell>Mean</cell><cell>Std</cell><cell>Mean</cell><cell>Std</cell><cell>Mean</cell><cell>Std</cell></row><row><cell cols="2">f 01</cell><cell>2.3832E+004</cell><cell>3.5797E+003</cell><cell>5.8276EÀ308</cell><cell>0</cell><cell>0</cell><cell>0</cell></row><row><cell cols="2">f 05</cell><cell>2.0946E+007</cell><cell>6.0629E+006</cell><cell>18.0299</cell><cell>5.8164</cell><cell>6.6682</cell><cell>1.8424</cell></row><row><cell>f</cell><cell>CEC 04</cell><cell>1.0647E+013</cell><cell>3.5095E+012</cell><cell>5.2037EÀ019</cell><cell>4.8530EÀ020</cell><cell>2.2312E+009</cell><cell>8.9182E+008</cell></row><row><cell>f</cell><cell>CEC 05</cell><cell>2.4651E+007</cell><cell>1.0507E+007</cell><cell>144.6729</cell><cell>27.0263</cell><cell>2.6899E+006</cell><cell>5.1088E+005</cell></row><row><cell>f</cell><cell>CEC 06</cell><cell>1.0779E+007</cell><cell>5.9898E+005</cell><cell>9.9555E+005</cell><cell>8.7562E+005</cell><cell>1.4925E+006</cell><cell>5.0222E+005</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 12</head><label>12</label><figDesc>Comparing of the best solution for tension/compression spring design problem found by different algorithms.</figDesc><table><row><cell></cell><cell>MPM [39]</cell><cell>GA [40]</cell><cell>CEPSO [41]</cell><cell>CEDE [42]</cell><cell>WCA [43]</cell><cell>SFS</cell></row><row><cell>w</cell><cell>0.05000</cell><cell>0.051989</cell><cell>0.051728</cell><cell>0.051609</cell><cell>0.051689</cell><cell>0.050000000000000</cell></row><row><cell>d</cell><cell>0.31590</cell><cell>0.363965</cell><cell>0.357644</cell><cell>0.354714</cell><cell>0.356718</cell><cell>0.374432870716765</cell></row><row><cell>L</cell><cell>14.2500</cell><cell>10.890522</cell><cell>11.244543</cell><cell>11.410831</cell><cell>11.288957</cell><cell>8.546569316461103</cell></row><row><cell>g 1</cell><cell>À0.000014</cell><cell>À0.000013</cell><cell>À8.25EÀ04</cell><cell>À3.90EÀ05</cell><cell>À1.65EÀ13</cell><cell>0</cell></row><row><cell>g 2</cell><cell>À0.003782</cell><cell>À0.000021</cell><cell>À2.52EÀ05</cell><cell>À1.83EÀ04</cell><cell>À7.90EÀ14</cell><cell>À1.1102EÀ016</cell></row><row><cell>g 3</cell><cell>À3.938302</cell><cell>À1.061338</cell><cell>À4.051306</cell><cell>À4.048627</cell><cell>À4.053399</cell><cell>À4.8607</cell></row><row><cell>g 4</cell><cell>À0.756067</cell><cell>À0.722698</cell><cell>À0.727085</cell><cell>À0.729118</cell><cell>À0.727864</cell><cell>À0.7170</cell></row><row><cell>f</cell><cell>0.0128334</cell><cell>0.0126810</cell><cell>0.012674</cell><cell>0.0126702</cell><cell>0.012665</cell><cell>0.009872455563440</cell></row><row><cell>Table 13</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Statistical results of different approaches for tension/compression spring design problem.</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>MPM [39]</cell><cell>GA [40]</cell><cell>CEPSO [41]</cell><cell>CEDE [42]</cell><cell>WCA [43]</cell><cell>SFS</cell></row><row><cell>Best</cell><cell>0.0128334</cell><cell>0.0126810</cell><cell>0.012674</cell><cell>0.0126702</cell><cell>0.012665</cell><cell>0.009872455563440</cell></row><row><cell>Mean</cell><cell>NA</cell><cell>0.0127420</cell><cell>0.012730</cell><cell>0.0126703</cell><cell>0.012746</cell><cell>0.009872455563442</cell></row><row><cell>Worst</cell><cell>NA</cell><cell>0.0129730</cell><cell>0.012924</cell><cell>0.0126790</cell><cell>0.012952</cell><cell>0.009872455563452</cell></row><row><cell>Std</cell><cell>NA</cell><cell>5.9EÀ05</cell><cell>1.58EÀ05</cell><cell>2.70EÀ05</cell><cell>8.06EÀ06</cell><cell>3.6510EÀ015</cell></row><row><cell>NFEs</cell><cell>NA</cell><cell>80,000</cell><cell>240,000</cell><cell>204,800</cell><cell>11,750</cell><cell>24,000</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 14</head><label>14</label><figDesc>Comparing of the best solution for pressure vessel design problem found by different algorithms.</figDesc><table><row><cell></cell><cell>GAFR [40]</cell><cell>CEPSO [41]</cell><cell>CEDE [42]</cell><cell>PSO [45]</cell><cell>NIDP [44]</cell><cell>SFS</cell></row><row><cell>T s</cell><cell>0.8125</cell><cell>0.8125</cell><cell>0.8125</cell><cell>0.8125</cell><cell>1.1250</cell><cell>0.778168641375106</cell></row><row><cell>T h</cell><cell>0.4375</cell><cell>0.4375</cell><cell>0.4375</cell><cell>0.4375</cell><cell>0.6250</cell><cell>0.384649162627902</cell></row><row><cell>R</cell><cell>42.097398</cell><cell>42.0913</cell><cell>42.0984</cell><cell>42.0984</cell><cell>48.3807</cell><cell>40.319618724098730</cell></row><row><cell>L</cell><cell>176.65405</cell><cell>176.7465</cell><cell>176.7465</cell><cell>176.6366</cell><cell>11.7449</cell><cell>199.9999999999998</cell></row><row><cell>g 1</cell><cell>À0.000020</cell><cell>À1.37EÀ06</cell><cell>À6.67EÀ07</cell><cell>À8.8000EÀ07</cell><cell>À0.1913</cell><cell>À1.1102EÀ16</cell></row><row><cell>g 2</cell><cell>À0.035891</cell><cell>À3.59EÀ04</cell><cell>À3.58EÀ02</cell><cell>À0.0359</cell><cell>À0.1634</cell><cell>À1.1102EÀ16</cell></row><row><cell>g 3</cell><cell>À27.886075</cell><cell>À118.7687</cell><cell>À3.705123</cell><cell>3.1227</cell><cell>À75.875</cell><cell>0</cell></row><row><cell>g 4</cell><cell>À63.345953</cell><cell>À63.2535</cell><cell>À63.3623</cell><cell>À63.3634</cell><cell>À128.2551</cell><cell>À40.0000</cell></row><row><cell>f</cell><cell>6059.9463</cell><cell>6061.0777</cell><cell>6059.7340</cell><cell>6059.7143</cell><cell>8048.6190</cell><cell>5885.332773616458</cell></row><row><cell>Table 15</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Statistical results of different approaches for pressure vessel design problem.</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>GAFR [40]</cell><cell>CEPSO [41]</cell><cell>CEDE [42]</cell><cell>PSO [45]</cell><cell>NIDP [44]</cell><cell>SFS</cell></row><row><cell>Best</cell><cell>6059.9463</cell><cell>6061.0777</cell><cell>6059.7340</cell><cell>6059.7143</cell><cell>8048.6190</cell><cell>5885.332773616458</cell></row><row><cell>Mean</cell><cell>6177.2533</cell><cell>6147.1332</cell><cell>6085.2303</cell><cell>6066.0311</cell><cell>NA</cell><cell>5885.332773616458</cell></row><row><cell>Worst</cell><cell>6469.3220</cell><cell>6363.8041</cell><cell>6371.0455</cell><cell>NA</cell><cell>NA</cell><cell>5885.332773616458</cell></row><row><cell>Std</cell><cell>130.9297</cell><cell>86.4500</cell><cell>43.0130</cell><cell>12.2718</cell><cell>NA</cell><cell>0</cell></row><row><cell>NFEs</cell><cell>80,000</cell><cell>240,000</cell><cell>27,500</cell><cell>60,000</cell><cell>NA</cell><cell>24,000</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 16</head><label>16</label><figDesc>Comparing of the best solution for welded beam design problem found by different algorithms.</figDesc><table><row><cell></cell><cell>Deb [48]</cell><cell>Coello [49]</cell><cell>Montes [40]</cell><cell>He [50]</cell><cell>Kaveh [51]</cell><cell>SFS</cell></row><row><cell>w</cell><cell>0.248900</cell><cell>0.208800</cell><cell>0.205986</cell><cell>0.202369</cell><cell>0.205700</cell><cell>0.205729639786079</cell></row><row><cell>L</cell><cell>6.173000</cell><cell>3.420500</cell><cell>3.471328</cell><cell>3.544214</cell><cell>3.471131</cell><cell>3.470488665628001</cell></row><row><cell>d</cell><cell>8.178900</cell><cell>8.997500</cell><cell>9.020224</cell><cell>9.048210</cell><cell>9.036683</cell><cell>9.036623910357635</cell></row><row><cell>h</cell><cell>0.253300</cell><cell>0.210000</cell><cell>0.206480</cell><cell>0.205723</cell><cell>0.205731</cell><cell>0.205729639786079</cell></row><row><cell>g 1</cell><cell>À5.7586E+03</cell><cell>À0.3378</cell><cell>À0.1030</cell><cell>À13.6555</cell><cell>À0.0846</cell><cell>À1.8190EÀ012</cell></row><row><cell>g 2</cell><cell>À255.5769</cell><cell>À353.9026</cell><cell>À0.2317</cell><cell>À75.8141</cell><cell>À0.5907</cell><cell>À1.4552EÀ011</cell></row><row><cell>g 3</cell><cell>À0.0044</cell><cell>À0.0012</cell><cell>À4.940EÀ004</cell><cell>À0.0034</cell><cell>À3.1000EÀ05</cell><cell>À2.7756EÀ017</cell></row><row><cell>g 4</cell><cell>À2.9829</cell><cell>À3.4119</cell><cell>À3.4300</cell><cell>À3.4246</cell><cell>À3.4329</cell><cell>À3.4330</cell></row><row><cell>g 5</cell><cell>À0.1239</cell><cell>À0.0838</cell><cell>À0.0810</cell><cell>À0.0774</cell><cell>À0.0807</cell><cell>À0.0807</cell></row><row><cell>g 6</cell><cell>À0.2342</cell><cell>À0.2356</cell><cell>À0.2355</cell><cell>À0.2356</cell><cell>À0.2355</cell><cell>À0.2355</cell></row><row><cell>g 7</cell><cell>À4.4653E+03</cell><cell>À363.2324</cell><cell>À58.6469</cell><cell>À4.4729</cell><cell>À0.1448</cell><cell>À1.8190eÀ012</cell></row><row><cell>f</cell><cell>2.433116</cell><cell>1.748309</cell><cell>1.728226</cell><cell>1.728024</cell><cell>1.724918</cell><cell>1.724852308597364</cell></row></table><note><p>min f ðw; d; LÞ</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table 17</head><label>17</label><figDesc>Statistical results of different approaches for Welded Beam design problem.</figDesc><table><row><cell></cell><cell>Deb [48]</cell><cell>Coello [49]</cell><cell>Montes [40]</cell><cell>He [50]</cell><cell>Kaveh [51]</cell><cell>SFS</cell></row><row><cell>Best</cell><cell>2.433116</cell><cell>1.748309</cell><cell>1.728226</cell><cell>1.728024</cell><cell>1.724918</cell><cell>1.724852308597364</cell></row><row><cell>Mean</cell><cell>NA</cell><cell>1.771973</cell><cell>1.792654</cell><cell>1.748831</cell><cell>1.729752</cell><cell>1.724852308597364</cell></row><row><cell>Worst</cell><cell>NA</cell><cell>1.785835</cell><cell>1.993408</cell><cell>1.782143</cell><cell>1.775961</cell><cell>1.724852308597364</cell></row><row><cell>Std</cell><cell>NA</cell><cell>0.011220</cell><cell>0.074713</cell><cell>0.012926</cell><cell>0.009200</cell><cell>7.7087EÀ016</cell></row><row><cell>NFEs</cell><cell>NA</cell><cell>900,000</cell><cell>80,000</cell><cell>30,000</cell><cell>17,600</cell><cell>24,000</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Please cite this article in press as: H. Salimi, Stochastic Fractal Search: A powerful metaheuristic algorithm, Knowl. Based Syst. (2014), http://dx.doi.org/ 10.1016/j.knosys.2014.07.025</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>Please cite this article in press as: H. Salimi, Stochastic Fractal Search: A powerful metaheuristic algorithm, Knowl. Based Syst. (2014), http://dx.doi.org/</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>The author would like to thank Prof. Glover from University of Colorado Boulder, and the anonymous reviewers for their constructive comments and suggestions.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Stochastic Fractal Search Pseudo Algorithm</head><p>Initialize a population of N points While g &lt; maximum generation or (stop criterion) Do {</p><p>For each Point P i in the system Do {</p><p>Call Diffusion Process with the following process: { q = (maximum considered number of diffusion).</p><p>For </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName><forename type="first">E.-G</forename><surname>Talbi</surname></persName>
		</author>
		<title level="m">Metaheuristics: From Design to Implementation</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">74</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Engineering optimisation by cuckoo search</title>
		<author>
			<persName><forename type="first">X.-S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Deb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Math. Modell. Numer. Optim</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="330" to="343" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Heuristic knowledge discovery for archaeological data using genetic algorithms and rough sets 1</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lazar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Heurist. Optim. Knowl. Discov</title>
		<imprint>
			<biblScope unit="page">263</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Russell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Norvig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence: A Modern Approach</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<date type="published" when="1995">1995</date>
			<publisher>Prentice Hall</publisher>
			<pubPlace>Englewood Cliffs</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">An introduction to genetic algorithms (complex adaptive systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mitchell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A new optimizer using particle swarm theory, in: MHS&apos;95</title>
		<author>
			<persName><forename type="first">R</forename><surname>Eberhart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth International Symposium on Micro Machine and Human Science</title>
		<meeting>the Sixth International Symposium on Micro Machine and Human Science</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1995">1995. 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">An Idea Based on Honey Bee Swarm for Numerical Optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Erciyes Univ. Press</publisher>
			<pubPlace>Erciyes</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Techn. Rep. TR06</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Ant colony optimization: a new meta-heuristic</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">Di</forename><surname>Caro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CEC 99, Proceedings of the 1999 Congress on Evolutionary Computation</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">GSA: a gravitational search algorithm</title>
		<author>
			<persName><forename type="first">E</forename><surname>Rashedi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Nezamabadi-Pour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Saryazdi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">179</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2232" to="2248" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Farsi/arabic handwritten digit recognition based on ensemble of SVD classifiers and reliable multi-phase PSO combination rule</title>
		<author>
			<persName><forename type="first">H</forename><surname>Salimi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Giveki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Doc. Anal. Recogn. (IJDAR)</title>
		<imprint>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Detection of erythemato-squamous diseases using AR-CatfishBPSO-KSVM</title>
		<author>
			<persName><forename type="first">D</forename><surname>Giveki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Image Process</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="57" to="72" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Extended mixture of MLP experts by hybrid of conjugate gradient method and modified cuckoo search</title>
		<author>
			<persName><forename type="first">H</forename><surname>Salimi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1202.3887</idno>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Farsi handwriting recognition with mixture of RBF experts based on particle swarm optimization</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Abdi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Salimi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Inf. Sci. Comput. Math</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="129" to="136" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Automatic detection of diabetes diagnosis using feature weighted support vector machines based on mutual information and modified cuckoo search</title>
		<author>
			<persName><forename type="first">D</forename><surname>Giveki</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1201.2173</idno>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">M</forename><surname>Aflakparast</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cuckoo Search Epistasis: A New Method for Exploring Significant Genetic Interactions</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>Heredity</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Ant Colony Optimization for Mixed-Variable Optimization Problems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Liao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE. Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="503" to="518" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A hybrid metaheuristic for the cyclic antibandwidth problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Lozano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowl.-Based Syst</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="103" to="113" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The Fractal Geometry of Nature</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">B</forename><surname>Mandelbrot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Times Books</title>
		<imprint>
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">T</forename><surname>Vic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fractal Growth Phenomena</title>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>World Scientific Publishing Company Incorporated</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Iterated function systems and the global construction of fractals</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Barnsley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Demko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Roy. Soc. Lond. A. Math. Phys. Sci</title>
		<imprint>
			<biblScope unit="volume">399</biblScope>
			<biblScope unit="page" from="243" to="275" />
			<date type="published" when="1817">1817. 1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Characterization of strange attractors</title>
		<author>
			<persName><forename type="first">P</forename><surname>Grassberger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Procaccia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. Lett</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="346" to="349" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Graphical applications of L-systems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Prusinkiewicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Finite subdivision rules</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cannon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Floyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Parry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Conformal Geom. Dynam. Am. Math. Soc</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="153" to="196" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Random fractals</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>Falconer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Proc. Cambridge Philos. Soc</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="559" to="582" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Diffusion-limited aggregation</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">T</forename><surname>Witten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Sander</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. B</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page">5686</biblScope>
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Fractal dimension of dielectric breakdown</title>
		<author>
			<persName><forename type="first">L</forename><surname>Niemeyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Pietronero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wiesmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rev. Lett</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1033" to="1036" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Evolutionary programming made faster</title>
		<author>
			<persName><forename type="first">X</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evolution. Comput</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="82" to="102" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Modified cuckoo search: a new gradient free optimisation algorithm</title>
		<author>
			<persName><forename type="first">S</forename><surname>Walton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Chaos Solitons Fract</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="710" to="718" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The particle swarm-explosion, stability, and convergence in a multidimensional complex space</title>
		<author>
			<persName><forename type="first">M</forename><surname>Clerc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kennedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evolution. Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="58" to="73" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Cuckoo search via Lévy flights</title>
		<author>
			<persName><forename type="first">X.-S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Deb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">World Congress on Nature &amp; Biologically Inspired Computing</title>
		<editor>
			<persName><surname>Nabic</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2009">2009. 2009. 2009</date>
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Benchmark Functions for the CEC&apos;2010 Special Session and Competition on Large-Scale Global Optimization</title>
		<author>
			<persName><forename type="first">K</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Inspired Computation and Applications Laboratory</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<pubPlace>China</pubPlace>
		</imprint>
	</monogr>
	<note>USTC</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Backtracking search optimization algorithm for numerical optimization problems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Civicioglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">219</biblScope>
			<biblScope unit="issue">15</biblScope>
			<biblScope unit="page" from="8121" to="8144" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Reducing the time complexity of the derandomized evolution strategy with covariance matrix adaptation (CMA-ES)</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Koumoutsakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evolution. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Transforming geocentric cartesian coordinates to geodetic coordinates by using differential search algorithm</title>
		<author>
			<persName><forename type="first">P</forename><surname>Civicioglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Geosci</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="229" to="247" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A modified artificial bee colony algorithm for realparameter optimization</title>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">192</biblScope>
			<biblScope unit="page" from="120" to="142" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Animal migration optimization: an optimization algorithm inspired by animal migration behavior</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">7-8</biblScope>
			<biblScope unit="page" from="1867" to="1877" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Differential evolution -a simple and efficient heuristic for global optimization over continuous spaces</title>
		<author>
			<persName><forename type="first">R</forename><surname>Storn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Price</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Glob. Optim</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="341" to="359" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An effective hybrid cuckoo search algorithm for constrained global optimization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Long</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="911" to="926" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A study of mathematical programming methods for structural optimization. Part I: Theory</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Belegundu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Arora</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Numer. Methods Eng</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1583" to="1599" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Constraint-handling in genetic algorithms through the use of dominance-based tournament selection</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Coello Coello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">Mezura</forename><surname>Montes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Eng. Inf</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="193" to="203" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Coevolutionary particle swarm optimization using Gaussian distribution for solving constrained optimization problems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Krohling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Dos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Santos</forename><surname>Coelho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst. Man Cybern. Part B: Cybern</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1407" to="1416" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">An effective co-evolutionary differential evolution for constrained optimization</title>
		<author>
			<persName><forename type="first">F.-Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">186</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="340" to="356" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Water cycle algorithm -a novel metaheuristic optimization method for solving constrained engineering optimization problems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Eskandar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Struct</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Nonlinear integer and discrete programming in mechanical design optimization</title>
		<author>
			<persName><forename type="first">E</forename><surname>Sandgren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mech. Des</title>
		<imprint>
			<biblScope unit="volume">112</biblScope>
			<biblScope unit="page">223</biblScope>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Comprehensive learning particle swarm optimizer for constrained mixed-variable optimization problems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hailu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Comput. Intell. Syst</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="832" to="842" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Solving engineering optimization problems with the simple constrained particle swarm optimizer</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Cagnina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Esquivel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A C</forename><surname>Coello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Informatica</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="319" to="326" />
			<date type="published" when="2008">2008</date>
			<pubPlace>Slovenia)</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Optimal design of a class of welded structures using geometric programming</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ragsdell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Phillips</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Eng. Ind</title>
		<imprint>
			<biblScope unit="volume">98</biblScope>
			<biblScope unit="page">1021</biblScope>
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Optimal design of a welded beam via genetic algorithms</title>
		<author>
			<persName><forename type="first">K</forename><surname>Deb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIAA J</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2013" to="2015" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Use of a self-adaptive penalty approach for engineering optimization problems</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Coello Coello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Ind</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="113" to="127" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">An effective co-evolutionary particle swarm optimization for constrained engineering design problems</title>
		<author>
			<persName><forename type="first">Q</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Appl. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="89" to="99" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">An improved ant colony optimization for constrained engineering design problems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kaveh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Talatahari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Comput</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="155" to="182" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">An empirical study about the usefulness of evolution strategies to solve constrained optimization problems</title>
		<author>
			<persName><forename type="first">E</forename><surname>Mezura-Montes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A C</forename><surname>Coello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. General Syst</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="443" to="473" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
