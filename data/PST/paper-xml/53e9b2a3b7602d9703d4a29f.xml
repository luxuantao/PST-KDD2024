<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Self-embedding fragile watermarking with restoration capability based on adaptive bit allocation mechanism</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011-11-19">19 November 2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Chuan</forename><surname>Qin</surname></persName>
							<email>qin@usst.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Optical-Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Shanghai for Science and Technology</orgName>
								<address>
									<postCode>200093</postCode>
									<settlement>Shanghai</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Information Engineering and Computer Science</orgName>
								<orgName type="institution">Feng Chia University</orgName>
								<address>
									<postCode>40724</postCode>
									<settlement>Taichung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Chin-Chen</forename><surname>Chang</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Information Engineering and Computer Science</orgName>
								<orgName type="institution">Feng Chia University</orgName>
								<address>
									<postCode>40724</postCode>
									<settlement>Taichung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Department of Biomedical Imaging and Radiological Science</orgName>
								<orgName type="institution">China Medical University</orgName>
								<address>
									<postCode>40402</postCode>
									<settlement>Taichung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Pei-Yu</forename><surname>Chen</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer Science and Information Engineering</orgName>
								<orgName type="institution">National Chung Cheng University</orgName>
								<address>
									<postCode>62102</postCode>
									<settlement>Chiayi</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department">Department of Information Engineering and Computer Science</orgName>
								<orgName type="institution">Feng Chia University</orgName>
								<address>
									<addrLine>100 Wenhwa Road</addrLine>
									<postCode>40724</postCode>
									<settlement>Taichung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Self-embedding fragile watermarking with restoration capability based on adaptive bit allocation mechanism</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2011-11-19">19 November 2011</date>
						</imprint>
					</monogr>
					<idno type="MD5">57A9AD0972DB72EC66F5CF1F7DD4A29C</idno>
					<idno type="DOI">10.1016/j.sigpro.2011.11.013</idno>
					<note type="submission">Received 4 July 2011 Received in revised form 25 September 2011 Accepted 12 November 2011</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Fragile watermarking Self-embedding Content restoration Bit allocation Nonsubsampled contourlet</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we propose a novel fragile watermarking scheme with content restoration capability. Authentication-bits are produced using the image hashing method with a folding operation. The low-frequency component of the nonsubsampled contourlet transform (NSCT) coefficients is used to encode the restoration-bits for each block by the adaptive bit allocation mechanism. During the bit allocation, all the blocks are categorized into different types according to their degree of smoothness, and, complex blocks, which are deemed to have higher priority than smooth blocks, are allocated more bits. Two algorithms are utilized to adjust the block classification and the binary representations in order to guarantee that the numbers of the self-embedding authentication-bits and restoration-bits are exactly suitable for 1-LSB embedding capacity. On the receiver side, the extracted authentication-bits and the decoded restoration-bits are used to localize and restore the tampered blocks, respectively. Due to the low embedding volume, the visual quality of the watermarked image is satisfactory. Experimental results also show that the proposed scheme provides high restoration quality.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>With the rapid development of networking and multimedia technologies, copyright protection for digital products becomes more and more important. Digital watermarking is one the information hiding technique <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref> and it can be used as an effective tool for protecting digital contents, which has aroused significant interest among researchers <ref type="bibr" target="#b4">[5]</ref>. Digital images are the most widely used, digital information medium in our Internet environment, attracting more research attention than any other digital medium. Currently, academic research efforts are focused mainly on three categories of digital image watermarking, i.e., robust watermarking, fragile watermarking, and semi-fragile watermarking. For robust watermarking, the watermark embedded in the cover image can be detected and identified, even if the watermarked image undergoes allowable and malicious attacks <ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref><ref type="bibr" target="#b7">[8]</ref><ref type="bibr" target="#b8">[9]</ref>. Therefore, this robustness can be used for ownership verification. Fragile watermarking is intended for checking the integrity and authenticity of digital images <ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref><ref type="bibr" target="#b12">[13]</ref><ref type="bibr" target="#b13">[14]</ref>, but an embedded watermark is easily destroyed if the watermarked image undergoes any slight alteration. The robustness characteristic of semi-fragile watermarking is between that of robust watermarking and fragile watermarking <ref type="bibr" target="#b14">[15]</ref><ref type="bibr" target="#b15">[16]</ref><ref type="bibr" target="#b16">[17]</ref><ref type="bibr" target="#b17">[18]</ref>. The embedded watermark of the semifragile watermarking scheme is robust to the content-preserving manipulations, such as JPEG compression and Gaussian low-pass filtering, but fragile to malicious attacks, such as cropping and content replacement. Our main focus is on fragile image watermarking.</p><p>Earlier research work on the fragile watermarking included attempts to design schemes for localizing the modified or tampered image regions, and many schemes usually divided a host image into small blocks and embedded the watermark into each block <ref type="bibr" target="#b9">[10]</ref><ref type="bibr" target="#b10">[11]</ref><ref type="bibr" target="#b11">[12]</ref>. The embedded watermark is often a hash of the principal content about each cover image block. If an attacker tampers with the watermarked image, the image content and the extracted watermark corresponding to the tampered blocks cannot be matched so that the tampered blocks are detected and localized. The fragile watermarking method in <ref type="bibr" target="#b12">[13]</ref> also was based on this block-wise technique, but it aimed at the image in JPEG format as the cover image and two bits were embedded into discrete cosine transform (DCT) coefficients of each 8 Â 8 block using the reversible data hiding technique. In addition to the localization of tampered blocks, this method can recover the intact region without any error. Recently, researchers have proposed some fragile watermarking methods to enhance those developed by earlier researchers, managing to restore the tampered regions after the tampering localization <ref type="bibr" target="#b18">[19]</ref><ref type="bibr" target="#b19">[20]</ref><ref type="bibr" target="#b21">[21]</ref><ref type="bibr" target="#b22">[22]</ref><ref type="bibr" target="#b23">[23]</ref><ref type="bibr" target="#b24">[24]</ref><ref type="bibr" target="#b25">[25]</ref>. These kinds of methods often embed a compressed code of image content into the cover image. Once the watermarked image is tampered, this compressed code can be decompressed and used for content restoration. Since this compressed code is a compact representation of the cover image itself, these kinds of methods also are called self-embedding methods.</p><p>Fridrich et al. proposed two fragile watermarking approaches with recovery capability <ref type="bibr" target="#b18">[19]</ref>. In the first method, the DCT coefficients of each 8 Â 8 block were quantized into 64 or 128 bits, which were used to replace the least significant bits (LSBs) of another block. In the second method, a low color depth version of the cover image generated by reducing the gray levels was cyclicshifted and embedded into the pixel differences. After detecting the locations of the malicious modifications, the quantized DCT coefficients and the low color depth data extracted from the reserved regions can be exploited to recover the principal content of tampered regions. Instead of embedding the frequency coefficients, Yang et al. created an index table of the cover image via vector quantization (VQ) and embedded the VQ indices of all of the blocks together with authentication-bits generated by <ref type="bibr" target="#b9">[10]</ref> into the cover image <ref type="bibr" target="#b19">[20]</ref>. If the image is tampered, the index table can be extracted and used to restore the tampered regions, but the quality of the recovered image using this method is not high enough. In <ref type="bibr" target="#b22">[22]</ref>, a tailormade watermark consisting of reference-bits and checkbits was embedded into the cover image using a reversible data hiding method. On the receiver side, the extracted and calculated check-bits can be compared to identify the tampered image blocks. The original image was reconstructed exactly using the reliable referencebits extracted from other blocks. If the tampered area is not too extensive, this method can restore the cover image information with no errors, but the visual quality of the watermarked image of this method is relatively low. A reference-sharing mechanism for self-embedding fragile watermarking was proposed in <ref type="bibr" target="#b23">[23]</ref>. The embedded watermark in this method was a reference derived from the original principal content in different regions and shared by these regions for content restoration. After detecting the tampered blocks, both reference data and the original content in the intact area were used to restore the tampered area. This method can restore the five most significant bits (MSBs) accurately, if the tampering rate is below 24%. Qian et al. managed to reduce the amount of the embedded data while maintaining good recovery quality <ref type="bibr" target="#b24">[24]</ref>. A fast image inpainting technique was used in this method to restore the smooth blocks for decreasing the embedded data.</p><p>In this work, we propose a fragile watermarking scheme based on the nonsubsampled contourlet transform (NSCT) using an adaptive bit allocation mechanism. The proposed scheme utilizes two kinds of binary information, i.e., authentication-bits and restoration-bits, to authenticate integrity and restore content, respectively. The authentication-bits are generated using the image hashing strategy to localize the alterations <ref type="bibr" target="#b26">[26,</ref><ref type="bibr" target="#b27">27]</ref>. The restoration-bits are produced by encoding the NSCT coefficients of the cover image. As we know, a good transform can capture the essence of an image with few basis elements. Due to the redundancy of the basis functions, the NSCT transform is more efficient in capturing and representing the image features than other transforms that use non-redundant basis functions, such as DCT. Therefore, we utilize the NSCT to represent the cover image and encode its coefficients for the restoration-bits. The NSCT construction consists of two parts, i.e., the nonsubsampled pyramid filter bank (NSPFB) and the nonsubsampled directional filter bank (NSDFB). The details concerning the implementation of NSCT can be found in <ref type="bibr" target="#b28">[28,</ref><ref type="bibr" target="#b29">29]</ref>.</p><p>Obviously, more restoration-bits will produce better reconstructed quality, but they could cause more serious damage to the cover image since more payloads are embedded. In order to balance the visual quality after embedding and the restoration capability, we encode the NSCT coefficients of the image blocks into restoration-bits with the dynamic lengths based on their degree of smoothness. By our adaptive bit allocation mechanism, the complex blocks are allocated more bits, while the smooth blocks are allocated fewer bits, and the same sized images have an equal volume of restoration-bits. The watermark consisting of authentication-bits and restoration-bits is only embedded into the 1-LSB plane of the cover image. Because modifications to the cover are small, the visual quality of watermarked image is satisfactory. On the receiver side, the tampered blocks can be detected accurately and restored with high quality after the watermark is extracted.</p><p>The rest of the paper is organized as follows. Section 2 describes the watermark self-embedding procedure of the proposed scheme. Section 3 presents the procedure of tampering localization and content restoration. Experimental results and analysis are given in Section 4, and Section 5 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Watermark self-embedding procedure</head><p>The proposed scheme can localize and restore the tampered regions of the watermarked image by selfembedding the authentication-bits and the restorationbits into the 1-LSB plane of the cover image. The authentication-bits for each cover image block are obtained by one image hashing algorithm that is integrated with a folding operation. The restoration-bits are generated by encoding the NSCT coefficients of the cover image. We use a bit allocation mechanism to adaptively represent the principle content of the image blocks with different types into a fixed length for 1-LSB embedding. The framework of the watermark self-embedding procedure is shown in Fig. <ref type="figure" target="#fig_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Authentication-bits generation</head><p>First, the cover image I is divided into n Â n nonoverlapped blocks B 1 , B 2 , y, B k , and the 1-LSB plane of each block is set to zero, where k is the number of total divided blocks. Then, we utilize the image hashing algorithm to calculate m-bits hash value for each image block. Image hashing can represent the image content in compact form, and visually different images have distinct hash values. In our research, we adopt an image hashing algorithm based on the DCT transform <ref type="bibr" target="#b27">[27]</ref>, and denote the DCT coefficients matrix of each block B i as C i , where i¼1, 2,y, k. The size of C i is also n Â n. To calculate the hash value of B i , m low-pass, filtered, random masks, i.e., M 1 , M 2 , y, M m , with the size of n Â n are generated using a secret key. Therefore, the m-bits hash value h i, 1 , h i, 2 , y, h i, m for B i can be produced by Eq. ( <ref type="formula" target="#formula_0">1</ref>). Note that the DC coefficient of C i should be excluded in the summation for the performance of the image hashing algorithm. Any malicious tampering with the block may result in a serious change of the corresponding hash value</p><formula xml:id="formula_0">h i,j ¼ 1, if X n x ¼ 1 X n y ¼ 1 C i ðx,yÞUM j ðx,yÞ Z 0 i ¼ 1,2,. . .,k 0, if X n x ¼ 1 X n y ¼ 1 C i ðx,yÞUM j ðx,yÞ o 0 j ¼ 1,2,. . .,m : 8 &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; :<label>ð1Þ</label></formula><p>Inspired by the work of <ref type="bibr" target="#b12">[13]</ref>, we do not use the hash values directly as authentication-bits. Before embedding, the hash bits are folded in order to decrease the volume of the embedded data for the cover image. We generalize the folding method in <ref type="bibr" target="#b12">[13]</ref> by randomly grouping the total m Á k bits of the hash values into a Á k subsets, S 1 , S 2 , y, S a Á k , using the secret key. Therefore, each subset contains m/a bits. After computing the modulo-2 sum of the m/a bits in each subset, a Á k bits are obtained for all k blocks that are used as the final authentication-bits. The volume of hash bits is reduced significantly by this folding way.</p><p>Fig. <ref type="figure">2</ref> gives an example of the generation of the authentication-bits, in which the number of blocks k is equal to 4, and the length m of the hash value for each block is equal to 6.</p><p>The value of a is set to 3 in this example. Therefore, after randomly grouping and the calculation of the modulo-2 sum, 12 authentication-bits are generated, which amounts to far less volume than the volume of the original hash bits. During the authentication procedure, these authentication-bits are used to judge the integrity of the blocks by a voting-based strategy, which is described in detailed in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Restoration-bits generation</head><p>We utilize the NSCT to decompose each cover image block into pre-determined levels. One low-frequency component and several high-frequency components with different directions are obtained for each block. Fig. <ref type="figure" target="#fig_2">3(a)</ref> Authentication Bits</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>t×t block division</head><p>Hash Calculation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NSCT Transform</head><p>Coefficients Encoding</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Adaptive Bit Allocation Cover Image</head><p>Restoration Bits </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1-LSB Embedding n×n block division</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Watermarked Image Folding Operation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Hash bits of 4 blocks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Subsets</head><p>Authentication-bits</p><formula xml:id="formula_1">0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 1 0 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 Fig. 2.</formula><p>Illustration of the generation of authentication-bits.</p><p>gives an illustration of the NSCT. The filter bank in NSCT structure splits the 2-D frequency plane in the subbands shown in Fig. <ref type="figure" target="#fig_2">3(b</ref>). The structures of NSPFB and NSDFB provide the multi-scale property and the directionality, respectively <ref type="bibr" target="#b28">[28]</ref>. Different from the discrete wavelet transform (DWT), the decomposed components of NSCT all have the same size as the cover image blocks, which ensure the synchronization between the spatial domain and the frequency domain. This characteristic is very suitable for content restoration, because less image content is lost and no interpolation is needed. The high-frequency components consist mainly of noise, textures, and other details, while the low-frequency component reflects the principle structure and content of the image block. Therefore, we only use the low-frequency component of the NSCT decomposition results to generate the restoration-bits. The low-frequency component becomes smoother as the decomposition levels increase, and clearly, fewer bits are required to represent the smoother low-frequency component, which might also affect the restoration quality. Consequently, we can set the appropriate decomposition levels according to the requirement.</p><p>We denote the NSCT low-frequency components for the image blocks as U i , where i¼1, 2, y, r. The block size for NSCT decomposition is t Â t, which should not be smaller than 32 due to the property of NSCT and might not be equal to n Â n for the calculation of authentication-bits. For simplicity, suppose that t is divisible by n and that r is the number of all the blocks sized t Â t. In order to further decrease the volume of the embedded bits, we conduct the DCT transform to U i , and then, for each U i , the first b percentage of the DCT coefficients in the zigzag scanning order are used for encoding the restoration-bits. The first one of these bUt 2 Ä Å coefficients is the DC value that reflects the information of mean illumination, which belongs to [0, t Á 2 8 À 1]. Thus, 8þ log 2 t bits are needed to represent the first coefficient losslessly. We group the rest bUt 2 Ä Å À1 coefficients into 8þ log 2 t sets, i.e., C j , where j ¼1, 2, y, 8þlog 2 t, according to the quota of bits needed for their binary representations. This indicates that the coefficients grouped in the set C j all need j bits to represent. Therefore, the quota of bits for losslessly representing the bUt 2 Ä Å coefficients of each U i is:</p><formula xml:id="formula_2">W i ¼ 8 þ log 2 t þ X 8 þ log 2 t j ¼ 1 Q i,j Uj, i ¼ 1,2,. . .,r,<label>ð2Þ</label></formula><p>where Q i,j denotes the number of coefficients in the set C j of U i , and it should satisfy</p><formula xml:id="formula_3">X 8 þ log 2 t j ¼ 1 Q i,j bUt 2 Ä Å À1, for 8i 2 f1,2,. . .,rg:<label>ð3Þ</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Adaptive bit allocation mechanism</head><p>To allocate the bits quota to restoration-bits more efficiently, we divide all r blocks U i sized t Â t, into four types, T 1 , T 2 , T 3 , and T 4 , according to their values of W i , where i¼1, 2,y, r. We assign two additional bits of {00, 01, 10, 11} to each t Â t block to indicate the type of {T 1 , T 2 , T 3 , T 4 } to which the block belongs. Because the bits of the type indicator are important in the decoding of restoration-bits, we duplicate the 2-bits of the type indicator into 4-bits to achieve decoding stability. We also use</p><formula xml:id="formula_4">log 2 bUt 2 Ä Å À1 À Á AE</formula><p>Ç bits to represent the number of the coefficients in set C j , i.e., Q i,j , where j¼1, 2,y, 8þlog 2 t, for each t Â t block U i . In the procedure of authenticationbits generation described in Section 2.1, a-bits are produced for each n Â n block. Therefore, the average spare bits quota for the restoration-bits in the 1-LSB plane of each t Â t block is</p><formula xml:id="formula_5">g ¼ t 2 ÀaUðt=nÞ 2 À log 2 bUt 2 Ä Å À1 À Á AE Ç Uð8 þlog 2 tÞÀ4<label>ð4Þ</label></formula><p>The process of classifying all r blocks U i , where i¼1, 2, y, r, is assisted by setting three parameters, i.e., L 1 , L 2 , and L 3 , where L 1 oL 2 oL 3</p><formula xml:id="formula_6">U i ) T 1 if 8þ log 2 t o W i r L 1 U i ) T 2 if L 1 oW i r L 2 U i ) T 3 if L 2 oW i r L 3 U i ) T 4 if W i 4L 3 i ¼ 1,2,. . .,r,<label>ð5Þ</label></formula><p>where ) is the operation of classifying U i into one of the four types, i.e., T 1 , T 2 , T 3 , or T 4 , and L 3 is equal to g.</p><p>Obviously, the blocks classified in T i must be more complex than the blocks in T i À 1 , where i¼2, 3, 4. We denote the numbers of the blocks in the four types after classification as N 1 , N 2 , N 3 , and N 4 , respectively, and</p><formula xml:id="formula_7">X 4 i ¼ 1 N i r:<label>ð6Þ</label></formula><p>We manage to use L 1 -bits, L 2 -bits, L 3 -bits, and L 4 -bits (L 4 4L 3 ) to represent the blocks of the four types, i.e., T 1 through T 4 , respectively. In other words, L i bits are allocated to represent the blocks in type T i , where i¼ 1, 2, 3, 4. The values of L 1 , L 2 , L 3 , and L 4 are set to satisfy the following relationship:</p><formula xml:id="formula_8">L 3 ÀL 1 ¼ l 1 UðL 4 ÀL 3 Þ L 3 ÀL 2 ¼ l 2 UðL 4 ÀL 3 Þ , subject to L 3 ¼ g, and l 1 , l 2 2 Z þ ,<label>ð7Þ</label></formula><p>where Z þ denotes the set of positive integers, l 1 and l 2 are the pre-determined parameters, and l 1 is greater than l 2 . Before transforming all r blocks U i , where i¼1, 2, y, r, into binary representations for restoration-bits, the blocks in the four types must be adjusted and reclassified in order to make the total number of bits suitable for the 1-LSB embedding capacity. The adjusting strategy is based on the fact that the quota of bits for the complex blocks should have higher priority than the smooth blocks to achieve better restoration quality. We utilize Algorithm 1 to adjust the block classification adaptively, and the pseudo code of Algorithm 1 is shown in Fig. <ref type="figure" target="#fig_3">4</ref>.</p><p>The block numbers in the four types after reclassification must satisfy the relationship in Eq. ( <ref type="formula" target="#formula_9">8</ref>), and the sum of the block number in each type must still be equal to r</p><formula xml:id="formula_9">L 1 UN 0 1 þL 2 UN 0 2 þL 4 UN 0 4 ¼ L 3 UðN 0 1 þ N 0 2 þN 0 4 Þ, subject to X 4 i ¼ 1 N 0 i r:<label>ð8Þ</label></formula><p>The number of bits for representing all r blocks sized t Â t in the four types is exactly suitable for the 1-LSB embedding capacity, see Eq. ( <ref type="formula" target="#formula_10">9</ref>)</p><formula xml:id="formula_10">X 4 i ¼ 1 L i UN 0 i ¼ rUg:<label>ð9Þ</label></formula><p>It should be noted that one can determine the appropriate values of L 1 , L 2 , and L 4 according to the requirement, since the different values of L 1 , L 2 , and L 4 correspond to different restoration particularities. Under the condition of L 1 oL 2 og oL 4 and Eq. ( <ref type="formula" target="#formula_8">7</ref>), if the complex blocks are expected to be restored more effectively, a larger value for L 4 should be used, and larger L 1 and L 2 values ensure that the smooth blocks will have better restoration effects.</p><p>After the block reclassification using Algorithm 1, each t Â t block is assigned with L 1 -bits, L 2 -bits, L 3 -bits, or L 4bits for binary representation according to the type T 1 , T 2 , T 3 , or T 4 , to which it belongs. We denote one t Â t block as U p , which belongs to the type T q , qA{1, 2, 3, 4}. Because the needed bits W p for lossless representation of U p calculated by Eq. ( <ref type="formula" target="#formula_2">2</ref>) might not be equal to L q , we utilize Algorithm 2 to adjust the binary representation for U p to satisfy the relationship</p><formula xml:id="formula_11">L q ¼ 8þ log 2 t þ X 8 þ log 2 t j ¼ 1 Q 0 p,j Uj,<label>ð10Þ</label></formula><p>where Q 0 p,j is the adjusted number of the coefficients with j-bits representation in U p . The pseudo code of Algorithm 2 is shown in Fig. <ref type="figure" target="#fig_4">5</ref>.</p><p>Consequently, after the adjustment using Algorithm 2, the length of the restoration-bits for each t Â t block is equal to L 1 , L 2 , L 3 , or L 4 and coincides with the type to which it belongs. Therefore, by our adaptive bit allocation mechanism, the complex blocks are assigned with a larger quota of bits, and the greater coefficients in each block are assigned with more bits for binary representation simultaneously.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">LSB data embedding</head><p>After the authentication-bits and restoration-bits are generated, LSB embedding is conducted to hide the bits stream. According to the analysis in the previous Section 2.3, the length of the whole bits stream, consisting of authentication-bits, type indicators, number indicators, and restoration-bits, is fixed and is exactly equal to the 1-LSB embedding capacity, i.e., r Á t 2 bits. Table <ref type="table" target="#tab_0">1</ref> lists the components and their corresponding numbers of bits in the bits stream. The type indicators, number indicators, and restoration-bits are referred to as reference-bits in together. The structure of the reference-bits of each t Â t block U i , where i¼1, 2, y, r, is illustrated in Fig. <ref type="figure">6</ref>. TI expresses the 4-bits binary representation of the duplicated type indicators. DC represents the binary representation of the DC coefficient that occupies 8þlog 2 t bits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Each number indicator, NI</head><formula xml:id="formula_12">j , occupies log 2 bUt 2 Ä Å À1 À Á AE Ç</formula><p>bits. {AC j } denotes the jth set of binary representations for NI j AC coefficients, and all binary representations in the jth set are commonly j bits (j ¼1, 2,y, 8þlog 2 t).</p><p>We first embed the a authentication-bits of each n Â n block to the random locations in the 1-LSB plane of the block itself. As a result, each n Â n block can be authenticated through the embedded authentication-bits on the receiver side. The procedure of tampered blocks localization is expressed in detail in the subsequent section. After embedding the authentication-bits, the remaining 1-LSB space of the image is used to hide the reference-bits for content restoration. The reference-bits of all r blocks sized t Â t are first concatenated, and then scrambled by a secret key. After substituting the remaining 1-LSB space of the cover image with the scrambled reference-bits, we can obtain the final watermarked image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Authentication and restoration procedure</head><p>On the receiver side, first, the integrity of the received image should be identified, and the damaged regions should be localized. Then, the detected damaged regions are restored. The framework of the procedure for authentication and restoration is shown in Fig. <ref type="figure" target="#fig_6">7</ref>. Assume that the size of the received image has not changed. The embedded bits are extracted from the 1-LSB plane of the received image, and reversed using the same secret key. Authentication and localization of the tampered blocks are achieved by comparing the extracted authenticationbits with the calculated authentication-bits. The NSCT reference image, which is obtained from the decoded restoration-bits, is utilized to restore the tampered blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Tampered blocks localization</head><p>In the same way as the self-embedding stage described in Section 2.1, the watermarked image is divided into k non-overlapped blocks sized n Â n. We can obtain m hash bits for each n Â n block using the same image hashing algorithm and compress the m hash bits into a bits, called  </p><formula xml:id="formula_13">0 i,j for bUt 2 Ä Å À1 AC coefficients in each U i (j¼ 1, 2,y, 8þ log 2 t) r Á (8þ log 2 t) Á log 2 bUt 2 Ä Å À1 À Á AE Ç Restoration-bits One DC coefficient and bUt 2 Ä Å À1 AC coefficients for each U i rU ð8 þ log 2 tÞþ P 8 þ log 2 t j ¼ 1 Q 0 i,j Uj " #</formula><p>Fig. <ref type="figure">6</ref>. Structure of the reference-bits of each t Â t block.</p><p>calculated authentication-bits, by the folding operation.</p><p>The extracted authentication-bits can be acquired easily after the 1-LSB extracting. Then, tampering localization can be achieved using a voting-based strategy. Each calculated authentication-bit is the modulo-2 sum of m/ a bits in one subset, and the m/a bits in the subset are randomly distributed from all the hash bits of the k blocks. Therefore, we define a voting parameter s i , where i¼1, 2, y, k, for each block to record the number of its hash bits distributed in the subsets whose calculated authentication-bits are not equal to the corresponding extracted authentication-bits. Fig. <ref type="figure" target="#fig_5">8</ref> gives an example of the localization of tampered blocks using the voting strategy, in which the number of blocks, the length of the hash bits for each block, and the number of subsets are the same as the example shown in Fig. <ref type="figure">2</ref>. Suppose the content of the third block is tampered. We can see that the mismatched indices between the calculated authentication-bits and extracted authentication-bits are 2nd, 5th, 7th, 9th, and 12th, which are generated from the corresponding subsets. Match and mismatch are indicated by ' þ' and ' À ', respectively. We count the voting parameter s i for each block, which is equal to the number of its distributed subsets belonging to the mismatched subsets: 2nd, 5th, 7th, 9th, and 12th. The results are listed in Table <ref type="table">2</ref>. It can be found that the voting parameter s 3 of the third block, i.e., the tampered block, is significantly larger than those of other intact blocks. Therefore, we can utilize the voting parameter s i to identify and localize the tampered blocks by setting the appropriate threshold s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Content restoration</head><p>In addition to the authentication-bits, the remaining portion of the extracted 1-LSB bits stream is the referencebits, which include type indicators, number indicators, and restoration-bits, as shown in Table <ref type="table" target="#tab_0">1</ref>. To conduct content restoration for the tampered blocks, the NSCT reference image should be generated by decoding the restorationbits from the reference-bits according to the bits structure in Fig. <ref type="figure">6</ref>.</p><p>First, the reference-bits stream is segmented into r parts using the type indicators, which indicate the different encoding lengths for different types of blocks. Each part corresponds to the reference-bits for one t Â t block.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Hash bits of 4 blocks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Subsets</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Calculated authentication-bits</head><p>Extracted authentication-bits </p><formula xml:id="formula_14">0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 0 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 + - + + - + + - + - + -</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 2</head><p>Voting parameter s i for each n Â n block.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Block index</head><p>Distributed subsets of hash bits r i</p><p>The 1st block 4th, 1st, 8th, 3rd, 11th, 7th</p><formula xml:id="formula_15">s 1 ¼ 1</formula><p>The 2nd block 1st, 4th, 10th, 5th, 3rd, 9th</p><formula xml:id="formula_16">s 2 ¼ 2</formula><p>The 3rd block 12th, 6th, 5th, 2nd, 7th, 9th</p><formula xml:id="formula_17">s 3 ¼ 5</formula><p>The 4th block 2nd, 6th, 8th, 10th, 12th, 11th  Then, the restoration-bits for each t Â t block, consisting of the 8þlog 2 t bits DC coefficient and the 8þlog 2 t sets of AC coefficients, can be obtained according to the number indicators, which indicate the number of AC coefficients in each set. Finally, the NSCT reference image can be generated easily by conducting the inverse DCT on the obtained DC and AC coefficients of all r blocks. Content restoration can be achieved by substituting the localized tampered blocks with the corresponding blocks of the NSCT reference image.</p><p>It should be noted that the reference-bits are capable of error correction, if the errors happen to occur in the sections of type indicators TI and number indicators NI j in Fig. <ref type="figure">6</ref>. In this case, the restoration-bits cannot be decoded accurately, because the lengths of the reference-bits and {AC j } for each block are strictly consistent with TI and NI j , respectively. If the blocks, in which the bits of the sections TI and NI j are embedded, are tampered, they can be localized by the authentication procedure. Therefore, exhaustive trials can be conducted on the error bits of the sections TI and NI j , until the restoration-bits can be decoded properly.</p><p>When the tampered image region is too extensive, it might occur that one block (denoted as A) and its corresponding block (denoted as B), in which the restoration-bits of block A are embedded, are destroyed simultaneously. In this scenario, the destroyed restoration-bits embedded in block B cannot be used to restore block A. To deal with this problem, we utilize the image inpainting technique to automatically repair the blocks whose corresponding restoration-bits are destroyed. The inpainting algorithm based on partial differential equation (PDE) proposed in <ref type="bibr" target="#b30">[30]</ref> is adopted in this work, see Eq. ( <ref type="formula" target="#formula_18">11</ref>) @ @t n I i ðx,yÞ ¼ r DI i ðx,yÞ</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Â Ã</head><p>Ur ? I i ðx,yÞ, 8ðx,yÞ 2 O,</p><p>where I i denotes the image in which the recoverable blocks are restored by their restoration-bits, (x, y) is the coordinates of the image pixel, O is the set of the blocks that cannot be restored by the corresponding restorationbits, t n denotes the time index, D and r are the Laplacian operator and the gradient operator, respectively, and r ?</p><p>denotes the isophote direction that is normal to the gradient r. The PDE-based model in Eq. ( <ref type="formula" target="#formula_18">11</ref>) imitates the practice of a traditional art professional in the manual repairing process, and propagates the useful neighboring information of gray values along isophote direction into the damaged blocks, which cannot be restored by the restoration-bits, and completes the whole restoration procedure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experimental results</head><p>In the experiment, the sizes of the divided image blocks for the hashing calculation and the NSCT transform were 8 Â 8 and 32 Â 32, i.e., n¼8 and t ¼32, respectively. The length m of the hash bits for each 8 Â 8 block was 33, and the threshold s for the voting-based tampering localization was 8. The parameters a and b were set to 3 and 0.098, respectively. That is to say, the 33 hash bits of each 8 Â 8 block produced 3 authentication-bits by the folding operation, and 0:098 Â 32 2 j k ¼ 100 DCT coefficients for each 32 Â 32 block of the NSCT low-frequency component were used to generate the restoration-bits.</p><p>Larger a and b values may enhance the accuracy of localization and restoration, but they also lead to embedding with more bits, which could affect the quality of the watermarked image.</p><p>Two standard gray images, Lena and Boat, both sized 512 Â 512, were used as cover images for self-embedding by the proposed scheme. For the cover images sized 512 Â 512, L 3 was always equal to 881, calculated by Eq. (4). In our experiment, all of the 256 blocks sized 32 Â 32 were classified adaptively into four types, i.e., T 1 , T 2 , T 3 , and T 4 ; l 1 and l 2 in Eq. ( <ref type="formula" target="#formula_8">7</ref>) were equal to 5 and 2, respectively; L 1 , L 2 , and L 4 were set to 536, 743, and 950, respectively, which were satisfied with Eq. <ref type="bibr" target="#b6">(7)</ref>. As stated in Section 2.3, one can also set her or his own L 1 , L 2 , and L 4 values according to the requirement. By Algorithm 1, the types T 1 through T 4 of the Lena image consist of 4, 2, 226, and 24 blocks, respectively, while the types T 1 through T 4 of the Boat image consist of 8, 0, 208, and 40 blocks, respectively. This means that 536, 743, 881, and 950 bits are correspondingly used to represent the restoration-bits    substituting their partial contents with the fake information, shown as Fig. <ref type="figure" target="#fig_9">11</ref>(a) and (b). According to the extracted and calculated authentication-bits, all fake blocks in the two tampered, watermarked images were localized and labeled with white, as shown in Fig. <ref type="figure" target="#fig_10">12</ref> Besides Lena and Boat, two other standard gray images, i.e., Gold and Girl, sized 512 Â 512, were used to compare the content restoration performance between several selfembedding watermarking schemes. We generated the watermarked images using the proposed scheme and the  methods in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref> and modified the contents of the watermarked images. Fig. <ref type="figure" target="#fig_13">14(a</ref>) and (b) show the cover images Gold and Girl, and Fig. <ref type="figure" target="#fig_13">14(c</ref>) and (d) are the corresponding tampered versions of the watermarked images by the proposed scheme. In Figs. 15 and 16, (a) through (d) show the restored results using the methods in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>, and the proposed scheme, respectively. Table <ref type="table" target="#tab_2">3</ref> gives the PSNR values of the watermarked images and the restored images for Lena, Boat, Gold, and Girl. The methods in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23]</ref> used the 3-LSB planes to embed the watermark, while the proposed scheme and <ref type="bibr" target="#b24">[24]</ref> only used the 1-LSB plane. Therefore, it can be observed that the PSNR values of watermarked images of the proposed scheme and <ref type="bibr" target="#b24">[24]</ref> are higher than the values of <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23]</ref>. The length of the codebook used in <ref type="bibr" target="#b19">[20]</ref> was 256. Because the method in <ref type="bibr" target="#b23">[23]</ref> can recover the 5-MSB of the tampered images with no error when the tampering rate is below 24%, the PSNR values of the images restored by this method are almost the same. In the results of Figs. 15 and 16 and Table <ref type="table" target="#tab_2">3</ref>, the methods in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23]</ref>, and the proposed scheme just restore the localized tampered regions, while the method in <ref type="bibr" target="#b24">[24]</ref> reconstructs the whole image region since this method does not emphasize on the tampering localization. Due to the good performance of adaptive bit allocation for the restoration-bits, it can be seen in Table <ref type="table" target="#tab_2">3</ref> that the proposed scheme can restore the tampered images efficiently and that its restored images have higher PSNR values than those restored by <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>. Note that the tampering percentages in Figs. 11 and 14 were less than 5%.</p><p>We also conducted the experiments under the condition that the tampered image areas were relatively larger. As we stated in Section 3, the restoration-bits and the inpainting algorithm are jointly utilized to restore the extensive tampered region. First, the tampered blocks have the priority to be restored by their corresponding intact restoration-bits. Then, the inpainting algorithm in <ref type="bibr" target="#b30">[30]</ref> is adopted to restore the remaining tampered blocks whose restoration-bits are destroyed due to the extensive tampering. Fig. <ref type="figure" target="#fig_15">17</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>In this paper, we have proposed a self-embedding fragile watermarking scheme based on the adaptive bit  <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>, and the proposed scheme. allocation mechanism. Authentication-bits and restoration-bits are embedded into the cover image to realize tampering localization and content restoration, respectively. A DCT-based image hashing algorithm is used to produce the hash bits for each cover block, and the hash bits are reduced to the authentication-bits by the folding operation. We utilize the NSCT transform to obtain the principle content of the image, and encode the NSCT coefficients into the restoration-bits using adaptive bit allocation. All cover blocks are categorized into four types according to the degree of smoothness. The type of complex blocks is allocated more bits, and the type of smooth blocks is allocated fewer bits. Two algorithms are used to adjust the block classification and binary representation for each block adaptively. By the adjustment of these two algorithms, the watermark bits number of total blocks is exactly suitable for embedding into the 1-LSB plane. On the receiver side, using a voting-based strategy, the calculated authentication-bits and the extracted authentication-bits are compared to localize the tampered blocks. After decoding, the restoration-bits are used to restore the localized, tampered blocks. When the tampered region is not too extensive, the PSNR values of the restored images are high due to the good performance of the adaptive bit allocation for restoration-bits.</p><p>Future work should include the development of a semifragile watermarking scheme that can simultaneously  <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>, and the proposed scheme. Method in <ref type="bibr" target="#b19">[20]</ref> 37.9 37.9 37.8 37.8 37.3 37.6 37.4 37.7 3-LSB Method in <ref type="bibr" target="#b23">[23]</ref> 37.9 37.9 37.9 37.9 40.7 40.7 40.7 40.7 3-LSB Method in <ref type="bibr" target="#b24">[24]</ref> 51. provide good restoration capability and resist some kinds of content-preserving manipulations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Contents lists available at SciVerse ScienceDirect journal homepage: www.elsevier.com/locate/sigpro Signal Processing 0165-1684/$ -see front matter &amp; 2011 Elsevier B.V. All rights reserved. doi:10.1016/j.sigpro.2011.11.013</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Framework of the watermark self-embedding procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Nonsubsampled contourlet transform. (a) Structure of nonsubsampled filter bank and (b) 2-D frequency partitioning.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig.<ref type="bibr" target="#b3">4</ref>. Algorithm 1 for the adjustment of block classification.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Algorithm 2 for the binary representation adjustment of each t Â t block.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Illustration of voting-based localization of tampered blocks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Framework of the procedure for authentication and restoration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Cover images of Lena and Boat.</figDesc><graphic coords="8,119.19,511.50,309.60,164.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Watermarked images of Lena and Boat.</figDesc><graphic coords="9,115.20,56.57,309.60,164.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Tampered versions of Lena and Boat in Fig. 10.</figDesc><graphic coords="9,115.21,262.39,309.60,162.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Localization results for the tampered images Lena and Boat.</figDesc><graphic coords="9,115.21,458.86,309.60,164.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>(a) and (b). The two restored images from the extracted, decoded restoration-bits are shown in Fig. 13(a) and (b), and the corresponding PSNR values are 41.8 dB and 44.8 dB, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Restored images for the tampered images Lena and Boat.</figDesc><graphic coords="10,119.19,56.57,309.60,164.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Cover images of Gold and Girl and their tampered, watermarked versions.</figDesc><graphic coords="10,119.19,255.32,309.60,329.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>(a) and (b) show the tampered, watermarked versions of Lena and Gold, and the tampering percentages are 7.0% and 27.3%, respectively. The restored images are presented in Fig.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>17</head><label>17</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head></head><label></label><figDesc>(c) and (d), and the corresponding PSNR values are 39.50 dB and 38.78 dB, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Restored results of Gold with the methods in<ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>, and the proposed scheme.</figDesc><graphic coords="11,115.20,56.57,309.60,330.91" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 16 .</head><label>16</label><figDesc>Fig.<ref type="bibr" target="#b15">16</ref>. Restored results of Girl with the methods in<ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b24">24]</ref>, and the proposed scheme.</figDesc><graphic coords="12,119.19,56.57,309.60,330.77" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="13,115.20,56.57,309.60,332.06" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Components of the bits stream for embedding.</figDesc><table><row><cell>Components</cell><cell>Descriptions</cell></row></table><note><p>the authentication-bits of all the k blocks sized n Â n k Á a Type indicators two duplicated type indicators for each U i sized t Â t (i¼ 1, 2, y, r) 4 r Number indicators the number indicator Q</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Comparisons of several self-embedding watermarking schemes.</figDesc><table><row><cell>Watermarking schemes</cell><cell cols="3">PSNR of watermarked images (dB)</cell><cell></cell><cell cols="3">PSNR of restored images (dB)</cell><cell>Volume of embedded data</cell></row><row><cell></cell><cell>Lena</cell><cell>Boat</cell><cell>Gold</cell><cell>Girl</cell><cell>Lena</cell><cell>Boat</cell><cell>Gold</cell><cell>Girl</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>C. Qin et al. / Signal Processing 92 (2012) 1137-1150</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Information hiding-a survey</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">A P</forename><surname>Petitcolas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Kuhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1062" to="1078" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Invisibility and application functionalities in perceptual watermarking: an overview</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Vleeschouwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Delaigle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Macq</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">90</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="77" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Reversible data hiding based on histogram modification of pixel differences</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">L</forename><surname>Tai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Yeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="906" to="910" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A reversible data hiding scheme using complementary embedding strategy</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">D</forename><surname>Kieu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">16</biblScope>
			<biblScope unit="page" from="3045" to="3058" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A watermarking-based image ownership and tampering authentication scheme</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">S</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="439" to="446" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Secure spread spectrum watermarking for multimedia</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">J</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">T</forename><surname>Leighton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Shamoon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1673" to="1687" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A DWT-DFT composite watermarking. scheme robust to both affine transform and JPEG compression</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">G</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">Q</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="776" to="786" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">SVD-based digital image watermarking scheme</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Y</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1577" to="1586" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Dual digital watermarking for internet media based on hybrid strategies</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1169" to="1171" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Secret and public key image watermarking schemes for image authentication and ownership verification</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Memon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1593" to="1601" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Fragile image watermarking using a gradient image for improved localization and security</title>
		<author>
			<persName><forename type="first">S</forename><surname>Suthaharan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">16</biblScope>
			<biblScope unit="page" from="1893" to="1903" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Binary image authentication with tampering localization by embedding cryptographic signature and block identifier</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Kot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Letters</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="741" to="744" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Reversible fragile watermarking for locating tampered blocks in JPEG images</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">90</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="3026" to="3036" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fragile watermarking scheme using a hierarchical mechanism</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="675" to="679" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A robust image authentication method distinguishing JPEG compression from malicious manipulation</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">F</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="153" to="168" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Semi-fragile watermarking for authenticating JPEG visual content</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">F</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SPIE International Conference on Security and Watermarking of Multimedia Contents II</title>
		<meeting>SPIE International Conference on Security and Watermarking of Multimedia Contents II</meeting>
		<imprint>
			<date type="published" when="2000-01">Jan. 2000</date>
			<biblScope unit="volume">3971</biblScope>
			<biblScope unit="page" from="140" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A new semi-fragile image watermarking with robust tampering restoration using irregular sampling</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T S</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Marziliano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing: Image Communication</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="515" to="528" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Semi-fragile image watermarking method based on index constrained vector quantization</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">M</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronics Letters</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="35" to="36" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Images with self-correcting capabilities</title>
		<author>
			<persName><forename type="first">J</forename><surname>Fridrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Goljan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Image Processing</title>
		<meeting>IEEE International Conference on Image Processing</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="792" to="796" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Recover the tampered image based on VQ indexing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">90</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="331" to="343" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Restoration performance for larger tampered area</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Adjacent-block based statistical detection method for self-embedding watermarking techniques</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1557" to="1566" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Fragile watermarking with error-free restoration capability</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1490" to="1499" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Reference sharing mechanism for watermark self-embedding</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="485" to="495" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Inpainting assisted self recovery with decreased embedding data</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Letters</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="929" to="932" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Image self-embedding with high-quality restoration capability</title>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">P</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Digital Signal Processing</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="278" to="286" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Robust and secure image hashing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Swaminathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">N</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="215" to="230" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Robust hash function for digital watermarking</title>
		<author>
			<persName><forename type="first">J</forename><surname>Fridrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Goljan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on Information Technology: Coding and Computing</title>
		<meeting>International Conference on Information Technology: Coding and Computing</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="173" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The nonsubsampled contourlet transform: theory, design, and applications</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Cunha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Do</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="3089" to="3101" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Nonsubsampled contourlet transform: filter design and application in denoising</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Cunha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Do</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Image Processing</title>
		<meeting>IEEE International Conference on Image Processing</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="749" to="752" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Navier-Stokes, fluid dynamics, and image and video inpainting</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bertalmio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Bertozzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 IEEE Computer Society Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the 2001 IEEE Computer Society Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="355" to="362" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
