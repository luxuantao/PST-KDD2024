<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ON RELATING TIME AND SPACE TO SIZE AND DEPTH*</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Allan</forename><surname>Borodin'</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Toronto</orgName>
								<address>
									<postCode>M5S 1A7</postCode>
									<settlement>Toronto</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ON RELATING TIME AND SPACE TO SIZE AND DEPTH*</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C4BF55EA95EF119544C7DB2AE9E1D4A6</idno>
					<note type="submission">Received by the editors March 30, 1976, and in revised form December 6, 1976.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:13+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Turing machine space complexity is related to circuit depth complexity. The relation- ship complements the known connection between Turing machine time and circuit size, thus enabling us to expose the related nature of some important open problems concerning Turing machine and circuit complexity. We are also able to show some connection between Turing machine complexity and arithmetic complexity.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1. Introduction. Fischer and Pippenger <ref type="bibr" target="#b6">[7]</ref> have shown that a T(n) time bounded Turing machine (TM) can be simulated on n bits by a combinational (Boolean) circuit with O(T(n)log T(n)) gates (see also Schnorr <ref type="bibr" target="#b24">[25]</ref>). In this paper, we observe that nondeterministic S (n) tape bounded Turing machines can be simulated by circuits of depth O(S(n)2). In doing so, we relate the power of nondeterminism for space bounded computations to the depth required for the transitive closure problem. As a consequence of this development we show a relationship between the TIME-SPACE problem and the SIZE-DEPTH prob- lem (equivalently the SIZE-FORMULA SIZE problem).</p><p>There has always been some ambiguity between the terminology of circuit complexity and TM complexity. In particular, depth is sometimes referred to as "time". But here "time" implicitly means parallel time, since several gates in a combinational circuit can operate in parallel. (In arithmetic complexity, depth is almost always referred to as parallel time.) In Pratt and Stockmeyer <ref type="bibr" target="#b21">[22]</ref>, we are introduced to vector machines, a general parallel machine model; general in the sense that inputs can be of arbitrary length (see also Hartmanis and Simon <ref type="bibr" target="#b8">[9]</ref>). It is then shown that polynomial time (that is, parallel time) for these vector machine corresponds to TM polynomial space. Motivated by the simulations of Pratt and   Stockmeyer <ref type="bibr" target="#b21">[22]</ref> and Hartmanis and Simon <ref type="bibr" target="#b8">[9]</ref>, it is not hard to see that the crux of our space simulation should rely on the transitive closure problem. In the next section, we define the models more carefully and present the basic simulation. In 3, we discuss relationships between TM and circuit complexity. In 4, we conclude with some observations concerning arithmetic complexity.</p><p>2. Turing machines, circuits and the basic simulation. We assume that the reader is familiar with Chapters 6 and 10 of Hopcroft and Ullman <ref type="bibr" target="#b10">[11]</ref>. Our TM model is an "off-line" machine with a two-way read only input tape. For time bounded computations we allow an arbitrary but finite number of work tapes. For tape bounded computations, it is sufficient to have just one work tape. The benefit of the read only tape is that it allows us to consider tape bounds less than the length of the input. Usually we consider Turing machines as acceptors or recognizers but sometimes we will need to consider transducers, in which case we append a write only output tape.</p><p>For a nondeterministic machine M, say that L _ * is accepted in time T(n) (space $ (n)) by M if w L iff on input w there is a valid computation leading to an accepting state which uses &lt;-T(Iwl) steps (respectively, S(Iwl) work tape cells).</p><p>Here Iwl denotes the length of the string. Without loss of generality, we can restrict ourselves to E {0, 1}.</p><p>A combinational (Boolean)circuit is a labeled acyclic, directed graph (a network). Nodes with in-degree=0 are called input nodes, nodes with out- degree 0 are called output nodes. Interior nodes (i.e. noninput nodes including output nodes) represent (i.e. are labeled with) logical gates f: {true, false} -{true, false}. Since we shall only be concerned with asymptotic complexity bounds, without loss of generality we can use the complete basis AND (denoted ^), inclusive OR (v) and NOT <ref type="bibr" target="#b6">(7)</ref>. (See Savage [23, pp. 662, 663].) We can have arbitrary fan-out and allow the constants {true, false} as inputs. By associating true with '1' and false with '0', we think of every Boolean circuit as realizing a function f: {0, 1} --&gt; {0, 1}. That is, let A {0,1} we say A is realized by circuit C if C has n nonconstant input nodes (labeled x x) and C accepts (i.e. outputs 1 -true) iff x ix2.., x, is in A". As a notational convenience, if A _ {0, 1}*, let A" :A f-I{0,</p><p>The size of a circuit C is the number of interior nodes or gates, and the depth of C is the length of the longest path in C. We will also have need to encode a circuit C as a string in {0,1}*. This can be done in a straightforward way; i.e. topologically order the network, give addresses to each of the nodes, and then a circuit can be given as a sequence of instructions.</p><p>If the output of C depends on all n inputs x,..., x,, the size of C must be -&gt;_ n 1; it follows that I1--&gt; d size C. log size C for some constant d &gt; 0. (Note that the chosen basis implies fan-in =&lt; 2.)  Finally, we let SIZEa (n) (respectively DEPTHa (n)) be the minimum size (depth) required for a circuit to realize A". Using this notation, we recall the time-size simulation result.</p><p>THEOREM 1 (Fischer and Pippenger <ref type="bibr" target="#b6">[7]</ref>). LetA be recognized by a determinis- tic T(n)&gt;-n time bounded TM. Then there exists d &gt; 0 such that SIZEA (n)&lt;_ d T(n ) log T(n ).</p><p>Analogously, we have the following: THEOREM 2. Let A be accepted by a nondeterministic S(n)&gt;-_ log2 n space bounded TM. Then there exists a d &gt; 0 such that DEPTHA (n)&lt;-_ d S(n).</p><p>Proof. Let M be a S(n) tape bounded nondeterministic TM with S(n)&gt;- log2 n. Say M has q states and s symbols on its work tape and that the input w {0, 1}". Thinking of w as fixed, the computation sequence is "determined" by the state, the input tape head position, the work tape head position, and the contents of the work tape. Thus there are at most N=q n S(n). s s(") config- urations. We can think of the acceptance problem as the transitive closure problem for a graph with N nodes, whose edges correspond to the allowable moves determined by M and w. Let X (xi) where xi 1 iff there is a move from configuration to config- 1 iff there is a uration/', and let X* (x ) be the transitive closure. That is, x o path from configuration to configuration/'. (See Fig. Let be the number of a configuration corresponding to the input head being on square k. Then wk is directly connected to xij iff there is a move from configuration to only when the kth input bit is 1. wk is negated and then connected to x 0. iff there is a move from configuration to f only when the kth input is 0. w is not connected to x0 iff there is (is not) a move from configuration to j independent of the value of the kth input bit. In this case x0 is set to the appropriate constant.</p><p>Let 1 be the number of the starting configuration and let ft. (1 &lt;-j &lt;_-r) correspond to accepting configurations. By using log (N-1) levels of Boolean matrix multi- plication, it is well known that an N x N transitive closure circuit requires only log 2 N depth. Also, an N-way 'OR' can obviously be realized with depth log N. The theorem follows since N q n S (n). s s(n) and therefore log N &lt; d S (n).</p><p>Remark. Let A be accepted by M as in Theorem 2. With a little care in the numbering of the configurations, the mapping 1</p><p>Cn (where C, realizes A n) is computable by a deterministic $(n) space bounded transducer if $(n) is tape constructible. This follows because of the "uniformly constructive" nature of the log 2 N depth transitive closure circuits (i.e. they can be generated in log N space).</p><p>We shall have more to say about "uniformity" in 3.  Open Problem 1. If M is deterministic S (n) tape bounded, can we improve the simulation so that DEPTHA (n) &lt;_-d S (n)?</p><p>Since each output in the N x N transitive closure problem can be computed in nondeterministic log N space, it follows that improving the simulation for nondeterministic machines is equivalent to improving the depth required for the transitive closure problem. In particular, if the N x N transitive closure problem can be realized with depth &lt;-c log n (where 1 &lt;-ce &lt;-2) then DEPTHA (n)-&lt; d. S(n)' in Theorem 2.  Let A be recognized by a deterministic S (n) tape, T(n) time bounded machine. Can we realize A by circuits with SIZEA (n) ciT(n) k' and (simultaneously) DEPTHa (n)2T(n) k2 for some constants cl, c2, kl, k2. 9   Let -&lt;-log represent log space reducibility (see Jones and Laaser <ref type="bibr" target="#b11">[12]</ref>). We could allow nondeterministic transduction here but we might as well follow the standard meaning of deterministic log space many-one reducibility. By converting every log space transducer to one with a separate track keeping count (in binary) of the number of output bits thus far in the computation, we can generalize Theorem 2 as follows: THEOREM 3. Let A &lt;-_ og B. Then DEPTHA (n)-&lt; d. log 2 n + max DEPTHB (m)   cn [or some constants c, d and k.</p><p>Proof. Let m be the log space transducer which reduces A to B. Then on input w of length n, M can output at most N cn bits since M is log n space bounded.</p><p>Let yo (respectively, y) be the 'OR' of those configurations where the ith bit being output is a '0' (respectively, '1'). If y o and y are both false, then we know that M outputs less than bits on input w. Knowing m, the exact number of bits output by M on w, we can "activate" the circuit C,, for B" with inputs y] (1 &lt;=i =&lt;m). (See Following standard notation, let P be the class of languages recognizable in deterministic polynomial time. B is called log space complete for P if (i) B is in P, (ii) A in P implies A -&lt; log B.</p><p>Cook <ref type="bibr" target="#b2">[3]</ref>, Jones and Laaser [12] and Ladner [29] exhibit a variety of natural sets which are log space complete for P. We can define an analogous concept for circuits. Namely, let us say that B is depth completeforpolynomial size circuits if (i) SIZEB (n)&lt;=p(n) for some polynomial p.</p><p>(ii) Let A be such that SIZEA (n)&lt;=p(n) for some polynomial pl. Then there exist constants c and k, and a polynomial q such that for all n there is an n-input circuit Tn with the following properties: (a) depth Tn _-&lt; log k n</p><p>Note" of course, we would like k 1.</p><p>(b) T, outputs (yl,...,yN)=/((xl, ...,x.)) and (zl,...,zN)= fz((X,''' ,x,)) for some fixed N&lt;-q(n). (c) there is a unique output z,, with value 1 and for this m we have x x,, in A" iff y ym in Bin.</p><p>Our definition has been chosen so that the construction in Theorem 3 immediately yields" COROLLARY 1. If B is log space complete for P, then B is depth complete for polynomial size circuits.</p><p>We think of depth (log space) complete sets as being "hardest polynomially computable sets" with respect to depth (space) requirements. Ladner defines the following "circuit value problem" and shows it to be log space complete for P: V {x</p><p>x. ]C outputs true on input x Xn}.  Corollary i verifies the obvious fact that V is depth complete for polynomial size circuits. 3. Relating open problems in Turing machine and circuit complexity. As usual, we let DTIME (T(n)) (respectively, DSPACE (S(n)), NSPACE (S(n)) denote the class of languages accepted in deterministic Time T(n) (respec- tively, deterministic and nondeterministic space S(n)). Analogously, define {BIDEPTHn(n)_-&lt; c. S(n)}. We first want to complete the relationship between TM space and circuit depth and thus we need a "converse" to Theo- rem 2.</p><p>LEMMA 1. Let V be the circuit value problem. There is a deterministic TM M which recognizes Vsuch that on input x x, # C, Monly uses space bounded by Depth C + log size C.</p><p>Proof. The idea is just to recursively evaluate (say, first the left and then the right) inputs to a given gate. A straightforward implementation using a pushdown store would require depth C. log size C storage (i.e. depth C levels in the store, log size C space for each gate address entry). We use a suggestion by S. Cook to improve this to the desired bound. In evaluating the output of C, we only need to store the full address of the gate currently being evaluated while the status (e.g.</p><p>left input has value "false" and right input now being evaluated)of each gate on the pushdown store can be accommodated within constant space. We can recom- pute the address of any gate on the stack by working up from the bottom of the stack (i.e. the circuit output gate) via the status entries.</p><p>DEFINITION. We say that A is uniformly in DEPTH (S(n)) if there is a constant c such that for all n, there is a circuit C, of depth -&lt; c $ (n) realizing A" and, moreover, C, can be generated in deterministic space S(n); i.e. the transformation 1" -C, is deterministic S (n) space computable. THEOREM 4. Suppose A is uniformly in DEPTH (S(n)), $(n)&gt;= log n. Then A is in DSPACE (S(n)).</p><p>Note. We view this as a "converse" to Theorem 2 for that result can be stated as" "If A is in NSPACE (S(n)), then A is uniformly in DEPTH (S(n)2)".</p><p>Proof. Given an input w x</p><p>x,, we apply Lemma 1. Now whenever we need to know the ith bit of C, (as in the lemma), we compute it (in the required space) by using the uniformity hypothesis.</p><p>It is well-known that one can define arbitrarily complex or nonrecursive sets A such that for all n, A" &amp; or A" Z". Since a trivial circuit realizes A" for each n, it is clear that A in DEPTH (S(n)) does not imply that A in DSPACE (S'(n))</p><p>for any $'(n)&gt;-S(n). In order to relate space and depth, we chose to assert a uniformity condition on the circuits. There is another choice. Following Schnorr <ref type="bibr" target="#b24">[25]</ref>, Meyer and Stockmeyer <ref type="bibr" target="#b16">[17]</ref> suggest "making the Turing machines nonuniform" by giving them oracles. Then they observe that our Theorems 2 and 4 can be modified as follows"</p><p>(a) If A is recognized by a nondeterministic $ (n) space bounded TM M with a {0, 1}* oracle, then A is in DEPTH (S(n)2).</p><p>(b) If A is in DEPTH (S(n)), then A is recognized by a deterministic $(n) space bounded TM M with a {0, 1}* oracle. In (b), the oracle is used to encode the appropriate efficient circuit. In both (a) and (b) we count the space needed for the oracle tape questions. This formulation does have a very nice mathematical appeal. We have, however, chosen to assert the uniformity of circuits because from a "practical" point of view, experience tells us that if we can show A is in DEPTH (S(n)), then we usually can show A is uniformly in DEPTH (S(n)). The same choice also exists for the TIME-SIZE relationship. Here "uniformly in SIZE (T(n))" means that we can generate the appropriate circuit description in deterministic time T(n). Then we can relate uniform size and time or (see Schnorr  <ref type="bibr" target="#b24">[25]</ref>) we can instead relate size and time of Turing machines with oracles. Using Schnorr's <ref type="bibr" target="#b24">[25]</ref> model, nonuniformity takes form in a {0, 1}* oracle explicitly listed on a separate tape; Meyer <ref type="bibr" target="#b15">[16]</ref> shows that with the more conventional model which uses a separate tape for inputs to an oracle, nonuniformity for time takes form in a {0}* oracle.</p><p>We can use Theorems 2 and 4 to make explicit the role of transitive closure in Savitch's  <ref type="bibr" target="#b23">[24]</ref> construction. Throughout the remainder of this paper we let a (1 _&lt;-a _-&lt;2) be such that the NN transitive closure problem can be realized (uniformly) with depth -&lt;_ c log N. COROLLARY 2. Let a be as above. Then NSPACE (S(n)) _ DSPACE (S (n)) ]'or all tape constructible S (n ) &gt;-log n.</p><p>Proof. Let M be a nondeterministic S (n) space bounded TM accepting A. For every input w x x, we can generate a circuit C, corresponding to M, w (as in Theorem 2). By hypothesis, this can be done in deterministic space S(n), and depth C,, &lt;-c. S(n)' for some constant c (see the remarks following Theorem 2).</p><p>That is, A is uniformly in DEPTH (S(n)') and hence A is in DSPACE (S (n)'). More constructively, by using Theorem 2 and Lemma 1, we can produce a deterministic S(n)' tape bounded machine M' recognizing A. 71   One of the most important problems in computational complexity concerns efficient space simulations of time bounded computations. In particular, there is a conjecture that DTIME(T(n))c_.DSPACE(log'T(n)) for some constant k.</p><p>(Indeed, k 1 is still possible.) Cook <ref type="bibr" target="#b2">[3]</ref>, and Cook and Sethi <ref type="bibr" target="#b3">[4]</ref> present important evidence that the conjecture is false, and this represents the concensus of opinion at this time. On the positive side, Hopcroft, Paul and Valiant <ref type="bibr" target="#b9">[10]</ref> have shown that DTIME (T(n))_c DSPACE T(n)/log T(n)). Independent of this result (and independent of our observations), Paterson and Valiant  <ref type="bibr" target="#b18">[19]</ref> proved that SIZE (T(n))c_ DEPTH (T(n)/log T(n)), noting that their result only had significance when T(n) n. The known relationships between TIME-SIZE, and SPACE-DEPTH are not refined enough to show that either of these results follows from the other, but we can show that the problems are related. CorOLLAI' 3. Suppose DTIME (n) _ NSPACE (S(n)). Then SIZE (T(n)) _ DEPTH (S'(n)) uniformly for any time constructible T(n) where S'(n)</p><p>[S(T(n) log 3 T(n))] .H ere uniformly means that the required cS'(n) depth circuit can be constructed in deterministic space S'(n ). Recall a &lt;= 2.  Proof. Given a T(n) size circuit C, we encode it as a word C of length =&lt; c. T(n). log T(n). A straightforward circuit simulation by a TM can be per- formed in deterministic time rn 2, where rn is tile length of the circuit description.</p><p>Recently, Pippenger <ref type="bibr" target="#b20">[21]</ref> showed how to recognize the circuit value problem V in time rn log 2 m. By hypothesis, and using a standard translation argument, we have DTIME (T(n))_ DSPACE (S[ T(n)]). Hence there is a deterministic TM M recognizing V in space S (m log m); in particular, x x, # C will be accepted or rejected in space S (m log 2 m) S (T(n) log 3 T(n)). Hence there is a circuit C' of depth c S'(n) which realizes x</p><p>x, # C. Finally we can fix the input gates for C and the resulting circuit has depth &lt;-c S'(n).</p><p>For example, we have "DTIME(n)_NSPACE(logn) implies SIZE (T(n))_ DEPTH (log T(n)) uniformly".  Proof. Let M be T(n) time bounded. We construct an equivalent M'. M' on input w Xl... x, constructs a circuit C, of size c T(n)log T(n) according to the Fischer-Pippenger simulation. (We claim with their oblivious T. log T machine that this can be done in space log T(n).) Then, by hypothesis, we construct an equivalent circuit C', of depth d S[ T(n). log T(n)] and finally apply Lemma 1 or Theorem 4 to produce the desired M'.</p><p>Again, for example, "SIZE(n)DEPTH(logkn) uniformly implies DTIME (T(n))_ DSPACE (log k T(n))". Note that Corollary 4 is "almost good enough" to derive the Hopcroft, Paul and Valiant 10] result from the Paterson and Valiant <ref type="bibr" target="#b18">[19]</ref> construction. (The latter construction can be realized in space n/log n). Summarizing, we have shown that the TIME-SPACE problem for Turing machines is "roughly" equivalent to an "efficiently constructive" version of the SIZE-DEPTH problem for circuits.</p><p>Circuits with a fan-out 1 restriction correspond to formulas. Spira <ref type="bibr" target="#b25">[26]</ref> has shown that a formula of size T(n) &gt;-_ n can be transformed to an equivalent formula of depth =&lt; c log T(n). (Consider also Brent's [30] analogous result for arithmetic expressions). Moreover, it should be clear that formula size -&lt;_ 2 depth. Hence, if we are looking for an example where formula size is exponentially larger than (arbitrary circuit) size, we might as well look at any of the languages which are log space complete for P. It should be noted that Spira's construction is reasonably uniform; that is, a formula of size n can be transformed within log 2 n space to an equivalent formula of depth c log n. (This transformation should be compared with the hypothesis of Corollary 4.) We do not see how to construct a depth c. log n formula in space log n. However, using Lynch's <ref type="bibr" target="#b14">[15]</ref> log n formula evaluation in conjunction with Theorem 2, we can construct a depth c. logZn formula in space log n. 4. Some comments on arithmetic circuits. An arithmetic circuit is like a Boolean circuit except that now the inputs are indeterminates x 1,'' ", x (and possibly constants c F, F a field), the internal gates are +, -, , :-, and the outputs are considered to be elements of F(x 1, , x) (see Borodin and Munro <ref type="bibr" target="#b0">[1]</ref>). For definiteness, let's take F-Q, the rationals. Strictly speaking, the size-depth question for arithmetic circuits is not a problem. Kung [14] has shown that x 2 requires k depth (depth is called parallel time in the literature of 2:</p><p>arithmetic complexity) and x can obviously be realized with size (or sequential time) k. However, if one restricts attention to functions of small degree, the size-depth question is meaningful.</p><p>Throughout the remainder of this discussion, let us restrict our attention to the computation of multivariate polynomials or rational functions p(x,. , x)</p><p>of degree _-&lt; n. (Also, if we do not allow arbitrary constants in Q as inputs, then we should also restrict the coefficients occurring in p.) To argue the case that arithmetic complexity and the more traditional studies of computational complexity are related, let us consider a current problem concerning parallel arithmetic computations. Csanky <ref type="bibr" target="#b4">[5]</ref> has shown that if PWR (A) {A 2, A 3,..., A ]A an n n matrix} is computable in L (n) depth (parallel steps) then A 1, det A, coefficients of char (A) would all be computable in O(L(n)) depth. Sch6nhage has demonstrated that a converse also holds; specifically, PWR (A) can be obtained from B -1 where I A B= I A Now we know log n _-&lt; L (n)-&lt; log 2 n and the question arises as to whether or not L(n) O(log n). To dramatize the consequences of Corollary 2, we can make the following observation.</p><p>COROLLARY 5. We now consider only circuits with +, -, x (no +)and constants in Q.</p><p>Suppose there is a deterministic L (n transformation 1 -C, which generates a depth L(n) arithmetic circuit C, realizing A,, (say L(n)=log n). Then NSPACE (S (n)) _ _ _ DSPACE (S(n)O log S (n)) ]:or all constructible S (n) &gt;-log n.</p><p>Proof. Let A * (a ) be the transitive closure (considered as a set of Boolean functions). Let A (a0.) be a matrix with {0, 1} integer entries, and assume a 1, 1 =&lt; =&lt; n. Letting (0) A" (with respect to arithmetic matrix multiplication),</p><p>we then have a 0* min (0, 1). Starting with a 0-1 matrix A, we know ij &lt;--n". We would like to simulate (integer) arithmetic as in <ref type="bibr">Munro [18]</ref> and Fischer and Meyer [6] but "mod n n'' arithmetic is n. log n bit arithmetic and costs depth log n. Instead following another suggestion by S. Cook, we can simulate the arithmetic modpi (1 &lt;-i &lt;= m) where {pi,..., p,,} are the first m primes and l-f" P &gt;-n n. Since by the prime number theorem the number of primes less than x is asymptotically equal to x/log x, this can certainly be done with p,, &lt;-cn log 2 n.</p><p>(In the case of rational constants q r/s, we must make sure that s -1 mod Pi exists; that is, we choose our {pg} so that no such s is equal to 0 mod p. Since we are only considering circuits with L (n) &lt;= log 2 n, the size of the circuit is &lt;-n g" and so we need only avoid at most n g" "bad primes".) The depth cost of the modp arithmetic results in a log log n factor. We do not need to reconstruct any ffj since di =0 iff d0 modp =0 for all p. Thus a transitive closure circuit of depth L (n). log log n can be constructed (by a deterministic L (n) tape TM). Corollary 2 completes the proof. Some discussion on Corollary 5 is appropriate. The restriction that C, be uniformly generated is certainly necessary (see also Corollary 2). Our viewpoint, however, is that the discovery of a depth efficient method for A" would be sufficiently constructive to yield the uniformity hypothesis. The restriction that + is not allowed in Corollary 5; is both annoying and possibly unnecessary. It is annoying because division is obviously necessary for A-1 and thus any method for A" which is derived from A -1 would use division. The problem with / is that during the computation we might be dividing by a very large y for which y---0 mod (pg) for all small primes pi. For the computation of a polynomial of degree n, one can use the method of <ref type="bibr">Strassen [27]</ref> to eliminate /, but this results in an O(log n) factor in the depth bound. It is not known whether this factor can be improved. Yet in spite of all our restrictions, one has "the feeling" that an O (log n) depth method for any of the problems det A, A-l, A would lead to a positive solution to the LBA problem (i.e. NSPACE (n)= DSPACE (n)? See Hartmanis and Hunt <ref type="bibr" target="#b7">[8]</ref>). The present consensus is that this is very unlikely; that is, NSPACE (S(n )) DSPACE (S(n )) for constructible S(n), and indeed any improvement to Savitch's NSPACE (S(n))_ DSPACE (S(n)2) would be a sig- nificant result for "traditional computational complexity".</p><p>Looking at Sch6nhage's observation on how to use A-1 to compute A", one sees that a depth efficient circuit for A can be composed of a c log n depth transformation (yl,'", Ym)=f((xl, X,)) followed by a circuit for A -1. In other words, we can define a reducibility for arithmetic circuits (as we could for Boolean circuits but here m should only depend on n) in analogy to the log space TM reducibility. Motivated by Corollary 1, and Paterson and Valiant <ref type="bibr" target="#b18">[19]</ref>, we are led to ask the following questions.</p><p>Open Problem 3. Is there a "natural" class of polynomial or rational functions which are depth complete for polynomial size arithmetic circuits? Can every rational function computable in size T(n) be computed in depth T(n)/log T(n)? (Note: we are still only considering rational functions f(xl,''' ,x,)of degree-&lt; n.) Is depth logT(n) possible?</p><p>In general, one cannot expect that positive results for Boolean computations always have arithmetic analogues. For example, Pippenger <ref type="bibr" target="#b19">[20]</ref> shows that every Boolean symmetric function on n variables has formula size _-&lt; n :'6 (and hence depth -&lt; c. log n) whereas the elementary symmetric function Y'.&lt;__&lt;...&lt;=,xx...x,/ appears to need O(logZn) depth. Moreover, even positive results for arithmetic computations may not always have Boolean analogues. For example, we can simulate a Boolean circuit by an arithmetic circuit; i.e. x v y is simulated byx +y-x xy, -x by 1-x. But even if, every size T(n) arithmetic circuit (computing functions of degree _-&lt; n) was transformable into an equivalent depth log T(n) circuit, a corresponding result would not necessarily hold for Boolean circuits. Suppose we try the following:</p><p>Given Boolean circuit C, first convert to the arithmetic circuit C which "simu- lates" C, then transform to an equivalent C and finally obtain a depth efficient Boolean circuit C4 by simulating C3 with mod 2 arithmetic. The problem is that circuit C2 (which is only "equivalent" to circuit Ca for {0, 1} valued inputs) may be computing arithmetic functions whose degrees can be exponential in the size of C2, and hence exponential in n. What is missing is the concept of the degree of a Boolean function. In any case, we consider it a major open problem to exhibit a "polynomial size" function, Boolean or arithmetic, which is provably not computable in O(log n) depth.</p><p>. Conclusion. The main results of this paper establish a relation between TM space and circuit depth. This can be interpreted as another piece of evidence (see Pratt and Stockmeyer <ref type="bibr" target="#b21">[22]</ref>, Hartmanis and Simon <ref type="bibr" target="#b8">[9]</ref> and more recently Chandra and Stockmeyer <ref type="bibr" target="#b1">[2]</ref>, Kozen [13], and Tourlakis <ref type="bibr" target="#b28">[28]</ref>), that parallel time and space are roughly equivalent within a polynomial factor. The simplicity of the circuit model focuses our attention on the importance of the transitive closure problem. As a result, we have been able to unify a number of open problems in computational complexity. We also claim that questions in "traditional" compu- tational complexity have relevance .to arithmetic complexity and conversely. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2</head><label>2</label><figDesc>Fig. 2.)Following standard notation, let P be the class of languages recognizable in deterministic polynomial time. B is called log space complete for P if (i) B is in P, (ii) A in P implies A -&lt; log B.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>FIG.2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>COROLLARY 4 .</head><label>4</label><figDesc>Suppose SIZE (n)_c_ DEPTH (S(n)) uniformly. Then DTIME (T(n))_ DSPACE (S[T(n). log T(n)])for all constructible T(n).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>1.)    </figDesc><table><row><cell>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php</cell><cell>TRUE X1N Transitive Closure Circuit X* FIG.</cell><cell>XNN</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php Open Problem 2.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php ON RELATING TIME AND SPACE TO SIZE AND DEPTH</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>SIZE(T(n)) {BISIZEB(n &lt;-c. T(n) for some constant c} and DEPTH(S(n)) Downloaded 12/25/12 to 128.148.252.35. Redistribution subject to SIAM license or copyright; see http://www.siam.org/journals/ojsa.php</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. The author is greatly indebted to S. Cook for a number of important suggestions, and to A. Meyer, L. Stockmeyer and the referees for their helpful comments.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This research was supported by the National Research Council of Canada. 733</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The Computational Complexity of Algebraic and Numeric Problems</title>
		<author>
			<persName><forename type="first">A</forename><surname>Borodin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Munro</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<publisher>American Elsevier</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stockmeyer</surname></persName>
		</author>
		<title level="m">Alternation, Proc. of Seventeenth Annual Symp. on Foundations of Computer Science</title>
		<meeting><address><addrLine>Houston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1976-10">Oct. 1976</date>
			<biblScope unit="page" from="98" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An observation on time-storage tradeoff</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Fifth Annual ACM Symp. on Theory of Computing</title>
		<meeting>of the Fifth Annual ACM Symp. on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1973-05">May 1973</date>
			<biblScope unit="page" from="29" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Storage requirements ]:or deterministic polynomial time recognizable languages</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sethi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Sixth Annual ACM Syrup. on Theory of Computing</title>
		<meeting>of Sixth Annual ACM Syrup. on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1974-05">May 1974</date>
			<biblScope unit="page" from="33" to="39" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><surname>Csanky</surname></persName>
		</author>
		<title level="m">Fast Parallel Matrix Inversion Algorithms, Proc. of Sixteenth Annual Symp. on Foundations of Computer Science</title>
		<imprint>
			<date type="published" when="1975-10">Oct. 1975</date>
			<biblScope unit="page" from="11" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Boolean matrix multiplication and transitive closure</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Twelfth Annual IEEE Symp. on Switching and Automata Theory</title>
		<meeting>Twelfth Annual IEEE Symp. on Switching and Automata Theory</meeting>
		<imprint>
			<date type="published" when="1971-10">Oct. 1971</date>
			<biblScope unit="page" from="129" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pippenger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Fischer</surname></persName>
		</author>
		<title level="m">Lectures on Network Complexity, Universit/it Frankfurt</title>
		<imprint>
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
	<note type="report_type">preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Hartmanis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Hunt</surname></persName>
		</author>
		<title level="m">The LBA Problem and its Importance in the Theory of Computing, SIAM-AMS Proc</title>
		<meeting><address><addrLine>Providence, RI</addrLine></address></meeting>
		<imprint>
			<publisher>American Mathematical Society</publisher>
			<date type="published" when="1974">1974</date>
			<biblScope unit="volume">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On the power of multiplication in random access machines</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hartmanis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Simon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Fifteenth Annual Symp. on Switching and Automata Theory</title>
		<meeting>of Fifteenth Annual Symp. on Switching and Automata Theory</meeting>
		<imprint>
			<date type="published" when="1974-10">Oct. 1974</date>
			<biblScope unit="page" from="13" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On time versus space and related problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Paul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Valiant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Sixteenth Annual Symp. on Foundation of Computer Science</title>
		<meeting>of Sixteenth Annual Symp. on Foundation of Computer Science</meeting>
		<imprint>
			<date type="published" when="1975-10">Oct. 1975</date>
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Formal Languages and their Relation to Automata</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ullman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969">1969</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Complete problems for deterministic polynomial time</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Laaser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Sixth Annual ACM Symp. on Theory of Computing</title>
		<meeting>Sixth Annual ACM Symp. on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1974-05">May 1974</date>
			<biblScope unit="page" from="40" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">On parallelism in Turing machines</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kozen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Seventeenth Annual Symp. on Foundation of Computer Science</title>
		<meeting>of Seventeenth Annual Symp. on Foundation of Computer Science<address><addrLine>Houston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1976-10">Oct. 1976</date>
			<biblScope unit="page" from="89" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Some complexity bounds for parallel computation</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Sixth Annual ACM Symp. on Theory of Computing</title>
		<meeting>of Sixth Annual ACM Symp. on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1974-05">May 1974</date>
			<biblScope unit="page" from="323" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Lynch</surname></persName>
		</author>
		<title level="m">Log Space Recognitton and Translation of Parenthesis Languages</title>
		<imprint/>
	</monogr>
	<note type="report_type">preprint</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Meyer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
	<note>Personal communication</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stockmeyer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
		</imprint>
	</monogr>
	<note>Personal communication</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Efficient determination of the transitive closure of a graph</title>
		<author>
			<persName><forename type="first">I</forename><surname>Munro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Lett</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Circuit size is nonlinear in depth</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Paterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">G</forename><surname>Valiant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Univ. of Warwick Theory of Computation Rep</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<date type="published" when="1975-09">Sept. 1975</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Short formulae for symmetric functions</title>
		<author>
			<persName><forename type="first">N</forename><surname>Pippenger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Res. Rep. RC</title>
		<imprint>
			<biblScope unit="volume">5143</biblScope>
			<date type="published" when="1974">1974</date>
			<pubPlace>Yorktown Heights, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The Complexity of Monotone Boolean Functions</title>
	</analytic>
	<monogr>
		<title level="m">Math Systems Theory</title>
		<imprint/>
	</monogr>
	<note>submitted</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A characterization ofthe power ofvector machines</title>
		<author>
			<persName><forename type="first">V</forename><surname>Pratt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Stockmeyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. System Sci</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="198" to="221" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Computational work and time on finite machines</title>
		<author>
			<persName><forename type="first">J</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="660" to="674" />
			<date type="published" when="1972">1972</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Relationships between nondeterministic and deterministic tape complexities</title>
		<author>
			<persName><forename type="first">W</forename><surname>Savitch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. System Sci</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="177" to="192" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The network complexity and the Turing machine complexity offinite functions</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">P</forename><surname>Schnorr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Informat</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="95" to="107" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">On time hardware complexity tradeoffs for Boolean functions</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">M</forename><surname>Spira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fourth Hawaii International Symp. on Systems Science</title>
		<imprint>
			<biblScope unit="page" from="525" to="527" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Redistribution subject to SIAM license or copyright</title>
		<idno>Downloaded 12/25/12 to 128.148</idno>
		<ptr target="http://www.siam.org/journals/ojsa.php" />
		<imprint>
			<biblScope unit="volume">252</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">V</forename><surname>Strassen</surname></persName>
		</author>
		<author>
			<persName><surname>Vermeidung Yon Divisionen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Reine Angew. Math</title>
		<imprint>
			<biblScope unit="volume">264</biblScope>
			<biblScope unit="page" from="184" to="202" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A universal parallel machine and the efficient simulation of storage bounded sequential computations</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tourlakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dept. of Computer Science and Mathematics Tech. Rep</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<date type="published" when="1976-12">Dec. 1976</date>
			<pubPlace>Toronto, Canada</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Atkinson College, York.University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">The circuit value problem in Logspace complete for</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ladner ; P</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sigact</forename><surname>News</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1975">1975</date>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="18" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The parallel evaluation ofseveral arithmetic expressions</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Brent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Assoc. Comput. Mach</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="201" to="206" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
