<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Reliability-Constrained Area Optimization of VLSI Power/Ground Networks Via Sequence of Linear Programmings</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Xiang-Dong</forename><surname>Tan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering ‡ Avant! Corporation</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<postCode>46871, 98195, 94538</postCode>
									<settlement>Bayside Parkway, Seattle, Fremont</settlement>
									<region>WA, CA</region>
									<country>USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">C.-J</forename><forename type="middle">Richard</forename><surname>Shi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering ‡ Avant! Corporation</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<postCode>46871, 98195, 94538</postCode>
									<settlement>Bayside Parkway, Seattle, Fremont</settlement>
									<region>WA, CA</region>
									<country>USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dragos</forename><surname>Lungeanu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering ‡ Avant! Corporation</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<postCode>46871, 98195, 94538</postCode>
									<settlement>Bayside Parkway, Seattle, Fremont</settlement>
									<region>WA, CA</region>
									<country>USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jyh-Chwen</forename><surname>Lee</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering ‡ Avant! Corporation</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<postCode>46871, 98195, 94538</postCode>
									<settlement>Bayside Parkway, Seattle, Fremont</settlement>
									<region>WA, CA</region>
									<country>USA, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Li-Pen</forename><surname>Yuan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering ‡ Avant! Corporation</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<postCode>46871, 98195, 94538</postCode>
									<settlement>Bayside Parkway, Seattle, Fremont</settlement>
									<region>WA, CA</region>
									<country>USA, USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Reliability-Constrained Area Optimization of VLSI Power/Ground Networks Via Sequence of Linear Programmings</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F6B199C8E092AEB776F9BAEC2A2BF518</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:14+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents a new method for determining the widths of the power and ground routes in integrated circuits so that the area required by the routes is minimized subject to the reliability constraints. The basic idea is to transform the resulting constrained nonlinear programming problem into a sequence of linear programs. Theoretically, we show that the sequence of linear programs always converges to the optimum solution of the relaxed convex problem. Experimental results demonstrate that the sequence-of-linear-programming method is orders of magnitude faster than the best-known method based on conjugate gradients, with constantly better optimization solutions.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Power/Ground (p/g) networks connect the power/ground supplies within the circuit modules to the p/g pads on a chip. An important problem in p/g network design is to use the minimum amount of chip area for wiring power/ground networks while avoiding potential reliability failures due to electromigration and excessive IR drops. Of particular interest is the problem of p/g network optimization where the topologies of p/g networks are assumed to be fixed, and only the widths of wire segments are to be determined. Several methods have been developed to solve this problem <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref>. However, to the best of our knowledge, none of these methods have been incorporated into commercial CAD tools and used by industry.</p><p>One major obstacle is that these methods are based on constrained nonlinear programming, a process known to be computationally intensive (NP-hard <ref type="bibr" target="#b9">[10]</ref>). These methods are applicable only to small size problems, while p/g networks in today's VLSI design may contain millions of wire segments (thus, variables). On the other hand, with the con-tinuous shrinking of chip feature size, p/g network optimization is becoming increasingly important, since more and more portions of chip area are dedicated to power/ground routings, and the problem of IR drops and electro-migration deteriorates.</p><p>In this paper, we present a new method that can efficiently solve the power/ground optimization problem subject to reliability constraints. Our method is inspired by a key observation made by Chowdhury that if currents in wire segments are fixed, and voltages are used as variables, then the resulting optimization problem is convex <ref type="bibr" target="#b5">[6]</ref>. However, instead of using the conjugate-gradient method as in <ref type="bibr" target="#b5">[6]</ref>, we show that the problem can be solved elegantly by a sequence of linear programs. We prove that there always exists a sequence of linear programs that converges to the optimal solution of the original convex optimization problem. Experimental results have demonstrated that usually a few linear programs are required to reach the optimal solution. With this, the complexity of the proposed method is proportional to the complexity of linear programming (which can be solved in polynomial time <ref type="bibr" target="#b9">[10]</ref>). Therefore, our method is scalable, i.e., the CPU time increases approximately polynomially with the size of a network. In practice, we have observed that the new method is orders of magnitude faster than the conjugate gradient based method, with constantly better optimization results.</p><p>This paper is organized as follows. Section 2 presents some previous work. Section 3 describes the formulation of the p/g network optimization problem. The new method is presented in Section 4. Some practical considerations are described in Section 5. Experimental results from some large p/g networks are summarized in Section 6. Section 7 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous Work</head><p>It is generally assumed that the average current drawn by the each module is known and is modeled as an independent current source (we do not consider the temporal correlations of current sources). The constraints from reliability and design rules include:</p><p>1. voltage IR drop constraints, 2. metal-migration constraints, 3. minimum width constraints.</p><p>The problem of determining the widths of wire segments of a P/G network to minimize the total p/g routing area subject to all these constraints is a constrained nonlinear optimization problem <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref>.</p><p>In the method of Chowdhury and Breuer <ref type="bibr" target="#b3">[4]</ref>, resistance values and branch currents are selected as independent variables. Both the objective function and voltage IR drop constraints become nonlinear. The augmented Lagrangian method combined with steepest descent algorithm <ref type="bibr" target="#b2">[3]</ref> is used to solve the resulting problem.</p><p>Dutta and Marek-Sadowska <ref type="bibr" target="#b6">[7]</ref> used only resistance values as variables. All the constraints expressed in terms of nodal (terminal) voltages and branch currents, which have to be obtained by explicitly solving the electrical network, become nonlinear. The feasible direction method <ref type="bibr" target="#b1">[2]</ref> is employed to solve the nonlinear problem. At each iteration step, extra effort is required to solve the electrical network for nodal voltages and branch currents, as well as their gradients by numerical differentiation.</p><p>Chowdhury <ref type="bibr" target="#b5">[6]</ref> proposed a very interesting approach where both the nodal voltages and the branch currents are selected as variables. The optimization problem is solved iteratively in two stages. In the first stage, all the branch currents are fixed, and this leads to a convex programming problem solved by the conjugate gradient method <ref type="bibr" target="#b2">[3]</ref>. In the second stage, all the nodal voltages are assumed fixed, and this gives rise to a linear programming problem. In comparison with other methods, this method is more general and more efficient. Unfortunately, the conjugate gradient method is not efficient enough to solve large size power/ground optimization problems arising in today's VLSI design.</p><p>A method proposed by Mitsuhashi and Kuh <ref type="bibr" target="#b8">[9]</ref> further extends power/ground network optimization to include topology selection. In this paper, we assume that the topology is fixed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Problem Formulation and General Optimization Procedure</head><p>Our work follows the formulation and the general optimization procedure of Chowdhury <ref type="bibr" target="#b5">[6]</ref>. His results are reviewed briefly in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Problem Formulation</head><p>Let G = fN;Bg be a p/g network with n nodes N = f1;:::;ng and b branches B = f1;:::;bg. Each branch i in B connects two nodes: i1 and i2 such that the positive current flows from i1 to i2. Let l i and w i be the length and width of branch i. Let ρ be the sheet resistivity. Then the resistance r i of branch i can be expressed as:</p><formula xml:id="formula_0">r i = V i1 ?V i2 I i = ρ l i w i :<label>(1)</label></formula><p>The total p/g routing area, which is the objective function to be minimized, can be expressed as</p><formula xml:id="formula_1">f (V; I) = ∑ i2B l i w i = ∑ i2B ρI i l 2 i V i1 ?V i2 : (2)</formula><p>Instead of using widths w i , i 2 B, as variables, we choose to solve branch current I i and nodal voltage V i1 and V i2 . The constraints needed to satisfy are as follows.</p><p>1. The voltage IR drop constraints. To ensure the correct and reliable logic operation, the nodes connected to a p/g pad should have the voltage values close to the value of the pad:</p><p>V j V j;min if j is connected to a power pad.</p><formula xml:id="formula_2">V j V j;max if j is connected to a ground pad. (<label>3</label></formula><formula xml:id="formula_3">)</formula><p>where V j;min and V j;max are given constants.</p><p>2. The minimum width constraints. The widths of the p/g segments are technologically limited to the minimum width allowed in the layer where the segment lies. Thus, we have</p><formula xml:id="formula_4">w i = ρ l i I i V i1 ?V i2 w i;min ;<label>(4)</label></formula><p>where w i;min are given constants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The current density constraints (electro-migration).</head><p>Electro-migration on a p/g wire sets an upper bound on the current density of the p/g segment <ref type="bibr" target="#b0">[1]</ref>. For a fixed thickness σ of a layer, this constraint for branch i can be expressed as:</p><formula xml:id="formula_5">jI i j w i σ:<label>(5)</label></formula><p>It can be re-written as the following nodal voltage constraint:</p><formula xml:id="formula_6">jV i1 ?V i2 j ρl i σ:<label>(6)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Kirchoff's current law (KCL).</head><p>∑ i2B( j)</p><formula xml:id="formula_7">s i I i = 0;<label>(7)</label></formula><p>for each node j = f1;:::;ng and B( j) is the set of indices of branches connected to node j and s i is 1 if current direction for branch i is toward node j and -1 otherwise.</p><p>P/g network optimization is to minimize (2) subject to constraints (3), ( <ref type="formula" target="#formula_4">4</ref>), ( <ref type="formula" target="#formula_6">6</ref>) and ( <ref type="formula" target="#formula_7">7</ref>). It will be referred to as Problem P. Problem P is a constrained nonlinear optimization problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">General Optimization Procedure</head><p>To reduce the complexity of solving Problem P, Chowdhury proposed a relaxed optimization procedure:</p><p>Start with an initial feasible solution of P.</p><p>Assume that all branch currents are fixed. Then the objective function can be rewritten as</p><formula xml:id="formula_8">f (V) = ∑ i2B α i V i1 ?V i2 ;<label>(8)</label></formula><p>where α i = ρI i l 2 i , We further restrict the changes of nodal voltages such that their current directions do not change during the optimization process. i.e.,</p><formula xml:id="formula_9">V i1 ?V i2 I i 0:<label>(9)</label></formula><p>With this, the minimum width constraints (4) can be re-written as</p><formula xml:id="formula_10">V i1 ?V i2 I i ρl i w i;min :<label>(10)</label></formula><p>This leads to a simplified optimization problem: find all nodal voltages to minimize (8) subject to constraints (3), ( <ref type="formula" target="#formula_6">6</ref>), <ref type="bibr" target="#b8">(9)</ref>, and <ref type="bibr" target="#b9">(10)</ref>. Let us denote it as problem P1.</p><p>Assume that all nodal voltages are fixed. Then the objective function can be re-written as:</p><formula xml:id="formula_11">f (I) = ∑ i2B β i I i ;<label>(11)</label></formula><p>where</p><formula xml:id="formula_12">β i = ρl 2 i V i1 ?V i2 .</formula><p>Similarly, we restrict the changes of current directions during the optimization process. i.e.,</p><formula xml:id="formula_13">I i V i1 ?V i2 0:<label>(12)</label></formula><p>Then problem P reduces to the following problem: find all the branch currents to minimize (11) subject to (4), ( <ref type="formula" target="#formula_7">7</ref>) and ( <ref type="formula" target="#formula_13">12</ref>). Let us denote this problem as P2.</p><p>Chowdhury showed that problem P1 can be converted to an un-constrained convex programming problem and solved by the conjugate gradient method. P2 is a linear programming problem. Therefore, solving P is to start with an initial feasible solution, then iteratively solve P1, then P2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">New Linear-Programming Based Algorithm</head><p>The new method uses a sequence of linear programmings to solve the nonlinear programming problem P1. In this section, we present the new method and prove that it always converge to the optimum solution of the relaxed problem P1.</p><p>The basic idea is to linearize the nonlinear objective function <ref type="bibr" target="#b7">(8)</ref>. To see this, we further define branch voltage drop variable as v i = sign(I i )(V i1 ?V i2 ) for each branch i, where sign(x) = 1 if x &gt; 0 and sign(x) = ?1 if x &lt; 0. Note that v i 0. Then in terms of v i ; i = 1; :::; b, the objective function (8) can be expressed as</p><formula xml:id="formula_14">f (v) = ∑ i2B jα i j v i ; (<label>13</label></formula><formula xml:id="formula_15">)</formula><p>where v = fv 1 ; v 2 ; :::; v b g T . Suppose that we have an initial feasible solution V 0 and corresponding v 0 satisfying all the constraints. We then take the Taylor's expansion of f (v) around v 0 and keep only the constant and linear terms. The resulted objective function is called g(v),</p><formula xml:id="formula_16">g(v) = f (v 0 ) + ∂ f (v 0 ) ∂v (v ?v 0 ) = ∑ i2B 2jα i j v 0 i ? ∑ i2B jα i j v 0 i 2 v i :<label>(14)</label></formula><p>Instead of minimizing f (v), we minimize the g(v) as long as these two functions satisfy the following property:</p><formula xml:id="formula_17">g(X) &gt; g(Y ) =) f (X ) &gt; f (Y );<label>(15)</label></formula><p>where =) means imply. This requirement essentially says that as long as we reduce g(X) we always can reduce f (X ).</p><p>To ease our analysis, we first take a look at each individual product term in the objective function ( <ref type="formula" target="#formula_14">13</ref>), which has the following form h(x) = c=x; x &gt; 0, where c is a constant and also c &gt; 0. Fig. <ref type="figure">1</ref> draws the function h(x) = c=x with c = 1 and its linearized first-order Taylor's expansion function H(x) at expansion point x 0 = 0:04. We note that both 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 -50 0 50 100 x 1/x and its first order Taylor's expansion at 0.04</p><formula xml:id="formula_18">H(x) = 1/x0 -1/(x0^2)*(x-x0) h(x) = 1/x Figure 1: h(x) = 1/</formula><p>x and its first-order expansion at 0.04. h(x) and H(x) are monotonical decreasing functions in x in the range (0; ∞) with the property that h(x) &gt; H(x).</p><p>Back to f (v) and g(v), we have the following two optimization scenarios:</p><p>1. If all the branch voltage drops v i increase after the optimization, we have</p><formula xml:id="formula_19">f (v 0 ) &gt; f (v) and g(v 0 ) &gt; g(v).</formula><p>Because all the product terms in both f (v 0 ) and g(v 0 ) monotonically decrease as each v i increases, the property (15) is always satisfied.</p><p>2. If only some branch voltage drops increase and others decrease or stay unchanged, then the property (15) may not be satisfied due to the fact that for x &lt; x 0 , h(x) will increase very quickly, while H(x) only increase linearly. As a result, we may end up with</p><formula xml:id="formula_20">f (v) &gt; f (v 0 ) while g(v) &lt; g(v 0 ).</formula><p>In this case, we can limit the solution space to the neighborhood of v 0 such that the relation property (15) holds by imposing the following constraint for each branch i:</p><formula xml:id="formula_21">ξv 0 i v i (2 ?ξ)v 0 i ; (<label>16</label></formula><formula xml:id="formula_22">)</formula><p>where ξ is called the restriction factor, 0 &lt; ξ &lt; 1. Note that we can always achieve the relation (15) by choosing v to be close enough to the v 0 (ξ is close enough to 1) as g(v) is essentially the first-order approximation of f (v). On the other hand, any increase in any branch voltage drop v i ; i 2 f1;:::;bg always decreases both f (v) and g(v). This implies that the upper bound in ( <ref type="formula" target="#formula_21">16</ref>) is not necessary and we can combine the solution space, where relation (15) holds in both two scenarios, into a single space:</p><formula xml:id="formula_23">ξv 0 i v i :<label>(17)</label></formula><p>Back to the nodal voltages, the linearized objective function and the restriction constrain can be rewritten as:</p><formula xml:id="formula_24">g(V) = ∑ i2B 2α i (V 0 i1 ?V 0 i2 ) ? ∑ i2B α i (V 0 i1 ?V 0 i2 ) 2 (V i1 ?V i2 ); (18) ξsign(I i )(V 0 i1 ?V 0 i2 ) sign(I i )(V i1 ?V i2 ): (19)</formula><p>Note that the constraint (19) does not require the nodal voltage V ix ; i 2 f1;:::;ng, to be close to their initial values since only the relative differences among them matter. Because the constraint (19) already implies the constraint (9), only (19) remains in the optimization of solving for nodal voltages. Therefore, we have the following optimization problem, denoted as P3: minimize (18) subject to (3), ( <ref type="formula" target="#formula_6">6</ref>), <ref type="bibr" target="#b9">(10)</ref>, and (19). Problem P3 is a linear programming problem. For convenience, we use Γ to denote the feasible solution space of problem P3 defined by ( <ref type="formula" target="#formula_2">3</ref>), ( <ref type="formula" target="#formula_6">6</ref>), <ref type="bibr" target="#b9">(10)</ref>, and (19). We use Ω to denote the feasible solution space of problem P1 as defined by constraints ( <ref type="formula" target="#formula_2">3</ref>), ( <ref type="formula" target="#formula_6">6</ref>), <ref type="bibr" target="#b9">(10)</ref>, and <ref type="bibr" target="#b8">(9)</ref>. Clearly Γ Ω.</p><p>The procedure for solving problem P2, i.e., solving for nodal voltages, can be transformed to the problem of choosing ξ and solving P3, and then repeating this process until the optimum solution is found. This process is illustrated in Fig. <ref type="figure">2</ref>. Now we are ready to summarize the entire optimization procedure as follows:</p><p>New Power/Ground Optimization Algorithm 2. Construct the minimum width constraints <ref type="bibr" target="#b9">(10)</ref>, current density constraints ( <ref type="formula" target="#formula_6">6</ref>) and additional constraints (19) using I k .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Minimize g(V k</head><p>) subject to constraints (3), ( <ref type="formula" target="#formula_6">6</ref>), ( <ref type="formula" target="#formula_10">10</ref>) and ( <ref type="formula">19</ref>) by linear programming, record the result as V k l , where l begins from 1. If</p><formula xml:id="formula_25">f (V k l ) f (V k l?1 )</formula><p>, increase ξ and repeat substep l. Construct the constraint <ref type="bibr">(19)</ref> with the result V k l and repeat step 3 until no improvement can be found and record the result from the last iteration l in step 3 as V k+1 .</p><p>4. Construct the minimum width and its companion constraint ( <ref type="formula" target="#formula_4">4</ref>) and ( <ref type="formula" target="#formula_13">12</ref>) using V k+1 for each branch.</p><p>5. Minimize the objective function (11) subject to the constraints ( <ref type="formula" target="#formula_4">4</ref>), ( <ref type="formula" target="#formula_13">12</ref>) and ( <ref type="formula" target="#formula_7">7</ref>) by linear programming and record the result as I k+1 .</p><p>6. If jf(V k+1 ; I k+1 ) ? f (V k ; I k )j &lt; ε, ε is the termination criterion, then stop, otherwise k = k + 1 and goto step 2.</p><p>Since f (V) is a convex function <ref type="bibr" target="#b5">[6]</ref> under the fixed branch currents, any local minimum of f (V) is also the global minimum. We have the following proposition: Proposition 1 There exists a ξ so that step 3 always converges to the global minimum in Ω.</p><formula xml:id="formula_26">Proof Sketch: For function f (X ) = ∑ N i=1 1 x i , the truncated lin- ear Taylor expansion around X 0 is g(X) = ∑ N i=1 (<label>1</label></formula><formula xml:id="formula_27">x 0i ? x i ?x 0i x 2 0i</formula><p>).</p><p>We have a mathematical proof that for each X 0 , there is a non-empty vicinity Γ of X 0 (by setting ξ close to 1) such that</p><formula xml:id="formula_28">for each X 2 Γ if g(X) &lt; g(X 0 ) then f (X ) &lt; f (X 0 ).</formula><p>In other words, given an initial point X 0 = V k l , one can always find a non-empty vicinity of X 0 , by increasing ξ close enough to 1, such that minimizing the linear expansion g at V k l+1 , also decreases the original function f .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>So a decreasing sequence fV k</head><p>We note that a similar technique, called successive linear programming (SLP) <ref type="bibr" target="#b2">[3]</ref>, was first proposed by Griffith and Stewart to solve problems in oil and chemical industries <ref type="bibr" target="#b7">[8]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Practical Considerations and Algorithmic Remarks</head><p>In this section, we describe some practical considerations on how to apply the proposed method to optimize power/ground networks in practice.</p><p>Selection of restriction factor ξ. An important issue is how to select the restriction factor ξ. In general, as long as property (15) holds, Γ should be as large as possible in order to reduce the number of required iterations. In our implementation, we always begin with small ξ to maximize Γ. If property (15) is not satisfied, then we increase ξ such that property (15) can be satisfied again.</p><p>Algorithm Scalability. In practice, the number of linear programmings needed to reach the optimum solution is only a few. Thus the time complexity of our method is proportional to the complexity of linear programming. It is known that linear programs can be solved in polynomial time using the interior point method <ref type="bibr" target="#b2">[3]</ref>. This makes our method very promising for optimizing very large VLSI p/g networks.</p><p>Input Data Scaling. For practical P/G networks, the module currents are usually in the range of 1 10 ?9 A. Branch currents and branch voltages could become very small if no scaling is used. This would give rise to some numerical problems for the linear programming solver. In our implementation, scaling is used.</p><p>Converting power networks to ground networks. Power networks should be transferred into ground networks to further improve the numerical stability. This is due to the fact that the voltage drop close to zero can be represented more precisely than the voltage drop close to other constant value.</p><p>For example, the voltage drop 2:5 10 ?5 has to be repre- sented by 4:999975 if the source voltage is 5 volt. It can be proven that a power network can be transferred into a ground network by using the following rules:</p><p>1. short-circuit all the VDD pads to the ground. 2. inverse the directions of all the independent current sources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Experimental Results</head><p>A CAD tool for p/g network optimization has been developed based on the proposed sequence-of-linear-programming method. For comparison, Chowdhury's conjugate gradient method <ref type="bibr" target="#b5">[6]</ref> has been carefully implemented 1 . A set of p/g networks with ten to more than ten thousand segments has been tested. All experiments are performed on a SUN Ultra I workstation with 169MHz clock rate. The results are summarized in Table <ref type="table" target="#tab_0">1</ref>. 1 In fact, our research was motivated by initial attempt to implement the conjugate gradient method for power/ground network optimization in an industry setting.</p><p>In Table <ref type="table" target="#tab_0">1</ref>, columns 1 to 3 list, respectively, the circuit name (ckt), the number of nodes in the circuit (# node) and the number of branches (# bch). The number of iterations (# iter) (solving P1-P2) , CPU time in seconds (time), and the reduced chip area of the original area in percentage (area reduced (%)) are reported in columns 4, 5 and 6 for the new algorithm and columns 7, 8 and 9 for the conjugate gradient method. For example, for p/g network p4x4, the new method reduces the chip area used by 95.1%, while the conjugate gradient method reduces the chip area used by 94.2%.</p><p>We have the following observations:</p><p>For large p/g network optimization p3x500, g300x10, p100x100, the conjugate gradient method finds solutions that use much more chip areas than that of the new method. This is due to the numerical problem inherent in the conjugate gradient method. During the course of optimization, the conjugate directions may deteriorate such that the algorithm gets stuck at a place far away from the optimum solution. In our implementation, we reinitialize the direction vector after n steps, where n is the number of nodes in the p/g network. Due to the large value of n for large p/g networks, the conjugate directions may deteriorate more, and thus prevents the algorithm from reaching the optimum. However, if we reinitialize the directions more frequently, the quality of the solution can be improved at the expense of more CPU time.</p><p>The new algorithm is orders of magnitude faster than the conjugate gradient method.</p><p>We have observed that for all the p/g networks tested, with one iteration, the new algorithm is able to reduce the most of the silicon cost that can be reduced, i.e., finds a solution that is very close to the optimum. Fig. <ref type="figure" target="#fig_2">3</ref> shows how the objective function (overall silicon cost) reduces with the number of iterations for an example network.   In the experiments above, restriction factor ξ is set to 0:85. Recall that the feasible region Γ for linear program P3 is controlled by ξ. The closer ξ to 1, the smaller the region Γ, and the better g(V) approximates f (V). That implies, the total number of linear programmings (solving P3) required for solving P1 will increase, but the chance to find the minimum solution of the original problem increases. On the other hand, if we reduce ξ more close to 0, the feasible solution region Γ of the linear problem P3 enlarges. Then the linearized function g(V) may not be able to approximate well the original function f (V). As a consequence, the sequence of linear programs may converge to a solution with the cost higher than the optimum one. This observation has been confirmed by the experiment on the example circuit p4x4 as shown in Fig. <ref type="figure" target="#fig_4">4</ref> and<ref type="figure" target="#fig_6">5</ref>.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>A new method is proposed for determining the widths of the wire segments in a power/ground network so that the chip area required by the power/ground network is minimized while ensuring voltage IR drops and electromigration constraints. We have shown, theoretically, that the new method is capable of finding a solution as good as that by the bestknown method. Experimental results have demonstrated that the proposed method is orders of magnitude faster than the best-known method with constantly better solution quality.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>1 .Figure 2 :</head><label>12</label><figDesc>Figure 2: An illustration of sequence of linear programmings.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>)/f_min(x) scaled cost vs #iterations for new algorithm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The cost reduction with the number of iterations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The number of linear programmings versus ξ (xi).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: The final cost versus ξ (xi).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Comparison of the new algorithm against the conjugate gradient method.</figDesc><table><row><cell>ckt</cell><cell># node</cell><cell># bch</cell><cell></cell><cell cols="2">new algorithm</cell><cell></cell><cell cols="2">conjugate method</cell><cell>Speedup</cell></row><row><cell></cell><cell></cell><cell></cell><cell># iter</cell><cell>time</cell><cell cols="2">area reduced(%) # iter</cell><cell>time</cell><cell>area reduced(%)</cell><cell></cell></row><row><cell>p4x4</cell><cell>17</cell><cell>23</cell><cell>4</cell><cell>0.43</cell><cell>95.1</cell><cell>21</cell><cell>78.7</cell><cell>94.2</cell><cell>183.0</cell></row><row><cell>g20x20</cell><cell>402</cell><cell>439</cell><cell>3</cell><cell>12.6</cell><cell>91.8</cell><cell>255</cell><cell>36147.1</cell><cell>90.8</cell><cell>2868.8</cell></row><row><cell>p3x500</cell><cell>1502</cell><cell>1505</cell><cell>2</cell><cell>37.6</cell><cell>47.8</cell><cell>67</cell><cell>2135.4</cell><cell>26.8</cell><cell>&gt;56.8</cell></row><row><cell>g300x10</cell><cell>3002</cell><cell>3599</cell><cell>2</cell><cell>609.9</cell><cell>93.7</cell><cell>137</cell><cell>15192.1</cell><cell>78.4</cell><cell>&gt;25.0</cell></row><row><cell cols="3">p100x100 10002 10199</cell><cell>4</cell><cell>1325.6</cell><cell>80.7</cell><cell>117</cell><cell>41716.8</cell><cell>48.9</cell><cell>&gt;31.5</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>; V k</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>; ::; V k l g is generated, which guarantees to converge to a local minimum. Since f (X ) is a convex function, the local minimum is also the global minimum, so the new algorithm will converge to the global minimum in Ω:</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Electromigration failure modes in aluminum metallization for semiconductor devices</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Black</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE</title>
		<meeting>of IEEE</meeting>
		<imprint>
			<date type="published" when="1996-09">Sept. 1996</date>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="1587" to="1597" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A survey of optimization techniques for integrated circuit design</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Brayton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Hatchtel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sangiovanni-Vincentelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE</title>
		<meeting>of IEEE</meeting>
		<imprint>
			<date type="published" when="1981-10">Oct. 1981</date>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page" from="1334" to="1362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Bazaraa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">D</forename><surname>Sherali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Shetty</surname></persName>
		</author>
		<title level="m">Nonlinear Programming: theory and algorithm</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>John-Wiley &amp; Sons</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note>2ed</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Minimal area design of power/ground nets having graph topologies</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Breuer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1441" to="1451" />
			<date type="published" when="1987-12">Dec. 1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Optimum design of IC power/ground networks subject to reliability constraints</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Breuer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="787" to="796" />
			<date type="published" when="1988-07">July 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Optimum design of reliable IC power networks having general graph topologies</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chowdhury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 26th ACM/IEEE Design Automation Conf</title>
		<meeting>26th ACM/IEEE Design Automation Conf</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="page" from="787" to="790" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Automatic sizing of power/ground (P/G) networks VLSI</title>
		<author>
			<persName><forename type="first">R</forename><surname>Dutta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Marek-Sadowska</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 26th ACM/IEEE Design Automation Conf</title>
		<meeting>26th ACM/IEEE Design Automation Conf</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="page" from="783" to="786" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A nonlinear programming technique for the optimization of continuous process systems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Griffith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="379" to="392" />
			<date type="published" when="1961">1961</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Power and ground network topology optimization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Mitsuhashi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">S</forename><surname>Kuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 29th ACM/IEEE Design Automation Conf</title>
		<meeting>29th ACM/IEEE Design Automation Conf</meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="524" to="529" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Steiglitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorial Optimization Algorithms and Complexity</title>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Printice-Hall Inc</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
