<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Industrial geometry: recent advances and applications in CAD</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
							<email>pottmann@geometrie.tuwien.ac.at</email>
						</author>
						<author>
							<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
							<email>leopoldseder@geometrie.tuwien.ac.at</email>
						</author>
						<author>
							<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
							<email>hofer@geometrie.tuwien.ac.at</email>
						</author>
						<author>
							<persName><forename type="first">T</forename><surname>Steiner</surname></persName>
						</author>
						<author>
							<persName><forename type="first">W</forename><surname>Wang</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University of Hong Kong</orgName>
								<address>
									<addrLine>421 Chow Yei Ching Bldg, Pokfulam Rd</addrLine>
									<settlement>Hong Kong</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Vienna University of Technology</orgName>
								<address>
									<addrLine>Wiedner Hauptstr. 8-10/104</addrLine>
									<postCode>1040</postCode>
									<settlement>Wien</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Industrial geometry: recent advances and applications in CAD</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">98B9D49110CAADA3DE0D36F0BEBEA023</idno>
					<idno type="DOI">10.1016/j.cad.2004.08.013</idno>
					<note type="submission">Accepted 11 August 2004</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Geometric optimization</term>
					<term>Distance function</term>
					<term>Curve approximation</term>
					<term>Surface approximation</term>
					<term>Active contours</term>
					<term>Registration</term>
					<term>Feature sensitivity</term>
					<term>Mathematical morphology</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Industrial Geometry aims at unifying existing and developing new methods and algorithms for a variety of application areas with a strong geometric component. These include CAD, CAM, Geometric Modelling, Robotics, Computer Vision and Image Processing, Computer Graphics and Scientific Visualization. In this paper, Industrial Geometry is illustrated via the fruitful interplay of the areas indicated above in the context of novel solutions of CAD related, geometric optimization problems involving distance functions: approximation with general B-spline curves and surfaces or with subdivision surfaces, approximation with special surfaces for applications in architecture or manufacturing, approximate conversion from implicit to parametric (NURBS) representation, and registration problems for industrial inspection and 3D model generation from measurement data. Moreover, we describe a 'feature sensitive' metric on surfaces, whose definition relies on the concept of an image manifold, introduced into Computer Vision and Image Processing by Kimmel, Malladi and Sochen. This metric is sensitive to features such as smoothed edges, which are characterized by a significant deviation of the two principal curvatures. We illustrate its applications at hand of feature sensitive curve design on surfaces and local neighborhood definition and region growing as an aid in the segmentation process for reverse engineering of geometric objects.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>During the past decades, geometric methods have played an increasingly important role in a variety of areas dealing with computing for industrial applications; these include Computer-Aided Design and Manufacturing, Geometric Modeling, Computational Geometry, Robotics, Computer Vision, Pattern Recognition and Image Processing, Computer Graphics and Scientific Visualization.</p><p>These areas originated from different requirements in specific applications and thus they have seen rather disjunct developments. In fact, very similar problems have been treated by different communities. These communities still have different favorite solutions to nearly the same problems. Let us illustrate this at hand of curve approximation. According to industry standards, the CAD approach uses B-spline curves and a method for data fitting which iterates between parameter estimation and linear least squares approximation <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b33">34]</ref>. Computer Vision and Image Processing developed another method, active contours <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b11">12]</ref>, which have originally been formulated as parametric curves. Nowadays, the advantages of (discretized) implicit representations and the formulation of the curve evolution via partial differential equations in the level set method <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b29">30]</ref> are highly appreciated, in particular, for difficult curve approximation problems which arise in image segmentation. Curve approximation also appears in higher dimensional spaces. For example, in the space of rigid body motions, it leads to motion design for Robotics <ref type="bibr" target="#b16">[17]</ref> or Computer Animation.</p><p>In recent years, these different areas of research have started to become increasingly interconnected, and have even begun to merge. A driving force in this process is the increasing complexity of applications, where one field of research alone would be insufficient to achieve useful results. Novel technologies for acquisition and processing of data lead to new and increasingly challenging problems, whose solutions require the combination of techniques from different branches of applied geometry. The thereby emerging research area, which aims at unifying existing and developing new methods and algorithms for a variety of application areas with a strong geometric component, shall be called Industrial Geometry.</p><p>Let us continue the example from curve approximation addressed above. The viewpoint of Industrial Geometry would be to investigate the various algorithms from a common perspective. Since all the available algorithms are solving non-linear geometric optimization problems, it is appropriate to study and compare the known approaches from the optimization perspective. In the present paper, we will point to recent results in this direction.</p><p>It is impossible to outline all major current research streams in Industrial Geometry in this paper. Therefore, we will focus just on a few topics. We will briefly look at the level set method <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b29">30]</ref> and on hybrid data structures for geometric computing <ref type="bibr" target="#b14">[15]</ref>. The major part of this paper is devoted to geometric optimization problems which involve distance functions. Here we will present a survey with some new results on a recently developed class of optimization algorithms, which can be called squared distance minimization. The benefits of the optimization viewpoint rather than the perspective of a specific application will become obvious. With nearly the same algorithms we can solve a wide class of curve and surface approximation problems and a number of registration (surface matching) problems.</p><p>The methods we are using for the topics indicated so far have a relation to Computer Vision and Image Processing. As a further example for the fruitful use of techniques which originate in these fields, we discuss a new metric on surfaces. It is sensitive to features such as smoothed edges, which are characterized by a significant deviation of the two principal curvatures. This new metric can be easily understood with the concept of an image manifold <ref type="bibr" target="#b13">[14]</ref>, and it has a number of interesting applications <ref type="bibr" target="#b24">[25]</ref>. For example, we can design curves on surfaces whose shape is adapted to the features of the surface. Moreover, we briefly address local neighborhood definition and region growing as an aid in the segmentation process for reverse engineering of geometric objects. Image processing frequently uses mathematical morphology for basic topological and geometric operations <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b28">29]</ref>; this work describes similar operations on surfaces, which-if desired-can be made sensitive to the features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Geometry representations</head><p>The choice of an appropriate representation of a geometric object is a fundamental issue for the development of efficient algorithms. Following a recent survey by Kobbelt <ref type="bibr" target="#b14">[15]</ref>, one may classify the basic types of 3D geometry representations according to the following table Explicit representations are meant as sequences of points and can be seen as maps f : N/ R 3 . Parametric representations are described by maps f : R 2 / R 3 and implicit representations by trivariate functions f : R 3 / R. In the table above, the basic data structures which are at our disposal are called unstructured (list, graphs; they have a sequential or topological ordering, respectively), structured (array; has a global index structure) and hierarchical (octrees, binary space partitions). Basic operations which are frequently performed within geometric algorithms are evaluation (computing points, normals, etc.), queries (inside or outside, distance, closest point, etc.), and modification of geometry and/or topology. The various entries in the table behave quite differently with respect to these operations.</p><p>Whereas Computer Graphics seems to use all these representations by now, CAD so far focuses on a few of them. This is probably not an ideal situation. On the other hand, we see the possibility of achieving big progress by looking at the entire collection of representations, and by combining them in an optimal way (see Section 2.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">The level set method in CAD</head><p>The implicit representation of a surface F in R 3 describes it as zero set of a function f : R 3 / R F dfx 2R 3 : f ðxÞ Z 0g:</p><p>(</p><p>Associated with f, we have a whole family of level sets</p><formula xml:id="formula_1">F c dfx 2R 3 : f ðxÞ Z c Z const:g:<label>(2)</label></formula><p>It is sometimes an advantage to view the whole family. In connection with curves or surfaces which evolve in some optimization procedure, this is a fruitful approach and one of the basic ingredients in the highly successful level set method <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b29">30]</ref>. The level set method formulates the optimization process of the shape under consideration (called active curve or active surface) with a partial differential equation (PDE) and employs efficient algorithms for the numerical solution of that PDE on a grid.</p><p>The level set method is very popular in Computer Vision, Image Processing and Computer Graphics <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b29">30]</ref>. We have not seen many applications of the level set method in CAD so far, but it can be expected that this picture will change. A main concern which might have hindered the use of the level set method, is the representation it is based on an implicit representation and evaluated just on a grid. However, there are a variety of complicated shape computation problems for which one does not need to work throughout the whole computation with the final NURBS representation. We may decouple the shape finding procedure from the final representation. The level set method can be applied to shape optimization and then one applies a conversion procedure from level sets to NURBS. This conversion is briefly addressed in Section 4.6, but requires more studies for successful practical use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Hybrid geometry representations</head><p>A promising direction for future research has been opened in recent research by Kobbelt. He proposes hybrid representations, which are various clever combinations of geometry representations. The aim is to use the individual parts in these combinations for those operations where they perform best. For example, a combination of a mesh with an implicit representation can be applied to mesh repair. The combination of a polygon and a grid leads to a formulation of an active contour in the plane (called r-snake), which is easy to implement and allows us to control the topology <ref type="bibr" target="#b2">[3]</ref>. The latter is an important issue for the level set method, whose original formulation would easily achieve changes in the topology of the deforming shape, but hardly allow us a control over that change.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Distance functions</head><p>The distance function of a curve or surface M assigns to each point x of the embedding space the shortest distance d(x) of x to M. Since d is not differentiable at M one often uses the signed distance function, which agrees with d up to the sign. It is well defined for a closed object and takes on different signs inside and outside the object, respectively. In the following, we will just speak of the distance function for both the signed and the unsigned version.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">A view into the literature</head><p>The distance function is an excellent example of a topic which has been addressed by all areas which involve geometric computing. Early work on the geometry of the distance function comes from the classical geometric literature of the 19th century. One looks at its graph surface, which consists of developable surfaces of constant slope and applies results of classical differential geometry, line and sphere geometry (for a modern presentation, see <ref type="bibr" target="#b25">[26]</ref>).</p><p>The level sets of the distance function of a geometric object M are the offsets of M, which are of particular importance in Computer Aided Design and Manufacturing <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b19">20]</ref>.</p><p>Distance functions are also basic to morphological operators in Image Processing <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b28">29]</ref>. The distance function is not differentiable at points of the cut locus, which is a concept that appears in different variants (medial axis, skeleton, bisector, etc.) in various areas for a number of applications (for CAD related work, see <ref type="bibr" target="#b19">[20]</ref>).</p><p>Computer Graphics uses distance functions in many ways, for example, in adaptively sampled distance fields <ref type="bibr" target="#b8">[9]</ref>. These proved to be a versatile and unifying representation with many applications (NC simulation, interference checking, sculpting, etc.). Distance functions also blend well with a recent trend in Computer Graphics of working directly with clouds of points rather than meshes.</p><p>Optimal robot trajectories are in a natural way related to shortest paths on manifolds and thus distance functions play a central role <ref type="bibr" target="#b16">[17]</ref>. They also occur in obstacle avoidance with the potential field (barrier) approach <ref type="bibr" target="#b16">[17]</ref>.</p><p>Algorithms for fast computation of the distance function in two or three dimensions are often performed on a grid. One exploits the fact that the distance function has a normalized gradient field, i.e. it is a solution of the Eikonal equation kVf ðxÞkZ 1. The main types of algorithms are fast marching <ref type="bibr" target="#b29">[30]</ref> and fast sweeping <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b36">37]</ref>. Computational Geometry developed different types of algorithms for fast distance computations. We point especially to approximate nearest neighbor algorithms <ref type="bibr" target="#b0">[1]</ref>, which are even working well in higher dimensions, where a grid-based computation would hardly be feasible.</p><p>As an example, we consider the computation of the distance function of a geometric object F in the presence of obstacles: The function value d(x) at a point x (not in an obstacle) is the length of the shortest path from x to a point of F, which avoids the obstacles. Zhao's algorithm <ref type="bibr" target="#b36">[37]</ref> is very well suited to solve this problem: we just have to mark the grid points inside the obstacles with a flag; these points will never be updated and therefore never influence the computation of the distance function in the admissible points of the grid. The distance function of a point p in the plane in the presence of some obstacles, computed with Zhao's algorithm, is shown in Fig. <ref type="figure" target="#fig_0">1</ref>. We also see that this is only an approximation, since the precise level sets near the point p should be circles. Tsai's algorithm <ref type="bibr" target="#b31">[32]</ref> does not have this distortion, but on the other hand it is not easily extendable to the presence of obstacles. Fig. <ref type="figure" target="#fig_0">1</ref> furthermore shows the shortest paths connecting the point p with six other points and respecting the obstacles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Quadratic approximants of the squared distance function</head><p>In subsequent optimization algorithms we will have to minimize functions, which contain sums of squared distances of points to a curve or surface. In order to achieve good local convergence, we will use a Newton or quasi-Newton algorithm, and this requires local quadratic approximants of the squared distance function of a curve or surface.</p><p>Such local quadratic approximants have been studied in <ref type="bibr" target="#b20">[21]</ref>. We briefly summarize here the main results and start with the squared distance function d 2 (c) of a planar curve c. Deriving a second-order approximant only makes sense at a smooth point p of that function, and thus we exclude points on the cut locus.</p><p>Consider an admissible point p in the plane. The point c 0 2c, which is closest to p is a normal foot point (see Fig. <ref type="figure" target="#fig_1">2</ref>). Let e 1 , e 2 denote unit tangent and normal vector of c at c 0 , respectively. In this Frenet frame, we have pZ(0,d), with jdj being the distance of p to c. The curvature center k 0 at c 0 has coordinates (0,r), where r is the inverse curvature 1/k and thus has the same sign as the curvature. In that frame, the second-order Taylor approximant F d of the squared distance function at p is found to be</p><formula xml:id="formula_2">F d ðx 1 ; x 2 Þ Z d d K r x 2 1 C x 2 2 :<label>(3)</label></formula><p>In Fig. <ref type="figure" target="#fig_1">2</ref>, the second-order Taylor approximant F d at p is depicted with some level sets (ellipses). The following special cases should be kept in mind: † For dZ0 we get the Taylor approximant F 0 Z x 2 2 at the normal foot point. This shows the following interesting result: At a point p of a curve c the second-order approximant of the squared distance function of c and of the curve tangent T at p are identical. Visually, this is not unexpected since curvature depends on the scale. Zooming closer to the curve it appears less and less curved. † For d/N, the Taylor approximant tends to</p><formula xml:id="formula_3">F N Z x 2 1 C x 2 2</formula><p>. This is the squared distance function to the foot point c(t 0 ).</p><p>For an implementation which employs the discussed approximants, it is better to express them in the same coordinate system as the curve itself. This is done by viewing F d as a weighted sum of x 2 1 , the squared distance to the normal, and x 2 2 , the squared distance to the tangent at the foot point. If e 1 $xC d 1 Z 0; ke 1 kZ1 and e 2 $xC d 2 Z 0, ke 2 kZ1 are the equations of the normal and the tangent at the foot point c 0 , respectively, the quadratic approximant reads</p><formula xml:id="formula_4">F d ðxÞ Z d d K r ðe 1 $x C d 1 Þ 2 C ðe 2 $x C d 2 Þ 2 :<label>(4)</label></formula><p>For the applications we have in mind, it can be important to employ non-negative quadratic approximants to d 2 . If the approximant ( <ref type="formula" target="#formula_4">4</ref>) is indefinite, which happens when A dd=ðdK rÞ! 0, we set A to zero. This means we use the squared distance to the tangent at the foot point.</p><p>Analogous considerations can be performed for the squared distance function of a surface s. Given s and a point p, we compute the closest point s 0 2s to p. At p 0 , we use the principal frame, defined by the two principal curvature directions e 1 , e 2 and the surface normal vector e 3 . Let k i be the (signed) principal curvature to the principal curvature direction e i , iZ1,2, and let r i Z1/k i . Then the two principal curvature centers at the considered surface point s 0 are expressed in the principal frame as k i Z(0,0,r i ). It can be shown that the second-order Taylor approximant F d of d 2 at pZ(0,0,d) is given by 4. Curve and surface approximation using squared distance minimization 4.1. The SDM method with the squared distance field attached to the model shape</p><formula xml:id="formula_5">F d ðx 1 ; x 2 ; x 3 Þ Z d d K r 1 x 2 1 C d d K r 2 x 2 2 C x 2 3 :<label>(5)</label></formula><p>As input we consider a model shape M. This can be a curve or surface in any analytical or discrete representation (smoothed mesh or a sufficiently dense point cloud with low noise level). The model shape M shall be approximated by a B-spline curve or surface. We will compute a geometric least squares approximant, where distances are measured orthogonal to the model shape M.</p><p>For the sake of simplicity in our explanation, we confine ourselves to planar curves, but the concept works for surfaces of arbitrary dimension and codimension in higher dimensional spaces as well.</p><p>The method which is proposed here is inspired by active curve models from Computer Vision <ref type="bibr" target="#b3">[4]</ref>. An initial B-spline curve is iteratively deformed with an optimization algorithm. The goal is to find a B-spline curve</p><formula xml:id="formula_6">cðtÞ Z X n iZ1 B i ðtÞd i ;<label>(6)</label></formula><p>which minimizes the objective function</p><formula xml:id="formula_7">F Z X N kZ1 d 2 ðs k ; MÞ C lF s :<label>(7)</label></formula><p>Here, s k Zc(t k ), kZ1,.,N are curve points at preselected parameter values t k . These sampled points s k , called 'sensor points' in the following, must be sufficiently dense so that they describe the shape of the B-spline curve well. The value of l is a given contant and F s is a smoothing term, for which we use a combination of L 2 norms of low derivatives of c(t). Thus the objective function F is the sum of squared distances of the sensor points to the model shape M plus a weighted smoothing term lF s . We assume that the basis functions are given; for a B-spline this requires the choice of degree and knot sequence before the optimization is started. The optimization is over the control points d i . In fact, it is not essential that we use B-splines; any other curve scheme with an expression of the form (6) can be used as well.</p><p>From an optimization viewpoint, we have a non-linear least squares problem <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13]</ref>. The basic optimization procedure is a (stabilized) Newton algorithm, in which we use the local quadratic approximants of the squared distance discussed above. The method will be called squared distance minimization (SDM) henceforth. It proceeds as follows:</p><p>(1) Initialize the active curve and determine the boundary conditions. </p><formula xml:id="formula_8">F Z X N kZ1 F k d X i B i ðt k Þðd i C c i Þ " # C lF s :<label>(8)</label></formula><p>F s is a quadratic function in the unknowns c i . Since F k d are quadratic functions and the argument</p><formula xml:id="formula_9">P i B i ðt k Þðd i C c i Þ is linear in c i ,</formula><p>also the first part of F and thus the function F itself is a quadratic function in the displacement vectors c i of the control points. Thus, its minimization amounts to the solution of a linear system of equations. (c) With c i from the previous step, we replace the control points There are various issues which need a closer discussion. One has to appropriately preprocess M (or better its distance field), such that one can quickly compute the required local quadratic approximants. Moreover, the adaption of the number of control points (knots in a B-spline model) during the evolution is an important issue. Solutions to these problems are found in <ref type="bibr" target="#b35">[36]</ref>.</p><formula xml:id="formula_10">d i by d Ã i Z d i C c i .</formula><p>Ongoing research shows that a slight extension of the SDM algorithm can also optimize the weights in the full NURBS model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Surface approximation with SDM</head><p>The SDM approach to curve approximation has a straightforward extension to surface approximation.</p><p>The active surface model we are using shall be of the form sðu; vÞZ P B i ðu; vÞd i , so that surface points s k to given parameter values (u k ,v k ) depend on the control points d i in a linear way.</p><p>The quadratic function we are minimizing in each iteration step again consists of a distance part, set up via local quadratic approximants of the squared distance function at the sensor points, and a regularization term. For more details, see <ref type="bibr" target="#b21">[22]</ref>. An example is presented in Fig. <ref type="figure" target="#fig_4">4</ref>. It shows a triangulated CAD surface (data was obtained by 3D laser scanning) and its approximating B-spline surface of bidegree (3,3) with 5!8 control points).</p><p>The SDM method is also suitable for approximation with subdivision surfaces. An important property of the SDM method is the linear dependence of the sample points s k on the control points. For a subdivision surface, surface points also depend linearly on the vertices of the starting mesh of the subdivision procedure. It is therefore possible to optimize the initial mesh so that the sample points well approximate the model shape. Of course, there arise important issues such as the determination of the initial mesh configuration. These are discussed in a recent contribution by Cheng et al. <ref type="bibr" target="#b5">[6]</ref>.  Fig. <ref type="figure" target="#fig_5">5</ref> shows an example of the approximation of a bone structure by a subdivision surface using Loop's scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Discussion from the viewpoint of optimization</head><p>If one uses unmodified second-order Taylor approximants F k d in the SDM method, the quadratic function ( <ref type="formula" target="#formula_8">8</ref>) is a second-order approximant of the objective function F in <ref type="bibr" target="#b6">(7)</ref> at the current position (iterate) of the active curve. For smooth model shapes M, the influence parameter l of the smoothing part is reduced to zero in later steps anyway. Therefore, in this case the algorithm is a Newton algorithm and exhibits local quadratic convergence.</p><p>We did, however, suggest to use only non-negative approximants F k d . As a result of this, we do not work with the exact Hessian V 2 F of F, but with a positive definite approximant to it. In this sense, it is a quasi-Newton algorithm. Although it is not of a standard type such as BFGS <ref type="bibr" target="#b12">[13]</ref>, we expect that one can prove superlinear convergence.</p><p>In later steps of the iteration, the sensor points will be very close to M already. Therefore, it is natural to use only the squared distance to the tangent at the foot points of the sensor points as functions F k d . This method of squared tangent distance minimization (TDM) is exactly a Gauss-Newton iteration for the solution of the non-linear least squares problem at hand. Using well-known results from optimization <ref type="bibr" target="#b12">[13]</ref> we conclude that TDM exhibits quadratic convergence for a zero residual problem (FZ0 at the minimizer, i.e. a spline fits precisely onto the model shape M). TDM converges rapidly for a small residual problem, i.e. if there are sufficiently many control points in the active shape so that it can well approximate the model shape M. Since we have incorporated a regularization term F s , we have a similar stabilizing effect as in the Levenberg-Marquardt method <ref type="bibr" target="#b12">[13]</ref>.</p><p>Even if we have a positive definite approximate Hessian, a good global convergence behavior would require to check, especially in the initial iteration steps, whether there is sufficient decrease in the value of the objective function F. We propose to apply the following global convergence improvement of SDM and TDM: if the new position of the active curve does not have sufficient decrease, one reduces the stepsize and uses as new control points d i Cmc i , with m!1, according to the Armijo rule or a similar stepsize strategy <ref type="bibr" target="#b12">[13]</ref>. In Fig. <ref type="figure">6</ref> the necessity of a stepsize control is shown for an example where the TDM method was used.</p><p>The different behavior of the SDM method and the PDM method for curve approximation can be best visualized with a three-dimensional plot where the third dimension represents the time in the curve evolution process, see Fig. <ref type="figure">7</ref>. The bottom layer of the depicted surface shows the initial position of the active curve, whereas the top layer shows the final shape of the active curve. In the SDM method, the active shape adjusts to the model shape in very few iteration steps, i.e. all the significant changes happen in the lower part of the three-dimensional plot of Fig. <ref type="figure">7</ref> (left). In the PDM method, however, the adjusting process needs much more iterations, with mostly tangential movement in the later steps of the algorithm, see Fig. <ref type="figure">7</ref> (right).</p><p>In Fig. <ref type="figure" target="#fig_7">8</ref> we show an extension of the SDM method to an example that requires a global search capability, see Fig. <ref type="figure" target="#fig_7">8</ref>. The target shape is the elongated, closed curve at the top level of Fig. <ref type="figure" target="#fig_7">8</ref> and the initial shape is the circular shape at the bottom level. In the evolution process of this curve, global properties of the distance function are used, as well as ideas from active contours in image processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">The SDM method with the squared distance field attached to the fitting curve</head><p>The formulation of SDM given above measures the distance of the active shape and the input data (the model shape M) orthogonal to M. This is fine if M is a smooth curve or a sufficiently dense point sequence with a low noise level.</p><p>For applications with sparse data points or very noisy measurement data, this approach does not work. In that case, one can measure the error orthogonal to the fitting curve or surface, as proposed in <ref type="bibr" target="#b34">[35]</ref>.</p><p>Let us explain this for curves. We have to attach the squared distance field to the active curve. At first sight, this is much more complicated than the previous version. However, it turns out that one can effectively use the following error measurement <ref type="bibr" target="#b34">[35]</ref>: at each data point, we compute a nonnegative quadratic approximant of the squared distance function to the current version of the active curve (Fig. <ref type="figure" target="#fig_8">9(a)</ref>). We then use this quadratic function for measuring the fitting error in the next iteration (Fig. <ref type="figure" target="#fig_8">9(b)</ref>). In this local error metric, points on the same iso-value ellipse have the same approximate squared distance to the fitting curve. The shapes of the ellipses are well adapted to the curve shape. This is one of the reasons why the resulting new SDM method outperforms currently used methods such as the standard CAGD approach based on linear least squares approximation and parameter correction <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b33">34]</ref>.</p><p>Fig. <ref type="figure" target="#fig_9">10</ref> shows an example for this approach. An active B-spline curve deforms from an initial shape (with a very uneven distribution of its 12 control points) towards a target shape. Two methods are compared, namely PDM (the standard CAGD method of alternation between parameter estimation and linear least squares fitting), and the SDM method. The fact that alternating optimization of parameters and control points is only linearly convergent, and can be improved by Gauss-Newton optimization has already been addressed in <ref type="bibr" target="#b30">[31]</ref>. The example in Fig. <ref type="figure">6</ref> and<ref type="figure">a</ref> further example in Fig. <ref type="figure" target="#fig_0">11</ref> demonstrate the capability of the SDM method to fit extremely noisy data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.">Approximation by ruled surfaces for NC machining and rapid prototyping</head><p>Standard surface approximation methods which require the estimation of the parametrization are hardly applicable in situations where a special parametrization is used to efficiently capture a special surface shape. A good example for that are ruled surfaces, which are obtained as B-Spline surfaces s(u,v) of bidegree <ref type="bibr">(1,n)</ref>. The u-parameter lines are  the straight lines (rulings) on the surface. Approximating a given model shape by a ruled surface has interesting applications in NC machining (peripheral milling with a cylindrical cutter), wire cut electric discharge machining or in architecture <ref type="bibr" target="#b26">[27]</ref>. With the SDM method, approximation by a ruled surface becomes a simple task but boundary conditions have to be considered. In the case of a closed surface model M (see Fig. <ref type="figure" target="#fig_10">12</ref>) the initial position of the active surface s(u,v) has to be chosen outside of M to avoid shrinking of s(u,v). In the case of an open surface patch M we fix in sufficient distance to M two end rulings of an initial shape and then let the surface flow towards the model shape via SDM. In each iteration, only those sensor points are used whose foot points lie inside M (and not on the boundary).</p><p>As noted above, one of the industrial application of surface approximation with ruled surfaces is peripheral milling with a cylindrical cutter <ref type="bibr" target="#b17">[18]</ref>. The material is removed by the cutters side, i.e. by the cylindral surface. Thus the milling process generates an offset surface of the ruled surface that is traced out by the moving cutter axis. In order to generate a certain model shape M with this method, using a cutter of radius r, one has to approximate an offset of M at the distance r with a ruled surface and move the cutters axis on this ruled surface. In <ref type="bibr" target="#b15">[16]</ref> the authors decompose the model shape M into several parallel strips which are generated with the method of peripheral milling. The ruled layers are then used in a novel rapid prototyping technique. In our context this problem can be formulated as follows. Approximate the offset surface of our model shape M at distance r with a B-spline surface s(u,v) of bidegree (1,3) with more than two control points in u-direction. This B-spline surface will be composed of several layers of ruled surfaces. It is just a linear side condition in the optimization process to keep the control points of s(u,v) in layers of parallel planes. Fig. <ref type="figure" target="#fig_11">13</ref> (right) shows the result for six layers of ruled surface strips which approximate an offset surface of the model shape M depicted in Fig. <ref type="figure" target="#fig_11">13</ref> (left). The middle figure shows an approximation of M itself by such a surface composed of layers of ruled surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.">Approximating level sets by NURBS</head><p>The SDM method can be applied to the approximation of an implicitly represented model shape M:f(x)Z0 as well. In fact, SDM implicitizes the model shape M anyway, since it uses the distance function. The level set method is often stabilized by requiring that the level set function f is (close to) a signed distance function. If the output of a level set method is not yet a signed distance function, one can run a few iterations of a solver for the Eikonal equation and then achieve a signed distance function. Thus, the output of the level set method as a descriptor of a model shape M is a perfect input for the SDM method. Local quadratic approximants of the squared distance function f 2 can be computed quickly and efficiently from a signed distance function f, even if it is given only on a grid.</p><p>For a really practical conversion program, one needs an automatic choice of a good initial shape (patch layout) and the incorporation of changes in the patch structure or degrees of freedom (e.g. adding or deleting knots) during the optimization. Note that sharp edges and features should be captured very well, which again requires an appropriate patch layout. This is a topic of current research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Registration based on squared distance minimization</head><p>For the goal of shape inspection, it is of interest to find the optimal Euclidean motion (translation and rotation) that aligns a cloud of measurement points of a workpiece to the CAD model from which it has been manufactured. This makes it possible to check the given workpiece for manufacturing errors and to visualize and classify the deviations. This is one instance of a registration problem. Another registration problem concerns the merging of partially overlapping scans of the same object (typically available in different coordinate systems) into a single consistent representation in the same coordinate system.</p><p>We will outline an SDM algorithm for the solution of the shape inspection problem. It involves only two rigid systems (point cloud and CAD model, respectively), but it is fundamental for the entire family of rigid registration problems.</p><p>A well-known standard algorithm to solve the present registration problem is the iterative closest point (ICP) algorithm of Besl and McKay <ref type="bibr" target="#b1">[2]</ref>. Independently, Chen and Medioni <ref type="bibr" target="#b4">[5]</ref> proposed a similar algorithm. Although these two algorithms are based on similar ideas, we will see later that the difference-from the viewpoint of optimization-is not marginal at all. Most of the literature is based on these algorithms and deals with a variety of possible improvements. An excellent summary with new results on the acceleration of the ICP algorithm has been given by Rusinkiewicz and Levoy <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Problem formulation</head><p>A set of points X 0 Z ðx 0 1 ; x 0 2 ; .Þ is given in some coordinate system S 0 . It shall be rigidly moved (registered, positioned) to be in best alignment with a given surface F, represented in system S. We view S 0 and S as moving and fixed system, respectively. A position of X 0 in S is denoted by XZ(x 1 ,.). It is the image of X 0 under some rigid body motion a. Since we identify positions with motions, the motions have to act on the same initial position. Thus, we always write XZa(X 0 ).</p><p>The point set X 0 may be a cloud of measurement points on the surface of a 3D object. The surface F may be the corresponding CAD model, another scan of the same object, a scan of a similar object, a mean shape in some class of shapes, etc. For our description, we will simply speak of a data point cloud and a surface F ('model shape'), but have in mind that F may also be given just as a point cloud. We will not address those additional issues which come up when only a part of the data shape agrees with a part of the model shape.</p><p>The registration problem shall be formulated in a least squares sense as follows. Compute the rigid body transformation a*, which minimizes </p><p>Here d 2 ðaðx 0 i Þ; FÞ denotes the squared distance of aðx 0 i Þ to F. If we view a : x 0 Z aC A$x as a special affine map in R 3 , we have to compute its 12 parameters (a,A) under the constraint that A is an orthogonal matrix. Hence, the present problem is a constrained non-linear least squares problem <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Registration based on SDM</head><p>In a rather straightforward modification of the SDM method we proceed as follows. Starting with an initial guess, we enter an iteration. In each step, we compute at the current data point positions (x 1 ,x 2 ,.) local quadratic approximants F i of the squared distance function of the surface F. One way of dealing with the rigidity constraints on the moving system is the use of a Fig. <ref type="figure" target="#fig_4">14</ref>. Registration of a point cloud X to model F. X is given in the initial and the aligned position. linearization, i.e. a velocity field. A possible new position x i,C of a point x i is estimated with help of its velocity vector vðx i ÞZ cC c !x i as</p><formula xml:id="formula_12">x i;C Z x i C vðx i Þ Z x i C c C c !x i :<label>(10)</label></formula><p>Thus, the estimate for the value of the objective function F after a displacement becomes</p><formula xml:id="formula_13">F C Z X i F i ðx i;C Þ Z X i F i ðx i C c C c !x i Þ:<label>(11)</label></formula><p>Since the functions F i are quadratic, F C is a quadratic function in the unknown vectors c; c 2R 3 ; which characterize the displacement. Hence, minimization of F C requires the solution of a linear system in six scalar unknowns.</p><p>However, we cannot directly move the points x i with help of their velocity vectors vðx i ÞZ cC c !x i . This would result in an affine distortion of the moving system. Instead, we compute from the solution ðc; cÞ a helical motion which moves the points x i to new positions that are close to x i,C Z x i Cv(x i ) <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b23">24]</ref>. The remark on step size control which we have made in Section 4 applies here as well.</p><p>In Fig. <ref type="figure" target="#fig_4">14</ref> a set of synthetically generated data points with Gaussian noise is registered to a model of a CAD workpiece. The figure shows the point cloud in its initial position and the final position after 15 iterations.</p><p>The present framework contains the two best known algorithms for registration. If we let F i be the squared distance function to the foot point y i 2F of x i , we obtain an algorithm which is (essentially) the ICP algorithm <ref type="bibr" target="#b1">[2]</ref>. If F i is taken as squared distance function to the tangent plane of F at y i , one obtains the algorithm by Chen and Medioni <ref type="bibr" target="#b4">[5]</ref>. Since the data points x i in later iterations are very close to F, the latter method uses much better approximants than the former (cf. Eq. ( <ref type="formula" target="#formula_5">5</ref>)). In fact, one can show that ICP is essentially a gradient descent method with local linear convergence. The algorithm of Chen and Medioni, the registration analogue to the TDM method, is a Gauss-Newton algorithm and exhibits local quadratic convergence for a zero residual problem. It converges very well also for a small residual problem.</p><p>The presented SDM registration method based on a linearization of the motion is also just quadratically convergent for a zero residual problem. However, it is not hard to use a second-order motion approximant and in this way achieve quadratic convergence even for a larger residual (stronger deviation of the set of data points from F). The transition of the presented approach to the simultaneous registration of more than two systems can be performed along the path described in <ref type="bibr" target="#b22">[23]</ref>. How much our geometric considerations simplify the Newton approach can be seen in comparison to <ref type="bibr" target="#b32">[33]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Image manifolds for geometry processing</head><p>Active curves and surfaces as well as registration problems have their origin in Computer Vision and Image Processing. We would like to point here to another concept which comes from this area and is expected to be of great value for Geometric Modelling and CAD. This is the concept of image manifolds, which has been introduced by Kimmel et al. <ref type="bibr" target="#b13">[14]</ref>. Given a 2D image, one associates with each point xZ(x,y) in the image plane, an auxiliary point XZ(x,y,f 1 ,.,f n ) in a higher dimensional space, where the f i s are local image properties such as grey level, color coordinates, texture measures, etc. In this way, the planar image domain is mapped to a two-dimensional surface M embedded in R m , mZ2Cn. For certain types of images, this manifold M has sufficient smoothness so that it makes sense to apply methods of differential geometry. Depending on the application, one may introduce an appropriate metric in R m and use also ideas from pattern classification <ref type="bibr" target="#b6">[7]</ref>: if the features f i have been chosen carefully, image parts with the same local structure will be close to each other in R m , even if they are not so close in the 2D image itself. Of course, image manifolds can also be associated with volumetric images and movies <ref type="bibr" target="#b13">[14]</ref>.</p><p>It is obvious that one can also handle images defined on a surface s. This might have a number of remarkable applications, also in CAD/CAM. There is also the possibility to define an image which is associated with the underlying surface s itself. We give an example for such a geometric image manifold <ref type="bibr" target="#b24">[25]</ref>. Let us consider the unit normal vectors as a vector valued image on the surface. Thus, each surface point x2s with unit normal vector n is mapped to the point XZ ðx; wnÞ 2R 6 . Here, w is a chosen positive constant. The set of all image points X forms a two-dimensional image manifold M 3R 6 . We now use the canonical Euclidean metric in R 6 . It induces on the manifold M a metric, which has remarkable properties when viewed from R 3 . The length of a curve c on s, measured in this metric, not only depends on the point set c but also on the variation of the surface normals along c. We assume that the surface s has features which are characterized by high curvature (i.e. strong variation of the normals) across the feature, but much smaller curvature along the feature. Then, in this new metric, distances across features appear larger than those along features. We have a feature sensitive metric. The constant w guides the sensitivity to features. In other words, w determines what we consider a feature; this is necessary anyway, since features rely on curvatures and thus depend on the scale.</p><p>It is not hard to work with the feature sensitive (FS) metric, since FS distances are ordinary Euclidean distances on M. The fact that M lies in R 6 does not cause any major problem for these computations. For details we refer to <ref type="bibr" target="#b24">[25]</ref>. Fig. <ref type="figure" target="#fig_12">15</ref> compares the behavior of the distance functions in the ordinary Euclidean metric and in the FS metric. Note that the isolines of the FS distance tend to stop at features. This new feature sensitive (FS) metric on a surface offers us a variety of applications. Fig. <ref type="figure" target="#fig_13">16</ref> shows several geodesic curves we have computed on a parametric surface. Two pairs of input points are each connected with a Euclidean geodesic and a FS geodesic. The latter metric forces the geodesic curves to follow the features of the surface.</p><p>The original motivation for the introduction of the FS metric comes from reverse engineering of geometric objects. There, a variety of shape classification methods have been developed, which aim at a segmentation of the measurement data into regions of the same surface type <ref type="bibr" target="#b33">[34]</ref>. Particularly for traditional geometric objects, where most of the surfaces on the boundary of the object are fundamental shapes, the surfaces are often separated by  edges or smoothed edges, so-called blending surfaces. Thus, it is natural to look at geometric processing tools on surfaces which are sensitive to such features. The FS metric simplifies the definition of local neighborhoods for shape detection, the implementation of region growing algorithms and the processing of the responses from local shape detection filters (images on surfaces). For example, the neighborhoods of a point shown in Fig. <ref type="figure" target="#fig_12">15</ref> are not equally useful for local shape detection: The neighborhood based on the Euclidean metric (left) flows across the feature. However, the neighborhood based on the FS metric (right) respects the feature and is more likely to belong to the same surface type in an engineering object. Another example is depicted in Fig. <ref type="figure" target="#fig_14">17</ref>. One can see the result of an edge detection process (left) which seperates the geometric object into different regions. This result is beautified (right) by region growing with help of the FS distance function. The morphological operation dilation in the FS metric can easily be stopped at features.</p><p>We expect that the applications of the FS metric go far beyond the examples which have been shown here. Currently, we are exploring feature sensitive surface parameterizations, computed via parameterizations of the image manifold M. Moreover, the global behavior of surface registration algorithms seems to be greatly improvable through the use of appropriately defined image manifolds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusion and future research</head><p>Exploiting the huge body of knowledge available in various fields that deal with geometric computing, we can search for unifying methods and in this way simultaneously achieve progress for a number of applications. Even just the adaptation of a method known in one field to an application in another field may lead to remarkable progress. This is a basic philosophy behind Industrial Geometry and has been illustrated at hand of optimization problems involving distance functions and concepts taken from Computer Vision and Image Processing (active contours, registration algorithms, image manifolds).</p><p>We expect great benefit of CAD from future research in Industrial Geometry. To give just one example, the incorporation of prior knowledge, also shape knowledge, into surface design and reconstruction, could be performed in extension of ideas from Computer Vision and Image Processing. These 'smart surfaces' would certainly be a welcome addition to current design methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Level sets of the distance function of a point p in the presence of obstacles and shortest paths emanating from p, respecting the obstacles.</figDesc><graphic coords="4,62.19,71.22,216.00,216.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>( 2 )</head><label>2</label><figDesc>Repeatedly apply the following steps (a)-(c) until the approximation error or change in the approximation error falls below a predefined threshold: (a) With the current control points d i , compute, for kZ 1,.,N, the active curve point s k Z P i B i ðt k Þd i and a non-negative local quadratic approximant F k d of the squared distance function of the model shape M at the point s k . (b) Compute displacement vectors c i , iZ1,.,n, for the control points d i by minimizing the function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3</head><label>3</label><figDesc>Fig. 3 illustrates the algorithm. The model shape M is a curve which is to be approximated by a B-spline curve. This figure also shows an initial position of the B-spline curve c(t), with control points d i , and the updated B-spline curve, with control points d Ã i , after one iteration step. For one of the sample points s k Zc(t k ) the local quadratic approximant F k d of the squared distance function is indicated by three of its level sets, which are concentric ellipses.There are various issues which need a closer discussion. One has to appropriately preprocess M (or better its distance field), such that one can quickly compute the required local quadratic approximants. Moreover, the adaption of the number of control points (knots in a B-spline model) during the evolution is an important issue. Solutions to these problems are found in<ref type="bibr" target="#b35">[36]</ref>.Ongoing research shows that a slight extension of the SDM algorithm can also optimize the weights in the full NURBS model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. One step in the curve approximation procedure. The curve M is approximated by a B-spline curve.</figDesc><graphic coords="5,313.11,541.77,224.02,166.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. (Top) Model shape M is a triangle mesh, obtained by 3D laser scanning. (Left) Model shape M and initial position of approximating B-spline surface s(u,v). (Right) Final B-spline surface s(u,v).</figDesc><graphic coords="6,85.04,71.22,433.46,278.99" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig.5. Approximation with a subdivision surface using Loop's scheme and the SDM method. (Left) Target bone shape, (middle) control mesh of the subdivision surface, (right) final subdivision surface obtained by the SDM method.</figDesc><graphic coords="6,96.89,551.69,409.67,156.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .Fig. 7 .</head><label>67</label><figDesc>Fig. 6. (Left) The fitting curve generated by TDM without stepsize control. (Right) The fitting curve generated by TDM with stepsize control (Armijo rule).</figDesc><graphic coords="7,116.33,71.22,354.60,138.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Curve evolution of SDM method for an example that requires a global search capability.</figDesc><graphic coords="8,62.87,71.22,214.93,196.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. SDM error measurement orthogonal to the active curve. The SD error function is shown via its iso-value curves (a) before and (b) after the curve has been updated. The change of tangent direction and curvature in one iteration is neglected.</figDesc><graphic coords="8,150.58,584.97,302.25,123.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. (a) A target shape (several points arranged in a rectangular shape) and an initial position of the active B-spline curve. (b) The fitted curve generated by point distance minimization (PDM) in 20 iterations. (c) The fitted curve generated by SDM in 20 iterations.</figDesc><graphic coords="9,59.07,71.22,469.06,155.23" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. (Top) Model shape M is a triangle mesh, obtained by 3D laser scanning. (Left) Approximating ruled B-spline surface s(u,v) of bidegree (1,3) with 2!10 control points. (Right) Superposition of M and s(u,v).</figDesc><graphic coords="10,90.37,71.22,422.64,303.53" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Ruled layers approximation for rapid prototyping. (Left) Model shape M is a triangle mesh, obtained by 3D laser scanning. (Middle) Model shape M and approximation with a piecewise ruled B-Spline surface, i.e. a surface s(u,v) of bidegree (1,3) with 7!25 control points. (Right) Approximating B-Spline surface s(u,v) of bidegree (1,3) approximating an offset of the model shape M.</figDesc><graphic coords="11,89.23,71.22,408.93,255.17" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Approximate geodesic circles on a triangle mesh in the Euclidean metric (left) and feature sensitive metric (right).</figDesc><graphic coords="13,82.89,565.58,421.54,152.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Geodesic curves on a parametric surface with features: (light colored) computed in the Euclidean metric, i.e. wZ0; (dark colored) computed in the FS metric, for wZ2.</figDesc><graphic coords="14,51.31,71.22,238.01,226.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17. Dilation in the FS metric with wZ1. Starting with the dark regions (left) we get the result shown (right). Note that the FS metric prevents a flow across features.</figDesc><graphic coords="14,109.59,543.47,384.19,164.58" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="12,151.99,211.08,299.93,506.95" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>H. Pottmann et al. / Computer-Aided Design 37 (2005) 751-766</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Part of this research has been carried out within the Competence Center Advanced Computer Vision and has been funded by the Kplus program. This work was also supported by the Austrian Science Fund under grant P16002-N05 and by the innovative project '3D Technology' of Vienna University of Technology.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An optimal algorithm for approximate nearest neighbor searching</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Mount</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">S</forename><surname>Netanyahu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Silverman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J ACM</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="891" to="923" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A method for registration of 3D shapes</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Besl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">D</forename><surname>Mckay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Pattern Anal Mach Intell</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="239" to="256" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Parametrization-free active contour models with topology control</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bischoff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Vis Comput</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="217" to="228" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Active contours</title>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Isard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Object modeling by registration of multiple range images</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Image Vis Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="145" to="155" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Fitting subdivision surfaces to unorganized point data using SDM</title>
		<author>
			<persName><forename type="first">D</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>University of Hong Kong</publisher>
		</imprint>
	</monogr>
	<note type="report_type">preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Pattern classification</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">O</forename><surname>Duda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">E</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Stork</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Practical methods of optimization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fletcher</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987">1987</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Adaptively sampled distance fields: a general representation of shape for computer graphics</title>
		<author>
			<persName><forename type="first">S</forename><surname>Frisken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Graph</title>
		<imprint>
			<biblScope unit="page" from="249" to="254" />
			<date type="published" when="2000">2000</date>
			<publisher>SIGGRAPH 00 Proc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Morphological image operators</title>
		<author>
			<persName><forename type="first">Hjam</forename><surname>Heijmans</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<publisher>Academic Press</publisher>
			<pubPlace>Boston</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lasser</surname></persName>
		</author>
		<title level="m">Fundamentals of computer aided geometric design</title>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Peters</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Wellesley</surname></persName>
		</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Snakes: active contour models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Comput Vis</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="321" to="331" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Iterative methods for optimization</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Kelley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>SIAM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Images as embedded maps and minimal surfaces: movies, color, texture and volumetric medical images</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kimmel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Malladi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sochen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int J Comput Vis</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="111" to="129" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Freeform shape representations for efficient geometry processing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<ptr target="http://www-i8.informatik.rwth-aachen.de/publi-cations/" />
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Adaptive ruled layers approximation of STL models and multi-axis machining applications for rapid prototyping</title>
		<author>
			<persName><forename type="first">B</forename><surname>Koc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-S</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Manufact Syst</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="153" to="166" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Robot motion planning, 6th printing</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Latombe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Kluwer</publisher>
			<pubPlace>Dordrecht</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Ellipse-offset approach and inclined zig-zag method for multi-axis roughing of ruled surface pockets</title>
		<author>
			<persName><forename type="first">Y-S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Koc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput-Aided Des</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="957" to="971" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Level set methods and dynamic implicit surfaces</title>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Shape interrogation for computer aided design and manufacturing</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M</forename><surname>Patrikalakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Maekawa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Geometry of the squared distance function to curves and surfaces</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization and mathematics III</title>
		<editor>
			<persName><forename type="first">H-C</forename><surname>Hege</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Polthier</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="221" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A concept for parametric surface fitting which avoids the parametrization problem</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Aided Geom Des</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="343" to="362" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Simultaneous registration of multiple views of a 3D object. International archives of the photogrammetry, remote sensing and spatial information sciences</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Part 3A, Commission III</publisher>
			<biblScope unit="volume">XXXIV</biblScope>
			<biblScope unit="page" from="265" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Registration without ICP</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Leopoldseder</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Vis Image Understand</title>
		<imprint>
			<biblScope unit="volume">95</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="54" to="71" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The isophotic metric and its application to feature sensitive morphology on surfaces</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Haider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hanbury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer vision-ECCV 2004, Part IV</title>
		<title level="s">Lecture notes in computer science</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Pajdla</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Matas</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3024</biblScope>
			<biblScope unit="page" from="560" to="572" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Computational line geometry</title>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wallner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Efficient variants of the ICP algorithm</title>
		<author>
			<persName><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the third international conference on 3D digital imaging and modeling</title>
		<meeting>the third international conference on 3D digital imaging and modeling<address><addrLine>Quebec</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Geometric partial differential equations and image analysis</title>
		<author>
			<persName><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Image analysis and mathematical morphology</title>
		<author>
			<persName><forename type="first">J</forename><surname>Serra</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982">1982</date>
			<publisher>Academic Press</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Level set methods and fast marching methods</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Global reparametrization for curve approximation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Speer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kuppe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Aided Geom Des</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="869" to="877" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Rapid and accurate computation of the distance function using grids</title>
		<author>
			<persName><forename type="first">Y-Sr</forename><surname>Tsai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Comput Phys</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="175" to="195" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Newton methods for parametric surface registration</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">M</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">R</forename><surname>Kurfess</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Part I. Theory. Comput-Aided Des</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="107" to="114" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Reverse engineering</title>
		<author>
			<persName><forename type="first">T</forename><surname>Va ´rady</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Martin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of computer aided geometric design</title>
		<editor>
			<persName><forename type="first">G</forename><surname>Farin</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Kim</surname></persName>
		</editor>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>North Holland</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="651" to="681" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Fitting B-Spline curves to point clouds by squared distance minimization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
		<respStmt>
			<orgName>University of Hong Kong</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Preprint</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Control point adjustment for B-spline curve approximation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wang</forename><forename type="middle">W</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput-Aided Des</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="639" to="652" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A fast sweeping method for Eikonal equations</title>
		<author>
			<persName><forename type="first">H-K</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math Comput</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
	<note>in press</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
