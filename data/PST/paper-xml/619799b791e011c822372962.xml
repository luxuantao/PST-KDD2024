<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Complete PCB Routing Methodology with Concurrent Hierarchical Routing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Shih-Ting</forename><surname>Lin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Yang Ming Chiao Tung University</orgName>
								<address>
									<settlement>Hsinchu</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hung-Hsiao</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Yang Ming Chiao Tung University</orgName>
								<address>
									<settlement>Hsinchu</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Chia-Yu</forename><surname>Kuo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Yang Ming Chiao Tung University</orgName>
								<address>
									<settlement>Hsinchu</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yolo</forename><surname>Chen</surname></persName>
							<email>yolo.chen@wnc.com.tw</email>
							<affiliation key="aff1">
								<orgName type="institution">Wistron NeWeb Corporation</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yih-Lang</forename><surname>Li</surname></persName>
							<email>ylli@cs.nctu.edu.tw</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Yang Ming Chiao Tung University</orgName>
								<address>
									<settlement>Hsinchu</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Complete PCB Routing Methodology with Concurrent Hierarchical Routing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/DAC18074.2021.9586143</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-01-01T13:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Trends in high pin density and an increasing number of routing layers complicate printed circuit board (PCB) routing, which is categorized as escape and area routing. Traditional escape routing research has focused on escape routing but has not considered the quality of area routing among chip components at the same time. In this work, we propose a complete PCB routing methodology, including simultaneous escape routing (SER), post-SER refinement, and gridless area routing. The SER completes the layer assignment of all nets and produces an escape order ensuring suitable escape and area routing on each layer. Length-matching constraints and differential pair routing are satisfied in each stage of the routing flow. The experiment results indicate that the proposed PCB routing method can complete routings for seven commercial PCB designs, whereas the commercial PCB tool cannot complete any of them.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In advanced process technology, complicated functionality and minuscule die area result in numerous pins and high pin density for printed circuit boards (PCBs), considerably increasing the difficulty of PCB routing in specific component areas such as escape routing. Fig. <ref type="figure" target="#fig_0">1</ref>(a) presents an example of escape routing that considers the routability of a component, where the escape order for component A is &lt;4, 6, 2, 5, 3, 1&gt;. However, PCB design requires connecting several components, and successful escape routing within a component may increase the difficulty of routing among components (i.e., area routing) or even render it unroutable. Simultaneous escape routing (SER) for all components can help prevent such circumstances. Fig. <ref type="figure" target="#fig_0">1(b</ref>) presents consistent net ordering for the SER of two components, &lt;4, 1, 6, 5, 2, 3&gt;. In addition, high-quality escape routing requires processing differential pair (DP) routing and length-matching constraints.</p><p>Escape routing can be categorized into three types, namely unordered escape routing (UER), ordered escape routing (OER), and simultaneous escape routing (SER). UER and OER involve determining the escape route of all pins of a component to a component boundary without and with the escape order assignment, respectively. Yan and Wong <ref type="bibr" target="#b0">[1]</ref> proposed a network flow model for UER and modeled OER through Boolean satisfiability (SAT) formulation <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>. The UER model is not yet suitable for practical application in designs with two or more components because escape orders with two components tend to be inconsistent, resulting in low routability for area routing. Thus, the application of OER is limited because escape orders must be set manually or automatically. However, SER can address the challenges presented by both OER and UER. Luo et al. <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref> proposed boundary routing, which is for efficient routing within a component and is a strategy for tracing a feasible order for two components iteratively. However, these works determined that escape order is restricted to a single-layer sequence, which necessitates a given layer assignment for each net if not all nets can be routed in a layer.</p><p>To address simultaneous multilayer escape routing problems, Ozdal et al. <ref type="bibr" target="#b5">[6]</ref> incorporated SER into the longest path with forbidden pairs problem to route the maximal number of nets in a layer and applied SER to each layer iteratively. However, the limited number of routing patterns lowers routing flexibility, which tends to constrain its application to modern dense PCB designs. For example, the number of layers required for a specific PCB design may be higher than that typically required because of the limited number of available routing patterns in a layer. Fig 1 <ref type="figure">.</ref>(c) presents an SER with three layers resulting from the method used in <ref type="bibr" target="#b5">[6]</ref>, in which the limited patterns allocate nets (4, 3, 1, 2, 8) to L0, nets (5, 7) to L1, and net 6 to L2. By contrast, Fig. <ref type="figure" target="#fig_0">1(d</ref>) presents a two-layer SER result, in which nets <ref type="bibr" target="#b3">(4,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b4">5)</ref> are allocated to L0 and nets (1, 6, 2, 8) are allocated to L1. For comparison, we applied the same routing patterns used in <ref type="bibr" target="#b5">[6]</ref> to the nets presented in Figs. <ref type="figure" target="#fig_0">1(c</ref>) and 1(d). Net 6 in Fig. <ref type="figure" target="#fig_0">1(c</ref>) can be 978-1-6654-3274-0/21/$31.00 Â©2021 IEEE 1141 routed in L1 (red-dotted path) if the router provides additional patterns. Finally, previous SERs may still produce an escape order that includes crossing within a layer; therefore, vias must be inserted into area routing to avoid crossing within a layer. Because via insertion requires drilling a hole through all layers, an obstacle is present at the same location in all layers. Additional obstacles in area routing diminish the feasibility of satisfying group length-matching constraints. Fig. <ref type="figure" target="#fig_0">1</ref>(e) presents via insertion in a congested PCB area routing.</p><p>To mitigate the deficiencies presented in other works, we propose the first complete PCB routing flow to simultaneously coordinate the SER and area routing. The proposed method has the following advantages: First, through SAT formulation, the proposed concurrent hierarchical SER assigns all signals to minimal layers and determines a crossing-free escape order and the pin locations in each layer. This reduces design cost and the difficulty of cross-free area routing, facilitating successful group length matching and DP routing. After redistributing pin locations according to the length-matching slack from the SER, area routing through wire snaking is conducted layer-by-layer. Both SER and area routing can be used to route DP nets. The experiment results indicate that the proposed PCB routing method completes the routings for seven commercial PCB designs, whereas a commercial PCB tool cannot complete any PCB design.</p><p>This paper is organized as follows: Section 2 defines the PCB routing problems, Section 3 introduces the proposed method for SER and area routing, Section 4 presents the experiment results, and Section 5 presents the conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PRELIMINARY</head><p>This section defines the PCB routing problem. The inputs to a PCB design include a PCB layout containing the locations and sizes of all pins in the layout, a set of available routing layers Lr, a net list N to be routed, a component list Cpcb, a net group list GN, a DP net list DPN, a fan-out list F, and a design rule set RR for routing. Cpcb describes all components in the PCB design, GN defines the nets in each group that must conform to group lengthmatching constraints, DPN defines all net pairs that must be tightly coupled during routing, and RR defines the spacing and width design rules for routed wires and the minimum segment length (MSL) rule for a wire segment in PCB manufacturing. The node in the component boundary is the terminal candidate of an escape route and is considered the fan-out node; for example, the red nodes in Fig. <ref type="figure" target="#fig_0">1(a</ref>) and 1(b). F is the set of fan-out nodes.</p><p>PCB Routing: Given a PCB layout with Lr, N, Cpcb, GN, DPN, F, and RR for routing, all the nets in N must be connected, and the total wirelength (WL) must be minimized while satisfying rule set RR for all routed wires. The PCB routing problem can be further divided into two subproblems, SER and area routing. On the basis of the proposed method, SER and area routing are defined as follows:</p><p>SER: Given a PCB layout with layers Lr, N, Cpcb, GN, DPN, F, and RR for SER, SER first minimizes the number of used layers and subsequently locates a violation-free escape route from the terminals to a fan-out node list on the corresponding component boundary. Finally, SER maintains the consistency of the escape orders among all components to ensure crossing is absent from each layer.</p><p>Area Routing: Given an SER result N, the escape orders of all components, the wirelength of each net used in escape routing, DPN, GN, and RR, the wirelength of all net routings must be minimized to conform to group length-matching constraints for each net group GN in each layer. For each net, area routing completes a two-terminal single-layer routing between two components.</p><p>The length-matching constraint is addressed during area routing because obstacles in each component area inhibit snaking wire insertion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">METHODOLOGY</head><p>Fig. <ref type="figure" target="#fig_1">2</ref> summarizes the proposed two-stage PCB routing flow. In the SER stage, an SAT-based concurrent hierarchical SER is applied to the entire region, including all components and the area routing region, to obtain a feasible escape routing and fan-out solution layer-by-layer, which also guarantees a crossing-free area routing in each layer. Then, the maximum satisfiability (MAX-SAT)-based post-SER with fan-out refinement optimizes the wirelength of the SER of individual components and enhances the feasibility of satisfying group length-matching constraints during area routing. Before area routing, the amalgamation of two nets in each DP simplifies the routing as a pseudo-large-net routing. Gridless area routing with snaked wire insertion is then applied to achieve area routing. Finally, the amalgamated DP nets are restored to separated nets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Concurrent Hierarchical Initial SER With SAT</head><p>The SAT problem involves identifying a feasible assignment of variables to satisfy the formulation expressed in conjunctive normal form (CNF). In this stage, instead of using MAX-SAT, we propose a concurrent hierarchical initial SER with SAT to identify a feasible SER to obtain the optimal results for diminishing runtime. To obtain a consistent cross-free escape order among all components in each layer, the routing graph includes all components and the SER region.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Proposed Routing Grid Map</head><p>The proposed two-level hierarchical routing grid graph is used to reduce the computational complexity of SAT. The coarse-level routing identifies a tile-path on the high-level grid graph (HLG), whereas the fine-level routing identifies a presearched path on the low-level grid graph (LLG) in each tile.</p><p>We latticed the entire PCB routing area to construct an LLG for the SER. Specifically, Fig. <ref type="figure" target="#fig_0">1</ref>(b) presents a latticed LLG for the left component. First, we constructed vertical and horizontal gridlines to intersect the center of each bump ball of a component (thick blue dotted line). In addition, we produced two basic diagonal gridlines starting from the upper left and upper right corners of each component to pass through the centers of the bump balls along the two lines (thick purple dotted line). Subsequently, we latticed the space between a bump ball and its vicinal ball or area boundary according to the maximal routing pitch among all nets (thin blue dotted line). For the remaining diagonal gridlines, we latticed the component area from two basic diagonal gridlines toward the upper right and lower left and upper left and lower right with a fixed-distance routing pitch. Fig. <ref type="figure" target="#fig_2">3</ref>(a) presents a complete and partial LLG for the left and right components, respectively. To obtain a consistent cross-free escape order, we propose a cross-free edge (CFE) (yellow dotted lines) to connect the two related fan-out nodes on the boundaries of two opposite components to ensure a cross-free escape order among all components [Fig. <ref type="figure" target="#fig_2">3(a)</ref>].</p><p>A vertex is present at the intersection (M-intersection) of each horizontal and vertical gridline. For traditional routing of graphs with diagonal gridlines, a vertex is present at the intersection (Dintersection) of each diagonal gridline and all other gridlines. However, this scheme produces excessive vertices and edges and greatly increases the computing complexity of SAT. For each Dintersection, we used the vertex at the M-intersection nearest to it to represent its related vertex. For example, vertex v represents vertices v1, v2, and v3 implicitly [Fig. <ref type="figure" target="#fig_2">3(a)</ref>]. Consequently, only v is in the routing graph, greatly diminishing edge and vertex complexity. For routing, two edges incident to v compose a wire segment; for example, the assignments (eh2, ed1) and (ed2, ed4) represent the black and brown wire segments in Fig. <ref type="figure" target="#fig_2">3(a)</ref>, respectively. In addition, two incident edges must be prohibited from forming an angle less than 135Â°, which is the assignment of (eh2, ed2).</p><p>For multilayer routing, to release resources for strict lengthmatching constraints and minimize the use of vias, we do not insert vias during area routing. After the SER assigns a net to a specific layer, the post-SER guides the net to its layer with the shortest wirelength before the via is inserted. The proposed method is applied with |Lr| identical and independent twodimensional LLGs for |Lr| layers.</p><p>The hierarchy of the routing graph is determined by a userdefined parameter, tile size (st), with which an HLG is constructed, in which each vertex (H-vertex) represents a region of st ï´ st vertices (L-vertex) in the LLG. Larger routing regions may require a routing graph with additional hierarchies. Fig. <ref type="figure" target="#fig_2">3</ref>(a) presents a 2 ï´ 2 HLG with an st of 3 and a 5 ï´ 5 LLG. The HLG has four vertices, each of which is represented by a tile with red dotted borders. The yellow vertices along the tile boundaries are the L-vertices in the LLG and imply the entry and exit points of each H-vertex. To avoid crossing multiple wires within an Hvertex, each H-vertex was designed as a compound vertex composed of 4 ï´ (st -1) ï­-vertices and 4 ï´ st â 2 internal ï­-edges. In addition, 4 ï´ st external ï­-edges realize the connection with the four adjacent H-vertices. Fig. <ref type="figure" target="#fig_2">3</ref>(a) depicts an H-vertex V3 and one type of ï­-edge, and Fig. <ref type="figure" target="#fig_2">3</ref>(b) depicts the other three types of ï­edges. One routing constraint for each H-vertex is that all wires in an H-vertex must pass through the same two sides, meaning that they must apply the same type of ï­-edge. For example, all wires crossing V3 must pass through its top and right sides. The capacity of each ï­-edge is 1; however, an external ï­-edge has no capacity if it is blocked by an obstacle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">SAT Formulation</head><p>Def. The vertex and edge sets of LLG for layer l are denoted as VLl and ELl, respectively, and those of HLG for layer l are denoted as ï­Vl and ï­El, respectively.</p><p>In LLG and HLG, each edge has |N| 0-1 variables (asg(e, n)) to indicate whether it is assigned to a net. However, if a pin in net n is located at one of the L-vertices in an H-vertex region vH, a 0-1 variable, asgv(ï­v, n), is created for each ï­-vertex of vH to indicate the ï­-vertex (source ï­-vertex) from which the coarse-level net routing starts. The SER identifies the following routes: a finelevel route from a pin to its source ï­-vertex for each pin in all nets, a coarse-level route for all nets, and a set of fine-level routes to satisfy the feasibility of coarse-level routing. The methods described in <ref type="bibr" target="#b6">[7]</ref> can be used to easily transform the following formulas into CNF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.1">Fine-Level Routing from a Pin to the Source ï­-Vertex</head><p>A. Layer Assignment Constraint: In a multilayer SER, the routing of each net is allocated to a specific layer:</p><formula xml:id="formula_0">âð â ð, â ð¿ð´(ð, ð) âðâð¿ ð = 1,<label>(1)</label></formula><p>where LA(n, l) is a 0-1 variable to indicate whether net n is assigned to layer l.</p><p>B. Source ï­-Vertex Selection: For each pin in net n, with assigned layer l, the following formula selects one ï­-vertex of the H-vertex containing the pin as the source ï­-vertex.</p><p>âð â ð, ð¿ð´(ð, ð) â â ðð ð ð£ (ï­ð£)</p><formula xml:id="formula_1">âï­ð£âï­ðð ð (ð) = 1,<label>(2)</label></formula><p>where ï­SVl(n) is the set of ï­-vertices of the H-vertex containing the pin in net n.</p><p>C. Pin Node Constraint: Each net n has two pins in two components, and its complete route has one incident edge for each pin vertex in the LLG of its assigned layer. ï¢nïN, ï¢pin vpïPVl(n), and ï¢lïLr,</p><formula xml:id="formula_2">ð¿ð´(ð, ð) â â ðð ð(ð, ð) âðâð¼ð¶ð·(ð£ ð ,ð) = 1,<label>(3)</label></formula><p>where G. Acute Angle Constraint: The angle formed by two adjacent wire segments must be at least 135Â° in PCB designs.</p><p>ï¢nïN, ï¢lïLr, ï¢vïVl, and ï¢e1, e2ïICD(v,l),</p><formula xml:id="formula_3">~ðð ð(ð 1 , ð) â¨ ~ðð ð(ð 2 , ð) if VIOang(v, e1, e2) = 1,<label>(7)</label></formula><p>where VIOang(v, e1, e2) is a look-up table to determine whether the angle formed by the two incident edges e1 and e2 of v is invalid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.2">Coarse-Level Routing with Tile Propagation</head><p>In the proposed two-level hierarchical routing, tile propagation is used to realize coarse-level routing. For each pin in a net, the selected source ï­-vertex is the terminal to be connected in the coarse-level routing.</p><p>A. Terminal ï­-Vertex Constraint: For a two-terminal routing, each terminal requires only one incident edge in the routing. ï¢nïN, ï¢lïLr, and ï¢ï­vïï­SVl(n),</p><formula xml:id="formula_4">ðð ð ð£ (ï­ð£) â â ðð ð(ï­ð, ð) âï­ðâðð¼ð¶ð·(ï­ð£,ð) = 1, ~ðð ð ð£ (ï­ð£) â â ðð ð(ï­ð, ð) âï­ðâðð¼ð¶ð·(ï­ð£,ð) = 0,<label>(8)</label></formula><p>where ï­ICD(ï­v, l) is the set of incident ï­-edges of ï­-vertex ï­v. (9)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Nonterminal ï­-Vertex</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.3">Realization of Coarse-Level Routing</head><p>One ï­-edge in the HLG represents several possible routes in the LLG connecting the two corresponding vertices of its connected ï­-vertices. In this work, we provide at most Pnum path candidates consisting of edges in the LLG to realize each ï­-edge, where Pnum is a user-defined constant, and a higher Pnum implies higher routing flexibility provided by the SER. For example, for the condition in which Pnum is set as 3, the ï­-edge Rt in the HLG of Fig. <ref type="figure" target="#fig_2">3(c</ref>) can be one of three routing paths, P1, P2, and P3. ï¢nïN, ï¢lïLr, and ï¢ï­eïï­El,</p><formula xml:id="formula_5">ðð ð(ï­ð, ð) â (â ðð ð â (ðð, ð) = 1 âððââ(ï­ð) ),<label>(10)</label></formula><p>where ï(ï­e) is the path set of size Pnum to realize the route of ï­e, and asgï(rp, n) implies whether routing path rp realizes ï­e.</p><p>ï¢nïN, ï¢lïLr, ï¢ï­eïï­EL, and ï¢rpïï(ï­e)</p><formula xml:id="formula_6">ðð ð ï (ðð, ð) â (â ðð ð(ð, ð) âðâð¸ â (ðð) ),<label>(11)</label></formula><p>where Eï(rp) is the set of edges in El to construct path rp.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.4">DP Routing</head><p>A DP is a pair of nets required to be tightly coupled during routing and is a typical constraint for PCB routing. We established a DP box, a rectangle to enclose the centers of two net pins, for the initial DP routing. On the basis of the DP routing direction for leaving the DP box, one pin must be proximal to the other pin at the boundary of the DP box. For example, Fig. <ref type="figure">4(a</ref> .</p><p>(13)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.5">Edge Variable and Clause Reduction</head><p>Following the definition in Sec. 3.1.1, an LLG and HLG are present on each layer with independent edge and ï­-edge sets; however, after a net is assigned to a specific layer l, it can only use the edges in El and the ï­-edges in ï­El. Thus, using a single edge set E and ï­E for all layers is feasible. With this scheme, the number of SAT variables and clauses can be greatly reduced. We redefined ICD(v, l) and ï­ICD(ï­v, l) as the incident edge and ï­edge set of vertex v and ï­-vertex ï­v, respectively. Moreover, Eq. ( <ref type="formula">6</ref>) was refined to certify that vertex v is in a routing path if one of its incident edges is also in the path and the net is assigned to layer l. . (6 m )</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">MAX-SAT-Based Post-SER With Fan-Out</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Refinement</head><p>The space between two adjacent fan-out nodes is crucial for fulfilling length-matching constraints in which a larger space </p><formula xml:id="formula_7">Lenfo(ï(n))=ð¿ðð ðð (â ðð ) Ã ðð¿(ððº(ð))â ðð¿(ð) â ðð¿(ððº(ðâ²))â ðð¿(ðâ²) ðâ²âð ,<label>(14)</label></formula><p>where Lenfo(ï(n)) is the length of the fan-out area for net n, Lenfo(ïfo) is the total length of ïfo, MG(n) is the length-matching group of net n, WL(n) is the wirelength of net n in escape routing, and TL(mg) is the target length defined as the maximum length of the escape routing of all nets in group mg. A net with a larger wirelength slack has less wirelength in the escape routing than those of other nets in its group, and thus requires a larger free space next to its adjacent nets in the fan-out region for inserting snaking wires. With Eq. ( <ref type="formula" target="#formula_7">14</ref>), the fan-out region is allocated to each net according to its wirelength slack. Fig. <ref type="figure">5</ref> presents the fanout refinement.</p><p>In addition, the given fan-out location and layer assignment can reduce problem complexity through the application of MAX-SAT to optimize the SER result with minimum total wirelength. The MAX-SAT problem has two types of clauses, hard and soft. The solution is an assignment that satisfies all hard clauses and maximizes the number of satisfied soft clauses. The following soft clause facilitates the minimization of the number of used edges of the LLG. ï¢nïN, and ï¢eïE, (Soft clause) ~ðð ð(ð, ð).</p><p>(15)</p><p>In the post-SER, the CFEs are no longer necessary because each net has a fixed fan-out location. In addition, the SER must determine the assigned layer for each net, whereas the post-SER already determines the nets to be routed on each layer. The post-SER of each component can be conducted independently. For the post-SER of a component, each net has two pins, one at a bump ball and the other at a fan-out location. We applied Eq. ( <ref type="formula" target="#formula_1">2</ref>) to Eq. ( <ref type="formula">13</ref>) without the 0-1 variable of layer assignment, namely LA(n, l), as the hard clause, and the MAX-SAT post-SER was then formulated by applying Eq. (2) to Eqs. ( <ref type="formula">13</ref>) and (15).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Area Routing</head><p>The terminals to be routed in area routing are the fan-out locations of each component identified through the post-SER. Because the escape order of all components is consistent in each layer, the area routing in each layer is a single-layer routing problem. The main objective of area routing is to complete the routing by conforming to group length-matching constraints. The area routing procedure is as follows: First, an initial area routing without a right-angled corner for all nets must be identified by applying a refined gridless router. Second, certain vertical, horizontal, or diagonal wire segments are replaced with snaking wires to fulfill the group length-matching constraints.</p><p>To increase the wirelength of a routing path, we propose a flexible scheme incorporating snaking units defined by diagonal length (ldia), snaking unit height (hsna), and minimum peak width (wmip), where ldia is the length of the diagonal segment in the unit and wmip is the width of the peak of a snaking unit (Fig. <ref type="figure" target="#fig_8">6</ref>). The first two parameters determine the increase in wirelength, whereas the last parameter must hold the MSL rule. High-speed PCB designs require large wmip to prevent noise within a snaking unit. The proposed scheme involves two types of snaking patterns for increasing the wirelength of a wire segment. The tall pattern increases the length of wire segments with ample distance between its vicinal wire segments, and the flat pattern is for wire segments without much free space. Fig. <ref type="figure" target="#fig_8">6</ref> presents the routing of two nets, net i (one wire segment) and net j (four wire segments). For net i, we present two types of snaking units, tall and flat, with snaking pitches P1sn and P2sn, respectively. With these three parameters and given free space (A) of fixed width (Aw) and height (Ah), the minimum and maximum wirelength increase can be obtained by replacing a wire segment with snaking wires.</p><formula xml:id="formula_8">ð¤ðððð â ððð = 2 Ã (1 â 1 â2 â ) Ã ð ððð ,<label>(16)</label></formula><formula xml:id="formula_9">ð¤ðððð â ððð¥ = 2 Ã ð¤ðððð â ððð + 2 Ã (â ð ðð â 2 â2 Ã ð ððð )), (<label>17</label></formula><formula xml:id="formula_10">)</formula><p>where hsna is Ah minus the sum of minimum wire width and minimum spacing between nets i and j; namely, sp(i, j).</p><p>If the maximum wirelength increase of a free region is less than the required slack, the wire segment is replaced with snaking wires to match the wirelength increase. Otherwise, a snaking wire with the required slack is employed using a snaking unit whose hsna can be calculated as follows:</p><formula xml:id="formula_11">â ð ðð = (ð ð ðððð â 2 Ã ð¤ðððð â ððð + 2â2 Ã ð ððð )/2, (<label>18</label></formula><formula xml:id="formula_12">)</formula><p>where lslack is the required wirelength to overtake the length of the other nets.</p><p>Given a fixed free area A of width Aw between two adjacent wire segments, the number of snaking units (NUsna) in A is obtained using the following equation:</p><formula xml:id="formula_13">ðð ð ðð = { ð´ ð¤ (â2 Ã ð ððð + ð¤ ððð ) â , ð¡âð ðððð¡ ð¢ððð¡ ðð  ðð ð¢ð ð ð´ ð¤ (2â2 Ã ð ððð + ð¤ ððð ) â , ðð¡âððð¤ðð ð .<label>(19)</label></formula><p>One type of snaking unit was used in a free area.</p><p>To fulfill the group length-matching constraints, we greedily process the nets group-by-group. The group with the largest slack was processed first. The wire segments of a routing path are examined sequentially, and one of the aforementioned two conditions determines which policy of maximum or exact length increase is adopted for the current wire segment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTAL RESULTS</head><p>The proposed PCB routing framework was implemented using C++ on a Linux platform with a 2.4 GHz quad-core CPU and 100 GB of memory. We applied Open-Weighted Boolean Optimization as our SAT and MAX-SAT solver for the SER and post-SER and exploited seven industrial cases as our testing benchmarks. We also implemented the SER from <ref type="bibr" target="#b5">[6]</ref> with C++ for subsequent comparisons. To evaluate the effectiveness of the proposed SER, it is compared with the multilayer SER provided in <ref type="bibr" target="#b5">[6]</ref> (Table <ref type="table" target="#tab_1">I</ref>), where the number of utilized layers (#Layer) and vias (#Via) for each benchmark are reported; in addition, total #Layer and #Via and the success rate (SR) are presented in the last two rows. A PCB routing is a success if the #Layer is not larger than the number of available layers (|Lr|) of the benchmark. According to the results in Table <ref type="table" target="#tab_1">I</ref>, the proposed SER is capable of providing more favorable results in all benchmark circuits, including small (b01 and b03), medium (b02 and b07), and large designs (b04, b05, and b06). For all cases, the proposed SER supplies less or equal #Layer and #Via in comparison with the SER from <ref type="bibr" target="#b5">[6]</ref>. On average, the proposed SER uses 27.5% less #Layer and 25.4% less #Via than the compared SER. In terms of SR, the proposed SER achieves a 100% SR, whereas only two cases (b03 and b06) are successfully resolved by the algorithm from <ref type="bibr" target="#b5">[6]</ref>.</p><p>Table <ref type="table" target="#tab_2">II</ref> presents the evaluation of the PCB routing results for a commercial PCB router (Co.) and the proposed PCB router in terms of the number of open violations (#Open Vio.), the number of short and spacing violations (#S&amp;S), the number of lengthmatching violations (#LM Vio.), wirelength (WL), and the runtime (RT). The complexity of cases b05 and b06 results in program failure in the commercial PCB router after a full day of execution; however, although the commercial router can produce results for the remaining designs, dozens of violations remain unresolved for designs that do not cause program failure. Therefore, it is not available to obtain the #LM Vio. and compare the WL and RT because open violations remain unresolved. The evaluation result indicates that our framework is capable of completing the routing of industrial designs within a reasonable time (&lt; 2hrs) without violation. Fig. <ref type="figure">7</ref> presents the PCB routing results, including for the SER (green wires) and area routing (orange wires), of the top and S3 layers for b05, which consists of a CPU and eight DDR components. The black objects in the top layer are the obstacle bump pads typically located at the top or bottom layers. Vias around bump balls are not displayed.</p><p>To provide a fair comparison basis for subsequent related researches, after removing confidential information of PCB designs, we shall release the PCB designs we use in this work on the web site: https://people.cs.nctu.edu.tw/~ylli/source_code.html.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSION</head><p>This is the first work to propose a complete PCB routing methodology. The proposed SAT-based concurrent hierarchical SER and MAX-SAT-based post-SER refinement are capable of completing layer assignment and generating a consistent escape order in each layer among all components of the PCB, minimizing the number of required vias, and providing a strong foundation for fulfilling group length-matching constraints for a given PCB design. The proposed SAT formulation also efficiently manages DP routing. The proposed flexible snaking unit can help increase the wirelength of a net with length slack to a satisfactory level. The experiment results demonstrate that the proposed PCB routing successfully completes the routings of seven commercial PCB designs, whereas the commercial PCB tool does not solve any of them.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Examples of (a) UER; (b) SER and area routing with DPs (2,3) and snaking wires; (c) three-layer SER through limited patterns in [6]; (d) two-layer SER with different layer assignments; and (e) vias in the area routing region.</figDesc><graphic url="image-5.png" coords="1,376.80,387.24,134.52,62.04" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Flow of the proposed PCB routing algorithm.</figDesc><graphic url="image-7.png" coords="2,66.00,53.88,214.20,83.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Illustration of SER. (a) Two-level hierarchical routing with a 5 ï´ 5 LLG and a 2 ï´ 2 HLG; (b) three other types of ï­-edges; (c) three routing paths of the Rt of HLG. (b) (c)</figDesc><graphic url="image-9.png" coords="2,452.40,149.04,105.60,66.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>PVl(n) is the set of pin vertices of net n in Vl, and ICD(v,l) is the set of incident edges of vertex v in Vl. D. Non-pin Vertex Constraint: Each non-pin vertex v in Vl has zero or two incident edges used by a route. ï¢nïN, ï¢lïLr, and ï¢non-pin vertex vïVl, ï­-Vertex Connection: Each ï­-vertex has a corresponding vertex in the LLG along the tile boundary of the H-vertex. To ensure the connection to the corresponding vertex (vmap(ï­sv)) of selected source ï­-vertex ï­sv in the LLG, two incident edges to vmap(ï­sv) must be in the route. ï¢nïN, ï¢lïLr, and ï¢ï­vïï­SVl(n) ðð ð ð£ (ï­ð£, ð) â â ðð ð(ð, ð) âðâð¼ð¶ð·(ð£ ððð (ï­ð£),ð) = 2. (5) F. Short Violation Constraint: A vertex in the LLG can only be used by one net, and the assignment of two or more incident edges of a vertex to more than one net results in a short violation. Each net n has an encoded bit string bn = bn(0)â¦bn(k), where k is âlog2|ð|â. Each vertex v in has a 0-1 variable list b = b(v, 0)â¦b(v, k) to store the net passing through v. With this scheme, the condition that bn equals b implies that v is used by net n. ï¢nïN, ï¢lïLr, ï¢vïVl, and ï¢eïICD(v,l), ðð ð(ð, ð) â â { ð(ð£, ð), ðð ð ð (ð)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Constraint: Similar to the routing in the LLG, each nonterminal ï­-vertex has either 0 or 2 incident ï­edges for the coarse-level routing. ï¢nïN, ï¢lïLr, ï¢ï­vïï­Vl, and ïï­SVl(n)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>) presents the DP d1 and d2. Net d2 goes downward to align with d1 at the bottom border of BXdp. Subsequently, d1 and d2 are tightly coupled during routing. To guarantee tightly coupled routing, we propose the tightly coupled routing unit (TCRU), a 4 ï´ 3 or 3 ï´ 4 grid subgraph for vertical or horizontal routing. The base net can be any one of two DP nets, and the base net uses the edges at the middle row or column of the TCRU for horizontal or vertical routing. The other net follows the route of the base net by using one of the six tightly coupled edges (TCEs) along two sides of the TCRU. For example, in Fig.4(b), horizontal edge d1h, vertical edge d1v, and diagonal edge d1d are used by d1, so at least one of six TCEs along two sides of the TCRU should be assigned to d2. DP diagonal routing also follows this scheme.ï¢DP (d1, d2), ï¢lïLr, and ï¢eïEl outside the BXdp,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>ï¢nïN, ï¢lïLr, ï¢vïVl, and ï¢eïICD(v,l), (ðð ð(ð, ð) â§ ð¿ð´(ð, ð)) â â { ð(ð£, ð), ðð ð ð (ð) = 1 ~ð(ð£, ð), ðð¡âððð¤ðð ð ð ð=0</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Fig. 4. Illustration of (a) DP routing; (b) TCRU and TCE of base net d1. (a) (b)</figDesc><graphic url="image-11.png" coords="4,436.92,59.64,114.12,82.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Types of snaking units.</figDesc><graphic url="image-15.png" coords="5,73.44,53.88,197.16,130.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I .</head><label>I</label><figDesc>SER COMPARISON WITH<ref type="bibr" target="#b5">[6]</ref> </figDesc><table><row><cell></cell><cell>#Open Vio.</cell><cell cols="2">#S&amp;S</cell><cell cols="2">#LM Vio. WL (mils)</cell><cell>RT (min:sec)</cell></row><row><cell></cell><cell cols="5">Ours Co. Ours Co. Ours Co.</cell><cell>Ours</cell><cell>Co.</cell><cell>Ours</cell><cell>Co.</cell></row><row><cell>b01</cell><cell cols="4">0 10 0 30 0</cell><cell>n/a 40854 39689 14:17 1:30</cell></row><row><cell>b02</cell><cell cols="4">0 12 0 47 0</cell><cell>n/a 36344 26025 15:58 150:00</cell></row><row><cell>b03</cell><cell cols="4">0 15 0 16 0</cell><cell>n/a 45474 50458 19:26 90:00</cell></row><row><cell>b04</cell><cell cols="4">0 35 0 52 0</cell><cell>n/a 143113 120418 34:53</cell><cell>1:15</cell></row><row><cell>b05</cell><cell cols="4">0 n/a 0 n/a 0</cell><cell>n/a 658916 n/a</cell><cell>89:34 &gt; 24 hrs</cell></row><row><cell>b06</cell><cell cols="4">0 n/a 0 n/a 0</cell><cell>n/a 436951 n/a</cell><cell>68:46 &gt; 24 hrs</cell></row><row><cell>b07</cell><cell cols="2">0 19 0</cell><cell>8</cell><cell>0</cell><cell>n/a 65576 59765 32:11 40:00</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II</head><label>II</label><figDesc></figDesc><table /><note>. PCB ROUTING COMPARISON WITH COMMERCIAL PCB ROUTER Fig. 7. PCB routing results of the top and S3 layers for b05.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2021" xml:id="foot_0">58th ACM/IEEE Design Automation Conference (DAC) | 978-1-6654-3274-0/21/$31.00 Â©2021 IEEE | DOI: 10.1109/DAC18074.2021.9586143 Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 07:05:12 UTC from IEEE Xplore. Restrictions apply.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1">Authorized licensed use limited to: Tsinghua University. Downloaded on December 31,2022 at 07:05:12 UTC from IEEE Xplore. Restrictions apply.</note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the Ministry of Science and Technology under Grant MOST 109-2221-E-009 -109 -MY2, MOST 109-2622-8-009-014 -TA and MOST 110-2622-8-009-006 -TA.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A correct network flow model for escape routing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of DAC</title>
				<meeting>of DAC</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="332" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Ordered Escape Routing Based on Boolean Satisfiability</title>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ASP-DAC</title>
				<meeting>of ASP-DAC</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="244" to="249" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On Using SAT to Ordered Escape Problems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">F</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ASP-DAC</title>
				<meeting>of ASP-DAC</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="594" to="599" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">B-escape: A simultaneous escape routing algorithm based on boundary routing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ISPD</title>
				<meeting>of ISPD</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="19" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A New Strategy for Simultaneous Escape Based on Boundary Routing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE TCAD</title>
				<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="205" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Algorithms for Simultaneous Escape Routing and Layer Assignment of Dense PCBs</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Ozdal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In IEEE TCAD</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1510" to="1522" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Translating pseudo-Boolean constraints into SAT</title>
		<author>
			<persName><forename type="first">N</forename><surname>Een</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Sorensson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal on Satisfiability, Boolean Modeling and Computation</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1" to="26" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
