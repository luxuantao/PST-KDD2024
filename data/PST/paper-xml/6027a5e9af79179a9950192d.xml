<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Delay-aware Microservice Coordination in Mobile Edge Computing: A Reinforcement Learning Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Shangguang</forename><surname>Wang</surname></persName>
							<email>sgwang@bupt.edu.cn</email>
						</author>
						<author>
							<persName><forename type="first">Yan</forename><surname>Guo</surname></persName>
							<email>guoyan@bupt.edu.cn</email>
						</author>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Ning</forename><surname>Zhang</surname></persName>
							<email>ning.zhang@tamucc.edu</email>
						</author>
						<author>
							<persName><forename type="first">Peng</forename><surname>Yang</surname></persName>
							<email>p38yang@uwaterloo.ca</email>
						</author>
						<author>
							<persName><forename type="first">Ao</forename><surname>Zhou</surname></persName>
							<email>aozhou@bupt.edu.cn</email>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Sherman</forename><surname>Shen</surname></persName>
							<email>sshen@uwaterloo.ca</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">State Key Laboratory of Networking and Switching Technology</orgName>
								<orgName type="institution">Beijing University of Posts and Telecommunications</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computing Sciences</orgName>
								<orgName type="institution">Texas A&amp;M University-Corpus Christi</orgName>
								<address>
									<addrLine>6300 Ocean Dr</addrLine>
									<settlement>Corpus Christi</settlement>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>ON</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Delay-aware Microservice Coordination in Mobile Edge Computing: A Reinforcement Learning Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C09B9905CCABA2A6E3EB10DB0724D266</idno>
					<idno type="DOI">10.1109/TMC.2019.2957804</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:21+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Microservice</term>
					<term>mobile edge computing</term>
					<term>coordination</term>
					<term>delay</term>
					<term>migration</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>As an emerging service architecture, microservice enables decomposition of a monolithic web service into a set of independent lightweight services which can be executed independently. With mobile edge computing, microservices can be further deployed in edge clouds dynamically, launched quickly, and migrated across edge clouds easily, providing better services for users in proximity. However, the user mobility can result in frequent switch of nearby edge clouds, which increases the service delay when users move away from their serving edge clouds. To address this issue, this paper investigates microservice coordination among edge clouds to enable seamless and real-time responses to service requests from mobile users. The objective of this work is to devise the optimal microservice coordination scheme which can reduce the overall service delay with low costs. To this end, we first propose a dynamic programming-based offline microservice coordination algorithm, that can achieve the globally optimal performance. However, the offline algorithm heavily relies on the availability of the prior information such as computation request arrivals, time-varying channel conditions and edge cloud's computation capabilities required, which is hard to be obtained. Therefore, we reformulate the microservice coordination problem using Markov decision process framework and then propose a reinforcement learning-based online microservice coordination algorithm to learn the optimal strategy. Theoretical analysis proves that the offline algorithm can find the optimal solution while the online algorithm can achieve near-optimal performance. Furthermore, based on two real-world datasets, i.e., the Telecom's base station dataset and Taxi Track dataset from Shanghai, experiments are conducted. The experimental results demonstrate that the proposed online algorithm outperforms existing algorithms in terms of service delay and migration costs, and the achieved performance is close to the optimal performance obtained by the offline algorithm.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>D RIVEN by container technology, microservice architec- ture can decompose a monolithic web service into a set of lightweight services which can be executed independently <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b2">[3]</ref>. Compared with monolithic architecture, microservice architecture can bring flexibility and scalability because individual microservice can be deployed, migrated, and removed on demand during runtime <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>. Therefore, it has drawn great attention from both academia and industry. For instance, many enterprises are replacing monolithic architecture by microservice architecture, such as Facebook, AT&amp;T, Amazon 1 , Netflix 2 , and Uber 3 . On the network side, mobile edge computing emerges as a new network architecture, where edge clouds are deployed at base stations by endowing the latter with cloud function-1. https://thenewstack.io/led-amazon-microservices-architecture/ 2. https://www.nginx.com/blog/microservices-at-netflix-architectu ral-best-practices/ 3. https://eng.uber.com/soa/ alities <ref type="bibr" target="#b5">[6]</ref>- <ref type="bibr" target="#b10">[11]</ref>. Combining microservice architecture with mobile edge computing has attracted much attentions. Microservices in edge clouds can provide proximity services for nearby mobile users with low delay. Moreover, they can be deployed dynamically, launched quickly, and migrated easily on demand.</p><p>Along with the aforementioned benefits come the great challenges. Due to the limited coverage of an edge cloud and high user mobility (e.g., autonomous vehicles), the service delay can be greatly deteriorated when users move away from their serving edge clouds <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>. It is of significance yet very challenging to ensure that moving users can still receive services with low delay. However, the majority of existing studies on microservice deployment and scheduling only deal with a static network and fixed service requests <ref type="bibr" target="#b13">[14]</ref>- <ref type="bibr" target="#b15">[16]</ref>. The dynamically changing resource availability and service requests related to user mobility are seldom considered in mobile edge computing environment. To address this issue, service migration is proposed, which deals with whether, how, and where the service should be migrated when users change their locations <ref type="bibr" target="#b16">[17]</ref>- <ref type="bibr" target="#b19">[20]</ref>. However, they only focus on migration of a single service, without considering other deployed services that can serve mobile users and fail to fully utilize the dynamic network resources.</p><p>In mobile edge computing, the coordination of microservices deployed across edge clouds plays a significant role in providing seamless and real-time services to mobile users. It requires that the running microservices on some edge clouds can be deployed quickly in any edge cloud. The critical question is how to choose the optimal edge cloud to run the microservices for mobile users. Specifically, microservice coordination in mobile edge computing is mainly to determine which edge cloud should perform the microservices, taking into account the user mobility and the dynamics in the network.</p><p>A sample scenario is illustrated in Fig. <ref type="figure" target="#fig_0">1</ref>, where an autonomous vehicle detects cars, pedestrians, cyclists, road signs, and other objects in real time to make the appropriate control decisions for driving safety <ref type="bibr" target="#b20">[21]</ref>. In this scenario, there are one Internet cloud, five edge clouds, nineteen base stations, and one automatic vehicle. An edge cloud is responsible for all base stations located within its coverage, and a base station only connects with a single edge cloud. The object detection microservices are deployed on some edge clouds. The microservices are performed by edge clouds for autonomous vehicle with limited computational capabilities <ref type="bibr" target="#b21">[22]</ref>  <ref type="bibr" target="#b22">[23]</ref>. Suppose that the vehicle has a trajectory shown in Fig. <ref type="figure" target="#fig_0">1</ref>. When the vehicle is within the coverage of edge cloud c 1 , the object detection can be performed by the microservices in c 1 . When the vehicle reaches edge cloud c 2 , the object detection can be performed by the original microservices in c 1 with a long communication delay, or by c 3 or c 4 with computation data migration, or by c 2 with quick microservice deployment and computation data migration. Note that, the computation data migration is to migrate the unfinished computation task and intermediate computation state (file system and memory state) to synchronize instances. A microservice should be deployed rapidly if there is no such microservice in the selected edge cloud. Similarly, when the vehicle reaches c 4 , the object detection can be performed by c 4 directly, or by other edge clouds with possible computation migration and microservice deployment or by Internet cloud. When the vehicle reaches c 5 , the object detection can be performed by any edge cloud or Internet cloud. Therefore, microservice coordination is to coordinate the microservices within different edge clouds to perform real-time object detection during the entire journey of mobile users.</p><p>When an autonomous vehicle moves from the coverage of one edge cloud to the coverage of another edge cloud, multiple edge clouds with different computation capabilities are available to either perform the microservices or deploy the microservices. The object detection can be performed in three different ways, i.e., by the previously serving edge cloud, by Internet cloud or the edge clouds deployed with the microservices, or by the current edge cloud with no microservices where the microservices will be deployed. In the first case, there is no migration delay and cost for computation data migration and microservice deployment, but at the expense of communication delay. In the second case, no microservice deployment is needed, but at the expense of communication and migration delay and migration cost. In the third case, the communication delay is lowest, with the expense of potential migration delay and cost. Therefore, there exists a trade-off between the overall service delay and migration cost in microservice coordination. An optimal microservice coordination scheme is urgently needed to coordinate edge clouds for performing the microservice sequentially, in order to reduce the overall delay and migration cost. Note that, microservice coordination for the duration of a mobile user's journey is not a simple repetitive selection of edge clouds. The current coordination decisions may change the microservice deployment, which in turn affect the subsequent decisions.</p><p>In this paper, we investigate the microservice coordination problem with the objective of minimizing the overall delay and migration cost. The main contributions of this work are summarized as follows:</p><p>1) We first study the microservice coordination with the availability of information regarding the service requests, computational capabilities of the edge clouds, and the channel conditions. We formulate it as a shortest-path problem with a look-ahead time window and propose a dynamic programming-based offline microservice coordination algorithm. Through theoretical analysis, it is proved that such offline algorithm can achieve the optimal solution. 2) Furthermore, we investigate the microservice coordination problem without prior information. We formulate it as Markov decision process and propose a reinforcement learning (RL)-based online microservice coordination algorithm to the optimal decision. Through theoretical analysis, it is proved that the proposed online algorithm can achieve near optimal solution. 3) Experiments are implemented based on two real-world datasets, i.e., Shanghai Telecom's base station dataset and Shanghai Taxi Track dataset. The results demonstrate that the offline microservice coordination algorithm can find the optimal solution with the lowest delay and migration cost while the online microservice coordination algorithm can achieve close-to-optimal performance. The remainder of the paper is organized as follows. Section 2 reviews related work. Section 3 presents the system model and problem formulation. Section 4 proposes the dynamic programming-based offline microservice coordination algorithm. Section 5 presents the RL-based online microservice coordination algorithm and the performance</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Microservice architecture has significant benefits in terms of flexibility and scalability, compared with the traditional monolithic architecture. Microservice has been drawing great attentions in the literature <ref type="bibr" target="#b13">[14]</ref>.</p><p>To provide complex services for users using deployed microservices, it is necessary to schedule the distributed microservices in chains appropriately <ref type="bibr" target="#b14">[15]</ref>  <ref type="bibr" target="#b23">[24]</ref>. For example, Bhamare et al. <ref type="bibr" target="#b24">[25]</ref> studied the scheduling of microservices among multiple clouds, and presented a affinitybased scheduling heuristic method to reduce the overall turnaround time of an end-to-end service and the total traffic generated. Niu et al. <ref type="bibr" target="#b15">[16]</ref> proposed a microservice chain-oriented load balancing algorithm which balances the working load based on the microservice requirements of chains and minimizes delay. However, these studies on microservice deployment and scheduling mainly focus on static networks and fixed service requests. The presence of dynamically changing resource availability and service requests related to user mobility in a mobile edge computing environment has not been considered sufficiently.</p><p>With user mobility, it becomes of great challenges to enable seamless and real-time responses to service requests from mobile users. To address this issue, service migration is proposed, which deals with whether, how, and where the service should be migrated when users change their locations <ref type="bibr" target="#b16">[17]</ref>- <ref type="bibr" target="#b19">[20]</ref>. For example, Yao et al. <ref type="bibr" target="#b25">[26]</ref> studied the VM migration in Vehicle Ad-Hoc Network, to minimize the overall network cost for migration and normal data traffic. Ksentini et al. <ref type="bibr" target="#b26">[27]</ref> considered 1-D user mobility model and then formulate the mobility driven service migration problem as a Markov decision process. Then, the mobility model is extended to 2-D mobility in <ref type="bibr" target="#b27">[28]</ref>  <ref type="bibr" target="#b28">[29]</ref>. Taleb et al.</p><p>[29] considered 2-D random walk mobility model and apply a Markov decision process based algorithm for optimizing service migration decisions. Further, Plachy et al. <ref type="bibr" target="#b29">[30]</ref> exploited prediction of users' movement and proposed an algorithm to find the most suitable data communication path or VM migration. In addition, Zhang et al. <ref type="bibr" target="#b30">[31]</ref> proposed a deep RL based virtual machine migration approach. Tang et al. <ref type="bibr" target="#b31">[32]</ref> proposed a container migration algorithm to support mobility tasks with various application requirements. Sun et al. <ref type="bibr" target="#b32">[33]</ref> developed a user-centric energy-aware service migration scheme by joint optimizing the radio resource and the computational resource.</p><p>However, these studies only focus on the migration of a single service, without considering other deployed services that can serve mobile users. They fail to fully utilize network resources. In contrast to the above studies, we focus on microservice coordination in mobile edge computing while considering microservices already deployed in many edge clouds. In our microservice coordination scheme, users not only can access service from the current edge cloud or the edge cloud which the service is migrated to, but also from other edge clouds where the microservices have already been deployed. Different from the migration of a single service, the migration in microservice coordination refers to the migration of unfinished tasks, not specific microservices. The microservices will not disappear with the migration of the tasks of a single user, and can still provide service for other users. The coordination of microservices in different edge clouds aim to find the optimal sequence of edge clouds to perform the microservices for mobile users, which encompasses the selection of edge clouds and dynamic microservice deployment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SYSTEM MODEL AND PROBLEM DEFINITIONS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">System Model</head><p>As shown in Fig. <ref type="figure" target="#fig_0">1</ref>, we consider a mobile edge network G = (B ∪C, E) with a number of base stations, a set of edge clouds placed at the base stations, and an Internet cloud. Denote B as the set of base stations, C as the set of clouds, and E as the set of links between base stations. In addition, m and n denote the number of base stations and clouds in B and C, respectively. Each base station b i ∈ B(1 i m) is assigned to one and only one edge cloud. All edge clouds together with an Internet cloud can provide service for users. The Internet Cloud host all of the microservices. Each cloud c i ∈ C(1 i n) can be either an edge cloud or an Internet cloud. The microservice configuration in a mobile edge network is denoted by H = {h i,t }(1 i n, t = 1, ...), where h i,t represents whether cloud c i hosts the microservices at time t. Here, h i,t = 1 if cloud c i hosts the microservices at time t; otherwise, h i,t = 0. Note that ∀t, h i,t = 1 if c i denotes an Internet cloud. In Fig. <ref type="figure" target="#fig_0">1</ref>, there are 19 base stations, five edge clouds, and an Internet cloud. In addition, three microservices have been deployed according to the mobile access pattern in mobile edge computing <ref type="bibr" target="#b33">[34]</ref>.</p><p>In Fig. <ref type="figure" target="#fig_0">1</ref>, the autonomous vehicle captures images (video) continuously and then transmits the detection task to nearby edge clouds through the local base stations. Note that we call the edge cloud that is responsible for the local base station of the mobile user the nearby edge cloud. For simplicity, we assume that the autonomous vehicle follows a certain path to its destination. Its trajectory is denoted by L u = {l u (t)}, where l u (t) denotes the location of the vehicle at time t. As the vehicle moves, its local base station switches seamlessly and automatically according to the mobility management protocol communication networks. The switch among base stations leads to the automatic switch of the vehicle's nearby edge cloud. Therefore, we can determine the nearby edge cloud of the user at time t (which is denoted by e(t)) according to L u . To handle the case in which the autonomous vehicle moves from the coverage of one edge cloud to the coverage of another edge cloud, i.e., e(t) = e(t -1), a service coordination scheme is needed to determine which edge cloud performs the computation task and whether new microservices should be deployed. The objective of microservice coordination is to minimize the overall delay (consisting of computation delay, transmission delay, and migration delay) and the migration cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Problem Definitions</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Computation Delay</head><p>The vehicle captures videos and transmits the entire detection task to edge clouds for computing. The task at time t can be represented by a three-parameter model A(p t , τ t , w t ), where p t denotes the task input size (in bits), τ t denotes the completion deadline (in seconds), and w t is the computational intensity (in CPU cycles per bit). Taking the realtime pedestrian detection application as an example, the vehicle generates a video stream detection task that will be computed on the edge cloud. During each time slot, the vehicle transmits a video clip with a data size of p t .</p><p>Each edge cloud can allocate computational resources for multiple tasks from different users simultaneously by processor sharing. However, the edge clouds have relatively limited computational resources. It is necessary to consider the non-negligible task execution time in a general mobile edge computing system. Let f i,t denote the computational intensity (i.e., CPU frequency) that edge cloud c i can allocate to the task p t . If edge cloud c i is selected to execute the task p t , the task execution time, denoted by r e (i, t), can be calculated as</p><formula xml:id="formula_0">r e (i, t) = p t w t f i,t .<label>(1)</label></formula><p>Note that the computation delay is defined as infinity if f i,t = 0. Furthermore, when the task generated at time t arrives at edge cloud c i , there may be some unfinished tasks waiting for processing due to the limited computational capacity of edge clouds. Therefore, the queuing time should be taken into account. Then, the total computation delay for task p t performed by edge cloud c i is</p><formula xml:id="formula_1">r c (i, t) = r e (i, t) + r q (i, t),<label>(2)</label></formula><p>where r q (i, t) denotes the queuing time of task p t in edge cloud c i . Let w q i,t denote the computational intensity of unfinished tasks in edge cloud c i and f q i,t denote the computational intensity that edge cloud c i allocate to the task w q i,t . The queuing time can be computed by</p><formula xml:id="formula_2">w q i,t f q i,t<label>.</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Communication Delay</head><p>The task data transmission can involve three steps: the data transmission from the vehicle to its local base station through the wireless channel; the data transmission from its local base station to the nearby edge cloud; and the data transmission from its nearby edge cloud to the selected edge cloud.</p><p>For the wireless channel, let g t denote the channel gain between the vehicle at location l u (t) and its local base station b t ∈ B. Denote S as the transmission power of the vehicle, W as the channel bandwidth, and N as the noise power. Then, the maximum transmission rate is</p><formula xml:id="formula_3">tr t = W log 2 (1 + Sg t N ).<label>(3)</label></formula><p>In the mobile edge network, let e i,j ∈ E denote the communication delay of each link between two base stations b i and b j . The topological structure of these base stations is</p><formula xml:id="formula_4">E =      e 1,1 • • • e 1,m . . . . . . . . . e m,1 • • • e m,m      ,<label>(4)</label></formula><p>where base station b i and base station b j are connected if e i,j is finite, otherwise, they are not connected.</p><p>Each edge cloud is implemented on a base station equipped with a server based on the existing network topology, so the path between a base station and its edge cloud as well as the path between edge clouds are composed of the links in the weighted graph E. Specifically, the path from local base station b t to selected edge cloud c i is the shortest path between b t and c i through e(t). Note that if c i denotes an Internet cloud, the path between b t and c i is the path from base station to Internet cloud through the nearby edge cloud e(t) and core network. Let d(i, t) denote the communication delay from the local base station to the selected edge cloud c i . Then, the overall communication delay of task p t is given by</p><formula xml:id="formula_5">r t (i, t) = p t tr t + d(i, t).<label>(5)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Migration Delay and Cost</head><p>When the vehicle moves and the serving edge cloud switches, an additional delay and cost are incurred because of the computation migration and possible deployment of microservices. Let x(t) ∈ C denote the edge cloud that serves the tasks at timeslot t. If the microservices cannot be found in x(t + 1), i.e., h x(t+1),t = 0, the microservices will be deployed rapidly. The unfinished computation task and intermediate data (file system and state data) are then migrated to x(t + 1) to synchronize instances.</p><p>The process of migrating computation data is inspired by pre-copy memory migration <ref type="bibr" target="#b12">[13]</ref>  <ref type="bibr" target="#b34">[35]</ref>. Here, all the migration data are pre transmitted from x(t) to x(t + 1) while the microservice is still running until prespecified criteria are met. Then, the running microservice is suspended and the remaining data are transferred to the destination edge cloud. During the computation migration, only the downtime, namely the time interval during which the microservice is not running, affects the user-perceived delay. Therefore, we only consider the downtime of migration, instead of the overall migration time. After the migration, the unfinished task will continue to be processed in edge cloud x(t + 1). Since the computation time of unfinished task at the previously serving edge cloud has been counted in Equation <ref type="formula" target="#formula_0">1</ref>, it needs to be recalculated. Therefore, the migration delay consists of the downtime of the migration and the new execution time of unfinished task.</p><p>The size of unfinished task at t is</p><formula xml:id="formula_6">p m t = min{p t , max{0, p t - t -r t (x(t), t) -r q (x(t), t) r e (x(t), t) p t }},<label>(6)</label></formula><p>where t is the length of a time slot. Let pt denote p t -t-rt(x(t),t)-rq(x(t),t) re(x(t),t) p t . If the communication delay is longer than a time slot, the pt is greater than or equal to p t , therefore p m t = p t and the whole task p t should be migrated. If only a part of task can be finished in one time slot, pt is the size of unfinished task and p m t = pt .If the task p t can be finished in one time slot, i.e., r t (x(t), t) + r c (x(t), t) t, pt is less than or equal to 0, therefore max{0, pt } = 0 and there is no data need to be migrated.</p><p>Therefore, the migration delay of p m t is:</p><formula xml:id="formula_7">r m (x(t), x(t + 1), t + 1) = λ t I{x(t + 1) = x(t)} + p m t w t f x(t+1),t+1 - p m t w t f x(t),t ,<label>(7)</label></formula><p>where λ t is the downtime of the migration and I{y} is an indictor function. I{y}=1 if event y is true and I{y} = 0 otherwise. The unfinished task p m t is executed in edge cloud x(t + 1) rather than the previously serving edge cloud x(t), therefore the execution time of migrated task is</p><formula xml:id="formula_8">p m t wt f x(t+1),t+1 - p m t wt f x(t),t</formula><p>. If the computing power of x(t + 1) is more than x(t),</p><formula xml:id="formula_9">p m t wt f x(t+1),t+1 - p m t wt f x(t),t</formula><p>is less than 0 which means the migration can reduce the execution delay. Otherwise, the migration can increase the execution delay of migrated task. We set r m (:, :, 1) = 0 because there is no migration in the first time slot. Note that the effect of both transferred file system and memory state are considered and captured in the downtime. Therefore, we do not need to model them separately.</p><p>The cost comprises monetary cost, migration resource consumption, and the cost of the placement of new microservices. The migration cost at time t+1 can be expressed as</p><formula xml:id="formula_10">u(x(t), x(t+1), t+1) = µ(h i,t , x(t), x(t+1))I{x(t+1) = x(t)},<label>(8)</label></formula><p>where µ(h i,t , x(t), x(t + 1)) is a non-decreasing function of d(x(t), x(t + 1). Note that µ(:, :, 1) = 0 and µ(1, :, :) = 0.</p><p>The microservice configuration of the edge clouds will change according to the microservice deployment, and this change can be expressed as follows:</p><formula xml:id="formula_11">h i,t+1 = 1 if i = x(t + 1) h i,t else.<label>(9)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Problem Formulation</head><p>The ultimate goal is to find the optimal microservice coordination scheme x * (1, ..., ∞) that minimizes the overall delay and migration cost over a sufficiently long time. The overall delay at time slot t is r(x(t-1), x(t), t) = r c (x(t), t)+r t (x(t), t)+r m (x(t-1), x(t), t).</p><p>(10) The overall delay of a microservice coordination scheme for vehicle L u is</p><formula xml:id="formula_12">R(x) = ∞ t=1 r(x(t -1), x(t), t).<label>(11)</label></formula><p>The overall migration cost is</p><formula xml:id="formula_13">U (x) = ∞ t=1 u(x(t -1), x(t), t).<label>(12)</label></formula><p>Formally, the microservice coordination problem is formulated as follows:</p><formula xml:id="formula_14">P1: min x(1,••• ,∞) R(x), U (x)<label>(13)</label></formula><formula xml:id="formula_15">s.t. r c (x(t), t) + r t (x(t), t) ≤ τ t , ∀t x(t) ∈ C, ∀t.<label>(14)</label></formula><p>However, finding the optimal solution to P1 is difficult, because it requires the complete information about the entire trip of the vehicle and edge clouds, including the trajectory of the vehicle, the parameters of all tasks, computational intensity of all edge clouds, and traffic intensity of all base stations. Therefore, depending on whether we have the complete information, we devise two coordination algorithms. The first is an offline coordination algorithm where we know the complete future information for a lookahead time window. The second is an online coordination algorithm in which we only know the current information. In what follows, we will present the offline and online coordination algorithms, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OFFLINE MICROSERVICE COORDINATION</head><p>In this section, we focus on the microservice coordination problem when the complete information for the next T slots is available. We devise an offline algorithm to find the optimal solution, which is denoted as x of f . The proposed offline algorithm can provide a theoretical upper bound on the performance of any practical online algorithms. Moreover, this offline algorithm can also be applied to the microservice coordination problem with predicted information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Offline Problem Formulation</head><p>When the look-ahead window size T is given, the overall delay and migration cost of a microservice coordination scheme for each window (containing time slots t 0 , • • • , t 0 + T -1) are as follows:</p><formula xml:id="formula_16">R T (x) = t0-1+T t=t0 r(x(t -1), x(t), t),<label>(15)</label></formula><formula xml:id="formula_17">U T (x) = t0-1+T t=t0 u(x(t -1), x(t), t).<label>(16)</label></formula><p>The offline microservice coordination problem with a look-ahead window can be stated as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P2: min</head><p>x of f (t0,...,t0+T -1)</p><formula xml:id="formula_18">R T (x), U T (x)<label>(17)</label></formula><formula xml:id="formula_19">s.t. r c (x(t), t) + r t (x(t), t) ≤ τ t , ∀t ∈ [t 0 , t 0 + T -1] x(t) ∈ C, ∀t ∈ [t 0 , t 0 + T -1].<label>(18)</label></formula><p>To obtain an optimal solution, we employ the simple additive weighting model to transform the problem into a single-objective optimization problem with weakly Pareto optimal solutions. The utility function is as follows:</p><formula xml:id="formula_20">F(x) = ω R T (x) -R min R max -R min + (1 -ω) U T (x) -U min U max -U min ,<label>(19)</label></formula><p>where R max and U max represent the maximum value of delay and migration cost during the time window T , respectively. Moreover R min and U min represent the minimum value of the delay and migration cost over time window T , respectively. Weight ω represents the user preference for delay, and 0 ω 1. The optimization problem can then be stated as follows:</p><formula xml:id="formula_21">P3: min F(x).<label>(20)</label></formula><p>The solution of P3 is a weakly Pareto optimal solution of P2. Note that the solution of P3 can reach Pareto optimal if ω ∈ (0, 1). The according definitions and proof are as follows. Definition 1. Solution x * ∈ C is said to be a weakly Pareto optimal solution of P2, if and only if there does not exist another x ∈ C such that R(x) &lt; R(x * ),U (x) &lt; U (x * ). Definition 2. Solution x ∈ C is said to be a Pareto optimal solution of P2, if and only if there does not exist another x ∈ C such that R(x) R T (x),U T (x) U (x).</p><p>Theorem 1. The solution of P3 is a weakly Pareto optimal solution of P2, and the solution of P3 is Pareto optimal if the weight coefficient ω is a positive number less than 1.</p><p>Proof: Let x * be a solution of P3. Suppose that it is not a weakly Pareto optimal solution of P2. In this case, there exists a solution x ∈ C such that R(x) &lt; R(x * ) and U (x) &lt; U (x * ). According to the assumption of the weighting coefficients, 0 ω 1. Thus, we have ω R T (x)-Rmin Rmax-Rmin + (1 -ω) U T (x)-Umin Umax-Umin &lt; ω R T (x * )-Rmin Rmax-Rmin + (1 -ω) U T (x * )-Umin Umax-Umin . This contradicts the assumption that x * is a solution of P3. That is, x * is a weakly Pareto optimal solution of P2.</p><p>If ω ∈ (0, 1), suppose that x * is not a Pareto optimal solution of P2. This means that there exists a solution x ∈ C such that R(x) R(x * ), U (x) U (x * ), and either</p><formula xml:id="formula_22">R(x) &lt; R(x * ) or U (x) &lt; U (x * ). Because 0 &lt; ω &lt; 1, we have ω R T (x)-Rmin Rmax-Rmin + (1 -ω) U T (x)-Umin Umax-Umin &lt; ω R T (x * )-Rmin Rmax-Rmin + (1 - ω) U T (x * )-Umin</formula><p>Umax-Umin . This contradicts the assumption that x * is a solution of P3. That is, x * is a Pareto optimal solution of P2 if ω ∈ (0, 1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Equivalence to the Shortest-Path Problem</head><p>The offline microservice coordination problem is equivalent to a shortest-path problem as shown in Fig. <ref type="figure" target="#fig_1">2</ref>. In this study, we consider that the re-selection of edge clouds to perform the microservices and potential migration only occurs when the nearby edge cloud switches. The layers of the shortestpath problem correspond to the switch times of the nearby edge cloud, rather than the actual physical time slots. Each node represents a possible edge cloud, each edge represents a possible selection of edge clouds when the vehicle moves out of the coverage area of the nearby edge cloud, and the weight of each edge is the sum of the utility value from the current slot to the next possible reselection, where the utility value of x(t) is</p><formula xml:id="formula_23">f (x(t), t) = ω r(x(t), t) -R min R max -R min + (1 -ω) u(x(t), t) -U min U max -U min .</formula><p>(21) Note that, when we compute the weight of x(t) at time slot t, x(t -1) has been determined, so the utility value f is only related to (x(t), t).</p><p>In Fig. <ref type="figure" target="#fig_1">2</ref>, there are three candidate edge clouds for x(t), and the switch times of nearby edge cloud is three. The edge cloud at time slot t 0 -1 is given, and the weight of edge (x(t 0 -1), x(t 0 )) is the sum of the utility values from t 0 to t 0 + 4. The endpoint is virtual and the weight of each edge to the endpoint is 0. The weight of the shortest path is the minimum utility value t0+T -1 t=t0 f (x(t), t) of all possible microservice coordination schemes, and the shortest path corresponds to the optimal coordination scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Offline Microservice Coordination Algorithm</head><p>Inspired by the approach of dynamic programming, we propose an offline microservice coordination algorithm, called offline algorithm, to solve this shortest-path problem. The offline algorithm is shown in Algorithm 1, where j represents the candidate edge clouds in the previous selection</p><formula xml:id="formula_24">x(t 0 -1) x(t 0 )=1 x(t 0 )=2 x(t 0 )=3 x(t 0 +5)=1 x(t 0 +5)=2 x(t 0 +5)=3 x(t 0 +12)=2 x(t 0 +12)=3 x(t 0 +12)=4 0</formula><p>Layer 1 and i represents the candidate edge clouds in the current selection. The values of F (j) for all j represent the total utility value from time slot t 0 to the current nearby edge cloud switch, F (i, j) for all i, j represents the total utility value from the current switch of nearby edge cloud to the next switch of nearby edge cloud, and f (i, j, t) represents the utility value at time slot t when the previous edge cloud is i and the current edge cloud is j, i.e., x(t-1) = i, x(t) = j.</p><note type="other">Layer 2 Layer 3</note><p>In Algorithm 1, Lines 3-26 iteratively find the shortest path (optimal microservice coordination scheme) for each look-ahead time window T . The iteration starts from the second layer of the graph in Fig. <ref type="figure" target="#fig_1">2</ref>. When the nearby edge cloud switches (Line 5), Line 8 selects the optimal edge cloud with respect to the previous selection by solving the Bellman's equation of the problem <ref type="bibr" target="#b35">[36]</ref>. For example, in Fig. <ref type="figure" target="#fig_1">2</ref>, when t = t 0 + 12, F is the set of the values of the nodes in the second layer, and F is the set of the weights of the edges between the second layer and the third layer. Line 8 selects the optimal edge cloud from the second layer for each node in the third layer. Cloud x i (k) in Line 9 denotes the optimal edge cloud at the (k -1) th switch of nearby edge cloud for edge cloud i at the k th switch of nearby edge cloud. After iterating from t 0 to t 0 +T -1, the algorithm can determine the optimal microservice coordination scheme for time window T .</p><p>Consider a more general setting in which the set of candidate edge clouds is time-varying. For example, the edge clouds can be turned on/off according to a sleeping strategy for energy saving <ref type="bibr" target="#b36">[37]</ref>. Determining the optimal microservice coordination scheme for a varying edge cloud set is of great challenge. However, in Algorithm 1, the set of alternative edge clouds for each x(t) can be different. Therefore, this algorithm can also be applied to a varying edge cloud set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Performance Analysis</head><p>In this subsection, we show that the result of the offline algorithm is the optimal solution of P3 and analyze its time complexity.</p><p>Theorem 2. For the offline microservice coordination problem with a look-ahead time window, Algorithm 1 provides the optimal solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Offline algorithm</head><p>Input: Lu, E, H; A(pt, τt, wt), the computational intensity of all edge clouds and the traffic intensity of all base stations Output: Optimal microservice coordination scheme {x(t)} 1: Initialize t0 = 1 2: loop 3:</p><p>Initialize j = x(t0 -1), F (i, j) = f (i, j, t0), F (j) = 0, k = 0 4:</p><formula xml:id="formula_25">for t = t0 + 1, • • • , t0 + T -1 do 5:</formula><p>if e(t) = e(t -1) then 6:</p><formula xml:id="formula_26">k = k + 1 7:</formula><p>for all i do 8:</p><formula xml:id="formula_27">j * = arg minj{F (j) + F (i, j)} 9:</formula><p>xi(k) = j * 10: for all i, j do 15: </p><formula xml:id="formula_28">F (j) = F (j * ) + F (i, j * ) 11: F (i, j) = f (i, j, t)</formula><formula xml:id="formula_29">F (i, j) = F (i, j) + f (i, j,</formula><formula xml:id="formula_30">k = k + 1 20:</formula><p>for all i do 21: k,n to be the result of the offline algorithm for this sub-process. Define V k,n as the overall utility function of p k,n . According to j * = arg min j {F (j) + F (i, j)} and F (j) = arg min j {F (j) + F (i, j)} in Lines 8 and 10, we have</p><formula xml:id="formula_31">j * = arg minj{F (j) + f (i, j, t)} 22: xi(k) = j * 23: F (j) = F (j) + F (i, j *</formula><formula xml:id="formula_32">V 1,k+1 (p * 1,k+1 ) = min p k,k+1 {V 1,k (p * 1,k ) + V k,k+1 (p k,k+1 )}.<label>(22)</label></formula><p>It means that the shortest path from the beginning to the (k + 1) th layer is the minimum sum of the shortest path from the beginning to the k th layer and the path from the k th layer to the (k + 1) th layer.</p><p>For the utility function of the overall process V 1,n of all possible schemes p 1,n , according to Eq.( <ref type="formula" target="#formula_32">22</ref>), we have</p><formula xml:id="formula_33">V 1,n (p 1,n ) = V 1,n-1 (p 1,n-1 ) + V n-1,n (p n-1,n ) ≥ min p1,n-1 {V 1,n-1 (p 1,n-1 )} + V n-1,n (p n-1,n ) = V 1,n-1 (p * 1,n-1 ) + V n-1,n (p n-1,n ) ≥ min pn-1,n {min p1,n-1 {V 1,n-1 (p 1,n-1 )} + V n-1,n (p n-1,n )} = V 1,n (p * 1,n ). (<label>23</label></formula><p>) Therefore, the result of the offline algorithm p * 1,n is the optimal solution of the offline microservice coordination problem with a look-ahead time window.</p><p>The time-complexity of Algorithm 1 is O(|S| 2 T ), where |S| is the number of states, because there are at most |S| 2 candidate state-action pairs in Lines 7-8 and 15, and there can be at most |S| 2 * T possible selection schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ONLINE MICROSERVICE COORDINATION</head><p>In this section, we consider the scenario in which only the current information is known and we propose an online algorithm to solve P1 without future information by learning the future reward of current decisions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Equivalence to Markov Decision Process</head><p>The microservice coordination problem is a sequential decision problem and can be formulated within a Markov decision process framework.</p><p>The state at time slot t is denoted by s(t) = {x(t), h(t)}, where x(t) is the edge cloud that performs the computation tasks and h(t) is the microservice instance configuration of all edge clouds. Policy π, which makes control decisions at any state s(t), is a probability distribution on the action set, and we use a(s(t)) ∈ C to represent the action of selecting a new edge cloud for s(t). This action causes the system to transmit to a new state s(t + 1) = s (t) = (x(t + 1), h(t + 1)) = a(s(t)). The immediate reward of action a(s(t)) is R a s = -f (s(t), a, t), where f (s(t), a, t) is the utility value at time t + 1 when current state is s(t) and the selected edge cloud for next time slot is a. Starting from initial state s(0) = s 0 , the long-term cumulative reward function is</p><formula xml:id="formula_34">G π (0) = ∞ k=0 γ k R aπ s(k) ,<label>(24)</label></formula><p>where γ ∈ [0, 1] is the discount factor. The objective of the microservice coordination problem is to find the policy π with the maximum expected cumulative reward, and we denote the expected value of cumulative reward G π at state s by state-value function</p><formula xml:id="formula_35">V π (s) = E ∞ k=0 γ k R aπ s(k) |s(0) = s .<label>(25)</label></formula><p>Moreover, the optimal state-value function is</p><formula xml:id="formula_36">V * (s 0 ) = max π V π (s 0 ). (<label>26</label></formula><formula xml:id="formula_37">)</formula><p>Theorem 3. The optimal solution is the stationary policy obtained by Bellman's optimal equation V * (s) = max a {R a s + γ s P a s,s V * (s )}. Proof: From the definition of the state-value function, we know that</p><formula xml:id="formula_38">V (s) = E [G(t)|s(t) = s] = E R a s(t) + γ(R a s(t+1) + γR a s(t+2) + • • • )|s(t) = s = E R a s(t) + γG(t + 1)|s(t) = s = E R aπ s(t) + γV (s(t + 1))|s(t) = s . (<label>27</label></formula><formula xml:id="formula_39">)</formula><p>The last equation is true because Therefore, V π (s) = a π(a|s) R a s + γ s P a s,s V π (s ) , where π(a|s) is the probability of taking action a at state s, and P a s,s is the probability of transition from s to s by a. According to the definition of an optimal state-value function, V * (s) = max a {R a s + γ s P a s,s V * (s )}.</p><formula xml:id="formula_40">V (s(t)) = E st,st+1,••• (R a st) + γG(t + 1)) = E st (R a st + γE st+1,••• (G(t + 1))) = E st (R a st + γV (s(t + 1))).<label>(28</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">RL-Based Online Microservice Coordination Algorithm</head><p>To find the optimal policy of the microservice coordination problem based on Markov decision process framework, we propose an RL-based online microservice coordination algorithm, called online algorithm, as shown in Algorithm 2. RL is concerned with how an agent ought to take actions in an environment so as to maximize the cumulative reward. The agent in microservice coordination can learn the long-term cumulative reward of current selections by trial-and-error interaction with the dynamic mobile edge environment.</p><p>The online algorithm is inspired by the Q-learning algorithm, which is one of the most popular RL methods that is applied in many research areas, such as service migration <ref type="bibr" target="#b33">[34]</ref> and computation offloading <ref type="bibr" target="#b37">[38]</ref>. In Algorithm 2, Lines 5-10 form an iteration in which the agent takes action at current state s to move to the next state s by receiving an immediate reward R for updating the Q-table . Here, Q(s, a) in the Q-table represents the expected long-term reward of taking action a at state s. Line 6 selects the actions for state s according to the -greedy policy. The specific -greedy policy used here is</p><formula xml:id="formula_41">π(a|s) = 1 -+ |A(s)| if a = arg max a Q(s, a) |A(s)| else ,<label>(29)</label></formula><p>where |A(s)| is the number of alternative actions for state s. The -greedy policy balances exploitation and exploration strategies, where exploitation selects the action with the maximum Q value and exploration selects the other actions. Reward R in Line 7 is the predicted reward provided by the future reward parameter prediction module according to the historical data of edge clouds and base stations. The specific prediction method used in this study records the parameters and regards the mean of the records up to the current time slot as parameters for the future reward. The iteration is terminated when Q(s, a) converges. The online algorithm considers not only the immediate reward of current decisions, but also the future possible rewards to determine the optimal microservice scheme along the way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Performance Analysis</head><p>In this section, we analyze the performance of the online algorithm for P1 in terms of the convergence and sample complexity, which indicate how much experience the algorithm needs to learn for a given task <ref type="bibr" target="#b38">[39]</ref>.</p><p>The essence of Algorithm 2 is to approximate V using experience learned from environment by updating the value of Q and then make decisions according to the approximate value function. First, we prove the convergence of the online algorithm.</p><p>Theorem 4. The approximate state-value function in Algorithm 2 converges to a value that is at least locally optimal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 2 Online algorithm</head><p>Input: l u (t), e(t), h(t-1), A(p t , τ t , w t ), the computational intensity of all edge clouds, and traffic intensity of all base stations at t Output: Optimal microservice coordination scheme 1: if e(t) = e(t -1) then 2:</p><formula xml:id="formula_42">s 0 = (x(t -1), h(t -1)), Q = 0 3: repeat 4:</formula><p>s = s 0 5:</p><formula xml:id="formula_43">for i = t, • • • , T do 6:</formula><p>Select a based on -greedy policy 7:</p><p>Observe s , predict R 8: x(t) = arg max a Q(x(t -1), a) 13: else 14:</p><formula xml:id="formula_44">Q(s, a) = Q(s, a) + α[ R + γ max a Q(s , a ) - Q(s, a)]</formula><p>x(t) = x(t -1) 15: end if Proof: We represent the approximate value function Q as a parameterized linear functional form with weight vector θ and the corresponding feature vector φ: Q = θ T φ s . It is natural to use semi-gradient method updates with a linear function approximation, the gradient of the approximate value function with respect to θ is ∇Q = φ s . The update of the approximate value function reduces to the update of the linear weight vector as follows:</p><formula xml:id="formula_45">θ t+1 = θ t + α(R t+1 + γθ T t φ t+1 -θ T t φ t )φ t = θ t + α(R t+1 φ t -φ t (φ t -γφ t+1 ) T θ t ),<label>(30)</label></formula><p>where we use the notational shorthand φ t = φ(s t ). Once the approximate value function reaches the steady state, the expected next weight vector for any θ t can be written as follows:</p><formula xml:id="formula_46">E[θ t+1 |θ t ] = θ t + α(b -Aθ t ) = (I -αA)θ t + αb,<label>(31)</label></formula><p>where</p><formula xml:id="formula_47">b = E[R t+1 φ t ] and A = E[φ t (φ t -γφ t+1 ) T ].</formula><p>When A is positive definite, then α is set to a value that is smaller than one over the largest value of the diagonal elements of A, (I -αA) is a matrix whose elements are between 0 and 1. Then, (I -αA)θ t tends to the shrink θ t , and stability is assured. Therefore, the linear approximation can converge. In the continuing case with γ &lt; 1, matrix A can be written as</p><formula xml:id="formula_48">A = s µ(s) a π(a|s) s p a s,s φ(s)(φ(s) -γφ(s )) T = s µ(s) s p(s |s)φ(s)(φ(s) -γφ(s )) T = s µ(s)φ(s)(φ(s) -γ s p(s |s)φ(s )) T = φ T D(I -γP)φ,<label>(32)</label></formula><p>where µ(s) is the stationary distribution under π, P is the |S × S| probability matrix, and D is the |S × S| diagonal matrix with µ(s) on its diagonal. From the above formulation, the inner matrix D(I -γP) is key to determining the positive definiteness of A. Next, we focus on the positive definiteness of the key matrix.</p><p>The row vector of the column sums of D(I -γP) can be written as</p><formula xml:id="formula_49">1 T D(I -γP) = µ T (I -γP) = µ T -γµ T P = µ T -γµ T = (1 -γ)µ, (<label>33</label></formula><formula xml:id="formula_50">)</formula><p>where 1 is the column vector with all components equal to 1. In addition, µ = P T µ because µ is the stationary distribution. All components of the key matrix D(I -γP) are positive; thus, its column sums are nonnegative. The row sums of the inner matrix are all positive because P is a stochastic matrix and γ &lt; 1. It is well known, any matrix M is positive definite if and only if the symmetric matrix S = M + M T is positive definite <ref type="bibr" target="#b39">[40]</ref>. Moreover, any symmetric real matrix is positive definite if all of its diagonal entries are positive and greater than the sum of the corresponding off-diagonal entries <ref type="bibr" target="#b40">[41]</ref>. Therefore, key matrix D(I -γP) is positive definite and A is positive definite. Therefore, the approximate value function can converge. Finally, we analyze the sample complexity of Algorithm 2, which indicates the number of iterations needed to achieve the -optimal. It is defined as follows.</p><p>Definition 3. For any fixed &gt; 0, the sample complexity of the exploration of an RL algorithm is the number of timesteps t such that the policy at time t π t satisfies V πt (s t ) &lt; V * (s t ) -.</p><p>The sample complexity of Algorithm 2 is O(|S||A|/( 4 (1 -γ) 8 )), where |S| and |A| are the number of states and number of actions, respectively <ref type="bibr" target="#b38">[39]</ref>. This reveals that the required number of iterations is proportional to the discount factor γ and is inversely proportional to the optimal gap .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENT AND RESULTS</head><p>In this section, we compare the proposed Offline Algorithm and Online Algorithm with several existing coordination algorithms in terms of the overall delay and migration cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Dataset Description</head><p>To evaluate the performance of the proposed algorithms, two real-world datasets are used in experiments: Shanghai Telecom's base station dataset and Shanghai Taxi Track dataset. Shanghai Telecom's base station dataset contains the exact location information of 3,233 base stations and the Internet access information of mobile users that passed through these base stations. More specifically, the dataset contains more than 7.2 million records of Internet accesses through 3,233 base stations from 9,481 mobile phones during six successive months. Each record contains the detailed start time and end time of the base station access for each mobile user. Fig. <ref type="figure" target="#fig_5">3</ref> shows the distribution of the 3,233 base stations in Shanghai, where each node denotes a base station.</p><p>The Shanghai Taxi Track dataset contains the tracks of all 4,328 taxis in Shanghai on February 20, 2007. Each track  of a taxi contains its specific location information, recorded every about one or half minutes over the whole day. In addition, this dataset contains the direction and instantaneous speed of the taxi and whether the taxi is transporting passengers. Fig. <ref type="figure" target="#fig_6">4</ref> shows four tracks randomly sampled from the dataset, each distinguished by four different colors.</p><p>To measure the performance of our microservice coordination algorithms, we combined the above two datasets to simulate a scenario where mobile users call services continuously as they move. Fig. <ref type="figure" target="#fig_7">5</ref> shows how Shanghai Telecom's base station dataset and the Shanghai Taxi Track dataset were combined. Blue points represent the track of a taxi, green points represent the base stations, red points represent the edge clouds, and areas filled with different colors represent the coverage of the edge cloud. The taxi moves through many base stations and hence moves from the coverage area of one edge cloud to that of another. This figure shows the nearby edge cloud switches as the user moves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Experiment Setup</head><p>From the 3,233 real base stations in Shanghai, we chose 400 base stations as the placement locations for the edge clouds using a K-means clustering algorithm <ref type="bibr" target="#b41">[42]</ref>. We then deployed 150 microservices on these edge clouds randomly.</p><p>According to <ref type="bibr" target="#b32">[33]</ref> [43], each edge cloud is equipped with multiple CPU cores, and the sum frequency is 25 Ghz. The The surrounding environment (e.g., the density of base stations, the distribution of edge clouds and the microservice configuration) and the track (e.g., the speed) of each vehicle are different. To improve the reliability of experiment results, we use Monte Carlo method and execute 1000 simulations by optimizing the coordination for a vehicle in 1000 scenes. We randomly selected the tracks of 1000 taxis to serve as 1000 scenes and only used 30 minutes of the track for the experiments. All the resulting data in the experiments are the average values of the vehicles. We consider that the tasks generated during the entire track follow a Poisson distribution with a mean of 0.6 Mbits/s, the computational intensity w t is uniformly distributed within [500,1000] cycle/bits, and the completion deadline τ t is 150 ms. All the experiments were conducted on the same computer with an Intel(R) Xeon(R) 2.4 GHz processor with 32.0 GB of RAM, using MATLAB with source code.</p><p>We compare the proposed Offline Algorithm and Online Algorithm with four other existing algorithms:</p><p>1) 1-step Look-ahead: In this algorithm, we consider both delay and migration cost, and the vehicle always selects the edge cloud with the minimum utility value in the current time slot. It is an offline microservice coordination algorithm with a 1-step look-ahead time window.</p><p>2) Delay Optimal: In this algorithm, we only consider the delay of the microservices, and the vehicle always selects the edge cloud with minimum delay, disregarding the migration cost.</p><p>3) Nearest Edge Cloud First: In this algorithm, the vehicle always selects the nearby edge cloud and the computation data are migrated along with the switch of nearby edge cloud. The microservices are deployed if there are no microservices in the nearby edge clouds.</p><p>4) Random Edge Cloud: In this algorithm, the vehicle always selects the next edge cloud randomly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Effect of the Number of Vehicles on Delay and Migration Cost</head><p>In this subsection, we compare the proposed Offline Algorithm, Online Algorithm, and four comparison algorithms in terms of the delay and migration cost with respect to the number of vehicles from 200 to 1,000.</p><p>Fig. <ref type="figure">6</ref>(a) and Fig. <ref type="figure">6</ref>(b) show the performance of delay and migration cost, respectively. The Offline Algorithm achieves the best results for both delay and migration cost due to the utilization of future system information. Among all the algorithms, the results of the Online Algorithm are the closest to that of Offline Algorithm. In fact, its migration cost is just slightly worse than that of the Offline Algorithm. Compared with the 1-step Look-ahead algorithm, the Online Algorithm performs better in terms of delay and migration cost because it considers the impact of future rewards on current decisions. The delay performances of the Delay Optimal algorithm and the Nearest Edge Cloud First algorithm are similar, and they are better than those of the 1-step Lookahead algorithm because they only focus on the delay rather than both the delay and migration cost. In addition, this causes the migration cost of the Delay Optimal algorithm and Nearest Edge Cloud First algorithm worse than that of the 1-step Look-ahead algorithm. The performances of all the algorithms remain stable as the number of vehicles increases, which indicates that the Offline Algorithm and Online Algorithm can be applied to a large number of vehicles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Effect of Switch Times on Delay and Migration Cost</head><p>To study the impact of the switch times of the nearby edge clouds on the performance of Offline Algorithm and Online Algorithm, we executed the algorithms while fixing the number of vehicles at 1,000. We then classified the vehicles according to the switch times of nearby edge clouds in their track. The distribution of the switch times of vehicles is shown in Table <ref type="table" target="#tab_3">1</ref>. A higher switch times indicates that the speed of the vehicle is higher or the deployment of the edge clouds in the district is more dense, which increases the likelihood of selecting a new edge cloud. Fig. <ref type="figure" target="#fig_10">7</ref> shows the performance evaluation results of different algorithms with respect to the increasing switch times of nearby edge clouds.  Switch Times of Edge Clouds  Look-ahead algorithm slightly decreases as the switch times increases. This is because the increasing instances of reselection diminish the impact of future reward. The migration cost of the Nearest Edge Cloud First algorithm increases rapidly because the service instance must be migrated if the nearby edge cloud does not host the microservices. The migration cost of the Nearest Edge Cloud First algorithm also increases because it does not take into account the migration cost. In summary, in a smart city, e.g., Shanghai, the Online Algorithm can provide vehicles better experience than the other four representative approaches in terms of delay and migration cost. It is close to the globally optimal performance provided by the Offline Algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>In this paper, we have investigated the microservice coordination problem in mobile edge computing environments, to select optimal edge clouds for performing the microservices as a mobile user moves. To reduce the overall delay and migration cost, we have proposed an offline algorithm to find the optimal microservice coordination when future system information is available. Furthermore, we have also proposed an online algorithm that does not require future system information. Through theoretical analysis, it is proved that the offline algorithm can find the optimal solution while the online algorithm can achieve near optimal performance. Moreover, based on two real datasets, the experiments are conducted, which demonstrate that the proposed online algorithm outperforms several representative algorithms in terms of delay and migration cost, and the performance is close to that of the globally optimal solutions provided by the offline algorithm. For the future work, we will jointly investigate microservice coordination and load balancing among microservices in the multiuser mobile edge computing systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: Illustration of microservice coordination in mobile edge computing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: Offline scenario formulation with T = 20, and the nearby edge cloud e(t) switches at slots t0, t0 + 5, and t0 + 12.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>xj * in slot t0, • • • , t0 + T -1 27: t0 = t0 + T 28: end loop Proof: Define p k,n as the decision sequence of edge cloud x(t) during the sub-process from the k th layer to the end, and define p *</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 3 :</head><label>3</label><figDesc>Fig. 3: Distribution of all 3,233 base stations in Shanghai. Each node denotes a base station.</figDesc><graphic coords="9,324.60,43.70,226.80,137.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: Tracks of four taxis selected randomly from all taxis in Shanghai. Each color represents a taxi track over a day.</figDesc><graphic coords="9,324.60,227.92,226.80,149.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 5 :</head><label>5</label><figDesc>Fig. 5: Detailed track of a taxi.</figDesc><graphic coords="10,60.30,28.22,226.67,186.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 7 (Fig. 6 :</head><label>76</label><figDesc>Fig. 6: Performance of different algorithms with respect to number of vehicles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 7 :</head><label>7</label><figDesc>Fig. 7: Performance of different algorithms with respect to the switch times</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2019.2957804, IEEE Transactions on Mobile Computing</figDesc><table /><note><p><p>)</p>1536-1233 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2019.2957804, IEEE Transactions on Mobile Computing</figDesc><table /><note><p>1536-1233 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE 1 :</head><label>1</label><figDesc>Distribution of the switch times of vehicles</figDesc><table><row><cell>Switch</cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>10</cell></row><row><cell>times</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Number of</cell><cell cols="10">96 145 166 157 137 100 76 57 27 12</cell></row><row><cell>vehicles</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The design and architecture of microservices</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="76" to="80" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Efficient Live Migration of Edge Services Leveraging Container Layered Storage</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<idno type="DOI">10.1109/TMC.2018.2871842</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Research on architecting microservices: Trends, focus, and potential for industrial adoption</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">D</forename><surname>Francesco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Malavolta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lago</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceeding of 2017 IEEE International Conference on Software Architecture (ICSA)</title>
		<meeting>eeding of 2017 IEEE International Conference on Software Architecture (ICSA)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="21" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Contextual Understanding of Microservice Architecture: Current and Future Directions</title>
		<author>
			<persName><forename type="first">T</forename><surname>Cerny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Donahoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trnka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGAPP Applied Computing Review</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="29" to="45" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Systematic Mapping Study in Microservice Architecture</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alshuqayran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">prceeding of IEEE 9th International Conference onService-Oriented Computing and Applications</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Energy-efficient Machineto-Machine (M2M) Communications in Virtualized Cellular Networks with Mobile Edge Computing (MEC)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Si</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">10.1109/TMC.2018.2865312</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A survey on mobile edge computing: The communication perspective</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">B</forename><surname>Letaief</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys Tutorials</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="2322" to="2358" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Cooperative Edge Caching in User-Centric Clustered Mobile Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Suto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1791" to="1805" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Optimal cloudlet placement and user to cloudlet allocation in wireless metropolitan area networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="725" to="737" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Content Popularity Prediction Towards Location-Aware Mobile Edge Caching</title>
		<author>
			<persName><forename type="first">P</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Costefficient resource provisioning for dynamic requests in cloud assisted mobile edge computing</title>
		<author>
			<persName><forename type="first">X</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cloud Computing</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Virtual Servers Co-migration for Mobile Accesses: Online Versus Off-line</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2576" to="2589" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Adaptive VM handoff across cloudlets</title>
		<author>
			<persName><forename type="first">K</forename><surname>Ha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Abe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Amos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pillai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
		<idno>CMU-CS-15-113</idno>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
		<respStmt>
			<orgName>CMU School of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Microservices architecture enables devops: Migration to a cloud-native architecture</title>
		<author>
			<persName><forename type="first">A</forename><surname>Balalaie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Heydarnoori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jamshidi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="42" to="52" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Open issues in scheduling microservices in the cloud</title>
		<author>
			<persName><forename type="first">M</forename><surname>Fazio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Celesti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ranjan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Villari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="81" to="88" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Load balancing across microservices</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Niu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 4th IEEE International Conference on Computer Communications (ICCC)</title>
		<meeting>4th IEEE International Conference on Computer Communications (ICCC)</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Live service migration in mobile edge clouds</title>
		<author>
			<persName><forename type="first">A</forename><surname>Machen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Salonidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Communications</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="140" to="147" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Dynamic service migration and workload scheduling in edgeclouds</title>
		<author>
			<persName><forename type="first">R</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zafer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Performance Evaluation</title>
		<imprint>
			<biblScope unit="volume">91</biblScope>
			<biblScope unit="page" from="205" to="228" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Dynamic service placement for mobile micro-clouds with predicted future costs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zafer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1002" to="1016" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Follow me at the edge: Mobility-aware dynamic service placement for mobile edge computing</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ouyang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2333" to="2345" />
			<date type="published" when="2018-10">Oct 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Squeezedet: Unified, small, low power fully convolutional neural networks for real-time object detection for autonomous driving</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">N</forename><surname>Iandola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Keutzer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 2017 IEEE Conference on Computer Vision and Pattern Recognition Workshops</title>
		<meeting>2017 IEEE Conference on Computer Vision and Pattern Recognition Workshops</meeting>
		<imprint>
			<publisher>CVPRW</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="446" to="454" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Energy efficient dynamic offloading in mobile edge computing for internet of things</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cloud Computing</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Toward efficient content delivery for automated driving services: An edge computing solution</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">S</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="80" to="86" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Resource optimization of container orchestration: a case study in multi-cloud microservicesbased applications</title>
		<author>
			<persName><forename type="first">C</forename><surname>Guerrero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Lera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Juiz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Supercomputing</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="2956" to="2983" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Multi-objective scheduling of micro-services for optimal service function chains</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bhamare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Samaka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Erbad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Chan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Migrate or not? exploring virtual machine migration in roadside cloudlet-based vehicular cloud</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Fan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Concurr. Comput. : Pract. Exper</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">18</biblScope>
			<biblScope unit="page" from="5780" to="5792" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A markov decision processbased service migration procedure for follow me cloud</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ksentini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Taleb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of IEEE International Conference on Communications (ICC)</title>
		<meeting>IEEE International Conference on Communications (ICC)</meeting>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="1350" to="1354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Dynamic service migration in mobile edge-clouds</title>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urgaonkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zafer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 14th IFIP Networking Conference (NETWORKING)</title>
		<meeting>14th IFIP Networking Conference (NETWORKING)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Follow-me cloud: When cloud services follow mobile users</title>
		<author>
			<persName><forename type="first">T</forename><surname>Taleb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ksentini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Frangoudis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cloud Computing</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Dynamic resource allocation exploiting mobility prediction in mobile edge computing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Plachy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Becvar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">C</forename><surname>Strinati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of IEEE 27th Annual International Symposium on Personal, Indoor, and Mobile Radio Communications</title>
		<meeting>IEEE 27th Annual International Symposium on Personal, Indoor, and Mobile Radio Communications</meeting>
		<imprint>
			<publisher>PIMRC</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Task migration for mobile edge computing using deep reinforcement learning</title>
		<author>
			<persName><forename type="first">C</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page" from="111" to="118" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Migration modeling and learning algorithms for containers in fog computing</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Services Computing</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">EMM: energy-aware mobility management for mobile edge computing in ultra dense networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on Selected Areas in Communications</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2637" to="2646" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Service migrations in the cloud for mobile accesses: A reinforcement learning approach</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 12th International Conference on Networking, Architecture, and Storage</title>
		<meeting>12th International Conference on Networking, Architecture, and Storage</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Service mobility in mobile networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Assasa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V</forename><surname>Yadhav</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Westberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of IEEE 8th International Conference on Cloud Computing (ICCC)</title>
		<meeting>IEEE 8th International Conference on Cloud Computing (ICCC)</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="397" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Dynamic programming</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Howard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="317" to="348" />
			<date type="published" when="1966">1966</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Fatigue-aware management of cellular networks infrastructure with sleep modes</title>
		<author>
			<persName><forename type="first">L</forename><surname>Chiaraviglio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Cuomo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Listanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Manzia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Santucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Mobile Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="3028" to="3041" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Task offloading for uavbased mobile edge computing via deep reinforcement learning</title>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of IEEE/CIC International Conference on Communications(ICC)</title>
		<meeting>IEEE/CIC International Conference on Communications(ICC)</meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="798" to="802" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Reinforcement learning in finite MDPs: PAC analysis</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Strehl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">L</forename><surname>Littman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="2413" to="2444" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Learning to predict by the methods of temporal differences</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Sutton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine learning</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="9" to="44" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Varga</surname></persName>
		</author>
		<title level="m">Matrix iterative analysis</title>
		<imprint>
			<publisher>Springer Science &amp; Business Media</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="volume">27</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Efficient algorithms for capacitated cloudlet placements</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2866" to="2880" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">QoE and power efficiency tradeoff for fog computing networks with fog node cooperation</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Krunz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of IEEE Conference on Computer Communications (INFOCOM)</title>
		<meeting>IEEE Conference on Computer Communications (INFOCOM)</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Fast and efficient radio resource allocation in dynamic ultra-dense heterogeneous networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Niu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">Q</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1911" to="1924" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
