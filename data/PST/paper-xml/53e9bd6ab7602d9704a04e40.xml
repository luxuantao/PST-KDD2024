<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Geometry of Coin-Weighing Problems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Noga</forename><surname>Alon</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics, Raymond and Beverly Sackler Faculty of Exact Sciences</orgName>
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Dmitry</forename><forename type="middle">N</forename><surname>Kozlov</surname></persName>
							<email>kozlov@math.kth.se</email>
							<affiliation key="aff1">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Royal Institute of Technology</orgName>
								<address>
									<addrLine>S-100 44</addrLine>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Van</forename><forename type="middle">H</forename><surname>Vu</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Yale University</orgName>
								<address>
									<postCode>CT-06511</postCode>
									<settlement>New Haven</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Geometry of Coin-Weighing Problems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8C184EA30697B0C6E384051BFAA6C995</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T06:00+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Given a set of m coins out of a collection of coins of k unknown distinct weights, we wish to decide if all the m given coins have the same weight or not using the minimum possible number of weighings in a regular balance beam. Let m(n, k) denote the maximum possible number of coins for which the above problem can be solved in n weighings. We show that m(n, 2) = n ( 1 2 +o(1))n , whereas for all 3 ≤ k ≤ n + 1, m(n, k) is much smaller than m(n, 2) and satisfies m(n, k) = Θ(n log n/ log k). The proofs have an interesting geometric flavour, and combine Linear Algebra techniques with geometric, probabilistic and combinatorial arguments.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Coin-weighing problems deal with the determination or estimation of the minimum possible number of weighings in a regular balance beam that enable one to find the required information about the weights of the coins. There are numerous questions of this type, see, e.g., <ref type="bibr" target="#b8">[9]</ref> and its many references. Here we study the following variant of the old problems, which we call the all equal problem. Given a set of m coins, we wish to decide if all of them have the same weight or not, when various conditions about the weights are known in advance. The case in which the coins are given out of a collection of coins of k unknown distinct weights is of special interest. Let m(n, k) denote the maximum possible number of coins for which this problem can be solved in n weighings. The case k = 2 has been considered in <ref type="bibr" target="#b11">[12]</ref>, following related questions discussed in <ref type="bibr" target="#b4">[5]</ref> and other places. The authors of <ref type="bibr" target="#b11">[12]</ref> observed that m(n, 2) ≥ 2 n for every n. (To see this, note that m(n, 1) = 2 and that once we already have m coins which are known to have the same weights, we can compare them to another set of m new coins. Since there are only two possible weights, if the weighing is balanced all 2m coins have the same weights.) Somewhat surprisingly, this bound is not tight. Applying a geometric approach, we show here that in fact m(n, 2) &gt; 2 n for all n &gt; 2. Combining this approach with some simple results in Lattice geometry as well as a construction of Håstad <ref type="bibr" target="#b9">[10]</ref> of threshold gates that require large weights we determine the asymptotic behaviour of m(n, 2) as follows. where the o(1)-term tends to 0 as n tends to infinity.</p><p>The proof, with some extra work, provides an explicit weighing algorithm for the corresponding problem.</p><p>As a byproduct, we improve results of Shapley, van Lint and Pollak on a problem in Extremal Combinatorics motivated by the study of cores in n-person games and settle an open problem of Graham and Sloane concerning the norms of inverses of nonsingular matrices with {-1, 1} entries. Surprisingly, it turns out that for k ≥ 3, m(n, k) is much smaller than m(n, 2). Using probabilistic arguments we prove the following. Theorem 1.2 There are two absolute positive constants c and C such that for every n</p><formula xml:id="formula_0">+ 1 ≥ k ≥ 3 c n log n log k ≤ m(n, k) ≤ C n log n log k .</formula><p>It is worth noting that for k &gt; n + 1, m(n, k) = n + 1, as we observe in Section 3. Unlike the proof of Theorem 1.1, that of Theorem 1.2 is probabilistic, and does not supply an explicit weighing algorithm. For the special case k = 3 in which the three potential distinct weights are known to form an arithmetic progression we can describe an explicit algorithm.</p><p>Our basic approach is geometric. The geometric point of view is motivated by the observation that if we let (w 1 , w 2 , . . . , w m ) denote the weight-vector of the coins, then any weighing is simply a linear test, and its result determines if this vector lies on the corresponding hyperplane, or lies in one of the corresponding half-spaces. Therefore, any weighing algorithm is a linear decision tree. This implies that several known results about the complexity of linear decision trees, including the results in <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref> which are based on geometric and topological arguments, yield immediately results about certain coin-weighing problems. The geometric approach needed for studying the all equal problem is, however, somewhat different, and is briefly explained in Section 2. In Section 3 we make several simple observations about the problem, including the observation that if no information on the weights of the coins is given in advance, then m -1 weighings are both necessary and sufficient for solving the all equal problem for m coins. In Sections 4 and 5 we study the asymptotic behaviour of m(n, 2) and show how it is related to the existence of threshold gates that require large weights. A very brief sketch of the proof of Theorem 1.2 is given in Section 6 and the final Section 7 contains some concluding remarks about related results and open problems. Due to space limitations we omit most detailed proofs from this extended abstract. These will appear in the full version of the paper(s). All logarithms throughout the paper are in base 2, unless otherwise specified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The basic approach</head><p>There is a simple correspondence between coin weighing algorithms for the all equal problem and matrices with {0, -1, 1}-entries.</p><p>To see this correspondence, consider weighing algorithms for the all equal problem for coins chosen out of a collection of k distinct (unknown) weights. Let W m,k denote the set of all real vectors of length m with positive coordinates and with at most k distinct coordinates. The set W m,k represents the set of all possible weight-vectors of our given m coins. Let A n,m denote the set of all n by m matrices with {0, -1, 1}-entries whose sum of columns is the zero vector. We can associate each matrix A = (a ij ) ∈ A n,m with a weighing algorithm as follows. Put [m] = {1, . . . , m} and define, for each i,</p><formula xml:id="formula_1">1 ≤ i ≤ n, two disjoint subsets L i and R i of [m] by L i = {j : a ij = -1} and R i = {j : a ij = 1}. Note that since the sum of each row of A is 0, |L i | = |R i |.</formula><p>Trying to solve the all equal problem for a given set of m coins denoted {1, 2, . . . , m}, the weighing algorithm determined by A consists of n weighings. For 1 ≤ i ≤ n the algorithm compares, in step number i, the coins in L i with those in R i . If all weighings are balanced the algorithm declares that all coins have the same weight, otherwise, it states that not all weights are equal. It is not difficult to see that a necessary and sufficient condition for the algorithm to solve correctly the all equal problem for coins with up to k distinct weights is that the only solutions of the system Ax = 0 which lie in W m,k are constant vectors. To see this, observe that since |L i | = |R i | for every i, if not all the weighings are balanced, then certainly not all the coins have the same weight. If, on the other hand, all weighings are balanced, and it is known that the vector of weights of the coins lies in W m,k , then the vector of correct weights must lie in ker(A) ∩ W m,k , showing that the algorithm is correct iff there are no nonconstant vectors in ker(A) ∩ W m,k .</p><p>We have thus seen that any matrix A ∈ A n,m defines a weighing algorithm. The converse is also true. Given an optimal weighing algorithm that solves the all equal problem for m coins with up to k weights note, first, that we may assume that the algorithm always compares sets of coins of equal cardinalities. (This is the case because all weights may well be close enough to each other so that the result of any weighing of sets of nonequal cardinalities will be known in advance. We omit the detailed explanation.) We can now define a matrix A = (a ij ) ∈ A n,m from the algorithm as follows.</p><p>For each 1</p><formula xml:id="formula_2">≤ i ≤ n, let L i ⊂ [m] and R i ⊂ [m]</formula><p>be the two sets of coins the algorithm compares in step number i assuming all previous weighings are balanced. Define</p><formula xml:id="formula_3">a ij = -1 if j ∈ L i , a i,j = 1 if j ∈ R i and a ij = 0 otherwise. Clearly A ∈ A n,m .</formula><p>The algorithm reports that all coins are of the same weight iff all weighings are balanced, and it is correct for coins with up to k distinct weights iff ker(A) ∩ W m,k consists only of constant vectors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Two simple observations</head><p>Let us first observe that even if there are no conditions on the weights of the coins at all, one simple algorithm for solving the all equal problem always exists. Namely, one can compare all the coins to a fixed coin, one by one. This will certainly decide whether all the m coins have the same weight or not in m -1 weighings. In the next proposition we observe that if there are no conditions on the weights this number of weighings cannot be improved. Proof. An algorithm using m -1 weighings is the obvious one described above. Simply pick a fixed coin and compare it to every other coin, each one in its turn. Clearly all the coins have the same weight iff all weighings are balanced.</p><p>To prove that one cannot do better, assume n &lt; m -1 weighings suffice and let A ∈ A n,m be the matrix corresponding to an optimal algorithm. Then, if all the weighings are balanced, any vector w = (w 1 , . . . , w m ) ∈ ker(A) may be the vector of weights of the m given coins. However, the dimension of ker(A) is at least m -n &gt; 1, showing that it must contain a nonconstant vector, and completing the proof. 2</p><p>Note that by the above proposition and its proof it follows that for the function m(n, k) defined in the introduction, m(n, k) = n + 1 for all k &gt; n + 1.</p><p>One may be interested in determining how many different weights the coins have. Formulated as a decision problem, this corresponds to the following question: Given m coins of arbitrary weights, decide whether they have at least k distinct weights or not. Let T (m, k) denote the minimum number of weighings required to answer this problem.</p><formula xml:id="formula_4">Proposition 3.2 For every m &gt; k &gt; 1, max{m -1, m log 3 (k -1) -k + 1} ≤ T (m, k) ≤ m log 2 (2k).</formula><p>Proof: Björner and Lovász observed in <ref type="bibr" target="#b3">[4]</ref> that the above problem can be solved using at most m log 2 (2k) steps, where in each step we compare two coins to each other. On the other hand, they proved in the same paper, using a topological approach, that any algorithm that performs in each step an arbitrary linear test on the weights of the coins (that is, in each step the algorithm may check if a specified linear form in the weights is positive, negative or zero), and decides in the end if there are at least k distinct weights, must perform, in the worst case, at least max{m-1, m log 3 (k -1)-k +1} tests. Note that the fact that the authors of <ref type="bibr" target="#b3">[4]</ref> allow arbitrary linear tests and not only comparisons between two weights, which might seem a bit artificial in the original context, is essential here. Since every weighing is a special case of a linear test, the desired result follows. 2 4 Threshold gates</p><formula xml:id="formula_5">A threshold gate of n inputs is a function F : {-1, 1} n → {-1, 1} defined by F (x 1 , . . . , x n ) = sign( n i=1 w i x i -t),</formula><p>where w 1 , . . . , w n , t are reals called weights, chosen in such a way that the sum n i=1 w i x i -t is never zero for (x 1 , . . . , x n ) ∈ {-1, 1} n . Threshold gates are the basic building blocks of Neural Networks, and have been studied extensively. See, e.g., <ref type="bibr" target="#b10">[11]</ref> and its references. It is easy to see that every threshold gate can be realized with integer weights. Various researchers proved that there is always a realization with integer weights satisfying |w i | ≤ 2 -n (n + 1) (n+1)/2 . See, e.g., <ref type="bibr" target="#b12">[13]</ref> for a proof.</p><p>There are several simple constructions of threshold gates of n inputs that require some weights of size 2 Ω(n) . Håstad <ref type="bibr" target="#b9">[10]</ref> constructed threshold gates that require larger weights, thus showing that the above mentioned upper bound is nearly tight. The precise statement of his theorem is the following. Theorem 4.1 ([10], Theorem 2.10) For every n which is a power of 2 there exists a threshold gate F of n inputs (described explicitly) so that if w 1 , . . . , w n , t are integers and</p><formula xml:id="formula_6">F = sign( n i=1 w i x i -t)</formula><p>for every (x 1 , . . . , x n ) ∈ {-1, 1} n , then for every j</p><formula xml:id="formula_7">|w j | ≥ 1 2ne n 4β 2 n n n/2</formula><p>, where here and from now on β = log(3/2). In addition, the above F can be realized by weights w 1 , . . . , w n , t with t = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Coin-weighing</head><p>In this section we sketch the proof of Theorem 1.1.</p><p>Let V n denote the set of all vectors of length n with {-1, 1, 0} coordinates. A sequence v 1 , . . . , v m of not necessarily distinct members of V n is called admissible if the sum of its elements is the zero vector, and it contains no proper nonempty subsequence whose sum is the zero vector. Fact: For every n, m(n, 2) is precisely the maximum possible length m of an admissible sequence v 1 , . . . , v m of members of V n . The proof of this fact is not difficult. Here is a sketch. Given an admissible sequence as above, let A = (a ij ) be the n by m matrix whose columns are the vectors v 1 , . . . , v m . Clearly A ∈ A n,m and it is not too difficult to check that since the sequence is admissible, there is no solution w of the system Aw = 0 in which w is a nonconstant vector whose coordinates attain only two distinct values. Conversely, any correct weighing algorithm corresponds, by the discussion in Section 2, to a matrix in A n,m with no nonconstant vectors in ker(A) ∩ W m,2 and it is easy to check that the columns of such a matrix form an admissible sequence.</p><p>In order to prove the upper bound in Theorem 1.1 we have to bound the maximum possible length of an admissible sequence of elements of V n . A geometric argument based on Steinitz's Lemma, following the ideas in <ref type="bibr" target="#b0">[1]</ref>, can be given, but it only yields a weaker estimate. The best upper bound we can prove is that for n &gt; 1</p><formula xml:id="formula_8">m(n) ≤ 3 n -1 2 (n + 1)n (n-1)/2 .</formula><p>This is proved by considering the cone consisting of all integer nonnegative vectors of length 3 n that describe dependencies between the members of V n . Using some standard results about Hilbert bases of polyhedral cones (see, e.g., <ref type="bibr" target="#b13">[14]</ref>), it can be shown that any member of this cone is an integral nonnegative linear combination of certain members of the cone, each of which is a nonnegative linear combination of at most (3 n -1)/2 integral vectors whose l 1 -norms can be bounded by applying Cramer's rule and Hadamard's Inequality. The details are not complicated, but are somewhat lengthy, and will appear in the full version.</p><p>In order to prove the lower bound in Theorem 1.1 using the above fact we have to prove the existence of a long admissible sequence. To do so, we apply the following procedure for obtaining such a sequence. Let B = (b ij ) be an n by (n + 1) matrix whose columns are members of V n , and suppose the rank of B is n. Then the system of n linear equations By = 0, where y = (y 1 , . . . , y n+1 ) is a (column) vector of variables has a one dimensional solution, that is, all the solutions of the system are scalar multiples of any fixed given nontrivial solution. The system obviously has a nontrivial integral solution, by Cramer's rule, for example. Among all integral solutions, let y = (y 1 , . . . , y n+1 ) be one with the minimum possible l 1 -norm, that is, with the minimum possible value of the sum n+1 j=1 |y j |. Define z j = |y j |, and note that by the minimality in the choice of y the greatest common divisor of the numbers z j is 1. Let u j be the column number j of B if y j is positive, and the additive inverse of that column otherwise. Note that n+1 j=1 z j u j = 0 and that if n+1 j=1 s j u j = 0 then the vector s = (s 1 , . . . , s n+1 ) is a scalar multiple of z = (z 1 , . . . , z n+1 ). Therefore, if the numbers s j are integers then s is an integral multiple of z. In particular, it follows that if n+1 j=1 s j u j = 0 for some integers s j , not all zeros, then n+1 j=1</p><formula xml:id="formula_9">|s j | ≥ n+1 j=1 z j .<label>(1)</label></formula><p>We can now define an admissible sequence consisting of n+1 j=1 z j members of V n by taking z j copies of u j , for every j. The sum of the members of this sequence is clearly the zero vector. Moreover, any proper nonempty subsequence of it contains s j copies of u j for some 0 ≤ s j ≤ z j , where 0 &lt; n+1 j=1 s j &lt; n+1 j=1 z j , and hence the sum of its members cannot be 0, by <ref type="bibr" target="#b0">(1)</ref>. We have thus proved the following.</p><p>Proposition 5.1 Let B be an n by (n + 1) matrix of rank n whose columns are members of V n , and suppose that every nontrivial integral solution y = (y 1 , . . . , y n+1 ) of the system By = 0 satisfies n+1 j=1</p><formula xml:id="formula_10">|y j | ≥ M. Then m(n) ≥ M.</formula><p>Before procceeding with the proof of the asymptotic result note that the 3 by 4 matrix</p><formula xml:id="formula_11">B =     -1 1 1 -1 0 -1 1 -1 1 0 -1 -1    </formula><p>whose kernel is spanned by the vector (4, 2, 3, 1) already shows that m(3, 2) ≥ 4+2+3+1 = 10 ( &gt; 8).</p><p>Similarly, by a computer search, we have found matrices providing explicit algorithms that show that, for example, m(4, 2) ≥ 30, m(10, 2) ≥ 259606 and m(15, 2) ≥ 2132870658.</p><p>The main part of the proof of the lower bound in Theorem 1.1 is its proof when n is a power of 2, using Theorem 4.1. The result can then be deduced for all n by some additional tricks. The additional tricks require a detailed constructive description for the proof for powers of two and are thus omitted, due to space limitations. Here is the proof for powers of two. Proposition 5.2 For every n which is a power of 2 there exists an n by (n + 1) matrix B of rank n with {-1, 1}-entries so that every nontrivial integral solution y = (y 1 , . . . , y n+1 ) of the system By = 0 satisfies n+1 j=1</p><formula xml:id="formula_12">|y j | ≥ 1 2e 4n β 2 n n n/2 . Proof. Let F (x 1 , . . . , x n ) : {-1, 1} n → {-1, 1}</formula><p>be a threshold gate satisfying the assertion of Theorem 4.1. Consider the following system of 2 n inequalities with the n variables w 1 , . . . , w n n j=1</p><formula xml:id="formula_13">j w j ≥ 1 if ( 1 , . . . , n ) ∈ {-1, 1} n , F ( 1 , . . . , n ) = 1, n j=1 j w j ≤ -1 if ( 1 , . . . , n ) ∈ {-1, 1} n , F ( 1 , . . . , n ) = -1.</formula><p>Since F can be realized with weights w 1 , . . . , w n , t where t = 0 there is a solution of the above system of inequalities. By a standard result from the theory of Linear Programming, which we omit, there is a solution in which n inequalities are tight, where the linear forms of these inequalities have full rank.</p><p>Let C denote the n by n matrix whose rows are n tight independent linear forms L i as above and let δ be the corresponding vector of values of L i (w ). Note that C is an n by n matrix of full rank with {-1, 1} entries and δ is a vector with {-1, 1} coordinates. By the discussion above, our system of inequalities has a solution w = (w 1 , . . . , w n ) which is the unique solution of the system of n equations Cw = δ. Let B be the n by (n + 1) matrix obtained from C by adding to it the column δ. Then y = (w 1 , . . . , w n , -1) is a nontrivial solution of the system By = 0 and any integral solution of it must be an integral multiple of y (since the last coordinate has to be integral). Hence, any integral solution y of the system By = 0 is of the form y = py = (pw 1 , . . . , pw n , -p), where p is an integer, and it thus follows that either the vector of first n coordinates of any such solution or its additive inverse satisfies all inequalities in the system above. This shows that for any such y = (y 1 , . . . , y n+1 ) either w i = y i or w i = -y i satisfy</p><formula xml:id="formula_14">F (x 1 , . . . , x n ) = sign( n i=1 w i x i ) for all (x 1 , . . . , x n ) ∈ {-1, 1} n .</formula><p>By Theorem 4.1 this implies that the absolute value of each of the first n coordinates of y is at least 1 2ne n 4β 2 n n n/2 , completing the proof of the proposition, and implying, in view of Proposition 5.1, the assertion of Theorem 1.1 as well. 2 Remark. Note that since the matrix B in the last proposition has no zeros, in the weighing algorithm it provides every coin participates in every weighing. We note also that the proof here can be converted into a constructive one by some additional work, thus yielding an explicit algorithm for the corresponding problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Three weights or more</head><p>In this section we sketch the proof of Theorem 1.2. Note, first that by the discussion in Section 2, m(n, k) is simply the maximum integer m such that there exists an n by m matrix A ∈ A n,m for which ker(A) ∩ W m,k contains only constant vectors, where W m,k is the set of all vectors of length m with positive coordinates in which the number of distinct coordinates is at most k. The upper bound in Theorem 1.2 is rather simple, and is proved in the following lemma. (</p><formula xml:id="formula_15">)<label>2</label></formula><p>Therefore,</p><formula xml:id="formula_16">m(n, k) ≤ C n log n log k for some absolute constant C.</formula><p>Proof. Given a matrix A ∈ A n,m corresponding to an optimal algorithm, let v 1 , . . . , v m denote the columns of A. Define</p><formula xml:id="formula_17">S = { m j=2 r j v j , r j ∈ , 0 ≤ r j ≤ r},</formula><p>where denotes the set of all integers. Then |S| = (r + 1) m-1 . We claim that no two vectors in S are equal. To see this, assume this is false and suppose m j=2 r j v j = m j=2 t j v j , where r j , t j are integers and there is at least one j for which r j and t j differ. Then the vector y = (0, r 1 -t 1 , r 2 -t 2 , . . . , r m -t m ) lies in ker(A) and is not a constant vector. Since the vector J consisting of m ones is also in ker(A), so is (r + 1)J + y, which is in W m,k as each of its coordinates is an integer between 1 and 2r + 1 ≤ k. Therefore, A does not correspond to a valid algorithm, showing that indeed all members of S are distinct.</p><p>Since each coordinate of any vector in S is an integer whose absolute value cannot exceed r(m-1) the inequality (2) follows, completing the proof. 2 Remark. One can apply the second moment method (see, e.g., <ref type="bibr" target="#b1">[2]</ref>) to improve the best estimate obtained for C by the above argument, but since we are not trying to optimize the constants here we omit the details.</p><p>The lower bound in Theorem 1.2 is proved by a probabilistic argument. Lemma 6.2 There exists an absolute positive constant c such that for every n and k satisfying</p><formula xml:id="formula_18">n + 1 ≥ k ≥ 3, m(n, k) ≥ c n log n log k .</formula><p>Proof (brief sketch). Since m(n, k) ≥ n + 1 for every k the result is trivial for, say, k ≥ n 1/3 (for all c &lt; 1/3), and we thus may assume that k ≤ n 1/3 . Given a large n, let m be an even integer satisfying m = (1 + o(1))cn log n/ log k, where c &lt; 1/3 is an absolute positive constant to be chosen later. Let A ∈ A n,m be a random matrix obtained by choosing each row or A, randomly and independently, among all row-vectors of length m containing precisely m/2 -1-coordinates and m/2 1-coordinates. To complete the proof it suffices to show that almost surely (that is, with probability that tends to 1 and n tends to infinity) the weighing algorithm corresponding to A solves the all equal problem for coins with up to k distinct weights. To do so, we must show that there is no nonconstant vector in W m,k that lies in ker(A). Note that there are infinitely many vectors in W m,k and hence the proof requires some ideas besides standard probabilistic arguments. This, however, can be done by considering certain minimal possible linear relations and by combining them with appropriate estimates for hypergeometric distributions. The details are rather complicated and will appear in the final version. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Concluding remarks</head><p>Our techniques here enable us to improve the known results for several additional seemingly unrelated questions. Three examples are the following.</p><p>• A (multi)-hypergraph H on a set N of n vertices is a collection of (not necessarily distinct) subsets of N , called edges. The hypergraph is d-regular if every member i ∈ N lies in precisely d-edges. A subhypergraph of H is a sub (multi)-set of H. A regular hypergraph H is indecomposable if it contains no proper nonempty regular subhypergraph. Let D(n) denote the maximum possible degree d so that there exists a d-regular indecomposable hypergraph on n vertices. The problem of determining or estimating the value of D(n), which is motivated by questions in game theory, received a considerable amount of attention (see <ref type="bibr" target="#b7">[8]</ref> and its references). Huckeman, Jurkat and Shapley proved that D(n) ≤ (n + 1) (n+1)/2 , for every n, Shapley showed that D(n) ≥ 2 n-1 n-1 for all n &gt; 2, and van Lint and Pollak improved this lower bound and showed that D(n) ≥ 2 n-3 + 1 for all n &gt; 2. Our techniques here enable us to improve the lower bound and show that it is not far from the above mentioned upper bound, that is, that the asymptotic behaviour of D(n) is given by D(n) = n ( 1 2 +o(1))n .</p><p>• Answering a question of Graham and Sloane <ref type="bibr" target="#b6">[7]</ref>, which was motivated by questions in Numerical Algebra, we can show that the maximum possible entry in an inverse of an n by n invertible matrix with {-1, 1} entries is n ( 1 2 +o(1))n . A similar estimate holds for {0, 1}-matrices.</p><p>• As described in Section 4, Håstad proved that for every n which is a power of 2 there is a threshold gate F (x 1 , . . . , x n ) such that in any realization of it with integral weights, some</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Theorem 1 . 1</head><label>11</label><figDesc>The function m(n, 2) satisfiesm(n, 2) = n ( 1 2 +o(1))n ,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Proposition 3 . 1</head><label>31</label><figDesc>The most efficient algorithm solving the all equal problem for m coins with arbitrary weights uses m -1 weighings.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Lemma 6 . 1</head><label>61</label><figDesc>Suppose k ≥ 3, put m = m(n, k) and define r = (k -1)/2 . Then (r + 1) m-1 ≤ (2r(m -1) + 1) n .</figDesc></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Research supported in part by a USA Israeli BSF grant and by the Fund for Basic Research administered by the Israel Academy of Sciences.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>weights are of absolute value at least n ( 1 2 +o(1))n . He further mentioned that it is not clear how to get a similar estimate for all values of n (although, as he remarked, this is not extremely intriguing, as his result clearly implies that for every n some threshold gates of n inputs require weights of size at least n ( 1 4 +o(1))n .) Combining his technique with some of our ideas here we can show that in fact for every n, some threshold gates of n inputs require weights of size n ( 1 2 +o(1))n .</p><p>The results in Section 5 apply to a slightly more general case which we may call generic weights. A set of weights w 1 , . . . , w t is called generic if any vector of integers (λ 1 , . . . , λ t ) that satisfies t i=1 λ i = 0 and t i=1 λ i w i = 0 is the zero vector. Note that any set of two numbers is generic. Let m (n) denote the maximum possible number m such that given a set of m coins out of a collection of coins of unknown generic weights, one can decide if all the coins have the same weight or not using n weighings in a regular balance beam. It can be shown that the results described in Section 5 apply to this case (without any essential change in the proofs) and show (constructively) that m (n) = n ( 1 2 +o(1))n . Another variant of the all equal problem for two weights is the following. Let M (n) denote the maximum possible number m such that given a set of m coins out of a collection of coins of an arbitrary number of unknown distinct weights, and given a distinguished coin which is known to be either the heaviest or the lightest one among the given m coins, one can decide if all the coins have the same weight or not using n weighings in a regular balance beam. Note that the distinguished coin may be either the heaviest or the lightest, and it is not known in advance which of the two it is. If there are only two possible weights, then any coin is distinguished, and hence m(n) ≥ M (n). We can extend our method here and show that the asymptotic behaviour of M (n) also satisfies M (n) = n ( 1 2 +o(1))n . The proof of the lower bound in Theorem 1.2 described in Section 6 is not constructive. It would be interesting to find a constructive proof yielding an explicit algorithm for the corresponding problem. We can describe a constructive algorithm for the case of three (unknown) weights, known to form an arithmetic progression. Even this seemingly simple case, where n weighings suffice to solve the problem for Θ(n log n) coins, requires some nontrivial construction whose detailed description is omitted.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Regular hypergraphs, Gordon&apos;s lemma, Steinitz&apos;s lemma and Invariant Theory</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Berman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Combinatorial Theory, Ser. A</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="91" to="97" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The Probabilistic Method</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Spencer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Linear decision trees: volume estimates and topological bounds</title>
		<author>
			<persName><forename type="first">A</forename><surname>Björner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovász</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename></persName>
		</author>
		<author>
			<persName><forename type="first">-C</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 24 th ACM STOC</title>
		<meeting>24 th ACM STOC<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1992">1992</date>
			<biblScope unit="page" from="170" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Linear decision trees, subspace arrangements and Möbius functions</title>
		<author>
			<persName><forename type="first">A</forename><surname>Björner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovász</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. AMS</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="677" to="706" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A new competitive algorithm for the counterfeit coin problem</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">D</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">K</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="213" to="218" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">On the complexity of computation under varying sets of primitives</title>
		<author>
			<persName><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lipton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automata Theory and Formal Languages</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">H</forename><surname>Bradhage</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1975">1975</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="110" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Anti-Hadamard matrices</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">J A</forename><surname>Sloane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linear Algebra and its Applications</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="113" to="137" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A survey of the maximum depth problem for indecomposable exact covers</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Graver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Colloq. Math. Soc. Soc. János Bolyai</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="731" to="743" />
			<date type="published" when="1973">1973</date>
			<publisher>North Holland</publisher>
			<pubPlace>Amsterdam</pubPlace>
		</imprint>
	</monogr>
	<note>Infinite and Finite Sets</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Coin-weighing problems</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Nowakowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Amer. Math. Monthly</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="164" to="167" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On the size of weights for threshold gates</title>
		<author>
			<persName><forename type="first">J</forename><surname>Håstad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Discrete Math</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="484" to="492" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">An Introduction to the Theory of Neural Computation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hertz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Krogh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Palmer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">A competitive algorithm for the counterfeit coin problem</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">D</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">K</forename><surname>Hwang</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Muroga</surname></persName>
		</author>
		<title level="m">Threshold Logic and its Applications</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley-Interscience</publisher>
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Theory of Linear and Integer Programming</title>
		<author>
			<persName><forename type="first">A</forename><surname>Schrijver</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
