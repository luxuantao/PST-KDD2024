<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hybrid Sensor Networks: A Small World</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Gaurav</forename><surname>Sharma</surname></persName>
							<email>gsharma@purdue.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Center for Wireless Systems and Applications School of Electrical and Computer Engineering</orgName>
								<orgName type="institution">Purdue University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ravi</forename><surname>Mazumdar</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Electrical and Computer Engineering</orgName>
								<orgName type="institution">University of Waterloo</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Hybrid Sensor Networks: A Small World</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5F04918094F4EA386FD89D18A04571A0</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.1 [Computer-Communication Networks]: Network Architecture and Design; G.3 [Probability and Statistics]: Probabilistic algorithms Algorithms</term>
					<term>Performance</term>
					<term>Theory</term>
					<term>Design Sensor Networks</term>
					<term>Graph Theory</term>
					<term>Small World Networks</term>
					<term>System Design</term>
					<term>and Routing</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we investigate the use of limited infrastructure, in the form of wires, for improving the energy efficiency of a wireless sensor network. We call such a sensor network -a wireless sensor network with a limited infrastructural support -a hybrid sensor network. The wires act as short cuts to bring down the average hop count of the network, resulting in a reduced energy dissipation per node. Our results indicate that adding a few wires to a wireless sensor network can not only reduce the average energy expenditure per sensor node, but also the non-uniformity in the energy expenditure across the sensor nodes.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Recent advances in the MEMS-based sensor technology and wireless communications have enabled the development of relatively inexpensive and low-power wireless sensors. The common vision is of a large sensor network, consisting of thousands of these tiny devices working in collaboration with each other, to achieve some common goal. Potential applications of such networks include habitat monitoring, soil quality monitoring, detection of hazardous chemicals and forest fires, military surveillance, monitoring seismic activity, etcetera.</p><p>There are several challenges that arise in the design of sensor networks. One of the main challenges is to design energy efficient sensor networks. This has lead to significant research at various levels of the protocol stack. At the level of the physical layer, the researchers are developing lowpower hardware for the sensor nodes <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b2">2]</ref>. Several power aware protocols <ref type="bibr" target="#b3">[3,</ref><ref type="bibr" target="#b4">4]</ref> have been developed for the medium access control (MAC) in sensor networks. In addition to this, various energy efficient routing, clustering, and data aggregation protocols have also been developed <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b6">6]</ref>.</p><p>The main source of energy dissipation in a sensor node is the transmission and reception of packets over the wireless interface. In this paper, we investigate the use of a limited infrastructure, in the form of wires, for reducing the energy dissipation in a wireless sensor network. We show that the wires can be used as short cuts to reduce the average hop count of the network, resulting in a reduced energy dissipation per node. We also show that the addition of wires can significantly reduce the non-uniformity in the energy dissipation across the sensor nodes. The reduction in the per-node energy dissipation coupled with more uniform energy dissipation across the sensor nodes, significantly increases the network lifetime.</p><p>Note that in many applications like tracking enemy movements and remote surveillance, it might not be possible to augment the network with wires. For some other short term applications, adding wires to the network might be infeasible because of the cost involved in wiring. However, for applications like habitat monitoring (see <ref type="bibr" target="#b7">[7,</ref><ref type="bibr">8]</ref>), which require long term data collection and dissemination, it might be economically feasible to augment the network with wires.</p><p>Networked Info-mechanical Systems (NIMS), which are currently being developed at UCLA and partner universities <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b10">10]</ref>, are particular instances of the type of scenario we consider in this paper. NIMS infrastructure consists of a collection of steel cables, each attached to any two points -buildings, trees, or other natural structures -that serve as suspension points. The nodes which are suspended on the cables collect data about the environment through a range of sensors that can be lowered or elevated; and also move, activate and recover fixed nodes set along the cable pathway. They also have the ability to dock when necessary to recharge their energy source. In addition to these aerially suspended nodes, which can replenish their energy resources, NIMS architecture also contains untethered wireless sensor nodes. These nodes provide access to non-navigable areas. An efficient use of the infrastructural support along with the capability to harvest solar energy might possibly elim- inate the need for replacement/maintenance of the untethered wireless sensor nodes in NIMS, and other such hybrid sensor networks.</p><p>The rest of the paper is organized as follows. Our model and related work are discussed in Section 2. The average energy dissipation and the non-uniformity of the energy dissipation across the nodes in a wireless sensor network are the topics we study in Section 3. These issues are further studied in the context of a hybrid sensor network; for the static sink node case in Section 5, and for the mobile sink node case in Section 5. We summarize our main findings in Section 6, and end this paper with some concluding remarks in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">MODEL AND RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Network and Transmission Model</head><p>We consider a sensor network formed by n sensor nodes, distributed uniformly inside a square A of unit area (see Figure <ref type="figure" target="#fig_0">1</ref>). The sensor nodes are equipped with wireless transceivers, for communication purposes. There is a single sink node, located arbitrarily inside A. The sensor nodes as well as the sink node could either be static or mobile. Although some of our results are proved under static network conditions, they would also hold for mobility models under which the node distribution remains uniform at all times. The random walk mobility model, the random direction mobility model, and the random way-point mobility model (see <ref type="bibr" target="#b11">[11]</ref> for a description of these mobility models) on a 2-d torus or a sphere are canonical examples of such mobility models.</p><p>We consider a homogeneous scenario where all sensor nodes generate data at the same rate, which is delivered to the sink node, possibly using multiple hops. For simplicity, we consider a slotted system in which each slot is of duration T seconds. All the transmissions begin and end at slot boundaries. Let τt denote the set of nodes which are transmitting during the time-slot t. We assume that all transmitters employ the same power level, P ; and consider a transmission model which is similar to the physical model introduced in <ref type="bibr" target="#b12">[12]</ref>. Under our transmission model, a node i is capable of transmitting a packet at W bits/sec to node j during the time-slot t if, and only if, the SINR at node j is above a threshold, say β, i.e.,</p><formula xml:id="formula_0">P γij(t) No + 1 L P k =i,k∈τt P γ kj (t) &gt; β,<label>(1)</label></formula><p>where γij (t) is the channel gain from node i to node j during the time-slot t; No is the background noise power; and L is the processing gain of the system. The channel gain is assumed to be of the form</p><formula xml:id="formula_1">γij(t) = 1 d α ij (t) ,<label>(2)</label></formula><p>where dij(t) is the distance between the nodes i and j during the time-slot t; and typically, α ∈ (2, 6). Since there is no power control, the per-packet energy spent in the RF amplifier at the transmitter is P T . Let Eo be the per-packet energy spent in the transmitter or the receiver circuitry, then</p><formula xml:id="formula_2">Et = P T + Eo; Er = Eo,<label>(3)</label></formula><p>where Et and Er are the per-packet energy spent at the transmitter and the receiver, respectively. Note that in the above interference model we assumed that the network topology does not change during a timeslot. This is a reasonable assumption since the time-scale at which the network topology changes, either due to node mobility or due to node failure, is usually much slower than the time-scale for a packet transmission. In fact, this assumption is not really essential for the main results of this paper to hold, however, relaxing this assumption would require that we carefully look at the node mobility process; which is not the main goal of this paper.</p><p>The infrastructural support is assumed to be present in the form of wires, equipped with wireless transceivers at their ends. We assume that the wireless transceivers attached to the wire ends can replenish their energy, like in NIMS <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b10">10]</ref>, so that there are no energy constraints at these transceivers. The wires can either be placed in a random or deterministic manner. The wire placement schemes are considered in Sections 4 and 5.</p><p>Next, we discuss some related work in the literature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Related Work</head><p>Our work has similarities to some aspects of the small world networks that are modeled as a connectivity graph having the three properties; namely: sparseness, clustering, and small diameter. Watts and Strogatz <ref type="bibr" target="#b13">[13]</ref> were among the first to show that the addition of a few random connections (or rewiring of a few local connections * ) to a ring lattice can make it into a small world graph. Since then, this idea has become extremely popular, and has been used in many different contexts, like, for example, in <ref type="bibr" target="#b14">[14]</ref> it is used to do efficient resource query in wireless ad hoc networks. We note there are some significant differences between our work and the earlier work on small world networks. Some of them we list below:</p><p>• Since our goal is the optimal network design, unlike most of the previous works on small world networks, we do not restrict ourselves to randomly placed short cuts (wires), i.e., we consider both random as well as deterministic placement of short cuts (wires). * Note that the rewiring can be problematic as it can result in loss of connectivity.</p><p>• For a network to be termed a small world network its diameter should be on the order of log n or at most polylogarithmic in n which, under random placement of short cuts, requires having about one long range connection (short-cut) per node. As a result, earlier works on small world networks (see, for example, <ref type="bibr" target="#b15">[15]</ref>) have focused on a regime in which there are about the same number of short cuts as the number of nodes in the network. However, due to practical considerations, we are mainly interested in a regime in which the number of short cuts is much smaller in comparison to the number of nodes in the network.</p><p>Also similar in spirit to our work is the work in <ref type="bibr" target="#b16">[16]</ref>. In <ref type="bibr" target="#b16">[16]</ref>, the authors investigate the use of a limited infrastructure for improving the energy efficiency of a wireless sensor network. To the best of our knowledge, they were the first to show that a few deterministically placed wired short-cuts can improve the energy efficiency of a wireless sensor network. Next, we list the main differences between the work in <ref type="bibr" target="#b16">[16]</ref> and that of this paper, thus highlighting the main contributions of this paper:</p><p>• The objective of <ref type="bibr" target="#b16">[16]</ref> is to analyze one particular scheme for placing the wires, whereas, the objective of this paper is to find out the best possible gains † that are achievable, given a cost budget; and propose schemes which can either achieve or come close to achieving those gains.</p><p>• In the scheme considered in <ref type="bibr" target="#b16">[16]</ref>, all wires originate from the sink node (which is assumed to be in the center of the network) and end at points which are equidistant from the sink node. It is easily seen that such a wire placement scheme can only achieve a constant factor of reduction in the energy expenditure for all n, whereas, some of the schemes we propose can achieve energy savings on the order of p n/ log n (see Sections 4 and 5).</p><p>• Unlike <ref type="bibr" target="#b16">[16]</ref>, we do not restrict ourselves to the static sink node case.</p><p>Several energy efficient routing protocols for wireless sensor networks have been proposed in the literature. Most of these protocols <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b17">17]</ref> are based on data centric routing, and require application awareness. The energy efficiency in these protocols is achieved by means of data aggregation, caching, and elimination of redundant packet transfers by application specific naming of data (meta-data). Whenever application specific knowledge is available, these protocols can be used in a hybrid sensor network to further reduce the energy dissipation in the sensor nodes. In fact, in a hybrid sensor network the transceivers attached to the wire ends can be equipped with a small computing unit for data compression, a role normally assigned to the cluster heads in wireless sensor networks (see, for example, <ref type="bibr" target="#b5">[5]</ref>, <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b19">[19]</ref>, <ref type="bibr" target="#b20">[20]</ref>). This can further reduce the energy dissipation in the wireless sensor nodes. However, this is a topic for future research; we do not consider it here, in this paper.</p><p>Hybrid ad hoc networks have been studied in <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b22">22]</ref>. Hybrid sensor networks differ from hybrid ad hoc networks in that the communication scenario in a hybrid sensor network is many-to-one, rather than the many-to-many communication scenario, which is typical of hybrid ad hoc networks. More importantly, in <ref type="bibr" target="#b21">[21,</ref><ref type="bibr" target="#b22">22]</ref>, the authors study the throughput capacity of hybrid ad hoc networks, whereas, we study the energy dissipation in a hybrid sensor network.</p><p>Recently, we have become aware of a related work that aims to exploit the heterogeneity in sensor networks <ref type="bibr" target="#b23">[23]</ref>. The authors identify three common types of hardware heterogeneities: computational heterogeneity -some nodes having more computational power than the others, link heterogeneity -some nodes having a direct and highly reliable connection to the sink node, and energy heterogeneity -some nodes having unlimited energy supplies. They then study the impact of the energy heterogeneity and link heterogeneity on the average energy consumption, the network lifetime, and the end-to-end successful packet delivery rate. We note that by connecting the (static) sink node to the other parts of the sensor network using wires (see Section 4), in a certain way, we are able to exploit both the link heterogeneity as well as the energy heterogeneity (wireless transceivers that are attached to the wire-ends can be thought of as nodes having unlimited energy supplies and also a direct connection to the sink node). Although, we do not study the end-to-end successful packet delivery rate in this paper, it is straightforward to use our results regarding the average hop count of the network to bound the end-to-end successful packet delivery rate. The work in <ref type="bibr" target="#b23">[23]</ref> complements our work in the sense that they consider realistic MAC and routing schemes for a specific network setting, whereas, we consider a general network setting but with ideal MAC and routing. Finally, our analytical approach allows us to provide results for networks of arbitrary (but large) sizes and arbitrary number of wires, which is not possible under a simulation based approach, as in <ref type="bibr" target="#b23">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Notation</head><p>We use the following standard notation throughout the rest of this paper. For f (n), g(n) ≥ 0 for all n,we say that</p><formula xml:id="formula_3">f (n) = o(g(n)) ↔ lim n→∞ f (n) g(n) = 0, f (n) = O(g(n)) ↔ lim sup n→∞ f (n) g(n) &lt; ∞, f (n) = ω(g(n)) ↔ g(n) = o(f (n)), f (n) = Θ(g(n)) ↔ f (n) = O(g(n)) and g(n) = O(f (n)).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ENERGY DISSIPATION IN A WIRELESS SENSOR NETWORK</head><p>We now study the energy dissipation in a wireless sensor network. Consider a sensor network formed by n wireless sensor nodes and a single sink node, placed inside the square A. The sensor nodes are assumed to be uniformly distributed within A. The position of the sink node can be arbitrary. The network is divided into square cells of size a(n) = q 32 log n n ‡ . Thus there are a total of N (n) = 1/a 2 (n) cells in the network. Note that this choice of the cell size is not arbitrary; the cell size has been chosen keeping in mind the connectivity of the network, as will become clear shortly.</p><p>All the transmissions are carried out at the same power level, between adjacent cells; by adjacent cells we mean the cells which are horizontal or vertical neighbors of a given cell. We assume that each cell uses the greedy geographic routing to make the forwarding decisions, i.e., each cell forwards its packets to a neighboring cell which is "closest" to the cell containing the sink node. The distance metric used for picking the "closest" neighbor is the distance between the center of the neighboring cell and that of the cell containing the sink node. Note that each cell in the network must know the location of the cell containing the sink node. If the sink node is static, its location needs to be flooded in the network only once to enable every cell to use the greedy geographic routing. However, with a mobile sink node, the location information needs to be flooded "every now and then," depending on the speed of the sink node. A typical path taken by a packet from its source node to the sink node, using the greedy geographic routing, is shown in the Figure <ref type="figure">2</ref>.</p><p>Remark 1. Note that the reason for considering the above division of the network into cells is to simplify the analysis. One would expect that our main results should hold even when the cellular structure is not present and distributed MAC and routing schemes are used. For example, GFG <ref type="bibr" target="#b24">[24]</ref> or its variant GPRS <ref type="bibr" target="#b25">[25]</ref> can be used for routing when the location information is available; and the scheme presented in <ref type="bibr" target="#b26">[26]</ref> can be used to approximate greedy geographic routing when the location information is unavailable.</p><p>Next, we provide two key results which show that the nearest neighbor communication scenario along with the greedy geographical routing can guarantee almost sure delivery of the packets to the sink node. Unless otherwise stated, we will consider the nodes to be stationary. As discussed before, the results can be generalized to the case of mobile nodes as well. We start with the following Lemma which shows that if n is large, then each cell contains Θ(log n) nodes almost surely.</p><p>Lemma 1. Let Ni be the number of nodes in cell i. Then, we have</p><formula xml:id="formula_4">P " lim inf n→∞ {16 log n ≤ Ni ≤ 48 log n, 1 ≤ i ≤ N (n)} " = 1</formula><p>which may alternatively be stated as: for large n,</p><formula xml:id="formula_5">{16 log n ≤ Ni ≤ 48 log n, 1 ≤ i ≤ N (n)} almost surely.</formula><p>Proof. Note that the Ni's are all Bernoulli(n, 1/N ) random variables. For a fixed i, using the Chernoff bound (for example, see <ref type="bibr" target="#b27">[27]</ref>, page 68), we obtain</p><formula xml:id="formula_6">P " Ni &lt; n 2N (n) « ≤ e - n 12N (n) (4) P " Ni &gt; 3n 2N (n) « ≤ e -n 8N (n)<label>(5)</label></formula><p>Combining ( <ref type="formula">4</ref>) and ( <ref type="formula" target="#formula_6">5</ref>), and substituting the value of N , we obtain</p><formula xml:id="formula_7">P (|Ni -32 log n| &gt; 16 log n) ≤ 2/n 8/3<label>(6)</label></formula><p>Noting that N (n) &lt; n for n &gt; 1, and applying the union bound, we have</p><formula xml:id="formula_8">P (|Ni -32 log n| &gt; 16 log n, 1 ≤ i ≤ N (n)) &lt; 2/n 5/3</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sink Node</head><p>Figure <ref type="figure">2</ref>: A typical path taken by a packet from its source to the sink node.</p><formula xml:id="formula_9">Now, since X 2/n 5/3 &lt; ∞,</formula><p>the result follows from the first Borel-Cantelli Lemma and noting that</p><formula xml:id="formula_10"> lim sup n→∞ An ff = n lim inf n→∞ A c n o ,</formula><p>for a sequence of events (An) ∞ n=1 .</p><p>The next issue we address is how to schedule the transmissions across the network in a way so that they do not interfere too much with each other. Obviously, if the transmissions from various cells were not co-coordinated then some of them might fail due to the interference from other simultaneous transmissions in the network. The following Lemma provides a transmission schedule in which each cell can successfully transmit at least once within a fixed number of time-slots.</p><p>Proposition 1. Under the transmission model considered in Section 2.1, there exists a transmission schedule in which each cell can successfully transmit at least once in every K 2 time-slots; with K &gt; 0 being an integer, independent of n.</p><p>Proof. The proof is constructive; not only do we show that such a transmission schedule exists, we also construct one. Our construction is similar to the construction of a transmission schedule under the protocol model of interference in <ref type="bibr" target="#b28">[28]</ref>. The idea is to construct equivalence classes of cells such that all cells in an equivalence class can transmit simultaneously without interfering too much with one another. Let K &gt; 0 be an integer, to be fixed later. We say that cell u is related to cell v, denoted u ∼ v, if u and v are a vertical and horizontal distance of exactly some multiple of K away from each other. It is easily seen that this is an equivalence relation; which divides the network into K 2 (disjoint) equivalence classes. The shaded cells in the Figure <ref type="figure" target="#fig_1">3</ref> belong to one such equivalence class for K = 4. Now the scheduling strategy is to allow only the nodes in one particular equivalence class to transmit during a timeslot; and to schedule the equivalence classes in a roundrobin fashion during successive time-slots. Clearly, each cell belongs to some equivalence class, and would therefore get a chance to transmit once every K 2 time-slots. Next, we show that under such a transmission schedule the SINR at each receiver would be at least β, provided K is large enough.</p><p>Consider an arbitrary cell in the network, say co. Consider a node in co, say node i, transmitting to a node in one of the adjacent cells, say node j. Let us call all cells at a lattice distance of lK from co, the level l cells. Let Φ l denote the set of level l cells, and let |Φ l | be its cardinality. Clearly, |Φ l | ≤ 4l for all l. Observe that a node which is inside one of the cells in Φ l , is at least at a distance of (Kl -2)a(n)/2, from a node that is inside a cell adjacent to co (see Figure <ref type="figure" target="#fig_1">3</ref>). Using this, we can bound the interference power at node j, denoted by I, as follows:</p><formula xml:id="formula_11">I ≤ 2/Ka(n) X l=1 4 • l • P 2 α (kl -2) α a α (n) ≤ P 2 α+2 (K -2) α a α (n) ∞ X l=1 l 1-α ≤ P 2 α+2 C (K -2) α a α (n) where C = P ∞ l=1 l 1-α &lt; ∞, since α &gt; 2.</formula><p>Now since i and j are in adjacent cells, the distance between them is less than √ 5a(n), and therefore the received power at j is greater than P/( √ 5a(n)) α . Thus, if</p><formula xml:id="formula_12">K ≥ 2 + 2 1+1/α C 1/α " 1 5 α/2 β - Noa α (n) P « -1/α ,</formula><p>then the SINR at j would be greater than β. Now if P is large enough, say P = Noa α (n)5 α/2 β for some &gt; 1, then we see that K can be chosen to be a constant (independent of n). Since the choice of co, i, and j, is arbitrary, we have proved our claim.</p><p>Remark 2. Using the above scheduling scheme along with the greedy geographic routing, each packet would almost surely reach the sink node, thus ensuring the almost sure connectivity of the network (see <ref type="bibr" target="#b29">[29]</ref>). Now we turn our attention to the main topic of this section, namely, the energy expenditure in a wireless sensor network. Let λ packets/s be the common rate of generation of packets at each node in the network. The per-node average rate of energy drainage, denoted by E[ED], can then be calculated as:</p><formula xml:id="formula_13">E[ED] = λE[H](Et + Er),</formula><p>where E[H] is the average number of hops, with the average being taken across all the nodes and across all possible realizations of the random distribution of the nodes. We now estimate E[ED].</p><formula xml:id="formula_14">Proposition 2. E[H] = Θ " p n/ log n " . Thus, E[ED] = λ(Et + Er)Θ " p n/ log n " .</formula><p>Proof. The upper bound follows by noting that a packet generated at any arbitrary node in the network can reach the sink node in at most 2 p N (n) -2 = Θ( p n/ log n) hops. In order to prove the lower bound, observe that for any arbitrary position of the sink node there would at least be N (n)/4 cells at a distance greater than 1/4 from the cell containing the sink node. This follows easily by a simple geometrical argument (see Figure <ref type="figure" target="#fig_0">1</ref>). Now, a packet generated at one of these cells would take at least 1/4a(n) = p N (n)/4 hops to reach the destination node. Using Lemma 1, it follows that almost surely each of these cells would contain more than 16 log n nodes, for large n. Thus, we obtain</p><formula xml:id="formula_15">E[H] ≥ N (n) 4 • 16 log n • p N (n) 4n Noting that N (n) = 1/a 2 (n) = Θ(n/ log n), the result fol- lows.</formula><p>The above Lemma gives the rate of energy drainage averaged across all the nodes in the network. Note that the rate of energy drainage may not be uniform across different nodes in the network. Under static conditions, it is clear that the nodes which are closer to the sink node, will relay more packets than the other nodes, and correspondingly, will drain their energies much quicker than the other nodes. In order to characterize this disparity in the energy dissipation, we define: Definition 1 (Energy Dissipation Skew). Let Ei be the average rate at which the node i drains its energy due to the transmission and reception of packets. Then, the energy dissipation skew or the EDS is given by:</p><formula xml:id="formula_16">EDS = max i=1,...,n Ei/ min i=1,...,n Ei<label>(7)</label></formula><p>The EDS is a random variable whose value depends on how the nodes are distributed as well as on the position of the sink node. Clearly, we would like the EDS to be close to 1, so as to ensure a uniform rate of energy dissipation across the sensor nodes. However as we show now, the EDS is usually very high in case of a wireless sensor network, implying a highly non-uniform rate of energy dissipation across the sensor nodes. Consider a wireless sensor network using the adjacent cell communication scheme discussed above. Observe that in order to reach the sink node, each packet must pass through one of the four cells that are adjacent to the cell containing the sink node, and each of which contains Θ(log n) nodes almost surely. Note also that the nodes located in one of the four corner cells are not involved in any relaying. Therefore, the EDS for a wireless sensor network is Θ(n/ log n) almost surely.</p><p>In the above analysis, we ignored the node mobility; the node mobility can possibly result in an improvement of the EDS over long periods of time. But such an improvement, if any, can only be estimated if complete knowledge of the motion of each node is available. Since we do not assume any knowledge of the node mobility process, we will not consider this issue any further. The EDS we consider should therefore be interpreted as the worst case or the short term EDS.</p><p>In the next section, we will show that both the average hop count and the (worst case) EDS can be significantly reduced with the introduction of a small number of wired short cuts in the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">HYBRID SENSOR NETWORKS: STATIC SINK</head><p>We now study the energy dissipation in a hybrid sensor network with a static sink node. The sensor nodes can either be static or mobile. The problem we consider is the following: given a budget of l(n) wires per cell, how should the wires be placed so as to minimize the average hop count of the network, and to reduce the EDS as much as possible. Note that our problem formulation is motivated by the cost constraints that one might have in placing the wires, i.e., the value of l(n) would typically be dictated by the cost constraints. It turns out that in order to have non-negligible reductions in the average hop count or the EDS, l(n) must be ω(log n/n); that is, the total number of wires, N (n)l(n), should be an unbounded function of n. Also, due to practical considerations, we will only be interested in the case where l(n) = O(1). In particular, we will assume that l(n) &lt; 1 for all n, i.e., less than one wire per cell on an average.</p><p>As far as minimizing the average hop count is concerned, it is intuitive to believe that an optimal placement of the wires should have all the wires originating from the cell containing the sink node. This is indeed the case, as we now show. Lemma 2. A wire placement scheme which minimizes the average hop count of the network should have all the wires originating from the cell containing the sink node.</p><p>Proof. We will give a proof by contradiction. Let Υ be a scheme that minimizes the average hop count of the network. Let cs be the cell containing the sink node (assumed static). Suppose Υ places a wire between cells u, v = cs. Let dΥ(s, t) be the distance in hops between cells s and t under Υ. Note that a "hop" could either be a wired hop or a wireless hop. Without loss of generality, let us suppose dΥ(u, cs) ≤ dΥ(v, cs). In this case, it is clear that no node will use the link between u and v, denoted by luv, in the direction from u to v for routing its packets to the sink node (as this would increase the number of hops). Let Φ denote the set of cells which use luv, and let |Φ| denote its cardinality. Now, consider scheme Υ which is obtained from Υ by replacing luv with a link between v and cs. Also, consider Υ obtained from Υ by replacing luv with a link between cells o and cs, where o is a cell which is not connected with cs under Υ (such a cell always exists since l(n) &lt; 1). Let</p><formula xml:id="formula_17">Υ = ( Υ , if |Φ| &gt; 0 Υ , otherwise.</formula><p>We claim that the average hop count under Υ is strictly smaller than the average hop count under Υ. Note that once we prove this, we will be done as this would contradict our initial assumption that Υ minimizes the average hop count of the network. Let us first consider |Φ| &gt; 0. Observe that no cell uses luv in the direction from u to v, for routing its packet to cs. And for a cell, say t, which uses luv in the direction from v to u, we have:</p><formula xml:id="formula_18">d Υ (t, cs) = dΥ(t, v) + 1 &lt; dΥ(t, v) + 1 + dΥ(u, cs) (u = cs) = dΥ(t, cs)</formula><p>Since |Φ| &gt; 0, it follows that the average hop count under Υ is strictly smaller than the average hop count under Υ. Now when |Φ| = 0, Υ cannot increase the increase the distance between a cell and cs. Clearly d Υ (o, cs) &lt; dΥ(o, cs), and therefore, the average hop count under Υ is strictly smaller than the average hop count under Υ.</p><p>We know now that in order to minimize the average hop count of the network, all the wires should originate from the cell containing the sink node. Next, we determine how much can one possibly reduce the average hop count and the EDS, when placing at most l(n) wires per cell on an average. Proposition 3. Under any wiring and routing scheme which uses at most N (n)l(n) wires, the average hop count must be Ω(1/ p l(n)). Furthermore, if the average hop count under such a scheme is o( p n/ log n), then the EDS must be Ω(1/l(n)).</p><p>Proof. First, let us look at the average hop count. In view of Lemma 2, we may assume that all wires originate from the sink node. Observe that the above result is trivial if l(n) = Θ(1), so assume that l(n) = o(1). In this case, without loss of generality we can assume that 1/4 p l(n) is an integer; if not, the proof can be carried out with 1/4 p l(n) in place of 1/4 p l(n). Now consider clusters of cells with 1/16l(n) cells each, similar to what is shown in Figure <ref type="figure" target="#fig_2">4</ref>. We call such clusters level1 clusters. Observe that for large n, there would be close to 16N (n)l(n) level1 clusters. Consider groups of level 1 clusters, each consisting of 9 level 1 clusters. We call such a group a level 2 cluster. Note that a level 2 cluster consists of a level 1 cluster, along with its 8 surrounding level 1 clusters. For large n, the number of level 2 clusters would be close to 16N (n)l(n)/9. Now consider one particular level 2 cluster, which does not contain the sink node. Observe that if none of the cells in this level 2 cluster has a wired connection with the cell containing the sink node, then all cells which are inside the level 1 cluster situated in the middle of this level 2 cluster, would have to route their packets over more than 1/4 p l(n) hops in order to reach the sink node. Since there are a total of N (n)l(n) wires, there would be close to 7N (n)l(n)/9 &gt; 2N (n)l(n)/3 level 2 clusters which do not have a wired connection. Noting that each level 2 cluster consists of 9/16l(n) cells, it follows that the average hop count must at least be</p><formula xml:id="formula_19">1 4 p l(n) • 2N (n)l(n) 3 • 9 16l(n) • 1 N (n) = 3 32 p l(n) .</formula><p>This proves our claim regarding the average hop count. Now, let us look at the EDS. Suppose the average hop count under the given scheme is o( p n/ log n). Observe that for any arbitrary position of the sink node, there would be at least 7N (n)/8 cells at a lattice distance of more than 1/4a(n) from the cell containing the sink node. Now since the total number of wires is N (n)l(n), and l(n) = o(1), more than 3N (n)/4 of these cells will have no wired connections. Recalling that the average hop count of the network is o( p n/ log n), it follows that at least N (n)/2 (actually, close to 3N (n)/4) of these, must be served by a cell having a wired connection. For if not, then the average hop count would be more than</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cluster of cells</head><formula xml:id="formula_20">N (n) 4 • 1 4a(n) • 1 N (n) = 1 16a(n) = Θ( p n/ log n).</formula><p>Since there are at most N (n)l(n) cells having a wired connection, the EDS must at least be 1/2l(n).</p><p>Having established the lower bounds on the average hop count and the EDS, we now provide a simple deterministic wiring scheme that achieves those bounds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Scheme 1</head><p>In this scheme, the wires are placed in a deterministic manner. For simplicity of notation, assume that 1/ p l(n) is an odd integer and p N (n)/l(n) is an integer. The scheme is the following:</p><p>• Wire Placement: Group the cells into clusters consisting of 1/l(n) cells each, as shown in the Figure <ref type="figure" target="#fig_2">4</ref>. For each cluster of cells, connect the cell in the middle the cluster with the cell containing the sink node.</p><p>• Routing: Each cell, first routes its packet to the nearest cell having a wired connection (using wireless transmissions), and from there onward, the packet is delivered to the sink node using the wired connection.</p><p>Clearly, the average hop count under the above scheme is Θ(1/ p l(n)). Now let us look at the EDS. Observe that all (1/l(n)) cells inside a cluster route their packets through the cell situated in the middle of the cluster, having a wired connection. Note also that the cells at the boundary of a cluster are not involved in any forwarding. Thus, the EDS under the above scheme is 1/l(n). These results can easily be extended to the general case, where 1/ p l(n) is not necessarily an odd integer and p N (n)/l(n) not necessarily an integer. In the general case, however, the EDS might not be exactly 1/l(n); but it will still be Θ(1/l(n)). In view of Proposition 3, this is the best achievable (in order terms) EDS and average hop count, under any wiring and routing scheme which uses at most l(n) wires per cell.</p><p>We have so far assumed that each cell (every node inside each cell) knows the location of the nearest cell having a wired connection. We now consider a simple protocol which can be used for maintaining this information in the presence of node mobility and node failures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Route Maintenance Protocol 1 (RMP1)</head><p>In this protocol, the transceivers attached to the wire ends periodically send out an advertisement (ADV) packet. The ADV packet is received by the nodes which are in the same cell as one of the transceivers. An ADV packet has a hop count field, which is initially set to 0. Upon receiving an ADV packet, one of the nodes will broadcast this packet to the adjacent cells, with the hop count field incremented by 1. We have already seen that the nodes which are present in one of the adjacent cells can successfully receive the packet (see the proof of Proposition 1). Each node keeps track of the neighboring cell (or the next hop) from which an ADV packet was received; this enables the cell to forward its packets to the "appropriate" cell when trying to reach the sink node. This process is continued until the maximum limit on the hop count is reached. The maximum hop count limit can be set close to 1/ p l(n), so as to limit the number of retransmissions and at the same time ensure that every cell receives the ADV packet from at least one wire. Observe that with the above choice of the hop count each ADV packet is received by Θ(1/l(n)) cells, and since there are N (n)l(n) wires in the network, the total number of transmissions of ADV packets in the network is Θ(N (n)) = Θ(n/ log n) per update; and the total number of receptions of ADV packets is Θ(N (n) log n) = Θ(n) per update (note Θ(log n) nodes receive an ADV packet in one transmission). Thus, the overall energy dissipation in one route maintenance epoch is Θ(nEr + nEt/ log n) = Θ(n) § per update. Note that instead of every node maintaining the next hop information, the location of the cell containing a wire-end can be included in the ADV packet. With this location information the nodes can use geographic routing, which is generally more robust to node failures, to reach the nearest wire-end.</p><p>How frequently the ADV packets should be sent would, in general, depend on the node mobility process as well as on the lifetime of the sensor nodes. If the sensor nodes are static and there are no node failures, then it would suffice to send the ADV packets only once. However, in dynamic network conditions the overhead of maintaining the routing information can be significant. There are two possible ways of eliminating this periodic route maintenance overhead:</p><p>1. One-time flooding: All wires flood their location information in the entire network, and each sensor node keeps track of this information. Since there are a total of N (n)l(n) wires, the cost of this one-time flooding would be Θ(n 2 l(n)/ log n). One-time flooding can totally eliminate the route maintenance overhead. However, note that the cost of one-time flooding can be significant when there are large of wires in the net- § Note that in a practical setting, an ADV packet would be much smaller in comparison to a DATA packet, and therefore, the energy spent in transmission/reception of an ADV packet would be much smaller than the energy spent in transmission/reception of a DATA packet. work, and moreover each node must keep track of the location of all the wires at all times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A group of cells</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sink node</head><p>2. Greedy geographic routing: Each node directly routes its packets to the sink node using the greedy geographic routing. In this case, the nodes only need to know the location of the sink node. Since the sink node is static, it is enough to flood the location information only once, with an overhead of Θ(n).</p><p>Clearly, the routing overhead under greedy geographical routing is much smaller than RMP1 or one-time flooding, and more over it does not require each node to keep track of the location of all the wires, as in one-time flooding. Next, we look at the performance of greedy geographic routing in terms of the average hop count and the EDS. Proposition 4. If each node uses greedy geographic routing to reach the sink node, then under all wiring schemes which use at most N (n)l(n) wires, for l(n) = Ω( p log n/n), the average hop count must be Ω(1/l(n)).</p><p>Proof. We only provide a proof for l(n) = ω( p log n/n). The proof for the case when l(n) = Θ( p n/ log n) can be carried out in a similar fashion, and is omitted. Clearly, if l(n) = Θ(1), then we have nothing to prove since the average hop count cannot be any smaller than Θ(1). So suppose l(n) = o(1). Consider disjoint groups of cells; each group consisting of a cell at a lattice distance &gt; 1/4l(n) from the cell containing the sink node, along with the first 1 4l(n) -1 ¶ cells which are on a shortest path from the cell to the sink node (see Figure <ref type="figure" target="#fig_3">5</ref>). For large n, there are close to 4N (n)l(n) &gt; 3N (n)l(n) such groups. Since there are less than N (n)l(n) wires in the network, at least in 2N (n)l(n) groups there are no cells having a wired connection. Observe that the average number of hops traversed by a packet ¶ We are assuming that 1/4l(n) is an integer; if not, the proof can be carried out with 1/4l(n) in place of 1/4l(n). By shortest path we mean a path which minimizes the hop count when there are no wires in the network. Note that there could be more than one shortest path from a cell to the sink node.</p><p>originating in one of these groups is more than 1/8l(n), and therefore the average hop count must at least be</p><formula xml:id="formula_21">2N (n)l(n) • 1 4l(n) • 1 8l(n) • 1 N (n) = 1 16l(n) ,</formula><p>proving the claim.</p><p>The above result shows that there is a price to be paid for reducing the routing overhead in that the average hop count becomes Ω(1/l(n)) instead of Ω(1/ p l(n)). It is easy to see that if the wires are placed as in Scheme 1, and greedy geographic routing is used by all the nodes, then the average hop count as well as EDS are of same order as in a wireless sensor network. Thus, there is almost no benefit of adding the wires in this case. Intuitively, this happens because the packets originating at "most" of the cells end up following the same path as in the case when there were no wires in the network. Next, we consider a simple probabilistic wire placement scheme which works well with the greedy geographic routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Scheme 2</head><p>We now consider a simple probabilistic wiring scheme that achieves the lower bound on the average hop count, given in Proposition 4. For technical convenience, we will consider a slightly different constraint on the total number of wires. In particular, the constraint would be to have at most l(n) &lt; 1 wires per cell on an average, with the average being taken across all possible realizations of the wiring scheme. The scheme is the following:</p><p>1. Wire Placement: For each cell in the network, connect it with the cell containing the sink node with a probability l(n) * * , independent of the other cells.</p><p>2. Routing: Each node uses greedy geographic routing to deliver its packets to the sink node.</p><p>We will now determine what the average hop count and the EDS are under the above scheme.</p><p>Proposition 5. For any l(n) = ω( p log n/n), the average hop count and the EDS under Scheme 2 are Θ(1/l(n)) and Θ(1/l 2 (n)), respectively.</p><p>Proof. The above results are trivial if l(n) = Θ(1); so suppose l(n) = o(1). Let us first look at the average hop count. Consider an arbitrary node in the network, say node o. Let co be the cell containing the node o, and let cs be the cell containing the sink node. Let No be the random variable representing the number of hops required by a packet to reach the sink node starting from the node o. Also, let (Ωo, F, P) be the probability space on which the events associated with random distribution of the wires and the nodes are defined, and let E denote the expectation under P. Observe that P(No &gt; i) is smaller than the probability that the first i nodes encountered by a packet do not have a wired connection with the sink node, that is,</p><formula xml:id="formula_22">P (No &gt; i) ≤ (1 -l(n)) i . Therefore, we have E[No] = ∞ X i=0 P(No &gt; i) ≤ ∞ X i=0 (1 -l(n)) i = 1/l(n).</formula><p>Since the choice of node o was arbitrary, we have proved the upper bound on the average hop count. Now for the lower bound, observe that for any arbitrary position of the sink node, there are at least N (n)/2 (actually, close to N (n)) cells at a lattice distance more than 1/l(n) from cs. Further, a packet originating in one such cell, takes at least 1/l(n) hops to reach the sink node, provided the first 1/l(n) cells on the path followed by this packet to-wards the sink node do not have a wired connection with cs; an event of probability (1l(n)) 1/l(n) . Thus, the average hop count must at least be 1 2</p><formula xml:id="formula_23">• 1 l(n) (1 -l(n)) 1/l(n) ≥ 1 8l(n) ,</formula><p>for large enough n. Now, let us look at the EDS. We will first establish the upper bound. Consider any arbitrary cell in the network, say cell co = cs. Note that the probability that a packet generated inside a cell which is at a lattice distance of i from co goes via co in order to reach the sink node is less than (1l(n)) i . Since there are at most 4i cells at a lattice distance of i from co, the average number of cells served by co is no more than</p><formula xml:id="formula_24">∞ X i=0 4i • (1 -l(n)) i ≤ 4 l 2 (n)</formula><p>Thus, the EDS is no more than 4/l 2 (n). For the lower bound, observe that a packet originating inside a cell which is at a lattice distance of i from cs must pass through one of the cells adjacent to co, provided the intermediate cells do not have a wired connection with cs; an event of probability (1l(n)) i-1 . Since for any arbitrary position of the sink node, there are at least i cells at a lattice distance of i from co, for i ≤ 1/l(n) † † , the average number of cells served by the cells adjacent to cs is no less than</p><formula xml:id="formula_25">1/l(n) X i=0 i • (1 -l(n)) i-1 ≥ 1/l(n) X i= 1/2l(n) 1 2l(n) • 1 4 ≥ 1 16l 2 (n) ,</formula><p>for large n. Noting that there are at most four cells adjacent to cs, it follows that at least one cell in the network must be serving no less than 1 64l 2 (n) cells. Also, since the nodes inside cs are not involved in any forwarding, it follows that the EDS must be Ω(1/l 2 (n)).</p><p>Remark 3. We note that there is a gap between the lower bound on the EDS given in Proposition 3 (Θ(1/l(n))), and the EDS under the above scheme (Θ(1/l 2 (n))). We are unable to close this gap so far. We suspect that a lower bound of Θ(1/l 2 (n)) on the EDS might hold under the greedy geographic routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">HYBRID SENSOR NETWORKS: MOBILE SINK</head><p>We now study the energy dissipation in a hybrid sensor network, with a mobile sink node. The setting is almost the same as in the earlier section, with the difference being that the sink node is now mobile. Once again, we have a budget of l(n) &lt; 1 wires per cell, with l(n) = ω(log n/n), and the objective is to reduce the average hop count and the EDS as much as possible. However, a little amount of † † Here, we are using l(n) = ω( p log n/n).</p><p>reflection shows that with a mobile sink node, we can no longer control the (short-term) EDS. To be more precise, the EDS would now depend on the motion of the sink node. The reason for this is the following: since we have a budget of l(n) &lt; 1 wires per cell, at least 1l(n) fraction of cells have no wired connections. Now if the sink node happens to be in one of these cells, then the entire traffic must pass through the four neighboring cells, which contain a total of Θ(log n) nodes almost surely. Since the nodes, which are in the same cell as the sink node are not involved in any forwarding, the EDS would be Θ(n/ log n) almost surely.</p><p>Note that this is the same as in the case of a wireless sensor network. However, it is possible that the motion of the sink node might result in some sort of equalization in the energy dissipation of the sensor nodes over time. Since we do not assume any knowledge of the motion of the sink node, we will not consider the EDS any further in this section. Our focus, therefore, would be on minimizing the average hop count and the routing overhead as much as possible.</p><p>In view of Proposition 3, we know that we cannot make the average hop count any smaller than Θ(1/ p l(n)). We now consider a wiring and routing scheme, which is a simple modification of the Scheme 1 in the previous Section, and achieves this lower bound on the average hop count.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Scheme 3</head><p>In this scheme, the wires are placed in a deterministic manner. The scheme is the following:</p><p>• Wire Placement: Group the cells into clusters consisting of 1/l(n) cells each, as in the Scheme 1 (see Figure <ref type="figure" target="#fig_2">4</ref>). Choose any arbitrary cluster in the network. Let co be the cell in the middle of this cluster. Connect the middle cell of each cluster with cell co.</p><p>• Routing: All cells first route their packet to the nearest cell having a wire-end (using wireless transmissions), and from thereon the packet is forwarded to the cell co, using the wired connection. From the cell co, the packet is forwarded to the cluster containing the sink node (using the wired connection), and finally, the packet is delivered to the sink node using wireless transmissions.</p><p>Clearly, the average hop count under the above scheme is Θ(1/ p l(n)). Note that the above routing scheme requires that:</p><p>• All the cells know how to reach the closest wire-end.</p><p>• The transceivers attached to the wire that connects co with the cluster containing the sink node know how to reach the sink node.</p><p>We now discuss one possible way of maintaining this information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Route Maintenance Protocol 2 (RMP2)</head><p>In this protocol, in addition to the wires sending out ADV packets periodically, the sink node also sends a HELLO packet periodically. In addition to the hop limit (which is set to 2/ p l(n), in this case), the HELLO packet also contains a parameter called the LOC. This parameter is initially set to some arbitrary value by the sink node, when transmitting within its own cell. One of the nodes who receives this packet (in the same cell as the sink node), broadcasts this packet to its neighbors with the LOC parameter set to the location (or the identity) of the wire-end it communicates with. Note that in order for the nodes to know this, we also need a LOC field in the ADV packets, which can be set appropriately by the wire-end. Any node which receives a HELLO packet, would broadcast the packet to its nearest neighbors if, and only if, the hop limit has not been reached, and the LOC parameter in the HELLO packet matches with the LOC parameter of the wire-end it communicates with. This will not only ensure that there are no redundant broadcasts of a HELLO packet, but also ensure that only the wire-end which is in the same cluster as the sink node receives the HELLO packet. This wire-end can simply send the information to the other wire-end. Note that in this route maintenance scheme, in addition to the Θ(n) amount of overhead for forwarding of the ADV packets, there is also an additional Θ(log n/l(n)) amount of overhead involved in forwarding of the HELLO packet. However, since l(n) = ω(log n/n), the overall overhead is still Θ(n).</p><p>Note that only one-time sending of the ADV packets would suffice if the sensor nodes are immobile, reducing the periodic route maintenance overhead significantly. However, in highly dynamic network conditions, where the sensor nodes are mobile and fail frequently, the overhead involved in the above route maintenance scheme can be substantial. We will now consider a simple wiring and routing scheme, which incurs an overhead that is dependent only on the motion of the sink node, and not on the motion of the sensor nodes or the failure rate of the sensor nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Scheme 4</head><p>In this section, we consider a simple probabilistic wiring scheme which is inspired by the work in <ref type="bibr" target="#b15">[15]</ref>. For technical convenience, we will consider a slightly different constraint on the total number of wires. In particular, as in Scheme 2, the constraint would be to have l(n) wires per cell on an average, with the average being taken across all possible realizations of the wiring scheme. Also, for the analysis, we assume the wires to be simplex, that is, the information can only flow in one direction inside a wire. Thus, the statement: cell a has a wired connection with cell b, would mean that cell a can send data to cell b through this wired connection, but not vice-versa. Note that this assumption will not change the order of the average hop count, which is what we are interested in. We are now ready to describe our scheme.</p><p>1. Wire Placement: Consider an arbitrary pair of cells, say cells u and v. Connect the cell u to cell v using a wire, with a probability</p><formula xml:id="formula_26">P(u, v) = l(n) d(u, v) -κ P v =u d(u, v) -κ ,<label>(8)</label></formula><p>where d(u, v) is the Euclidean distance between the centers of the cells u and v, and κ is a constant, to be determined later.</p><p>2. Routing: Each node uses greedy geographic routing to deliver its packets to the sink node. Note that the frequency with which the location updates need to be sent, depend only on the motion of the sink node; and not on the motion of the sensor nodes or the failure rate of the sensor nodes. Since the sink node is the one initiating these location updates, the frequency of these updates can be controlled precisely by the sink node.</p><p>Since the location of the sink node needs to be flooded across the entire network, the overhead per location update is Θ(n), which is the same as in RMP2. However, in situations, where the sink node moves on a much slower pace than the sensor nodes or if the sensor nodes fail very frequently, one would expect that the overhead under this routing scheme to be much smaller than in the case of RMP2.</p><p>We now study the average hop count under the above scheme for different values of κ. We directly state the result in this paper; the proof is available in the longer version of this paper <ref type="bibr" target="#b30">[30]</ref>. Proposition 6. Let E[H] denote the average hop count under Scheme 4, and let</p><formula xml:id="formula_27">η = inf  x : lim n→∞ l(n) n x = 0 ff , then 1. for κ = 2: E[H] is O(min{(log 2 n)/l(n), p n/ log n}) and Ω(min{1/l(n), p n/ log n}); 2. for κ &lt; 2: E[H] = Ω(n δ ), for all δ &lt; (2 -κ -2η)/(6 - 2κ); 3. and, for κ &gt; 2: E[H] = Ω(n δ ), for all δ &lt; (κ -2 - 2η)/(2κ -2).</formula><p>Remark 4. We note that Proposition 6 extends the results in <ref type="bibr" target="#b15">[15]</ref>, where similar results were derived for l(n) = 1. Also with l(n) = 1, the lower bound stated in Proposition 6 for κ &lt; 2 is tighter than the corresponding lower bound in <ref type="bibr" target="#b15">[15]</ref>. More precisely, arguing as in <ref type="bibr" target="#b15">[15]</ref>, one obtains a lower bound of Θ "</p><p>(n/ log n)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2-κ 6</head><p>" on the average hop count, which is weaker than the bound we obtain for all κ between 0 and 2. The reason for this is that we use a more refined argument than the one used in <ref type="bibr" target="#b15">[15]</ref>.</p><p>It is easy to see that the average hop count is minimized when κ = 2. To see this, let us consider l(n) of the form n -c , for some 0 &lt; c &lt; 1/2. Then, for κ = 2 the average hop count is O(n c log 2 n). Now for κ &lt; 2, we have (2κ -2η)/(6 -2κ) &gt; c, and therefore, we can choose a δ lying between c and (2κ -2η)/(6 -2κ), and the average hop count would be Ω(n δ ). In particular, it would be ω(n c log 2 n). Now, let us consider κ &gt; 2. In this case, (κ -2 -2η)/(2κ -2) &gt; c, and a similar argument as above shows that the average hop count under this case is ω(n c log 2 n) as well. Thus κ = 2 is indeed the best case.</p><p>To find out how much "penalty" we might incur on choosing a "bad" value of κ, let us consider κ = 0. Note that, in this case any two nodes are connected with a probability that does not depend on the distance between the nodes. Using Proposition 6, we see that the average hop count for κ = 0 is close to Θ(n c+1 /3). Thus even with c = 0, the average hop count under κ = 0 is close to Θ(n 1/3 ); whereas, with κ = 2 it is O(log 2 n)!</p><p>The main intuition behind the above results is that when κ is small, majority of short cuts connect "faraway" nodes, and therefore, most of the packets end up traveling a large number of hops toward the end of their delivery to the sink node; when the parameter κ is large, majority of the short cuts connect "nearby" nodes, and therefore, most of the packets end up using a large number of hops in order to reach the sink node; and for κ = 2, it so happens that there is a nice balance between the number of short cuts connecting "nearby" and "faraway" nodes, resulting in the smallest average hop count.</p><p>Similar results have been shown to hold under a continuum setting, where the number of nodes as well as the number of connections (links) per node are unbounded (see <ref type="bibr" target="#b31">[31]</ref>).</p><p>Remark 5. We note that it is possible to come up with a deterministic scheme that can achieve an average hop count of Θ(1/l(n)) under the greedy geographic routing. The purpose of presenting the above scheme is not just to show that the average hop count close to Θ(1/l(n)) can be achieved under the greedy geographic routing, but also to provide some insights into what the average hop count would likely be when the wires are placed in some random fashion. Of particular importance is the case when one simply throws the wires without any planning, thereby connecting a pair of cells with a probability that is independent of the distance between them. This case corresponds to κ = 0 and, as Proposition 6 shows, it results in a much higher average hop count for the same number of wires, compared to the case when κ = 2. Thus we see that the wire placement is crucial when the greedy geographic routing is being used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISCUSSION</head><p>In this section, we provide a summary of our results. The following are our main findings:</p><p>• If the sink node is static, one can significantly reduce both, the average hop count and the EDS, with the addition of a few wires. In particular, with the addition of Θ(nl(n)/ log n) wires, one can reduce the average hop count to Θ(1/ p l(n)), and the EDS to Θ(1/l(n)). This, however, is at the cost a periodic route maintenance overhead of Θ(n) per epoch. The route maintenance overhead can be eliminated, if one is ready to sacrifice a bit on the average hop count and the EDS. In particular, we have shown that when the greedy geographic routing is used, the average hop count is at least Θ(1/l(n)). We suspect that a lower bound of Θ(1/l 2 (n)) on EDS might hold in this case.</p><p>• If the sink node is mobile, it is not possible to guarantee any reduction in the (short-term) EDS when the budget only allows one to place less than one wire per cell on average. (Having at least one wire per cell, does not appear to be an economically feasible option.)</p><p>The average hop count can be reduced to Θ(1/ p l(n)) with the addition of Θ(nl(n)/ log n) wires, even in this case. The periodic route maintenance overhead cannot be completely eliminated in this case. The reason being that even with the greedy geographic routing scheme, any changes in the location of the sink node must be conveyed to all nodes in the network. Nevertheless, the greedy geographic routing can help reduce the overhead significantly under dynamic network conditions. Once again, the price one has to pay for reducing the overhead is that the average hop count becomes Ω(1/l(n)) instead of Ω(1/ p l(n)).</p><p>• If greedy geographical routing is being used along with a random placement of wires, then it is best to place the wires in a way so that the probability that a pair of cells is connected with a wire is inversely proportional to the square of the distance between the cells.</p><p>• If the budget allows placing less than p n/ log n wires, that is, l(n) = O( p log n/n), then it is impossible to reduce the average hop count when the greedy geographic routing is being used. Thus, in order for the schemes that use the greedy geographical routing to be useful, the investment in the infrastructure should be high enough.</p><p>Since both our probabilistic wire placement schemes achieve an average hop count of Ω(1/l(n)), the reader might think that no probabilistic wire placement scheme can achieve an average hop count close to Θ(1/ p l(n)). This is, however, not the case. We used the probabilistic wire placement schemes along with the greedy geographical routing and, we believe, it is the greedy geographical routing which has resulted in the average hop count being Ω(1/l(n)) under both our probabilistic wire placement schemes. It is definitely possible to achieve an average hop count close to Θ(1/ p l(n)) even with a probabilistic wire placement scheme. For example, with a completely random placement of wires, that is, with κ = 0, one can achieve an average hop count of Θ(log n/ p l(n)) ‡ ‡ , provided the packets are routed optimally as in Schemes 1 and 3. We have not presented these results here due to space constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUDING REMARKS</head><p>We studied the average energy dissipation and the nonuniformity in the energy dissipation across the sensor nodes in wireless, as well as hybrid, sensor networks. We defined a meaningful notion of EDS to study the non-uniformity in the energy dissipation across the nodes.</p><p>In the static sink node case, our results show that a few wires when placed in an appropriate fashion, along with the optimal routing of packets, can significantly reduce both, the energy dissipation in the network as well as the EDS. In the mobile sink node case, we showed that the advantage of placing the wired short cuts is limited to reducing the average hop count of the network, and there is not much that one can do about the EDS in this case. We also showed that the greedy geographic routing, although capable of reducing the routing overhead significantly, provides smaller reductions in the average hop count and (most likely) the EDS, in comparison to the optimal routing. Thus, there is a price to be paid for reducing the routing overhead.</p><p>We believe that there is a need to understand the fundamental trade-off between the infrastructure cost and the network lifetime in hybrid sensor networks, and we see this paper as the first step in that direction. Indeed, one would expect the notions of the average hop count and EDS that we study in this paper, to play an important role in determining the network lifetime. We plan to address these issues in our future work.</p><p>There are several avenues for future research in this area. We considered a homogeneous sensor network with no data aggregation and clustering; it will be interesting to study other scenarios where the nodes are heterogeneous, possibly arranged into multiple hierarchies, and data aggregation is used to reduce the communication overhead. We believe that our results can provide useful guidelines for placing the wires even in such scenarios.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Complete view of the sensor network showing the wireless sensor nodes, wires with wireless transceivers attached at their ends, and the sink node.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: An equivalence class of cells for K = 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The clustering and wiring of cells for l(n) = 1/9.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Disjoint groups of cells for l(n) = 1/16.Each group consists of a cell, along with the first 1/4l(n) -1 nodes on a shortest path from the cell to the sink node.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>†  The "gain" here is in terms of reducing the per node energy dissipation and the non-uniformity in the energy dissipation across the nodes.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>‡  Note that for this partitioning to be meaningful, the number of nodes must at least be on the order of a few hundred.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>* * Note that by choosing this connection probability to be cl(n), for some appropriate c &lt; 1, it is possible to ensure that the number of wires placed be almost surely smaller than N (n)l(n), for large enough n.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_3"><p>‡ ‡ See<ref type="bibr" target="#b32">[32]</ref>, for a related result on the diameter of the small world networks.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We wish to thank Rohan Chitradurga for making us aware of the NIMS project. We also thank Laurent Massoulie and Don Towsley for some useful discussions. Finally, we would like to thank Wei Hong for a careful reading of an earlier draft of this paper and for directing us to a recent related work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Low power wireless communication and signal processing circuits for distributed microsensors</title>
		<author>
			<persName><forename type="first">G</forename><surname>Asada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Symposium on Circuits and Systems: Circuits and Systems in the Information</title>
		<meeting>IEEE International Symposium on Circuits and Systems: Circuits and Systems in the Information</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Power aware wireless microsensor systems</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Chandrakasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Keynote Paper ESSCIRC</title>
		<imprint>
			<date type="published" when="2002-09">Sep 2002</date>
			<pubPlace>Florence, Italy</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An energy-efficient mac protocol for wireless sensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Pamas -power aware multi-access protocol with signalling for ad hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Raghavendra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Energy-efficient communication protocols for wireless microsensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Heinzelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chandrakasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Hawaaian Int&apos;l Conf. on Systems Science</title>
		<meeting>Hawaaian Int&apos;l Conf. on Systems Science</meeting>
		<imprint>
			<date type="published" when="2000-01">Jan 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive protocols for information dissemination in wireless sensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Heinzelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kulik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th ACM/IEEE Mobicom Conference</title>
		<meeting>5th ACM/IEEE Mobicom Conference<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08">Aug 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Wireless sensor networks for habitat monitoring</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mainwaring</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First ACM Workshop on Wireless Sensor Networks and Applications</title>
		<meeting><address><addrLine>Atlanta, GA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-09">Sep 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Habitat monitoring: Application driver for wireless communications technology</title>
		<author>
			<persName><forename type="first">A</forename><surname>Cerpa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM Workshop on Data Communications in Latin America and the Caribbean</title>
		<meeting><address><addrLine>Costa Rica</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-04">April 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sensing uncertainty reduction using low complexity actuation</title>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Center for Embedded Networked Sensing (CENS)</title>
		<imprint>
			<date type="published" when="2004-02">Feb 2004</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>UCLA</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Adaptive sampling for environmental robotics</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rahimi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Center for Embedded Networked Sensing (CENS)</title>
		<imprint>
			<date type="published" when="2003-11">Nov 2003</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>UCLA</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A survey of mobility models for ad hoc network research</title>
		<author>
			<persName><forename type="first">T</forename><surname>Camp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Boleng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Davies</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Communication and Mobile Computing: Special issue on Mobile Ad Hoc Networking: Research, Trends and Applications</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The capacity of wireless networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Information Theory, IT</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="388" to="404" />
			<date type="published" when="2000-03">March 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Collective dynamics of small-world networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Watts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Strogatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="page" from="440" to="442" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Small worlds in wireless networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Letters</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="490" to="492" />
			<date type="published" when="2003-10">Oct 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The small-world phenomenon: An algorithmic perspective</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 32nd ACM Symposium on Theory of Computing</title>
		<meeting>32nd ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Analysis of wired short cuts in wireless sensor networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Chitradurga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Helmy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/ACS International Conference on Pervasive Services</title>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Directed diffusion: A scalable and robust communication paradigm for sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Intanagonwiwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM MOBICOM</title>
		<imprint>
			<date type="published" when="2000-08">Aug 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Minimizing communication costs in hierarchically-clustered networks of wireless sensors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bandyopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">J</forename><surname>Coyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A minimum cost heterogeneous sensor network with a lifetime constraint</title>
		<author>
			<persName><forename type="first">V</forename><surname>Mhatre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rosenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kofman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mazumdar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">B</forename><surname>Shroff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Mob. Comput</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="4" to="15" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Design guidelines for wireless sensor networks: Communication, clustering, and aggregation</title>
		<author>
			<persName><forename type="first">V</forename><surname>Mhatre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rosenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Networks Journal</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="45" to="63" />
			<date type="published" when="2004">2004</date>
			<publisher>Elsevier Science</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">On the capacity of hybrid wireless networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Throughput scaling in heterogeneous networks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Viswanath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE ISIT</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Exploiting heterogeneity in sensor networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Yarvis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2005-03">March 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Routing with guaranteed delivery in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Bose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd ACM Int. Workshop on Discrete Algorithms and Methods for Mobile Comp. and Comm</title>
		<imprint>
			<date type="published" when="1999-08">Aug 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Gpsr: Greedy perimeter stateless routing for wireless networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">T</forename><surname>Kung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM MOBICOM</title>
		<imprint>
			<date type="published" when="2000-08">Aug 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Geographic routing without location information</title>
		<author>
			<persName><forename type="first">A</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM MOBICOM</title>
		<meeting><address><addrLine>San Diego, California, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-09">Sep 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Randomized algorithms</title>
		<author>
			<persName><forename type="first">R</forename><surname>Motwani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Cambridge Univ. Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A deterministic approach to throughput scaling in wireless networks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Viswanath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Information Theory</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1041" to="1049" />
			<date type="published" when="2004-06">June 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Critical power for asymptotic connectivity</title>
		<author>
			<persName><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 37th Conf. on Decision and Control</title>
		<meeting>IEEE 37th Conf. on Decision and Control</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">A case for hybrid sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mazumdar</surname></persName>
		</author>
		<ptr target="http://ece.purdue.edu/∼gsharma" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Navigation in small world networks, a scale-free continuum model</title>
		<author>
			<persName><forename type="first">M</forename><surname>Franceschetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Meester</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<pubPlace>San Diego</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
	<note>Preprint, Dept. of ECE</note>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Barbour</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Reinert</surname></persName>
		</author>
		<title level="m">Small worlds. Random Structures and algorithms</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="54" to="74" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
