<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The design and implementation of Grid database services in OGSA-DAI</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Mario</forename><surname>Antonioletti</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Malcolm</forename><surname>Atkinson</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">National e-Science Centre</orgName>
								<address>
									<addrLine>15 South College Street</addrLine>
									<postCode>EH8 9AA</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rob</forename><surname>Baxter</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Andrew</forename><surname>Borley</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Neil</forename><forename type="middle">P Chue</forename><surname>Hong</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Brian</forename><surname>Collins</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Neil</forename><surname>Hardman</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alastair</forename><forename type="middle">C</forename><surname>Hume</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alan</forename><surname>Knox</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mike</forename><surname>Jackson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Amy</forename><surname>Krause</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Simon</forename><surname>Laws</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">James</forename><surname>Magowan</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM United Kingdom Ltd</orgName>
								<address>
									<addrLine>Hursley Park</addrLine>
									<postCode>S021 2JN</postCode>
									<settlement>Winchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Norman</forename><forename type="middle">W</forename><surname>Paton</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Manchester</orgName>
								<address>
									<addrLine>Oxford Road</addrLine>
									<postCode>M13 9PL</postCode>
									<settlement>Manchester</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dave</forename><surname>Pearson</surname></persName>
							<affiliation key="aff4">
								<orgName type="institution">Oracle UK Ltd</orgName>
								<address>
									<addrLine>Thames Valley Park</addrLine>
									<postCode>RG6 1RA</postCode>
									<settlement>Reading</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tom</forename><surname>Sugden</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Paul</forename><surname>Watson</surname></persName>
							<email>paul.watson@newcastle.ac.uk</email>
							<affiliation key="aff5">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">University of Newcastle</orgName>
								<address>
									<postCode>NE1 7RU</postCode>
									<settlement>Newcastle-upon-Tyne</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Martin</forename><surname>Westhead</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">EPCC</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<address>
									<addrLine>James Clerk Maxwell Building, Mayfield Road</addrLine>
									<postCode>EH9 3JZ</postCode>
									<settlement>Edinburgh</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department">School of Computing Science</orgName>
								<orgName type="institution">University of Newcastle</orgName>
								<address>
									<postCode>NE1 7RU</postCode>
									<settlement>Newcastle-upon-Tyne</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The design and implementation of Grid database services in OGSA-DAI</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">BD8C4E8C439E02DBB6A2D7A8F629B2C5</idno>
					<idno type="DOI">10.1002/cpe.939</idno>
					<note type="submission">Received 13 March 2004 Revised 11 October 2004 Accepted 17 October 2004</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Grid</term>
					<term>databases</term>
					<term>e-Science</term>
					<term>Web Services</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Initially, Grid technologies were principally associated with supercomputer centres and large-scale scientific applications in physics and astronomy. They are now increasingly seen as being relevant to many areas of e-Science and e-Business. The emergence of the Open Grid Services Architecture (OGSA), to complement the ongoing activity on Web Services standards, promises to provide a service-based platform that can meet the needs of both business and scientific applications. Early Grid applications focused principally on the storage, replication and movement of file-based data. Now the need for the full integration of database technologies with Grid middleware is widely recognized. Not only do many Grid applications already use databases for managing metadata, but increasingly many are associated with large databases of domain-specific information (e.g. biological or astronomical data). This paper describes the design and implementation of OGSA-DAI, a service-based architecture for database access over the Grid. The approach involves the design of Grid Data Services that allow consumers to discover the properties of structured data stores and to access their contents. The initial focus has been on support for access to Relational and XML data, but the overall architecture has been designed to be extensible to accommodate different storage paradigms. The paper describes and motivates the design decisions that have been taken, and illustrates how the approach supports a range of application scenarios. The OGSA-DAI software is freely available from http://www.ogsadai.org.uk.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>This paper examines how databases can be integrated into OGSA Grid environments through the use of the OGSA-DAI (OGSA Data Access and Integration) service-based architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.">The need for databases in Grid environments</head><p>Early Grid applications, mainly motivated by an attempt to cater to scientific-based computing, were often closely associated with devices or tools that read and/or generated flat files. Consequently, support for files rather than for the management of structured data had the highest profile in the early Grid toolkits (e.g. <ref type="bibr" target="#b0">[1]</ref>). However, over time, the file management systems and registries associated with Grid toolkits themselves became complex, and database management systems (DBMSs) were increasingly used to store Grid metadata (e.g. <ref type="bibr" target="#b1">[2]</ref>). Contemporaneously, the requirements of the scientific computing community have become more sophisticated with, for example, biological and astronomical communities generating large quantities of data that increasingly use databases for storage and retrieval. Similarly, engineering, medical research, healthcare and many governmental systems can also take advantage of Grids that access and integrate multiple and distributed collections of structured data. These data need to be made available and accessible to distributed sets of users and their applications, which makes these communities ideal candidates to adopt Grid-based infrastructures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.">The OGSA Grid environment</head><p>Web Services emerged from the business computing world with the aim of supporting business-tobusiness relationships in a language-neutral, platform independent way. They are loosely coupled, distributed components that interact with each other through the exchange of messages. To achieve the goal of interoperability, a collection of specifications are currently progressing through standardization bodies such as the W3C and OASIS. The architectural principles on which Web Services are based may be found in <ref type="bibr" target="#b2">[3]</ref> and a recent overview is provided in <ref type="bibr" target="#b3">[4]</ref>.</p><p>Starting in 2001, researchers, initially led by Globus (http://www.globus.org) and IBM, began developing new Grid standards and technology. The aim was to merge the understanding developed through the design and deployment of early Grid applications (e.g. on Globus Toolkit 2) with the emerging Web Services middleware. Their goal was to allow Grid developers to exploit the huge commercial investment in Web Services infrastructure and tooling. The result was the Open Grid Services Architecture (OGSA) <ref type="bibr" target="#b4">[5]</ref>, a high-level framework designed to support dynamic virtual organizations that share independently administered data and resources seamlessly across a network of heterogeneous computers. Still under development, this architecture will define the major functional components needed to meet those requirements. OGSA-DAI is one of those high-level functional components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3.">Databases and the OGSA Grid environment</head><p>It has become increasingly clear that if the OGSA is to support a wide range of communities, then database integration is vital. This paper presents an approach to integrating databases into OGSA so that communities may publicize and share structured data resources, and applications may access and update data stored in them.</p><p>There are two main dimensions of complexity to the problem: reconciling implementation differences between server products within a single database paradigm (IBM, Oracle, Microsoft, etc.), and the variety of database paradigms (object, relational, XML, etc.). Unsurprisingly, none of the currently deployed DBMSs support OGSA Grid integration. Each DBMS is however the result of many hundreds of person-years of effort to provide a wide range of functionality, valuable programming interfaces and tools, and important properties such as security, performance and dependability. As these attributes will be required by applications, we believe that building new Grid-enabled DBMSs from scratch is both unrealistic and uneconomic. We have shown that it is also unnecessary, by developing middleware that integrates existing DBMSs with the OGSA Grid.</p><p>Our intention is that, over time, the effort required to achieve this will diminish. As the Grid becomes commercially important, database vendors will embed the middleware functionality directly into their products to provide 'out-of-the-box' support for OGSA Grid integration, by directly supporting the emerging OGSA Grid standards, for example, for data access, notification and data dissemination. This simplifies the structure of applications and yields substantial performance gains. Similarly, it is vital that those designing standards for Grid middleware take into account the special requirements to easily integrate databases across a Grid. One of the motivations for OGSA-DAI is to expose and formulate such requirements. Together, these converging developments will reduce the amount of middleware required to integrate databases into the OGSA Grid.</p><p>Therefore, one of the aims of the OGSA-DAI project is to explore the requirements and approaches to integrating databases into the OGSA Grid in order to influence both the emerging standards and established database vendors. OGSA-DAI has designed, developed and released a collection of services for integrating database access and description with the core capabilities of OGSA, thus allowing structured data resources to be seamlessly integrated into OGSA Grid applications. We are now gaining feedback from early adopters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4.">Related work</head><p>This work focuses on the issues surrounding the design of an efficient, generic, service-based interface to databases. Most previous work on interfaces has been language dependent and not service based (e.g. JDBC). Other work on service-based interfaces to databases is generally more limited in scope or different in context. For example, several relational database vendors support the integration of their products with Web Services (e.g. <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>). Such proposals tend to support the calling of Web Services from within SQL queries, the creation of Web Services from stored procedures, and the publication of Web Services based on database requests. This approach contrasts with, and complements, the development of generic database access services such as those provided by OGSA-DAI.</p><p>In a Grid setting, the European Data Grid has developed Spitfire <ref type="bibr" target="#b7">[8]</ref>, a Web Service interface to relational databases for metadata management. Spitfire has developed an infrastructure that allows a client to query a relational database over GSI-enabled HTTP(S). An XML-based protocol is used to represent the query, and its result. The system supports role-based security: a client can specify the role they wish to adopt for a query execution, and a mapping table in the server checks that they are authorized to take on this role. OGSA-DAI has adopted a similar approach to Spitfire for authentication, but differs in supporting multiple access languages, asynchronous and third-party delivery, as well as an extensible document-based request style interface as opposed to Spitfire's finergrained operations. This latter difference is an important aspect of the OGSA-DAI design. Consumers send rich documents that may contain multiple activities (e.g. a set of queries) to OGSA-DAI servers. When compared with database services that only support fine-grained interactions (e.g. single queries), this reduces the number of interactions (important for increasing server and application performance) and offers the opportunity for the server to perform local optimizations (e.g. not materializing intermediate results). Further, unlike other approaches, OGSA-DAI allows developers to define their own activities and make them available to consumers. This feature has been exploited by a number of research groups and could, for example, be used to expose specialist functionality such as local data mining capability to database consumers.</p><p>There is clearly also a relationship between OGSA-DAI and other data Grid functionalities. For example, efficient movement <ref type="bibr" target="#b8">[9]</ref> and replication <ref type="bibr" target="#b9">[10]</ref> of data are core functionalities in a data Grid. OGSA-DAI can make use of existing Grid data movement functionalities, as described in Section 4.3, and a data replication service could use OGSA-DAI to read data from or write data to structured data stores. Higher-level Grid data management systems, such as SRB <ref type="bibr" target="#b10">[11]</ref> or Chimera <ref type="bibr" target="#b11">[12]</ref>, could use OGSA-DAI either to access structured data resources, or to provide access to their own metadata. As such, OGSA-DAI should be seen as one of a range of components that together support access, sharing, management and coordinated use of data on the Grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.5.">Terms used in this paper</head><p>The term database refers to systems used for managing structured data, such as relational databases and collections of semi-structured files. The term data resource is used virtually synonymously with database, the only difference being that it could be considered to include devices such as telescopes and scanners that produce or accept structured data, or data integration infrastructures that provide the illusion that a single database is being accessed. The term data source denotes that subset of data resources that only produce data, e.g. read only data collections. For these two terms, sometimes the word 'data' is omitted as it is obvious from the context.</p><p>A DBMS is responsible for the storage and management of one or more databases. Examples of DBMSs are Oracle 10g, DB2, SQL Server and MySQL. A DBMS will support a particular database paradigm, for example relational, object-relational or object. A database system (DBS) is created, using a DBMS, to manage a specific database. The DBS includes any associated application software.</p><p>The term OGSA Grid refers to a system that complies with the Open Grid Service Architecture <ref type="bibr" target="#b12">[13]</ref>. When the word Grid is used unqualified it will still refer to an OGSA Grid unless explicitly stated otherwise.</p><p>The term metadata denotes data that describe either data or a service, normally the former. Sometimes the application or system context determines which data are treated as metadata.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.6.">The structure of this paper</head><p>The rest of the paper is structured as follows. Section 2 considers the requirements placed upon database integration by OGSA Grid applications. The requirements for, and the architecture of, OGSA-DAI are described in Section 3, in particular detailing one key aspect of OGSA-DAI-the way in which consumers make requests to an OGSA-DAI Grid Database Service. Section 4 describes this aspect in detail. Finally, the current status and conclusions are presented in Section 5.</p><p>The functionalities described in this paper are consistent with those provided by Release 3 of the OGSA-DAI software (July 2003) <ref type="bibr" target="#b13">[14]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE DATABASE REQUIREMENTS OF GRID APPLICATIONS</head><p>A typical application that accesses databases may consist of a computation that queries one or more databases and then carries out further analysis on the retrieved data. Therefore, database access should be seen as being only one part of a wider, distributed application. The databases themselves will usually exist independently of any one specific application, in geographically distributed locations. They will be operated under independent and autonomous regimes. If each regime is left to decide independently the access interface with which it presents each database to the OGSA Grid, then this has two immediate negative consequences. Firstly, code will need to be written that provides the OGSA Grid interface to their database. This has cost implications for the service provider making the database available to the OGSA Grid. Secondly, those writing OGSA Grid applications or data integration services will have to write code for each proprietary OGSA Grid database interface to which access is required. This has cost implications for those writing the applications. OGSA-DAI provides a substantial part of those requirements thereby avoiding these costs. The argument is, as with any other Grid infrastructure, that the higher cost of developing a well-engineered and generic solution is amortized across many applications, the net effect being both an overall reduction in costs and an overall gain in infrastructure quality.</p><p>OGSA-DAI addresses both of these issues by implementing a standard, service-based, interface through which databases can be presented to OGSA Grid applications. This standard interface is being specified by the GGF Database Access and Integration Services (DAIS) working group <ref type="bibr" target="#b14">[15]</ref>. This approach allows those exposing their databases to the OGSA Grid to reuse code to achieve this, whilst consumers of those services can write code in a way that will be, as far as possible, independent of the specific regime under which the database is administered. In order to ensure that the design of OGSA-DAI achieves this aim, it is first necessary to consider the requirements that it must meet.</p><p>To integrate databases into OGSA Grid environments, two sets of requirements must be met: firstly, those that deal with the integration of databases into the Grid environment, and secondly those that deal with the functionality offered by databases to applications that must be available via the Grid. These two sets of requirements are considered in turn.</p><p>If computational and database components are to be seamlessly combined to create distributed applications, then a set of agreed standards will have to be defined and met by all components. While it is too early in the lifetime of the Grid to state categorically what all the areas of standardization will be, work on existing middleware systems (e.g. CORBA), and emerging research within the Global Grid Forum, suggest that security <ref type="bibr" target="#b15">[16]</ref>, accounting <ref type="bibr" target="#b16">[17]</ref>, performance monitoring <ref type="bibr" target="#b17">[18]</ref> and scheduling <ref type="bibr" target="#b18">[19]</ref> will be important.</p><p>Some Grid applications will have extreme performance requirements. In an application that performs CPU-intensive analysis on a huge amount of data accessed by a complex query from a DBS, then achieving high performance may require utilizing high-performance servers to support the query execution (e.g. a parallel database server) and the computation (e.g. a powerful compute server such as a parallel machine, or a cluster of workstations). However, this may still not produce high performance, unless the communication between the query and analysis components is optimized. Different communication strategies will be appropriate under different circumstances. If all of the query results are required before analysis can begin, then it may be best to transfer all of the results efficiently in a single block from the database server to the compute server. Alternatively, if a significant computation needs to be performed on each element of the result set, then it is likely to be more efficient to stream the results from the DBS to the compute server as they are produced. When streaming, it is important to optimize communication by sending data in blocks, rather than as individual items, and to use flow control to ensure that the consumer is not swamped with or starved of data. Further, it may often be the case that the intended recipient of the result is not the consumer that issued the query. To avoid redundant transmission of data, it should be possible for the query issuer to specify a third-party destination for a result.</p><p>We now move beyond considering the requirements that are placed on all Grid middleware by the need to support databases, and consider the requirements that Grid applications will place on the DBMSs themselves. Firstly, there appears to be no reason why Grid applications will not require at least the same functionality, tools and properties as other types of database applications. Consequently, the range of facilities already offered by existing DBMSs will be required. These support both the management of data, and the management of the computational resources used to store and process those data. Specific facilities include the following:</p><p>• query and update facilities; We now consider whether Grid-enabled databases will have requirements beyond those typically found in existing systems. The Grid is intended to support the widescale sharing of large quantities of information. The likely characteristics of such systems may be expected to generate the following set of requirements that Grid-enabled databases will have to meet.</p><formula xml:id="formula_0">•</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Metadata-driven access</head><p>It is widely recognized that Metadata will be very important for many Grid applications, in the following activities.</p><p>• Management or scheduling through provision of system and administrative information (e.g. defining the performance and capacity of a data resource, the charges and policies governing its use, and the current operational state). • Data discovery or interpretation through provision of data structure and content information, e.g. the schema to which the data conforms and a summary of the content (values) available within that structure. This may be extended with generic information about the interpretation of the schema and content description, e.g. via ontologies <ref type="bibr" target="#b19">[20]</ref>. • Resource or access method selection, through indexes or summaries. For example, a database of astronomical objects extracted by processing images may be used as a primary data source in its own right or as a means of selecting parts of images to reanalyse. • Data selection or evaluation, to inform human judgements about the data. This varies from pervasive provenance data describing the origin of data to specific annotations suggesting interpretations and implications of the data.</p><p>Almost all aspects of metadata can have components that are application specific. Many disciplines are developing extensive bodies of practice concerning the organization and description of their data. Many applications involve portals, workflows or bespoke code that first examines metadata according to user requirements and then uses these metadata to locate the data, describe which data are accessed, determine what transformations are necessary, to steer analyses and visualizations, and to carry forward information into automatically generated metadata associated with result sets.</p><p>Currently, the use of metadata in Grid applications tends to be relatively simple-it is mainly for mapping the logical names for datasets into the physical locations where they can be accessed <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b20">21]</ref>. As users and developers develop more sophisticated applications, and as the Grid expands into new application areas such as engineering and the life sciences, more sophisticated metadata systems and tools will be required. The result is likely to be a Semantic Grid <ref type="bibr" target="#b21">[22]</ref> that is analogous to the Semantic Web <ref type="bibr" target="#b22">[23]</ref>.</p><p>The use of metadata to locate data has important implications for integrating databases into the Grid because it promotes a two-step access to data <ref type="bibr" target="#b23">[24]</ref>. In step one, a search of metadata catalogues is used to locate the databases containing the data required by the application. Those data are then accessed in the second step. A consequence of two-step access is that the application writer does not know the specific resource that will be accessed in the second step. Therefore, the application must be general enough to connect and interface to any of the possible resources returned in step one. This is straightforward if all interfaces are built from the same DBMS, and so offer the same interfaces to the application, but it is more difficult if these interfaces are heterogeneous.</p><p>Ideally the two-step approach requires that all resources should provide the same interfaces, but variation in facilities, interfaces and representations is inevitable. Therefore, the variation must be described in metadata that are available via introspection over the resource or service, so that software may be written that adapts to the variations. It also requires that all data are held in a common format, or that the metadata that describe the data are sufficient to allow applications to understand the formats and interpret the data.</p><p>A crucial issue is the production of metadata that are reliable. Today most metadata are produced manually. This is both labour intensive and error prone-it will not scale to the envisaged scale of applications and the envisaged number and size of data resources. It is therefore imperative that tools be developed to automatically generate metadata as systems and data collections are built, and to generate data, such as content summaries, by inspecting data resources. OGSA-DAI does not provide such tools but it clearly identifies their necessity and provides a context in which they may be deployed.</p><p>Once such metadata are in use, additional infrastructure components are required. Primary among these are registries that have matching algorithms relevant to application requirements that operate over these metadata.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Multiple database federation</head><p>One of the aims of the Grid is to promote the systematic sharing of scientific data. A recent study of the requirements of some early Grid applications concluded that 'The prospect exists for literally billions of data resources, from large curated databases to individual collections, from major instruments such as the Large Hadron Collider and telescopes to portable instruments, medical scanners, networks of environmental sensors and wearable devices and petabytes of data being accessible in a Grid environment' <ref type="bibr" target="#b24">[25]</ref>. Here, data resources include sensors, instruments and wearable devices. If this prospect is realized then it is expected that many of the advances to flow from the Grid will come from applications that can combine information from multiple data sets. This will allow researchers to combine different types of information on a single entity to gain a more complete picture, and to aggregate the same types of information about different entities.</p><p>Achieving this will require support for integrating data from multiple data sources, for example through distributed query and transaction facilities. This has been an active research area for several decades, and needs to be addressed on multiple levels. As was the case for metadata-driven access, the design of federation middleware will be made much more straightforward if databases can be accessed through standard interfaces that hide as much of their heterogeneity as possible.</p><p>Even when APIs are standardized, there is a higher-level problem of the semantic integration of multiple databases, which has been the subject of much attention over the past decades <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b26">27]</ref>. In general, the problem complexity increases with the degree of heterogeneity of the set of databases being federated, though the provision of ontologies and metadata can assist. While there is much existing work on the federation on which to build, for example in the area of query processing <ref type="bibr" target="#b27">[28]</ref>, the Grid should give a renewed impetus to research in this area because there will be clear benefits from utilizing tools that can combine data over the Grid from multiple, distributed repositories. It is also important that the middleware that supports distributed services across federated databases meets the other Grid requirements. For example, distributed queries run across the Grid may process huge amounts of data, and so the performance requirements on the middleware may, in some cases, exceed the requirements on the individual data resources.</p><p>The Grid provides mechanisms with which to build trusted contexts across a number of independent members of a virtual organization. It also provides mechanisms for moving code as well as data between computational resources within the virtual organization, either relying on the established trust or using additional safety mechanisms. This means that computation may be moved close to data which often yields savings as code grows much less rapidly than data and the results of many analyses are much smaller than the data examined. Taking advantage of this code mobility poses new planning, scheduling and optimization challenges which will be aided by a consistent model for computation and data services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Summary</head><p>In summary, there are sets of requirements that must be met in order to support the construction of Grid applications that access databases. Some are generic across all Grid application components, while others are database specific. Grid applications will require at least the functionality provided by current DBMSs. As these are complex pieces of software, with high development costs, building new, Grid-enabled DBMSs from scratch is not an option. Instead, new facilities must be added by enhancing existing DBMSs, rather than by replacing them. The most commonly used DBMSs are commercial products that are not open-source, and so enhancements have to be achieved by wrapping the DBMSs externally. Later, we hope that DBMS vendors will choose to integrate Grid-enabled data access and integration mechanisms into their code for improved performance, safety and operational convenience.</p><p>The OGSA-DAI project is addressing these requirements by designing a standard, service-based interface through which databases are exposed to applications. The rest of this paper describes the work done to date in the project; designing a system to address those requirements that are perceived to be of the highest priority: querying, efficient results delivery, security and federation. Over time, the project aims to move on to addressing the other requirements identified in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">OGSA-DAI ARCHITECTURE AND FUNCTIONALITY</head><p>The goal of OGSA-DAI is to provide a uniform service interface for data access and integration to databases exposed to the Grid, hiding differences such as database driver technology, data formatting techniques and delivery mechanisms. The aim is that through OGSA-DAI, disparate, heterogeneous data sources and resources can be made available as services that are fully integrated with other OGSA services, for example, for data transport and security. OGSA-DAI services will therefore provide the basic operations that can be used by higher-level services to offer greater functionality, such as data federation and distributed queries.</p><p>The OGSA-DAI architecture also aims to encourage the design of efficient applications and evolvable services. To address the former, there is support for grouping multiple requests on an OGSA-DAI service into a single message sent to a service. This reduces latency by increasing the granularity of interactions, and reducing both the number of messages exchanged and the quantity of data transferred. To support service evolution, request messages are self-describing in that they identify the specific operation(s) to be called, so allowing a service to evolve to support new operations without requiring existing applications to be modified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Architecture</head><p>In the rest of this section we give an overview of the OGSA-DAI architecture, and then explain in more detail how these specific requirements are addressed.</p><p>Figure <ref type="figure" target="#fig_1">1</ref> illustrates the principal components within the OGSA-DAI architecture. OGSA-DAI Grid Data Services access databases using drivers, and make use of several additional components,  for example, for data formatting, data delivery and request handling. Applications can use the core OGSA-DAI GDS components directly to access individual data stores, or can use a distributed query processor, OGSA-DQP <ref type="bibr" target="#b28">[29]</ref>, to coordinate access to multiple database services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Drivers</head><p>The important aspects of the architecture are discussed in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1.">Standardized interfaces</head><p>A benefit that OGSA-DAI brings over and above paradigm-specific database connectivity models like JDBC is a consistent interface regardless of the underlying technology. For example, OGSA-DAI services support access to multiple relational database systems, XML storage managers and file systems. They provide consistent portType definitions and many shared functionalities independently of the database paradigm or specific system being accessed.</p><p>As well as query interfaces, OGSA-DAI will evolve to offer interfaces for other common data operations, including transactions and bulk load.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.">Metadata</head><p>OGSA-DAI services provide metadata about the DBMS, e.g. whether it is an Oracle, DB2 or MySQL, etc. DBMS system that are being exposed to the Grid. Also metadata are provided about the capabilities of the DBMSs that are being exposed to the Grid through the service interfaces as well as any inherent capabilities of the services themselves, such as third-party delivery and transformations that are available to operate on data retrieved from a database. The connection technology that is employed to connect to the databases is also exposed for clients capable of using such information. For relational databases, the database schema may be extracted from the service, which may be helpful to higher-level services such as distributed query processing. The metadata may be provided statically, that is when the service is configured, or dynamically, which may require additional coding. On the whole the static metadata model is extensible so that communities that employ OGSA-DAI to access databases within a Grid context can provide community-specific metadata for the databases they expose to the Grid. The dynamic model can be extended, but this requires more effort from the developers of applications that want to dynamically extend the OGSA-DAI metadata framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3.">Sessions</head><p>Sessions are important to database systems, for example to relate the queries sent by a consumer to the appropriate transaction context. Therefore, some way is needed to relate a set of requests sent by a consumer (or consumers) over a period of time, where they are part of the same data access session. A DBMS may concurrently support multiple client sessions. For example, DBMSs provide an interface by which clients can connect to the database and, at this point, a new session is created for that client. This allows, for example, multiple concurrent transactions to be run against the same DBMS. Therefore, OGSA-DAI provides a standard way for consumers to create a new session against a data resource. Whilst it would be possible to support this in a platform-independent manner (for example, by passing a session id with all requests to a database service), a decision was made to meet this requirement using specific mechanisms provided by the Open Grid Services Infrastructure version 1.0 (OGSI 1.0), as described in Section 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4.">Security</head><p>It is important to be able to authenticate a consumer so that their request can be executed with the appropriate privileges. As yet there is no consensus within the Grid community as to how authentication should be done within virtual organizations. The aim, however, is to adopt whatever solution emerges from the standardization efforts currently being undertaken within the Web Services communities. Currently the status quo is to use slightly modified X509 certificates within the Grid community. Hence OGSA-DAI provides a simple authentication layer that consists of a RoleMap file and an implementation class that does the role mapping between the Grid credentials used to access the system, which are based on the X509 certificates, and the credentials required to access the underlying DBMS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.5.">Grouping requests</head><p>OGSA-DAI supports a document-oriented interface for database requests, in which a single document may specify a collection of related activities (for example, an update to a database, a query of the updated database, and the delivery of the result of the query to a third party). This increases the granularity of interactions, reducing the number of messages and the quantity of data received. Section 4 describes in detail the structure and capabilities of request documents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.6.">Data delivery options</head><p>In traditional client-server systems such as JDBC, a client sends a request (e.g. a query) to the database, and receives the result in return. This synchronous request model will not always meet the extreme performance and capacity requirements of some Grid applications. For these, it is important to support a range of data delivery options. For example, the ability to directly deliver the data to a third party, that is to consume the result of the query, or to hold the result at the data service until it is required by another service.</p><p>OGSA-DAI supports a range of data-delivery options that can be exploited by Grid applications. Basic requests to an OGSA-DAI Grid Data Service are synchronous: the consumer sends a request document (Section 4) and in return receives a message containing the results. OGSA-DAI also offers asynchronous requests in which the result is not returned to the requestor: it may remain in the Grid Data Service until it is accessed by a consumer, or it may be sent directly to another service. A detailed description of the range of delivery options is presented in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">DATABASE REQUESTS</head><p>The OGSA-DAI Grid Data Service (GDS) supports a document-oriented interface for database requests, in which a single document may specify a collection of related activities (for example, an update to a database, a query of the updated database, and the delivery of the result of the query to a third party). This means that the GDS supports few operations-all accesses and updates to the state of a database are carried out by way of a perform operation, the parameter of which is a request document. In OGSA-DAI, a request consists of a collection of linked activities, where each activity represents an operation on the service, for example, to query the database, fetch some data from a remote site, etc. The document-based approach has been followed for several reasons. For example, a requirements analysis suggested that a unit of work with a remote database typically involves some database access, data format translation and delivery, and the document approach reduces the number of round trips required in a distributed setting. The request document thus supports composition of activities. It is now described in more detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Request definition and execution</head><p>The root element of a document, generally referred to as a perform document, sent to the perform operation is a gridDataServicePerform element. This contains the collection of activities to be performed by the GDS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Activities</head><p>Each perform document may make use of one or more types of activity. Activities dictate the tasks that a GDS instance can perform on behalf of its client via its enactment engine. An activity is mapped to a Java class that is responsible for acting on or processing the content of that activity. This means that it is straightforward to add new kinds of activities to a GDS, either to provide generally useful functions (e.g. format transformations using an XSLT activity) or operations that are relevant to a specific kind of application (e.g. to compute the codon usage of a DNA sequence). We note, however, that the GDS activity model is not intended to develop into a full workflow language, but is intended to remain of limited expressiveness with a view to supporting common data access and transformation tasks.</p><p>The sequence of activity execution within a single request is defined by associating the input of one activity with the output of another activity to define a data flow. For example, Figure <ref type="figure" target="#fig_2">2</ref> illustrates be used in the same way. The values from the delivery are insterted into the query, the query performed and the results delivered in the response document. &lt;/documentation&gt; &lt;deliverFromGDT name="parameters"&gt; &lt;fromGDT streamId="someOutputStream" mode="block"&gt; http://path/GSH &lt;/fromGDT&gt; &lt;toLocal name="parametersOutput"/&gt; &lt;/deliverFromGDT&gt; &lt;sqlQueryStatement name="statement"&gt; &lt;sqlParameter position="1" from="parametersOutput"/&gt; &lt;sqlParameter position="2" from="parametersOutput"/&gt; &lt;expression&gt; select * from littleblackbook where id &amp;gt; ? and id &amp;lt;= ? &lt;/expression&gt; &lt;webRowSetStream name="statementOutput"/&gt; &lt;/sqlQueryStatement&gt; &lt;/gridDataServicePerform&gt; &lt;gridDataServicePerform … &gt; &lt;documentation&gt; This example demonstrates how to parameterise an SQL query statement using a deliverFrom activity. A deliverFromGDT activity is used, but any other deliverFrom activity could data flows among linked activities using arrows. The parameter element gives a name to a literal, which is used as an input to the sqlQueryStatement. Where a parameter element has no value, this must be supplied as an input to the request when it is executed. In this instance it is obtained from a delivery activity, DeliverToGDT, which in a GDS is another portType, the Grid Data Transport portType, allowing communication links to be established between a client and a GDS or a GDS and another GDS. The parameter values, in this case, could be supplied by the client or another GDS.</p><p>The results are returned to the client synchronously in the response.</p><p>In support of the configurable and extensible nature of requests, concrete activity types supported by a GDS instance are listed in the ActivityType service data element (SDE) <ref type="bibr" target="#b29">[30]</ref>.</p><p>Sections 4.1 and 4.2 have described the framework within which concrete activities are defined. The following sections provide some examples of concrete activities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1.">Relational database activities</head><p>Activities that provide access to SQL queries, updates and stored procedures are supported. At the time of writing, services have been developed for accessing MySQL, Oracle and DB2 databases. An example sqlQueryStatment is shown below. The sqlParameter elements define values that are to be passed to the SQL expression. The first element references an activity output value named chromvalue from elsewhere in the request, while the second explicitly sets the value. The query is followed by the name by which the outputs are to be made available through the webRowSetStream element.</p><p>&lt;sqlQueryStatement name="statement1"&gt; &lt;sqlParameter position="1" from="chromvalue"/&gt; &lt;sqlParameter position="2"&gt;frog&lt;/sqlParameter&gt; &lt;expression&gt; select * from chromFrag where chrom=? and organism=? &lt;/expression&gt; &lt;webRowSetStream name="statement1result"/&gt; &lt;/sqlQueryStatement&gt;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.">XML database activities</head><p>Activities are provided for access to XML queries and updates. XPath queries and XUpdate are supported for implementation over the Xindice database <ref type="bibr" target="#b30">[31]</ref>. The elements of xPathStatementType are an optional collection element, which identifies the collection over which the XPath query is to be applied; an optional resourceId element, which identifies a particular resource in a collection if required; an optional namespace element, which defines the namespaces that are used in the XPath expression; expression which contains the XPath expression; and resourceSetStream which is used to identify the result sequence.</p><p>The following shows a sample document for a simple query to an XML data service, retrieving information on chromosome fragments of length less than 20 000. &lt;xPathStatement name="chromStatement"&gt; &lt;expression&gt;/chromFrag[@len&amp;lt;20000]&lt;/expression&gt; &lt;resourceSetStream name="chromStatementOutput"/&gt; &lt;/xPathStatement&gt;</p><p>The result of the query is made available to other activities through the resourceSetStream label, which is defined as an activity output. This output can then be used, for example, as input to a delivery, as described in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Delivery activities</head><p>The ability to deliver data to and/or from a GDS is an intrinsic part of this service. From the client's perspective, the operation of a GDS is either synchronous or asynchronous.</p><p>In the synchronous case, the client submits a perform document to GDS::perform and expects the results of the complete request in response to this call. Thus data delivery is considered to be part of the response to the perform operation call. The default delivery is to in-line the results in the response to the client unless instructed otherwise by an explicit delivery activity in the perform document. This is illustrated in Figure <ref type="figure" target="#fig_3">3</ref>: a consumer sends a request containing a query to a GDS, and receives the results back directly.</p><p>The following gridDataServicePerform document to a relational GDS defines a request that queries a single table using SQL, and returns the result to the analyst in the response. &lt;gridDataServicePerform ... &gt; &lt;sqlQueryStatement name="statement"&gt; &lt;expression&gt; select * from chromFrag where len &amp;lt 20000 &lt;/expression&gt; &lt;webRowSetStream name="statementresponse"/&gt; &lt;/sqlQueryStatement&gt; &lt;/gridDataServicePerform&gt; In the asynchronous case, the client submits a perform document to GDS::perform and expects the GDS to complete the processing of the request after the perform operation has returned control to the client. This is particularly important when long running requests are submitted. Data delivery in this case follows either an active or a passive approach.</p><p>In the active case, the perform document must contain enough information for the GDS to interact with delivery protocols or services in order to deliver the data. In the passive case, the GDS waits for external services or protocols to initiate the data delivery. The passive case is represented by the inputStream and outputStream activities. The delivery activities defined within OGSA-DAI are given in Table <ref type="table" target="#tab_1">I</ref>. The underlying transport protocol used to support such an activity is provided by the bind element of the WSDL.</p><p>In Table <ref type="table" target="#tab_1">I</ref>, deliverToGDT and deliverFromGDT involve the use of the Grid Data Transport (GDT) portType. This portType acts as an endpoint for data delivery, and must be supported by the Grid Service that is the target of this delivery activity. Thus, for example, a GDS service S can deliver to a remote service R using deliverToGDT only if R supports the GDT portType. R may or may not be a GDS. The GridDataTransport portType defines four operations getFully, getBlock, putFully and putBlock. Define input configuration depending on the protocol chosen (GDT/GFTP/URL). Also define an output element that an internal activity can reference in order to obtain the data that this activity will retrieve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>deliverToGDT deliverToGFTP deliverToURL</head><p>Define an input element that references an output element in some other activity defined in the perform document to which the data will be delivered. The defined output configuration depends on the protocol chosen (GDT/GFTP/URL).</p><p>inputStream Defines an output element that an internal activity can reference in order to obtain data when data are presented to this activity by an external service.</p><p>outputStream Defines an input element that references an output element in one other activity defined in the request document. This provides the data that this activity will send in response to any request by an external service. GridFTP (GFTP) <ref type="bibr" target="#b31">[32]</ref> is the principal data transport service used on the Grid. The activity type deliverFromGFTP allows data to be received by a GDS from an external location using GFTP, and deliverToGFTP allows data to be delivered by a GDS to an external location using GFTP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analyst DB</head><note type="other">XML Request XML Response GDS deliverToGFTP Result File</note><p>The most straightforward asynchronous scenario for a GDS is that a requester executes a request containing a query to a GDS, the result of which is delivered to a file, in this case using GFTP. This scenario is illustrated in Figure <ref type="figure" target="#fig_4">4</ref>.</p><p>The following perform document defines a request containing the same query as in Figure <ref type="figure" target="#fig_3">3</ref>, but uses GFTP to deliver the result to a (potentially remote) file. The response returned to the analyst indicates that the request has been received, and is queued for evaluation. We note that previous database access middleware, such as JDBC, has tended not to provide this sort of indirect delivery capability. &lt;gridDataServicePerform ... &gt; &lt;sqlQueryStatement name="statement"&gt; &lt;expression&gt; select * from chromFrag where len &amp;lt 20000 &lt;/expression&gt; &lt;webRowSetStream name="statementresponse"/&gt; &lt;/sqlQueryStatement&gt; &lt;deliverToGFTP name="d1"&gt; &lt;fromLocal from="statementresponse"/&gt; &lt;toGFTP host="ogsdai.org.uk" port="8080" file="path/to/myfile.txt"/&gt; &lt;/deliverToGFTP&gt; &lt;/gridDataServicePerform&gt; There are many situations in which a GDS may usefully interact directly with another service. For example, it may be useful for the results of a query over one GDS to be conveyed to another GDS by a replication infrastructure. By contrast, Figure <ref type="figure" target="#fig_5">5</ref> illustrates a scenario in which a GDS is used to update a database using data delivered to it from another service. In this example, it is assumed that the other service implements the GDT portType introduced in Section 4.3. The deliverFromGDT activity will invoke the getFully operation on the related service to obtain the required data for update. These data are then used as the parameter of an sqlUpdateStatement activity that inserts the retrieved value into the chromFrag table. &lt;gridDataServicePerform ... &gt; &lt;deliverFromGDT name="d1"&gt; &lt;fromGDT streamId="otherrequestasynch/d1" mode="full"&gt; http://ogsadai.org.uk/GDTService/my/GDT/GSH &lt;/fromGDT&gt; &lt;toLocal name="datatoinsert"/&gt; &lt;/deliverFromGDT&gt; &lt;sqlUpdateStatement name="statement"&gt; &lt;sqlParameter position="1" from="datatoinsert"/&gt; &lt;expression&gt;insert into chromFrag values ?&lt;/expression&gt; &lt;/sqlUpdateStatement&gt; &lt;/gridDataServicePerform&gt;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS</head><p>With a view to exploring how best to integrate databases and the Grid, the OGSA-DAI project has developed a collection of Grid Database Services, the key features of which are as follows.</p><p>• They provide consistent access to multiple database paradigms; this paper has described activities that support access to both Relational and XML DBSs. • They support flexible data delivery, providing facilities for incremental and bulk delivery, to and from services or files, in a synchronous or an asynchronous manner. • They are fully integrated with existing Grid functionalities for authentication and data transport.</p><p>• They are tracking the ongoing standardization activity within the DAIS Working Group of the Global Grid forum (http://www.gridforum.org).</p><p>The concepts embodied by the OGSA-DAI design are largely technology independent, assuming only that applications are built from services that communicate by exchanging messages. The first version made available was built on top of the OGSI 1.0 <ref type="bibr" target="#b29">[30]</ref>. Experience with several early implementations of OGSI, and a desire to achieve greater synergy between Grid and Web Service developer communities, has resulted in a recent proposal to revise the mapping of OGSI onto Web Services. This is in the form of a set of specifications called WS-Resource Framework (WSRF) <ref type="bibr" target="#b32">[33]</ref> which deliver a similar infrastructure, but with an explicit separation between stateful resources and the Web Services which present mechanisms for using those resources. As OGSA-DAI has a relatively simple operational model, it should be fairly straightforward to map it onto whatever emerges as the preferred way of building Grid applications. We are currently working on mappings to WSRF and WS-I.</p><p>Many of the advances to flow from the Grid will come from applications that can combine information from multiple data sets. This will allow researchers to combine different types of information on a single entity to gain a more complete picture, and to aggregate the same types of information about different entities. Achieving this requires support for integrating data from multiple DBSs, for example through distributed query facilities. The design of federation middleware is made much more straightforward by OGSA-DAI providing standard interfaces that hide as much of the heterogeneity as possible. The OGSA-DQP <ref type="bibr" target="#b28">[29]</ref> system builds a distributed query processing service on top of a set of OGSA-DAI database services. The query operations (filter, join, etc.) are distributed over nodes acquired from the Grid, so as to distribute the work of query evaluation in a scalable manner-the system can also exploit parallelism in the database operators and other operations invoked from a query, to provide scalable performance. OGSA-DQP exploits the standard OGSA-DAI interfaces to extract metadata about data held behind a service (e.g. its size, the availability of indices, etc.) for optimization. Having determined the best way to evaluate a query across each of the database services, it exploits the standard interfaces to send query requests to all the databases, while processing their responses is simplified by OGSA-DAI's common query result format. Without OGSA-DAI, the DQP service would have to be designed to interface directly with a set of heterogeneous DBMSs-a much harder task. Future development on the OGSA-DAI software is building on this, to produce data integration services which will bring together XML databases and semi-structured data held in files, as well as relational databases.</p><p>Overall, we believe that the OGSA-DAI system described in this paper is the most comprehensive attempt to date to provide generic database access capabilities within a Grid setting </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. OGSA-DAI components.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Activity inputs and outputs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Synchronous delivery of query results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Asynchronous delivery of query results to a file.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Asynchronous delivery of results from a service.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>. The design seeks to provide enhanced functionality compared with other database middleware by supporting access to multiple database paradigms and by providing flexible data delivery both to and from the database services. The OGSA-DAI software (along with OGSA-DQP) is freely available in open-source form from http://www.ogsadai.org.uk. Trademarks IBM and DB2 are trademarks of International Business Machines Corporation in the United States, other countries, or both. Java and all Java-based trademarks are trademarks of Sun Microsystems, Inc. in the United States, other countries, or both. Microsoft and SQL Server are trademarks of Microsoft Corporation in the United States, other countries, or both. Oracle is a trademark of Oracle Corporation. MySQL is a trademark of MySQL AB in the United States and other countries. Globus Project and Globus Tookit are trademarks of the University of Chicago.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table I .</head><label>I</label><figDesc>OGSA-DAI delivery activities.</figDesc><table><row><cell>Activity</cell><cell>Usage</cell></row><row><cell>deliverFromGDT</cell><cell></cell></row><row><cell>deliverFromGFTP</cell><cell></cell></row><row><cell>deliverFromURL</cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Copyright c 2005 John Wiley &amp; Sons, Ltd. Concurrency Computat.: Pract. Exper. 2005; 17:357-376</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This work is supported by the U.K. e-Science Core Programme, the EPSRC and the DTI.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://www.globus.org/gt2.4/download.html" />
		<title level="m">The Globus Toolkit V</title>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A unified relational approach to Grid information services</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dinda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Plale</surname></persName>
		</author>
		<idno>GWD-GIS-012-1</idno>
	</analytic>
	<monogr>
		<title level="j">Global Grid Forum</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Web Services Architecture, W3C Working Group Note</title>
		<author>
			<persName><forename type="first">D</forename><surname>Booth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mccabe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Newcomer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Champion</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ferris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Orchard</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/2004/NOTE-ws-arch-20040211" />
		<imprint>
			<date type="published" when="2004-07">2004. July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Developing Enterprise Web Services: An Architects Guide to Best Practices</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chatterjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Webber</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Harmondsworth</publisher>
			<pubPlace>Penguin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Grid services for distributed system integration</title>
		<author>
			<persName><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Nick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tuecke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="37" to="46" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">DB2 and Web Services</title>
		<author>
			<persName><forename type="first">S</forename><surname>Malaika</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">J</forename><surname>Nelin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Reinwald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Wolfson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems Journal</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="666" to="685" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Oracle 9i Application Server Web Services Developer&apos;s Guide</title>
		<author>
			<persName><forename type="first">T</forename><surname>Van Raalte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ward</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Oracle Corporation</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Project spitfire-towards Grid Web Service databases. Database Access and Integration Services Working Group</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bosio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hoschek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kunszt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mccance</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Silander</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002. 2002</date>
			<publisher>Global Grid Forum</publisher>
			<pubPlace>Edinburgh, U.K.</pubPlace>
		</imprint>
	</monogr>
	<note>5th Global Grid Forum (GGF5</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Reliable file transfer in Grid environments</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Madduri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">S</forename><surname>Hood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">E</forename><surname>Allcock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Annual IEEE Conference on Local Computer Networks (LCN)</title>
		<meeting>the 7th Annual IEEE Conference on Local Computer Networks (LCN)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="737" to="738" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">File and object replication in data Grids</title>
		<author>
			<persName><forename type="first">H</forename><surname>Stockinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Samar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Holtman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Allcock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">T</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Tierney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th IEEE International Symposium on High Performance Distributed Computing (HPDC-10)</title>
		<meeting>the 10th IEEE International Symposium on High Performance Distributed Computing (HPDC-10)</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="76" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Components of a data Grid</title>
		<author>
			<persName><forename type="first">A</forename><surname>Rajasekar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wan</forename><forename type="middle">M</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Moore</forename><forename type="middle">R</forename><surname>Mysrb</surname></persName>
		</author>
		<author>
			<persName><surname>Srb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th IEEE International Symposium on High Performance Distributed Computing (HPDC-11)</title>
		<meeting>the 11th IEEE International Symposium on High Performance Distributed Computing (HPDC-11)<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="301" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Chimera: A virtual data system for representing, querying, and automating data derivation</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">T</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J-S</forename><surname>Vöckler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wilde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Scientific and Statistical Database Management (SSDBM)</title>
		<meeting>the 14th International Conference on Scientific and Statistical Database Management (SSDBM)</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="37" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">The Open Grid Services Architecture, GGF OGSA Working Group</title>
		<ptr target="http://forge.gridforum.org/projects/ogsa-wg/document/draft-ggf-ogsa-spec/en/13" />
		<editor>Foster I, Gannon D, Kishimoto H</editor>
		<imprint>
			<date type="published" when="2003-07">2003. July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Ogsa-Dai</forename><surname>V3</surname></persName>
		</author>
		<ptr target="http://www.ogsadai.org/releases/ogsadai.php#R3" />
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<ptr target="http://forge.gridforum.org/projects/dais-wg/" />
		<title level="m">Global Grid Forum-Database Access and Integration Services Working Group</title>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Global Grid Forum-OGSA Security Working Group</orgName>
		</author>
		<ptr target="http://forge.gridforum.org/projects/ogsa-sec-wg/" />
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<ptr target="http://forge.gridforum.org/projects/acct-rg/" />
		<title level="m">Global Grid Forum-Accounting Models Research Group</title>
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">A Grid Monitoring Architecture</title>
		<author>
			<persName><forename type="first">B</forename><surname>Tierney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Aydt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gunter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Swany</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wolski</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
			<publisher>Global Grid Forum</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Global Grid Forum-Scheduling and Resource Management Area</title>
		<ptr target="http://forge.gridforum.org/projects/srm/" />
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A suite of Daml+Oil ontologies to describe bioinformatics Web Services and data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Wroe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Stevens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Goble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roberts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Greenwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Cooperative Information Systems</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="197" to="224" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A decentralized, adaptive, replica location service</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ripeanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Forster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th IEEE International Symposium on High Performance Distributed Computing (HPDC-11)</title>
		<meeting>the 11th IEEE International Symposium on High Performance Distributed Computing (HPDC-11)<address><addrLine>Edinburgh, U.K.; Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002-07">July 2002. 2002</date>
			<biblScope unit="page" from="24" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Research agenda for the Semantic Grid: A future e-Science infrastructure</title>
		<author>
			<persName><forename type="first">D</forename><surname>De Roure</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shadbolt</surname></persName>
		</author>
		<idno>UKeS-2002-02</idno>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
		<respStmt>
			<orgName>U.K. National e-Science Centre</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">T</forename><surname>Berners-Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hendler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Lassila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Semantic Web. Scientific American</title>
		<imprint>
			<date type="published" when="2001-05">2001. May</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Databases and the Grid. Grid Computing</title>
		<author>
			<persName><forename type="first">P</forename><surname>Watson</surname></persName>
		</author>
		<editor>Berman, Fox, Hey</editor>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="363" to="384" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Data requirements for the Grid</title>
		<author>
			<persName><forename type="first">D</forename><surname>Pearson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
		<respStmt>
			<orgName>U.K. Grid Database Taskforce</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Scoping Study Report</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Federated database systems for managing distributed, heterogeneous and autonomous databases</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Seth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Larson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="183" to="236" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Ozone: Integrating structured and semistructured data</title>
		<author>
			<persName><forename type="first">T</forename><surname>Lahiri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Abiteboul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Widom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th International Workshop on Database Programming Languages</title>
		<meeting>the 7th International Workshop on Database Programming Languages<address><addrLine>Kinloch Rannoch, U.K.; Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Distributed query processing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="399" to="433" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Service-based distributed query processing on the Grid</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alpdemir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mukherjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">W</forename><surname>Paton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaa</forename><surname>Fernandes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gounaris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Conference on Service-Oriented Computing (ICSOC)</title>
		<meeting>the 1st International Conference on Service-Oriented Computing (ICSOC)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="467" to="482" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Open Grid Services Infrastructure (OGSI) Version 1.0. Global Grid Forum Recommendation, Global Grid Forum</title>
		<author>
			<persName><forename type="first">S</forename><surname>Tuecke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Czajkowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kesselman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Maguire</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Vanderbilt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Snelling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-06">June 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Apache</forename><surname>Xindice</surname></persName>
		</author>
		<ptr target="http://xml.apache.org/xindice/" />
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Globus</forename><surname>Gridftp</surname></persName>
		</author>
		<ptr target="http://www.globus.org/datagrid/gridftp.html" />
		<imprint>
			<date type="published" when="2004-07">July 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Modeling stateful resources with Web Services</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Leyman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nally</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Storey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tuecke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Weerawaranna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems Journal</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
