<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">J</forename><surname>Walrand</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Richard</forename><surname>Weber</surname></persName>
						</author>
						<author>
							<persName><forename type="first">J</forename><surname>Ridder</surname></persName>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">R</forename><surname>Walrand</surname></persName>
						</author>
						<author>
							<persName><surname>Weber</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Univ. of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>ON</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Dept of Econometrics</orgName>
								<orgName type="institution">Free University</orgName>
								<address>
									<addrLine>Amster-dam, de Boelelaan 1105</addrLine>
									<postCode>1081 HV</postCode>
									<settlement>Amsterdam</settlement>
									<country key="NL">the Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">EECS Dept</orgName>
								<orgName type="institution">Univ. of California</orgName>
								<address>
									<postCode>CA94720</postCode>
									<settlement>Berkeley</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">Queen&apos;s College</orgName>
								<orgName type="institution" key="instit2">University of Cambridge</orgName>
								<address>
									<addrLine>Cam-bridge</addrLine>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="laboratory">Statistical Laboratory</orgName>
								<orgName type="institution">University of Cambridge</orgName>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3D9D521849387118B2E170C302BCDD52</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T17:21+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>His research is in stochastic processes and optimization in queueing, scheduling, bin packing, telecommunications, manufacturing and finance. The research reported here was conducted on the first of his many visits during the past five years to the Computer Science Institute and University of Crete. These visits have resulted in further progress on the analysis of ATM switches.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Admission Control and Routing in ATM Networks using Inferences from Measured Buffer Occupancy C. Courcoubetis, G. Kesidis, Member, IEEE, A.</p><p>Abstract-We address the issue of call acceptance and routing in ATM networks. Our goal is to design an algorithm that guarantees bounds on the fraction of cells lost by a call. The method we propose for call acceptance and routing does not require models describing the trafflc. Each switch estimates the additional fraction of cells that would be lost if new calls were routed through the switch. The routing algorithm uses these estimates. The estimates are obtained by monitoring the switch operations and extrapolating to the situation where more calls are routed through the switch. The extrapolation is justified by a scaling property. To reduce the variance of the estimates, the switches calculate the cell loss that would occur with virtual buffers. A way to choose the sizes of the virtual buffers in order to minimize the variance is discussed. Thus, the switches constantly estimate their spare capacity. Simulations were performed using Markov fluid sources to test the validity of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SYNCHRONOUS transfer mode (ATM) is a form of</head><p>A packet switching that is proposed for broadband networks. In ATM, data is divided into 53 byte cells that are multiplexed on a time-slotted channel. When network traffic is bursty, ATM's use of statistical multiplexing results in an efficient use of bandwidth <ref type="bibr" target="#b7">[8]</ref>. ATM uses virtual circuits (VCs). Every cell of a call will use the same route. When a cell arrives at a switch, the switch determines its output link by looking at the VC number in the header of the cell, and using a lookup table in the switch's memory. The VC number of every call and the lookup tables of every switch are determined by the routing algorithm <ref type="bibr" target="#b13">[14]</ref>.</p><p>Calls share buffers in switches. The method of call acceptance described in this paper can be used with various switch architectures (e.g. output-buffer, shared-buffer, Batcher-banyan). If, for example, output buffer switches are used, each output link of a switch has an associated buffer. When the traffic offered to a link exceeds the link's capacity, cells begin to accumulate in the buffer. When a cell arrives at a full buffer, it is lost. Since cell losses are rare and delays are small, the statistics of a call does not significantly change along its virtual circuit. Also, we assume that no feedback congestion control method, such as windowing, is employed (such methods may not be feasible in ATM because of the large bandwidthx delay products). Therefore we assume that calls of the same type (e.g., video, speech, etc.) produce input traffic streams with identical statistics a t every buffer through the network. Traditional quality-of-service requirements for a call accepted through the network require that its cell loss rate be less than a predefined amount that depends on the type of service provided by the call.</p><p>We consider calls that use a non-negligible fraction of the link bandwidth, such as video calls or bundles of voice or data transfer calls. Thus, the number of calls is small compared to the buffer size. In our analysis, we therefore consider asymptotics as the buffer size becomes large and the number of calls is fixed.</p><p>Our goal is to design an algorithm for call acceptance and routing that guarantees bounds on the fraction of cells lost by the calls because of buffer overflows. The method we propose does not require models describing the statistics of the traffic. This contrasts with algorithms based on parametric models that attempt to estimate the parameters from the traffic. We choose the former approach because realistic models may be complex and slow to fit. We make an analogy with direct vs. indirect adaptive control. In indirect adaptive control, a parametric model is first fitted to the observed traffic. The optimal policy for the estimated parameters is then used. In the direct approach, the quantity to be optimized is measured. The control actions are selected to optimize future values of this quantity.</p><p>Thus, by monitoring its buffer occupancy, each switch constantly estimates its spare capacity to accept new calls. The algorithm then accepts and routes calls by using these estimates. To estimate its spare capacity, the switch has to evaluate the value that the cell loss probability would have if more calls were using that switch. Since the loss probability is very small, estimators based on fractions of lost cells have a very large variance and are therefore very slow. To reduce the variance, we estimate the value that the cell loss probability would have if the switch buffers could store fewer cells. That is, we keep track of a virtual buffer occupancy corresponding to a smaller buffer capacity. To relate the statistics of cell losses of this smaller buffer to those of the actual buffer, we use results on the shape of the loss probability as a function of the buffer size. These shape results are derived using the theory of large deviations.</p><p>The paper is organized as follows. Section 2 describes the call acceptance and routing algorithm in some detail.</p><p>In section 3 we assume the input sources are of the same type, and prove a predictive scaling property of the probability of buffer overflow in a busy cycle. We relate this quantity to the fraction of cells lost. In section 4, we describe two methods of variance reduction. Our simulations are described in section 5. Finally, in section 6, we discuss a way to handle multiple types of calls with this method and draw conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.">MONITOR TO INFER NETWORK OVERFLOW STATISTICS (MINOS)</head><p>We describe an algorithm which can be used by a switch to predict its spare capacity. This algorithm is a Monitor to Infer Network Overflow Statistics (MINOS). Another sample path estimation method for queuing networks was described in [7].</p><p>As explained above, we want to estimate the loss probability in the switch buffers. Consider a given buffer of size B cells shared by N &gt; 0 virtual circuits, and served by a fiber with transmission rate c cells/s. Let F ( N , B , c) be the fraction of cells lost due to buffer overflows. We want to estimate the fraction F ( N ( 1 + E ) , B , c ) of cells lost when a fraction E more calls are added. In section 3, we show that the probability of buffer overflow in a busy cycle, 9, has the following property: for large B ,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q , ( N ( l + E ) , B , c ) M 9 ( N , B , A). ( 1 ) l + €</head><p>By expressing F in terms of Q, we conclude that F has this property as well. Thus, we can estimate F when a fraction E more calls are added by estimating F with the current number of calls, N , and the service rate reduced by the same fraction. To estimate F ( N ( 1 + E ) , B , c ) , a device is added to the switch that keeps track of the buffer occupancy, Y ( t ) , when the service rate is &amp;. Specifically, when a cell arrives at the buffer, Y ( t ) is incremented by one. Also, Y ( t ) is decremented by one every % seconds when Y ( t ) &gt; 0. This function could be realized by a chip implementing the above algorithm. The problem now is to estimate F ( N , B , &amp;) by monitoring the buffer. Because this loss probability is very small (typically about lo-'), a direct estimator based on the fraction of lost cells has a very large variance.</p><p>To improve the estimator, the device will estimate the losses for smaller buffers (called virtual buffers) so as t o increase the frequency of buffer overflows, and therefore speed-up the collection of "important" samples. There is a tradeoff in choosing the size of the virtual buffers. If these virtual buffers are still too large, our estimates will be too slow. However, if these virtual buffers are too small, the original system system is over-distorted and we have a large error when we extrapolate back to B. Let B / k be the size of a virtual buffer for some IC &gt; 1 .</p><p>The virtual buffer estimate, F ( N , f , +), is related to To summarize the above, the estimation algorithm in the device keeps track of three "virtual buffer" occupancy processes with buffers of size B/ICi, i = 1 , 2 , 3 , and service rate &amp;. Note that these computations can be done in parallel with the normal operation of the switch so that the estimates of F ( N , e, &amp;) are constantly available to the routing algorithm. In section 4 we describe another way to reduce the variance of an estimate of F .</p><formula xml:id="formula_0">F ( N , B , &amp;), in</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The difference between MINOS and change-of-measure methods ( [ 5 ] , [ 1 2 ] )</head><p>is that it is impossible to alter the traffic parameters in the problem addressed here. That is why we resort to an estimation method that monitors the actual traffic.</p><p>Let us now describe how the routing algorithm can use the above estimates. For simplicity, we assume that all the virtual circuits carry calls of the same type. The case of different traffic types is discussed in section 6. Denote by F, = F ( N n r B n , c n ) the current fraction of cells lost a t buffer n, for all buffers n in the network. Assuming a first-come-first-served queuing discipline in each buffer, F, is the fraction of cells lost at buffer n by each call that uses buffer n. If call i uses buffers 1 , 2 , ..., m, the fraction of cells lost by that call is 1 -n:=,(l -F,) E F,. Using the above method, buffer n estimates FA = F ( N , ( l + E ) , Bn,cn). We attempt to find a path for the new call that satisfies m Now say we are trying to route a new call.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>L FA Gnew ,€path</head><p>where Gnew is the fraction of lost cells acceptable to the new call. Moreover, the router must ensure that, by choosing a particular path for the new call, the above constraint is not violated for any existing, previously routed call i (with guarantee Ga) which uses all or part of that path. If no path is found that satisfies these constraints, the new call is refused.</p><p>The routing policy just described is myopic. More so- phisticated strategies should be investigated. For instance, given statistics about the generation of new calls, one can formulate a dynamic programming problem which is solved by the optimal policy. We are currently exploring such extensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="111.">A PREDICTIVE SCALING PROPERTY</head><p>We start by heuristically deriving an expression for 9 ( N , B, c) for general source models. Consider a buffer of size B with service rate c shared by N i.i.d., stationary and ergodic sources. For all M greater than the average rate of cells produced by a source, assume that the probability that a source produces MT cells over a period of time of length T is approximately exp(-TH(M)) where H is strictly convex and non-negative. This assumption is motivated by large deviations results for empirical distributions of Markov chains <ref type="bibr" target="#b2">[3]</ref>. We will give the expression for H for Markov fluid models and thereby derive the asymptotic results in [l] in a completely different way. The expression for H for a large class of stationary and ergodic discrete-time sources is given in <ref type="bibr">[lo]</ref>.</p><p>By independence, the probability that, for j = 1, ..., N , the jth source produces pjT cells over time T is about</p><p>We now show the relationship between cell loss probability and the probability of buffer overflow in a busy cycle. Assuming that the processes are stationary and ergodic, we can express F in terms of the average number D of cells lost in an overflowing cycle, the average number C of cells arriving in a cycle, and 9:</p><p>(4)</p><formula xml:id="formula_1">9 D C F -.</formula><p>In finding an expression for C we ignore the buffer size B because the number of cells arriving in an overflowing cycle is of order B and the probability of an overflowing cycle is of order exp(-BI + o(B)). This gives us a contribution to C of approximately exp( -BI+o( B)) which is negligible for large B. In finding an expression for D we assume that the typical value of the time-derivative of the buffer occupancy Y when an overflow occurs is not a function of B; indeed, that typical value is Also, we assume a negligible number of cells will be lost after Y returns to zero <ref type="bibr" target="#b1">[2]</ref>. Under these assumptions, D will have a negligible dependence on B as well (for large B ) .</p><p>Consequently, the probability that all sources produce a total of N M T cells over large time T is about</p><formula xml:id="formula_2">~~ Thus D / C = exp(o(B)) which implies F = 9 exp(o(h)). '</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A . Markov Fluid Example</head><p>A source of a buffer is called a Markov fluid if its timederivative is a continuous-time Markov chain on a finite state space. If the arrival process to a buffer with deterministic service rate is a superposition of independent Markov fluids, then the buffer occupancy has piecewise-linear trajectories with random slopes.</p><p>where p = (p1, ..., p ~) .</p><p>Indeed, each choice of p such that x p j = N M is one particular way for NMT cells to get produced. This sum of exponentials can be approximated by the largest term (originally an argument of Laplace):</p><p>Each Markov fluid source has state space A = (Ax, ..., A,) and has Markov time-derivative with transition rate matrix Q. We assume Aj &lt; Aj+l &lt; 00 for all j .</p><p>Let ?r be the invariant of Q (?rQ = 0) and let = C?riAi be the average arrival rate.</p><p>To define H, let JQ be the large deviations action functional for the empirical distribution of a continuous-time</p><formula xml:id="formula_3">N N = exp(-TNH(M))</formula><p>Markov chain with transition rate matrix Q. Take where the last equality is due to the convexity of H.</p><p>Thus, the probability that, starting from an empty buffer, the sources produce cells at rate NM until the buffer overflows is exp ( --B Z ) , </p><p>(5)</p><p>where the infimum is taken over the space C , of distributions p on A. Note that the convexity of JQ on C , implies that H is convex on (A1,Am). For completeness, we give the following expression for JQ For p E E,,</p><p>where the infimum is taken over the space of transition rate matrices on A, G is the relative entropy rate between continuous-time Markov chains <ref type="bibr" target="#b8">[9]</ref>,</p><p>and p is the invariant of P ( p P = 0). This definition of JQ is different but consistent-in the sense of the contraction deviations in <ref type="bibr" target="#b8">[9]</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Analysis of Variance Reduction using virtual Buffers</head><p>In this section, we estimate the variance reduction achieved by using the virtual buffers. For simplicity we take E = 0 and consider the variance reduction achieved by using two virtual buffers (instead of three) to estimate 9 (instead of F ) . Thus, we estimate</p><formula xml:id="formula_5">N H ( M ) I(N,c) := inf ~ M &gt;+ NM -C 9 s 9 ( N ( 1 + E ) , B,c) M 9 ( N , B, &amp;) M Ae-B'</formula><p>and the minimizing M &gt; c/N is from the virtual buffer estimates Anick et a1 determined that exp(-BI(N, c) + o ( B ) ) is the stationary probability that the buffer occupancy exceeds B (for an infinite buffer) in <ref type="bibr">[l]</ref>. In [4], it was shown that F(1, B,c) = exp(-BI(l,c) +o(B)) using afirst-step argument for on-off Markov fluids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. VARIANCE REDUCTION</head><p>Because we assume the buffer sources are stationary and ergodic, given enough time we can use the two variance reduction methods described below to obtain a good estimate of 9(N, B, c / ( l + E ) ) with high probability. We attempt to analyze the performance of the first method by considering the sample standard deviation of our estimates.</p><p>Note that if a large deviation in the behaviour of the arriving traffic occurs, a poor estimate of 9(N, B , c / ( l + e ) )</p><p>would result, and this could lead to an erroneous admission decision which, in turn, could result in excess loss or delay. This is a common problem of estimation methods of random quantities. The problem of how much time is required to obtain an accurate estimate 9(N, B, c / ( ~+ E ) ) with high probability is addressed in the "small time" simulations of the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A . Virtual Buffers</head><p>Recall that we proposed using virtual buffers to increase the frequency of "important" samples (buffer overflows) in order to reduce the variance of the estimate of F. The virtual buffers have sizes B/k;, i = 0,1,2, with ko &gt; kl &gt; kz &gt; 1. We will now explain a way to express the quantity we want to estimate in terms of the virtual buffer estimates <ref type="figure">N , --)xAexp(--I</ref>) i = 0 , 2 . Substituting for A and I we get @ = Assume the time n (measured in busy cycles) to estimate the ai's is fixed and is the same for both virtual buffers. Let ui be the standard deviation of the estimate of 9 i so that ui = d@i(l -9 i ) / n M m, i = 0 , 2 . Thus, the relative error of the estimate of a, U / @ , satisfies for U, sufficiently small. Note that eo &lt; 0 and f is an upper bound for u / 9 because we have ignored the fact that the 9, are positively correlated.</p><formula xml:id="formula_6">B c B k i ' 1 S E ki Gi E b (</formula><p>Minimizing f over ( k 0 , k z ) we get that the optimal ko is very large and the optimal kz minimizes g ( k ) s (k -1 ) d m + k d e x p ( B I / k ) -A. Let n k and n T A be the number of cycles required to achieve E x 100% relative error with 95% confidence <ref type="bibr" target="#b12">[13]</ref> using two virtual buffers and direct time averaging respectively. A simple computation yields: n k / n ~~ = g 2 ( k z ) exp(-BI). In our simulations, we found A &lt;&lt; 1 (which implies the optimal kz M 0.4BI), and B I M 8, so that n k / n T A FS 1/17. The speed up factor is actually larger than 17 because U / @ &lt; f ; using sample standard deviations, we found a speed up was about 100.</p><p>Unfortunately, fixing E = 0 results in estimates of 9 that are consistently one order of magnitude too small. These calculations give us a rule of thumb for choosing the ki, i = 0 , 1 , 2 : choose LO large and k:! small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Variance Reduction using the Kullback-Leibler Distance</head><p>We now describe a faster method for estimating the probability of buffer overflow in a cycle. This method is useful when the estimation has to be performed very quickly, on the basis of few observations. The main point of this section is that estimators that improve upon those based on virtual buffers are possible. Instead of using three virtual buffers etc., we monitor the peak buffer occupancy in every These expressions for A and I can be easily updated at the end of every cycle. Taking E # 0 so that K is a function of three parameters, we found no simple closed form solution to aK/dE = a K / a I = aK/dA = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. SIMULATIONS</head><p>The objective of the simulation experiments is to validate the methods used for estimating the spare capacity of switches. Recall that these methods are based on asymptotic results derived from the theory of large deviations. Specifically, we use two results: the exponentiality of the tail of the overflow probability distribution and the asymptotic scaling property which states that the loss probability is a function of the ratio of the number of calls over the transmission rate. Since these results are valid only in the limit, as the loss probability becomes small, it is important to verify that they are usable in the range of values of interest. The simulation experiments are used for verifying that validity.</p><p>The simulation experiments show that the asymptotic formulas introduce only a small error when used with realistic loss probabilities.</p><p>We conducted simulations using the on-off Markov fluid model described above for the sources to the buffer. The following values were chosen for the parameters: B = 1800 cells, A0 = 0, A1 = 2500 cells/s, c = 15000 cells/s ( M 6</p><p>Mbps) and 20 -20 lo 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>QT = [ -lo</head><p>The number of sources, N , was varied. We took E = 1 / N and N + 1 E {13,14, .., 17). The above parameters were chosen so that we would be simulating on-off sources with burst rates in the Mbps range (1 cell = 53 bytes). We observed that the fraction of overflowing cycles among non-"trivial" busy cycles was small: a trivial busy cycle being one in which a cell arrives to an empty buffer and leaves before the next cell arrives (-c &lt; Y &lt; 0). The values of N were chosen in the above range to simulate heavy traffic conditions: p ( F ) = +lrlht = where A = ( ~0 ~~1 ) =</p><p>The first simulation checks the Nc scaling property (equation (1)) for a finite B when a large amount of time is available to accurately estimate the Fi, i = 1 , 2 , 3 . For N + 1 E 13, ..., 17, we measured F ( N + 1, B , c) using direct sample averaging (we stopped our simulation when the 95% confidence interval estimate of F ( N + 1, B , c ) was less than 0.3 <ref type="bibr" target="#b12">[13]</ref>). Using three virtual buffers, we estimated F ( N + 1, B , c ) from estimates of F; = F ( N , e, +) using the formulas above with E = 1 / N (we stopped our simulation when the 95% confidence interval estimate of F ( N , e, +) was less than 10%). We used two different sets of three ki: <ref type="bibr">(20,</ref><ref type="bibr">15,</ref><ref type="bibr" target="#b8">9)</ref>   sured value of F ( N + 1, B , c), Fa is obtained by using three virtual buffers with ( N , c / ( l + N-')) and k = (20,15,9), and Fb is obtained by using three virtual buffers with (N,c/(l + N-')) and k = (15,12,9). Thus, F a and Fb are both well within an order of magnitude of F .</p><p>In the second simulation, we fixed N + 1 = 13 so that P := F ( N + 1,B,c) M 2 x lo-' and 9 ( N + l , B , c ) w 3 x lo-'. We ran the simulation for n = lo' busy cycles of the "actual" buffer process (size B). Since the probability of even seeing one overflow in this amount of time is 30%, an estimate of F from direct sample averages would probably be zero. Table <ref type="table">2</ref> shows the performance of the estimator of F using three virtual buffers for two sets of k,: k = (40,20,10) for Fa and k = (20,15,10) for F b . The sample standard deviation was less than the estimate in every trial.</p><p>Fa and Fb are both well within an order of magnitude of </p><p>These two simulations were repeated using four-rate Markov fluids with the following parameters chosen to have the traffic characteristics described above: B = 1800 cells, Ai E <ref type="bibr">(0,</ref><ref type="bibr">2000,</ref><ref type="bibr">3000,</ref><ref type="bibr">4000)</ref>  (30,15,5) for Fa and (20,15,5) for Fb for both small and large-time simulations. For the small-time simulation, we fixed N + 1 = 9 and the simulation time n = 5 x lo7 cycles.</p><p>Since the measured value of 9 ( N + 1, B , c) = 6 x lo-', we get that the probability of seeing an overflow in one n cycle trial is 30% as above. The results are shown in Tables <ref type="table">3</ref> and<ref type="table">4</ref> (as in Tables <ref type="table" target="#tab_1">1</ref> and<ref type="table">2</ref>     We repeated the simulation with on-off Markov fluid sources to estimate 9 using the method based on minimizing the Kullback-Leibler distance. We fixed N + 1 = 15 so that 9 ( N + 1, B, c) M lo-' and ran the simulation for n = l o 5 busy cycles. 9" was obtained by using B* = B/15 and (N,c/(l + N -' ) ) . In the six trials of this simulation (results shown Table <ref type="table">5</ref>), one overflow was observed in the actual buffer. The estimates are optimistic but are within an order of magnitude of the measured value 9 ( N + l , B , c ) = 1.0 x lo-'. Also, the sample standard deviation was less than the estimate in every trial. For the same amount of time, the three virtual buffers estimate was very noisy.</p><formula xml:id="formula_8">I N + l 1) 1 2 1 1 1 1 1 0 1 9 I TRIAL 1 F a x lo7 2.77 F b x lo7</formula><p>When estimating 9, trivial busy cycles were counted. When these cycles were not counted, the simulations yielded good results anyway; the values of 9 were, of course, much higher in this case. To show that the loss probability is very sensitive to the source and server burstiness, we consider an M/M/1 queue with the same traffic  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DISCUSSION A N D CONCLUSIONS</head><p>The above method can be used to handle multiple types of calls sharing a buffer. Say there are six voice calls (same type) and two video calls currently using the buffer, and we wish to estimate the effect of adding a video call. Define a new type of call that is the sum of three voice calls and one video call. Therefore there are two calls of the new type currently using the buffer. Instead of estimating the fraction of cells lost when another video call is added, we estimate F when another call of the new type is added. This, of course, may be a very conservative estimate of the affect of another video call on the buffer.</p><p>In order to estimate the number of Mips required by one virtual buffer to estimate F,, we let the peak arrival rate into the buffer be p x c cells/s. The worst case occurs during cell loss when we have to handle the buffer occupancy and perform a comparison every (pc + c)-' seconds, and update the cells lost and cells arrived counters every (pc)-l seconds. Thus we require 2(pc + c) + 2pc = (4p + 2)c Mips.</p><p>For c = 3.5 x lo5 rells/s (150 Mbps) and p 1 5 we get 7.7 Mips required by one virtual buffer.</p><p>In summary, we have described an algorithm for estimating the spare capacity of switches. This method monitors the traffic in a switch buffer and makes quick and direct estimates of the effect of routing more calls through that buffer on the fraction of cells lost in that buffer. The method can be used by a call acceptance and routing algorithm. The method is robust: it has been shown, in principle, to work under weak assumptions. Finally, simulations were conducted which demonstrated the predictive property of the algorithm as well as the significant variance reduction with finite buffer size.</p><p>Since many idealizations were made above, experiments on actual networks are clearly required. Moreover, a more exhaustive simulation study using more realistic ATM traffic sources should be conducted.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>the following way. We can show (next section) that F has the following form: Assuming eo(B) has the form A B -( , we obtain estimates of Because we have three unknowns ( A , 6, I), we will carry out this estimate for three values of k : ko &gt; kl &gt; k z &gt; 1 . These three equations can be solved for A , ( and I ( N , &amp;). We can then plug in A , ( and I ( N , &amp;) into the expression for F ( N , B , &amp;), and thus compute the desired quantity F ( N ( l + E ) , B , c) x F ( N , B , &amp;).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Indeed T = B / ( N Mc) is the time the buffer occupancy takes to reach B when the aggregate cell arrival rate is N M . By the argument of Laplace, 9 ( N , B, c) exp (-B Mi ; fG g) (2) = @(I,B,;)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>i</head><label></label><figDesc>= 0,1,2. Let a,,j = 1k ; k j ' eo = w , e2 = w , k o -k a and = log(k;ok;a)/ log(~~i,a,~z.o,~o.i). solving for the stituting into the expression for F we get, mapping Principle [IlI-with that in [6] (see ''level 2.5" large three unknowns, A, I , and I , in terms of the Fi, and sub-If the Markov fluids are all of the on-off ( m = 2) type, then (see equation (5)) log F = lo log F o + I1 log F1 + 12 log F z where q1 = Q ~, ~ and q2 = Q ~, ~. we now use equations (2) and (4) to get an expression for F(N, B, c) = exp( -B I ( N , c) + o( B)). By direct calculation,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>it 2; for the ith cycle). Let n be a given number of cycles, and B* = B/ko. For integers b 2 B* -1, define the empirical tail distribution of Z;: Aexp(-bI) -Aexp(-(b+ 1)I) if b 2 B* where we have taken E = 0. The Kullback-Leibler distance [3] between 4 and p is The values of A and I that minimize K are given by A = (1 -p ( B * -l))exp(B*I).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>N</head><label></label><figDesc>cells/s, c = 15000 cells/s, + 1 E {9,10,11,12}, and two different sets of three k;:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>intensity p = 15.lrlAl/c = 15/18. Approximating 9 by the stationary probability that this M / M / l queue exceeds B, we get @ ( N + 1, B,C) M pB z 10-140-an extremely poor estimate.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>and (15,12,9).</head><label></label><figDesc></figDesc><table><row><cell>The simula-</cell></row><row><cell>tion results are given in</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>That is, F is the mea-</figDesc><table><row><cell>( 2 / 3 , W .</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE I LARGE TIME, TWO-RATE SOURCES.</head><label>I</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>lo6 11 3.45 I 1.75 I 3.44 I 2.16 I 2.01 12.98 I</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>I783</cell></row><row><cell>TRIAL</cell><cell>I</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell></row><row><cell></cell><cell></cell><cell></cell><cell>TABLE I1</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="5">SMALL TIME, TWO-RATE SOURCES, @ = 2 x</cell></row><row><cell cols="6">I TRIAL 11 1 1 2 1 3 1 4 1 5 1 6 1</cell></row><row><cell cols="6">I F a x I, Fb x 10' 11 2.10 I 2.13 I 3.11 12.02 I 2.31 I 2.54 I</cell></row><row><cell>P.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE I11 LARGE T I M E , FOUR-RATE SOURCES.</head><label>I11</label><figDesc>respectively). Note that, Fa and Fb are both well within an order of magnitude of F = F ( N + 1, B, c) in both tables.</figDesc><table><row><cell>aa x lo7 3.14 6.32 3.32 -_____</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>2.63 -logloF 11 3.01 I 3.88 15.11 16.74</head><label></label><figDesc></figDesc><table><row><cell>-loa,,,F"</cell><cell cols="4">11 3.02 13.87 I 5.14 16.76</cell></row><row><cell></cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell></row><row><cell></cell><cell>2.98 4</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>.66 1.50 2.90 2.13 2.78 4.22 1.56 2.32 2.01</head><label></label><figDesc></figDesc><table><row><cell>V I " -logl,Fb (1 3,I</cell><cell>I</cell><cell>I</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>.62 14.28 15.00 16.55</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>TABLE IV SMALL</head><label>IV</label><figDesc></figDesc><table /><note><p>T I M E , FOUR-RATE SOURCES, P = 2 X lo-'.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>TABLE V SM.41,L</head><label>V</label><figDesc>T I M E . TWO-RATE SOrJRCI3S. 6 = 1.0 X lop6.</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We are grateful to the reviewers for their constructive comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Stochastic theory of R data-handling system with multiple sources</title>
		<author>
			<persName><forename type="first">D</forename><surname>A N I C K</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mitre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Sondhi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Sys. Tech. J</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="1871" to="1894" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Frame losses due to buffer overflows in fast packet networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bhargava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Hluchyj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Large Deviation Techniques i n Decision, Simulation and Estimation</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Bucklew</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990">1990</date>
			<publisher>John Wiley and Sons, Inc</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Effectiveness of the leaky bucket policing mechanismin ATM networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Butto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cavallero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Tonietti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE JSAC</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="335" to="342" />
			<date type="published" when="1991-04">April 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Large deviations and rare events in the study of stochastic algorithms</title>
		<author>
			<persName><forename type="first">M</forename><surname>Cottrell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J-C</forename><surname>Fort</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Malgouyres</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Auto. Control</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="907" to="920" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Large Deviations</title>
		<author>
			<persName><forename type="first">J-D</forename><surname>Deuschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Stroock</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Academic Press</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A new approach to the analysis of discrete event dynamic systems</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Cassandras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Network, transport, and switching integration for broadband communications</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Hui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="page" from="40" to="51" />
			<date type="published" when="1988-03">March 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Relative entropy between Markov transition rate matrices</title>
		<author>
			<persName><forename type="first">G</forename><surname>Kesidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Walrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Info. Th</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">1057</biblScope>
			<date type="published" when="1993-05">May 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Effective bandwidths for multiclass Markov fluids and other ATM sources</title>
		<author>
			<persName><forename type="first">G</forename><surname>Kesidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Walrand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-S</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Networking</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="424" to="428" />
			<date type="published" when="1993-08">Aug. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Large deviations for processes with independent increments</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lynch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sethuraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Probability</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A quick simulationmethodfor excessive backlogs in networks of queues</title>
		<author>
			<persName><forename type="first">S</forename><surname>Parekh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Walrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Auto. Control</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Ross</surname></persName>
		</author>
		<title level="m">A Course i n Simulation</title>
		<meeting><address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>Macmillan</publisher>
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Computer Networks, 2nd Ed</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Tanenbaum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988">1988. 1990</date>
			<publisher>Prentice Hall</publisher>
			<biblScope unit="page" from="132" to="139" />
			<pubPlace>Englewood Cliffs, N J</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">He was a Research Assistant in ERL (Electronic Research Lab) in U.C. Berkeley, an AMTS (Associate Member of Technical Staff), Summer 1981, Bell Laboratories, an Adjunct Assistant Professor in the EE department, Columbia University, Visiting Lecturer at the EECS department, U. C. Berkeley, 1986, from 1982 until 1990 Member of the Technical Staff (MTS) in the Mathematical</title>
	</analytic>
	<monogr>
		<title level="m">Electrical and Mechanical Engineering, his M.S.( 1980) and Ph.D</title>
		<imprint>
			<publisher>Costas Courcoubetis was born in Athens, Greece. He received his Diploma</publisher>
			<date type="published" when="1977">1977. 1982</date>
		</imprint>
		<respStmt>
			<orgName>National Technical University of Athens, Greece ; University of California, Berkeley, in Electrical Engineering and Computer Science ; Sciences Research Center, Bell Laboratories ; University of Crete, Heraklion, Greece, and researcher at the Institute of Computer Science, FORTH</orgName>
		</respStmt>
	</monogr>
	<note>His interests are performance analysis of computer systems and high-speed (ATM) networks, network management. formal methods for the specification and verification of concurrent and real-time systems</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">1990 he taught at the University of California at Berkeley, and in 1991 and 1992 he was an assistant professor at the Erasmus University of Rotterdam. At present, he is an associate professor of Operations Research in the department of Econometrics of the Free University of Amsterdam. His research interests are in queueing theory, inventory models and applications of genetic algorithms. Jean Walrand is a professor of Electrical Engineering and Computer Sciences at the University of California at Berkeley. He is the author of &quot;An introduction to queueing networks</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Sc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Ad Ridder received M.Sc. in Mathematics from the University of Amsterdam, in 1983, and the Ph.D. degree in Operations Research from the University of Leiden</title>
		<meeting><address><addrLine>Toronto, Canada; Waterloo; Heerlen, the Netherlands, in</addrLine></address></meeting>
		<imprint>
			<publisher>Irwin/Aksen</publisher>
			<date type="published" when="1964">1964. 1987. 1988. 1991</date>
		</imprint>
	</monogr>
	<note>D. degrees from the University of California at Berkeley in 1990 and 1992, respectively, all in electrical engineering. He is currently an assistant professor in the electrical and computer engineering department of the University of Waterloo. Communication networks: A &amp;st course. He is a Fellow of the IEEE and a recipient of the Lanchester Prize from the Operations Research Society of America</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
