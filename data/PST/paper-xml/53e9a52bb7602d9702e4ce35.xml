<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Relational Markov Models and their Application to Adaptive Web Navigation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Corin</forename><forename type="middle">R</forename><surname>Anderson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Comp. Sci. &amp; Eng</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Pedro</forename><surname>Domingos</surname></persName>
							<email>pedrod@cs.washington.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Comp. Sci. &amp; Eng</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Daniel</forename><forename type="middle">S</forename><surname>Weld</surname></persName>
							<email>weld@cs.washington.edu</email>
							<affiliation key="aff2">
								<orgName type="department">Dept. of Comp. Sci. &amp; Eng</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Relational Markov Models and their Application to Adaptive Web Navigation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">594A174B7017F16BC9ACAF27C2343649</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.2.8 [Database Management]: Database Applications-data mining</term>
					<term>I.2.6 [Artificial Intelligence]: Learning-induction</term>
					<term>I.5.1 [Pattern Recognition]: Models-statistical Markov models, relational probabilistic models, Web mining, personalization, shrinkage</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Relational Markov models (RMMs) are a generalization of Markov models where states can be of different types, with each type described by a different set of variables. The domain of each variable can be hierarchically structured, and shrinkage is carried out over the cross product of these hierarchies. RMMs make effective learning possible in domains with very large and heterogeneous state spaces, given only sparse data. We apply them to modeling the behavior of web site users, improving prediction in our PROTEUS architecture for personalizing web sites. We present experiments on an e-commerce and an academic web site showing that RMMs are substantially more accurate than alternative methods, and make good predictions even when applied to previously-unvisited parts of the site.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Markov models <ref type="bibr" target="#b27">[27]</ref> are widely used to model sequential processes, and have achieved many practical successes in areas such as web log mining, computational biology, speech recognition, natural language processing, robotics, and fault diagnosis. However, Markov models are quite limited as a representation language, because their notion of state lacks the structure that exists in most real-world domains. A first-order Markov model contains a single variable, the state, and specifies the probability of each state and of transiting from one state to another. Hidden Markov models (HMMs) contain two variables: the (hidden) state and the observation. In addition to the transition probabilities, HMMs specify the probability of making each observation in each state. Because the number of parameters of a first-order Markov model is quadratic in the number of states (and higher for higher-order models), learning Markov models is feasible only in relatively small state spaces. This requirement makes them unsuitable for many data mining applications, which are concerned with very large state spaces.</p><p>Dynamic Bayesian networks (DBNs) generalize Markov models by allowing states to have internal structure <ref type="bibr" target="#b30">[30]</ref>. In a DBN, a state is represented by a set of variables, which can depend on each other and on variables in previous states. If the dependency structure is sufficiently sparse, it is possible to successfully learn and reason about much larger state spaces than using Markov models. However, DBNs are still limited, because they assume that all states are described by the same variables with the same dependencies. In many applications, states naturally fall into different classes, each described by a different set of variables. For example, a web site can be viewed as a state space where each page is a state and each hyperlink is a possible transition. Classes of pages for an e-commerce site include: product descriptions, shopping carts, main gateway, etc. Variables associated with a product description page might be the product-id, the price, the quantity on hand, etc. Variables associated with a shopping cart page include the customer's name, the shopping cart ID, any relevant coupons, etc. These variables can help predict a user's navigational patterns, but it clearly would make no sense to associate a price with the site's gateway page or a credit card number with a product description page.</p><p>Examples of multiple state classes from other areas include:</p><p>Speech and language processing. Parts of speech (e.g., only verbs have tense), semantic contexts (e.g., asking about flights versus asking about hotels), types of discourse, etc.</p><p>Mobile robotics. Types of location (e.g., indoors/outdoors, offices, laboratories, bedrooms, etc.).</p><p>Computational biology. Components of metabolic pathways, regions of DNA, protein structures, etc.</p><p>Process control. Stages of a manufacturing process, machine types, intermediate products, etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fault diagnosis.</head><p>Fault states associated with different subsystems, each with a different set of sensor readings, etc.</p><p>This paper proposes relational Markov models (RMMs), a generalization of Markov models that allows states to be of different types, with a different set of variables associated with each type. In an RMM, a set of similar states is represented by a predicate or relation, with the state's variables corresponding to the arguments of the predicate. The domain of each argument can in turn have a hierarchical structure, over which shrinkage is carried out <ref type="bibr" target="#b19">[19]</ref>. RMMs compute the probability of a transition as a function of the source and destination predicates and their arguments. RMMs are an example of a relational probabilistic representation, combining elements of probability and predicate calculus. Other representations of this type include probabilistic relational models <ref type="bibr" target="#b10">[10]</ref>, probabilistic logic programs <ref type="bibr" target="#b21">[21]</ref> and stochastic logic programs <ref type="bibr" target="#b20">[20]</ref>.</p><p>We expect RMMs to be particularly useful in applications that combine low-level and high-level information, such as plan recognition from low-level actions, or speech recognition aided by natural language processing. An example of the former is inferring information-seeking goals of web site users from the sequence of links they follow. Doing this inference makes it possible to automatically adapt web sites for different users, and as a result, to minimize users' effort in reaching their goals. RMMs are able to predict user behavior even in web sites (or parts thereof) that the user has never visited before, and are thus potentially much more broadly useful than previous approaches to web log mining, including traditional Markov models. In this paper we:</p><p>• Precisely describe relational Markov models and how they extend traditional Markov models;</p><p>• Apply RMMs to predict web navigation patterns;</p><p>• Empirically compare a variety of RMMs with traditional Markov models, demonstrating that RMMs predict users' actions more accurately.</p><p>The next section describes representation, inference and learning in RMMs. The following sections describe their application to adaptive web navigation, and the experimental results obtained. We conclude with a discussion of related and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATIONAL MARKOV MODELS</head><p>Consider a discrete system that evolves by randomly moving from one state to another at each time step. A first-order Markov model is a model of such a system that assumes the probability distribution over the next state only depends on the current state (and not on previous ones). Let St be the system's state at time step t. Formally, a first-order Markov model is a triple (Q, A, π), where: Q = {q1, q2, . . . , qn} is a set of states; A is the transition probability matrix, where aij = P (St = qj | St-1 = qi) is the probability of transiting from state qi to state qj, assumed the same for all t &gt; 0; and π is the initial probability vector, where πi = P (S0 = qi) is the probability that the initial state is qi. Given a first-order Markov model, the probability of observing a sequence of states (s0, s1, . . . , sT</p><formula xml:id="formula_0">) is P (S0 = s0, S1 = s1, . . . , ST = sT ) = P (S0 = s0) T t=1 P (St = st | St-1 = st-1)</formula><p>. Given a set of observed sequences, the maximum-likelihood estimate of an initial probability πi is the fraction of sequences that start in state qi, and the maximum-likelihood estimate of a transition probability aij is the fraction of visits to qi that are immediately followed by a transition to qj. In an nth order Markov model, the probability of transiting to a given state depends on the n previous states, and the transition matrix is (n + 1)th-dimensional. We refer to Markov models of any order defined in this way as propositional Markov models (PMMs).</p><p>Relational Markov models (RMMs) are obtained from the propositional variety by imposing a relational structure on the set of states. For example, consider a Markov model of an e-commerce Web site, in which each page is a state. A PMM would have a  unique "proposition" for each page/state: for the main entry page, for each product description page, for the checkout page, etc. (see Figure <ref type="figure">1</ref>). In a PMM each state is an atomic entity, and there is no notion of types of states. In contrast, an RMM groups pages of the same type into relations, with each relation described by its own set of variables (see Figure <ref type="figure">2</ref>). For example, one relation might be "product description page," with a variable "product" representing the product the page describes, and "stock level" representing whether the product is in stock or on back order. Additionally, these variables themselves are grouped together, forming a hierarchy of values; Figure <ref type="figure">3</ref> shows a fragment of such a hierarchy for products at an e-commerce site. A state instance is thus uniquely described as a tuple in a relation instantiated with leaf values from each variable's domain hierarchy. For example, ProductPage(iMac, in stock) would represent the page describing an iMac computer that is currently in stock at the site's warehouse. Moreover, a tuple using non-leaf values is possible and corresponds to an abstraction-a distinguished set of states that are similar to each other in the sense that they have the same type and their arguments belong to the same sub-trees in the domain hierarchies. RMMs leverage these state abstractions for much richer learning and inference than PMMs, and make useful prediction possible in very large state spaces, where many (or most) of the states are never observed in the training data. In this paper, we focus on first-order 1 RMMs, but our treatment is readily generalizable to RMMs of any order. The next subsections describe representation, learning, and inference in first-order RMMs.</p><p>1 "First-order" is sometimes used in the literature to mean the same as "relational" or "predicate-level," in opposition to "propositional." In this paper we use it in the Markov sense, to denote the assumption that future states are independent of past states given the present state. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Representation</head><p>Formally, an RMM is a five-tuple D, R, Q, A, π . D is a set of domains, where each domain, D ∈ D, is a tree representing an abstraction hierarchy of values. Each leaf of D represents a ground value. R is a set of relations, such that each argument of each relation takes values from the nodes of a single domain in D. Q is a set of states, each of which is a ground instance of one of the relations in R, i.e., where each argument is instantiated with a leaf of the corresponding domain. A (the transition probability matrix) and π (the initial probability vector) are the same as in a PMM.</p><p>To continue our simplified e-commerce example, suppose that D contains abstraction hierarchies for Products and StockLevels as shown in Figure <ref type="figure">3</ref>.</p><p>R is the set {MainEntryPage(), ProductPage(Product,StockLevel) CheckoutPage()}, where ProductPage(Product,StockLevel) specifies that the first and second arguments of the ProductPage relation must come from the Product and StockLevel domains, respectively. Q consists of several states, one of which is ProductPage(iMac, in stock).</p><p>We now show how to use the relations and domain abstraction hierarchies to define sets of states as abstractions over Q. These abstractions are distinguished sets of states whose members are similar to each other by virtue of their relations and parameter values. That is, states whose parameter values are in common subtrees of their respective domains will appear in many abstractions together, while states with very different parameter values (or belonging to different relations) will appear together in only the most general abstractions.</p><p>We define these abstraction sets by instantiating a relation, R, with interior nodes (instead of just leaf nodes) from the domains of R's arguments. More formally, Let nodes(D) denote the nodes of a domain D. If d is a node in domain D, then let leaves(d) denote the leaves of D that are descendants of d. Let R ∈ R be a k-ary relation with domains D1, . . . , D k . Let d1, . . . , d k be nodes in the corresponding domains. We define the state abstraction corresponding to R(d1, . . . , d k ) to be the following subset of Q.</p><formula xml:id="formula_1">{R(δ1, . . . , δ k ) ∈ Q | δi ∈ leaves(di), ∀i, 1 ≤ i ≤ k}</formula><p>For example, given the domain trees shown earlier, Figure <ref type="figure">4</ref> shows several abstractions for the e-commerce RMM. Note that the abstraction ProductPage(AllProducts,in stock) is the set of two ground states: {ProductPage(iMac,in stock), ProductPage(dimension4100,in stock) }. These particular abstractions form the lattice for the ground state Product(iMac, in stock).</p><p>Given a particular state q ∈ Q, it is especially interesting to know all the abstractions of which q is a member. Without loss of generality, suppose that q = R(δ1, . . . , δ k ) and the domains of R's arguments are D1, . . . , D k . We then define the set of abstractions of q, written A(q), as the following subset of the power set of Q:</p><formula xml:id="formula_2">{R(d1, . . . , d k ) ⊆ Q | di ∈ nodes(Di) ∧ δi ∈ leaves(di), ∀i, 1 ≤ i ≤ k}</formula><p>For unary relations there is a total order on A(q), from the most specific ({q}) to the most general (Q). For n-ary relations, there is a partial order on A(q) (i.e., A(q) forms a lattice of abstractions). For example, the abstractions of Product(iMac, in stock) are shown in Figure <ref type="figure">5</ref>, where arrows point in the direction of increasing generality. Finally, the rank of an abstraction α = R(d1, . . . , d k ) is defined as 1 + k 1 depth(d k ), where depth() is defined as the depth of a node in a tree (with the root being at depth zero). The rank of Q (the most-general abstraction) is defined to be zero, and ranks increase as abstractions become more specific.</p><p>In the case of finite domains, RMMs are no more expressive than PMMs; given an RMM, an equivalent PMM can be obtained simply by creating a proposition for each tuple in Q. The advantage of RMMs lies in the additional support for learning and inference that the relational structure provides, as described in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Learning and Inference</head><p>In PMMs, the only possible learning consists of estimating the transition probabilities aij and initial probabilities πi, and these estimates can be done reliably only for states that occur frequently in the training data. In many cases (e.g., when modeling a user of a large Web site), most states are not observed in the training data, but it is still possible to generalize usefully from the observed behavior to unseen states. RMMs provide a formal framework for doing this generalization.</p><p>For each possible state abstraction α, we can define the corresponding initial probability πα as the probability that the initial state is an element of α: πα = q i ∈α πi. Similarly, for each pair of state abstractions (α, β) we can define the corresponding transition probability a α,β as the probability of transiting from a state in α to any state in β: a α,β = q i ∈α P (qi|α) q j ∈β aij, where P (qi|α) is the probability that the current state is qi given that the current state is a member of α. The abstraction transition probabilities a α,β can be estimated directly from the training data by counting. By making suitable simplifying assumptions, they can then be used to estimate the probabilities of transitions that are absent from the data. For example, if we assume that the destination state q d is independent of the source state qs given the destination abstraction β, then a sd = a α,β P (q d |β), where α is the source abstraction. P (q d |β) can be estimated as uniform: P (q d |β) = 1/|β|, where |β| is the number of states in abstraction β. To make maximum use of all the available information, we propose to use a mixture model for each transition probability:</p><formula xml:id="formula_3">a sd = P (St = q d | St-1 = qs) = α∈A(qs) β∈A(q d ) λ α,β a α,β P (q d |β)<label>(1)</label></formula><p>where the sum is over all abstractions of the source and destination states, and the λ α,β 's are non-negative mixing coefficients that sum to 1. The generative model implicit in Equation 1 is that, to generate a transition, we first choose a pair of abstraction levels (α, β) with probability λ α,β , and then move to destination state q d with probability a α,β P (q d |β). Effectively, this model performs shrinkage between the estimates at all levels of abstraction. Shrinkage is a statistical technique for reducing the variance of an estimate by averaging it with estimates for larger populations that include the target one <ref type="bibr" target="#b19">[19]</ref>. Equation 1 applies shrinkage across an entire abstraction lattice, rather than over a single abstraction path (as is more usual). For example, a forecast of the number of Apple iMacs sold at a given store can be shrunk toward a more reliable forecast for the average of this quantity at all stores in the same city as the store of interest. The comparative values for the λ α,β 's effectively trade off bias and variance in the probability estimate. Terms corresponding to more general abstractions have lower variance, because they are estimated with more training data, but have a larger bias than terms from more specific abstractions. Thus, good shrinkage weights have two desirable properties: (1) they reduce the influence of abstractions with very little data; and (2) they allow increasingly specific abstractions to dominate as the training set size grows, with the RMM reducing to a PMM in the infinite-data limit. The mixing coefficients λ α,β can be estimated in a number of ways, corresponding to different variations of our system:</p><p>• RMM-uniform: Uniformly (i.e., all λ α,β 's are equal). This approach has the advantage of being extremely fast, but may lead to poor results.</p><p>• RMM-EM: Using the EM algorithm, as described in Mc-Callum et al. <ref type="bibr" target="#b19">[19]</ref>. In preliminary evaluation this option performed poorly, due to insufficient training data, so we did not evaluate it further.</p><p>• RMM-rank: Using a heuristic scheme based on the rank of the abstraction. In particular, we experimented with the following method:</p><formula xml:id="formula_4">λ αβ ∝ n αβ k Rank(α)+Rank(β)<label>(2)</label></formula><p>where n αβ is the number of times that a transition from a state in α to a state in β could have occurred in the data (i.e., the number of visits to a state qi ∈ α to which a transition to a state qj ∈ β is possible), k is a design parameter, and the proportionality constant is derived from the requirement that the λ αβ 's sum to 1. This heuristic meets our desiderata for the weights, although many other variations are possible. The choice of k controls how much data must be seen at a given abstraction level before that level can have a significant weight; when n αβ &lt; k, λ αβ ≈ 0. In experiments with validation data, we have found that setting k = 10 works well in practice.</p><p>The size of the abstraction lattices, and hence the number of terms in Equation <ref type="formula" target="#formula_3">1</ref>, increases exponentially with the arity of the source and destination relations. Thus, when these arities are large, and/or when the abstraction hierarchies are deep, it may not be practical to compute all the terms in Equation <ref type="formula" target="#formula_3">1</ref>. Instead, we can select the more informative ones, and set the mixture weights of the rest to zero (thus ignoring them). An efficient way of doing this culling is to learn a decision tree with the destination abstraction as the class, and the arguments of the source relation as the attributes. Each node along the path in the tree that the source state follows corresponds to an (α, β) pair that will have a non-zero weight in Equation 1. These weights can then be chosen using any of the methods suggested earlier; this approach is simply selecting which terms will have non-zero weight.</p><p>More precisely, we learn a probability estimation tree or PET <ref type="bibr" target="#b26">[26]</ref>, because the goal is to estimate the probability of each destination abstraction, rather than simply predicting the most likely destination. Any set of abstractions that form a partition of the destination states can in principle be used as the class. In this paper, we consider only the highest level of abstraction-the relation R d ∈ R of the destination state. We learn a PET for each source relation separately. The candidate attributes include each argument of the source relation at each level of its domain hierarchy; thus, a k-ary relation each of whose arguments has n abstraction levels yields kn attributes. Figure <ref type="figure" target="#fig_2">6</ref> shows an example of such a PET.</p><p>To select the most informative terms in Equation 1 for a given source state, we consider the path the state goes down in the PET. Each node in the path has an associated probability distribution over destination abstractions (shown in Figure <ref type="figure" target="#fig_2">6</ref> in dashed-line boxes for a few nodes), and corresponds to a set of a α,β terms in Equation 1, one for each destination abstraction. The α corresponds to the decisions made from the root to the node, and β belongs to the set of abstractions that the PET predicts. For example, the highlighted leaf node in Figure <ref type="figure" target="#fig_2">6</ref> corresponds to the source abstraction ProductPage(AppleDesktops, in stock) and (like all other nodes in the tree) includes destination abstractions MainEntry(), ProductPage(AllProducts, AllStockLevels), and Checkout. The terms gathered from all the nodes along the path to the leaf are combined according to Equation <ref type="formula" target="#formula_3">1</ref>, with the shrinkage coefficients computed using any of the methods described above.</p><p>In this paper, we choose these weights using EM; by predicting the destination relation, and not more specific abstractions, there is sufficient data to perform EM reliably. In our experiments, we call this variant RMM-PET.</p><p>More generally, we could build multiple PETs, each one estimating transitions to a different partition of the states; thus, the source state would follow multiple paths, one in each PET. For example, one PET would predict the destination relation, another would predict the destination at a lower level of abstraction (for instance, the relation and one variable's ground value), etc. The terms collected from all the PETs would then be combined according to Equation <ref type="formula" target="#formula_3">1</ref>.</p><p>In practice, in large state spaces it is often the case that only a fraction of the states are directly reachable from a given state. For example, on a Web site only the pages that the current page links to are directly reachable from it. In this case, the P (q d |β) terms in Equation 1 can be replaced by terms that also condition on the knowledge of the set of states C(s) that are directly reachable from qs. For states that are not reachable from qs, P (q d |β, C(s)) = 0. For states that are reachable from qs, under the previous assumption of uniform probability, P (q d |β, C(s)) = 1/|C(s)|.</p><p>Notice that, in principle, any machine learning method could be used to predict the destination state as a function of properties of the source state. The approach proposed here implicitly encodes the learning bias that the abstraction hierarchies over the relation arguments are useful for generalization (i.e., two states whose values are closer in their respective hierarchies are more likely to transition to the same state than states that are far apart).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Complexity</head><p>Inference in RMMs is slower than in PMMs, but is still quite fast. The computation of a single a sd requires combining up to |A(qs) × A(q d )| estimates, but each of these estimates is obtained from the learned model by a simple lookup. Thus the overall computation is still fast, unless the abstraction hierarchy is very large. In this case, an approach such as RMM-PET can greatly reduce the number of abstractions that need to be considered, by identifying the few estimates that are most informative. Further, we can trade off time for memory by pre-computing and storing the a sd 's, in which case inference becomes as fast as in PMMs.</p><p>Learning in RMMs conceptually involves estimating a transition probability for every pair of abstractions, rather than for every pair of states. However, only the transitions between abstractions that actually occur in the data need be considered (in the same way that, in PMMs, only the page transitions that actually occur need be considered). The transition probabilities for non-leaf abstractions can be computed without looking at the data, by aggregating counts for the lower-level abstractions. As a result, the dominant term in the learning time of an RMM is often the computation of the leaf-level probabilities, which is the same as for PMMs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ADAPTIVE WEB NAVIGATION</head><p>Our work on RMMs is motivated by the desire to automatically personalize web sites based on a person's browsing pattern. Although individuals vary in their web navigation patterns, most web sites have a static organization that is designed for general use. In previous work we proposed the PROTEUS architecture for automatically personalizing web sites for individual visitors <ref type="bibr" target="#b3">[3]</ref>. Adaptation in PROTEUS follows a two-step approach. First, PROTEUS mines web server logs to build models of users. Second, as users request pages at the site, PROTEUS considers all the ways in which to adapt the site (e.g., add a link between two pages, rearrange list items on a page, elide content from a long page, etc.) and selects the adaptations that yield the greatest expected utility per the model mined in step one. PROTEUS employs heuristics and a strong bias to ensure that this search is efficient. In a study of a dozen users with a wireless web browser, PROTEUS reduced the time and navigational effort required for users to find information on smallscreen, low-bandwidth devices.</p><p>In the PROTEUS framework, we found adding shortcut links to be particularly useful. A shortcut link connects two previously "distant" pages in the site, where distance is measured as the number of intermediate pages. For example, if a site contains the pages A, B, and C and the links A→B and B→C, then the shortcut A→C would shorten the path from A to C by one link. Concentrating on the shortcut creation problem, we developed the MINPATH algorithm <ref type="bibr" target="#b2">[2]</ref>, which composes many page transition predictions to predict the expected savings every possible shortcut in the site would offer. We experimented with mixtures of propositional Markov models, including first-and second-order models, and found that a mixture of first-order Markov models fared the best, saving visitors up to 40% of their navigation effort.</p><p>MINPATH's performance is limited by the quality of the underlying page navigation model, and, as we have mentioned earlier, first-order PMMs have a number of weaknesses. The most significant is that PMMs cannot offer informed guidance at pages for which there is no training data. If a web page did not exist during the training period (or simply was not visited), the Markov model can do no better than predict a uniform distribution over the outadjacent pages. This phenomenon is very common on large and/or dynamically-generated web sites: on a portal site the news stories change every day; customers at an e-commerce site typically view product descriptions they have not previously read; and after a semester is over, students begin viewing the course pages for a different set of courses. Instead, ideally, we would like the model to take advantage of the relational structure of the space of pages. For example, visitors prefer news stories of a particular genre and products of similar types. If a student views numerous homework pages for a particular course in a given department, then the visitor is likely to continue preferring homework pages, pages for that course, and courses in that major.</p><p>As we demonstrate in the next section, RMMs effectively address the issue of sparse training data in large sites by making use of a relational model of the web site identifying semantic correspondence between pages, both previously visited and unseen. The relational model is frequently already available, in the form of a database data model or other conceptual model that the human web site designer developed and maintains with the site content. In our evaluation we measure the predictive accuracy of RMMs for page navigation, and incorporate RMMs into our MINPATH implementation and PROTEUS system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EMPIRICAL EVALUATION</head><p>In this section, we address the following questions: (1) Is our hypothesis correct that RMMs outperform propositional Markov models when data is sparse? (2) In data-rich environments when PMMs perform well, are RMMs at a disadvantage? (3) Are RMMs competitive in terms of CPU time required for learning? (4) Which of the RMM variants (uniform, rank, or PET) performs best?</p><p>To answer these questions we selected three sets of log data taken from two real web sites, www.gazelle.com (the e-commerce site introduced in the KDDCup 2000 competition <ref type="bibr" target="#b16">[16]</ref>) and the instructional pages from our home institution www.cs.washington.edu/education/courses/. At both sites, we explicitly modeled when users ended a browsing trail, by creating a distinguished STOP page that was linked from every page in the site and which users implicitly visited at the end of a trail. We represented each page in the site as a state and the input to the models was the links users followed during the training period. The experimental task is to predict the probability a user will follow each link given the user's current page. The KDD-Cup data has the advantage that it represents the large class of sites dynamically-generated from database queries and page templates, but was not ideal because some domain modeling questions could not be answered without the "live" site. Our home institution's site was useful because it is operational and we have substantial amounts of data available for mining.</p><p>For both sites we collected clickstream data and the list of links on each page. Determining hyperlink connectivity was easy at our home institution-we crawled the site and parsed linkage data to create the model. However, although we had log data for www. gazelle.com, the site was no longer operational. Hence, we were forced to generate an approximate linkage model composed of the subset of links that were actually followed in the log data. While this solution is suboptimal (even if a link was never followed, its presence may have influenced the behavior of visitors), the alternative (attempting to randomly add spurious but untraveled links to each page) seemed questionable.</p><p>Generating good relational structure at each site was straightforward. At our home institution, for example, our model in-cludes CourseOccurrence(Course, Term) pages for the main page of each term's offering of a course, Assignment(Course, Term, Assignment) pages for each problem set assigned, etc. Content on www.gazelle.com, like at many large web sites, was generated dynamically by combining queries over a database with HTML templates to produce pages. The challenge, however, was in inferring the schemata of pages-the set of allowable templates and the parameters that they each required-without having access to the live web site. Fortunately, the KDDCup log data encodes a comprehensive set of parameters as part of each request, and most of these parameters have an obvious intuitive meaning (page template, product identifiers, etc.). We removed records for all but the nine most frequently accessed page templates and for templates whose arguments are not present in the clickstream data (e.g., search results pages); this set of nine templates was our initial candidate for the relation set R. The next challenge was determining the arguments to each relation. By analyzing the frequency of non-null parameter values, it became clear that some of the templates took optional arguments. Because our framework requires relations to have constant arity, we "split" such a relation into two or more relations, one for each non-null argument pattern. This process yielded 16 distinct relations in R. Finally, for the hierarchies over the parameter values, we used the trees defined for those parameters in the KDDCup data. Appendix A provides the detailed relational models for both sites.</p><p>In the following experiments, we compared PMMs with three RMM variants: RMM-uniform, RMM-rank, and RMM-PET. We employed Laplace smoothing <ref type="bibr" target="#b14">[14]</ref> in the PMM and in RMM-PET. For RMM-rank we set the k parameter at 10.0, a value which had produced good results on the training data. We compute shrinkage weights in RMM-PET using EM. For each data set, we trained the models with varying numbers of examples, and we recorded the average negative log-likelihood of a test example. A negative loglikelihood score is the number of bits needed to encode an average test instance given the model; a perfect model would have a score of zero.</p><p>Our first experiment, which uses KDDCup data from www. gazelle.com, shows the substantial advantage that RMMs can have over PMMs (see Figure <ref type="figure" target="#fig_3">7</ref>). With only 10 training examples, the RMMs perform significantly better than PMMs (the difference is significant at the 95% confidence level). As the amount of training data increases, all models improve their prediction, but RMMuniform and RMM-PET consistently outperform the PMM. However, as the models are given more training data, their relative differences diminish. This result is to be expected: with suitable volumes of training data, RMM-rank and RMM-PET both converge to a PMM. RMM-uniform's consistent good performance suggests that all levels of abstraction in this site are predicting state transitions well.</p><p>Our second experiment uses log data from November 2001 at our home institution. When trained with successively more data, RMM-rank and RMM-PET showed a slight improvement over PMMs, but only when trained on up to 10,000 examples. Because the UW CSE education pages form a small site, it is a very data-rich environment, and we were pleased that RMMs were not trumped by PMMs.</p><p>Our third experiment also uses data from our home institution; it represents traffic to the pages of a single course, CSE 142 "Computer Programming I," over a full year. Here, we trained the models on data from the instances of CSE 142 in Winter, Spring, Summer, and Fall 2001, and tested the models on data from the instance in Winter 2002. Note that the instructors (and course webmasters) were different in the various instances; indeed, none of the test pages even existed at the time that the training data was collected. As a result, the PMM can do nothing better than predict a uniform distribution over the links on each page. In contrast, an RMM takes advantage of the related common relational structure of the training and test data to significantly improve prediction (see Figure <ref type="figure" target="#fig_4">8</ref>).</p><p>The computation time required for the RMM variants is not substantially more than that for PMMs. The RMM variants require some preprocessing of the data, to build the abstraction sets, but this work can be done at learning time, independent of the test set. In this third experiment, for example, preprocessing the site (containing 3,749 pages) for RMM-rank and RMM-uniform took four minutes (our RMM code is implemented in C++ and the experiments were run on an 850MHz Pentium III) 2 . Inference in a PMM for a test example requires only a single ratio of counts, while a more complex set of counts must be shrunk together in the RMM variants. However, we found that, on average, RMMrank, RMM-uniform, and the PMM method all required the same amount of time (about 430 milliseconds) per example for inference. The added cost of the RMM is hidden largely because the work for one test instance may be cached and applied to another (e.g., two instances with a common source state). RMM-PET requires a different preprocessing (to learn the PET) which took 76 seconds and completed the prediction runs in 1960 milliseconds.</p><p>Finally, we have combined RMMs with our MINPATH algorithm to evaluate their use for adaptive web navigation. In preliminary testing we compared three models: RMM-uniform, RMM-rank, and a PMM. We found that the RMMs performed significantly better than the PMM, allowing MINPATH to save users more linksoften 50% to 80% more links than with the PMM, particularly when training data was sparse. In future work we will more exhaustively compare the RMM variants and PMMs as used in MIN-PATH.</p><p>In summary, we conclude that RMMs significantly outperform 2 Our implementation calculates the non-leaf abstraction transition probabilities directly from the data, and not from lower-level abstractions as we suggested in Section 2.3. Thus, our computation could be improved substantially.  PMMs when data is sparse and perform comparably when data is rich. Computation time for RMMs is competitive with PMMs, particularly when the training data can be preprocessed. The RMM-PET technique appears to be the best one for computing the mixing coefficients, with RMM-rank also performing favorably.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">RELATED WORK</head><p>There are two families of related work that we discuss in turn: techniques for learning probabilistic models, and algorithms for web adaptation and personalization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Learning Probabilistic Models</head><p>Considerable work has been performed on a variety of different probabilistic models; we illustrate this space in Figure <ref type="figure" target="#fig_5">9</ref>. The lower left corner represents a simple model containing a number of states of varying probability. Moving rightward adds sequence information and leads to a Markov model. Moving upwards adds structure by which we mean the notion of defining the states in terms of variables and representing the joint probability distribution compactly with explicit conditional independence assumptions. Moving back-wards into the page adds relational information -a set of predicates and a domain of variables for each argument.</p><p>Viewed in this context, the connection between RMMs and other first-order probabilistic representations becomes clearer. Friedman et al. <ref type="bibr" target="#b10">[10]</ref> extended the notion of Bayesian network to propose probabilistic relational models (PRMs). Objects in a PRM are divided into a set of classes, and a different probabilistic model is built for each class, specifying how its attributes depend on each other and on attributes of related classes. Dynamic Bayesian networks (DBNs) <ref type="bibr" target="#b6">[6,</ref><ref type="bibr">7,</ref><ref type="bibr" target="#b29">29]</ref> form a probabilistic dependency graph for uncertain temporal reasoning. A DBN has a separate Bayesian network for each time step, in which the values of variables for time t can depend on the values of variables in previous time slices. Thus, DBNs "improve" on RMMs in their use of explicit conditional independences amongst a set of variables, but in contrast to an RMM every state in a DBN is treated the same way -it has the same variables and dependencies. To our knowledge, RMMs are the first probabilistic first-order model of sequential processes to be proposed. However, it is interesting to note that dynamic Bayesian networks can be viewed as a special form of PRM where there is only one class (the state) and the only relation is the sequential order between successive states. PRMs have been extended to allow the class to be chosen from a hierarchy <ref type="bibr" target="#b12">[12]</ref>. RMMs allow hierarchies over the attributes in each class, and combining models at all levels using shrinkage. This approach should be useful in PRMs also. One obvious area for future work is to combine ideas from RMMs, DBNs, and PRMs to define "Dynamic probabilistic relational models" (DPRMs).</p><p>Hidden Markov models have been extended in a number of ways to accommodate richer state and observation information. For example, factorial hidden Markov models <ref type="bibr" target="#b13">[13]</ref> decompose model states into k components, described by k state variables, that depend on each other only via the observation variable. A factorial hidden Markov model can be viewed as a form of RMM with hidden state, in which all states belong to the same k-ary relation, but which has a conditional independence assumption that state variables in subsequent states depend only on the corresponding variables in the previous state. An area of future work is in exploring how these conditional independences can be leveraged by relational Markov models. Other extensions of HMMs have been proposed (e.g., Lafferty et al. <ref type="bibr" target="#b17">[17]</ref>). It should be possible to subsume these within our framework; this is a matter for future research. RMMs are also related to work on abstraction in reinforcement learning (e.g., Dietterich <ref type="bibr" target="#b8">[8]</ref>, Dzeroski et al. <ref type="bibr" target="#b9">[9]</ref>), and may be useful in that field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Adaptive Web Navigation</head><p>Since Perkowitz and Etzioni challenged the research community to build adaptive web sites <ref type="bibr" target="#b24">[24]</ref>, many projects have addressed components of this task. In this section we highlight the subset of work related specifically to adaptive web navigation.</p><p>Our MINPATH system <ref type="bibr" target="#b2">[2]</ref> processes server access logs offline in order to learn a model of web navigation patterns (similar to how WebCANVAS <ref type="bibr" target="#b4">[4]</ref> builds visitor clusters for visualization). At run-time MINPATH combines the probabilistic estimates from this model with distance information to compute expected savings of shortcuts, adding the links it deems most useful. In our earlier work, we evaluated a variety of visitor models, including Naïve Bayes mixture models and mixtures of Markov models, concluding that a mixture of Markov models performed best for the task. In this paper, we argue that RMMs can perform substantially better for this same task.</p><p>Perkowitz and Etzioni <ref type="bibr" target="#b25">[25]</ref> also address the shortcut problem, but they use a simpler prediction method: for each pair of pages P, Q on the site, their system records how often Q is viewed by following some chain of links via P . When page P is requested after these statistics have been computed, the system adds the top m most-requested Q pages as shortcuts. This method doesn't make the independence assumptions of a first-order Markov model, but probably requires more user data in order to make predictions. Like the traditional Markov approaches, Perkowitz and Etzioni's system can't predict good shortcuts for pages which weren't visited in the training data.</p><p>In addition to their work on the shortcut problem, Perkowitz and Etzioni developed IndexFinder <ref type="bibr" target="#b25">[25]</ref>, which uses page meta-data to cluster web pages into conceptually similar groups, and subsequently builds coherent index or hub pages of links. The meta-data is similar in spirit to the values used to instantiate RMM relations, although IndexFinder does not segregate pages into relations, or predict navigation.</p><p>Fu et al.'s SurfLen <ref type="bibr" target="#b11">[11]</ref> mines web logs for association rules, suggesting the top m pages that are most likely to co-occur with the visitor's current session; the learning method is a form of "market basket" analysis <ref type="bibr" target="#b1">[1]</ref>.</p><p>Lieberman's Letizia <ref type="bibr" target="#b18">[18]</ref> is a client-side agent that browses the web in tandem with the user. Based on the user's actions (e.g., which links were followed, whether pages were added to a bookmarks file, etc.), Letizia estimates the visitor's interest in as-yetunseen pages. Information retrieval measures of page similarity and guiding queries have been quite successful at predicting navigation patterns. WebWatcher <ref type="bibr" target="#b15">[15]</ref> and adaptive web site agents <ref type="bibr" target="#b23">[23]</ref> use machine learning to predict the next link a user will followa simplified version of the shortcut problem. Sarukkai <ref type="bibr" target="#b28">[28]</ref> uses a Markov model of web usage to suggest the most probable links a visitor may follow, and notes the need to reduce the size of the model by clustering the URLs. Space precludes discussion of all related work on sequence prediction and web usage mining.</p><p>The goal of the WebKB project <ref type="bibr" target="#b5">[5]</ref> is to populate a relational knowledge base given the textual content and hyperlink connectivity of Web pages. This goal is different from that of RMMs -RMMs presume the existence of a relational model and predict transitions using the model. However, it would be interesting to apply the WebKB learning approach to populate a model describing a web site and use RMMs to predict navigation in that model. Although most e-commerce sites are dynamically generated from database queries, many other large sites (e.g., corporate intranets or academic institution web sites) exist only as large collections of static web pages. The WebKB approach could prove fruitful for producing the relational information RMMs need for such static sites.</p><p>Finally, much research has been done in recent years on classifying web pages (e.g., Pazzani et al. <ref type="bibr" target="#b22">[22]</ref>, McCallum, et al. <ref type="bibr" target="#b19">[19]</ref>). Any web page classifier that yields class probabilities can in principle be used in place of RMMs for adaptive web navigation. However, many of these classifiers are based on viewing web pages as bags of words, and are unable to take advantage of the relational structure of the site. Incorporating bag-of-words information into RMMs may be useful and is a direction for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSIONS</head><p>This paper introduces relational Markov models (RMMs), a generalization of Markov models that represents states with relational predicates and leverages this information for better learning and inference. We believe that RMMs are applicable to a wide variety of domains besides Web navigation, such as mobile robotics, speech processing, process control, fault diagnosis, and computational bi-ology. This paper makes the following contributions:</p><p>• We provide a precise definition of relational Markov models and describe how to estimate state transition behavior using shrinkage between abstractions of the states.</p><p>• We explain how RMMs can be used for adaptive web navigation, and present experiments demonstrating substantial advantages over traditional Markov models.</p><p>• We compare several variations of RMMs and found that using PETs to select mixture weights performed the best, followed by our RMM-rank approach.</p><p>Our experiments have shown that relational Markov models are a suitable alternative to traditional Markov models-RMMs infrequently perform worse, and can perform much better. When data about all states is available in quantity, or if the relations between states are not reflected in the distribution of the data, RMMs offer no advantage relative to traditional Markov models, and, in fact, could perform worse than PMMs. However, when data is scarce or non-existent about some states, but abundant for conceptually similar states (based on relational abstractions of the states), relational Markov models significantly outperform traditional Markov models. Intuition suggests that this latter case holds true for the vast majority of web sites, and that RMMs should prove widely useful.</p><p>In future research we plan to both extend relational Markov models and explore additional applications. An immediate area to pursue is in further developing the RMM-PET approach, by building PETs to predict finer partitions among the destination abstractions. An interesting evolution of RMMs is to relational hidden Markov models, where both the states and the observations are described by typed relations and shrinkage is carried out over their respective abstractions. Another direction is incorporating a model cluster identity into the transition probability, such as the identity of a cluster of visitors at a web site, and shrinking between many models learned for different sizes and scope of user cluster (such as a single user, a cluster of similar users, and the set of all users at the site). A third path of research is to apply RMMs to other domains, such as mobile robot localization or speech recognition.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>Figure 1: Propositional Markov model for an e-commerce site. Each box is a PMM state, representing a page in the site. Arrows indicate possible transitions in the PMM, and correspond to hyperlinks in the site.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Figure 4: State abstractions for the relational Markov model.The hierarchy of Figure3defines abstractions over the RMM of Figure2; the abstractions are depicted as rounded-corner boxes, labeled with their relations and arguments, and surrounding their ground states.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: A PET predicting destination relation fromProductPage. Rounded-corner boxes represent tree nodes. The path the page ProductPage(iMac, in stock) follows is highlighted. Each node has an associated distribution over the destination relations; these are shown for the highlighted nodes. Each node along this path selects a set of (α, β) abstraction pairs that are combined according to Equation 1. The α abstraction for a node is derived from the decisions made along the sub-path from the root to that node, and the β abstractions are the abstractions the PET is predicting (the destination relation in this example).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: KDDCup 2000 data (www.gazelle.com). The xaxis shows the number of training instances scaled logarithmically, and the y-axis is the average negative log-likelihood of a test example. Curves are based on 2000 test instances. RMMs outperform PMMs with as few as ten training examples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Winter 2002 data from UW CSE course 142. Pages in the test set (Winter 2002) did not exist during the training period (Winter 2001 -Fall 2001).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Probabilistic models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Figure 3: Abstraction hierarchy of products. Leaves</head><label></label><figDesc></figDesc><table><row><cell>Product</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">AllProducts</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>...</cell><cell cols="3">AllComputers</cell><cell>...</cell><cell></cell><cell></cell></row><row><cell>...</cell><cell cols="2">AllPDAs</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">AllDesktops</cell><cell>...</cell></row><row><cell>...</cell><cell></cell><cell></cell><cell></cell><cell>...</cell><cell></cell><cell>...</cell><cell></cell><cell></cell><cell></cell><cell>...</cell></row><row><cell>PalmPDAs</cell><cell></cell><cell cols="2">CompaqPDAs</cell><cell></cell><cell></cell><cell cols="2">DellDesktops</cell><cell></cell><cell cols="2">AppleDesktops</cell></row><row><cell cols="2">... m505 ...</cell><cell>...</cell><cell>iPaq3765</cell><cell>...</cell><cell>...</cell><cell cols="2">dimension4100</cell><cell>...</cell><cell>...</cell><cell>iMac</cell><cell>...</cell></row><row><cell></cell><cell></cell><cell cols="2">StockLevel</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">AllStockLevels</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">in_stock</cell><cell cols="2">backorder</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>in the tree</cell></row><row><cell cols="11">represent ground values, while internal nodes denote categories of</cell></row><row><cell cols="3">related values.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors thank Cathy Anderson, AnHai Doan, Oren Etzioni, Geoff Hulten, Zack Ives, Cody Kwok for their insightful comments on this work, and to Blue Martini for providing the gazelle.com data. This work was funded in part by NSF grants #IIS-9872128 and #IIS-9874759, an NSF CAREER and IBM Faculty awards to the second author, and a gift from the Ford Motor Company.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A. RELATIONAL SCHEMATA FOR EVALUATION SITES</head><p>A.1 www.gazelle.com</p><p>The relations for www.gazelle.com take up to three parameters: Assortment, Product, and Collection. The domain hierarchies for these parameters are described explicitly in the KDDCup 2000 data.</p><p>• Home()</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 www.cs.washington.edu</head><p>The structure for www.cs.washington.edu/education/courses/ was derived by reverse-engineering the structure of the existing site. The Term and Course domain hierarchies each contain a root node, a level of interior nodes (grouping courses by undergraduate, graduate, etc. and grouping terms by the academic year), and the ground leaf values. URL variables are URLs relative to the particular CourseSite(Course) or CourseOccurence(Course, Term) to which they apply. The domain hierarchies for URL and most other variables are flat, comprising only of the root node and many leaf values. • Section(Course, Term, Section)</p><p>• SectionOther(Course, Term, Section, URL)</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Mining Association Rules between Sets of Items in Large Databases</title>
		<author>
			<persName><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Imielinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD Conference on Management of Data</title>
		<meeting>ACM SIGMOD Conference on Management of Data</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="207" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Adaptive web navigation for wireless devices</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Weld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventeenth International Joint Conference on Artificial Intelligence</title>
		<meeting>the Seventeenth International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Personalizing web sites for mobile users</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Weld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Tenth International World Wide Web Conference</title>
		<meeting>the Tenth International World Wide Web Conference</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualization of navigation patterns on a web site using model based clustering</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">V</forename><surname>Cadez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Heckerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Smyth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>White</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the Sixth International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Learning to construct knowledge bases from the World Wide Web</title>
		<author>
			<persName><forename type="first">M</forename><surname>Craven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dipasquo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Freitag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nigam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Slattery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Journal</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="69" to="113" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Probabilistic Temporal Reasoning</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kanazawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh National Conference on Artificial Intelligence</title>
		<meeting>the Seventh National Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A model for reasoning about persistence and causation</title>
		<author>
			<persName><forename type="first">T</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kanazawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Intelligence</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="142" to="150" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">State abstraction in MAXQ hierarchical reinforcement learning</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">G</forename><surname>Dietterich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<editor>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Solla</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><forename type="middle">K</forename><surname>Leen</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K.-R</forename><surname>Muller</surname></persName>
		</editor>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="994" to="1000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Relational reinforcement learning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dzeroski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>De Raedt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth International Conference on Machine Learning</title>
		<meeting>the Fifteenth International Conference on Machine Learning<address><addrLine>Madison, WI</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="136" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Learning probabilistic relational models</title>
		<author>
			<persName><forename type="first">N</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Getoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pfeffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixteenth International Joint Conference on Artificial Intelligence</title>
		<meeting>the Sixteenth International Joint Conference on Artificial Intelligence<address><addrLine>Stockholm, Sweden</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="1300" to="1307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mining navigation history for recommendation</title>
		<author>
			<persName><forename type="first">X</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Budzik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>Hammond</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2000 Conference on Intelligent User Interfaces</title>
		<meeting>the 2000 Conference on Intelligent User Interfaces</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">From instances to classes in probabilistic relational models</title>
		<author>
			<persName><forename type="first">L</forename><surname>Getoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ICML-2000 Workshop on Attribute-Value and Relational Learning</title>
		<meeting>the ICML-2000 Workshop on Attribute-Value and Relational Learning<address><addrLine>Stanford, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Factorial hidden Markov models</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ghahramani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="245" to="273" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">The Estimation of Probabilities: An Essay on Modern Bayesian Methods</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">J</forename><surname>Good</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1965">1965</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">WebWatcher: A tour guide for the World Wide Web</title>
		<author>
			<persName><forename type="first">T</forename><surname>Joachims</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Freitag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence</title>
		<meeting>the Fifteenth International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">KDD-Cup 2000 organizers&apos; report: Peeling the onion</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kohavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Brodley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Frasca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Mason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zheng</surname></persName>
		</author>
		<ptr target="http://www.ecn.purdue.edu/KDDCUP" />
	</analytic>
	<monogr>
		<title level="m">SIGKDD Explorations</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="86" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Conditional random fields: Probabilistic models for segmenting and labeling data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lafferty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighteenth International Conference on Machine Learning</title>
		<meeting>the Eighteenth International Conference on Machine Learning<address><addrLine>Williamstown, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="282" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Letizia: An agent that assists web browsing</title>
		<author>
			<persName><forename type="first">H</forename><surname>Lieberman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence</title>
		<meeting>the Fourteenth International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Improving text classification by shrinkage in a hierarchy of classes</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rosenfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mitchel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth International Conference on Machine Learning</title>
		<meeting>the Fifteenth International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Stochastic logic programs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Muggleton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Inductive Logic Programming</title>
		<editor>
			<persName><forename type="first">L</forename><surname>De Raedt</surname></persName>
		</editor>
		<meeting><address><addrLine>Amsterdam, The Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>IOS Press</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="254" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Answering queries from context-sensitive probabilistic knowledge bases</title>
		<author>
			<persName><forename type="first">L</forename><surname>Ngo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Haddawy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">171</biblScope>
			<biblScope unit="page" from="147" to="177" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Syskill &amp; Webert: Identifying interesting Web sites</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pazzani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Muramatsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Billsus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirteenth National Conference on Artificial Intelligence</title>
		<meeting>the Thirteenth National Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Adaptive web site agents</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Pazzani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Billsus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third International Conference on Autonomous Agents</title>
		<meeting>the Third International Conference on Autonomous Agents</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Adaptive web sites: an AI challenge</title>
		<author>
			<persName><forename type="first">M</forename><surname>Perkowitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Etzioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence</title>
		<meeting>the Fifteenth International Joint Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Towards adaptive web sites: Conceptual framework and case study</title>
		<author>
			<persName><forename type="first">M</forename><surname>Perkowitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Etzioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence Journal</title>
		<imprint>
			<biblScope unit="volume">118</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Tree induction for probability-based ranking</title>
		<author>
			<persName><forename type="first">F</forename><surname>Provost</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint/>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A tutorial on hidden Markov models and selected applications in speech recognition</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">R</forename><surname>Rabiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<meeting>the IEEE</meeting>
		<imprint>
			<date type="published" when="1989">1989</date>
			<biblScope unit="volume">77</biblScope>
			<biblScope unit="page" from="257" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Link prediction and path analysis using Markov chains</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Sarukkai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth International World Wide Web Conference</title>
		<meeting>the Ninth International World Wide Web Conference</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Clustering sequences with hidden Markov models</title>
		<author>
			<persName><forename type="first">P</forename><surname>Smyth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing</title>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Mozer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Petsche</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Probabilistic independence networks for hidden Markov probability models</title>
		<author>
			<persName><forename type="first">P</forename><surname>Smyth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Heckerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="227" to="269" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
