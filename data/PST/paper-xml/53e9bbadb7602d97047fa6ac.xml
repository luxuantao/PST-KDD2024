<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automated analysis of feature models 20 years later: A literature review $</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">David</forename><surname>Benavides</surname></persName>
							<email>benavides@us.esd.benavides</email>
							<affiliation key="aff0">
								<orgName type="department">Dpto. de Lenguajes y Sistemas Informa ´ticos</orgName>
								<orgName type="institution" key="instit1">University of Seville</orgName>
								<orgName type="institution" key="instit2">Av. Reina Mercedes s/n</orgName>
								<address>
									<postCode>41012</postCode>
									<settlement>Seville</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sergio</forename><surname>Segura</surname></persName>
							<email>sergiosegura@us.es</email>
							<affiliation key="aff0">
								<orgName type="department">Dpto. de Lenguajes y Sistemas Informa ´ticos</orgName>
								<orgName type="institution" key="instit1">University of Seville</orgName>
								<orgName type="institution" key="instit2">Av. Reina Mercedes s/n</orgName>
								<address>
									<postCode>41012</postCode>
									<settlement>Seville</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Antonio</forename><surname>Ruiz-Corte</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dpto. de Lenguajes y Sistemas Informa ´ticos</orgName>
								<orgName type="institution" key="instit1">University of Seville</orgName>
								<orgName type="institution" key="instit2">Av. Reina Mercedes s/n</orgName>
								<address>
									<postCode>41012</postCode>
									<settlement>Seville</settlement>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Automated analysis of feature models 20 years later: A literature review $</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">CC05B703273DB527916C00E399F2D43C</idno>
					<idno type="DOI">10.1016/j.is.2010.01.001</idno>
					<note type="submission">MaxSpeed Domain: Real Value: 3.6 Name: Memory Domain: Real Value: 725 Name: Memory Domain: Real Value: 425 Name: Cost Domain: Real Value: 50 Name: MaxSpeed Domain: Real Value: 2.1 Name: Cost Domain: Real Value: 35.50 Name: MaxSpeed Domain: Real Value: 12 Name: Memory Domain: Real Value: 179</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T08:58+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Feature models Automated analyses Software product lines Literature review P1 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Basic} P2 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Basic</term>
					<term>Media</term>
					<term>MP3} P3 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Colour} P4 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Colour</term>
					<term>GPS} P5 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Colour</term>
					<term>Media</term>
					<term>MP3} P6 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>Colour</term>
					<term>Media</term>
					<term>MP3</term>
					<term>GPS} P7 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution} P8 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>MP3} P9 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>MP3</term>
					<term>Camera} P10 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>Camera} P11 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>GPS} P12 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>MP3</term>
					<term>GPS} P13 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>Camera</term>
					<term>GPS} P14 ={MobilePhone</term>
					<term>Calls</term>
					<term>Screen</term>
					<term>High resolution</term>
					<term>Media</term>
					<term>Camera</term>
					<term>MP3</term>
					<term>GPS}</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Software product line engineering is about producing a set of related products that share more commonalities than variabilities. Feature models are widely used for variability and commonality management in software product lines. Feature models are information models where a set of products are represented as a set of features in a single model. The automated analysis of feature models deals with the computer-aided extraction of information from feature models. The literature on this topic has contributed with a set of operations, techniques, tools and empirical results which have not been surveyed until now. This paper provides a comprehensive literature review on the automated analysis of feature models 20 years after of their invention. This paper contributes by bringing together previously disparate streams of work to help shed light on this thriving area. We also present a conceptual framework to understand the different proposals as well as categorise future contributions. We finally discuss the different studies and propose some challenges to be faced in the future.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Mass production is defined as the production of a large amount of standardized products using standardized processes that produce a large volume of the same product in a reduced time to market. Generally, the customers' requirements are the same and no customization is performed (think of Japanese watches of the nineties). After the industrial revolution, large companies started to organise-and are still organising-their production in a mass production environment.</p><p>However, in this highly competitive and segmented market, mass production is not enough anymore and mass customization is due to become a must for market success. According to Tseng and Jiao <ref type="bibr" target="#b79">[83]</ref>, mass customization is about ''producing goods and services to meet individual customer's needs with near mass production efficiency''. There are two key parts in this definition. Firstly, mass customization aims to meet as many individual customer's needs as possible (imagine current mobile phones). Secondly, this has to be done while maintaining the highest mass production efficiency as possible. To achieve this efficiency, practitioners propose building products from existing assets that share more commonalities than singularities.</p><p>The information systems market is a peculiar branch of industry compared to more traditional branches. Making the parallelism with the history of traditional industries, the industrialization of information systems started with artisanal methods, evolved to mass production and is now pursuing mass customization to succeed in the market. In the software engineering literature, the mass customization of software products is known as software product lines <ref type="bibr" target="#b22">[24]</ref> or software product families <ref type="bibr" target="#b59">[62]</ref>. In order to achieve customer's personalization, software product line engineering promotes the production of a family of software products from common features instead of producing them one by one from scratch. This is the key change: software product line engineering is about producing families of similar systems rather than the production of individual systems.</p><p>Software product lines have found a broad adoption in several branches of software production such as embedded systems for mobile devices, car embedded software and avionics <ref type="bibr" target="#b81">[85]</ref>. However, adopting other types of software and systems applications such as desktop, web or data-intensive applications is a current challenge.</p><p>An organisation decides to set up a software product line and faces the following issues, How is a particular product specified?, and How is the software product line itself specified? When this question was first posed, there was ample evidence for a solution: in other industries product lines are specified in terms of features. Products in a software product line are differentiated by their features, where a feature is an increment in program functionality <ref type="bibr" target="#b5">[7]</ref>. Individual products are specified using features, software product lines are specified using feature models.</p><p>Feature model languages are a common family of visual languages to represent software product lines <ref type="bibr" target="#b65">[69]</ref>. The first formulation of a feature model language is due by <ref type="bibr">Kang et al. in 1990 [43]</ref>. A feature model captures software product line information about common and variant features of the software product line at different levels of abstraction. A feature model is represented as a hierarchically arranged set of features with different relationships among those features. It models all possible products of a software product line in a given context. Unlike traditional information models, feature models not only represent a single product but also a family of them in the same model.</p><p>The automated analysis of feature models is about extracting information from feature models using automated mechanisms <ref type="bibr" target="#b5">[7]</ref>. Analysing feature models is an error-prone and tedious task, and it is infeasible to do manually with large-scale feature models. It is an active area of research and is gaining importance in both practitioners and researchers in the software product line community <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b7">9]</ref>. Since the introduction of feature models, the literature has contributed with a number of operations of analysis, tools, paradigms and algorithms to support the analysis process.</p><p>In this article, we present a structured literature review <ref type="bibr" target="#b43">[46,</ref><ref type="bibr" target="#b90">94]</ref> of the existing proposals for the automated analysis of feature models. The main contribution of this article is to bring together previously scattered studies to set the basis for future research as well as introduce new researchers and practitioners in this thriving area. We present a conceptual framework to understand the different proposals and classify new contributions in the future. Fifty three primary studies were analysed from where we report 30 operations of analysis and four different groups of proposals to automate those operations. As a result of our literature review, we also report some challenges that remain open to research.</p><p>The main target audience of this literature review are researchers in the field of automated analysis, tool developers or practitioners who are interested in analysis of feature models as well as researchers and professionals of information systems interested in software product lines, their models and analyses.</p><p>The remainder of the paper is structured as follows: Section 2 presents feature models in a nutshell. Section 3 presents the method used in the literature review. Section 4 describes the conceptual framework that we use to classify primary studies and define recurring concepts in the paper. Section 5 presents the different analysis operations. Section 6 presents the automated techniques used for analysis. Section 7 discusses the results of performance analysis of feature models. Section 8 discusses the results obtained and describes some challenges to be faced in the future. Finally, Section 9 presents some conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Feature models</head><p>A feature model represents the information of all possible products of a software product line in terms of features and relationships among them. Feature models are a special type of information model widely used in software product line engineering. A feature model is represented as a hierarchically arranged set of features composed by: 1. Relationships between a parent (or compound) feature and its child features (or subfeatures). 2. Cross-tree (or cross-hierarchy) constraints that are typically inclusion or exclusion statements in the form: if feature F is included, then features A and B must also be included (or excluded).</p><p>Fig. <ref type="figure">1</ref> depicts a simplified feature model inspired by the mobile phone industry. The model illustrates how features are used to specify and build software for mobile phones. The software loaded in the phone is determined by the features that it supports. According to the model, all phones must include support for calls, and displaying information in either a basic, colour or high resolution screen. Furthermore, the software for mobile phones may optionally include support for GPS and multimedia devices such as camera, MP3 player or both of them.</p><p>Feature models are used in different scenarios of software production ranging from model driven development <ref type="bibr" target="#b77">[81]</ref>, feature oriented programming <ref type="bibr" target="#b4">[6]</ref>, software factories <ref type="bibr" target="#b37">[40]</ref> or generative programming <ref type="bibr" target="#b25">[27]</ref>, all of them around software product line development. Although feature models are studied in software product line engineering, these information models can be used in different contexts ranging from requirements gathering <ref type="bibr" target="#b21">[23]</ref> to data model structures, hence the potential importance of feature models in the information systems domain.</p><p>The term feature model was coined by Kang et al. in the FODA report back in 1990 <ref type="bibr" target="#b40">[43]</ref> and has been one of the main topics of research in software product lines since then. There are different feature model languages. We refer the reader to <ref type="bibr" target="#b65">[69]</ref> for a detailed survey on the different feature model languages. Below, we review the most well known notations for those languages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Basic feature models</head><p>We group as basic feature models those allowing the following relationships among features:</p><p>Mandatory. A child feature has a mandatory relationships with its parent when the child is included in all products in which its parent feature appears. For instance, every mobile phone system in our example must provide support for calls.</p><p>Optional. A child feature has an optional relationship with its parent when the child can be optionally included in all products in which its parent feature appears. In the example, software for mobile phones may optionally include support for GPS.</p><p>Alternative. A set of child features have an alternative relationship with their parent when only one feature of the children can be selected when its parent feature is part of the product. In the example, mobile phones may include support for a basic, colour or high resolution screen but only one of them.</p><p>Or. A set of child features have an or-relationship with their parent when one or more of them can be included in the products in which its parent feature appears. In Fig. <ref type="figure">1</ref>, whenever Media is selected, Camera, MP3 or both can be selected.</p><p>Notice that a child feature can only appear in a product if its parent feature does. The root feature is a part of all the products within the software product line. In addition to the parental relationships between features, a feature model can also contain cross-tree constraints between features. These are typically in the form:</p><p>Requires. If a feature A requires a feature B, the inclusion of A in a product implies the inclusion of B in such product. Mobile phones including a camera must include support for a high resolution screen.</p><p>Excludes. If a feature A excludes a feature B, both features cannot be part of the same product. GPS and basic screen are incompatible features.</p><p>More complex cross-tree relationships have been proposed later in the literature <ref type="bibr" target="#b3">[5]</ref> allowing constraints in the form of generic propositional formulas, e.g. ''A and B implies not C''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Cardinality-based feature models</head><p>Some authors propose extending FODA feature models with UML-like multiplicities (so-called cardinalities) <ref type="bibr" target="#b26">[28,</ref><ref type="bibr" target="#b61">65]</ref>. Their main motivation was driven by practical applications <ref type="bibr" target="#b24">[26]</ref> and ''conceptual completeness''. The new relationships introduced in this notation are defined as follows:</p><p>Feature cardinality. A feature cardinality is a sequence of intervals denoted [n..m] with n as lower bound and m as upper bound. These intervals determine the number of instances of the feature that can be part of a product. This relationship may be used as a generalization of the original mandatory ( <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b0">1]</ref>) and optional ([0,1]) relationships defined in FODA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Group cardinality.</head><p>A group cardinality is an interval denoted /n: :mS, with n as lower bound and m as upper bound limiting the number of child features that can be part of a product when its parent feature is selected. Thus, an alternative relationship is equivalent to a /1: :1S group cardinality and an or-relationship is equivalent to /1: :NS, being N the number of features in the relationship.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Extended feature models</head><p>Sometimes it is necessary to extend feature models to include more information about features. This information is added in terms of so-called feature attributes. This type of models where additional information is included are called extended, advanced or attributed feature models. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>High resolution</head><p>Fig. <ref type="figure">1</ref>. A sample feature model.</p><p>FODA <ref type="bibr" target="#b40">[43]</ref>, the seminal report on feature models, already contemplated the inclusion of some additional information in feature models. For instance, relationships between features and feature attributes were introduced. Later, Kang et al. <ref type="bibr" target="#b41">[44]</ref> make an explicit reference to what they call ''non-functional'' features related to feature attributes. In addition, other groups of authors have also proposed the inclusion of attributes in feature models <ref type="bibr" target="#b3">[5,</ref><ref type="bibr" target="#b5">7,</ref><ref type="bibr" target="#b9">11,</ref><ref type="bibr" target="#b10">12,</ref><ref type="bibr" target="#b27">29,</ref><ref type="bibr" target="#b28">30,</ref><ref type="bibr" target="#b69">73,</ref><ref type="bibr" target="#b92">96]</ref>. There is no consensus on a notation to define attributes. However, most proposals agree that an attribute should consist at least of a name, a domain and a value. Fig. <ref type="figure" target="#fig_1">2</ref> depicts a sample feature model including attributes using the notation proposed by Benavides et al. in <ref type="bibr" target="#b9">[11]</ref>. As illustrated, attributes can be used to specify extra-functional information such as cost, speed or RAM memory required to support the feature.</p><p>Extended feature models can also include complex constraints among attributes and features like: ''If attribute A of feature F is lower than a value X,then feature T cannot be part of the product''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Review method</head><p>We have carried out a literature review in order to examine studies proposing automated analysis of feature models. To perform this review we followed a systematic and structured method inspired by the guidelines of Kitchenham <ref type="bibr" target="#b43">[46]</ref> and Webster et al. <ref type="bibr" target="#b90">[94]</ref>. Below, we detail the main data regarding the review process and its structure. For further details on the method followed we refer the reader to <ref type="bibr" target="#b11">[13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Research questions</head><p>The aim of this review is to answer the following research questions: RQ 1: What operations of analysis on feature models have been proposed? This question motivates the following sub-questions:</p><p>3 What operations have been formally described? RQ 2: What kind of automated support has been proposed and how is it performed? This question motivates the following sub-questions:</p><p>3 Which techniques have been proposed to automate the analysis?</p><p>3 What is the feature modelling notation supported by each approach?</p><p>3 Which analysis operations have been automated? 3 Which proposals present a performance evaluation of their results?</p><p>After reviewing all this information we also want to answer a more general question: RQ 3: What are the challenges to be faced in the future?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Source material</head><p>As recommended by Webster et al. <ref type="bibr" target="#b90">[94]</ref>, we used both manual and automated methods to make a selection of candidate papers in leading journals and conferences and other related events. We reviewed 72 papers, 19 were discarded resulting in a total of 53 papers that were in the scope of this review. These 53 papers are referred as primary studies <ref type="bibr" target="#b43">[46]</ref>. Fig. <ref type="figure" target="#fig_2">3</ref> classifies primary studies according to the year and type of publication. Of the 53 papers included in the review, 10 were published in journals, 25 in conferences, 16 in workshops, 1 in the formal post-proceeding of a summer school and 1 in a technical report. The graph indicates that there was an important gap between 1990 and 2002 and since then the tendency seems to be ascendant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Inclusion and exclusion criteria</head><p>Articles on the following topics, published between January 1st 1990 and December 31st 2009, were included: (i) papers proposing any analysis operation on feature models in which the original model is not modified, (ii) papers proposing the automation of any analysis on feature models, and (iii) performance studies of analysis operations.</p><p>Works of the same authors but with very similar content were intentionally classified and evaluated as separate primary studies for a more rigorous analysis. Later, in the presentation of results, we grouped those works with no major differences. Some related works were discarded to keep the size and complexity of the review at a manageable level, namely: (i) papers proposing operations where the input feature model is modified by returning a new feature model, i.e. only operations proposing information extraction where considered, (ii) papers presenting any application of the analysis of feature models rather than proposing new analyses, and (iii) papers dealing with the analysis of other kinds of variability models like OVM <ref type="bibr" target="#b59">[62]</ref>, decision models <ref type="bibr" target="#b63">[67]</ref> and further extensions of feature models like probabilistic feature models <ref type="bibr" target="#b29">[31]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Conceptual framework</head><p>In this section, we propose a conceptual framework that attempts to provide a high-level vision of the analysis process and clarify the meaning of various usually ambiguous terms found in the literature. This is the result of the common concepts and practices identified in the primary studies of our review.</p><p>As a result of the literature review we found that the automated analysis of feature models can be defined as the computer-aided extraction of information from feature models. This extraction is mainly carried out in a two-step process depicted in Fig. <ref type="figure" target="#fig_4">4</ref>. Firstly, the input parameters (e.g. feature model) are translated into a specific representation or paradigm such as propositional logic, constraint programming, description logic or ad hoc data structures. Then, off-the-shelf solvers or specific algorithms are used to automatically analyse the representation of the input parameters and provide the result as an output.</p><p>The analysis of feature models is performed in terms of analysis operations. An operation takes a set of parameters as input and returns a result as output. In addition to feature models, typical input and output parameters are:</p><p>Configuration. Given a feature model with a set of features F, a configuration is a 2-tuple of the form (S,R) such that S,RD F being S the set of features to be selected and R the set of features to be removed such that S \ R ¼ |.</p><formula xml:id="formula_0">Full configuration. If S [ R ¼ F the configuration is called full configuration. Partial configuration. If S [ R &amp; F the configuration is called partial configuration</formula><p>As an example, consider the model in Fig. <ref type="figure">1</ref> and the full (FC) and partial (PC) configurations described below:</p><p>FC=({MobilePhone,Calls,Screen,Colour}, {GPS,Basic,High resolution,Media,Camera,MP3}) PC=({MobilePhone,Calls,Camera}, {GPS}) Product: A product is equivalent to a full configuration where only selected features are specified and omitted features are implicitly removed. For instance, the following product is equivalent to the full configuration described above:</p><p>P={MobilePhone,Calls,Screen,Colour}</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Analysis operations on feature models</head><p>In this section, we answer RQ 1: What operations of analysis on feature models have been proposed? For each operation, its definition, an example and possible practical applications are presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Void feature model</head><p>This operation takes a feature model as input and returns a value informing whether such feature model is void or not. A feature model is void if it represents no products. The reasons that may make a feature model void are related with a wrong usage of cross-tree constraints, i.e. feature models without cross-tree constraints cannot be void.</p><p>As an example, Fig. <ref type="figure" target="#fig_3">5</ref> depicts a void feature model. Constraint C-1 makes the selection of the mandatory features B and C not possible, adding a contradiction to the model because both features are mandatory.</p><p>The automation of this operation is especially helpful when debugging large scale feature models in which the manual detection of errors is recognized to be an error-prone and time-consuming task <ref type="bibr" target="#b3">[5,</ref><ref type="bibr" target="#b40">43,</ref><ref type="bibr" target="#b72">76]</ref>. This operation is also referred to by some authors as ''model validation'', ''model consistency checking'', ''model satisfiability checking'', ''model solvability checking'' and ''model constraints checking''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Valid product</head><p>This operation takes a feature model and a product (i.e. set of features) as input and returns a value that determines whether the product belongs to the set of products represented by the feature model or not. For instance, consider the products P 1 and P 2, described below, and the feature model of Fig. <ref type="figure">1</ref>.</p><p>P1 ={MobilePhone,Screen,Colour,Media,MP3} P2 ={MobilePhone,Calls,Screen,High resolution,GPS} Product P 1 is not valid since it does not include the mandatory feature Calls. On the other hand, product P 2 does belong to the set of products represented by the model. This operation may be helpful for software product line analysts and managers to determine whether a given product is available in a software product line. This operation is sometimes also referred to as ''valid configuration checking'', ''valid single system'', ''configuration consistency'', ''feature compatibility'', ''product checking'' and ''product specification completeness''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Valid partial configuration</head><p>This operation takes a feature model and a partial configuration as input and returns a value informing whether the configuration is valid or not, i.e. a partial configuration is valid if it does not include any contradiction. Consider as an example the partial configurations C1 and C2, described below, and the feature model of Fig. <ref type="figure">1</ref>.</p><formula xml:id="formula_1">C1 =({MobilePhone,Calls,Camera}, {GPS,High resolution}) C2 =({MobilePhone,Calls,Camera}, {GPS})</formula><p>C1 is not a valid partial configuration since it selects support for the camera and removes the high resolution screen that is explicitly required by the software product line. C2 does not include any contradiction and therefore could still be extended to a valid full configuration.</p><p>This operation results helpful during the product derivation stage to give the user an idea about the progress of the configuration. A tool implementing this operation could inform the user as soon as a configuration becomes invalid, thus saving time and effort.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">All products</head><p>This operation takes a feature model as input and returns all the products represented by the model. For instance, the set of all the products of the feature model presented in Fig. <ref type="figure">1</ref> is detailed below:  This operation may be helpful to identify new valid requirement combinations not considered in the initial scope of the product line. The set of products of a feature model is also referred to in the literature as ''all valid configurations'' and ''list of products''.</p><formula xml:id="formula_2">A B C C-1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.">Number of products</head><p>This operation returns the number of products represented by the feature model received as input. Note that a feature model is void iff the number of products represented by the model is zero. As an example, the number of products of the feature model presented in Fig. <ref type="figure" target="#fig_9">1 is 14</ref>.</p><p>This operation provides information about the flexibility and complexity of the software product line <ref type="bibr" target="#b9">[11,</ref><ref type="bibr" target="#b28">30,</ref><ref type="bibr" target="#b84">88]</ref>. A big number of potential products may reveal a more flexible as well as more complex product line. The number of products of a feature model is also referred to in the literature as ''variation degree''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6.">Filter</head><p>This operation takes as input a feature model and a configuration (potentially partial) and returns the set of products including the input configuration that can be derived from the model. Note that this operation does not modify the feature model but filters the features that are considered.</p><p>For instance, the set of products of the feature model in Fig. <ref type="figure">1</ref> applying the partial configuration ðS,RÞ ¼ ðfCalls,GPSg,fColour,CameragÞ, being S the set of features to be selected and R the set of features to be removed, is: P1={MobilePhone,Calls,Screen,High resolution,GPS} P2={MobilePhone,Calls,Screen,High resolution,Media,MP3,GPS} Filtering may be helpful to assist users during the configuration process. Firstly, users can filter the set of products according to their key requirements. Then, the list of resultant products can be inspected to select the desired solution <ref type="bibr" target="#b28">[30]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.7.">Anomalies detection</head><p>A number of analysis operations address the detection of anomalies in feature models, i.e. undesirable properties such as redundant or contradictory information. These operations take a feature model as input and return information about the anomalies detected. We identified five main types of anomalies in feature models reported in the literature. These are: Dead features. A feature is dead if it cannot appear in any of the products of the software product line. Dead features are caused by a wrong usage of cross-tree constraints. These are clearly undesired since they give the user a wrong idea of the domain. Fig. <ref type="figure">6</ref> depicts some typical situations that generate dead features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conditionally dead features.</head><p>A feature is conditionally dead if it becomes dead under certain circumstances (e.g. when selecting another feature) <ref type="bibr" target="#b38">[41]</ref>. Both unconditional and conditional dead features are often referred to in the literature as ''contradictions'' or ''inconsistencies''. In Fig. <ref type="figure">7</ref> feature B becomes dead whenever feature D is selected. Note that, with this definition, features in an alternative relationship are conditionally dead.</p><p>False optional features. A feature is false optional if it is included in all the products of the product line despite not being modelled as mandatory. Fig. <ref type="figure">8</ref> depicts some examples of false optional features.</p><p>Wrong cardinalities. A group cardinality is wrong if it cannot be instantiated <ref type="bibr" target="#b76">[80]</ref>. These appear in cardinalitybased feature models where cross-tree constraints are involved. An example of wrong cardinality is provided in Fig. <ref type="figure">9</ref>. Notice that features B and D exclude each other and therefore the selection of three subfeatures, as stated by the group cardinality, is not possible.</p><p>Redundancies. A feature model contains redundancies when some semantic information is modelled in multiple ways <ref type="bibr" target="#b85">[89]</ref>. Generally, this is regarded as a negative aspect since it may decrease the maintainability of the model. Nevertheless, it may also be used as a means of improving readability and comprehensibility of the model. Fig. <ref type="figure">10</ref> depicts some examples of redundant constraints in feature models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.8.">Explanations</head><p>This operation takes a feature model and an analysis operation as inputs and returns information (so-called explanations) about the reasons of why or why not the corresponding response of the operation <ref type="bibr" target="#b76">[80]</ref>. Causes are mainly described in terms of features and/or relationships involved in the operation and explanations are often related to anomalies. For instance, Fig. <ref type="figure">11</ref> presents a feature model with a dead feature. A possible explanation for the problem would be ''Feature D is dead because of the excludes constraint with feature B''. We refer the reader to <ref type="bibr" target="#b76">[80]</ref> for a detailed analysis of explanation operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Explanations are a challenging operation in the context of feature model error analysis, (a.k.a. feature model debugging) <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b72">76,</ref><ref type="bibr" target="#b76">80]</ref>. In order to provide an efficient tool support, explanations must be as accurate as possible when detecting the source of an error, i.e. it should be minimal. This becomes an even more challenging task when considering extended feature models and relationships between feature attributes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.9.">Corrective explanations</head><p>This operation takes a feature model and an analysis operation as inputs and returns a set of corrective explanations indicating changes to be made in the original inputs in order to change the output of the operation. In general, a corrective explanation provides suggestions to solve a problem, usually once this has been detected and explained.</p><p>For instance, some possible corrective explanations to remove the dead feature in Fig. <ref type="figure">11</ref> would be ''remove excludes constraint C-1'' or ''model feature B as optional''. This operation is also referred to in the literature as ''corrections''.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.10.">Feature model relations</head><p>These operations take two different feature models as inputs and returns a value informing how the models are related. The set of features in both models are not necessarily the same. These operations are useful for determining how a model has evolved over time. Thu ¨m et al. <ref type="bibr" target="#b71">[75]</ref> classify the possible relationships between two feature models as follows:</p><p>Refactoring. A feature model is a refactoring of another one if they represent the same set of products while having a different structure. For instance, model in Fig. <ref type="figure" target="#fig_1">12(b</ref>) is a refactoring of model in Fig. <ref type="figure" target="#fig_1">12</ref>(a) since they represent the same products, i.e. ffA,Bg,ffA,B,Cg, fA,B,Dg,fA,B,C,Dgg. Refactorings are useful to restructure a feature model without changing its semantics. When this property is fulfilled the models are often referred to as ''equivalent''.</p><p>Generalization. A feature model, F, is a generalization of another one, G, if the set of products of F maintains and extends the set of products of G. For example, feature model in Fig. <ref type="figure" target="#fig_1">12(c</ref>) is a generalization of the model in Fig. <ref type="figure" target="#fig_1">12</ref>(a) because it adds a new product ({A}) without removing an existing one. Generalization occurs naturally while extending a software product line.</p><p>Specialization. A feature model, F, is a specialization of another one, G, if the set of products of F is a subset of the set of products of G. For example, Fig. <ref type="figure" target="#fig_1">12(d</ref>) depicts a specialization of the model in Fig. <ref type="figure" target="#fig_1">12</ref>(a) since it removes a product from the original model ({A,B,C,D}) and adds no new ones.</p><p>Arbitrary edit. There is no explicit relationship between the input models, i.e. there are none of the relationships defined above. Models in Fig. <ref type="figure" target="#fig_1">12</ref>(a) and (e) illustrate an example of this. Thu ¨m et al. <ref type="bibr" target="#b71">[75]</ref> advise avoiding arbitrary edits and replacing these by a sequence of specialization, generalizations and refactorings edits for a better understanding of the evolution of a feature model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.11.">Optimization</head><p>This operation takes a feature model and a so-called objective function as inputs and returns the product  fulfilling the criteria established by the function. An objective function is a function associated with an optimization problem that determines how good a solution is. This operation is chiefly useful when dealing with extended feature models where attributes are added to features. In this context, optimization operations may be used to select a set of features maximizing or minimizing the value of a given feature attribute. For instance, mobile phones minimizing connectivity cost in Fig. <ref type="figure" target="#fig_1">2</ref> should include support for USB connectivity exclusively, i.e. USB is the cheapest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.12.">Core features</head><p>This operation takes a feature model as input and returns the set of features that are part of all the products in the software product line. For instance, the set of core features of the model presented in Fig. <ref type="figure">1</ref> is {MobilePhone,Calls,Screen}.</p><p>Core features are the most relevant features of the software product line since they are supposed to appear in all products. Hence, this operation is useful to determine which features should be developed in first place <ref type="bibr" target="#b73">[77]</ref> or to decide which features should be part of the core architecture of the software product line <ref type="bibr" target="#b58">[61]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.13.">Variant features</head><p>This operation takes a feature model as input and returns the set of variant features in the model <ref type="bibr" target="#b76">[80]</ref>. Variant features are those that do not appear in all the products of the software product line. For instance, the set of variant features of the feature model presented in Fig. <ref type="figure">1</ref> is {Basic,Colour,High resolution,Media,Camera, MP3,GPS}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.14.">Atomic sets</head><p>This operation takes a feature model as input and returns the set of atomic sets of the model. An atomic set is a group of features (at least one) that can be treated as a unit when performing certain analyses. The intuitive idea behind atomic sets is that mandatory features and their parent features always appear together in products and therefore can be grouped without altering the result of certain operations. Once atomic sets are computed, these can be used to create a reduced version of the model simply by replacing each feature with the atomic set that contains it. Fig. <ref type="figure" target="#fig_8">13</ref> depicts an example of atomic sets computation. Four atomic sets are derived from the original model, reducing the number of features from 7 to 4. Note that the reduced model is equivalent to the original one since both represent the same set of products.</p><p>Using this technique, mandatory features are safely removed from the model. This operation is used as an efficient preprocessing technique to reduce the size of feature models prior to their analysis <ref type="bibr" target="#b66">[70,</ref><ref type="bibr" target="#b98">102]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.15.">Dependency analysis</head><p>This operation takes a feature model and a partial configuration as input and returns a new configuration with the features that should be selected and/or removed as a result of the propagation of constraints in the model <ref type="bibr" target="#b52">[55]</ref>. As an example, consider the input and output configurations described below and the model in Fig. <ref type="figure">1</ref>.</p><p>Input=({MobilePhone,Calls,Camera},{MP3}) Output=({MobilePhone,Calls,Camera,Media, Screen,High resolution}, {MP3,Basic,Colour}) Features Screen and High resolution are added to the configuration to satisfy the requires constraint with Camera. Media is also included to satisfy the parental relationship with Camera. Similarly, features Basic and Colour are removed to fulfil the constraints imposed by the alternative relationship.</p><p>This operation is the basis for constraint propagation during the interactive configuration of feature models <ref type="bibr" target="#b52">[55]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.16.">Multi-step configuration</head><p>A multi-step configuration problem is defined as the process of producing a series of intermediate configurations, i.e. a configuration path, going from a feature model configuration to another <ref type="bibr" target="#b93">[97]</ref>. An analysis operation solving a multi-step configuration problem takes as input a feature model, an initial configuration, a desired final configuration, a number of steps in the configuration path K, a global constraint that can not be violated (usually referred to feature attributes) and a function determining the cost to transition from one configuration in step T to another in step U. As a result, the operation provides an ordered list of K configurations that determines the possible steps that can be taken to go from the initial configuration to the desired final configuration without violating the feature model and global constraints. For a detailed example and a rigorous definition of the operation we refer the reader to <ref type="bibr" target="#b93">[97]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.17.">Other operations</head><p>In this section, we group those operations that perform some computation based on the values of previous operations. We also classify in this group those analysis operations proposed as part of other algorithms.</p><p>Homogeneity. This operation takes a feature model as input and returns a number that provides an indication of the degree to which a feature model is homogeneous <ref type="bibr" target="#b34">[36]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>A more homogeneous feature model would be one with few unique features in one product (i.e. a unique feature appears only in one product) while a less homogeneous one would be one with a lot of unique features. According to <ref type="bibr" target="#b34">[36]</ref> it is calculated as follows:</p><formula xml:id="formula_3">Homogeneity ¼ 1À #uf #products</formula><p>#uf is the number of unique features in one product and #products denotes the total number of products represented by the feature model. The range of this indicator is [0,1]. If all the products have unique features the indicator is 0 (lowest degree of homogeneity). If there are no unique features, the indicator is 1 (highest degree of homogeneity).</p><p>Commonality. This operation takes a feature model and a configuration as inputs and returns the percentage of products represented by the model including the input configuration. An as example, consider the partial configurations described below and the model in Fig. <ref type="figure">1</ref>:</p><formula xml:id="formula_4">C1 ={{Calls}, {}} C2 ={{Calls}, {MP3}}</formula><p>The commonality of both configurations is calculated as follows:</p><formula xml:id="formula_5">CommðC1Þ ¼ jfilterðFM,ffCallsg,fggÞj #productsðFMÞ ¼ 14 14 ¼<label>1</label></formula><formula xml:id="formula_6">CommðC2Þ ¼ jfilterðFM,ffCallsg,fMP3ggÞj #productsðFMÞ ¼ 7 14 ¼ 0:5</formula><p>The range of this indicator is [0,1]. Configuration C1 appears in 100% of the products whereas C2 is included only in 50% of them.</p><p>This operation may be used to prioritize the order in which the features are going to be developed <ref type="bibr" target="#b73">[77]</ref> or to decide which features should be part of the core architecture of the software product line <ref type="bibr" target="#b58">[61]</ref>.</p><p>Variability factor. This operation takes a feature model as input and returns the ratio between the number of products and 2 n where n is the number of features considered. In particular, 2 n is the potential number of products represented by a feature model assuming that any combination of features is allowed. The root and nonleaf features are often not considered. As an example, the variability of the feature model presented in Fig. <ref type="figure">1</ref> taking into account only leaf features is</p><formula xml:id="formula_7">N Á Products 2 n ¼<label>14</label></formula><p>2 7 ¼ 0:0625 An extremely flexible feature model would be one where all its features are optionals. For instance, the feature model of Fig. <ref type="figure" target="#fig_9">14</ref> has the following variability factor:</p><formula xml:id="formula_8">N Á Products 2 n ¼ 8 2 3 ¼ 1</formula><p>The range of this indicator would depend on the features considered to calculate the factor. The feature model variability can be used to measure the flexibility of the feature model. For instance, a small factor means that the number of combinations of features is very limited compared to the total number of potential products.</p><p>Degree of orthogonality. This operation takes a feature model and a subtree (represented by its root feature) as input and returns their degree of orthogonality. Czarnecki et al. <ref type="bibr" target="#b28">[30]</ref> defines the degree of orthogonality as the ratio between the total number of products of the feature model and the number of products of the subtree. Only local constraints in the subtree are considered for counting the products. For instance, the formula below shows the degree of orthogonality for the subtree Screen in Fig. <ref type="figure">1</ref>:</p><formula xml:id="formula_9">OrthogonalityðScreenÞ ¼ 14 3 ¼ 4:66</formula><p>The range of this indicator is ð0,1Þ. A high degree of orthogonality indicates that decisions can be taken locally without worrying about the influence in the configuration of other parts of the tree <ref type="bibr" target="#b28">[30]</ref>.</p><p>Extra constraint representativeness (ECR): This operation takes a feature model as input and returns the degree of representativeness of the cross-tree constraints in the tree. Mendonc -a et al. <ref type="bibr" target="#b54">[57,</ref><ref type="bibr" target="#b53">56]</ref> defines the extra constraint representativeness (ECR) as the ratio of the number of features involved in cross-tree constraints (repeated features counted once) to the number of features in the feature tree. For instance, ECR in Fig. <ref type="figure">1</ref> is calculated as follows:</p><formula xml:id="formula_10">ECR ¼ 4 10 ¼ 0:4</formula><p>The range of this indicator is [0,1]. This operation has been used successfully to design and evaluate heuristics for the automated analysis of feature models <ref type="bibr" target="#b54">[57]</ref>.</p><p>Lowest common ancestor (LCA): This operation takes a feature model and a set of features as input and returns a feature that is the lowest common ancestor of the input features. Mendonca et al. <ref type="bibr" target="#b54">[57]</ref> defines the lowest common ancestor (LCA) of a set of features, LCA(FM,{f 1 ,y,f n }), as the shared ancestor that is located farthest from the root. In Fig. <ref type="figure">1</ref>, LCA(FM,{Basic,Camera}) = Mobile Phone.</p><p>Root features. This operation takes a feature model and a set of features as inputs and returns a set of features that are the roots features in the model. Given l = LCA(FM, {f 1 ,y,f n }), Mendonca et al. <ref type="bibr" target="#b54">[57]</ref> define the roots of a set of features, Roots(FM,{f 1 ,y,f n }) as the subset of child features of l that are ancestors of f 1 ,y,f n . In Fig. <ref type="figure">1</ref>, Roots(FM, {Basic,Camera})= {Media,Screen}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Automated support</head><p>Previously, we presented the different analysis operations that we found in the literature. In this section, we address RQ 2: What kind of automated support has been proposed and how is it performed? To answer this question, we classified the primary studies in four different groups according to the logic paradigm or method used to provide the automated support. In particular, we next present the group of approaches using propositional logic (PL), constraint programming (CP), description logic (DL), and other contributions not classified in the former groups proposing ad hoc solutions, algorithms or paradigms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Propositional logic based analyses</head><p>A propositional formula consists of a set of primitive symbols or variables and a set of logical connectives constraining the values of the variables, e.g. :,4,3, ) ,3.</p><p>A SAT solver is a software package that takes as input a propositional formula and determines if the formula is satisfiable, i.e. there is a variable assignment that makes the formula evaluate to true. Input formulas are usually specified in conjunctive normal form (CNF). CNF is a standard form to represent propositional formulas that is used by most of SAT solvers where only three connectives are allowed: :,4,3. It has been proved that every propositional formula can be converted into an equivalent CNF formula <ref type="bibr" target="#b23">[25]</ref>. SAT solving is a well known NP-complete problem <ref type="bibr" target="#b23">[25]</ref>, however, current SAT solvers can deal with big problems where in most of the cases the performance is not an issue <ref type="bibr" target="#b50">[53]</ref>.</p><p>Similarly, a binary decision diagram (BDD) solver is a software package that takes a propositional formula as input (not necessarily in CNF) and translates it into a graph representation (the BDD itself) which allows determining if the formula is satisfiable and providing efficient algorithms for counting the number of possible solutions <ref type="bibr" target="#b17">[19]</ref>. The size of the BDD is crucial because it can be exponential in the worst case. Although it is possible to find a good variable ordering that reduces the size of the BDD, the problem of finding the best variable ordering remains NP-complete <ref type="bibr" target="#b16">[18]</ref>.</p><p>The mapping of a feature model into a propositional formula can change depending on the solver that is used later for analysis. In general, the following steps are performed: (i) each feature of the feature model maps to a variable of the propositional formula, (ii) each relationship of the model is mapped into one or more small formulas depending on the type of relationship, in this step some auxiliary variables can appear, (iii) the resulting formula is the conjunction of all the resulting formulas of step (ii) plus and additional constraint assigning true to the variable that represents the root, i.e. root3true.</p><p>Concrete rules for translating a feature model into a propositional formula are listed in Fig. <ref type="figure" target="#fig_10">15</ref>. Also, the mapping of our running example of Fig. <ref type="figure">1</ref> is presented. We may mention that the mapping of the propositional formulas listed in Fig. <ref type="figure" target="#fig_10">15</ref> into CNF is straightforward (see <ref type="bibr" target="#b23">[25]</ref>).</p><p>There are some works in the literature that propose the usage of propositional formulas for the automated analysis of feature models (see Table <ref type="table">3</ref>). In these studies the analysis is performed in two steps. Firstly, the feature model is translated into a propositional formula. Then, an off-the-shelf solver is used to automatically analyse the formula and subsequently the feature model. A summary of the solvers used for analysis is shown in Table <ref type="table" target="#tab_1">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>To underline the most important contributions in terms of innovation with respect to prior work we may mention the following studies: Mannion et al. <ref type="bibr" target="#b48">[51,</ref><ref type="bibr" target="#b49">52]</ref> was the first to connect propositional formulas and feature models. Zhang et al. <ref type="bibr" target="#b98">[102]</ref> reported a method to calculate atomic sets, later explored by Segura <ref type="bibr" target="#b66">[70]</ref>. Batory <ref type="bibr" target="#b3">[5]</ref> shows the connections among grammars, feature models and propositional formulas, this was the first time that a SAT solver was proposed to analyse feature models. In addition, a logic truth maintenance system (a system that maintains the consequences of a propositional formula) was designed to analyse feature models. Sun et al. <ref type="bibr" target="#b70">[74]</ref> propose using Z, a formal specification language, to provide semantics to feature models. Alloy was used to implement those semantics and analyse feature models. Benavides et al. <ref type="bibr" target="#b12">[14,</ref><ref type="bibr" target="#b14">16,</ref><ref type="bibr" target="#b66">70]</ref> propose using a multi-solver approach where different solvers are used (e.g. BDD or SAT solvers) depending on the kind of analysis operations to be performed. For instance, they suggest that BDD solvers seem to be more efficient in general than SAT solvers for counting the number of products of a feature model. Mendonca et al. <ref type="bibr" target="#b54">[57]</ref> also used BDDs for analysis and compared different classical heuristics found in the literature for variable ordering of BDDs with new specific heuristics for the analysis of BDDs representing feature models. They experimentally showed that existing BDD heuristics fail to scale for large feature models while their novel heuristics can scale for models with up to 2000 features. Thu ¨m et al. <ref type="bibr" target="#b71">[75]</ref> present an automated method for classifying feature model edits, i.e. changes in an original feature model, according to a taxonomy. The method is based on propositional logic algorithms using a SAT solver and constraint propagation algorithms. Yan et al. <ref type="bibr" target="#b96">[100]</ref> propose an optimization method to reduce the size of the logic representation of the feature models by removing irrelevant constraints. Mendonca et al. <ref type="bibr" target="#b53">[56]</ref> shows by means of an experiment that the analysis of feature models with similar properties to those found in the literature using SAT solvers is computationally affordable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">Constraint programming based analyses</head><p>A constraint satisfaction problem (CSP) <ref type="bibr" target="#b78">[82]</ref> consists of a set of variables, a set of finite domains for those variables and a set of constraints restricting the values of the variables. Constraint programming can be defined as the set of techniques such as algorithms or heuristics that deal with CSPs. A CSP is solved by finding states (values for variables) in which all constraints are satisfied. In contrast to propositional formulas, CSP solvers can deal not only with binary values (true or false) but also with numerical values such as integers or intervals.</p><p>A CSP solver is a software package that takes a problem modelled as a CSP and determines whether there exists a solution for the problem. From a modelling point of view, CSP solvers provide a richer set of modelling elements in terms of variables (e.g. sets, finite integer domains, etc.) and constraints (not only propositional connectives) than propositional logic solvers.</p><p>The mapping of a feature model into CSP can vary depending on the concrete solver that is used later for the analysis. In general, the following steps are performed: (i) each feature of the feature model maps to a variable of the CSP with a domain of 0..1 or TRUE, FALSE, depending on the kind of variable supported by the solver, (ii) each relationship of the model is mapped into a constraint depending on the type of relationship, in this step some auxiliary variables can appear, (iii) the resulting CSP is the one defined by the variables of steps (i) and (ii) with the corresponding domains and a constraint that is the conjunction of all precedent constraints plus and additional constraint assigning true to the variable that represents the root, i.e. root3true or root = = 1, depending on the variables' domains.</p><p>Concrete rules for translating a feature model into a CSP are listed in Fig. <ref type="figure">16</ref>. Also, the mapping of our running example of Fig. <ref type="figure">1</ref> is presented.</p><p>There are some works in the literature that propose the usage of constraint programming for the automated analysis of feature models (see Table <ref type="table">3</ref>). Analyses are performed in two steps. Firstly, the feature model is translated into a CSP. Then, an off-the-shelf solver is used to automatically analyse the CSP and subsequently the feature model. A summary of the solvers used for analysis is shown in Table <ref type="table">2</ref>.</p><p>Benavides et al. were the first authors proposing the usage of constraint programming for analyses on feature models <ref type="bibr" target="#b8">[10]</ref><ref type="bibr" target="#b9">[11]</ref><ref type="bibr" target="#b10">[12]</ref>. In those works, a set of mapping rules to translate feature models into a CSP were provided. Benavides et al. proposals provide support for the analysis of extended feature models (i.e. including feature attributes) and the operation of optimization. The authors also provide tool support <ref type="bibr" target="#b14">[16,</ref><ref type="bibr" target="#b75">79]</ref> and they have compared the performance of different solvers when analysing feature models <ref type="bibr" target="#b13">[15,</ref><ref type="bibr" target="#b12">14,</ref><ref type="bibr" target="#b66">70]</ref>. Trinidad et al. <ref type="bibr" target="#b74">[78,</ref><ref type="bibr" target="#b72">76]</ref> focus on the detection and explanation of errors in feature models based on Reiter's theory of diagnosis <ref type="bibr" target="#b60">[64]</ref> and constraint programming. Djebbi et al. <ref type="bibr" target="#b32">[34]</ref> propose a method to extract information from feature models in terms of queries. A set of rules to translate feature models to boolean constraints are given. They also describe a tool under development enabling the analysis of feature models using constraint programming. White et al. <ref type="bibr" target="#b95">[99]</ref> propose a method to detect conflicts in a given configuration and propose changes in the configuration in terms of features to be selected or deselected to remedy the problem. Their technique is based on translating a feature model into a CSP and adding some extra variables in order to detect and correct the possible errors after applying optimization operations. In <ref type="bibr" target="#b93">[97]</ref>, White [37,74] BDD solver <ref type="bibr" target="#b91">[95]</ref> [ <ref type="bibr" target="#b12">14,</ref><ref type="bibr" target="#b14">16,</ref><ref type="bibr" target="#b28">30,</ref><ref type="bibr" target="#b54">57,</ref><ref type="bibr" target="#b66">70,</ref><ref type="bibr" target="#b82">86,</ref><ref type="bibr" target="#b83">87,</ref><ref type="bibr" target="#b99">103</ref>,100] SMV <ref type="bibr" target="#b67">[71]</ref> [101,102] Not specified <ref type="bibr" target="#b48">[51,</ref><ref type="bibr" target="#b49">52]</ref> et al. provide support for the analysis of multi-step configuration problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">Description logic based analyses</head><p>Description logics are a family of knowledge representation languages enabling the reasoning within knowledge domains by using specific logic reasoners <ref type="bibr" target="#b1">[3]</ref>. A problem described in terms of description logic is usually composed by a set of concepts (a.k.a. classes), a set of roles (e.g. properties or relationships) and set of individuals (a.k.a. instances).</p><p>A description logic reasoner is a software package that takes as input a problem described in description logic and provides facilities for consistency and correctness checking and other reasoning operations.</p><p>We found four primary studies proposing the usage of description logic to analyse feature models. Wang et al. <ref type="bibr" target="#b88">[92]</ref> were the first to propose the automated analysis of feature models using description logic. In their work, the authors introduce a set of mapping rules to translate feature models into OWL-DL ontologies <ref type="bibr" target="#b30">[32]</ref>. OWL-DL is an expressive yet decidable sublanguage of OWL <ref type="bibr" target="#b30">[32]</ref>. Then, the authors suggest using description logic reasoning engines such as RACER <ref type="bibr">[63]</ref> to perform automated over the OWL representations of the models. In <ref type="bibr" target="#b89">[93]</ref>, the authors extend their previous proposal <ref type="bibr" target="#b88">[92]</ref> with support for explanations by means of an OWL debugging tool. Fan et al. <ref type="bibr" target="#b33">[35]</ref> also propose translating feature models into description logic and using reasoners such as RACER to perform their analyses. In <ref type="bibr" target="#b0">[1]</ref>, Abo Zaid et al. propose using semantic web technologies to enable the analyses. They use OWL for modelling and the Pellet <ref type="bibr" target="#b20">[22]</ref> reasoner for the analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">Other studies</head><p>There are some primary studies that are not classified in the former groups, namely: (i) studies in which the conceptual logic used is not clearly exposed and (ii) studies using ad-hoc algorithms, paradigms or tools for analysis.</p><p>Kang et al. mentioned explicitly the automated analysis of feature models in the original FODA report <ref type="bibr">[43, p. 70]</ref>. A prolog-based prototype is also reported. However, no detailed information is provided to replicate their prolog coding. After the FODA report, Deursen et al. <ref type="bibr" target="#b84">[88]</ref> were the first authors proposing some kind of automated support for the automated analysis of feature models. In their work, they propose a textual feature diagram algebra together with a prototype implementation using the ASF +SDF Meta-Environment <ref type="bibr" target="#b44">[47]</ref>. Von der Massen et al. <ref type="bibr" target="#b86">[90]</ref> present Requiline, a requirement engineering tool for software product lines. The tool is mainly implemented by using a relational data base and ad hoc algorithms. Later, Von der Massen et al. <ref type="bibr" target="#b87">[91]</ref> propose a method to calculate a rough approximation of the number of products of a feature model, which they call variation degree. The technique is described using mathematical expressions. In <ref type="bibr" target="#b2">[4]</ref>, Bachmeyer et al. present conceptual graph feature models. Conceptual graphs are a formalism to express knowledge. Using this transformation, they provide an algorithm that is used to compute analysis. Hemakumar <ref type="bibr" target="#b38">[41]</ref> proposes a method to statically detect conditional dead features. The method is based on model checking techniques and incremental consistency algorithms. Mendonca et al. <ref type="bibr" target="#b51">[54,</ref><ref type="bibr" target="#b52">55]</ref> study dependencies among feature models and cross-tree constraints using different techniques obtaining a noticeable improvement in efficiency. Gheyi et al. <ref type="bibr" target="#b36">[38]</ref> present a set of algebraic laws in feature models to check configurability of feature model refactorings. They use the PVS tool to do some analysis although this is not the main focus of the paper. White et al. <ref type="bibr" target="#b92">[96]</ref> present an extension of their previous work <ref type="bibr" target="#b94">[98]</ref>. The same method is presented but giving enough details to make it reproducible since some details were missed in their previous work. The method is called filtered Cartesian flattering which maps the problem of optimally selecting a set of features according to several constraints to a multi-dimensional multi-choice knapsack problem and then they apply several existing algorithms to this problem that perform much faster while offering an approximate answer. Van den Broek et al. <ref type="bibr" target="#b80">[84]</ref> propose transforming feature models into generalised feature trees and computing some of their properties. A generalised feature tree is a feature model in which cross-tree constraints are removed and features can have multiple occurrences. Some algorithms and an executable specification in the functional programming language Miranda are provided. The strength of their proposal lies in the efficiencyof the analysis operation. Fernandez et al. <ref type="bibr" target="#b34">[36]</ref> propose an algorithm to compute the total number of products on what they call neutral feature trees, trees that allow complex cross-tree constraints. Computing the total number of products the authors are also able to calculate the homogeneity of a feature tree as well as the commonality of a given feature. They finally compare the computational complexity of their approach with respect to previous work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.">Summary and analysis of operations and support</head><p>A summary of the analysis operations (RQ1) and automated support (RQ2) identified in the literature is shown in Table <ref type="table">3</ref>. Operations are listed horizontally and ordered by the total number of papers mentioning it. Primary studies are listed vertically. Related works of the same author are grouped in a single column. Primary studies are grouped according to the paradigm they use for the analyses as follows: (i) propositional logic (PL), (ii) Constraint programming (CP), (iii) description logic (DL), (iv) works that integrate more than one paradigm and/or solver (multi), (v) studies that use their own tools not categorized in the former groups (others), and (vi) proposals that present different operations but do not provide automated support for them (No support).</p><p>The cells of the matrix indicate the information about a primary study in terms of operations supported. Cells marked with '+' indicate that the proposal of the column provides explicit support for the operation of the row. We use the symbol ' $ ' for proposals with no automated support for the corresponding operation but explicit definition of it. We also highlight the primary study that first proposed an operation using the symbols 'È' (when support is provided) and 'É' (when no support is provided). To fully answer the research questions we also extracted some additional information about different aspects of the primary studies, namely: (i) feature model notations supported: 'B' (basic feature model), 'C' (cardinality-based feature model) (ii) whether the approach support extended feature models or not, and (iii) whether the approach is described formally. This information is also reported in the final rows of Table <ref type="table">3</ref>.</p><p>Table <ref type="table" target="#tab_3">4</ref> depicts a chronological view of the data presented in Table <ref type="table">3</ref>. More specifically, it shows the amount of references to operations, notation, formalization and kind of automated support found in the literature for each year. Vertically, we list all the years where primary studies were published. The last column indicates the total number of primary studies referring the operation, the notation of feature models, the formalization provided and the type of automated support used for analysis. The table also shows the number of new operations proposed each year.</p><p>As illustrated in Tables <ref type="table">3</ref> and<ref type="table" target="#tab_3">4</ref>, there are 11 out of 30 operations that only appeared in one primary study. Likewise, six operations were treated in more than 10 studies of which four were already mentioned in the original FODA report back in 1990 <ref type="bibr" target="#b40">[43]</ref>. This denotes, in our opinion, that FODA authors were quite visionary in predicting the importance of automated analysis of feature models and pinpointing some of the most referred operations. We may remark that 11 new operations were proposed in the last two years of our study and 22 of them were referred in 2009 suggesting that the analysis of feature models is an active research field.</p><p>Regarding the notation used, 40 out of 53 primary studies used basic feature model notation for the analysis of feature models. However, there seems to be an increasing interest in the analysis of cardinality-based and extended feature models since 2004.</p><p>With respect to automated support for analysis, 18 out of 53 studies used propositional logic while only four of them used description logic. Constraint programming was referred to in 12 studies leaded by three different groups of authors. We remark that no support for extended feature models was found in the studies using propositional logic. There are also 16 studies proposing ad hoc</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>Table <ref type="table">3</ref> Summary of operations and support. Batory <ref type="bibr" target="#b3">[5]</ref>, Czarnecki et al. <ref type="bibr" target="#b28">[30]</ref>, Gheyi et al. <ref type="bibr" target="#b35">[37]</ref>, Mannion et al. <ref type="bibr" target="#b48">[51,</ref><ref type="bibr" target="#b49">52]</ref>, Mendonca et al. <ref type="bibr" target="#b54">[57]</ref>, Mendonca et al. <ref type="bibr" target="#b53">[56]</ref>, Sun et al. <ref type="bibr" target="#b70">[74]</ref>, Thu ¨m et al. <ref type="bibr" target="#b71">[75]</ref>, van der Storm <ref type="bibr" target="#b82">[86,</ref><ref type="bibr" target="#b83">87]</ref>, Zhang et al. <ref type="bibr" target="#b98">[102,</ref><ref type="bibr" target="#b97">101]</ref>, Zhang et al. <ref type="bibr" target="#b99">[103]</ref>, Yan et al. <ref type="bibr" target="#b96">[100]</ref>, Benavides et al. <ref type="bibr" target="#b8">[10]</ref><ref type="bibr" target="#b9">[11]</ref><ref type="bibr" target="#b10">[12]</ref>, Benavides et al. <ref type="bibr" target="#b13">[15]</ref>, Djebii etal. <ref type="bibr" target="#b32">[34]</ref>, Trinidad et al. <ref type="bibr" target="#b74">[78,</ref><ref type="bibr" target="#b72">76]</ref> , White et al. <ref type="bibr" target="#b95">[99]</ref>, White et al. <ref type="bibr" target="#b93">[97]</ref>, Abo Zaid et al. <ref type="bibr" target="#b0">[1]</ref>, Fan et al. <ref type="bibr" target="#b33">[35]</ref>, Wang et al. <ref type="bibr" target="#b88">[92,</ref><ref type="bibr" target="#b89">93]</ref>, Benavides et al. <ref type="bibr" target="#b12">[14]</ref>, Benavides et al. <ref type="bibr" target="#b14">[16]</ref>, Segura <ref type="bibr" target="#b66">[70]</ref>, Bachmeyer et al. <ref type="bibr" target="#b2">[4]</ref>, Cao et al. <ref type="bibr" target="#b18">[20]</ref>, Fernandez et al. <ref type="bibr" target="#b34">[36]</ref>, Hemakumar <ref type="bibr" target="#b38">[41]</ref>, Gheyi et al. <ref type="bibr" target="#b36">[38]</ref> , Kang et al. <ref type="bibr" target="#b40">[43]</ref>, Mendonca et al. <ref type="bibr" target="#b52">[55]</ref>, Osman et al. <ref type="bibr" target="#b56">[59,</ref><ref type="bibr" target="#b57">60]</ref>, Salinesi et al. <ref type="bibr" target="#b62">[66]</ref>, Van den Broek et al. <ref type="bibr" target="#b80">[84]</ref>, Van Deursen et al. <ref type="bibr" target="#b84">[88]</ref>, Von der Massen et al. <ref type="bibr" target="#b86">[90]</ref>, Von der Massen et al. <ref type="bibr" target="#b87">[91]</ref>, White et al. <ref type="bibr" target="#b94">[98,</ref><ref type="bibr" target="#b92">96]</ref>, Batory et al. <ref type="bibr" target="#b5">[7]</ref>, Schobbens et al. <ref type="bibr" target="#b39">[42,</ref><ref type="bibr" target="#b64">68,</ref><ref type="bibr" target="#b65">69]</ref>, Trinidad et al. <ref type="bibr" target="#b76">[80]</ref>, Von der Massen et al. <ref type="bibr" target="#b85">[89]</ref>.</p><p>Batory <ref type="bibr" target="#b3">[5]</ref> Czarnecki et al. <ref type="bibr">[</ref> solutions and this tendency seems to be in progression in the last years which may suggest that researchers are looking for more specific and efficient algorithms to perform analysis operations.</p><p>We also found that there are 22 studies proposing a formal or rigorous definition of analysis operations. This tendency seems to be ascendant since 2004 which may indicate that there is an increasing interest by the Explanations are acknowledged to be an important operation for feature model error analysis in the literature <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b76">80]</ref>. As presented in Sections 5.8 and 5.9, these operations take as input a feature model and an operation and return as a result the source of the errors in the model and the possible actions to correct them, respectively. Table <ref type="table" target="#tab_5">5</ref> shows a detailed view of the operations that haven been used in explanations and corrective explanations. As illustrated, there are only four operations with support for explanations in more than one study. All logical paradigms have been used for explaining different analysis operations. We found that explanations have been largely studied in related problems in the communities of propositional logic, constraint programming and description logic for years. This has provided researchers with helpful guidelines and methods to assist them with the implementation of explanations in the analysis of feature models. We also remark that all the explanations operations refer to the analysis of basic or cardinality-based feature models while we have not found any study dealing with explanations in extended feature models. Only Trinidad et al. <ref type="bibr" target="#b76">[80]</ref> attempted an explanation of the optimization operation but no explicit method to support this operation was presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Performance evaluation</head><p>Performance analyses play a key role in the evaluation of the analysis techniques and tools. The results obtained highlight the strengths and weaknesses of the proposals, helping researchers to improve their solutions, identify new research directions and show the applicability of the analysis operations.</p><p>Table <ref type="table" target="#tab_6">6</ref> summarizes the proposals reporting performance results on the analysis of feature models. We consider as performance results any data (e.g. time, memory) suggesting how a proposal behaves in practice. Works based on propositional logic, constraint programming and ad hoc solutions have presented a similar number of performance evaluations while only one proposal has presented results of description logic based support. Regarding operations, 18 out of 30 analysis operations identified in the literature have been used in performance analyses. However, only seven of them have been evaluated by more than one proposal, providing some comparable results.</p><p>In general terms, the available results suggest that CPbased and PL-based automated support provide similar performance <ref type="bibr" target="#b12">[14,</ref><ref type="bibr" target="#b66">70]</ref>. PL-based solutions relying on BDDs (binary decision diagrams) seem to be an exception as it provides much faster execution times than the rest of known approaches, especially when computing the number of solutions <ref type="bibr" target="#b12">[14,</ref><ref type="bibr" target="#b54">57,</ref><ref type="bibr" target="#b66">70,</ref><ref type="bibr" target="#b99">103]</ref>. The major drawback of this technique is the size of the BDD representing the feature model that can be exponential in the worst case. Several authors have worked in the development of new heuristics and techniques to reduce the size of the BDDs used in the analysis of feature models <ref type="bibr" target="#b54">[57,</ref><ref type="bibr" target="#b99">103]</ref>. Others focus on providing automated support using different paradigms in order to combine the best of all of them in terms of performance <ref type="bibr" target="#b12">[14,</ref><ref type="bibr" target="#b14">16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head><p>A key aspect in the experimental work related to the analysis of feature models is the type of subject problems used for the experiments. We found two main types of feature models used for experimentation: realistic and automatically generated feature models. By realistic models we intend those modelling real-world domains or a simplified version of them. Some of the realistic feature models most quoted in the revised literature are: e-Shop <ref type="bibr" target="#b45">[48]</ref> with 287 features, graph product line <ref type="bibr" target="#b47">[50]</ref> with up to 64 features, BerkeleyDB <ref type="bibr" target="#b42">[45]</ref> with 55 features and home integration system product line <ref type="bibr" target="#b9">[11]</ref> with 15 features.</p><p>Although there are reports from the industry of feature models with hundreds or even thousands of features <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b46">49,</ref><ref type="bibr" target="#b68">72]</ref>, only a portion of them is typically published. This has led authors to generate feature models automatically to show the scalability of their approaches with large problems. These models are generated either randomly <ref type="bibr" target="#b12">[14,</ref><ref type="bibr" target="#b13">15,</ref><ref type="bibr" target="#b52">55,</ref><ref type="bibr" target="#b57">60,</ref><ref type="bibr" target="#b66">70,</ref><ref type="bibr" target="#b92">96,</ref><ref type="bibr" target="#b93">97,</ref><ref type="bibr" target="#b95">99,</ref><ref type="bibr" target="#b96">100,</ref><ref type="bibr" target="#b99">103]</ref> or trying to imitate the properties of the realistic models found in the literature <ref type="bibr" target="#b53">[56,</ref><ref type="bibr" target="#b71">75]</ref>. Several algorithms for the automated generation of feature models have been proposed <ref type="bibr" target="#b66">[70,</ref><ref type="bibr" target="#b71">75,</ref><ref type="bibr" target="#b96">100]</ref>.</p><p>In order to understand the relationship between realistic feature models and automatically generated models in experimentation, we counted the number of works using each type by year. The results are shown in Fig. <ref type="figure" target="#fig_11">17</ref>. For each type of model, we also show the number of features of the largest feature model for each year. The figure shows an increasing trend in the number of empirical works since 2004 being specially notable in the last two years. The first works used small realistic feature models in their experiments. However, since 2006, far more automatically generated feature models than realistic ones have been used. Regarding the size of the problems, there is a clear ascendant tendency ranging from the model with 15 features used in 2004 to the model with 20 000 features used in 2009. These findings reflect an increasing concern to evaluate and compare the performance of different solutions using larger and more complex feature models. This suggests that the analysis of feature models is maturing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Discussions and challenges</head><p>In this section, we discuss the results obtained from the literature review. Based on these results, we identify a number of challenges (RQ3) to be addressed in the future. Challenges are part of the authors' own personal view of open questions, based on the analysis presented in this paper.</p><p>Formal definition of analysis operations. As we mentioned, most of the proposals define operations in terms of informal descriptions. To implement a tool, it is desirable to have precise definition of the operations. Formal definitions of operations would facilitate both communication among the community and tool development. Schobbens et al. <ref type="bibr" target="#b64">[68,</ref><ref type="bibr" target="#b65">69]</ref> and Benavides <ref type="bibr" target="#b6">[8]</ref> have made some progress in this direction. Note that <ref type="bibr" target="#b6">[8]</ref> was not included as a primary study because it was not published in a peer reviewed format.</p><p>Challenge 1: Formally describe all the operations of analysis and provide a formal framework for defining new operations. Extended feature model analyses. Analysis on basic or cardinality-based feature models are covered by most of the studies. However, extended feature models where numerical attributes are included, miss further coverage. When including attributes in feature models the analysis becomes more challenging because not only attribute-value pairs can be contemplated, but more complex relationships can be included like ''feature Camera requires Scree.resolution Z 640 Â 480 00 . This type of relationships can affect operations of analysis and can include new ones. For instance, the number of products of a feature model can be reduced or increased if these relationships are considered.</p><note type="other">ARTICLE IN PRESS</note><p>Challenge 2: Include feature attribute relationships for analyses on feature models and propose new operations of analysis leveraging extended feature models. Performance and scalability of the operations. Performance testing is being studied more and more and recent works show empirical evidences of the computational complexity of some analysis operations. We believe that a more rigorous analysis of computational complexity is needed. Furthermore, a set of standard benchmarks would be desirable to show how the theoretical computational complexity is run in practice.</p><p>Challenge 3: Further studies about computational complexity of analysis. Challenge 4: Develop standard benchmarks for analysis operations. Tools used for analysis. As mentioned in Section 6, there are mainly three groups of solvers used for analysis: constraint programming, description logic and propositional logic based solvers. From the primary studies, we detected that proposals using constraint programming-based solvers are the most indicated to deal with extended feature models, i.e. feature models with attributes. Propositional logic-based solvers that use binary decisions diagrams as internal representations seem to be much more efficient for counting the number of products but present serious limitations regarding memory consumption. Description logic-based solvers have not been studied in depth to show their strengths and limitations when analysing feature models. Finally, it seems clear that not all solvers and paradigms will perform equally well for all the identified operations. A characterisation of feature models, operations and solvers seems to be an interesting topic to be explored in the future.</p><p>Challenge 5: Study how propositional logic and description logic-based solvers can be used to add attributes on feature models. Challenge 6: Compare in depth description logicbased solvers with respect to analysis operations and other solvers. Challenge 7: Characterise feature models, analysis operations and solvers to select the best choice in each case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">Conclusions</head><p>The automated analysis of feature models is thriving. The extended use of feature models together with the many applications derived from their analysis has allowed this discipline to gain importance among researchers in software product lines. As a result, a number of analysis operations and approaches providing automated support for them are rapidly proliferating. In this paper, we revised the state of the art on the automated analysis of feature models by running a structured literature review covering 53 primary studies and outlining the main advances made up to now. As a main result, we presented a catalogue with 30 analysis operations identified in the literature and classified the existing proposal providing automated support for them according to their underlying logical paradigm. We also provided information about the tools used to perform the analyses and the results and trends related to the performance evaluation of the published proposals. From the analysis of current solutions, we conclude that the analysis of feature models is maturing with an increasing number of contributions, operations, tools and empirical works. We also identified a number of challenges for future research mainly related to the formalization and computational complexity of the operations, performance comparison of the approaches and the support of extended feature models.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Contents lists available at ScienceDirect journal homepage: www.elsevier.com/locate/infosys Information Systems ARTICLE IN PRESS 0306-4379/$ -see front matter &amp; 2010 Elsevier B.V. All rights reserved. doi:10.1016/j.is.2010.01.001 $ A very preliminary version of this paper was published in Jornadas de Ingenierı ´a del Software y Bases de Datos (JISBD'06).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. A sample extended feature model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Classification of papers per year and type of publication.</figDesc><graphic coords="5,109.24,56.57,321.84,162.72" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. A void feature model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Process for the automated analysis of feature models.</figDesc><graphic coords="6,113.23,56.57,321.84,163.01" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .Fig. 8 .Fig. 7 .</head><label>687</label><figDesc>Fig. 6. Common cases of dead features. Grey features are dead.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 10 .Fig. 11 .</head><label>1011</label><figDesc>Fig. 10. Some examples of redundancies. Grey constraints are redundant.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 12 .Fig. 9 .</head><label>129</label><figDesc>Fig.<ref type="bibr" target="#b10">12</ref>. Types of relationships between two feature models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Atomic sets computation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Sample feature model with three optional features.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 15 .</head><label>15</label><figDesc>Fig.<ref type="bibr" target="#b13">15</ref>. Mapping from feature model to propositional logic.</figDesc><graphic coords="11,78.20,410.36,380.03,261.19" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17. Type and maximum size of the feature models used in performance evaluations for each year.</figDesc><graphic coords="19,109.24,56.57,321.84,185.47" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc>Propositional logic based tools used for FM analysis.</figDesc><table><row><cell>Tool</cell><cell>Primary study</cell></row><row><cell>SAT solver [17]</cell><cell>[5,14,16,56,70,75]</cell></row><row><cell>Alloy [2]</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc>Number of primary studies referring operations, notations and support for each year.</figDesc><table><row><cell></cell><cell>1990</cell><cell>2002</cell><cell>2003</cell><cell>2004</cell><cell>2005</cell><cell>2006</cell><cell>2007</cell><cell>2008</cell><cell>2009</cell><cell>Total</cell></row><row><cell></cell><cell cols="2">Operations</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Void feature model</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>35</cell></row><row><cell>#Products</cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>16</cell></row><row><cell>Dead features</cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell cols="2">~+</cell><cell></cell><cell>+</cell><cell>+</cell><cell>17</cell></row><row><cell>Valid product</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell cols="2">~17</cell></row><row><cell>All products</cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell>13</cell></row><row><cell>Explanations</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell cols="2">~+</cell><cell>+</cell><cell>+</cell><cell>13</cell></row><row><cell>Refactoring</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>9</cell></row><row><cell>Optimization</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell cols="2">~+</cell><cell>+</cell><cell>+</cell><cell>9</cell></row><row><cell>Commonality</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell>6</cell></row><row><cell>Filter</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell>7</cell></row><row><cell>Valid partial configuration</cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell cols="2">~5</cell></row><row><cell>Atomic sets</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>4</cell></row><row><cell>False optional features</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell cols="2">~6</cell></row><row><cell>Corrective explanations</cell><cell></cell><cell></cell><cell></cell><cell cols="5">~+</cell><cell></cell><cell>3</cell></row><row><cell>Dependency analysis</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>2</cell></row><row><cell>ECR</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>2</cell></row><row><cell>Generalization</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell>2</cell></row><row><cell>Core features</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>2</cell></row><row><cell>Variability</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell cols="2">~3</cell></row><row><cell>Arbitrary edit</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>1</cell></row><row><cell>Conditional dead features</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>1</cell></row><row><cell>Homogeneity</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>1</cell></row><row><cell>LCA</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>1</cell></row><row><cell>Muti-step configuration</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>1</cell></row><row><cell>Roots</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>1</cell></row><row><cell>Specialization</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>1</cell></row><row><cell>Degree</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>of orthogonality ~1 Redundancies ~1 Variant features ~1 Wrong cardinalities ~1</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="7">research community to accurately define analysis opera-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>tions.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>New operations</cell><cell>6</cell><cell>2</cell><cell>0</cell><cell>6</cell><cell>4</cell><cell>1</cell><cell>0</cell><cell>4</cell><cell>7</cell><cell>3 0</cell></row><row><cell>Notation and formalization</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Basic FMs</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>40</cell></row><row><cell>Cardinality-based FMs</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>13</cell></row><row><cell>Extended feature models</cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>13</cell></row><row><cell>Formalization</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>22</cell></row><row><cell>Support</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Propositional logic</cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>18</cell></row><row><cell>Constraint programming</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>12</cell></row><row><cell>Description logic</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell>4</cell></row><row><cell>Others</cell><cell>+</cell><cell>+</cell><cell>+</cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell><cell>16</cell></row><row><cell>1 study</cell><cell></cell><cell>2-3 studies</cell><cell></cell><cell cols="2">&gt; 3 studies</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc>Summary of the proposals reporting explanations.</figDesc><table><row><cell>Von der Massen</cell><cell>et al. [89]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Trinidad</cell><cell>et al. [80]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Batory</cell><cell>et al. [7]</cell><cell>o N</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Van den Broek</cell><cell>et al. [84]</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Osman et al.</cell><cell>[59,60]</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Kang et al.</cell><cell>[43]</cell><cell>s r e h t O</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Wang et al.</cell><cell>[92,93]</cell><cell></cell><cell>+</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Abo Zaid</cell><cell>et al. [1]</cell><cell>L D</cell><cell></cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>White</cell><cell>et al. [99]</cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Trinidad et al.</cell><cell>[78,76]</cell><cell>P C</cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Sun et al.</cell><cell>[74]</cell><cell></cell><cell>+</cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Czarnecki</cell><cell>et al. [30]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Batory</cell><cell>[5]</cell><cell>L P</cell><cell>+</cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Valid product</cell><cell>Void feature</cell><cell>model</cell><cell>s e r u t a e f d a e D</cell><cell>Valid partial</cell><cell>configuration</cell><cell>l a n o i t p o e s l a F</cell><cell>Dependency</cell><cell>analysis</cell><cell>Core features</cell><cell>Optimization</cell><cell>Redundancies</cell><cell>Variant features</cell><cell>Wrong</cell><cell>cardinalities</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc>Summary of the studies reporting performance results for analysis operations.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Gheyi</cell><cell>Mendonca</cell><cell>Thu ¨m</cell><cell>Zhang</cell><cell>Yan</cell><cell cols="2">Benavides</cell><cell>Benavides</cell><cell>White</cell><cell>White</cell><cell>Wang</cell><cell>Benavides</cell><cell>Segura</cell><cell>Hemakumar</cell><cell>Mendonca</cell><cell>Osman</cell><cell>White</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>et al.</cell><cell>et al. [56]</cell><cell>et al.</cell><cell>et al.</cell><cell>et al.</cell><cell cols="2">et al. [10-12]</cell><cell>et al. [15]</cell><cell>et al. [99]</cell><cell>et al. [97]</cell><cell>et al.</cell><cell>et al. [14]</cell><cell>[70]</cell><cell>[41]</cell><cell>et al. [55]</cell><cell>et al. [60]</cell><cell>et al.</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>[37]</cell><cell></cell><cell>[75]</cell><cell>[103]</cell><cell>[100]</cell><cell></cell><cell></cell><cell>[93]</cell><cell>[98,96]</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>L P</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>C</cell><cell>P</cell><cell>D</cell><cell>L</cell><cell>M</cell><cell>u</cell><cell>l</cell><cell>t</cell><cell>i</cell><cell>O</cell><cell>t</cell><cell>s r e h</cell></row><row><cell cols="9">Void feature</cell><cell></cell><cell>+</cell><cell></cell><cell>+</cell><cell>+</cell><cell></cell><cell></cell><cell>+</cell><cell>+</cell><cell>+</cell></row><row><cell cols="9">model #Products Dead features Valid product s t c u d o r p l l A Explanations g n i r o t c a f e R Optimization Atomic sets Corrective explanations Dependency analysis n o i t a z i l a r e n e G t i d e y r a r t i b r A Conditional dead features</cell><cell>+ + + +</cell><cell></cell><cell>+ + +</cell><cell></cell><cell></cell><cell cols="2">+</cell><cell>+</cell><cell>+ +</cell><cell>+ +</cell><cell>+</cell><cell>+ +</cell><cell>+</cell><cell>+</cell><cell>+ +</cell><cell>+</cell><cell>D. Benavides et al. / Information Systems 35 (2010) 615-636</cell></row><row><cell cols="7">Muti-step</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>+</cell></row><row><cell cols="9">configuration</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>i c e p S</cell><cell>a</cell><cell>l</cell><cell>i</cell><cell>z</cell><cell>a</cell><cell>t</cell><cell>i</cell><cell>n o</cell><cell></cell><cell></cell><cell>+</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>D. Benavides et al. / Information Systems 35 (2010) 615-636</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We would like to thank Lamia Abo Zaid, Don Batory, Deepak Dhungana, David Ferna ´ndez-Amoro ´s, Jose Galindo, Ruben Heradio, Christian Ka ¨stner, Abdelrahman Osman Elfaki, Anna Queralt, Fabricia C. Roos, Ernest Teniente, Thomas Thum, Pablo Trinidad, Pim Van den Broek and Wei Zhang for their helpful commments in earlier versions of this article. This work has been partially supported by the European Commission (FEDER) and Spanish Government under CICYT projects SETI (TIN2009-07366) and WebFactories (TIN2006-00472) and by the Andalusian Government under ISABEL project (TIC-2533).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARTICLE IN PRESS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 2</head><p>CSP based tools used for FM analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tool Proposals</head><p>JaCoP <ref type="bibr">[33] [14-16,70</ref>] Choco <ref type="bibr" target="#b19">[21]</ref> [15,99,97] OPL studio <ref type="bibr" target="#b55">[58]</ref> [10-12] GNU prolog <ref type="bibr">[39]</ref> [34] Not specified <ref type="bibr" target="#b74">[78,</ref><ref type="bibr" target="#b72">76]</ref> Appendix. Supplementary data Supplementary data associated with this article can be found in the online version at doi:10.1016/ j.is.2010.01.001.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Applying semantic web technology to feature modeling</title>
		<author>
			<persName><forename type="first">L</forename><surname>Abo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Kleinermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">De</forename><surname>Troyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SAC &apos;09: Proceedings of the 2009 ACM Symposium on Applied Computing</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1252" to="1256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Baader</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Calvanese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Mcguinness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
		<title level="m">The Description Logic Handbook: Theory Implementation and Applications</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Patel-Schneider</surname></persName>
		</editor>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A conceptual graph approach to feature modeling</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bachmeyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Delugach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conceptual Structures: Knowledge Architectures for Smart Applications, 15th International Conference on Conceptual Structures, ICCS</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="179" to="191" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Feature models, grammars, and propositional formulas</title>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Product Lines Conference</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3714</biblScope>
			<biblScope unit="page" from="7" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A tutorial on feature oriented programming and the ahead tool suite</title>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Summer School on Generative and Transformation Techniques in Software Engineering</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Ruiz-Corte ´s, Automated analysis of feature models: challenges ahead</title>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM December</title>
		<imprint>
			<biblScope unit="page" from="45" to="47" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">On the automated analysis of software product lines using feature models, a framework for developing automated tool support</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
		<respStmt>
			<orgName>University of Seville</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Heymans</surname></persName>
		</author>
		<title level="m">First Workshop on Analyses of Software Product Lines</title>
		<editor>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2008-09">September 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Coping with automatic reasoning on software product lines</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd Groningen Workshop on Software Variability Management</title>
		<meeting>the 2nd Groningen Workshop on Software Variability Management</meeting>
		<imprint>
			<date type="published" when="2004-11">November 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Automated reasoning on feature models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advanced Information Systems Engineering: 17th International Conference, CAiSE</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3520</biblScope>
			<biblScope unit="page" from="491" to="503" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Using constraint programming to reason on feature models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Seventeenth International Conference on Software Engineering and Knowledge Engineering, SEKE 2005</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="677" to="682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Ruiz-Corte ´s, Automated analysis of feature models: a detailed literature review</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
		<idno>ISA-09-TR-04</idno>
		<ptr target="http://" />
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
		<respStmt>
			<orgName>SA Research Group</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Ruiz-Corte ´s, A first step towards a framework for the automated analysis of feature models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Managing Variability for Software Product Lines: Working With Variability Mechanisms</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Ruiz-Cortee ´s, Using java CSP solvers in the automated analyses of feature models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">4143</biblScope>
			<biblScope unit="page" from="389" to="398" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">FAMA: tooling a framework for the automated analysis of feature models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of the First International Workshop on Variability Modelling of Software-intensive Systems (VAMOS)</title>
		<meeting>eeding of the First International Workshop on Variability Modelling of Software-intensive Systems (VAMOS)</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="129" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Le</forename><surname>Berre</surname></persName>
		</author>
		<ptr target="http://www.sat4j.orgS" />
		<title level="m">SAT4J solver</title>
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Improving the variable ordering of OBDDs is NP-complete</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bollig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Wegener</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="993" to="1002" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Graph-based algorithms for boolean function manipulation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bryant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="677" to="691" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Automating feature-oriented domain analysis</title>
		<author>
			<persName><forename type="first">F</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bryant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Burt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Raje</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Olson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Auguston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Software Engineering Research and Practice (SERP&apos;03)</title>
		<imprint>
			<date type="published" when="2003-06">June 2003</date>
			<biblScope unit="page" from="944" to="949" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName><surname>Choco Solver</surname></persName>
		</author>
		<ptr target="http://choco.emn.fr/S" />
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<ptr target="http://clarkparsia.com/pellet/S" />
		<title level="m">Clark and Parsiam Pellet: the open source owl reasoner</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">What&apos;s in a feature: a requirements engineering perspective</title>
		<author>
			<persName><forename type="first">A</forename><surname>Classen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Heymans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Y</forename><surname>Schobbens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Fundamental Approaches to Software Engineering</title>
		<imprint>
			<biblScope unit="volume">4961</biblScope>
			<biblScope unit="page" from="16" to="30" />
			<date type="published" when="2008">2008</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Software product lines: practices and patterns</title>
		<author>
			<persName><forename type="first">P</forename><surname>Clements</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Northrop</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SEI Series in Software Engineering</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The complexity of theorem-proving procedures</title>
		<author>
			<persName><forename type="first">S</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference Record of Third Annual ACM Symposium on Theory of Computing</title>
		<imprint>
			<date type="published" when="1971">1971</date>
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Generative programming for embedded software: an industrial experience report</title>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bednasch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Unger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Eisenecker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN/SIGSOFT Conference</title>
		<imprint>
			<biblScope unit="page" from="156" to="172" />
			<date type="published" when="2002">2002</date>
			<publisher>GPCE</publisher>
		</imprint>
		<respStmt>
			<orgName>Generative Programming and Component Engineering</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">W</forename><surname>Eisenecker</surname></persName>
		</author>
		<title level="m">Generative Programming: Methods, Techniques, and Applications</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Formalizing cardinalitybased feature models and their specialization</title>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Helsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Eisenecker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Software Process: Improvement and Practice</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="7" to="29" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Staged configuration through specialization and multilevel configuration of feature models</title>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Helsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Eisenecker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Software Process: Improvement and Practice</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="143" to="169" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kim</surname></persName>
		</author>
		<title level="m">Proceedings of the International Workshop on Software Factories at OOPSLA 2005</title>
		<meeting>the International Workshop on Software Factories at OOPSLA 2005</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note>Cardinality-based feature modeling and constraints: a progress report</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Sample spaces and feature models: there and back again</title>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>She</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wasowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Software Product Line Conference (SPLC)</title>
		<meeting>the Software Product Line Conference (SPLC)</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="22" to="31" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">OWL web ontology language reference, W3C recommendation, W3C</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Schreiber</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-02">February 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">JaCoP development team</title>
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Deriving product line requirements: the red-pl guidance approach</title>
		<author>
			<persName><forename type="first">O</forename><surname>Djebbi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Salinesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Diaz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th Asia-Pacific Software Engineering Conference (APSEC)</title>
		<meeting><address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="494" to="501" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Feature model based on description logics, Knowledge-Based Intelligent Information and Engineering Systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th International Conference, KES, Part II</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4252</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Inferring information from feature diagrams to product line economic models</title>
		<author>
			<persName><forename type="first">D</forename><surname>Fernandez-Amoros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Heradio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cerrada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Software Product Line Conference</title>
		<meeting>the Software Product Line Conference</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A theory for feature models in alloy</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gheyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Massoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Borba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGSOFY First Alloy Workshop</title>
		<meeting>the ACM SIGSOFY First Alloy Workshop<address><addrLine>Portland, United States</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-11">November 2006</date>
			<biblScope unit="page" from="71" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Algebraic laws for feature models</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gheyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Massoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Borba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Universal Computer Science</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">21</biblScope>
			<biblScope unit="page" from="3573" to="3591" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Greenfield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Short</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kent</surname></persName>
		</author>
		<title level="m">Software Factories: Assembling Applications with Patterns, Models, Frameworks, and Tools</title>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Finding contradictions in feature models</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hemakumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First International Workshop on Analyses of Software Product Lines (ASPL&apos;08)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="183" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Evaluating formal properties of feature diagram languages</title>
		<author>
			<persName><forename type="first">P</forename><surname>Heymans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Y</forename><surname>Schobbens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Trigaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bontemps</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Matulevicius</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Classen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Software IET</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="281" to="302" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Feature-oriented domain analysis (FODA) feasibility study</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Novak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Peterson</surname></persName>
		</author>
		<idno>CMU/ SEI-90-TR-21</idno>
		<imprint>
			<date type="published" when="1990-11">November 1990</date>
		</imprint>
		<respStmt>
			<orgName>Software Engineering Institute, Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">FORM: a featureoriented reuse method with domain-specific reference architectures</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Huh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Software Engineering</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="143" to="168" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">A case study implementing features using aspect</title>
		<author>
			<persName><forename type="first">C</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Apel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPLC &apos;07: Proceedings of the 11th International Software Product Line Conference</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="223" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Procedures for performing systematic reviews</title>
		<author>
			<persName><forename type="first">B</forename><surname>Kitchenham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
		<respStmt>
			<orgName>Keele University and NICTA</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A meta-environment for generating programming environments</title>
		<author>
			<persName><forename type="first">P</forename><surname>Klint</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Software Engineering and Methodology</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="176" to="201" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Domain analysis of e-commerce systems using featurebased model templates</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Q</forename><surname>Lau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Canada</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
		<respStmt>
			<orgName>Department of ECE, University of Waterloo</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s Thesis</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Optimization of variability in software product lines</title>
		<author>
			<persName><forename type="first">F</forename><surname>Loesch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Ploedereder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th International Software Product Line Conference</title>
		<meeting>the 11th International Software Product Line Conference<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="151" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A standard problem for evaluating product-line methodologies</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Lopez-Herrejon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GCSE &apos;01: Proceedings of the Third International Conference on Generative and Component-Based Software Engineering</title>
		<meeting><address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="10" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Using first-order logic for product line model validation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mannion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second Software Product Line Conference (SPLC&apos;02)</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<meeting>the Second Software Product Line Conference (SPLC&apos;02)<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2379</biblScope>
			<biblScope unit="page" from="176" to="187" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Theorem proving for product line model verification, Software Product-Family Engineering (PFE)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mannion</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Camara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">3014</biblScope>
			<biblScope unit="page" from="211" to="224" />
			<date type="published" when="2003">2003</date>
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Formalization and implementation of modern sat solvers</title>
		<author>
			<persName><forename type="first">F</forename><surname>Maric</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Automated Reasoning</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="81" to="119" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Decision-making coordination in collaborative product configuration</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mendonc -A</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">T</forename><surname>Bartolomei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cowan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 ACM Symposium on Applied Computing (SAC &apos;08)</title>
		<meeting>the 2008 ACM Symposium on Applied Computing (SAC &apos;08)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="108" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Collaborative product configuration: formalization and efficient algorithms for dependency analysis</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mendonc -A</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D</forename><surname>Cowan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Malyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Oliveira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Software</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="69" to="82" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">SAT-based analysis of feature models is easy</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mendonc -A</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wasowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sofware Product Line Conference</title>
		<meeting>the Sofware Product Line Conference</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Efficient compilation techniques for large scale feature models</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mendonc -A</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wasowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cowan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Generative Programming and Component Engineering, 7th International Conference</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="13" to="22" />
		</imprint>
	</monogr>
	<note>GPCE</note>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title/>
		<author>
			<persName><surname>Opl</surname></persName>
		</author>
		<ptr target="http://www.ilog.com/products/oplstudio/S" />
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Knowledge based method to validate feature models</title>
		<author>
			<persName><forename type="first">A</forename><surname>Osman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Phon-Amnuaisuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First International Workshop on Analyses of Software Product Lines</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="217" to="225" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Using first order logic to validate feature model</title>
		<author>
			<persName><forename type="first">A</forename><surname>Osman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Phon-Amnuaisuk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Ho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Third International Workshop on Variability Modelling in Software-intensive Systems</title>
		<meeting><address><addrLine>VaMoS</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="169" to="172" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Building the core architecture of a multiagent system product line: with an example from a future NASA mission</title>
		<author>
			<persName><forename type="first">J</forename><surname>Pena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hinchey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th International Workshop on Agent Oriented Software Engineering</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Bo ¨ckle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Van Der Linden</surname></persName>
		</author>
		<title level="m">Software Product Line Engineering: Foundations, Principles, and Techniques</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">A theory of diagnosis from first principles</title>
		<author>
			<persName><forename type="first">R</forename><surname>Reiter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="57" to="95" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<monogr>
		<title level="m" type="main">Extending feature diagrams with UML multiplicities, in: 6th World Conference on Integrated Design and Process Technology (IDPT2002)</title>
		<author>
			<persName><forename type="first">M</forename><surname>Riebisch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Bo ¨llert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Streitferdt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Philippow</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Vmware: tool support for automatic verification of structural and semantic correctness in product line models</title>
		<author>
			<persName><forename type="first">C</forename><surname>Salinesi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rolland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mazo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Third International Workshop on Variability Modelling of Software-intensive Systems</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="173" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">A customizable approach to full lifecycle variability management</title>
		<author>
			<persName><forename type="first">K</forename><surname>Schmid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>John</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science of Computer Programming</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="259" to="284" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Feature diagrams: a survey and a formal semantics</title>
		<author>
			<persName><forename type="first">P</forename><surname>Schobbens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Heymans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Trigaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bontemps</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th IEEE International Requirements Engineering Conference (RE&apos;06)</title>
		<meeting>the 14th IEEE International Requirements Engineering Conference (RE&apos;06)<address><addrLine>Minneapolis, Minnesota, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-09">September 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Generic semantics of feature diagrams</title>
		<author>
			<persName><forename type="first">P</forename><surname>Schobbens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Trigaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Heymans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bontemps</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="456" to="479" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Automated analysis of feature models using atomic sets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First Workshop on Analyses of Software Product Lines (ASPL 2008). SPLC&apos;08</title>
		<meeting><address><addrLine>Limerick, Ireland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-09">September 2008</date>
			<biblScope unit="page" from="201" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<monogr>
		<title/>
		<author>
			<persName><surname>Smv</surname></persName>
		</author>
		<ptr target="http://www.cs.cmu.edu/$modelcheckS" />
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<monogr>
		<title level="m" type="main">Introducing pla at bosch gasoline systems: experiences and practices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Steger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tischer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Boss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mu ¨ller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Pertler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Stolz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ferber</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>SPLC</publisher>
			<biblScope unit="page" from="34" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Details of formalized relations in feature models using OCL</title>
		<author>
			<persName><forename type="first">D</forename><surname>Streitferdt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Riebisch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Philippow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 10th IEEE International Conference on Engineering of Computer-Based Systems (ECBS 2003)</title>
		<meeting>10th IEEE International Conference on Engineering of Computer-Based Systems (ECBS 2003)<address><addrLine>Huntsville, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="45" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<analytic>
		<title level="a" type="main">Formal semantics and verification for feature modeling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">F</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS)</title>
		<meeting>the 10th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Thu ¨m</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ka ¨stner</surname></persName>
		</author>
		<title level="m">International Conference on Software Engineering</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="254" to="264" />
		</imprint>
	</monogr>
	<note>Reasoning about edits to feature models</note>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Automated error analysis for the agilization of feature modeling</title>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dura ´n</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Toro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="883" to="896" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">Ruiz-Corte ´s, Improving decision making in software product lines product plan management</title>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the V ADIS 2004 Workshop on Decision Support in Software Engineering</title>
		<meeting>the V ADIS 2004 Workshop on Decision Support in Software Engineering</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">120</biblScope>
		</imprint>
	</monogr>
	<note>CEUR Workshop Proceedings (CEUR-WS.org)</note>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Ruiz-Corte ´s, A first step detecting inconsistencies in feature models</title>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">CAiSE Short Paper Proceedings</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">FaMa framework</title>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Corte ´s</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Segura</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jimenez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th Software Product Lines Conference (SPLC)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page">12</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<analytic>
		<title level="a" type="main">Ruiz Corte ´s, Abductive reasoning and automated analysis of feature models: how are they connected? in: Third International Workshop on Variability Modelling of Software-Intensive Systems</title>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings</title>
		<imprint>
			<biblScope unit="page" from="145" to="153" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Feature oriented model driven development: a case study for portlets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Trujillo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Batory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Dı ´az</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Software Engineering</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="44" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Tsang</surname></persName>
		</author>
		<title level="m">Foundations of Constraint Satisfaction</title>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title level="m" type="main">Mass customization, Handbook of Industrial Engineering: Technology and Operations Management</title>
		<author>
			<persName><forename type="first">M</forename><surname>Tseng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jiao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Wiley</publisher>
			<biblScope unit="page">685</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Analysis of feature models using generalised feature trees</title>
		<author>
			<persName><forename type="first">P</forename><surname>Van Den Broek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Galvao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Third International Workshop on Variability Modelling of Software-intensive Systems</title>
		<meeting><address><addrLine>Essen, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-01">January 2009</date>
			<biblScope unit="page" from="29" to="35" />
		</imprint>
		<respStmt>
			<orgName>Universita ¨t Duisburg-Essen</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">ICB-Research Report</note>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Van Der Linden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Schmid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Rommes</surname></persName>
		</author>
		<title level="m">Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering</title>
		<meeting><address><addrLine>New York, Inc., Secaucus, NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<author>
			<persName><forename type="first">T</forename><surname>Van Der Storm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Variability and component composition, Software Reuse: Methods, Techniques and Tools: 8th International Conference</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3107</biblScope>
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
	<note>ICSR 2004. Proceedings</note>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Generic feature-based software composition, Software Composition</title>
		<author>
			<persName><forename type="first">T</forename><surname>Van Der Storm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<biblScope unit="volume">4829</biblScope>
			<biblScope unit="page" from="66" to="80" />
			<date type="published" when="2007">2007</date>
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Domain-specific language design requires feature descriptions</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Deursen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Klint</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computing and Information Technology</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="17" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Deficiencies in feature models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Der Massen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">H</forename><surname>Lichter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Software Variability Management for Product Derivation-Towards Tool Support</title>
		<editor>
			<persName><forename type="first">T</forename><surname>Mannisto</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Bosch</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Requiline: a requirements engineering tool for software product lines</title>
		<author>
			<persName><forename type="first">T</forename><surname>Der Massen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lichter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth International Workshop on Product Family Engineering (PFE)</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<editor>
			<persName><forename type="first">F</forename><surname>Van Der Linden</surname></persName>
		</editor>
		<meeting>the Fifth International Workshop on Product Family Engineering (PFE)<address><addrLine>Siena, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">3014</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Determining the variation degree of feature models</title>
		<author>
			<persName><forename type="first">T</forename><surname>Der Massen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Litcher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Product Lines Conference</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">3714</biblScope>
			<biblScope unit="page" from="82" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">A semantic web approach to feature modeling and verification</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Semantic Web Enabled Software Engineering (SWESE&apos;05)</title>
		<imprint>
			<date type="published" when="2005-11">November 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">Verifying feature models using OWL</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">F</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Un</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Web Semantics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="117" to="129" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<analytic>
		<title level="a" type="main">Analyzing the past to prepare for the future: writing a literature review</title>
		<author>
			<persName><forename type="first">J</forename><surname>Webster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Watson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIS Quarterly</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="xiii" to="xxiii" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">J</forename><surname>Whaley</surname></persName>
		</author>
		<ptr target="http://javabdd.sourceforge.net/S" />
		<imprint>
			<date type="published" when="2010-01">January 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<analytic>
		<title level="a" type="main">Selecting highly optimal architectural feature sets with filtered cartesian flattening</title>
		<author>
			<persName><forename type="first">J</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Doughtery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1268" to="1284" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Automated reasoning for multi-step software product-line configuration problems</title>
		<author>
			<persName><forename type="first">J</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Doughtery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sofware Product Line Conference</title>
		<meeting>the Sofware Product Line Conference</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<analytic>
		<title level="a" type="main">Filtered cartesian flattening: an approximation technique for optimally selecting features while adhering to resource constraints</title>
		<author>
			<persName><forename type="first">J</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First International Workshop on Analyses of Software Product Lines (ASPL)</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">Automated diagnosis of product-line configuration errors in feature models</title>
		<author>
			<persName><forename type="first">J</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Benavides</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Trinidad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ruiz-Cortes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sofware Product Line Conference</title>
		<meeting>the Sofware Product Line Conference</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<monogr>
		<title level="m" type="main">An optimization strategy to feature models&apos; verification by eliminating verification-irrelevant features and constraints</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mei</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>ICSR</publisher>
			<biblScope unit="page" from="65" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Feature-driven requirement dependency analysis and high-level software design</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Requirements Engineering</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="205" to="220" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b98">
	<analytic>
		<title level="a" type="main">A propositional logic-based method for verification of feature models</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Mei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICFEM 2004 of Lecture Notes in Computer Sciences</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Davies</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3308</biblScope>
			<biblScope unit="page" from="115" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">A bdd-based approach to verifying clone-enabled feature models&apos; constraints and customization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">High Confidence Software Reuse in Large Systems, 10th International Conference on Software Reuse, ICSR, Proceedings</title>
		<title level="s">Lecture Notes in Computer Sciences</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5030</biblScope>
			<biblScope unit="page" from="186" to="199" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
