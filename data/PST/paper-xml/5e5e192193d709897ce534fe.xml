<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Approximation Attacks on Strong PUFs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Student Member, IEEE</roleName><forename type="first">Junye</forename><surname>Shi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Student Member, IEEE</roleName><forename type="first">Yang</forename><surname>Lu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Jiliang</forename><surname>Zhang</surname></persName>
							<email>zhangjiliang@hnu.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">)</forename><forename type="middle">J</forename><surname>Shi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Electronic Engineering</orgName>
								<orgName type="institution">Hunan University</orgName>
								<address>
									<postCode>410082</postCode>
									<settlement>Changsha</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Approximation Attacks on Strong PUFs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">356AD7AD224B6CDF51562041CEB25602</idno>
					<idno type="DOI">10.1109/TCAD.2019.2962115</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Physical Unclonable Function</term>
					<term>Machine Learning</term>
					<term>Artificial Neural Network</term>
					<term>Modeling Attacks</term>
					<term>Cryptanalysis</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Physical unclonable function (PUF) is a promising lightweight hardware security primitive for resource-constrained systems. It can generate a large number of challenge-response pairs (CRPs) for device authentication based on process variations. However, attackers can collect the CRPs to build a machine learning (ML) model with high prediction accuracy for the PUF. Recently, a lot of ML-resistant PUF structures have been proposed, e.g., a multiplexer-based PUF (MPUF) was introduced to resist ML attacks and its two variants (rMPUF and cMPUF) were further proposed to resist reliability-based and cryptanalysis modeling attacks, respectively. In this paper, we propose a general framework for ML attacks on strong PUFs, then based on the framework, we present two novel modeling attacks, named logical approximation and global approximation, that use artificial neural network (ANN) to characterize the nonlinear structure of MPUF, rMPUF, cMPUF and XOR Arbiter PUF. The logical approximation method uses linear functions to approximate logical operations and builds a precise soft model based on the combination of logical gates in the PUF. The global approximation method uses the function sinc with filtering characteristics to fit the mapping relationship between the challenge and response. Experimental results show that the proposed two approximation attacks can successfully model the (n, k)-MPUF (k = 3, 4), (n, k)-rMPUF (k = 2, 3), cMPUF (k = 4, 5) and l-XOR Arbiter PUF (l = 3, 4, 5) (n = 32, 64) with the average accuracies of 96.85%, 95.33%, 94.52% and 96.26%, respectively.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>T HE Internet of things (IoT) is a network that connects ubiquitous devices and terminals including various sensors, smart devices, mechanical and electronic components through wired or wireless networks <ref type="bibr" target="#b0">[1]</ref>. According to IoT Analytics estimates <ref type="bibr" target="#b1">[2]</ref>, there were about 7 billion connected IoT devices at the end of 2018. Most of those devices are connected via short range protocols (WPAN or WLAN). The number of total connected IoT devices is expected to reach 22 billion by 2025. IoT Security Market Report 2017-2022 <ref type="bibr" target="#b2">[3]</ref> pointed out that the total spending of IoT security was 703 million dollars in 2017, reached 1,001 million dollars in 2018 and was estimated at about 1,439 million dollars in 2019. Security issues have governed the sustainable development of the IoT. Device authentication is a key technology to address IoT security issues. Traditional device authentications are based on high-complexity encryption/decryption algorithms and high-cost key storage technologies. However, in many IoT applications, resources like CPU, memory, and battery power are limited. Therefore, lightweight solutions are urgent.</p><p>Physical unclonable function (PUF) <ref type="bibr" target="#b3">[4]</ref> is an alternative lightweight solution for various applications such as IP protection <ref type="bibr" target="#b4">[5]</ref>, software security <ref type="bibr" target="#b5">[6]</ref>, anti-overbuilding <ref type="bibr" target="#b6">[7]</ref> and key-sharing <ref type="bibr" target="#b8">[8]</ref>. PUFs can extract unique secret keys from the physical characteristics of the chip, or generate a large number of CRPs for device authentication based on physical interaction which is extremely hard to reproduce using a challenge and response procedure. Entropy of the physical interaction is derived from physical random variations caused by manufacturing process, which improves the ability to resist physical attacks and has the potential to be more efficient in IoT since costly physical protection measures can be avoided <ref type="bibr" target="#b9">[9]</ref>. Since the PUF was first introduced in 2002 <ref type="bibr" target="#b10">[10]</ref>, a lot of PUF structures have been proposed. Current PUFs can be classed into the weak PUFs <ref type="bibr" target="#b11">[11]</ref>, <ref type="bibr" target="#b12">[12]</ref>, <ref type="bibr" target="#b13">[13]</ref>, <ref type="bibr" target="#b14">[14]</ref> and strong PUFs <ref type="bibr" target="#b15">[15]</ref>, <ref type="bibr" target="#b16">[16]</ref>, <ref type="bibr" target="#b17">[17]</ref>, <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b19">[19]</ref> according to the number of CRPs. A weak PUF has a very limited CRPs space, which can be used as unique keys for encryption systems. A strong PUF has an exponential number of unique CRPs and a complex input-output relationship and hence suitable for lightweight device authentication. However, strong PUFs are vulnerable to machine learning (ML) attacks <ref type="bibr" target="#b20">[20]</ref>, <ref type="bibr" target="#b21">[21]</ref>, <ref type="bibr" target="#b22">[22]</ref>. Attackers can collect a subset of CRPs from a strong PUF instance and use ML algorithms to build a mathematical model to predict response for arbitrary challenge with a high accuracy. Once the mapping relationship between the challenge and response is modeled, PUF will no longer be unclonable.</p><p>In order to resist ML attacks, a large number of defenses have been proposed <ref type="bibr" target="#b19">[19]</ref>, <ref type="bibr">[23]</ref>, <ref type="bibr" target="#b24">[24]</ref>, <ref type="bibr" target="#b12">[12]</ref>. Recently, multiplexer-based PUF (MPUF) and its two variants rMPUF and cMPUF <ref type="bibr" target="#b17">[17]</ref> were proposed to prevent advanced ML attacks. However, in this paper, we analyze the structural characteristics of MPUFs in detail and prove that they can still be broken. Additionally, we propose a general framework for ML attacks on strong PUFs and present two advanced approximation attacks based on the framework, named logical approximation and global approximation. The logical approximation uses linear functions to approximate basic logical operations including AND, OR, and NOT, then builds an artificial neural network (ANN) model for the logical structure of MPUF. The global approximation uses the function sinc(x) with filtering characteristics to model the mapping relationship between the input and output of MUX. The two approximation attacks model the MPUF and its variants from the local 1556-6013 c 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.</p><p>See http://www.ieee.org/publications standards/publications/rights/index.html for more information.</p><p>and global aspects, respectively, which provides a general framework to conduct modeling attacks on strong PUFs: for a PUF with a simple logical gate combination in the structure, the logical operation can be approximated to a simpler linear equation; for a PUF with highly complex internal logical relationship, a mathematical function can be used to describe the mapping relationship between the challenge and response.</p><p>The main contributions are as follows. <ref type="bibr" target="#b0">1)</ref> We analyze the working principle and structural characteristics of MPUF family, and reevaluate their security.</p><p>In addition, we present accurate mathematical models for them. The rest of this paper is organized as follows. Section II introduces ANN and modeling attacks on the Arbiter PUF and XOR Arbiter PUF. Section III describes the security and mathematical analysis for MPUF and its variants. Section IV demonstrates the ML attacks on MPUF, rMPUF, cMPUF and XOR Arbiter PUF. The experimental results and analysis are given in Section V. Related work is elaborated in Section VI. Finally, a conclusion is made in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PRELIMINARIES</head><p>In this section, we will describe the ANN which is used to model MPUF family and introduce the modeling attack on Arbiter PUF and XOR Arbiter PUF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. ANN</head><p>ANN is a computing system vaguely inspired by the biological neural networks that constitute animal brains <ref type="bibr" target="#b25">[25]</ref>. It uses the knowledge of network topology as the theoretical basis to simulate the processing of complex information in a human brain. ANN consists of a large number of interconnected neurons. Each neuron represents a specific output function called activation function. The connection between two neurons is called weight that is equivalent to the memory of the neural network. For each neuron, input vectors are weighted, added, biased, and input to an activation function to generate an output. During the training of ANN, neurons update weights and biases based on the feedback function of the prediction error derived from the training set, and finally obtain a global optimal solution. ANN has high fault tolerance, self-adaptation, and parallel processing capabilities, hence it is suitable for modeling complex nonlinear PUF structures. A strong motivation to use the ANN-based modeling attack is that a feed-forward network with at least a single hidden layer is able to approximate any function with an activation function when the number of neurons is sufficient <ref type="bibr" target="#b26">[26]</ref>. Based on this universal approximation theorem, we propose two modeling attacks, named logical approximation attack and global approximation attack. Logical approximation attack is to approximate a logical operation in the circuit with a linear function, and then use a two-layer neural network based on the linear function to replace the corresponding logical gate. Each individual subnetwork is connected based on the combination of logical gates, and a large neural network is constructed to characterize the entire PUF logical structure. Global approximation attack is to determine a continuous function that can satisfy the mapping relationship between the challenge and response, and organize the neural network structure to approximate this function. More details will be introduced in section IV. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Arbiter PUF</head><p>Arbiter PUF is one of classic strong PUFs <ref type="bibr" target="#b15">[15]</ref>. The structure of Arbiter PUF is shown in Fig. <ref type="figure" target="#fig_0">1</ref>. An Arbiter PUF consists of two parallel n-stage multiplexer (MUX) chains. The challenges (C = c 1 , c 2 , c 3 . . . c n ) are the selection inputs of MUX chains. Two MUXes of the same stage share one selection input which determines whether the signal is transmitted in parallel or across. Therefore, the challenges divide the circuit into two independent propagation paths. A step signal T is given at the input side, after the propagation on two paths, an arbiter (D flip-flop) will receive two signals. 1-bit response r ∈ {0, 1} is generated according to the order of the two signals arriving at the arbiter. If the upper signal arrives at D side first, the response is 1, otherwise it is 0. In general, Arbiter PUF exploits the delay difference between two paths to generate a response.</p><p>The functionality of Arbiter PUF can be represented by an additive linear delay model <ref type="bibr" target="#b20">[20]</ref>. The total delay can be obtained by summating the propagation delay in each stage, which can be expressed as</p><formula xml:id="formula_0">∆ = - → ω T - → Φ ,<label>(1)</label></formula><p>where -→ ω is a feature vector that represents the propagation delay of each MUX in the Arbiter PUF, and</p><formula xml:id="formula_1">- → Φ is a function of n-bit challenge C: - → Φ ( - → C ) = (Φ 1 ( - → C ), Φ 2 ( - → C ), Φ 3 ( - → C ), . . . , Φ n ( - → C ), 1) T ,<label>(2)</label></formula><p>where</p><formula xml:id="formula_2">Φ j ( - → C ) = n i=j (1 -C i ), j = 1, 2, 3, ..., k.</formula><p>If ∆ &gt; 0, the output of Arbiter PUF r will be 1, otherwise, r will be The set of all data inputs R s</p><p>The set of all selection inputs 0. For convenience, we use t = 2 * r -1 (t ∈ {-1, 1}) to represent the output:</p><formula xml:id="formula_3">t = sgn(∆) = sgn( - → ω T - → Φ ).<label>(3)</label></formula><p>An ML algorithm is used to fit -→ ω that shows the practical delay vector of physical PUF architecture. It is verified that the delay vector -→ ω of each stage in the Arbiter PUF can be learned within limited CRPs. The general assumption is that such ML attack requires less than 10% of the total CRPs <ref type="bibr" target="#b27">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. XOR Arbiter PUF</head><p>In order to resist ML attacks, non-linear components such as XOR gates are introduced into the PUF structure. For example, in the XOR Arbiter PUF (XOR PUF for short) <ref type="bibr" target="#b28">[28]</ref>, the responses of multiple Arbiter PUFs are XORed as the final response. XOR gates can increase the complexity of PUF structure significantly, but it can still be modeled with a high accuracy by advanced ML attacks.</p><p>An XOR PUF with l individual Arbiter PUFs is denoted by l-XOR PUF. The individual outputs of Arbiter PUF is denoted by t i ∈ {-1, 1}, i = 0, 1, 2, ..., l -1. The l-stage XOR gate is used to XOR all t i to get the final response</p><formula xml:id="formula_4">t XOR = l-1 i=0 (t i ).</formula><p>Assuming that all Arbiter PUFs share the same challenges Φ and each Arbiter PUF has a unique delay feature vector -→ ω i , t XOR can be expressed as</p><formula xml:id="formula_5">t XOR = sgn( l-1 i=0 - → ω T - → Φ ).<label>(4)</label></formula><p>It is well-known that environmental factors such as supply voltage and temperature have a negative influence on the reliability of Arbiter PUF <ref type="bibr" target="#b29">[29]</ref>. An l-XOR PUF aggregates the unreliability of l Arbiter PUFs so that the reliability decreases exponentially with the number of XORs <ref type="bibr" target="#b30">[30]</ref>. In <ref type="bibr" target="#b31">[31]</ref>, Becker proposed a reliability-based ML attack on XOR PUF, which will be discussed in detail in Section VI.</p><formula xml:id="formula_6">MUX 1 A d 2 1 A  k d 0 A s 1 A s 1 A  k s c o 1 d R k s R 0 A d 0 d R 2 1  k d R Fig. 2.</formula><p>The structure of (n, k)-MPUF <ref type="bibr" target="#b17">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. SECURITY AND MATHEMATICAL ANALYSIS FOR MPUF</head><p>In this section, we will introduce the MPUF and its two variants, rMPUF and cMPUF <ref type="bibr" target="#b17">[17]</ref>, then reevaluate their security. Finally, the detailed mathematical analysis for MPUFs will be given.  <ref type="table">I</ref>. According to R s , the 2 k × 1 MUX selects 1bit response from R d as the output. In this case, R s and R d are generated from independent Arbiter PUF instances. In the obfuscated MPUF circuit, attackers can only collect the challenges but cannot get the responses from the underlying Arbiter PUF directly, i.e., attackers cannot access the inputs of the 2 k × 1 MUX directly to distinguish internal selection inputs and data inputs. Hence, it is difficult for attackers to model MPUF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Security Analysis for MPUFs</head><p>In <ref type="bibr" target="#b31">[31]</ref>, Becker proposed a novel reliability-based ML attack which exploits the reliability information of CRPs to model the XOR PUF. In an (n, k)-MPUF, 2 k -1 2 × 1 MUXes can be used to replace the 2 k × 1 MUX, and the MPUF structure is divided into k stages. For example, when k = 3, the structure of (n, 3)-MPUF is shown in Fig. <ref type="figure" target="#fig_2">3(a</ref>). In the i -th (i = 1, 2, 3, ..., k) stage, 2 × 1 MUXes will select half of the data inputs according to R s i-1 so that all selection inputs are inseparably linked to the response reliability of MPUF. A accurate model can be built with the reliability information for MPUF <ref type="bibr" target="#b17">[17]</ref>. Therefore, MPUF is vulnerable to the reliabilitybased ML attack.</p><p>2) rMPUF In <ref type="bibr" target="#b17">[17]</ref>, a robust variant rMPUF is proposed to resist the reliability-based ML attack, and the structure of an (n, 3)-rMPUF is shown in Fig. <ref type="figure" target="#fig_2">3(b)</ref>. Compared with MPUF, rMPUF increases the number of selection inputs from k to 2 k -1, and all the selection inputs for each 2 × 1 MUX are generated by different Arbiter PUFs. For an (n, k)-rMPUF, the data inputs are</p><formula xml:id="formula_7">R d i (i = 0, 1, 2, ..., 2 k -1) and selection inputs are R s i (i = 0, 1, 2, ..., 2 k -2).</formula><p>Hence, the number of Arbiter PUF in an (n, k)-rMPUF is 2 k+1 -1, and the attack complexity increases exponentially with k. The overhead of rMPUF should not be too high. Considering the hardware overhead, k = 3 is taken as the preferred value in practice <ref type="bibr" target="#b17">[17]</ref>. It is claimed that (n, 3)-rMPUF has better reliability and stronger resistance against modeling attack than 10-XOR PUF <ref type="bibr" target="#b17">[17]</ref>. However, the overhead of (n, 3)-rMPUF is 50% more than 10-XOR PUF.</p><p>In addition, this paper proves that (n, 3)-rMPUF can still be modeled with a high accuracy. Therefore, (n, 3)-rMPUF not only incurs high overhead but also shows low security.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) cMPUF</head><p>As shown in Fig. <ref type="figure">4</ref>, cMPUF is another MPUF variant proposed to resist linear cryptanalysis (LC) <ref type="bibr" target="#b17">[17]</ref>. Compared with MPUF, cMPUF changes the data inputs and introduces inverters to make half of the data inputs complement of the others.</p><p>LC is a mathematical method used to find a linear approximation on the PUF for predicting the response for an arbitrary challenge. The modeling attack based on the linear approximation is called linear approximation attack. Adding nonlinear components such as XOR gates into the PUF structure can resist the linear approximation attack <ref type="bibr" target="#b32">[32]</ref>, <ref type="bibr" target="#b28">[28]</ref>. In cMPUF, inverters are introduced to the structure so that the data inputs of each 2 × 1 MUX in Stage-1 are the response of Arbiter PUF and its inversion. Therefore, the function of each 2 × 1 MUX in the first stage is an XOR gate, and the output o of 2 × 1 MUX can be expressed as</p><formula xml:id="formula_8">o = ((!s)&amp;d)|(s&amp;(!d)) = s XOR d, (<label>5</label></formula><formula xml:id="formula_9">)</formula><p>where d is the 1-bit response of Arbiter PUF, s is the selection input, '!' denotes NOT, '&amp;' denotes AND, and '|' denotes OR. Adding an inverter is equivalent to adding an XOR gate</p><formula xml:id="formula_10">MUX 0 A d 1 A d 1 2 1 A   k d 0 A s 1 A s 1 A  k s c o k s R 0 d R 1 d R 2 d R 3 d R 2 1  k d R 2 2  k d R</formula><p>Fig. <ref type="figure">4</ref>. The structure of (n, k)-cMPUF. into the 2 × 1 MUX, which increases the nonlinearity of PUF structure greatly and makes cMPUF resistant to linear approximation attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Mathematical Analysis for MPUF</head><p>In an MPUF, 2 k × 1 MUX can be decomposed into several 2 × 1 MUXes. The decomposed structure of (n, 3)-MPUF is shown in Fig. <ref type="figure" target="#fig_2">3(a)</ref>. Each 2 × 1 MUX is composed of NOT, AND and OR gates and can be implemented with the basic logical operations</p><formula xml:id="formula_11">o = (d 0 &amp;(!s))|(d 1 &amp;s),<label>(6)</label></formula><p>where d 0 and d 1 are the upper and lower data inputs of 2 × 1 MUX, respectively; s is the selection input. The basic logical gates can be approximated by the following functions: </p><formula xml:id="formula_12">!a = 1 -a;<label>(7)</label></formula><formula xml:id="formula_13">a AN D b ≈ f AN D = σ(20 * a + 20 * b -30);<label>(8)</label></formula><formula xml:id="formula_14">a ⊕ b = (a&amp;(!b))|((!a)&amp;b) ≈ f XOR = f OR (f AN D (a, 1 -b), f AN D (1 -a, b)), (<label>(9)</label></formula><formula xml:id="formula_15">)<label>10</label></formula><p>where σ(x) = sigmoid(x) = 1/(1+e -x ), which is a common activation function used in ML algorithms. The 2×1 MUX can be approximated by substituting Eqn. ( <ref type="formula" target="#formula_12">7</ref>)-( <ref type="formula" target="#formula_14">9</ref>) into Eqn. ( <ref type="formula" target="#formula_11">6</ref>). The output of 2×1 MUXes in each stage (except for the last stage) is used as the input of another 2 × 1 MUX in the next stage. By this way, a complete neural network can be constructed.</p><p>As analyzed above, the MUX can be decomposed into multiple AND, OR and NOT logical gates and each gate can be approximated by a mathematical equation, which is the approximation on MUX from the local perspective. In addition, the mapping relationship between the input and output of MUX can be approximated from the global perspective and learned by the back propagation-based (BP) algorithm.</p><p>Firstly, the binary selection input R s is converted into a decimal number S:</p><formula xml:id="formula_16">S = k-1 i=0 2 i * R s i .<label>(11)</label></formula><p>And the selected data input becomes R S d . Secondly, we use a discrete function g(m) to describe the behavior of MUX. Here, m is the serial number of data inputs R d m in the MUX (m = 0, 1, 2, ..., k -1). We can define that at the selected point (denoted as the impulse point), g(S) = 1; at other points, g(!S) = 0:</p><formula xml:id="formula_17">g(m) = 1 (m = S) 0 (m! = S) . (<label>12</label></formula><formula xml:id="formula_18">)</formula><p>Then a normalized discrete delta function δ(m) is used to replace g(m), m ∈ (-∞, +∞):</p><formula xml:id="formula_19">δ(m) = 1 (m = 0) 0 (m! = 0) . (<label>13</label></formula><formula xml:id="formula_20">)</formula><p>The schematic representation of δ(m) is shown in Fig 5 . The final output of MUX O can be expressed as the accumulated value of all 2 k -1 points:</p><formula xml:id="formula_21">O = 2 k -1 i=0 R d i * δ(i -S). (<label>14</label></formula><formula xml:id="formula_22">)</formula><p>Eqn. ( <ref type="formula" target="#formula_21">14</ref>) describes the mapping relationship between inputs and outputs of MPUF, but it cannot be directly applied to the BP algorithms because δ(m) is a discrete function. Therefore, we need to find a continuous approximation function to replace δ(m), which should satisfy two characteristics of δ(m): 1) the value of the function is 1 at the impulse point and 0 at the rest points; 2) the function is symmetrical with respect to the impulse point. The normalized sampling function sinc(x) exactly satisfies these characteristics. As shown in Fig. <ref type="figure" target="#fig_3">5</ref>, δ(m) can be regarded as sinc(x) sampled at integral points, and sinc(x) can satisfy the characteristics of δ(m). sinc(x) can be expressed as</p><formula xml:id="formula_23">sinc(x) = sin(π * x)/(π * x).<label>(15)</label></formula><p>Then replace δ(m) with sinc(x) in Eqn. ( <ref type="formula" target="#formula_21">14</ref>), the output O of MPUF with k selection inputs can be approximated as</p><formula xml:id="formula_24">O ≈ 2 k -1 i=0 R d i * sinc(i -S).<label>(16)</label></formula><p>As shown in Fig. <ref type="figure" target="#fig_3">5</ref>, the main lobe of sinc(x) decays rapidly, and the value of the side lobes is small. Hence, the values of the unselected points (points except for the impulse point) are close to zero. Function sinc(x) is equivalent to a filter that filters out all the unselected points. By substituting all points into Eqn. ( <ref type="formula" target="#formula_24">16</ref>), the accumulated value will be very close to the value of the impulse point because the values of unselected points are all close to 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. APPROXIMATION ATTACKS</head><p>In this section, we will introduce a general modeling framework for ML attacks on strong PUFs and propose two approximation attacks based on this framework in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Modeling Framework</head><p>An overview of the proposed approximation attacks is shown in Fig. <ref type="figure" target="#fig_4">6</ref>, which provides a general framework for implementing approximation attacks on strong PUFs. The basic idea of approximation attacks is to find an approximation function to fit the mapping relationship between the challenge and response. In the framework, two approximation attacks, logical approximation and global approximation, are proposed to model strong PUFs from the local and global aspects, relatively.</p><p>First, we analyze the PUF structure to determine whether it is a composition of logical gates. If yes, the logical approximation is preferred.</p><p>Logical approximation:</p><p>• Decompose the PUF structure into basic logical gates (AND, NOT and OR). • Approximate the function of logical gates according to Eqn. ( <ref type="formula" target="#formula_12">7</ref>)-( <ref type="formula" target="#formula_14">9</ref>). • Substitute parameters (e.g., the inputs of PUF) into the logical gate approximation functions. • Compose all approximation functions based on the wiring of each individual logical gate in the circuit and obtain a global approximation function for the PUF. However, when the logical structure is too complex or cannot be decomposed into basic logical gates, the global approximation can be used as an alternative.</p><p>Global approximation:</p><p>• Analyze and extract the features from the mapping relationship between the input and output of PUF structure. • Find a mathematical function with the similar features to approximate the mapping relationship. • Transform the mathematical function to the global approximation function. Once the global approximation function for the PUF is obtained, an ML model can be built. Finally, ML algorithms are used to train the model.</p><p>Based on the framework, we will conduct two attacks on MPUF family, named logical approximation and filterbased global approximation. In addition, to demonstrate the universality of the proposed framework, the approximation attack on the XOR PUF is conducted for comparison.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Approximation Attacks on Basic MPUF</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Logical Approximation</head><p>Based on the analysis of MUX in Section III, we select the first 2 × 1 MUX in MPUF to build a logical approximation model. Since (d 0 &amp;s) and (d 1 &amp;(!s)) in Eqn. ( <ref type="formula" target="#formula_11">6</ref>) are impossible to be true at the same time, we replace the logical operation OR with the add operation. The subsequent experiments verify that using the add operation can simplify the complexity of network and get a better result than OR. Based on Eqn. <ref type="bibr" target="#b6">(7)</ref>, Eqn. <ref type="bibr" target="#b8">(8)</ref> and Eqn. ( <ref type="formula" target="#formula_11">6</ref>), the linear approximation equation of 2 × 1 MUX can be expressed as</p><formula xml:id="formula_25">o ≈ σ(20d 0 + 20s -30) + σ(20d 1 -20s -10).<label>(17)</label></formula><p>As shown in Fig. <ref type="figure" target="#fig_5">7</ref>, the neural network model for a 2 × 1 MUX can be designed based on Eqn. <ref type="bibr" target="#b17">(17)</ref>. The neurons in the input layer represent the bias 1, variables d 0 , d 1 and s, respectively. In the hidden layer, the two neurons are activated by two σ(x) functions in Eqn. <ref type="bibr" target="#b17">(17)</ref>, and the output layer has only one neuron producing the output o of 2 × 1 MUX. Then we construct the networks of other 2 × 1 MUXes with the same way and connect them based on the wiring of logical gates in the circuit to get the entire network of (2 k , k)-MPUF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Filter-based Global Approximation</head><p>As discussed in section III, the function sinc(x) with filtering characteristics can describe the selection behavior of MUX. Therefore, we propose to use sinc(x) as activation function to construct the mapping relationship between the input and output of MUX. Since Arbiter PUF is the basic component of MPUF, the additive linear delay model for Arbiter PUF is used to model the MPUF. For convenience, we use t M P U F ∈ {-1, 1} to represent the output of MPUF O ∈ {0, 1}. According to Eqn. (3), Eqn. <ref type="bibr" target="#b14">(14)</ref> and Eqn. <ref type="bibr" target="#b16">(16)</ref>, the linear delay model of the MPUF is</p><formula xml:id="formula_26">t M P U F = sgn[ 2 k -1 i=0 - → ω d T i - → Φ d i * δ(i -S)],<label>(18)</label></formula><p>and the approximation model is</p><formula xml:id="formula_27">t M P U F ≈ sgn[( 2 k -1 i=0 - → ω d T i - → Φ d i * sinc(i -S)] = sgn[f (ω, S, k)],<label>(</label></formula><formula xml:id="formula_28">) where sgn( - → ω d T i - → Φ d i ) denotes the output of A d i .<label>19</label></formula><p>The decimal number S of selection inputs can be expressed as</p><formula xml:id="formula_29">S = k-1 i=0 2 i * R s i ≈ k-1 i=0 2 i * σ( - → ω s T i - → Φ s i ).<label>(20)</label></formula><p>The designed filter-based ANN model based on the approximation functions is shown in Fig. <ref type="figure" target="#fig_8">8</ref>. The neurons in the input layer correspond to the selection inputs R s . In the conversion layer, R s is converted into the decimal number S. The filter layer contains 2 k neurons with the activation function sinc(x).   </p><formula xml:id="formula_30">A d 0 A d 1 A d 0 d R 0 s R 1 d R 2 d R -1 2 d k R y O 1 1 d R 2 d R 0 s R 2 s R 1 s R -1 s k R -1 A s k 1 A s 2 A s 0 -1 -2 C 0 x 1 x 2 x 2 -1 k x k -1 2</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TABLE II THE TRUTH TABLE FOR SELECTION INPUTS AND FINAL</head><formula xml:id="formula_31">OUTPUT Selection Inputs R s Output R s 6 R s 5 R s 4 R s 3 R s 2 R s 1 R s 0 O 1 1 1 × × × × R d 7 1 1 0 × × × × R d 6 1 0 × 1 × × × R d 5 1 0 × 0 × × × R d 4 0 × × × 1 1 × R d 3 0 × × × 1 0 × R d 2 0 × × × 0 × 1 R d 1 0 × × × 0 × 0 R d 0</formula><p>The output layer generates the final output. The selection process of the filter-based model is similar to using a filter to remove noisy points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Approximation Attacks on rMPUF</head><p>The rMPUF is proved to have enhanced security against the reliability-based attack because more Arbiter PUF instances are added as additional selection inputs. As shown in Fig. <ref type="figure" target="#fig_2">3</ref>, an (n, k)-rMPUF consists of k-stage of 2×1 MUXes. The selection inputs of 2×1 MUXes are generated by independent Arbiter PUFs. Compared with MPUF, the logical structure of rMPUF remains unchanged and hence the logical approximation model for rMPUF is the same as MPUF. We only need to modify the initial value of neurons in the input layer to model the rMPUF.</p><p>For the filter-based attack, the ANN model need to be redesigned due to the increase of selection inputs. The linear delay model of rMPUF is similar to MPUF (see Eqn. ( <ref type="formula" target="#formula_26">18</ref>)), the only difference is that S has changed due to the increase of selection inputs in rMPUF. In order to get the expression of S, we summarize the truth table in Table <ref type="table">II</ref> for the new mapping relationship between the selection inputs R s and output O in the (n, 3)-rMPUF. In table II, the final output O is only determined by a part of selection inputs. The remaining selection inputs (denoted by X in table II) have no effect on O. For example, when O = R d 0 , only R s 6 , R s 2 and R s 0 contribute to the selection of MUX. In this case, the decimal number S true of the real selection inputs can be expressed as</p><formula xml:id="formula_32">S true (0) = 4 * R s 6 + 2 * R s 2 + R s 0 .<label>(21)</label></formula><p>For the (n, k)-rMPUF, Eqn. ( <ref type="formula" target="#formula_32">21</ref>) can be generalized to a total of 2 k different expressions S true (i), i = 0, 1, 2, ..., 2 k -2 by querying the truth table. The decimal number S of (n, k)-rMPUF can be expressed as</p><formula xml:id="formula_33">S = 2 k -2 i=0 i * δ(S true (i) -i) ≈ 2 k -2 i=0 i * sinc(S true (i) -i).<label>(22)</label></formula><p>Finally, the linear delay model of rMPUF can be obtained by substituting S into Eqn. <ref type="bibr" target="#b18">(18)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Approximation Attacks on cMPUF</head><p>For the cMPUF, the data inputs of each 2 × 1 MUXes in stage-1 are the response of Arbiter PUF and its inversion and hence these 2×1 MUXes become XOR gates. The XOR gates increase the nonlinearity of cMPUF greatly so that it is difficult to find a linear approximation for cMPUF. However, the filterbased method can model cMPUF successfully. In the cMPUF, there is a special bit R s 0 : if R s 0 = 0, all 2×1 MUXes in stage-1 will select the responses of Arbiter PUFs; if R s 0 = 1, all 2 × 1 MUXes will select the inverters's outputs. Therefore, we can decompose the (n, k)-cMPUF into an (n, k -1)-MPUF and an Arbiter PUF A s 0 . The linear delay model for cMPUF is</p><formula xml:id="formula_34">t cM P U F = sgn[f (ω, S, k -1) * - → ω s T 0 - → Φ s 0 ],<label>(23)</label></formula><p>where sgn( -</p><formula xml:id="formula_35">→ ω d T 0 - → Φ d 0 )</formula><p>denotes the output of A s 0 , and f (ω, S, k-1) determines the output of (n, k -1)-MPUF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Approximation Attacks on XOR PUF</head><p>XOR PUF uses XOR gates to connect individual Arbiter PUFs. Based on the framework in Fig. <ref type="figure" target="#fig_4">6</ref>, the XOR PUF can be modeled from global or local perspective. In Section II-C, we have introduced a modeling attack on XOR PUF from the global perspective. From the local perspective, an l-XOR PUF contains l-1 XOR operations, and each operation can be approximated by Eqn. <ref type="bibr" target="#b10">(10)</ref>. Therefore, a logical approximation attack can be conducted on XOR PUF, and the approximation process can be expressed as</p><formula xml:id="formula_36">f XOR (2) = R 1 ⊕ R 2 , f XOR (3) = f XOR (2) ⊕ R 3 , . . . f XOR (l) = f XOR (l -1) ⊕ R l ,<label>(24)</label></formula><p>where R 1 , R 2 , R 3 , ..., R l are the responses of Arbiter PUFs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXPERIMENTAL RESULTS AND ANALYSIS</head><p>In this section we will describe the experimental setup, simulation process, and data collection, then present the experimental results and scalability analysis on approximation attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Setup and Data Collection</head><p>Similar to existing works about ML modeling attacks on PUFs <ref type="bibr" target="#b17">[17]</ref>, <ref type="bibr" target="#b31">[31]</ref>, we reproduce the simulation experiments on MPUF, rMPUF, cMPUF and XOR PUF in Python. The Python 3.6.4 programming and the TensorFlow 1.11.0 neural network toolkit are used to conduct ML attacks. All experiments are conducted on the Intel i3-8100 CPU@3.6 GHz, GeForce GTX 1060 GPU and 8G RAM.</p><p>In the simulation, all delay components in Arbiter PUFs are independent identically distributed and follow the Gaussian distribution N (10, σ 0 = 0.05). In order to simulate the temperature and supply voltage variations, we add five-level additive noises in the delay components. Assuming that all noises follow N (0, σ noise ) and take the ratio σ noise : σ 0 = α, each delay component follows N (10, σ 0 + σ noise ). If α = 0, the delay component is noise free and the PUF is 100% reliable. Here, α = 0.0125, 0.05, 0.1, 0.15 and 0.2 are used to evaluate the reliability of PUFs and verify the effectiveness of proposed approximation attacks under different noise conditions.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Approximation Attacks and Results Analysis</head><p>This section evaluates the effectiveness of proposed logical approximation attacks and filter-based global approximation attacks. In the experiments, 80% of the CRPs are used as the training set, and the rest 20% are used as the testing set. There are some suggestions in the ML training:</p><p>1) The initialization parameters in the model should be biased. We suggest to use a small Gaussian random number as the initial value of parameters, which can prevent the failure of training due to the symmetry of network.</p><p>2) It is recommended to use the RProp <ref type="bibr" target="#b33">[33]</ref> and gradient descent algorithm <ref type="bibr" target="#b34">[34]</ref> together to train ANN models. In the experiment, if there is only one algorithm used for training, the network does not converge well. Hence, the RProp algorithm is used first, then the gradient descent algorithm instead after the accuracy reaches a threshold. Finally, the loss will steadily drop and the fluctuation can be small enough to be considered convergent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) As the training result may fall into local optimum value,</head><p>it is suggested to restart the learning process to obtain a global optimization result. The results of approximation attacks under noise free conditions are shown in Table <ref type="table">III</ref>. For MPUF, both logical approximation and filter-based attacks can model the MPUF structure with high accuracies, and the prediction accuracies are all over 95% regardless of k = 3 or 4. For rMPUF, the accuracies of both models are over 90%. For the filter-based attack, since rMPUF's ANN structure is too complicated, our ML strategy is not effective as expected. Although the prediction accuracy can reach 97.23% at k = 2, it is reduced to 90.43% when k = 3. For the logical approximation attack, the accuracies are higher, and the highest accuracy can even reach 96.46% at k = 3. For cMPUF, the filter-based approximation can model cMPUF successfully, and the prediction accuracy is up to 96.78%. For 3-XOR PUF, 4-XOR PUF and 5-XOR PUF, the proposed logical approximation attacks have the average accuracies of 97.76%, 96.55% and 94.92%, respectively. Therefore, the experimental results show that MPUF, rMPUF cMPUF and XOR PUF are all vulnerable to the proposed ML attacks.</p><p>To test the impact of noise on our proposed approximation attacks, we also conduct experiments under different noise levels. The prediction accuracies for n = 32 and 64 are shown in Table <ref type="table">V</ref>. In addition, we also reevaluate the reliability of MPUF family and XOR PUF under different noise levels, because reliability is the theoretical maximum of the modeling accuracy. The results are shown in Table <ref type="table">IV</ref>. Compared with MPUF and rMPUF, the reliability of cMPUF is more susceptible to noise due to the XOR existing in its structure. Furthermore, we find that the reliability of (n, k + 1)-cMPUF is very close to that of k-XOR PUF. When α = 0.2, the reliabilities of cMPUF and XOR PUF even drop to nearly 80%. However, even under different noise levels, the prediction accuracies of MPUFs and XOR PUF are close to the reliability, which demonstrates that our proposed approximation attacks can resist the impact of noises.</p><p>The attack on MPUF in <ref type="bibr" target="#b17">[17]</ref> is based on the reliability of the selection input Arbiter PUF. The output of MPUF can be determined by modeling the selection input with the reliabilitybased attack and data input with LR algorithm individually. In this paper, instead of following the two-step strategy proposed in <ref type="bibr" target="#b17">[17]</ref>, we propose two approximation attacks to model the MUX structure from the global and local aspects. In the proposed two approximation attacks, the accuracy of a single Arbiter PUF in MPUF does not contribute to the modeling of MPUF. Take the (n, 3)-MPUF as an example, assuming the selection input R s 1 and R s 2 are determined, then we substitute the value of R s 2 and R s 1 into the MPUF model (see Eqn. ( <ref type="formula" target="#formula_28">19</ref>)). In the ideal case, the remaining selection input R s 0 can be correctly predicted. However, R s 0 can also be a false value, resulting in a false S and a false output of MPUF. Similar analysis on rMPUF and cMPUF can get the same conclusion. In addition, to test the accuracy of each individual Arbiter PUF in the approximation attack, we substitute all the linear delay models of Arbiter PUFs trained by our ML algorithms into the MUX structure. If these Arbiter PUF models are accurate enough, the modeling accuracy of MPUF output will be close to 100%. However, our experimental results show that the accuracy is low, which demonstrates that the proposed attack does not successfully model all Arbiter PUFs in the MPUF because our strategy is to model the MUX structure instead of individual Arbiter PUF in the MPUF.</p><p>In addition, we also conduct a detailed experiment to prove the effectiveness of the approximation attack on the MUX structure. Assuming that all selection and data inputs in an MPUF are known (modeling accuracies are 100%), we apply these determined inputs to the MPUF model (see Eqn. ( <ref type="formula" target="#formula_26">18</ref>)), and the final modeling accuracy of MPUF can reach 99.9%. Furthermore, the experimental results show that the prediction accuracies of the approximation attack still can reach 99.9% (see Table <ref type="table">VI</ref>) when only the selection input is determined. In addition, each predicted response of data input Arbiter PUF d i can also match the true one because the selection input Arbiter PUFs can be modeled accurately based on Eqn. <ref type="bibr" target="#b19">(19)</ref>. Assuming that R s is uniform, the corresponding S will follow a uniform distribution in [0, 2 k -1], and all the data input Arbiter PUFs can be modeled with enough CRPs. Take (n, 3)-MPUF for example, the experimental results are shown in Table <ref type="table">VI</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. MPUF Scale and Scalability Analysis</head><p>In practical applications, security, reliability and overhead are the important metrics to evaluate PUFs. In order to resist modeling attacks, obfuscation techniques such as structural non-linearization <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b35">[35]</ref> and CRP obfuscation <ref type="bibr" target="#b16">[16]</ref>, <ref type="bibr" target="#b36">[36]</ref>, <ref type="bibr" target="#b37">[37]</ref> have been proposed. However, the higher security brought by the obfuscation may incur high overhead and decrease the reliability of PUF responses. Therefore, we need to find an optimal point among these metrics.</p><p>In this section, we will discuss the overhead and reliability of MPUF. As shown in Fig. <ref type="figure" target="#fig_7">2</ref>, Fig. <ref type="figure" target="#fig_2">3</ref> and Fig. <ref type="figure">4</ref>, the number of Arbiter PUFs in an (n, k)-MPUF, (n, k)-rMPUF and (n, k)-cMPUF is 2 k + k, 2 k+1 -1 and 2 k-1 + k, respectively. The overhead of MPUF is determined by the number of Arbiter PUFs and hence increases exponentially with k. In addition,  we have reevaluated the reliability of MPUF, cMPUF and rMPUF under different noise levels. As shown in Table <ref type="table">IV</ref>, the reliability of MPUF family decreases with the increasing of k and α, e.g., when α = 0.2, the reliability of (n, 5)-cMPUF is 79.78%. In this paper, we take k = 3, 4 for MPUF, k = 2, 3 for rMPUF, and k = 4, 5 for cMPUF as the optimum to balance the overhead and reliability.</p><p>Additionly, we can get the number of required CRPs in the training and derive the computational complexity by the scalability analysis <ref type="bibr" target="#b20">[20]</ref> on our proposed ML algorithms. In <ref type="bibr" target="#b20">[20]</ref>, Rührmair et al. have proved that the minimal number of CRPs (N CRP ) to model an n-stage Arbiter PUF should obey the relation</p><formula xml:id="formula_37">N Arb CRP = O(n/ε), (<label>25</label></formula><formula xml:id="formula_38">)</formula><p>where n is the challenge size, and ε is the prediction error rate. The above relation is confirmed by our experiment in </p><p>For an l-XOR PUF, the required number of CRPs in the training set N XOR CRP is related to the scale of XOR PUF. In the modeling of XOR PUF, the total dimension of feature vectors is (n + 1) l . Hence, N XOR CRP scales exponentially with the number of Arbiter PUFs l:</p><formula xml:id="formula_40">N XOR CRP ∼ O((n + 1) l ).<label>(27)</label></formula><p>For an (n, k)-MPUF, the number of deployed Arbiter PUF is 2 k + k. Hence, the number of required CRPs for MPUF N M P U F CRP should obey</p><formula xml:id="formula_41">N M P U F CRP ∼ O((n + 1) * (2 k + k)/ε).<label>(28)</label></formula><p>Similarly, we can get the required CRPs for (n, k)-rMPUF and (n, k)-cMPUF:</p><formula xml:id="formula_42">N rM P U F CRP ∼ O((n + 1) * (2 k+1 -1)/ε);<label>(29)</label></formula><formula xml:id="formula_43">N cM P U F CRP ∼ O((n + 1) * (2 k-1 + k)/ε).<label>(30)</label></formula><p>As shown in Fig. <ref type="figure" target="#fig_10">9</ref> (b), (c) and (d), the experimental results have proven these relations. The computational complexity of ML algorithms can be determined by the training time and estimated by the total number of basic operations N BOP . The N BOP is determined by: (1) the number of iterations in the optimization procedure before the training converges; (2) a time complexity function determines the number of elementary calculations in ML algorithms. In what follows, the two factors are explained in detail.</p><p>Based on our experimental data, we can estimate the relation between the number of iterations and N CRP . As shown in Fig. <ref type="figure" target="#fig_10">9</ref> (e) and (f), the number of iterations is proportional to log(N CRP ) and hence has the complexity of O(log(N CRP )).</p><p>As discussed in Section III and IV, our proposed two ML algorithms use approximation functions to approximate the nonlinear mapping relationship of MPUF. As shown in Eqn. ( <ref type="formula" target="#formula_25">17</ref>) -( <ref type="formula" target="#formula_34">23</ref>), all approximation functions only contain matrix additions and constant calculations. Assuming a constant calculation is an elementary operation that obeys the complexity of O(1), the total complexity can be measured by the number of elementary operations. For the logical approximation modeling (see Eqn. <ref type="bibr" target="#b17">(17)</ref>), the training for MPUF is an iterative process for calculating σ(x) =sigmoid(x), which can be seen as an elementary operation that has the complexity of O(1). Therefore, the total complexity can be estimated by the number of calculations for σ(x). In the iteration process, the number of calculations for σ(x) in an (n, k)-MPUF is the number of MUXes 2 k -1, as well as the rMPUF and cMPUF. Therefore, the complexity of logical approximation should obey</p><formula xml:id="formula_44">C LA = O((2 k -1) * N CRP * log(N CRP )).<label>(31)</label></formula><p>For the filter-based modeling on MPUF, the t M P U F and S are calculated by the two summation formulas Eqn. <ref type="bibr" target="#b19">(19)</ref> and Eqn. <ref type="bibr" target="#b20">(20)</ref>. Hence, the number of elementary operations in an (n, k)-MPUF is the total number of summations 2 k + k. In addition, for the (n, k)-rMPUF and (n, k)-cMPUF, the number of summations is 2 k+1 -1 and 2 k-1 + k, respectively. Therefore, the complexity of filter-based modeling can be expressed as</p><formula xml:id="formula_45">C F B M P U F = O((2 k + k) * N CRP * log(N CRP )); (32) C F B rM P U F = O((2 k+1 -1) * N CRP * log(N CRP )); (33) C F B cM P U F = O((2 k-1 + k) * N CRP * log(N CRP )). (34)</formula><p>For the logical approximation attack on l-XOR PUF, the calculation for l-stage XOR is an iterative process (see Eqn. ( <ref type="formula" target="#formula_36">24</ref>)). Hence the complexity can be computed by the number of iterations. In an l-XOR PUF, the number of iterations is l and the computational complexity of XOR PUF is</p><formula xml:id="formula_46">C LA XOR = O(l * N CRP * log(N CRP )).<label>(35)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Comparative Analysis</head><p>Different from the traditional ML attacks (e.g. RProp <ref type="bibr" target="#b20">[20]</ref>, <ref type="bibr" target="#b30">[30]</ref>), the precision of the mathematical model for approximation attack is not 100% and there is a deviation between the true model and approximation model. As the number of XOR increases, the deviation between the true model and the approximation model will continue to accumulate. Table <ref type="table">VII</ref> shows the minimum number of CRPs required to model MPUF and XOR PUF. We can see that the minimum number of CRPs for the approximation attack is higher because the used ML algorithm is ANN, which requires more CRPs than the LR used in the RProp-based attack. However, the approximation attack has stronger robustness and fault tolerance to noise. It can be seen from Table V that the modeling accuracy of the approximation attack under different levels of noise is very close to its theoretical maximum (i.e., reliability). Therefore, the approximation attack is more effective in the real world with different noises.</p><p>For the comparation of modeling difficulty between (n, k)-MPUF and l-XOR PUF, if the stage number k and l are the same, the overhead of MPUF is larger. Hence the number of CRPs required to model the MPUF is higher. If the number of Arbiter PUF deployed in MPUF and XOR PUF is close, e.g. (64, 3)-MPUF and 64-bit 11-XOR PUF, MPUF is easier to model. This is because all the responses of each Arbiter PUF in the XOR PUF contribute to the final output while only one data input in the MPUF is selected as the output.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. RELATED WORK</head><p>In many IoT applications, resources such as CPU, memory, and battery power are limited and cannot support classic cryptography security solutions. As a new lightweight security primitive, the security of strong PUF has attracted much attention in academia and industry. In 2004, Lim et al <ref type="bibr" target="#b29">[29]</ref> demonstrated that ML attack is a huge threat to strong PUFs for the first time. Arbiter PUF, which was claimed to be physically unclonable, can be cloned successfully when attackers collect only a small number of CRPs. For a 64 × 64 Arbiter PUF, the modeling accuracy is over 95% by collecting only 650 pairs of CRPs. Since then, various ML attacks on strong PUFs have been developed <ref type="bibr" target="#b32">[32]</ref>, <ref type="bibr" target="#b20">[20]</ref>, <ref type="bibr" target="#b38">[38]</ref>.</p><p>Current attacks for strong PUFs can be classed into three types: 1) ML attacks at software level. The complexity of ML attacks increases exponentially with the PUF scale or the number of nonlinear logical structures in the PUF <ref type="bibr" target="#b20">[20]</ref>, <ref type="bibr" target="#b38">[38]</ref>. Therefore, the time required for modeling will be out of the acceptable range; 2) side-channel attacks at the hardware level. Side-channel attacks utilize information leakage such as time consumption, power consumption, electromagnetic radiation and fault injection during the operation of hardware circuit to attack cryptographic devices. Common side-channel attacks include power side-channel <ref type="bibr" target="#b39">[39]</ref>, time side-channel <ref type="bibr" target="#b40">[40]</ref>, electromagnetic <ref type="bibr" target="#b41">[41]</ref>, differential fault analysis <ref type="bibr" target="#b42">[42]</ref>, and photonic emission analysis <ref type="bibr" target="#b43">[43]</ref>. In particular, photonic emission analysis utilizes the photonic emission information from the backside of the chip to physically characterize Arbiter PUF <ref type="bibr" target="#b43">[43]</ref>. However, a simple side channel attack sometimes is difficult to build a high accuracy model for PUFs; 3) hybrid attacks based on side-channel and ML. To reduce the modeling time and enhance the attack ability, hybrid attacks exploit the side-channel information to assist ML algorithms for modeling PUFs <ref type="bibr" target="#b44">[44]</ref>.</p><p>The hybrid attack that combines power consumption analysis with ML <ref type="bibr" target="#b31">[31]</ref>, <ref type="bibr" target="#b45">[45]</ref> is one of the most effective attacks. In <ref type="bibr" target="#b45">[45]</ref>, Rührmair et al. proposed a differential power analysis (DPA)-based side-channel attack which can differentiate the subtle changes by comparing the power tracing before and after generating the response to extracte the power consumption of the XOR gate and convert it into an identifiable form related to the response. In <ref type="bibr" target="#b31">[31]</ref>, Becker proposed a hybrid attack that combines the correlation power analysis (CPA) and covariance matrix adaptation Evolutionary Strategy (CMA-ES) to conduct the modeling attack with the power correlation coefficient as the fitness function. CPA is a more practical attack on PUF than DPA. However, hybrid attacks suffer several issues. Take the power side-channel attack for example, noise has a great effect on the accuracy of modeling PUF. The relationship between the number of power tracing required for DPA attacks n and the signal-to-noise ratio (SNR) is n ∼ 1/SNR, which indicates that the reduction in SNR linearly increases the number of power tracings required for a DPA attack <ref type="bibr" target="#b46">[46]</ref>. Therefore, noise is an important factor to increase the difficulty of DPA attacks. In addition, since the power consumption of PUF is extremely small and the measurement of side-channel information requires special equipment, it is difficult to extract the power consumption information of the PUF module from the measured power tracing of the chip under the interference of noise with reasonable cost.</p><p>The reliability-based attack <ref type="bibr" target="#b31">[31]</ref> is another hybrid attack that combines response reliability with ML. Reliability is used to assess the stability of PUF responses in different environments. Ideally, the responses should be stable with the same challenge under multiple measurements. The reliability-based attack uses the reliability information of the response instead of CRPs to model the PUF. In <ref type="bibr" target="#b31">[31]</ref>, Becker proposed a reliability-based attack on XOR-PUF. The key idea is to perform repeated measurements for the same challenge and observe the sta-ble and flipped response bits. Then the obtained reliability information is used to conduct an ML attack based on CMA-ES. In <ref type="bibr" target="#b42">[42]</ref>, Delvaux et al. observed that the delay difference for a specific challenge of an Arbiter PUF is proportional to the unreliability of the corresponding response bit if the environmental conditions are stable. Based on this observation, attackers analyze the measured reliability: if a response for a given challenge is unstable, it is likely that the corresponding delay difference is close to zero; if a response bit has a high reliability for a given challenge, it is likely that the delay difference is large. Then attackers compute the Pearson correlation coefficient <ref type="bibr" target="#b47">[47]</ref> between reliability and hypothetical reliability, and utilize it as the fitness function in the CMA-ES to select the fittest delay vector -→ ω T of each Arbiter PUF.</p><p>Here, a divide-and-conquer strategy is used to attack each Arbiter PUF individually while the unreliability introduced by the other Arbiter PUFs is seen as noises. Compared with other ML attacks, the divide-and-conquer strategy results in only a linear increase in the required number of CRPs for increasing numbers of XORs <ref type="bibr" target="#b31">[31]</ref>. Recently, some defense methods are proposed to prevent against the reliability-based attack. Take rMPUF <ref type="bibr" target="#b17">[17]</ref> for example, not every bit of selection input in rMPUF contributes to the response generation compared with MPUF, which means that the correlation between the response reliability and the input is weakened. Therefore, the required CRPs for modeling rMPUF is greatly increased, so that it is difficult for attackers to conduct a reliability-based attack. In addition, we can eliminate the way for attackers to obtain reliability information. If the challenges are generated by both the tag and the verifier, attackers cannot send the same challenge twice and observe the reliability of the responses.</p><p>Once the reliability information is not available, it is difficult to conduct the reliability-based attack successfully.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>As a new hardware security primitive, the security of PUFs must be evaluated rigorously before being put into practice. This paper proposes a general framework for conducting ML attacks on strong PUFs. Two approximation attacks based on the framework, named logical approximation method and filter-based global approximation, are proposed to build the soft models with high accuracy for MPUF and its two variants, rMPUF and cMPUF. In addition, we conduct the logical approximation attacks on XOR PUF for comparison. Security analysis and experimental results prove that the MPUF family and XOR PUF are vulnerable to the approximation attacks, and the modeling accuracies are high under different noise levels.</p><p>The proposed approximation attacks have posed a great threat to nonlinear strong PUF structures for device authentication. Therefore, the appropriate defense mechanisms such CRP obfuscation should be deployed. However, the balance of security and overhead (e.g., hardware, performance) must be considered carefully because high overhead makes them less appealing to IoT applications where resources like CPU, memory, and battery power are limited.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The structure of Arbiter PUF.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>1 )</head><label>1</label><figDesc>Basic MPUF As shown in Fig. 2, an (n, k)-MPUF consists of a 2 k × 1 MUX and 2 k + k Arbiter PUFs. The data inputs and selection inputs of the 2 k × 1 MUX are the responses generated by different Arbiter PUF instances with the same challenge. With the selection inputs, the 2 k × 1 MUX selects one of the data inputs as the final output. The parameters of MPUF are shown in Table</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. (a) The structure of (n, 3)-MPUF; (b) The structure of (n, 3)-rMPUF [17].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Function sinc(x) and δ(m).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. The framework of approximation attacks on PUFs.</figDesc><graphic coords="5,119.09,150.18,222.84,76.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. The logical approximation model for a 2 × 1 MUX.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>2</head><label>2</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. The filter-based ANN model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>1 . 5 × 10 5</head><label>1510</label><figDesc>CRPs are collected with different k and n. (n, k)-MPUF (k = 3, 4), (n, k)-rMPUF (k = 2, 3), (n, k)-cMPUF (k = 4, 5) and l-XOR PUF (l = 3, 4, 5) are simulated with different challenge size n = 32, 64. In the experiment, conduct attacks under different CRPs and test the convergence accuracy with 10 measurements.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. (a) Double logarithmic plot of prediction error rate ε on the ratio of N Arb CRP and the dimension of Φ dim(Φ) = n + 1, (b) Double logarithmic plot of prediction error rate ε on the ratio of N M P U F CRP and parameter size (n + 1) * (2 k + k), (c) Double logarithmic plot of prediction error rate ε on the ratio of N rM P U F CRP and parameter size (n + 1) * (2 k+1 -1), (d) Double logarithmic plot of prediction error rate ε on the ratio of N cM P U F CRP and parameter size (n + 1) * (2 k-1 + k), (e) Number of iterations in the logical approximation algorithm until convergence occurs, plotted in dependence of the training set size N M P U F CRP , (f) Number of iterations in the filter-based algorithm until convergence occurs, plotted in dependence of the training set size N M P U F CRP .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 9 (</head><label>9</label><figDesc>Fig. 9 (a), which shows the double logarithmic plot of ε on the ratio of training CRPs and the dimension of Φ dim(Φ) (see Section II-B, dim(Φ) = n+1). A first-degree polynomial equation is used to fit the data points in the plot. Based on the fitting parameters, an empirical formula of N Arb CRP is concluded as N Arb CRP ≈ 0.5 * (n + 1)/ε.(26)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>2) We propose a general framework for ML attacks on strong PUFs. Based on the framework, we present two new ANN-based ML attacks, logical approximation and global approximation, to model the MPUF family and XOR Arbiter PUF. 3) Experimental results show that MPUF, rMPUF, cMPUF and XOR Arbiter PUF can be modeled by the proposed new ML attacks, and the average modeling accuracies are 96.85%, 95.33%, 94.52% and 96.26%, respectively. The source code to reproduce the experiment is available online at http://hardwaresecurity.cn/AttackPUFcode.zip.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS, 2020, IN PRESS</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>The authors would like to thank Mr. Chen Li and Mr. Yehao Kong for editing the paper. J. Shi and Y. Lu contributed equally.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported by the National Natural Science Foundation of China under Grant No. 61874042 and 61602107, the Hu-Xiang Youth Talent Program under Grant No. 2018RS3041, the Key Research and Development Program of Hunan Province under Grant No. 2019GK2082. , IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS, 2020, IN PRESS</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Internet of things</title>
		<author>
			<persName><surname>Wikipedia</surname></persName>
		</author>
		<ptr target="https://en.wikipedia.org/wiki/Internetofthings" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">IoT 2018 in Review: The 10 Most Relevant IoT Developments of the Year</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">L</forename><surname>Lueth</surname></persName>
		</author>
		<ptr target="https://iot-analytics.com/iot-2018-in-review/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Iot</forename><surname>Analytics</surname></persName>
		</author>
		<idno>2017-2022</idno>
		<ptr target="https://iot-analytics.com/product/iot-security-market-report-2017-22/" />
		<imprint/>
	</monogr>
	<note type="report_type">IoT Security Market Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Survey on Silicon PUFs and Recent Advances in Ring Oscillator PUFs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lv</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Science and Technology</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="664" to="678" />
			<date type="published" when="2014-07">Jul 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A PUF-FSM Binding Scheme for FPGA IP Protection and Pay-per-Device Licensing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lyu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1137" to="1150" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">HCIC: Hardware-Assisted Control-Flow Integrity Checking</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="458" to="471" />
			<date type="published" when="2019-02">feb 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<title level="m">A Practical Logic Obfuscation Technique for Hardware IEEE Transactions on Very Large Scale Integration (VLSI)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Systems</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1193" to="1197" />
			<date type="published" when="2016-03">mar 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Physical unclonable function-based key sharing via machine learning for iot security</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Qu</surname></persName>
		</author>
		<idno type="DOI">10.1109/TIE.2019.2938462</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Fault injection modeling attacks on 65 nm arbiter and RO Sum PUFs via environmental changes</title>
		<author>
			<persName><forename type="first">J</forename><surname>Delvaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems I: Regular Papers</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1701" to="1713" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Physical one-way functions</title>
		<author>
			<persName><forename type="first">R</forename><surname>Pappu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Recht</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Gershenfeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">297</biblScope>
			<biblScope unit="issue">5589</biblScope>
			<biblScope unit="page" from="2026" to="2030" />
			<date type="published" when="2002-09">sep 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The butterfly PUF protecting IP on every FPGA</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guajardo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Maes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-J</forename><surname>Schrijen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Tuyls</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE International Workshop on Hardware-Oriented Security and Trust</title>
		<imprint>
			<biblScope unit="page" from="67" to="70" />
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Lightweight Secure PUFs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Majzoobi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Potkonjak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2008 IEEE/ACM International Conference on Computer-Aided Design</title>
		<imprint>
			<date type="published" when="2008-11">nov 2008</date>
			<biblScope unit="page" from="670" to="673" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Read-proof hardware from protective coatings</title>
		<author>
			<persName><forename type="first">P</forename><surname>Tuyls</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G.-J</forename><surname>Schrijen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Škorić</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Van Geloven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Verhaegh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Wolters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Cryptographic Hardware and Embedded Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="369" to="383" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Frequency Offset-Based Ring Oscillator Physical Unclonable Function</title>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multi-Scale Computing Systems</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="711" to="721" />
			<date type="published" when="2018-10">oct 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Silicon physical random functions</title>
		<author>
			<persName><forename type="first">B</forename><surname>Gassend</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Clarke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Van Dijk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM conference on Computer and communications security</title>
		<meeting>the 9th ACM conference on Computer and communications security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="148" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">PUF-FSM: A Controlled Strong PUF</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">F</forename><surname>Al-Sarawi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Abbott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Ranasinghe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1104" to="1108" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Multiplexer-Based Arbiter PUF Composition with Enhanced Reliability and Security</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Sahoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mukhopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Chakraborty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="403" to="417" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Novel Modeling Attack Resistant PUF Design Based On Non-linear Voltage Transfer Characteristics</title>
		<author>
			<persName><forename type="first">A</forename><surname>Vijayakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kundu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Design, Automation &amp; Test in Europe Conference &amp; Exhibition. EDA Consortium</title>
		<meeting>the 2015 Design, Automation &amp; Test in Europe Conference &amp; Exhibition. EDA Consortium</meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="653" to="658" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The bistable ring PUF: A new architecture for strong physical unclonable functions</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Csaba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lugli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Schlichtmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Rührmair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2011 IEEE International Symposium on Hardware-Oriented Security and Trust</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="134" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Modeling attacks on physical unclonable functions</title>
		<author>
			<persName><forename type="first">U</forename><surname>Rührmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Sehnke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sölter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Dror</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM conference on Computer and communications security</title>
		<meeting>the 17th ACM conference on Computer and communications security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="237" to="249" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A Case of Lightweight PUF Constructions: Cryptanalysis and Machine Learning Attacks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Sahoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mukhopadhyay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Chakraborty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1334" to="1343" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Machine learning attacks on 65nm Arbiter PUFs: Accurate modeling poses strict bounds on usability</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hospodar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Maes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 IEEE international workshop on Information forensics and security</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="37" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">SD-PUF: Spliced Digital Physical Unclonable Function</title>
		<author>
			<persName><forename type="first">J</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="927" to="940" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Lorenz Chaotic System-Based Carbon Nanotube Physical Unclonable Functions</title>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1408" to="1421" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Artificial neural network</title>
		<author>
			<persName><surname>Wikipedia</surname></persName>
		</author>
		<ptr target="https://en.wikipedia.org/wiki/Artificialneuralnetwork" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Approximation capabilities of multilayer feedforward networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hornik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Networks</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="251" to="257" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A Lockdown Technique to Prevent Machine Learning on PUFs for Lightweight Authentication</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D M</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Delvaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sowell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multi-Scale Computing Systems</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="146" to="159" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Physical unclonable functions for device authentication and secret key generation</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 44th annual conference on Design automation -DAC &apos;07</title>
		<meeting>the 44th annual conference on Design automation -DAC &apos;07</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A technique to build a secret key in integrated circuits for identification and authentication applications</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daihyun</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gassend</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Van Dijk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on VLSI Circuits. Digest of Technical Papers</title>
		<imprint>
			<publisher>IEEE Cat</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="176" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On the scaling of machine learning attacks on PUFs with application to noise bifurcation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Tobisch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">T</forename><surname>Becker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Radio Frequency Identification: Security and Privacy Issues</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="17" to="31" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The gap between promise and reality: On the insecurity of XOR arbiter PUFs</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">T</forename><surname>Becker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Cryptographic Hardware and Embedded Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="535" to="555" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Testing techniques for hardware security</title>
		<author>
			<persName><forename type="first">M</forename><surname>Majzoobi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Potkonjak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2008 IEEE International Test Conference</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A direct adaptive method for faster backpropagation learning: The RPROP algorithm</title>
		<author>
			<persName><forename type="first">M</forename><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Braun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE international conference on neural networks</title>
		<meeting>the IEEE international conference on neural networks<address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993">1993. 1993</date>
			<biblScope unit="page" from="586" to="591" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">An overview of gradient descent optimization algorithms</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ruder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">On design of a highly secure PUF based on non-linear current mirrors</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Burleson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Symposium on Hardware-oriented Security and Trust</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="38" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">RPUF: Physical Unclonable Function with Randomized Challenge to resist modeling attack</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Asian Hardware-oriented Security and Trust</title>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Robust and reverse-engineering resilient puf authentication and keyexchange by substring matching</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rostami</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Majzoobi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Wallach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Emerging Topics in Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="49" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">PUF modeling attacks on simulated and silicon data</title>
		<author>
			<persName><forename type="first">U</forename><surname>Ruhrmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Solter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Sehnke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mahmoud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Stoyanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Dror</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schmidhuber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Burleson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Devadas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1876" to="1891" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Differential power analysis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kocher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jaffe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="388" to="397" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Timing attacks on implementations of Diffie-Hellman, RSA, DSS, and other systems</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Kocher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="104" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Semi-invasive EM attack on FPGA RO PUFs and countermeasures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Merli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Stumpf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Sigl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Embedded Systems Security</title>
		<meeting>the Workshop on Embedded Systems Security</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Side channel modeling attacks on 65nm arbiter PUFs exploiting CMOS device noise</title>
		<author>
			<persName><forename type="first">J</forename><surname>Delvaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Verbauwhede</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE International Symposium on Hardware-Oriented Security and Trust</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="137" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Photonic Sidechannel Analysis of Arbiter PUFs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Tajik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Dietz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Frohmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Dittrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nedospasov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Helfmeier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Seifert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Boit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-W</forename><surname>Hübers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="550" to="571" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Combined Modeling and Side Channel Attacks on Strong PUFs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mahmoud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Rhrmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Majzoobi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IACR Cryptology ePrint Archive</title>
		<imprint>
			<biblScope unit="page">632</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Efficient power and timing side channels for physical unclonable functions</title>
		<author>
			<persName><forename type="first">U</forename><surname>Rührmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sölter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mahmoud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Majzoobi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Burleson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Cryptographic Hardware and Embedded Systems</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="476" to="492" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Power analysis attacks: Revealing the secrets of smart cards</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mangard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Oswald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Popp</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Springer Science &amp; Business Media</publisher>
			<biblScope unit="volume">31</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Pearson correlation coefficient</title>
		<author>
			<persName><forename type="first">J</forename><surname>Benesty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Noise reduction in speech processing</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
