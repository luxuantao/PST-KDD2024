<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Experimental System for Creating and Presenting Interactive Graphical Documents</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Steven</forename><surname>Feiner</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Sandor</forename><surname>Nagy</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Andries</forename><surname>Van Dam</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Brown University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Brown University</orgName>
								<address>
									<postBox>Box 1910</postBox>
									<postCode>02912</postCode>
									<settlement>Providence</settlement>
									<region>RI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Computer and Automation Institute</orgName>
								<orgName type="institution" key="instit1">S. Nagy</orgName>
								<orgName type="institution" key="instit2">Hungarian Academy of Sciences</orgName>
								<address>
									<settlement>Budapest</settlement>
									<country key="HU">Hungary</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">An Experimental System for Creating and Presenting Interactive Graphical Documents</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">4AB006B4ADCC1E00A5C252FFFC62E0D6</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.4.2 [Information Systems Applications]: Types of Systems</term>
					<term>1.3.6 [Computer Graphics]: Methodology and Techniques--interaction techniques</term>
					<term>1.7.2 [Text Processing]: Document Preparation</term>
					<term>K.3.1 [Computers and Education]: Computer Uses in Education-computer-assisted instruction (CAD General Terms: Algorithms, Human Factors maintenance and repair, pictorial information systems</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>An experimental system is described for the design, development, and presentation of computer-based documents that combine pictures and text on a high-resolution color raster display. Such documents can be used, for example, for maintenance and repair tasks, videotex databases, or computer-aided instruction.</p><p>Documents are directed graphs whose nodes we refer to as pages, in analogy to the pages of a paper book. A page includes a set of simultaneously displayed pictures, actions (procedures and processes), and indexing information. Pages may be nested arbitrarily deeply in chapters that serve much the same organizing function as those of conventional books.</p><p>The system is comprised of separate programs for laying out and drawing pictures, for graphically specifying the contents of pages, chapters, and their interconnections, and for displaying the document for user interaction.</p><p>Examples are given from a prototype maintenance and repair manual in which emphasis was placed on designing actions that allow simple real-time animation and assist in finding one's way around the document.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>responsible for today's information explosion, however, can also provide the ability to manage it. We believe that well-crafted computer-based documents can retain the useful aspects of paper documents while providing sophisticated information retrieval facilities and adaptive presentation capabilities beyond those of paper.</p><p>We are developing a database model and support software for research in computer-based documents. Our documents are directed graphs whose nodes we refer to as pages, in analogy to the pages of a conventional book.</p><p>A page includes color pictures containing both text and illustrations, actions (procedures and processes) triggered when the page is accessed or when pickable picture elements in it are selected, and indexing information, such as keywords, that may be used to satisfy retrieval requests. Thus each page is not merely a passive frame containing text and graphics, but has associated actions that may, for example, run animations, access new pages, or even run other programs. The directed-graph structure arises from actions associated with a page that cause other pages to be accessed when they are invoked. The set of actions that may be invoked from a document is conceptually part of the document itself--different documents may have different sets of actions. Pages may be placed in arbitrarily deeply nested chapters that serve much the same organizing function as those of paper books. The document itself is treated as a chapter containing those highest level chapters and pages.</p><p>The choice of a directed-graph structure is an outgrowth of our earlier work on the Hypertext Editing System <ref type="bibr" target="#b2">[3]</ref> and its successor, FRESS (File Retrieval and Editing System) <ref type="bibr" target="#b19">[19]</ref>, both of which are text processing systems with powerful information structuring and retrieval capabilities. FRESS, like NLS <ref type="bibr" target="#b4">[5]</ref>, has cross-reference facilities that allow any part of a document to reference or actually access any other part of it or another document. It has been used in large document preparation <ref type="bibr" target="#b16">[16]</ref>, including the preparation of a richly interconnected, multiauthor "communal text" <ref type="bibr" target="#b3">[4]</ref>. Our experience with FRESS and the success of network databases in applications such as computer-aided instruction {e.g., PLATO <ref type="bibr" target="#b0">[1]</ref>) have convinced us of the need for such generality. In systems such as FRESS and PLATO, however, authors often make paper sketches of network diagrams and then translate the sketched structures into appropriate commands. The author cannot view or manipulate the structure graphically. We wanted to construct a graphical authoring interface of the kind used to display tree-structured databases in the database management system SDMS <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b8">9]</ref>, but with provisions for easily manipulating rich directed-graph structure. It was important to us that the natural way of expressing graph structure--as a directed graph-become the actual means by which our authors structured their documents.</p><p>Our system is comprised of a set of programs all of which use common graphics support software that drives a high-resolution color display. Each program corresponds to a phase in the nonsequential process of creating, modifying, and presenting a document.</p><p>Picture layout is the creation of individual pictures. Document layout consists of page and chapter layout. Page layout involves combining pictures (often rough sketches that serve as "place holders") on a page Fig. <ref type="figure">1</ref>. T h e picture layout system. Here a set of grids is being used to lay out a picture. T h e picture of the machine at the left is a scaled-down instance of a separate picture; the circuit board at the right is a bit-mapped image.</p><p>and associating actions with both the page and its components. Chapter layout is the creation of chapter hierarchy and the imposition of high-level interconnection structure.</p><p>Document presentation is the interaction of the user with the document. Userselected actions are executed for the current page, and the document is traversed as actions access new pages.</p><p>We assume that the creation and modification of the database, ranging from isolated pictures to a completed document, are accomplished by skilled professionals: designers, illustrators, authors. On the other hand, the complexity of the pages and actions that are designed will vary from document to document according to the interests and abilities of a particular document's intended users. To avoid confusion, we refer to the users of the picture layout, document layout, and document presentation systems as designers, authors, and readers, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PICTURE LAYOUT</head><p>This menu-driven program allows a designer to draw and position line and solid geometric graphic primitives, bitmaps, and text (Figure <ref type="figure">1</ref>).</p><p>The top section of the screen is the picture space. The bottom section of the screen contains a palette of pickable color chips and several rows of color-coded function buttons. A small area is reserved for prompts and messages. Objects are drawn or positioned by using a data tablet and stylus to select buttons and points in the picture space. When alphanumeric input is required (e.g., for text), a simple screen editor is used.</p><p>In our current system we have allocated six out of the available eight frame buffer planes to the picture itself, allowing 64 user-selected colors. The remaining two planes are used for the menu, system-controlled highlighting, and grids (described below). Each picture has its own color palette. By convention, however, all pictures within a single document have identical palettes to allow an arbitrary set of pictures to be displayed on the same page in their correct colors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Input Primitives</head><p>The designer can draw straight and freehand lines in a variety of widths and styles, as well as arcs, circles, and ellipses. Solid rectangles, general polygons, and an area-fill facility are provided. Existing pictures may be instanced with arbitrary scaling and rotation, and bitmap images may be included (typically scanned in with a video camera). Single lines of text may be set in a variety of fonts and point sizes. In addition, a simple typesetting capability allows the designer to format TROFF <ref type="bibr" target="#b11">[11]</ref> files in a designated rectangular section of the picture. All objects possess "gravity" that can be used to position them precisely in relation to each other. When object gravity is enabled by the designer, it constrains any point selected with the data tablet within a small tolerance of an object's perimeter to lie on the perimeter itself. Some objects have gravity at additional places, such as the baseline of a line of text.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Editing Functions</head><p>Any object may be deleted, moved, copied, mirrored, centered between other objects, rotated, altered in size with or without regard to aspect ratio, and recolored. Certain objects may be modified in other ways. For example, the font or text string of a piece of text may be altered. Objects can be grouped by specifying a polygonal extent, allowing all enclosed objects to be edited with a single operation. An undo stack is maintained for reverting any modifications made during a session.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Grids</head><p>A grid system allows the designer to create grids that can be used both for layout placement and as an aid in perspective drawing. One kind of grid is a rectangle that may be divided independently along its length and width in proportions or absolute units (e.g., inches, picas, points) specified by the designer. For example, a horizontal specification of 2:0.5 in: 1 may be used to divide a rectangular grid into two columns, the left one twice as wide as the right, separated by a 0.5-inch gutter. Repetition factors allow regularly ruled grids to be easily specified. Other grids are circular (divided by proportionally spaced radii and nested concentric circles) and perspective (trapezoids specified by vanishing point). Any number of possibly overlapping grids may be used simultaneously.</p><p>The lines and intersections of grids possess gravity that may be turned on or off independently of the gravity possessed by objects. Although grids are not part of the picture being created, they may be operated on by the same object manipulation commands used for editing picture elements. The set of grids is named, saved, and retrieved separately from the picture, so that a library of standard grids may be maintained. Grids are displayed in their own plane as an overlay whose colors are a function of the colors of the objects they intersect to improve legibility--on top of dark colors grid lines are lighter, on top of light colors they are darker.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">DOCUMENT LAYOUT</head><p>It was important to us that pictures created with the picture layout system be usable (for slide shows, displays for other programs, etc.) without the rest of the document system. We therefore decided to isolate from the picture layout system those parts of the document system that dealt with the directed-graph interconnections and chapter structure. Another goal of the project was to impose as little design methodology as possible on the system's users so that neither a top-down nor a bottom-up document building strategy was enforced. As a consequence, the document layout system allows the author to alternate freely between working on a chapter and working on a page. The author may even interconnect empty pages (which are created as they are specified) or, conversely, specify the contents of a page which has yet to be linked into the document. Pictorial representations of pages and chapters are displayed in an editing window. The author's graphical editing commands result in changes to the document structure, which is maintained using an experimental relational database system <ref type="bibr" target="#b12">[12]</ref>. As with the picture layout system, any editing mistakes may be easily "undone."</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Page Layout</head><p>The page layout facilities allow the author to position on a page one or more pictures, containing illustrations and text, made with the picture layout system (Figure <ref type="figure">2</ref>). Picture elements or rectangular areas may be designated as buttons that will invoke some specified action when touched by the reader. The author couples actions to buttons by menu picking.</p><p>As a convenient shorthand, the author may indicate that whenever some picture is instanced in any other picture, it is to be considered a button with a specified default action. This feature helps reduce the tedium that would otherwise be associated with making standardized buttons on a page. If many pages of a document are to contain the same set of buttons, a button board picture may be created containing an instance of a special picture for each button desired. This one button board picture need only be included in a page to obtain all of its buttons. As any object, including a picture, may be made into a button and buttons may be placed anywhere on a page, page design can be determined entirely by designers and authors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 2. The page-editing facilities of the document layout system.</head><p>A page is being composed from already existing pictures created using the picture layout system. The author is making a button by specifying its position on the screen. The pictures w i l l then be dimmed and a menu of available actions overlaid in white.</p><p>Actions may be attached to the page itself; they are executed when the page is accessed. (A similar facility is exploited by ZOG <ref type="bibr" target="#b13">[13]</ref> and SDMS <ref type="bibr" target="#b1">[2]</ref>.) Keywords may be associated with pages for keyword retrieval. Overlay pictures, whose colors are automatically derived by interpolating between an overlay color and the colors of regular pictures, may be specified. Editing facilities allow pictures to be redefined, buttons to be associated with new objects, etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Chapter Layout</head><p>The chapter layout facilities enable the author to manipulate a chapter's structure (Figure <ref type="figure" target="#fig_0">3</ref>). The editing window displays a single chapter that may contain an arbitrary number of subchapters and pages, all shown as named solid rectangles. The color of each rectangle is specified by the author. Each subchapter's rectangle recursively contains the rectangles for those pages and chapters nested inside it. Each page's rectangle contains miniature instances of its pictures. The document is itself considered to be a chapter enclosing its highest level chapters and pages.</p><p>The author can set the level of nesting to be displayed, to avoid being overwhelmed with unwanted detail. In addition, the amount of information hiding done may be fine-tuned by selecting any unelaborated chapter or page and asking that its internals be displayed, or by turning off the detail of a chapter or page. The size and location of chapters and pages in the display are determined by the author, who positions rectangles in much the same way as the designer does with the picture layout system. T h e author selects two points on the screen with the data tablet {perhaps within a nested subchapter), and a page or chapter, as appropriate, is created. Chapter and page rectangles may not overlap, however, a restriction imposed to minimize the confusion of "hidden" pages and chapters. The page layout facilities may also be used to edit any of the displayed pages in place. Positioning is aided by the same grid facilities used by the picture layout system.</p><p>The author may traverse the document's structure by designating a chapter or page in the window, the current chapter's parent, or any arbitrary chapter or page, which is expanded to fill the window for further editing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Links</head><p>The directed-graph structure of a document is created by connecting its pages together with links. A link has a source and a destination, and indicates that there is some action that the reader can execute in the source page that will access the destination page. The link is created when the author makes a button or specifies some page-associated action that accesses a page. It appears as a solid arrow whose tail emanates from its source rectangle and whose head terminates at its destination rectangle. If there is also a link in the opposite direction, then the arrow is bidirectional, with arrowheads at both ends.</p><p>As an aid in designing a document, the author may create ".fuzzy links" that serve as high-level "placeholders" for actual links to be made later. Fuzzy links may be made by pointing to source and destination rectangles, each of which may be a chapter or page. A fuzzy link between two pages indicates that some as yet unspecified action in the source page will access the destination page. When the source or destination is a chapter, this means that the chapter contains a page (perhaps several levels down) that will be the actual source or destination.</p><p>In defining a fuzzy link the author does not have to specify what object is to be made a button or exactly what action is to be associated with it (hence our use of the term "fuzzy" ). Both source and destination might even be completely empty at the time the fuzzy link is created. When the author later edits a chapter or page associated with a fuzzy link, he or she will be prompted to resolve it by specifying an actual button and action. Fuzzy links are drawn as dashed arrows. When the fuzzy link is resolved, its arrow is solidified. A consistency check may be run to point out unreachable pages or fuzzy links that have yet to be resolved.</p><p>Since any page may potentially be connected to any other page, a confusion of arrows could result. Therefore arrows are drawn only between those pages and chapters that share the same immediate parent chapter. Chapters inherit the links of their progeny. Consequently, when two linked pages are in different chapters, some arrow (possibly at a higher level) in the document display will reflect the linkage. The author can also request more information about a link or cause the links associated with a page or chapter to be highlighted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Windows</head><p>Although the preceding discussion refers to a single editing window, the document layout system actually allows multiple windows, each of which can contain the pictorial representation of a selected chapter or page (Figure <ref type="figure" target="#fig_1">4</ref>). Windows have a constant aspect ratio and may be scaled and positioned arbitrarily on the screen, though they may not overlap. The author may traverse the structure of the document independently in each window. In addition, links may be made between pages and chapters displayed in different windows. The multiple window display makes it possible for the author to connect two chapters or pages at different levels in widely separated parts of the document, or to work in different chapters simultaneously. A change (such as deleting a page) made to a window is reflected in all windows that display the altered object, assuring consistency between windows. The visibility of features such as a page's pictures or a chapter's subchapters is determined on a per-window basis, however. Thus, each window provides a user-specified view of some part of the database. Typically, one window is used to maintain an overview of the document, while other windows show chapters and pages of interest.</p><p>Although all operations may be performed in the multiple window display, the author may elect to concentrate on any single window, which can be automatically enlarged to become the only window on the screen. T h e multiple window configuration is then saved and the author m a y return to it when desired. T h e window configuration is 01so maintained between sessions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">DOCUMENT PRESENTATION</head><p>T h e document's reader traverses the database, usually by touching buttons that cause new pages to be accessed. T h e display p r o g r a m traverses the directed graph using the following simple algorithm: access starting page loop wait for reader interaction execute associated action endloop T h e actions included in a document are logically a part of the document itself and not a part of the display system. Different documents can provide capabilities as varied as their intended audiences. In our testbed system we have sidestepped the issue of allowing the n o n p r o g r a m m e r users of the document layout system to create their own actions. We have instead opted for actions that are coded to order by application p r o g r a m m e r s and provided as "black boxes" to authors, who need to have no understanding of their internals.</p><p>Actions have access to the modeling and database systems. Thus, actions may be created that automatically fashion an entire page, such as the "timeline" display discussed below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SAMPLE DOCUMENTS</head><p>To aid in developing our document presentation system, we have been designing prototype computer-based repair manuals that could deliver the technical documentation and assistance needed to maintain and repair complicated equipment.</p><p>We envision a portable maintenance aid for the 1990s in the form of an attach6case-sized device containing a high-resolution color screen for the display of pictures and text, a touch-sensitive overlay, voice input/output, powerful computers, and a mass storage device <ref type="bibr" target="#b7">[8]</ref>. Sophisticated repair and test equipment would be built into (or directly interfaced to) the system. Thus the technician's role would be minimized, whenever possible, to mechanically attaching test leads to equipment and operating automated repair equipment. The system would decide what needed to be done through a combination of predetermined, proceduralized troubleshooting sequences and a generalized reasoning component, developed with artificial intelligence techniques, that understood the device being serviced. In addition, a rich set of browsing facilities would allow an advanced user to access any part of the document freely.</p><p>A prototype document for servicing computerized numerical control equipment was developed first. This application represents well in microcosm the large, complex databases that we want to handle. Sample pages are shown in Figures <ref type="figure" target="#fig_2">5</ref> and<ref type="figure" target="#fig_3">6</ref>. In this first document, no attempt was made to implement actions that would embody actual real-time decision making or interface with external equipment. Instead, we concentrated on developing a small set of standard actions based on data tablet interaction alone to provide a simple, easy-to-use interface. These actions are among those being used in other documents currently being designed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Basic Actions</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">New Page.</head><p>The current page is replaced with the named page. Newpage is typically attached to picture elements that are to be made buttons that invoke other pages. It is the "glue" most often used to connect the database.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Back Page.</head><p>A specified number of pages is popped from the stack of pages accessed during the session and the current page is replaced with that last popped.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Animation.</head><p>A named program in a simple diagrammatic animation language <ref type="bibr" target="#b5">[6]</ref> is interpretively executed. The modest speed with which our display can be written prohibits the use of full animation. We therefore rely on color table manipulation <ref type="bibr" target="#b14">[14]</ref>, panning and zooming about the frame buffer, and the limited animation that can be accomplished by erasing and redrawing individual objects. The color table techniques used include cycling selected portions of the color table and smoothly interpolating a color between other selected colors. Object manipulation is accomplished by scaling, translating, and rotating named objects in pictures. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.4">Overlays.</head><p>A set of pictures is displayed in its own separate plane as a tinted overlay. Its colors are derived by interpolating between the overlay color and the colors of the picture beneath, providing an effect similar to that of a colored transparent overlay.</p><p>5.1.5 Annotation. Each page is associated with a unique annotation picture. This action displays the annotation picture (if it exists) and creates a draw button. Touching draw creates the annotation picture (if it did not exist) and allows the reader to annotate by drawing with the stylus. T h e annotation picture is displayed in its own plane and is, in essence, a writable overlay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Actions that Display Document Structure</head><p>T h e reader might easily become lost if presented with a computer-based document rich in connective tissue and deprived of the physical feedback of handling a book. We are trying to design a set of actions that will help the reader maintain (or regain} a sense of where she or he is.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Folio.</head><p>A folio provides each page with a standard display of the page name, chapter name, document name, and time at which the page was accessed (Figure <ref type="figure" target="#fig_2">5</ref>). Each name appears on a field drawn in the color selected in the document layout system for the page, chapter, or document. A miniature of the previously accessed page is automatically created and is labeled as a back page button that when touched makes the previous page current. The folio action is typically associated with a page's access by the author and produces its display from information contained in the database. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Timeline.</head><p>This action is associated with a special timeline page that is empty except for the action. When the page is accessed, the action is executed and completely constructs a set of pictures and buttons on the fly, comprising a pictorial transcript of the current session (Figure <ref type="figure">7</ref>). The most recently viewed pages are inspected and classified by parent chapter. One horizontal band is drawn for each chapter represented and is colored in the chapter's color. Miniatures of the pages are drawn, each nested in its parent chapter's band, starting with the oldest on the left, with the time at which each was accessed appearing below it. The miniature pages are made into buttons that when touched transport the reader back to the selected page. Buttons permit the reader to move forward and backward along the timeline to examine miniatures of pages viewed earlier. miniatures of those pages they match. Each page miniature of this pictorial index is a button that accesses its page (Figure <ref type="figure">8</ref>). 5.2.4 Neighbors. This action creates a display in which a selected page is</p><p>shown in miniature at the center surrounded by its possible graph predecessors and successors (Figure <ref type="figure">9</ref>). Those pages that can access the center page are shown in miniature at the left with arrows leading from their associated buttons to the center page; those that can be accessed by the center page are shown at the right with arrows leading to each of t h e m from the center page's buttons. If there are more connected pages than can fit on either side of the display, small up and down arrow buttons a p p e a r at the b o t t o m of the display. These m a y be used to scroll independently through the set of pages on either side.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">IMPLEMENTATION</head><p>Our testbed document system is implemented under U N I X TM1 o n a time-shared D E C VAX 11/780. T h e graphics display is a R a m t e k 9400 graphics system with a 1280 x 1024 × 8 frame buffer, affording high image resolution. However, the iom Fig. <ref type="figure">8</ref>. T h e index page. All pages associated with a user-selected keyword are displayed. Colored bands, representing the pages' parent chapters, are alphabetically ordered by chapter name. T h e y contain alphabetized page minatures, each of which accesses its page when touched. If there are more pages t h a n will fit on the screen, then arrows appear at the bottom to allow the reader to scroll over the remainder of the index entry.</p><p>belief (inspired by the work of Xerox PARC's Learning Research Group <ref type="bibr" target="#b10">[10]</ref>) that more powerful, less expensive hardware can eventually be fit into a package about the size of a book has been a fundamental motivating force behind the project.</p><p>Figure <ref type="figure" target="#fig_6">10</ref> shows the interaction of the picture layout, document layout, and document presentation systems with the database system, modeling system, and graphics package that they use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6,1 Graphics Package and Modeling System</head><p>All document programs use a modeling and library system that builds and maintains a picture as a hierarchical data structure. Pictures are displayed through calls to a graphics package <ref type="bibr" target="#b18">[18]</ref> based on the proposed CORE graphics standard <ref type="bibr" target="#b6">[7]</ref>. Thus, instead of conceptualizing (and storing) each picture as a monolithic bit map, as do many raster graphics "paint" systems <ref type="bibr" target="#b15">[15]</ref>, our modeling system employs an underlying logical structure in which a picture is broken into components such as lines, polygons, and text, much like typical vector graphics "sketchpad" systems <ref type="bibr" target="#b17">[17]</ref>. Although this approach does not offer the same facility Experimental System for Interactive Graphical Documents 73 Fig. <ref type="figure">9</ref>. T h e neighbors page. T h e center page is surrounded by miniatures of its predecessors (on the left) and successors (on the right}, each of which is nested in a box representing its chapter. Arrows e m a n a t e from the center of buttons on the center page and its predecessors and terminate on the pages they can access. Touching a page makes it the current page. Arrows at the bottom will scroll either column to show neighbors that would not fit on the display.</p><p>in creating continuous tone pictures as a paint system, it provides several important advantages:</p><p>Smoothly scaled instances. Different pictures may make use of smoothly scaled multiple instances of common subpictures. This feature is used extensively, both to decrease the drawing time needed to make complex pictures via instancing and to make possible automatic on-the-fly generation of displays that include different-sized instances of previously created pictures, such as the timeline discussed above.</p><p>Greatly decreased storage requirements. We had an immediate need for writable storage for a large number (hundreds to thousands) of pictures. Though future mass storage technologies such as optical digital recording will make inexpensive, fast multiple-gigabyte storage of data a reality, current videodisk storage was not acceptable because of both its read-only nature and its incompatibility with non-NTSC equipment such as our own. On our system a single unencoded full-screen-sized bitmap would require 1.25 mbyte of storage, as compared to the thousands of bytes needed for typical pictures with the present . System implementation. The picture layout, document layout, and document presentation systems use a modeling system and a graphics package. In addition, the document layout and document presentation systems invoke a relational database system that maintains document structure.</p><p>approach. One of our prototype documents containing over 300 pictures is smaller than 1.25 mbyte.</p><p>Object-oriented picking facilities. The logical structure allows data tablet selection of individual logical entities as well as arbitrary rectangular areas. The object can change location or size without changing identity and can thus remain pickable.</p><p>Ease of manipulating individual elements. The ability to name and access individually each of a picture's constituent elements makes it possible to alter attributes such as color, scale, translation, and rotation for animation effects.</p><p>In addition to the storage constraints mentioned above, we are governed by severe time constraints on picture refresh. This is an interactive system, designed to be used by a presumably impatient reader. Consequently, no anti-aliasing has been attempted so far, a shortcoming mitigated somewhat by the high resolution of the display. Typical display generation times range from 7 seconds (Figure <ref type="figure" target="#fig_2">5</ref>) to 21 seconds (Figure <ref type="figure" target="#fig_3">6</ref>), still much too slow for comfortable use. The bottleneck here seems to be drawing time, which is four times that of a comparable 640 × 512 medium-resolutlon system. For example, the graphics system takes 2 seconds to draw a filled rectangle the size of the screen. Some objects, such as circles, require more time per pixel to scan convert. Other objects which the graphics system does not support directly, such as filled polygons, must first be scanconverted to vectors by the graphics package on the host. More intelligent frame buffers with faster processors and closer host coupling are needed to make systems that build complex pictures on-the-fly feasible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Relational Database System</head><p>The structure of a document is maintained by a relational database system <ref type="bibr" target="#b12">[12]</ref> which runs as a separate process. Each document is represented by a set of relations that include information on pictures, buttons, keywords, page and chapter appearance and nesting, and links. Most of the database operations that are performed by the document layout or presentation system are invariant between sessions and require only parameter substitution. These retrieval and insertion requests are precompiled by the software and referenced by name by the document layout and presentation systems, allowing increased efficiency.</p><p>Consider, for example, what happens when the reader uses the data tablet to select a point on the page. A database retrieval request is issued for a button in the current page whose area contains the selected point or which is associated with the named picked object (if any). The document presentation system executes the button's action if one is found. If it is a new page action, then the database system is requested to compare the designated page's pictures and their positions with those of the current page so that only those pictures not in the new page will be erased and only those pictures not in the old page will be drawn. The name, position, and scale of such pictures are returned and the document presentation system calls the appropriate modeling system routines to draw or erase the pictures by name. The names of any page-associated actions are retrieved next and executed by the document presentation system.</p><p>All reader interactions are recorded in a history relation and the status of each page {including, for example, whether an overlay was being displayed) is saved when it is replaced. This makes possible the back page action that allows the reader to travel back in time by restoring the status of a previous page.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSIONS</head><p>An experimental system for creating and presenting richly connected computerbased documents has been implemented. In recognition of the difficulty of creating and maintaining complex databases, we have emphasized building powerful graphical authoring tools. By making all actions logically a part of the database rather than of the display program, and by implementing a general directed-graph data structure, we have made possible a variety of documents suited to widely different purposes and audiences.</p><p>Our current research is directed toward two areas: automated authoring and 3D modeling.</p><p>Automated authoring. It is more difficult to create material that takes advantage of the capabilities of computer-based media than it is to design its paper equivalent. In our current system, all page and chapter layout is the responsibility of the author. Even with sophisticated graphical assists, however, authoring pictorial documents is a demanding and time-consuming task.</p><p>Work has begun that will result in a formalization of the knowledge needed to design pages that are more general than, for example, the highly regular "neighbors" display discussed above. Under consideration are pages such as those that provide instructions for removing a particular board from its chassis. Such pages may contain pictures of the board, open cabinet, module extractor, and perhaps even the repair person demonstrating a procedure, combined with textual instructions, explanations, and warnings. Domain-specific knowledge about the design rules for various kinds of generic display formats needed in a document and the objects to be displayed will be combined with information about the contents of a particular page to determine its layout automatically. The desired page would be classified according to its format and then composed by selecting pictures and bitmap photographs from a library of existing artwork. These would be combined with simple text strings or more complex verbatim text provided by the author, set in fonts selected in accordance with the generic format (style sheet) for the page. Both text and graphics would be scaled and positioned on the page, and appropriate actions would be associated with picture elements. Of particular interest are those situations in which a design rule may have to be stretched or broken to handle a specific page. The long-term goal is to investigate the automatic creation of multiple page structures (sequences) and eventually of entire documents generated a page at a time in response to user interaction.</p><p>3D modeling. Each different view of an object depicted in our documents is currently created "from scratch" as a picture or bitmap photograph. By deriving pictures from a 3D model of an object we will be able to create on demand the particular views needed for a page (though not in real time at first because of slow scan-conversion algorithms). This solid modeling capability will allow us to display and interact with 3D projections such as parts explosions. Eventually, we would like to have these parts explosions animated by the automated authoring component.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. T h e chapter-editing facilities of the document layout system. A small set of black-bordered chapters and white-bordered pages is shown nested inside their parent chapter which takes up the top part of the screen above the buttons and palette. D a s h e d arrows are fuzzy links that indicate that there will be a way (as yet unspecified) of getting from the source to the destination of the arrow; solid arrows are fully specified links.</figDesc><graphic coords="7,88.10,55.62,302.00,244.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. A multiple window display in the document layout system. Each window contains a chapter or page. T h e author m a y traverse the document's structure independently in each window and make links between chapters and pages in different windows. Windows m a y be created, resized, and removed as needed.</figDesc><graphic coords="9,86.90,70.57,298.00,235.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. A page from a document currently under development. T h e reader's selection of one of the four numerical controllers shown determines the page to be displayed next. All buttons (the controllers and the n a m e d rectangles along the bottom) were specified by the page's author. At the lower right, an automatically generated picture shows a miniature of the previous page (which serves as a back button), the n a m e s of the page, parent chapter and document, and the time.</figDesc><graphic coords="11,84.52,67.71,302.00,245.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. A later page from the same document. In preceding pages, the fault was isolated to a specific component which the reader has been instructed to replace.</figDesc><graphic coords="12,78.10,131.76,312.41,161.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>I</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>5. 2 . 3 Fig. 7 .</head><label>237</label><figDesc>Fig.7. The timeline page. Miniatures of the most recently viewed pages appear in chronological order. Each is nested in a colored band associated with its parent chapter. Touching a page takes the reader back to that page. The arrow at the bottom scrolls the display so the reader may examine pages that were seen earlier in the session.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 10</head><label>10</label><figDesc>Fig.10. System implementation. The picture layout, document layout, and document presentation systems use a modeling system and a graphics package. In addition, the document layout and document presentation systems invoke a relational database system that maintains document structure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="6,46.55,34.80,310.30,246.30" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>ACM Transactions on Graphics, Vol. 1, No. 1, January 1982.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>' U N I X is a trademark of Bell Laboratories. ACM Transactions on Graphics, Vol. 1, No. 1, January 1982.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>ACM Transactions on Graphics, Vol. I, No. I, January 1982.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>Past and present members of the Brown University Computer Graphics Group whose participation is gratefully acknowledged are Kurt Fleischer, Joseph Pato, Randy PauNch, Will Poole, Joel Reiser, Adam Seidman, David Salesin, Charlie Tompkins, Barry Trent, Mark Vickers, and Gerry Weil. Imre Kovacs provided creative direction of prototype documents and high-level design of the picture layout system's user interface.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the Office of Naval Research under Contract N00014-78-C-0396 and the National Science Foundation under Grant INT-7302268-A03.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">PLATO: A computer-based system used in the engineering of education</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bitzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="960" to="968" />
			<date type="published" when="1971-06">June 1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Spatial Data-Management</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bolt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<pubPlace>Cambridge, Mass</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Architecture Machine Group, Massachusetts Institute of Technology</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A hypertext editing system for the /360</title>
		<author>
			<persName><forename type="first">S</forename><surname>Carmody</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rice</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pertinent Concepts in Computer</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Graphics</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Faiman</surname></persName>
		</editor>
		<editor>
			<persName><surname>Nievergelt</surname></persName>
		</editor>
		<imprint>
			<publisher>University of Illinois Press</publisher>
			<date type="published" when="1969">1969</date>
			<biblScope unit="page" from="291" to="330" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Poetry and computers: Experimenting with the communal text</title>
		<author>
			<persName><forename type="first">J</forename><surname>Catano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Hum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="269" to="275" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The augmented knowledge workshop</title>
		<author>
			<persName><forename type="first">D</forename><surname>Engelbart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Norton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of AFIPS National Computer Conference</title>
		<meeting>AFIPS National Computer Conference<address><addrLine>Arlington, Va</addrLine></address></meeting>
		<imprint>
			<publisher>AFIPS Press</publisher>
			<date type="published" when="1973">1973</date>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="9" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Animal: A Diagrammatic Animation Language</title>
		<author>
			<persName><forename type="first">S</forename><surname>Feiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Providence, R.I</title>
		<imprint>
			<date type="published" when="1981">1981</date>
		</imprint>
		<respStmt>
			<orgName>Computer Graphics Group, Brown Univ.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Status report of the Graphic Standards Planning Committee</title>
		<author>
			<persName><surname>Gspc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Gr</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<date type="published" when="1979-08">Aug. 1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Future Technical Documentation Delivery Systems for Naval Maintenance and Repair</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fleming</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
		</imprint>
		<respStmt>
			<orgName>ONR Rep., Computer Graphics Group, Brown Univ., Providence, R.I.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A prototype spatial data management system</title>
		<author>
			<persName><forename type="first">C</forename><surname>Herot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Carling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Friedell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kramlich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Gr</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="63" to="70" />
			<date type="published" when="1980-07">July 1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1982-01">January 1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Microelectronics and the personal computer</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Scientific American</title>
		<imprint>
			<biblScope unit="volume">237</biblScope>
			<biblScope unit="page" from="230" to="244" />
			<date type="published" when="1977-09">Sept. 1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">J</forename><surname>Ossanna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">'</forename><surname>Nroff/Troff User</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Science Tech. Rep</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<date type="published" when="1976">1976</date>
			<pubPlace>Murray Hill, N.J.</pubPlace>
		</imprint>
	</monogr>
	<note>Bell Laboratories</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName><forename type="first">S</forename><surname>Reiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Providence, R.I</title>
		<imprint>
			<date type="published" when="1981">1981</date>
		</imprint>
		<respStmt>
			<orgName>Eris Reference Manual. Dep. of Computer Science, Brown Univ.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The ZOG Approach to Man-Machine Communication</title>
		<author>
			<persName><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mccracken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Newell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979-10">Oct. 1979</date>
			<pubPlace>Pittsburgh, Pa.</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dep. of Computer Science, Carnegie-Mellon Univ</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rep. CMU-CS-97-148</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Color table animation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Shoup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Gr</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="8" to="13" />
			<date type="published" when="1979-08">Aug. 1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><surname>Paint</surname></persName>
		</author>
		<author>
			<persName><surname>Tech</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1978-07">July 1978</date>
			<biblScope unit="volume">7</biblScope>
			<pubPlace>New York Institute of Technology, Old Westbury, N.Y.</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Graphics Laboratory</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An Experiment in Computer-Based Education Using Hypertext</title>
		<author>
			<persName><forename type="first">J</forename><surname>Strandberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Chomsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Scholes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Div. of Applied Mathematics and Dep. of English, Brown Univ., Providence, R.I</title>
		<imprint>
			<date type="published" when="1976-06">June 1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">SKETCHPAD: A man-machine graphical communication system</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sutherland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SJCC 1963</title>
		<meeting><address><addrLine>Baltimore, Md</addrLine></address></meeting>
		<imprint>
			<publisher>Spartan Books</publisher>
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">SGP User&apos;s Manual</title>
		<author>
			<persName><forename type="first">B</forename><surname>Trent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Providence, R.I</title>
		<imprint>
			<date type="published" when="1981">1981</date>
		</imprint>
		<respStmt>
			<orgName>Computer Graphics Group, Brown Univ.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">On-line text editing: A survey</title>
		<author>
			<persName><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rice</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="93" to="114" />
			<date type="published" when="1971-09">Sept. 1971</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1981-01">1981. 1981. 1981. January 1982</date>
		</imprint>
	</monogr>
	<note>Received August. revised October. accepted November</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
