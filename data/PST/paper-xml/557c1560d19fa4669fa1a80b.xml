<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">EDAL: An Energy-Efficient, Delay-Aware, and Lifetime-Balancing Data Collection Protocol for Heterogeneous Wireless Sensor Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yanjun</forename><surname>Yao</surname></persName>
						</author>
						<author>
							<persName><roleName>Member, IEEE, ACM</roleName><forename type="first">Qing</forename><surname>Cao</surname></persName>
							<email>cao@utk.edu</email>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Athanasios</forename><forename type="middle">V</forename><surname>Vasilakos</surname></persName>
							<email>vasilako@ath.forthnet.gr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of Tennessee</orgName>
								<address>
									<postCode>37996</postCode>
									<settlement>Knoxville</settlement>
									<region>TN</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical and Computer Engi-neering</orgName>
								<orgName type="institution">National Technical University of Athens</orgName>
								<address>
									<postCode>10682</postCode>
									<settlement>Athens</settlement>
									<country key="GR">Greece</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">EDAL: An Energy-Efficient, Delay-Aware, and Lifetime-Balancing Data Collection Protocol for Heterogeneous Wireless Sensor Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">2E957B70183BD6A3F0E00321AA19DD8A</idno>
					<idno type="DOI">10.1109/TNET.2014.2306592</idno>
					<note type="submission">received July 25, 2013; revised December 23, 2013; accepted February 10, 2014;</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Data collection</term>
					<term>energy efficiency</term>
					<term>heuristic algorithms</term>
					<term>routing protocols</term>
					<term>wireless sensor networks</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Our work in this paper stems from our insight that recent research efforts on open vehicle routing (OVR) problems, an active area in operations research, are based on similar assumptions and constraints compared to sensor networks. Therefore, it may be feasible that we could adapt these techniques in such a way that they will provide valuable solutions to certain tricky problems in the wireless sensor network (WSN) domain. To demonstrate that this approach is feasible, we develop one data collection protocol called EDAL, which stands for Energy-efficient Delay-aware Lifetime-balancing data collection. The algorithm design of EDAL leverages one result from OVR to prove that the problem formulation is inherently NP-hard. Therefore, we proposed both a centralized heuristic to reduce its computational overhead and a distributed heuristic to make the algorithm scalable for large-scale network operations. We also develop EDAL to be closely integrated with compressive sensing, an emerging technique that promises considerable reduction in total traffic cost for collecting sensor readings under loose delay bounds. Finally, we systematically evaluate EDAL to compare its performance to related protocols in both simulations and a hardware testbed.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N RECENT years, wireless sensor networks (WSNs) have emerged as a new category of networking systems with limited computing, communication, and storage resources. A WSN consists of nodes deployed to sense physical or environmental conditions for a wide range of applications, such as environment monitoring <ref type="bibr" target="#b0">[1]</ref>, scientific observation <ref type="bibr" target="#b1">[2]</ref>, emergency detection <ref type="bibr" target="#b2">[3]</ref>, field surveillance <ref type="bibr" target="#b3">[4]</ref>, and structure monitoring <ref type="bibr" target="#b4">[5]</ref>. In these applications, prolonging the lifetime of WSN and guaranteeing packet delivery delays are critical for achieving acceptable quality of service.</p><p>Many sensing applications share in common that their source nodes deliver packets to sink nodes via multiple hops, leading to the problem on how to find routes that enable all packets to be delivered in required time frames, while simultaneously taking into account factors such as energy efficiency and load balancing. Many previous research efforts have tried to achieve tradeoffs in terms of delay, energy cost, and load balancing for such data collection tasks <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>. Our key motivation for this work stems from the insight that recent research efforts on open vehicle routing (OVR) problems are usually based on similar assumptions and constraints compared to sensor networks <ref type="bibr" target="#b7">[8]</ref>- <ref type="bibr" target="#b9">[10]</ref>. Specifically, in OVR research on goods transportation, the objective is to spread the goods to customers in finite time with the minimal amount of transportation cost. One may wonder, naturally, if we treat packet delays as delivery time of goods, and energy cost as delivery cost of goods, it may be possible to exploit research results in one domain to stimulate the other.</p><p>Motivated by this observation, our work in this paper develops EDAL, an Energy-efficient Delay-Aware Lifetime-balancing data collection protocol. Specifically, EDAL is formulated by treating energy cost in transmitting packets in WSNs in a similar way as delivery cost of goods in OVR and by treating packet latencies similar to delivery deadlines. We then prove that the problem addressed by EDAL is NP-hard. To reduce its computational overhead, we introduce both a centralized metaheuristic based on tabu search <ref type="bibr" target="#b10">[11]</ref>, and a distributed heuristic based on ant colony gossiping, to obtain approximate solutions. Our algorithm designs also take into account load balancing of individual nodes to maximize the system lifetime. Finally, we integrate our algorithm with compressive sensing, which helps reduce the amount of traffic generated in the network. We evaluate both approaches using large-scale simulations with NS-3 <ref type="bibr">[12]</ref> as well as a small-scale hardware testbed and present the evaluation results.</p><p>As an extension to our conference paper <ref type="bibr" target="#b11">[13]</ref>, which only considered the case of homogeneous sensor network deployments, as reflected by its evaluation that focused on delay and energy efficiency, in this paper, we systematically address the very different research challenges of heterogeneous sensor networks to significantly strengthen our design. More specifically, our major contributions in this journal paper are as follows.</p><p>• We extend the data collection protocol called EDAL <ref type="bibr" target="#b11">[13]</ref>, which employs the techniques developed for OVR in operations research to find the minimum cost routes to deliver packets within their deadlines, to a more comprehensive and general version in the context of heterogeneous networks. The problem formulation is proven to be NP-hard. • We modified the algorithm design for both the Tabu Search in our centralized heuristic and the status gossiping component in the distributed heuristic to not only make them suitable for heterogeneous sensor networks, but also improve their performance and stability in actual deployments. • We consider the challenge brought by sparse event detection and add a systematic set of experiments for understanding and evaluating the compressive sensing reconstruction errors under different compression rate, data sparsity, and the number of source nodes. • Besides the simulations in a sensor network with heterogeneous nodes, we also evaluate the performance of the proposed protocols on the IRIS sensor nodes to demonstrate its advantages. The remainder of the paper is organized as follows. Section II includes the background about open vehicle routing problem, compressive sensing, and other related works. Section III describes the details about the centralized heuristic and the distributed heuristic. The simulation results on NS-3 <ref type="bibr">[12]</ref> as well as comparisons to baseline protocols are presented in Section IV. Section V shows the comparative results on a small-scale hardware testbed. Finally, Section VI concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND</head><p>In this section, we describe the background knowledge on both the vehicle routing problems and compressive sensing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Vehicle Routing Problems</head><p>The vehicle routing problem (VRP) <ref type="bibr" target="#b7">[8]</ref> is a well-known NP-hard problem in operational research. VRP finds routes between a depot and customers with given demands so that the transportation cost is minimized with the involvement of the minimal number of vehicles, while satisfying capacity constraints. With additional constraints, VRP can be further extended to solve different problems, where one of the most important is the vehicle routing problem with time windows (VRPTW) <ref type="bibr" target="#b8">[9]</ref>. This problem occurs frequently in the distribution of goods and services, where an unlimited number of identical vehicles with predefined capacity serve a set of customers with demands of different time intervals (time windows). VRPTW tries to minimize the total transportation cost through the minimum number of vehicles, without violating any timing constraints in delivering goods. If vehicles are not required to return back to the depot, and if the time windows are replaced by deadlines, VRPTW can be further extended to the open vehicle routing problem with time deadlines (OVRP-TD) <ref type="bibr" target="#b9">[10]</ref>.</p><p>As an NP-hard problem, OVRP-TD has inspired many heuristics. Ozyurt et al. <ref type="bibr" target="#b9">[10]</ref> proposed the nearest insertion method, where the farthest node is chosen first to be connected with a route. Then, repeatedly, each selected node chooses the nearest neighbor that has not been assigned a route so far and connects itself to this neighbor. This procedure repeats until all customers are connected by routes. Solomon <ref type="bibr" target="#b12">[14]</ref> developed the push forward insertion heuristic (PFIH), which repeatedly selects the customer with the lowest additional insertion cost as the next node, until all customers are connected. Once initial routes have been found, various algorithms <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b13">[15]</ref>- <ref type="bibr" target="#b15">[17]</ref> are developed to generate near-optimal solutions based on simulated annealing <ref type="bibr" target="#b16">[18]</ref>, tabu search <ref type="bibr" target="#b10">[11]</ref>, or genetic programming <ref type="bibr" target="#b17">[19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Compressive Sensing</head><p>Once routes have been found using EDAL, we further refine the data collection efficiency through an emerging technique called compressive sensing (CS). CS is a technique through which data are compressed during their transmission to a given destination by exploiting the fact that most sensors may not always have valid data to report when they sample the environment <ref type="bibr" target="#b18">[20]</ref>- <ref type="bibr" target="#b25">[27]</ref>, especially for nodes deployed in stable environments with rare and infrequent events to be detected.</p><p>CS works as follows. Consider the case that there are nodes generating segments of data. Such data is -sparse, meaning only of them are nonzero. We can compress these pieces of data into pieces through a linear transformation, such as (1), to reduce the number of packets, where . Formally, we have <ref type="bibr" target="#b0">(1)</ref> where is an column vector, is an matrix, and is an column vector. As , recovering from is an ill-posed problem. However, as long as can be accurately reconstructed with very high probability through minimization <ref type="bibr" target="#b26">[28]</ref>. Because CS promises improved energy efficiency and lifetime balancing properties <ref type="bibr" target="#b20">[22]</ref>, data gathering protocols have been proposed to exploit CS for better performance. Xiang et al. <ref type="bibr" target="#b27">[29]</ref> proposed a new data aggregation technique derived from CS to minimize the total energy consumption through joint routing and compressed aggregation. Mehrjoo et al. <ref type="bibr" target="#b28">[30]</ref> employed compressive sensing and particle swarm optimization algorithms to build up data aggregation trees and decrease communication rate. These two methods are different from EDAL in that they require all nodes to contribute sensing data during the data collection phase. On the other hand, Wang et al. <ref type="bibr" target="#b29">[31]</ref> proposed random routing methods based on different network topologies to collect data from a subset of nodes, which is a similar application scenario as EDAL. However, EDAL achieves better energy efficiency because it optimizes the number of constructed routes such that the total number of packets is decreased. We further compare the performance of EDAL with that reported in <ref type="bibr" target="#b29">[31]</ref> in the evaluation section to show that a better gain in energy efficiency is achieved because it exploits the topological requirements of compressive sensing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. EDAL ALGORITHM DESIGN</head><p>In this section, we propose the EDAL algorithm. First, we describe the problem model and how we can convert existing approaches in OVR research to sensor networks. Next, given that this problem is NP-complete, we develop both centralized and distributed heuristics for obtaining approximate solutions. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Problem Model</head><p>Our formulation of the problem follows a similar approach with those in the literature. We assume that there are heterogeneous sensor nodes deployed, which are modeled by a connectivity graph of , where represents wireless links between nodes. For different types of nodes, the radio bandwidth and transmission power are different. All links are assumed to be directional, and each is associated with a metric representing its link quality. To perform sensing tasks, there are nodes selected as sources. All packets must be sent to the sink within the required deadline, where different types of nodes have their own deadline requirements. The objective function of the delivery tasks is that all packets need to be delivered with the minimum total cost. The lifetime of a node is defined as the time for it to deplete its energy. A list of these definitions is shown in the Table <ref type="table" target="#tab_0">I</ref>.</p><p>Based on these notations, for each link and each route , we define as if route contains link otherwise</p><p>Next, we initialize for links with appropriate values. If the link quality is poor, then the link cost should be proportionally higher. On the other hand, to meet our goal of lifetime balancing, it is appropriate to assign a higher weight to those links connecting nodes with less remaining energy, so that they will be less frequently selected by the algorithm during execution. Finally, those nodes that consume more energy for transmitting packets are less likely to be selected. Based on this intuition, we develop the following formula to assign with proper values:</p><p>(3) where ( <ref type="formula">4</ref>)</p><p>where (4) defines a step equation for computing the remaining energy level of node . The ceiling value is computed to differentiate between complete energy depletion and near-complete energy depletion. Together, (3) and ( <ref type="formula">4</ref>) ensure that those nodes with less remaining energy, poor communication links, or more transition energy will have a lower chance of being selected as forwarders.</p><p>We now formulate our optimization objective, i.e., delivering all packets to the destination under the constraint that no packet deadline is violated, as follows:</p><formula xml:id="formula_1">s.t. (<label>5</label></formula><formula xml:id="formula_2">) (6)<label>(7) (8)</label></formula><p>where the objective function ( <ref type="formula" target="#formula_1">5</ref>) minimizes the total communication cost (if two approaches lead to the same cost, the one with lower number of participation nodes should be chosen), and the constraints ( <ref type="formula">6</ref>)-( <ref type="formula">8</ref>) ensure that: 1) all routes must end at the sink; 2) the number of routes joining into a node should be the same as the number of routes leaving from it, unless the node is the first or the last of a route; and 3) the time for the packets being transmitted on the routes should not violate packet delay requirements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Complexity Analysis</head><p>In this section, we prove that the aforementioned formulation is NP-hard.</p><p>Theorem 3.1: The problem of finding the minimum cost routes to deliver packets within their deadlines, as defined in Section III-A, is NP-hard.</p><p>Proof: To prove this fact, we need to select a known NP-hard problem and show that, in polynomial steps, it can be reduced to our problem. The particular NP-hard problem we select is the open vehicle routing problem with time deadlines (OVRP-TD) <ref type="bibr" target="#b9">[10]</ref>, which is a variant of vehicle routing problem with time windows (VRPTW) <ref type="bibr" target="#b8">[9]</ref>. This problem aims to find the least-cost routes from one point to a set of scattered points and has been proven as NP-hard. Formally, this problem is defined as follows: Given a graph with vertices and a set of edges . Let contain one depot node and customer nodes that need to be served within specified time windows. Each edge in has a nonnegative weight and a travel time . Specifically, includes the service time on node , which we denote as , and the transportation time from node to node , which we denote as . The objective is to minimize the total travel cost with the smallest number of routes. We now show that OVRP-TD can be reduced to our problem within polynomial steps. The graph in OVRP-TD can be easily transformed to a corresponding sensor network topology by representing vertices with sensor nodes. The depot corresponds to the sink node, and the customers correspond to the source nodes. The cost of the edges, , is a little tricky to handle. Specifically, we need to solve (3) by adjusting the values of , or the link quality properly. On the other hand, however, the link quality is actually determined since it is related to the transmission time from to . That is, given as a known parameter in the OVRP-TD formulation, we can obtain the appropriate value of by enforcing that (in WSN formulation)</p><p>(in OVRP-TD formulation). Recall that is the minimum transmission time of a packet over link . When links are unreliable, multiple transmissions are needed to ensure reliable delivery. Because each transmission is independent, the expected number of transmission rounds is . Therefore, the total transmission time is . Since is a fixed parameter depending on the radio hardware and bandwidth, we can decide appropriate for each link from . After that, we are able to obtain the appropriate values according to (3). The remaining formulation is straightforward. The nonnegative transportation cost of each edge in represents the cost of path connecting two source nodes with the edge. The path cost is computed based on the minimum remaining energy of the adjacent nodes. The time window for each customer is , where is the start time of the window, and is the end of the time window. If we set , and , where is the start time of the th period, and is the packet delay constraint, then the time window in OVRP-TD is transformed to delay bounds in the WSN domain. In this way, we have transformed OVRP-TD to a special case of EDAL problem formulation in polynomial time. Given that OVRP-TD is NP-hard, the problem defined by EDAL must also be NP-hard.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Centralized Heuristics</head><p>Given that we have proven the problem of data collection with deadline constraints as NP-hard, we now present heuristic solutions to reduce its computational overhead. In this section, we propose a centralized meta-heuristic that employs tabu search <ref type="bibr" target="#b10">[11]</ref> to find approximate solutions. We assume that nodes have been selected as sources at the beginning of each data collection period. The heuristic algorithm consists of two phases: route construction, which finds an initial feasible route solution, and route optimization, which improves the initial results using the tabu-search optimization technique.</p><p>In the route construction phase of this algorithm, we present a heuristic algorithm based on the revised push forward insertion (RPFIH) method, as shown in Algorithm 1. The original push forward insertion algorithm was proposed by <ref type="bibr" target="#b12">[14]</ref>, and we modify it to fit the needs of wireless sensor network. At the beginning of RPFIH, for each node, the minimum-cost path to the sink is found. RPFIH then finds the node that has the largest path cost to the sink and incrementally selects candidate nodes with the lowest additional insertion cost. For each candidate node, RPFIH also checks its feasibility by making sure that the overall Algorithm 1: Heuristic Algorithm based on Revised Push Forward Insertion Input: Topology graph , the source node set , the deadline set , the remaining time of packets , and the sink node Output: A set of routes with the minimum cost 1: Set candidate list and 2: Calculate the minimum path cost of all source nodes to the sink using the Dijkstra's algorithm 3: Put all nodes in the source set into the candidate list 4: Find the node that has the maximum path cost to the sink from , and assign the global variable 5: while do 6:</p><p>Remove the node from 7:</p><p>Assign the remaining time of packet generated by based on the packet type and , and append the value into 8:</p><p>for all node do 9:</p><p>Compute the incremental delay end if 21: end while 22: Return as the output delay requirement is met. If no candidate node can guarantee the delay, RPFIH initializes a new route with the node that has the largest path cost to the sink in the remaining sources and repeats this process until all sources are connected with the sink. Finally, RPFIH generates a set of found routes as the final output.</p><p>We now analyze the time complexity of RPFIH. As the Dijkstra's algorithm is used, it takes time to find a minimum weight path between two nodes. In RPFIH, a maximum number of paths between source nodes need to be computed. Therefore, the overall time complexity is . Next, we demonstrate the following result concerning the approximation ratio of RPFIH.</p><p>Theorem 3.2: RPFIH is a polynominal-time 2-approximation algorithm for the VRPTW.</p><p>Proof: We have already shown that RPFIH is a polynominal-time algorithm with time complexity as . Let denote the optimal routes for the given set of source nodes, and denote the routes generated by RPFIH. When the delay bound is very tight, each source node must follow the minimum-cost shortest path toward the destination. In that case, we can expect that approximately , and , where represents the total cost of the routes.</p><p>On the other hand, if the delay bound is very loose, VRPTW is equivalent to VRP. Furthermore, if the vehicle capacity is not restricted, the lower bound on the cost of an optimal route is the weight of the minimum spanning tree T <ref type="bibr" target="#b30">[32]</ref> of source nodes, where . On the other hand, in the worst case, we can observe that becomes a pre-order tree walking of T, while the insertion cost of nodes are ordered in the pre-order tree walking sequence, as shown in Fig. <ref type="figure" target="#fig_0">1</ref>. Since a full walk will travel through every edge of exactly twice, we know that . As is a route that is equal to where the last link is deleted, we have . Hence, RPIFH is a 2-approximation algorithm. While RPFI generates a list of routes, they are by no means optimal in the sense of the overall cost and delay. We next optimize the initial solution using tabu search. Tabu search is a popular memory-based search strategy for guiding search beyond locally optimal points. Specifically, tabu search keeps the following data structures.</p><p>• Tabu move list : This is a queue with fixed size to keep the recent moves, so that problems such as repetition and cycling can be avoided. • Candidate list : This is another list that stores the best solutions found so far by the search process, ranked by their total route cost.</p><p>• Maximum number of iterations : This is a parameter defined to guarantee the termination of iterations. In our tabu search implementation, we adopt the -interchange local search descent (LSD) method, which uses a systematic insertion and swapping of nodes between routes to produce mutations of the current solution. Up to nodes can be exchanged. For example, if , a total of eight interchange operations are possible, including , and , where means to choose nodes in route and swap it with nodes in route , while and may not necessarily be different. The tabu search exploits LSD in two steps: intensification and diversification. In intensification, the algorithm implements the 2-interchange LSD procedure on each route individually to find the best potential order of nodes. The diversification step enables the algorithm to search out of the local optimum by making random 2-interchange operations between routes so that better routes that are combinations of the original ones can be found. The detailed steps of this algorithm are shown in Algorithm 2. if A better route is found: then 5:</p><p>Record the partial solution into 6: else 7:</p><p>Perform -interchange LSD based diversification on each route in 8:</p><p>end if 9: end while 10: Output the best solution found so far in</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Distributed Heuristics</head><p>One problem with the centralized heuristic algorithm we have developed in EDAL is that it requires information to be collected from each node to a centralized one. In distributed sensor networks, this step will typically incur additional overhead. Therefore, it is usually desirable to distribute the algorithm computation into individual nodes. In this section, we develop a distributed heuristics algorithm for EDAL, where at the beginning of each period, each source node independently chooses the most energy-efficient route to forward packets.</p><p>Our developed algorithm is based on the ant colony optimization <ref type="bibr" target="#b31">[33]</ref> and geographic forwarding. It consists of two phases: status gossiping and route construction. In the status gossiping phase, each source node sends forward ants spreading its current status, including its remaining energy level, toward its neighbor source nodes within hops. Meanwhile, the status data of nearby nodes is collected by each source node with the received backward ants. During the gossip phase, the ants are forwarded with a modified geographic forwarding routing protocol, which chooses the node with the maximum remaining energy while making geographical progress toward the destination as the next hop. Once a node collects status information of all its nearby sources, it enters the route construction phase and runs RPFIH distributedly based on collected nearby neighbor status and the estimation of node status outside the immediate neighborhood. The overall algorithm is shown in Algorithm 3.</p><p>More specifically, the algorithm works as follows. At the beginning of each period, each source node predicts which nearby nodes to be the source nodes, based on the given random seed for each nearby node. Then, the node generates forward ants (an ant is represented as one or more packets) targeting at each of its nearby source nodes. The role of the forward ant is that it explores the path and collects information along the travel, and the role of the backward ant is that it travels back to the source node and informs their pass-by nodes to update their knowledge with the collected information.</p><p>When a relay node gets a forward ant, it selects the neighbor node with the most remaining energy to make progress to the updates neighbor status with backward ant payload 19: end if destination as the next hop and sends the ant out. The forward ant collects the information of the status and remaining energy level of each encountered node along the path. The backward ant is released under one of three cases: First, the forward ant meets another ant sent from other source nodes, where they exchange information with each other immediately; second, the initial target of the ant has been reached, and it is found to be a source node; third, the initial target is reached, but it is not a source node. Instead, a newly picked one along the path is. In each of these cases, the backward ant will be sent along the traveled path of the forward ant, and each node along the path will be updated with the collected information carried by the backward ant. With ant colony gossip, one advantage is that we can now reduce the information collected by nodes by making the collected status more relevant. The computation complexity of ant-colony based gossip is at most in the worst case, where is the maximum number of hops in the gossip range. At the end of gossip phase, each source node collects a list of source nodes, , and the cost of edges . Each node in can be inserted into the route in the route construction phase. For , it contains the costs of edges traveled by all ants sent or received by node .</p><p>The route construction phase is based on the RPFIH introduced in Section III-C. For each source node, it triggers the RPFIH if no other nearby source node with a longer distance to the sink is detected in the ant colony gossip phase. As all nodes start with a fixed amount of energy according to the node type, the source node can accurately estimate the status of nearby nodes. In that case, the minimal weight path from a source node to a nearby source node can be calculated with the currently held information. The tricky part is how to find the minimal weight path to the sink, so that the source can examine if the newly formed route violates the delay constraint. We solve this problem by letting each source node first compute the minimal weight path to each of the nodes on the border of its gossip range that make geographical progress toward the sink, and estimate the weight of the path from that node to the sink, so that it can choose the one with minimal total path weight. Assume that there is a path , which takes hops from node to the sink, in the gossip phase, node knows the edge weight of the first hops as , then the cost of the whole path is computed as <ref type="bibr" target="#b8">(9)</ref> That is, by using the number of hops and the average cost per link, the source can estimate the whole path cost from itself to the sink. The overall distributed algorithm is shown in Algorithm 4. Note that, here, a source node will be triggered to select the next target node by either receiving a route construction packet or being selected as the farthest node to sink. The algorithm terminates after all source nodes are included into their own route. In the route construction phase, only the neighborhood status information is taken into consideration to find the minimum-cost path between nearby source nodes. Therefore, the computation complexity for Dijkstra's algorithm is reduced to . Overall, the total complexity of the distributed heuristic is , which is , where is the size of gossip range in the number of hops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. SIMULATION BASED EVALUATION</head><p>In this section, we present the performance evaluation results on a large network topology with a simulation platform. To evaluate EDAL, we implement both the centralized heuristic (C-EDAL) and the distributed heuristic (D-EDAL) described in Section III and compare their performance in terms of network lifetime, selected nodes, and packet delay, with and without the integration of compressive sensing, to two selected baselines. The network lifetime is defined as the time for critical nodes to deplete their energy in the network. The details are shown in the following parts of this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Settings</head><p>In order to understand the network performance of EDAL under different delay requirements, we simulate our design in NS-3 <ref type="bibr">[12]</ref>. In the simulation, a uniform network topology with 256 sensor nodes is chosen as the simulation environment. On average, each node has at least four adjacent neighbors to communicate with. To accurately reflect true radio properties, we adopt unreliable links in our simulations. The link quality of all links is set to be 0.9 for our comparison purposes. While we Algorithm 4: The Distributed Heuristic for EDAL Input: Topology graph , the source node , the neighbor source node set , the deadline set , the remaining time of packets , and the sink node Output: Constructed routes with with the minimum insertion cost such that is not violated 1: Run the ant-colony based gossip to collect neighborhood status 2: Estimate the minimum path cost of and all to the sink using the Dijkstra's algorithm Send construction packets with empty route to each 24: end if acknowledge that more complicated radio communication patterns can be used, adopting this relatively simple radio model is already sufficient to demonstrate the performance differences between our approach and alternative baselines. The sink node is placed outside the grid and between the middle two columns. We assume that a data collection task has been deployed, which is executed periodically with a period length of 2 min. At the beginning of each period, a random collection of nodes are selected as sources. Once they have sensing data to report, either C-EDAL or D-EDAL is triggered generate new routes based on the current selection of source nodes. In D-EDAL, we set the gossip range to be 3 hops.</p><p>We compare the performance of C-EDAL and D-EDAL with the following two routing baselines.</p><p>• Minimum spanning tree (MST) routing: This is a widely used, conventional routing algorithm of WSNs, where a minimum spanning tree is constructed for collecting data to the sink. • Location-aware random routing (LRR) <ref type="bibr" target="#b29">[31]</ref>: This algorithm works in a similar way to EDAL in the sense that it also focuses on collecting data from a subset of sources.</p><p>It also integrates a level of randomness in its design, which makes the comparison particularly interesting since EDAL exploits AI-based search to introduce similar randomness. As the goal of EDAL is to connect all source nodes with minimum total cost under the constraint that it aims to achieve a balance between packet delay requirements and lifetime balancing, we compare EDAL with baselines on the following metrics.</p><p>• Network lifetime: This metric is computed as the ratio of network lifetime of different algorithms to the network lifetime of MST, which is taken as the standard unit. • Average selected node number: It is collected as the number of nodes used to form routes under different delay bounds. • Average energy consumption: It is measured as the average energy consumption of the whole network in each period. • Node remaining energy: This metric is generated as the percentage of remaining energy from the full battery on each node. • Packet delays: It is the time consumed for transmitting the packet from the source to the destination. The energy-efficiency performance is well evaluated with the first three metrics, while the lifetime-balancing and delay-aware performances are clearly indicated with the corresponding fourth and fifth metrics separately. We also integrate compressive sensing with EDAL to achieve a better gain in energy efficiency by exploiting the topological requirements of compressive sensing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Algorithm Overhead</head><p>In this section, we first evaluate the average time consumed to finish one round of algorithm computation to show the scalability and practicability of our algorithm.</p><p>We first discuss the scalability of the centralized heuristic, based on computational time overhead versus network size, as shown in Fig. <ref type="figure" target="#fig_1">2</ref>. This analysis provides a sense of feasibility for implementing the centralized heuristic in a real sensor network. Observe that, although centralized heuristic provides better performance, it is infeasible to run the centralized heuristic for large topologies with more than 400 nodes, as the computation takes longer than the communication period.</p><p>We also measured the average time used by each source node for building the routes in a distributed way, based on time overhead versus gossip range, as shown in Fig. <ref type="figure" target="#fig_3">3</ref>. The computation overhead of the distributed heuristic on each node is tightly correlated with the gossip range, while the algorithm completion time is tightly correlated with the network size. In such a case, we collected the time for finishing algorithm computation on each node with different gossip ranges on a uniform network of 256 nodes. Apparently, the larger the gossip range is, the more network status needs to be collected. However, this also leads   to longer time to finish computation, which, in fact, will be too long for gossip ranges larger than 5. In this section, we choose the gossip range as 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Experiment Results for Network With Homogeneous Nodes 1) EDAL Without CS:</head><p>To evaluate the energy efficiency and lifetime balancing effects of EDAL, we first run a set of experiments with EDAL under different delay requirements. The delay bounds of packets are set to be 45, 67.5, 90, 112.5, 135, 157.5, 180, and 202.5 ms separately for each run of experiments. As the chosen baselines do not take delay requirements into consideration, their results do not have big variations on network lifetime and energy consumption under different delay bounds.</p><p>As one goal of EDAL is to connect source nodes with the minimal number of relay nodes, we collect the number of nodes used to form routes under different delay bounds, as shown in Fig. <ref type="figure" target="#fig_4">4</ref>. Observe that the average number of nodes used by MST and LRR remains almost the same. For MST, this is because the routing tree is fixed, and the source nodes are randomly selected with a constant probability. For LRR, this is because the routes are randomly constructed based on predefined rules; therefore, the ending result does not have considerable fluctuations. For C-EDAL and D-EDAL algorithms, on the other hand, the number of participating nodes decreases with the increased delay constraints. This is because as the delay requirement is relaxed, more source nodes can be added into the same route, a feature that is made possible by the tabu search and ant-colony algorithms adopted by EDAL. As a result of that, fewer and fewer nodes are selected due to the triangle inequality (e.g., there are two source nodes A and B. The routes for A or B send packet to the sink node individually takes more nodes than the route for A send packet to B then B send packets to the sink node, in most cases), where relay nodes can serve more source nodes simultaneously.</p><p>To evaluate the energy efficiency performance of our design, we measure the average energy consumption of the whole network in each period, as shown in Fig. <ref type="figure">5</ref>. We can observe that C-EDAL and D-EDAL consume less energy on average compared to the two baselines. This is because on average they are using fewer nodes to transmit packets in each period.</p><p>As the average number of nodes used by MST stays constant under different delay bounds, the network lifetime of MST remains the same as well. As a result, we take the network of MST as the standard unit, and for each routing algorithm, we compute the ratio of its network lifetime to the standard MST network lifetime. The larger this ratio, the longer the lifetime is. As shown in Fig. <ref type="figure">6</ref>, the network lifetimes under C-EDAL and D-EDAL are increasing considerably with the delay bounds, while the network lifetime of LRR remains almost constant. This is expected because as the delay requirements are relaxed, fewer number of nodes is selected for routing as shown in Fig. <ref type="figure" target="#fig_4">4</ref>. In that case, the total energy consumption also decreases accordingly. In general, compared to MST, C-EDAL increases the overall system lifetime by up to 59.4%, and D-EDAL increases the overall lifetime by up to 54.8%. On the other hand, compared to LRR, C-EDAL increases the lifetime by up to 15.4%, and D-EDAL increases the lifetime by up to 12.1%. The lifetime gains of EDAL over LRR are not very large because in LRR, preliminary optimization has already been applied to filter out those inefficient routes. On the other hand, EDAL takes the delay bound into consideration, so that it is likely to choose the shortest paths especially when the delay bound is tight. That is why the network lifetime is comparably shorter with tighter delay bounds.</p><p>To show that EDAL also meets delay constraints, we set the delay bound of data collection tasks to be 90 ms and measure the overall packet delay for C-EDAL, D-EDAL, and the two baselines. As shown in Fig. <ref type="figure" target="#fig_6">7</ref>, the packet delay of MST is the shortest, as the packets take the fewest number of hops to the sink along the routing tree. However, as LRR does not take delay as a constraint when generating random routes, 6.4% of packets violate their delay requirements, and sometimes the actual delay could be considerably higher. On the other hand, only 0.3% of packets violate delay constraints in C-EDAL because of the unreliable links. D-EDAL performs a little worse than C-EDAL, having 0.5% of packets violating the delay constraints because of its limited gossiping ranges.</p><p>2) EDAL With CS: Our implementation of EDAL also integrates compressive sensing since this will provide us with better energy efficiency and lifetime balancing. In compressive sensing, sparse data is compressed into a small number of packets. Therefore, we are not only interested in the new energy efficiency of EDAL, but also the reconstruction rate of data.</p><p>First, assume that the sparsity of data is known ahead, we evaluate the network lifetime of EDAL and two baselines while changing the packet delay constraints. To measure the energy efficiency performance of EDAL with CS, we also measure the average energy consumption of the whole network in each period. Comparing Figs. <ref type="figure" target="#fig_7">8</ref> and<ref type="figure">5</ref>, we can observe that EDAL with CS consumes less energy during each period than pure EDAL with loose delay bounds. This is because CS enables the network to transmit fewer packets. Fig. <ref type="figure" target="#fig_8">9</ref> shows the network lifetime of C-EDAL with CS, D-EDAL with CS, MST, and LRR with CS. The lifetime of MST is still used as the standard unit. In general, the network lifetime increases with more relaxed packet delay constraints. In fact, compared to MST, the network lifetime is increased by up to 129.1% for C-EDAL with CS, and up to 56.5% for D-EDAL with CS. This is because EDAL takes into account the number of routes, which it aims to minimize during its optimization process. On the other hand, when the network delay   increases, more source nodes can be added into the same path, which results in a further decrease of the number of routes. As a result, the overall relay nodes involved decrease in number, so does the number of packets transmitted by the shared nodes. In contrast, the lifetime for LRR with CS is decreased by 47.1% on average compared to MST. This is because each source node tries to independently generate a random path towards the sink in LRR, causing the nodes near the sink to be shared by many routes. This phenomenon causes such nodes to transmit more packets in total than LRR without CS, which also explains why the lifetime of EDAL with CS is shorter in tight delay bounds compared to EDAL without CS implemented.</p><p>To measure the load balancing feature of EDAL, we fix the delay bound to be 180 ms and collect the CDF of remaining energy on each node at the end of the simulation. As shown in Fig. <ref type="figure" target="#fig_9">10</ref>, as enabled by the load balancing performance of CS, we can observe that the curves of EDAL are less steep compared to the curves of the two baselines, meaning that it achieves a better load balancing result. Also, in this figure, EDAL has less remaining energy because it executes the routing tasks for more periods.  Finally, we consider the case where the sparsity of data is unknown in advance. To achieve the most power-efficient compression ratio, and to achieve low reconstruction errors, we implement a centralized feedback system to adjust the compression ratio for the next period based on the current reconstruction error for all the packets collected in the ongoing period. We define the compression ratio as , where is the number of packets collected with compressive sensing, and is the number of packets that can be used to represent the original data. It is straightforward to understand that the lower the compression ratio is, the fewer the number of packets needs to be transmitted. Therefore, more power can be saved, as shown in Fig. <ref type="figure" target="#fig_10">11</ref>. To make the system work properly, we compute and plot the relationship between reconstruction error and compression ratio, data sparsity, and source node number as shown in Fig. <ref type="figure" target="#fig_11">12</ref>, where the reconstruction error is computed as the average of 100 runs of reconstruction rounds. We predict the data sparsity in next period based on the current reconstruction error and the number of source nodes, so that we can then choose the best compression ratio based on the predicted results. We observe from Fig. <ref type="figure" target="#fig_11">12</ref> that the compression ratio with acceptable reconstruction error decreases with the decrease of data sparsity and increase of source node number. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Experiment Results for Network With Heterogeneous Nodes</head><p>As described in Section III, EDAL is designed for heterogeneous networks with heterogeneous nodes and different types of packets. We assume that heterogeneous nodes consume different amount of energy for packet transmissions, and different types of packets have heterogeneous delay bounds. To measure the performance of such networks, we present simulation results on three types of sensor nodes and five types of packets.</p><p>1) EDAL Without CS: We first investigate EDAL performance without compressive sensing. We set the average delay bounds of packets to be 67.5, 90, 112.5, 135, 157.5, 180, 202.5, and 225 ms separately for each run of experiments. In each experiment, the number of different types of packets is evenly distributed, and the corresponding delay bounds are set to be , and ms, where is the average delay bound.</p><p>Similar to the earlier experiments, in this section, we first compare the number of nodes used to form routes under different delay bounds, as shown in Fig. <ref type="figure" target="#fig_12">13</ref>. As there is no modification to MST and LRR, the average number of nodes used by these two algorithms is still almost constant, for the same reason explained in Section IV-C. For C-EDAL and D-EDAL algorithms, as a result of triangle inequality discussed previously, the number of participating nodes is decreasing with the increased delay constraints. However, compared to Fig. <ref type="figure" target="#fig_4">4</ref>, more nodes are used to construct routes for the same average delay bound, as in such heterogeneous networks, the algorithm needs to serve tighter minimum delay requirements. In that case, each route will consist of fewer source nodes.</p><p>Second, we compare the network lifetime. Similar to Section IV-C, we take the network lifetime of MST as the standard unit. For each routing algorithm, we compute the ratio of its network lifetime to the standard MST network lifetime as the average number of nodes used by MST stays constant under different delay bounds. As shown in Fig. <ref type="figure" target="#fig_13">14</ref>, similar to the trend of Fig. <ref type="figure">6</ref>, the network lifetimes under C-EDAL and D-EDAL are increasing considerably with the delay bounds for the same reason described in Section IV-C. More specifically, compared to MST, C-EDAL increases the overall system lifetime by up to 60%, and D-EDAL increases the overall lifetime by up to 52%. On the other hand, compared to LRR, C-EDAL increases the lifetime by up to 13.79%, and D-EDAL increases the lifetime by up to 8.1%. However, as the minimum delay bound of the heterogeneous network is tighter compared to the   homogeneous network, for the same average delay bound, the lifetime of the heterogeneous network is shorter.</p><p>Third, the average energy consumption for each period of the whole network is measured to explicitly show the energy efficiency performance of our design in heterogeneous network. As shown in Fig. <ref type="figure" target="#fig_14">15</ref>, as fewer nodes are used to transmit packets in each period, C-EDAL and D-EDAL consume less energy on average compared to the two baselines. However, compared to Fig. <ref type="figure">5</ref>, more energy is consumed for serving a tighter minimum delay requirement.</p><p>Finally, we set the average delay bound of the heterogeneous network to be 90 ms and measure the overall packet delay for C-EDAL, D-EDAL, and the two baselines. As shown in Fig. <ref type="figure" target="#fig_15">16</ref>, almost all packets of EDAL meet their deadline requirements.</p><p>2) EDAL With CS: In this section, we will compare EDAL to the two baselines, under the condition that the data sparsity is known ahead and the compressive sensing is integrated.</p><p>We first evaluate the network lifetime, while the average packet delay constraints are set to different values. The network lifetime of C-EDAL with CS, D-EDAL with CS, MST, and LRR with CS are shown in Fig. <ref type="figure" target="#fig_17">17</ref>   as the standard unit. Similar to the results shown in Fig. <ref type="figure" target="#fig_13">14</ref>, the network lifetime increases with more relaxed packet delay constraints. As compressive sensing enables fewer number of packets to be transmitted, the lifetime of EDAL with CS is generally longer than the lifetime of EDAL without CS. On the other hand, compared to MST, as EDAL considers generating the minimal number of routes as one of its primary optimization goals, the network lifetime increases by up to 124% for C-EDAL with CS, and up to 51% for D-EDAL with CS. Finally, also observe that the lifetime for LRR with CS is decreased by 50.5% on average compared to MST, and the lifetime of LRR with CS is shorter compared to LRR without CS, which is consistent with our results in Section IV-C.</p><p>Second, the average energy consumption of the whole network in each period is measured to show the energy efficiency performance of EDAL. Comparing Figs. <ref type="figure" target="#fig_18">18</ref> and<ref type="figure" target="#fig_14">15</ref>, we can observe that EDAL with CS consumes less energy for each period than EDAL only, as CS enables the network to transmit fewer number of packets.</p><p>Finally, we measure the load balancing feature of EDAL by fixing the delay bound to be 180 ms and collecting the CDF of remaining energy on each node at the end of the simulation. As shown in Fig. <ref type="figure" target="#fig_19">19</ref>, the curves of EDAL are smoother than the curves of the two baselines, as EDAL performs better on load balancing than baselines. The less remaining energy in EDAL is because it runs for more periods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. EDAL Application for Sparse Event Detection</head><p>As EDAL tries to select the minimal number of extra nodes, we can use it in sparse event detection to provide improved system lifetime. In such scenarios, we suppose that of total events are randomly generated to be measured in each time period, where</p><p>. To detect such events, we deploy a sensor  When EDAL collects data on those events, it selects the minimum number of extra nodes. In that case, if the relay nodes are employed to sense the events besides the source nodes, under the same , fewer nodes are selected compared to other routing algorithms. Assume the total number of selected nodes is , if is larger than , where is the lower bound of nodes to provide acceptably accurate estimation of can be decreased to save power by selecting fewer than nodes. To achieve this, we build up a feedback system in C-EDAL to choose the most power efficient based on the signal reconstruction error. If the signal sparsity is known ahead, C-EDAL adjusts simply based on the total nodes used to form the data collection routes. However, in most scenarios, the data sparsity is unknown. Luckily, as shown in Table <ref type="table" target="#tab_4">II</ref>, which is a subset of average mapping between and different data sparsity of 100 runs in our simulation network, there is an obvious trend that the reconstruction error increases with the increase of data sparsity under the same , and decreases with the increase of under the same data sparsity. In that case, we can estimate the data sparsity based on the given and reconstruction error, and then choose the minimum that can provide acceptable reconstruction accuracy for the next period.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. HARDWARE EVALUATION</head><p>In this section, we show experimental results for running both the centralized heuristic (C-EDAL) and the distributed heuristic (D-EDAL) described in Section III on a small-scale hardware testbed. We compare their performance in terms of network lifetime, energy consumption, and packet delay, with and without the integration of compressive sensing, to two selected baselines. The details are shown in the following parts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experimental Settings</head><p>The hardware testbed consists of 26 IRIS <ref type="bibr" target="#b32">[34]</ref> motes and a DELL Precision workstation as the central controller. Each IRIS mote is equipped with an Atmel ATmega1281 microcontroller, an Atmel AT86RF23 radio, and 512 K flash space. We deploy the 25 motes in a uniform network topology on a wood board with size 2. The sink node is connected to the DELL workstation, which performs two tasks: First, it collects the traffic information from the sink mote; second, it runs C-DEAL periodically and send result routes to sink mote. The workstation and the sink mote communicate through serial port.</p><p>In this hardware testbed, the communication links are not reliable. We collect the number of packets transmitted and the number of packets received during experiments between each pair of adjacent nodes and compute link quality as . The routing tree of MST algorithm is constructed with link cost computed as .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Hardware Experiment Results</head><p>To evaluate the energy efficiency and lifetime balancing effects of EDAL, we first run a set of experiments with EDAL running alone under fixed delay requirements as 250 ms. In these experiments, similar to what we did in simulations, we take the network lifetime of MST as the standard unit. For each routing algorithm, we compute the ratio of its network lifetime to the standard MST network lifetime. As shown in Fig. <ref type="figure" target="#fig_22">21</ref>, compared to MST, C-EDAL increases the overall system lifetime by 42.8%, and D-EDAL increases the overall lifetime by up to   34.8%. On the other hand, if we enable CS, these values are increased to 81.9% and 44.9%. Finally, we observe that LRR increases the lifetime by up to 32.9%. However, if CS is enabled, LRR decreases the lifetime by 3.1%.</p><p>Next, to evaluate the energy efficiency of our design, we measure the average energy consumption of the whole network in each period, as shown in Fig. <ref type="figure" target="#fig_23">22</ref>. Consistent with the simulation results, C-EDAL and D-EDAL consume less energy on average compared to two baselines. This is because, on average, they are using fewer nodes to transmit packets in each period. As shown in Fig. <ref type="figure" target="#fig_24">23</ref>, enabled by the load balancing performance of CS, we can observe that the curves of EDAL are smoother than the curves of the two baselines. This shows that EDAL performs better on load balancing than baselines. Finally, to demonstrate that EDAL also meets delay constraints, we measure the overall packet delay for C-EDAL, D-EDAL and the two baselines. As shown in Fig. <ref type="figure" target="#fig_25">24</ref>, we can observe that only less than 0.3% of packets violate their delay bound. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head><p>In this paper, we propose EDAL, an Energy-efficient Delay-Aware Lifetime-balancing protocol for data collection in wireless sensor networks, which is inspired by recent techniques developed for open vehicle routing problems with time deadlines (OVRP-TD) in operational research. The goal of EDAL is to generate routes that connect all source nodes with minimal total path cost, under the constraints of packet delay requirements and load balancing needs. The lifetime of the deployed sensor network is also balanced by assigning weights to links based on the remaining power level of individual nodes. We prove that the problem formulated by EDAL is NP-hard. Therefore, we develop a centralized heuristic to reduce its computational complexity. Furthermore, a distributed heuristic is also developed to further decrease computation overhead for large-scale network operations. Based on both simulation and hardware testbed evaluation results, we observe that compared to baseline protocols, EDAL achieves a significant increase on network lifetime without violating the packet delay constraints. Finally, we demonstrate that by integrating compressive sensing with EDAL, additional lifetime gains can be achieved.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Worst case and optimal solution of RPFIH. (a) MST. (b) . (c) .</figDesc><graphic coords="5,52.98,63.12,222.00,76.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Algorithm 2 :</head><label>2</label><figDesc>The Centralized Heuristic Algorithm in EDAL Input: The list of routes from RPFI Output: A list of optimized routes 1: Initialize Tabu move list and candidate list 2: while Total number of steps is less than : do 3: Perform -interchange LSD based intensification on each route in 4:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Computational time overhead of the centralized heuristic under different network sizes.</figDesc><graphic coords="8,79.02,64.14,171.96,102.96" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Computational time overhead of the distributed heuristic with different gossip ranges in a network with 256 nodes.</figDesc><graphic coords="8,79.02,210.12,171.96,102.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Average node number used in each period by different algorithms with different delay requirements.</figDesc><graphic coords="8,79.02,354.12,171.96,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>Fig. 5. Average energy consumption of the network running different routing algorithms.</figDesc><graphic coords="8,343.02,63.12,171.96,106.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Cumulative distribution function (CDF) of delay of packets generated in the whole network duration from different routing algorithms.</figDesc><graphic coords="9,78.00,64.14,172.02,102.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Average energy consumption of the network with CS while running different routing algorithms.</figDesc><graphic coords="9,342.00,64.14,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Network lifetime with CS implemented on different routing algorithms.</figDesc><graphic coords="9,342.00,213.12,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. CDF of remaining energy of each node while running different routing algorithms.</figDesc><graphic coords="9,342.00,354.12,172.02,103.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Network lifetime with CS implemented on different routing algorithms with delay constraint as 135 ms.</figDesc><graphic coords="10,79.02,64.14,171.96,106.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Reconstruction error under different compression rate, data sparsity, and source node number. (a) 5-sparse. (b) 20-sparse.</figDesc><graphic coords="10,67.02,216.12,196.98,217.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Average node number used in each period by different algorithms in the heterogeneous network.</figDesc><graphic coords="10,343.02,65.16,171.96,103.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Network lifetime while running different routing algorithms in the heterogeneous network.</figDesc><graphic coords="11,78.00,64.14,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Average energy consumption of the heterogeneous network while running different routing algorithms.</figDesc><graphic coords="11,78.00,211.14,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. CDF of delay of packets generated in the heterogeneous network from different routing algorithms.</figDesc><graphic coords="11,78.00,358.14,172.02,103.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head></head><label></label><figDesc>. The lifetime of MST is used</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 17 .</head><label>17</label><figDesc>Fig. 17. Lifetime of the heterogeneous network with CS implemented on different routing algorithms.</figDesc><graphic coords="11,342.00,63.12,172.02,106.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 18 .</head><label>18</label><figDesc>Fig. 18. Average energy consumption of the heterogeneous network with CS while running different routing algorithms.</figDesc><graphic coords="11,342.00,213.12,172.02,103.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. CDF of remaining energy of each node while running different routing algorithms in the heterogeneous network.</figDesc><graphic coords="12,79.02,64.14,171.96,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Fig. 20 .</head><label>20</label><figDesc>Fig. 20. Hardware testbed topology.</figDesc><graphic coords="12,331.02,64.14,196.98,199.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head></head><label></label><figDesc>3 2.3 m and use the extra mote as the sink node, as shown in Fig. 20. To deal with the short mote distances, we set IRIS mote to use the smallest communication power to reduce communication range and interference between motes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Fig. 21 .</head><label>21</label><figDesc>Fig. 21. Network lifetime while running different routing algorithms in the small-scale testbed network.</figDesc><graphic coords="13,78.00,65.10,172.02,102.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>Fig. 22 .</head><label>22</label><figDesc>Fig. 22. Average energy consumption while running different routing algorithms in the small-scale testbed network.</figDesc><graphic coords="13,78.00,224.16,172.02,103.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head>Fig. 23 .</head><label>23</label><figDesc>Fig. 23. CDF of remaining energy of each node while running different routing algorithms in the small-scale testbed network.</figDesc><graphic coords="13,78.00,385.14,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>Fig. 24 .</head><label>24</label><figDesc>Fig. 24. CDF of delay of packets generated in the whole testbed network duration from different routing algorithms.</figDesc><graphic coords="13,342.00,64.14,172.02,105.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="3,40.98,94.14,246.00,241.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I NOTATIONS</head><label>I</label><figDesc>OF EDAL   </figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Algorithm 3 :</head><label>3</label><figDesc>The Ant Colony Based Gossiping Algorithm</figDesc><table><row><cell cols="4">Input: Topology graph , the source node , the nearby</cell></row><row><cell></cell><cell cols="2">source node set</cell></row><row><cell cols="4">Output: spread its status to nearby neighbors, and collects</cell></row><row><cell cols="3">status of nearby neighbors</cell></row><row><cell cols="2">1: for all</cell><cell>do</cell></row><row><cell>2:</cell><cell cols="3">generates a forward ant to , where the ant holds a</cell></row><row><cell></cell><cell>tuple as</cell><cell></cell><cell>,</cell></row><row><cell></cell><cell>where</cell><cell cols="2">is a tuple</cell></row><row><cell cols="2">3: end for</cell><cell></cell></row><row><cell cols="2">4: if Node</cell><cell cols="2">receive the forward ant then</cell></row><row><cell>5:</cell><cell cols="2">generates an</cell><cell>tuple , and saves</cell></row><row><cell></cell><cell cols="2">into the payload of</cell></row><row><cell>6:</cell><cell cols="3">forward with the modified geographic forwarding</cell></row><row><cell></cell><cell cols="2">routing protocol</cell></row><row><cell cols="2">7: end if</cell><cell></cell></row><row><cell cols="4">8: if Two forward ants from source nodes and meet</cell></row><row><cell></cell><cell>at node</cell><cell>then</cell></row><row><cell>9:</cell><cell cols="2">Ants exchange information</cell></row><row><cell>10:</cell><cell cols="3">generates backward ants towards and</cell></row><row><cell cols="2">11: else if Node</cell><cell>then</cell></row><row><cell>12:</cell><cell cols="2">generates backward ants towards</cell></row><row><cell cols="2">13: else</cell><cell></cell></row><row><cell>14:</cell><cell>picks</cell><cell>, where</cell></row><row><cell>15:</cell><cell cols="3">Repeat the process, until a source node is found</cell></row><row><cell cols="2">16: end if</cell><cell></cell></row><row><cell cols="4">17: if A backward ant travels to a node then</cell></row><row><cell>18:</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE II RECONSTRUCTION</head><label>II</label><figDesc>ERROR WITH DIFFERENT NODE SELECTION PROBABILITIES AND EVENT SPARSITY FOR network of nodes so that each node can detect the event with a probability as . Assume there are sensors that are located in the vicinity of the events, where , and the remaining sensor nodes are put into sleep state. The received signals of sensors are the mix of signals from simultaneously happening events and the thermal noise. The event signals can be reconstructed from sensor readings of no fewer than required number of sensor nodes.</figDesc><table /></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>approved by IEEE/ACM TRANSACTIONS ON NETWORKING Editor S. Puthenpura. The work reported in this paper was supported in part by the National Science Foundation grant CNS-0953238, CNS-1017156, CNS-1117384, and CNS-1239478. It was also partially supported by a grant made by the JDRD program of the Science Alliance of UT. Y. Yao and Q. Cao are with the</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A macroscope in the redwoods</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tolle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Turner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Burgess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dawson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Buonadonna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd ACM SenSys</title>
		<meeting>3rd ACM SenSys<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="51" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fidelity and yield in a volcano monitoring sensor network</title>
		<author>
			<persName><forename type="first">G</forename><surname>Werner-Allen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lorincz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lees</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Welsh</surname></persName>
		</author>
		<author>
			<persName><surname>Usenix Association</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th OSDI</title>
		<meeting>7th OSDI<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="381" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Underground coal mine monitoring with wireless sensor networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Sen. Netw</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2009-04">Apr. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Achieving long-term surveillance in VigilNet</title>
		<author>
			<persName><forename type="first">P</forename><surname>Vicaire</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Stoleru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Abdelzaher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Sen. Netw</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1" to="9" />
			<date type="published" when="2009-02">Feb. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A wireless sensor network for structural monitoring</title>
		<author>
			<persName><forename type="first">N</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rangwala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Chintalapudi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ganesan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Broad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Govindan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd ACM SenSys</title>
		<meeting>2nd ACM SenSys<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="13" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Optimal node selection for target localization in wireless camera sensor networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Veh. Technol</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="3562" to="3576" />
			<date type="published" when="2010-09">Sep. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Sensor selection for parameterized random field estimation in wireless sensor networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Control Theory Appl</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="44" to="50" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The vehicle routing problem: A taxonomic review</title>
		<author>
			<persName><forename type="first">B</forename><surname>Eksioglu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Vural</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Reisman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Ind. Eng</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1472" to="1483" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Vehicle routing problem with time windows, Part I: Route construction and local search algorithms</title>
		<author>
			<persName><forename type="first">O</forename><surname>Bräysy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gendreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transport. Sci</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="104" to="118" />
			<date type="published" when="2005-02">Feb. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Open vehicle routing problem with time deadlines: Solution methods and an application</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Ozyurt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Aksen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Aras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Operations Research Proceedings 2005, ser. Operations Research Proceedings</title>
		<editor>
			<persName><forename type="first">H.-D</forename><surname>Haasis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Kopfer</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Schnberger</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2006. 2005</date>
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Heuristic methods for vehicle routing problem with time windows</title>
		<author>
			<persName><forename type="first">K</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Artif. Intell. Eng</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="281" to="295" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">EDAL: An energy-efficient, delay-aware, and lifetime-balancing data collection protocol for wireless sensor networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Vasilakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th IEEE MASS</title>
		<meeting>10th IEEE MASS</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="182" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Algorithms for the vehicle routing and scheduling problems with time window constraints</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Solomon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Oper. Res</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="254" to="265" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Combining nearest neighbor search with tabu search for large-scale vehicle routing problem</title>
		<author>
			<persName><forename type="first">L</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Proc</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">0</biblScope>
			<biblScope unit="page" from="1536" to="1546" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Solving a vehicle routing problem with time windows by a decomposition technique and a genetic algorithm</title>
		<author>
			<persName><forename type="first">C.-B</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-P</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. With Appl</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="7758" to="7763" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Simulated annealing metaheuristics for the vehicle routing problem with time windows</title>
		<author>
			<persName><forename type="first">W.-C</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="3" to="27" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Optimization by simulated annealing: A preliminary computational study for the TSP</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Skiścim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Golden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 15th IEEE WSC</title>
		<meeting>15th IEEE WSC<address><addrLine>Piscataway, NJ, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983">1983</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="523" to="535" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Adaptation in Natural and Artificial Systems: An Introductory Analysis With Applications to Biology</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Holland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Control and Artificial Intelligence</title>
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Distributed compressive sampling for lifetime optimization in dense wireless sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Caione</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Brunelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Benini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Ind. Inf</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="30" to="40" />
			<date type="published" when="2012-02">Feb. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Ultra-lowpower compressive wireless sensing for distributed wireless networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE MILCOM</title>
		<meeting>IEEE MILCOM</meeting>
		<imprint>
			<date type="published" when="2009-10">Oct. 2009</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Improving network lifetime for wireless sensor network using compressive sensing</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th IEEE HPCC</title>
		<meeting>13th IEEE HPCC</meeting>
		<imprint>
			<date type="published" when="2011-09">Sep. 2011</date>
			<biblScope unit="page" from="448" to="454" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Compressive data gathering for large-scale wireless sensor networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM MobiCom</title>
		<meeting>ACM MobiCom</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="145" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Energy and latency analysis for in-network computation with compressive sensing in wireless sensor networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM</title>
		<meeting>IEEE INFOCOM</meeting>
		<imprint>
			<date type="published" when="2012-03">Mar. 2012</date>
			<biblScope unit="page" from="2811" to="2815" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Decentralized sparse signal recovery for compressive sleeping wireless sensor networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Tian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Process</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="3816" to="3827" />
			<date type="published" when="2010-07">Jul. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Multi-session data gathering with compressive sensing for large-scale wireless sensor networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE GLOBECOM</title>
		<meeting>IEEE GLOBECOM</meeting>
		<imprint>
			<date type="published" when="2010-12">Dec. 2010</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">On the capacity and delay of data gathering with compressive sensing in wireless sensor networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE GLOBECOM</title>
		<meeting>IEEE GLOBECOM</meeting>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Fast solution of l1-norm minimization problems when the solution may be sparse</title>
		<author>
			<persName><forename type="first">D</forename><surname>Donoho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tsaig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<pubPlace>Stanford, CA, USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Statistics, Stanford University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Compressed data aggregation for energy efficient wireless sensor networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vasilakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 8th Annu. IEEE SECON</title>
		<meeting>8th Annu. IEEE SECON</meeting>
		<imprint>
			<date type="published" when="2011-06">Jun. 2011</date>
			<biblScope unit="page" from="46" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A novel intelligent energy-efficient delay-aware routing in WSN, based on compressive sensing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mehrjoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Shanbehzadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pedram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th IST</title>
		<meeting>5th IST</meeting>
		<imprint>
			<date type="published" when="2010-12">Dec. 2010</date>
			<biblScope unit="page" from="415" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Compressed sensing for efficient random routing in multi-hop wireless sensor networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE GLOBECOM Workshops</title>
		<meeting>IEEE GLOBECOM Workshops</meeting>
		<imprint>
			<date type="published" when="2010-12">Dec. 2010</date>
			<biblScope unit="page" from="266" to="271" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Leiserson</surname></persName>
		</author>
		<title level="m">Introduction to Algorithms</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw-Hill</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">An improved antbased routing protocol in wireless sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T.-D</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W.-G</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Collabo-rateCom</title>
		<meeting>Collabo-rateCom</meeting>
		<imprint>
			<date type="published" when="2006-11">Nov. 2006</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">IRIS sensor nodes</title>
		<author>
			<persName><forename type="first">Andover</forename><surname>Memsic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Usa</forename></persName>
		</author>
		<ptr target="http://www.memsic.com/products/wireless-sensor-networks/wireless-modules.html" />
		<imprint>
			<date type="published" when="2012-10-11">Oct. 11, 2012</date>
		</imprint>
	</monogr>
	<note>Online</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
