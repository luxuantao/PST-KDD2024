<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Ant colony optimization combined with taboo search for the job shop scheduling problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2006-08-22">22 August 2006</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Kuo-Ling</forename><surname>Huang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Industrial Management</orgName>
								<orgName type="institution">National Taiwan University of Science and Technology</orgName>
								<address>
									<addrLine>43 Keelung Road, Section 4</addrLine>
									<postCode>106</postCode>
									<settlement>Taipei</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ching-Jong</forename><surname>Liao</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Industrial Management</orgName>
								<orgName type="institution">National Taiwan University of Science and Technology</orgName>
								<address>
									<addrLine>43 Keelung Road, Section 4</addrLine>
									<postCode>106</postCode>
									<settlement>Taipei</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Ant colony optimization combined with taboo search for the job shop scheduling problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2006-08-22">22 August 2006</date>
						</imprint>
					</monogr>
					<idno type="MD5">78E2B3A3A05B7CF06DC035C6B56D1D95</idno>
					<idno type="DOI">10.1016/j.cor.2006.07.003</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Ant colony optimization</term>
					<term>Taboo search</term>
					<term>Job shop scheduling</term>
					<term>Makespan</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we present a hybrid algorithm combining ant colony optimization algorithm with the taboo search algorithm for the classical job shop scheduling problem. Instead of using the conventional construction approach to construct feasible schedules, the proposed ant colony optimization algorithm employs a novel decomposition method inspired by the shifting bottleneck procedure, and a mechanism of occasional reoptimizations of partial schedules. Besides, a taboo search algorithm is embedded to improve the solution quality. We run the proposed algorithm on 101 benchmark instances and obtain competitive results and a new best upper bound for one open benchmark instance is found.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The problem that we address in this paper arises in the context of the classical job shop scheduling problem (JSSP). In the JSSP, a set of jobs has to be processed on several machines subject to both conjunctive and disjunctive constraints, and the objective is to minimize the makespan. This problem is NP-hard in the strong sense <ref type="bibr">[1]</ref>; not until 1988 (publication year) could a relatively small instance with 10 jobs and 10 machines be solved to optimality.</p><p>Due to the complexity of the JSSP, it is unrealistic to solve even a medium-sized problem by using a time-consuming optimization algorithm, such as branch and bound schemes or integer programming <ref type="bibr" target="#b13">[2]</ref>. Therefore, metaheuristics such as taboo search (TS) <ref type="bibr" target="#b14">[3]</ref><ref type="bibr" target="#b15">[4]</ref><ref type="bibr" target="#b16">[5]</ref><ref type="bibr" target="#b17">[6]</ref>, genetic algorithms <ref type="bibr" target="#b18">[7]</ref>, and simulated annealing <ref type="bibr" target="#b19">[8,</ref><ref type="bibr" target="#b54">43]</ref> have been studied much in recent years (also see review papers <ref type="bibr" target="#b20">[9]</ref><ref type="bibr" target="#b21">[10]</ref><ref type="bibr" target="#b22">[11]</ref> for details).</p><p>However, each metaheuristic has its own strength and weakness. Therefore, much research has tried to develop hybrid algorithms expecting to achieve complementarity, which improves the effectiveness and efficiency. Those previous experiments have showed that the effectiveness and efficiency of hybrid algorithms are often better than those of more simplistic ones <ref type="bibr" target="#b23">[12]</ref><ref type="bibr" target="#b24">[13]</ref><ref type="bibr" target="#b25">[14]</ref><ref type="bibr" target="#b26">[15]</ref><ref type="bibr">[16]</ref>.</p><p>In this paper, we propose a hybrid algorithm for the JSSP. Following the concept of the shifting bottleneck (SB) procedure <ref type="bibr" target="#b28">[17]</ref>, the proposed algorithm combines ant colony optimization (ACO) with a TS algorithm. Due to its exploration and information learning abilities, ACO is expected to provide an appropriate initial schedule, which can thereby be enhanced by TS iteratively.</p><p>The remainder of this paper is organized as follows. In the next section, the JSSP is formulated mathematically. In Section 3, the proposed ACO framework is introduced and analyzed. Then, we describe the local search methods and give the implementation details in Section 4. Finally, computational results for benchmark instances are provided and the proposed algorithm is compared with some of the best-performing ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Problem definition and notation</head><p>In the JSSP, a finite set of jobs is processed on a finite set of machines. Each job follows a predefined machine order and has a deterministic processing time. Each machine can process at most one job at a time, which cannot be interrupted until its completion. A feasible schedule of the JSSP is to build a permutation of jobs for each machine. The objective is to find a feasible schedule that minimizes the makespan.</p><p>The JSSP can mathematically be defined as follows. There are a set M of machines, a set J of jobs, and a set O of operations, where j m ( j m ∈ O) represents a specific operation for job j on machine m. Let j m ≺ j k be the processing order restriction, i.e., j k cannot be processed before the completion of j m . Let (m) denote the permutation of jobs on machine m (m = 1, . . . , <ref type="bibr">|M|)</ref>, where (m, j )(j = 1, . . . , |J |) is the element of (m) processed in position j . Hence, a feasible schedule of JSSP is defined by = { (1), ( <ref type="formula" target="#formula_5">2</ref>), . . . , (|M|)}.</p><p>The JSSP can be represented by the disjunctive graph G = {V , A, E} given below <ref type="bibr" target="#b29">[18]</ref>:</p><formula xml:id="formula_0">V = {O ∪ source, sink}, A = {( j m , j k )| j m , j k ∈ O, j m ≺ j k } ∪ {(source, j k )| j k ∈ O, j m ∈ O ∧ j m ≺ j k } ∪ {( j m , sink)| j m ∈ O, j k ∈ O ∧ j m ≺ j k }, E = {{ i m , j m }| i m , j m ∈ O}.</formula><p>V is the set of operations, where the source and the sink are dummy operations, being the representative of the start and end operations of a schedule. A is the set of conjunctive arcs (directed arcs) connecting consecutive operations of the same job, and E is the set of disjunctive arcs (edges) that connects operations on the same machine. All arcs emanating from an operation have as length the processing time of the operation. In addition, the arcs emanating the source have length zero. A feasible schedule corresponds to orienting disjunctive arcs to conjunctive arcs such that the resulting directed graph is acyclic. Given a feasible schedule , the directed graph G = {V , A, E( )} can be created where</p><formula xml:id="formula_1">E( ) = |M| m=1 |J | j =2</formula><p>( (m, j -1), (m, j )).</p><p>Note that each operation in the disjunctive graph has at most two predecessors and two successors. We now introduce the following additional notation to be used in this paper:</p><formula xml:id="formula_2">PT( j m )</formula><p>the processing time of the processing priority index of machine m. C max ( ) the makespan value of feasible schedule .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Ant colony optimization</head><p>ACO, one of the metaheuristics dedicated to discrete optimization problems, is inspired by the foraging behavior of real ants which can be stated as follows <ref type="bibr" target="#b30">[19]</ref>. Real ants are capable of finding the shortest path from a food source to their nest without using any visual cue. Instead, they communicate information about the food source via depositing a chemical substance, called pheromone, on the paths. The following ants are attracted by the pheromone. Since the shorter paths have higher traffic densities, these paths can accumulate higher proportion of pheromone. Hence, the probability of ants following these shorter paths would be higher than that of those following the longer ones.</p><p>ACO has been successfully applied to a large number of combinatorial optimization problems, such as the traveling salesman problem <ref type="bibr" target="#b31">[20]</ref> and the vehicle routing problem <ref type="bibr">[21]</ref>, for which ACO was shown to be very competitive to other metaheuristics. Also, ACO has been applied successfully to scheduling problems such as single machine problems <ref type="bibr" target="#b33">[22]</ref><ref type="bibr" target="#b34">[23]</ref><ref type="bibr" target="#b35">[24]</ref> and flow shop problems <ref type="bibr" target="#b36">[25,</ref><ref type="bibr" target="#b37">26]</ref>.</p><p>For the JSSP, Colorni et al. <ref type="bibr" target="#b38">[27]</ref> first applied ACO to tackle the JSSP but obtained relatively uncompetitive computational results. Later, Blum and Sampels <ref type="bibr" target="#b39">[28]</ref> developed a state-of-the-art ACO approach to tackle the general shop scheduling problem (called group shop scheduling problem), including the JSSP and the open shop scheduling problem. Their approach uses a strong non-delay guidance for constructing schedules with a newly developed pheromone model, where pheromone values are assigned to pairs of related operations (i.e., belonging to the same group), and applies a steepest descent local search to improve the constructed schedule. In addition, they extended the well-known neighborhood structure for the JSSP proposed by Nowicki and Smutnicki <ref type="bibr" target="#b16">[5]</ref> to the group shop scheduling problem. Recently, Blum <ref type="bibr">[29]</ref> developed a new competitive hybrid algorithm combining ACO algorithm with beam search for the open shop scheduling problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">The proposed algorithm (ACOFT)</head><p>We now describe the framework of our proposed hybrid algorithm, called ACO combined with fast TS (ACOFT) algorithm. ACOFT is inspired by the SB procedure <ref type="bibr" target="#b28">[17]</ref>; therefore, we need to introduce the SB procedure before presenting ACOFT. The SB procedure can be characterized as the following steps: subproblem identification, bottleneck selection, subproblem solution, and schedule reoptimization <ref type="bibr" target="#b21">[10]</ref>. In the SB procedure each of the unscheduled machines is considered as a single machine problem (SMP), and the critical machine (the one with the maximum lateness) is treated as a bottleneck machine that should be scheduled first. ACOFT constructs schedules based on the similar concept, but employs a simple rule to identify the bottleneck machine and replaces the essential yet time-consuming step, schedule reoptimization, with the proximate optimality principle (POP) <ref type="bibr" target="#b29">[18]</ref> to reduce the computational times.</p><p>The proposed ACOFT can be briefly sketched as follows. First, we identify the bottleneck machine among all the unscheduled machines. Each artificial ant constructs a permutation of jobs on the selected machine by using the state transition rule and then deposits an amount of pheromone by applying the local pheromone update rule. Occasionally, the POP is utilized to reoptimize the partial schedule. The above steps are repeated until a feasible schedule is established. Once all artificial ants have constructed their own schedules, the best one is improved by the embedded local search algorithm. Then the pheromone trails are modified again by applying the global pheromone update rule. The steps are iterated until a stopping criterion is satisfied. The details of each phase in ACOFT are addressed in what follows; the local search algorithm is to be elaborated in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Initialization phase</head><p>To reduce the computational effort, we identify the bottleneck machine by applying a simple static rule, called total machine loading (TML) rule, which can be computed in advance. TML is defined as follows:</p><formula xml:id="formula_3">(m) = |J | j =1 PT( j m ) ∀m = 1, . . . , |M|,</formula><p>where (m) is the TML ranking index of machine m. In this phase, a pheromone level 0 is initialized for all the trails, where 0 is a relatively small quantity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Construction phase 3.3.1. Definition of pheromone trails for the JSSP</head><p>Before applyingACO, an important issue is to define the pheromone trails. We do not use the conventional construction approach <ref type="bibr" target="#b38">[27,</ref><ref type="bibr" target="#b39">28,</ref><ref type="bibr" target="#b41">30]</ref>, where in each construction step an operation can only be selected if all its predecessors are already in the partial schedule. Instead, we employ a decomposition method to construct a schedule, which is inspired by the SB procedure. In fact, the decomposition methods are usually used for the JSSP, e.g., Dorndorf et al. <ref type="bibr" target="#b42">[31]</ref>.</p><p>In our approach, an |M| × |J | JSSP is decomposed into |M| separate SMPs, for each of which an ant constructs a permutation of jobs step by step until all the machines have been scheduled. Hence, we define |M| pheromone matrices with size |J | × |J | for the related machines. Each of the pheromone matrices is defined by using the absolute position interpretation of pheromone trails (i.e., the pheromone trail associated with the assignment of an operation to a position), which is commonly applied in SMPs and generates better results <ref type="bibr" target="#b33">[22,</ref><ref type="bibr" target="#b34">23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2.">State transition rule</head><p>In the construction phase, each artificial ant selects an unscheduled machine m with the highest TML level first. Then, it chooses the next operation from among a visibility set O V (O V ⊆ O m ) instead of directly from O m to guarantee feasibility; the method for determining O V will be elaborated in Section 3.3.3. To select the next operation j m , we apply the following probability state transition rule:</p><formula xml:id="formula_4">= max j m ∈O V {[ m (p, j )] • [ ( j m )] } if q q 0 , otherwise,<label>(1)</label></formula><p>where m (p, j ) is the pheromone trail associated with assigning job j to position p with relative pheromone matrix m, and ( j m ) is the greedy heuristic desirability of j m . The parameter q 0 (0 q 0 1) determines the relative frequency between exploitation and exploration, and parameter determines the influence of the heuristic information. Furthermore, is a random variable which gives the probability of assigning candidate job i to position p on machine m. The value of is determined by the probability distribution given below:</p><formula xml:id="formula_5">Pr( j m ) = ⎧ ⎨ ⎩ [ m (p, j )] • [ ( j m )] i m ∈O V [ m (p, i)] • [ ( i m )] if j m ∈ O V , 0 otherwise.<label>(2)</label></formula><p>The state transition rule resulting from Eqs. (1) and ( <ref type="formula" target="#formula_5">2</ref>) is called pseudo-random-proportional rule and was introduced in <ref type="bibr" target="#b30">[19]</ref>. This rule favors the choice of trails with higher pheromone levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3.">Delayed precedence constraints</head><p>In the SB procedure, when several machines have been scheduled, the operations on a given unscheduled machine may be subject to a special type of precedence constraint. It may be that an operation that has to be processed on a particular machine can only be processed after certain other related operations (belonging to the same machine) have completed their processing. ACOFT uses a similar construction concept and therefore encounters the same problem. To guarantee feasibility, we implement the delayed precedence constraints described by Dauzère-Pérès and Lasserre <ref type="bibr" target="#b43">[32]</ref> and Balas et al. <ref type="bibr" target="#b44">[33]</ref> as follows. Each time before scheduling a machine m, we use the depth-first search method to obtain suc( </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.4.">Greedy heuristic rule</head><p>While applying the state transition rule, the following two greedy heuristics are experimented for the heuristic information ( j m ):</p><p>(1) Most work remaining (MWR): This static heuristic selects the operation belonging to the job with the most remaining processing time. An obvious difference between the static and dynamic greedy heuristics is that the static one needs to be computed in advance, whereas the dynamic one has to be computed at run-time, which is time-consuming. Moreover, to ensure that the constructed schedule is an active schedule, we use the insertion technique proposed by Aiex et al. <ref type="bibr" target="#b29">[18]</ref>. Each time when the artificial ant chooses j m , we test if the operation can be inserted as early as possible without delaying any other scheduled operations on machine m.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.5.">Local update pheromone rule</head><p>After an artificial ant has completed a permutation of the executed machine m, the corresponding pheromone matrix is updated by applying the local pheromone update rule as follows:</p><formula xml:id="formula_6">m (p, j ) := (1 -) • m (p, j ) + • 0 ∀(p, j ) ∈ (m),</formula><p>where 0 is the initial pheromone level and (0 &lt; &lt; 1) is the pheromone evaporating parameter. The effect of the local pheromone update rule is to make the choice of putting job j in position p on the machine less desirable for other ants to achieve diversification. Consequently, this mechanism favors the exploration of different schedules. Experimentally, without using this rule all the ants would search in a narrow neighborhood of the best previous schedule.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.6.">Proximate optimality principle</head><p>The POP, introduced by Fleurent and Glover <ref type="bibr" target="#b45">[34]</ref>, is implemented for the JSSP by Binato et al. <ref type="bibr">[35]</ref>. In general, POP states that good solutions of partial schedules with k operations are close to good solutions of partial schedules with k + 1 operations.</p><p>In ACOFT, POP is utilized to reoptimize partial schedules. Our preliminary experiments show that the use of POP can improve the constructed schedules but costs additional computational time. To strike a balance between effectiveness and efficiency empirically, POP is therefore not executed after solving every SMP but only executed when 25%, 50%, and 75% of the total number of operations have been scheduled (i.e., three times in total). A detailed implementation of POP will be described in Section 4.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Local search phase</head><p>In ACO, the generated schedules by artificial ants may be so coarse that they should be improved by some complementary local search method <ref type="bibr" target="#b21">[10,</ref><ref type="bibr" target="#b22">11]</ref>. The reason that the earliest application of ACO to the JSSP generates unsatisfactory results may be due to the lack of an appropriate local search.</p><p>To overcome this shortcoming, ACOFT tries to combine ACO with a powerful TS algorithm, called fast TS algorithm (FT or TSAB), that was proposed by Nowicki and Smutnicki <ref type="bibr" target="#b16">[5]</ref>. However, a good initial schedule for FT is very important but relatively difficult to obtain. In this regard, we try to employ ACO, which has excellent exploration and information learning abilities, to provide an appropriate initial schedule for FT.</p><p>To make FT more efficient, we further modify its makespan calculation, the most time-consuming step. A detailed implementation of the modified makespan calculation will be given in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.">Global pheromone update phase</head><p>This phase is performed after all ants have completed their schedules. In order to make the search more directed, the global pheromone update rule is intended to provide a larger amount of pheromone to better schedules.</p><p>Most research in this phase uses the elitist strategy, which permits only the global best sequence of the current iteration to deposit pheromone trails; however, this strategy may not be the best rule (see <ref type="bibr" target="#b47">[36]</ref> for more details). Our experimental evidence showed that the elitist strategy may not be suitable for the JSSP. The elitist strategy may suit only for small-sized instances; for relatively large ones (e.g., 30 jobs, 20 machines, and 600 operations), updating only the best schedule usually results in poor convergence, implying that there is a need to adjust the parameter of the pheromone evaporation rate. In this regard, we propose to update the pheromone trails from a series of good schedules.</p><p>Once the current best schedule is improved in the local search phase, the new best one is stored in a queue, called global pheromone update queue, which will be elaborated in Section 4.3.</p><p>The definition of the global pheromone update rule is given as follows:</p><formula xml:id="formula_7">m (p, j ) := (1 -) • m (p, j ) + • m (p, j ),</formula><p>where</p><formula xml:id="formula_8">m (p, j ) = OptValue C max ( ) R if (p, j ) ∈ (m) ⊂ global pheromone update queue, 0 otherwise.</formula><p>In the above equation, m (p, j ) is the amount of pheromone level added to m (p, j ) by the artificial ants, and parameter (0 &lt; 1) is the pheromone evaporation rate, which is used to avoid unlimited accumulation of pheromone and enable the algorithm to vanish worse pheromone information. R is set at |J | in order to discriminate among the schedules in the global pheromone update queue and OptValue is the optimal makespan (or the best upper bound). In this study all the instances we solved are the famous benchmark instances that have been solved for several years and therefore the best makespan can be obtained from the web sites. However, if an instance has not been solved before, one may use some other heuristics such as SB procedure to obtain an upper bound. Our experiments show that there is no significant difference if one uses an upper bound obtained by SB procedure instead of the optimal makespan (or best upper bound).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Implementations of local search algorithm</head><p>In this section, we discuss the local search algorithms employed in ACOFT, including FT and POP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">TS algorithm</head><p>TS algorithm, proposed by Glover, is a successful local search algorithm for solving combinatorial optimization problems <ref type="bibr" target="#b48">[37,</ref><ref type="bibr" target="#b49">38]</ref>, and can be sketched as follows. TS starts from an initial solution. In each iteration, a move is performed to the best neighboring solution although its quality is not better than the current one. To prevent cycling, a short-term memory, called taboo list, is employed for recording a fixed number of recent moves. The use of a taboo list avoids returning to a local minimum that has been visited before. In addition, another memory structure called long-term memory is proposed, expecting to improve the diversification.</p><p>Many researchers such as Taillard <ref type="bibr" target="#b17">[6]</ref>, Dell'Amico and Trubian <ref type="bibr" target="#b14">[3]</ref>, Grabowski and Wodecki <ref type="bibr" target="#b15">[4]</ref>, and Nowicki and Smutnicki <ref type="bibr" target="#b16">[5]</ref> applied TS to the JSSP and showed its superiority over many other metaheuristics. In this study, we employ the FT or TSAB, proposed by Nowicki and Smutnicki <ref type="bibr" target="#b16">[5]</ref>, to improve the constructed schedules. Following is the introduction of FT, and readers are recommended to refer to <ref type="bibr" target="#b16">[5]</ref> for details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">The fast taboo algorithm</head><p>FT can be characterized by the following components: initial schedule, neighborhood definition, short-term memory (taboo list), long-term memory, and stopping criterion. In the following is the detailed implementation of FT.</p><p>The neighborhood of FT can be defined as follows. Consider a given critical path and divide it into several blocks, each of which contains at least two operations processed on the same machine. The neighborhood consists of all schedules that can be obtained from the current one by swapping the first (last) two operations in the last (first) block and in the others by swapping the first and last two successive operations.</p><p>To improve diversification, once a better schedule is found, the schedule, set of moves (neighborhood of that schedule except for the move being applied), and the taboo list are stored in a queue, namely long-term memory. When the search is terminated according to the stopping criterion of the short-term memory, the schedule, set of moves, and taboo list located in the last position in the long-term memory are retrieved to serve as a new starting point of the local search.</p><p>In ACOFT, the taboo list length MaxTL is set initially to the magical number 7 <ref type="bibr" target="#b48">[37,</ref><ref type="bibr" target="#b49">38]</ref> and increases in dependence of the accumulated number of iterations of the ACO algorithm. The value of MaxTL is increased by one after every quarter of the total number of iterations, except for the last quarter (i.e., MaxTL changes between 7 and 10, inclusively). Let MaxLM be the maximum length of the long-term memory and MaxTabooIter be the stopping criterion of short-term memory. Obviously, increasing the sizes of MaxLM and MaxTabooIter may yield a higher probability for getting a better schedule but requires more computational effort. As a trade off, they are determined experimentally.</p><p>Furthermore, to prevent cycling, FT exercises a cyclic test function to judge if there exists a cyclic period (1 Max ) by detecting repetitions of makespan values in constant time. If there exists some period that repeats MaxCycle times, then we stop the search and retrieve the element located in the last position in the long-term memory to serve as a new starting point of the local search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Long-term memory and global pheromone update queue</head><p>The proposed global pheromone update queue has a data structure similar to the long-term memory. Therefore, once a better schedule is found, ACOFT immediately updates not only the long-term memory, but also the global update pheromone queue. Experimentally, the length of the global pheromone update queue is set at |J |/3+|M|/2 , implying that the larger the instance sizes are, the more schedules the global pheromone update queue has. This makes the use of pheromones more effective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">The modified makespan calculation</head><p>Despite producing high quality results in a reasonable computation time, the FT in ACOFT, however, has to be executed in each iteration, causing a heavy computational effort. The proposed ACOFT attempts to accelerate the standard FT by using a modified makespan calculation.</p><p>We begin by analyzing the time complexity of FT. In each iteration, two dynamic programming formulae are applied to calculate the longest path from operation ( ∈ O) to sink and source as follows:</p><formula xml:id="formula_9">F ( ) = max{F (MP( )) + PT(MP( )), F (JP( )) + PT(JP( ))}, (3) B( ) = max{B(MS( )), B(JS( ))} + PT( ),<label>(4)</label></formula><p>where F (source)=B(sink)=0, and the makespan can be calculated in time O(|O|). However, a lower bound developed by Taillard <ref type="bibr">[39]</ref> can be used to reject worse moves in constant time. Supposing that a move ( i m , j m ) (the old operations order) is applied, the lower bound of the makespan for the new critical path is calculated by the following equation:</p><formula xml:id="formula_10">LB = max{F ( j m ) + B ( j m ), F ( i m ) + B ( i m )},</formula><p>where</p><formula xml:id="formula_11">F ( j m ) = max{F (MP( i m )) + PT(MP( i m )), F (JP( j m )) + PT(JP( j m ))}, F ( i m ) = max{F ( j m ) + PT( j m ), F (JP( i m )) + PT(JP( i m ))}, B ( i m ) = max{B(MS( j m )) + PT( i m ), B(JS( i m )) + PT( i m )}, B ( j m ) = max{B ( i m ) + PT( j m ), B(JS( j m )) + PT( j m )}.</formula><p>If LB is larger than the previous makespan, then it must be the new value of the critical path; on the contrary, if it is less than one, we should recalculate the makespan value. Once a best neighbor is selected (i.e., from one iteration to the next), the values of F ( )</p><formula xml:id="formula_12">( ∈ {suc( j m ) ∪ j m }) and B( ) ( ∈ {pre( i m ) ∪ i m }</formula><p>) can be updated by, respectively, applying (3) and ( <ref type="formula" target="#formula_9">4</ref>), taking at most O(|O|) time. In comparison with the standard FT, the computational speed was accelerated by a factor of about two times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.">POP with partial disjunctive graph</head><p>In ACOFT, POP local search is based on FT but it works without long-term memory. As stated earlier, POP is only executed a quarter of the total operations have been scheduled, except for the last one. The length of POP taboo list (MaxPOPTL) is set at 4 initially and increased by one each time after reaching the stopping criterion (i.e., MaxPOPTL changes between 4 and 6, inclusively). Another parameter MaxPOPIter, which specifies the maximum number of iterations without improving the best partial schedule obtained so far, is much less than MaxTabooIter in order to reduce the computational load. Furthermore, to accelerate the procedure, we substitute the general disjunctive graph (GDG) by a partial disjunctive graph (PDG) in our POP. Let O S denote the set of operations already scheduled, where suffix S is the accumulated number of executed machines. Then the PDG G p = {V , A, E( )} is given below:</p><formula xml:id="formula_13">V = {O S ∪ source ∪ sink}, A = {( j m , j k )| j m , j k ∈ O S , j m ≺ j k } ∪ {(source, j k )| j k ∈ O S , j m ∈ O S ∧ j m ≺ j k } ∪ {( j m , sink)| j m ∈ O S , j k ∈ O S ∧ j m ≺ j k }, E( ) = S m=1 |J | j =2</formula><p>( ( (m), j -1), ( (m), j )).</p><p>Considering only the scheduled operations in the PDG implies that when applying (3) and (4), we need not only omit the unscheduled operations along with their adjacent arcs, but also connect the remaining adjacent scheduled operations belonging to the same job with dummy arcs. Note that there exist no edges in the PDG, and the weights of the dummy arcs can be calculated in advance.</p><p>We now use a numerical example to describe how the PDG works. Consider a JSSP with five machines and three jobs as depicted in Fig. <ref type="figure" target="#fig_3">1</ref>. Given the following partial schedule = { (2), ( <ref type="formula" target="#formula_9">4</ref>), ( <ref type="formula">5</ref>)}, where</p><formula xml:id="formula_14">(2) = { 1 2 , 3 2 , 2 2 }, (4) = { 3 4 , 2 4 , 1 4 }, (5) = { 3 5 , 2 5 , 1 5 }</formula><p>a GDG can be illustrated in Fig. <ref type="figure" target="#fig_2">2</ref>, which has exactly one critical path (source, 3 4 , 3 5 , 2 5 , 1 5 , 1 4 , 1 3 , sink) with length 337. Now, we apply the PDG to modify Fig. <ref type="figure" target="#fig_2">2</ref> and illustrate it in Fig. <ref type="figure" target="#fig_4">3</ref>, where the unscheduled operations and their adjacent arcs represented by dotted lines are omitted. In addition, five dummy arcs are added to connect the scheduled operations, where their weights are added accordingly. When applying the modified makespan calculation, the time complexity of the PDG is reduced to O(|O S |).</p><p>Note that the notation JP( m j ), JS( m i ), and PT( m j ) in the proposed modified makespan calculation should be updated slightly if their adjacent arcs are replaced by the dummy ones. For instance, since arc (  ( 1 1 , 5 1 ) are omitted, the job successor JS( 2 1 ) = 5 1 and the processing time PT( 2 1 ), depending on its successor, may equal either 21 (weight of the original arc) or 74 (weight of the dummy arc). Suppose now that we want to apply the move ( 3 5 , 2 5 ) (the old operations order). The lower bound can then be calculated as follows:</p><formula xml:id="formula_15">F ( 2 5 ) = max{0, 39 + 52} = 91, F ( 3 5 ) = max{91 + 16, 0 + 39} = 107, B ( 3 5 ) = max{84 + 98, 0 + 183} = 282, B ( 2 5 ) = max{282 + 16, 0 + 113} = 298, LB = max{107 + 282, 91 + 298} = 389,</formula><p>where the modified numbers are underlined. Since the new lower bound is larger than the previous makespan in Fig. <ref type="figure" target="#fig_4">3</ref> (337), the new longest path must pass through 3  5 and 2 5 with makespan 389.</p><p>Table <ref type="table">1</ref> The  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Computational results</head><p>A computational study was conducted to evaluate the efficiency and effectiveness of our proposed ACOFT algorithm, which was coded in C + + and run on a PC with an AMD XP-1800+ (1533 MHz) CPU and 768 MB RAM under Windows XP using Microsoft Visual C + + 6.0.</p><p>Choosing appropriate parameters is time-consuming and in general they depend on the particular instance. Thus, some of the parameters in our approach are adjusted dynamically as follows: when ACOFT generates the same makespan value during successive two iterations, the algorithm is probably falling into a local minimum, and hence, we lower parameters q 0 (utilization of exploration) and (global pheromone evaporation rate) to give the algorithm a higher probability to escape from the local minimum. Table <ref type="table">1</ref> lists all the parameter values used in our experiments.</p><p>ACOFT was tested on 101 benchmark instances of different sizes which can be downloaded from OR-Library web site (http://people.brunel.ac.uk/∼mastjjb/jeb/orlib/jobshopinfo.html). The best known lower and upper bounds of Taillard's instances are provided on Taillard's web site (http://ina2.eivd.ch/collaborateurs/etd/default.htm). All the tested instances are classified into the following three classes: LA29, and LA36-LA40) due to Lawrence <ref type="bibr">[39]</ref>, where instance LA29 is still open. (b) Five instances denoted by (ORB1-ORB5) due to Applegate and Cook <ref type="bibr" target="#b51">[40]</ref>, two instances (FT10, FT20) due to Fisher and Thompson <ref type="bibr" target="#b52">[41]</ref>, and five instances (ABZ5-ABZ9) due to Adams et al. <ref type="bibr" target="#b28">[17]</ref>. Instances ABZ8 and ABZ9 are still open. (c) Eighty instances of eight different sizes denoted by (TA01-TA80) due to Taillard <ref type="bibr" target="#b53">[42]</ref>. These instances are solved only for 48 out of 80 instances.</p><p>Before evaluating the performance ACOFT, we experimented with ACOFT without the local search phase (FT) for both general and PDGs for comparing their computational efficiency. All the parameters are set equal, including the random seeds, to make a fair comparison. The experiment was carried out on four instances (namely LA36, TA01, TA11, and TA21) with different sizes, for each of which the algorithm ACOFT was run five times. Table <ref type="table" target="#tab_1">2</ref> indicates that using the PDG can accelerate the computational speed about two times.   Now we demonstrate that whether the developed pheromone model can help at all in generating the good schedules. One may treat our approach as a repeated restart FT that runs several times and takes the best result; however, our experiments show that the pheromones are indeed inessential. Without this mechanism, the generated initial schedules for FT would become poor; thus, FT may waste lots of computational efforts on converging. This will be demonstrated in the following experiment, all of which were run for the same computational times, depending on the average computational time needed for ACOFT-MWR with 320 iterations.</p><p>1. ACOFT-MWR: ACOFT with the MWR heuristic rule is run with pheromones. 2. ACOFT-RAND: ACOFT is run without pheromones (i.e., we set m (p, j ) for all m, p, and j to be constant values).</p><p>To generate different initial schedules in each iteration, we set q 0 = 0 (employs exploration only). This corresponds to some type of randomized restart mechanism for the FT search algorithm. 3. FT-LTM: The FT search algorithm is run alone with the backtracking feature. To guarantee that the FT-LTM can run until meeting the stopping criteria, we let MaxTabooIter = 30 000 and MaxLM = 300. 4. FT-STM: The FT search algorithm is run alone without the backtracking feature. To guarantee that the FT-STM can run until meeting the stopping criteria, we let MaxTabooIter be a very large integer number.</p><p>Note that the initial schedules for FT-LTM and FT-STM are obtained from ACO. Table <ref type="table" target="#tab_2">3</ref> lists the computational results, including the best value of the makespan from the replications (C * max ), the relative error of this best makespan (RE; a percentage by which the solution obtained is above the optimum value (OPT) if it is known or the best lower bound value (LB)), the mean relative error (MRE), the average makespan (C max ), the average computational time (T ), and the number of replications for each instance. Clearly, it is shown that algorithms ACOFT-RAND, FT-LTM, and FT-STM with the same computational times cannot obtain relative better results, which demonstrates that the good performance of ACOFT is not merely because of on large computational times.</p><p>In the following experiments, we examined two different heuristic rules on ACOFT, namely ACOFT-MWR and ACOFT-TR. Instances  <ref type="table" target="#tab_3">4</ref> (runs for 15 replications). Table <ref type="table" target="#tab_4">5</ref> reports the best computational results obtained by Dorndorf and Pesch (SB-GA) <ref type="bibr" target="#b24">[13]</ref>, Nowicki and Smutnicki <ref type="bibr" target="#b16">[5]</ref> (FT), Balas and Vazacopoulos <ref type="bibr" target="#b33">[22]</ref> (SB-RGLS2), Pezzella and Merelli <ref type="bibr" target="#b25">[14]</ref> (TSSB), and Schultz et al. <ref type="bibr" target="#b19">[8]</ref> (SHKT-720min). Overall, ACOFT-MWR outperforms all the other novel algorithms in terms of the best solution quality.</p><p>Table <ref type="table">6</ref> shows the comparison of our algorithms with other novel heuristic algorithms proposed by Aiex et al. <ref type="bibr" target="#b29">[18]</ref> (GPPR), Schultz et al. <ref type="bibr" target="#b19">[8]</ref> (SHKT-720min), Pezzella and Merelli <ref type="bibr" target="#b25">[14]</ref> (TSSB) on instances (b). It is observed from Table <ref type="table">6</ref> that the proposed algorithms produce MREs of 0.626% (ACOFT-MWR) and 0.689% (ACOFT-TR), both of which exhibit the competition with other novel algorithms.</p><p>The comparison in Tables <ref type="table" target="#tab_4">5</ref> and<ref type="table">6</ref> is done to assess the peak performance of our algorithms with respect to the solution quality of the solutions reachable when compared to the state-of-the-art algorithms for the JSSP. These tables only list the computational times of our algorithms but omit those of others because it is not easy to compare the algorithms experimented on different machines. Overall, the results indicate that with the suggested algorithms very high quality solutions are obtained, often better than those reported for other algorithms. However, this comes at the cost of increased computational times. Table <ref type="table">7</ref> gives the comparison of ACOFT-MWR and ACOFT-TR with a novel heuristic algorithm proposed by Grabowski and Wodecki <ref type="bibr" target="#b15">[4]</ref> (TSGW) and with other famous hybrid algorithms, TSSB and BV-best, on instances (c) in terms of MRE, T , and numbers of optimal solutions obtained (No. OPT). Note that BV-best indicates the best results from all those SB-GLS series, provided by Balas and Vazacopoulus <ref type="bibr" target="#b33">[22]</ref>. In addition, TSSB was coded in C and experimented on a Pentium 133 MHz PC, TSGW was coded in C + + and experimented on a Pentium 333 MHz PC, and SB-GLS was coded in C and experimented on a SUN SPARC-330 workstation. In this experiment, we obviously give much more computation effort than was allowed in TSSB, TSGW, and SB-GLS series; however, ACOFT-TR could obtain MRE of 1.798% and 40 optimal solutions that are superior to all the others. Table <ref type="table" target="#tab_5">8</ref> lists the computational results for instances (c), which include 80 instances, where TA51-TA80 are relatively large-sized instances but easy to solve (instances with |J | much large than |M| are easy), except for TA62 and TA67. Hence we just list the computational results of TA01-TA50, TA62, and TA67 and omit the easier ones. For these instances, it is observed that ACOFT-TR performs better than ACOFT-MWR. In particular, it is noted that ACOFT-TR found a new best upper bound 2015 for instance TA41.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>In this paper, we have proposed a hybrid algorithm combining ACO with fast taboo for minimizing the makespan in the JSSP. To improve over a straightforward ACO algorithm, we have defined a specific pheromone trail definition inspired from SB and tested a dynamic greedy heuristic. This new way of defining the pheromone trails can also be applied in other shop scheduling problems. Besides, we have exercised the proximate optimality principle (POP) local search with a proposed partial disjunctive graph (PDG) to offer better searching guidance for artificial ants. Moreover, the traditional FT is accelerated by a modified makespan calculation.</p><p>To combine ACO with fast taboo, we have proposed a global pheromone update queue with the stores of a series of good schedules to update the pheromone trails diversely and thereby the history information can be utilized more effectively. Also, to offer robustness of ACOFT, the parameters of evaporation rate and relative proportion between the exploitation and exploration are adjusted dynamically, making the escape from a local minimum easy.</p><p>The proposed algorithm has been tested on 101 benchmark instances and compared with other algorithms. In sum, the solutions ACOFT can yield are often the same or slightly better than reported for best-performing algorithms for the JSSP; in particular, ACOFT has improved the best upper bound on one open benchmark instance (TA41). However, these results are obtained using higher computation times that used in most of the publications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>m . If there exists an operation i m ( i m ∈ O m and i m = j m ) belonging to suc( j m ), we generate a delayed precedence constraint ( j m ≺ i m ). Thus, only if j m is processed can i m be added to O V .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( 2 )</head><label>2</label><figDesc>Time remaining (TR): This dynamic heuristic selects the operation j m with the longest path between j m and the dummy sink operation, (i.e.,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. An example of five machines, three jobs, and 15 operations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. The proposed partial disjunctive graph of Fig. 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>, . . . , 10} max = 30 MaxCycle = 6 q 0 ∈ {0.9 a , 0.65 b } ∈ {0.85 a , 0.7 b } a The general parameter set of the algorithm. b The parameter set when falling into local optimum.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>(a) Nine instances of three different sizes (|J | × |M| = 15 × 10, 20 × 10, 15 × 15) denoted by (LA24, LA25, LA27,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. The performances of ACOFT-MWR and ACOFT-TR on LA29 and LA40.</figDesc><graphic coords="11,60.34,302.37,427.32,172.66" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>(a) and (b) are run for 15 replications, and instances (c), which are more difficult and timeconsuming, are run for 10 replications. The values of C * max , RE, C max , T , and MRE for ACOFT-MWR and ACOFT-TR are listed in Tables 3, 5, 6, and 8. The performances of ACOFT-TR and ACOFT-MWR are illustrated in Fig. 4 (runs for one replication), and the development of the solution quality of the algorithms in terms of C * max , C max , and C * * max (the worst solution) after 10, 100, and 1000 s are also listed in Table</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Fig. 2. The general disjunctive graph with three machines being scheduled.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">21</cell><cell></cell><cell>153</cell><cell></cell><cell cols="2">248</cell><cell>303</cell></row><row><cell></cell><cell></cell><cell></cell><cell>258 1 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>21</cell><cell cols="2">237 1 1</cell><cell>53</cell><cell>184 1 5</cell><cell>95</cell><cell>89 1 4</cell><cell></cell><cell>55 55</cell><cell>34 1 3</cell></row><row><cell>0</cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>153</cell><cell>179</cell><cell>34</cell><cell>337</cell></row><row><cell>337</cell><cell></cell><cell>0</cell><cell>0 2 1</cell><cell cols="2">21</cell><cell></cell><cell></cell><cell>39 2 4</cell><cell></cell><cell>52</cell><cell></cell><cell cols="2">137 5 2</cell><cell>16 16</cell><cell>97 2 3</cell><cell>26</cell><cell>71 2 2</cell><cell>71</cell><cell>0 *</cell></row><row><cell></cell><cell>0</cell><cell></cell><cell>281</cell><cell></cell><cell></cell><cell></cell><cell cols="2">260</cell><cell></cell><cell></cell><cell></cell><cell cols="2">200</cell><cell></cell><cell></cell><cell>12</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">0 3 4</cell><cell></cell><cell></cell><cell cols="2">39</cell><cell cols="2">39 3 5</cell><cell>98</cell><cell>137 3 2</cell><cell cols="2">42</cell><cell>179 3 3</cell><cell>31</cell><cell>210 3 1</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">337</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">298</cell><cell></cell><cell>113</cell><cell></cell><cell></cell><cell>42</cell><cell>12</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>F</cell><cell cols="8">: Longest path from source to the operation</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>B</cell><cell cols="8">: Longest path from the operation to sink</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>74</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>89</cell></row><row><cell></cell><cell></cell><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">21</cell><cell></cell><cell>153</cell><cell></cell><cell>248</cell><cell></cell><cell>303</cell></row><row><cell></cell><cell></cell><cell></cell><cell>258 1 2</cell><cell></cell><cell></cell><cell></cell><cell cols="2">21</cell><cell cols="2">237 1 1</cell><cell>53</cell><cell>184 1 5</cell><cell>95</cell><cell>89 1 4</cell><cell></cell><cell>55 55</cell><cell>34 1 3</cell></row><row><cell>0 337</cell><cell>0</cell><cell>0</cell><cell>21 0 2 1</cell><cell cols="2">21</cell><cell cols="2">21</cell><cell>39 2 4</cell><cell>52</cell><cell>52</cell><cell></cell><cell>137 5 2 16</cell><cell></cell><cell>16 16</cell><cell cols="2">42 153 2 3 97</cell><cell>26</cell><cell>179 71 2 2</cell><cell>71 34</cell><cell>337 0 *</cell></row><row><cell></cell><cell>0</cell><cell></cell><cell cols="2">0 281 4 3</cell><cell cols="2">39</cell><cell cols="2">39 260</cell><cell cols="2">39 3 5 98</cell><cell>98</cell><cell>137 200 3 2</cell><cell cols="2">42 42</cell><cell>179 3 3</cell><cell>31</cell><cell>210 3 1</cell><cell>12</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">337</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">298</cell><cell></cell><cell>113</cell><cell></cell><cell></cell><cell>42</cell><cell>12</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>85</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>F</cell><cell cols="7">: Longest path from source to the operation</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>B</cell><cell cols="7">: Longest path from the operation to sink</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="7">: The operation or arc been ignored</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>2 1 , 1 1 ), operation 1 1 , and arc</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Computational comparison between the partial disjunctive graph (PDG) and general disjunctive graphs (GDG)</figDesc><table><row><cell>Instance</cell><cell>|J | × |M|</cell><cell>T (PDG)</cell><cell>T (GDG)</cell><cell>Improvement (times)</cell></row><row><cell>LA36</cell><cell>15 × 15</cell><cell>45.372</cell><cell>102.279</cell><cell>2.254</cell></row><row><cell>TA01</cell><cell>15 × 15</cell><cell>44.161</cell><cell>96.875</cell><cell>2.194</cell></row><row><cell>TA11</cell><cell>20 × 15</cell><cell>109.914</cell><cell>228.194</cell><cell>2.095</cell></row><row><cell>TA21</cell><cell>20 × 20</cell><cell>232.375</cell><cell>474.681</cell><cell>2.042</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Comparisons of ACOFT-MWR, ACOFT-RAND, FT-LTM, and FT-STM with the same computational times</figDesc><table><row><cell cols="3">Instance OPT or (LB, UB) T</cell><cell cols="2">ACOFT-MWR</cell><cell></cell><cell cols="2">ACOFT-RAND</cell><cell></cell><cell>FT-LTM</cell><cell></cell><cell></cell><cell>FT-STM</cell></row><row><cell></cell><cell></cell><cell></cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell></row><row><cell>LA29 a</cell><cell>(1142, 1152)</cell><cell cols="6">1442.7 1158 1165.6 1.40 1164 1167.7</cell><cell cols="5">1.93 1164 1168.2 1.93 1168 1180.5</cell><cell>2.28</cell></row><row><cell>LA40 a</cell><cell>1222</cell><cell cols="6">941.4 1224 1226.4 0.16 1224 1228.4</cell><cell cols="5">0.16 1224 1229.0 0.16 1228 1239.5</cell><cell>0.49</cell></row><row><cell cols="2">ABZ07 a 656</cell><cell>1438.6</cell><cell>658</cell><cell cols="2">663.2 0.30</cell><cell>666</cell><cell>673.6</cell><cell>1.52</cell><cell>665</cell><cell cols="2">669.2 1.37</cell><cell>666</cell><cell>671.4</cell><cell>1.52</cell></row><row><cell cols="2">ABZ08 a (645, 665)</cell><cell>1634.3</cell><cell>670</cell><cell cols="2">670.8 3.88</cell><cell>670</cell><cell>674.5</cell><cell>3.88</cell><cell>674</cell><cell cols="2">678.5 4.50</cell><cell>679</cell><cell>684.9</cell><cell>5.27</cell></row><row><cell cols="2">ABZ09 a (661, 679)</cell><cell>1792.9</cell><cell>683</cell><cell cols="2">687.4 3.33</cell><cell>687</cell><cell>688.3</cell><cell>3.93</cell><cell>688</cell><cell cols="2">691.4 4.08</cell><cell>691</cell><cell>699.4</cell><cell>4.54</cell></row><row><cell>TA01 b</cell><cell>1231</cell><cell cols="6">1154.2 1231 1232.1 0.00 1231 1234.3</cell><cell cols="5">0.00 1234 1238.2 0.24 1242 1249.0</cell><cell>0.89</cell></row><row><cell>TA11 b</cell><cell>(1323, 1361)</cell><cell cols="6">1604.2 1367 1371.9 3.33 1367 1371.2</cell><cell cols="5">3.33 1379 1383.6 4.23 1391 1408.5</cell><cell>5.14</cell></row><row><cell>TA21 b</cell><cell>(1539, 1644)</cell><cell cols="6">2640.3 1650 1661.5 7.21 1647 1658.5</cell><cell cols="5">7.02 1658 1668.1 7.73 1688 1716.5</cell><cell>9.68</cell></row><row><cell>TA32 b</cell><cell>(1774, 1796)</cell><cell cols="6">3547.7 1822 1838.4 2.71 1830 1842.0</cell><cell cols="5">3.16 1839 1852.2 3.66 1843 1858.7</cell><cell>3.89</cell></row><row><cell>TA41 b</cell><cell>(1859, 2018)</cell><cell cols="7">4790.1 2038 2051.8 9.63 2047 2059.4 10.1</cell><cell cols="4">2044 2064.9 9.95 2083 2108.9 12.05</cell></row><row><cell>MRE</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>3.19</cell><cell></cell><cell></cell><cell>3.50</cell><cell></cell><cell></cell><cell>3.79</cell><cell>4.58</cell></row></table><note><p>a The instance runs for 15 replications. b The instance runs for 10 replications.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc>The development of the solution quality of ACOFT-MWR and ACOFT-TR on LA40 after 10, 100, and 1000 s</figDesc><table><row><cell>Seconds</cell><cell>ACOFT-MWR</cell><cell></cell><cell></cell><cell>ACOFT-TR</cell><cell></cell><cell></cell></row><row><cell></cell><cell>C  *  max</cell><cell>C max</cell><cell>C  *  *  max</cell><cell>C  *  max</cell><cell>C max</cell><cell>C  *  *  max</cell></row><row><cell>10</cell><cell>1242</cell><cell>1263.5</cell><cell>1278</cell><cell>1258</cell><cell>1270.1</cell><cell>1283</cell></row><row><cell>100</cell><cell>1224</cell><cell>1238.6</cell><cell>1242</cell><cell>1227</cell><cell>1241.7</cell><cell>1244</cell></row><row><cell>1000</cell><cell>1224</cell><cell>1226.4</cell><cell>1228</cell><cell>1224</cell><cell>1228.4</cell><cell>1232</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5</head><label>5</label><figDesc>Comparison with other algorithms for instances class (a)</figDesc><table><row><cell>Instance OPT or (LB, UB) SB-GA</cell><cell></cell><cell cols="2">TSAB (FT)</cell><cell cols="2">SB-RGLS2</cell><cell>TSSB</cell><cell></cell><cell cols="2">SHKT-720min</cell><cell cols="2">ACOFT-MWR</cell><cell></cell><cell></cell><cell cols="2">ACOFT-TR</cell><cell></cell><cell></cell></row><row><cell>C  *  max</cell><cell>RE</cell><cell>C  *  max</cell><cell>RE</cell><cell>C  *  max</cell><cell>RE</cell><cell>C  *  max</cell><cell>RE</cell><cell>C  *  max</cell><cell>RE</cell><cell>C  *  max</cell><cell>C max</cell><cell>T</cell><cell>RE</cell><cell>C  *  max</cell><cell>C max</cell><cell>T</cell><cell>RE</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 8</head><label>8</label><figDesc>Results by ACOFT for instances class (c)</figDesc><table><row><cell>Instance</cell><cell>OPT or (LB, UB)</cell><cell cols="2">ACOFT-MWR</cell><cell></cell><cell></cell><cell>ACOFT-TR</cell></row><row><cell></cell><cell></cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell><cell>T</cell><cell>C  *  max</cell><cell>C max</cell><cell>RE</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>The authors are most grateful to the constructive comments of the anonymous referees that improved the presentation of the paper. This work is partially supported by the National Science Council, Taiwan, Republic of China, under grant number NSC 92-2213-E-011-058.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA26</orgName>
		</author>
		<imprint>
			<date type="published" when="1539">1539, 1645</date>
			<biblScope unit="page" from="1655" to="1664" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m">TA33 (1778, 1793) 1805</title>
		<imprint>
			<biblScope unit="page">1813</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA34</orgName>
		</author>
		<imprint>
			<date type="published" when="1828">1828, 1829. 1832 1839</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">TA</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1771">1771, 1778. 1793 1798</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA41</orgName>
		</author>
		<imprint>
			<date type="published" when="1859">1859, 2018. 2038 2051</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA42</orgName>
		</author>
		<idno>1982.1 5.142 9422.3 TA43 (1809, 1859) 1875 1899.3</idno>
		<imprint>
			<date type="published" when="1867">1867. 1956. 1961 1972.1 5.035 4343. 1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA44</orgName>
		</author>
		<imprint>
			<date type="published" when="1927">1927, 1984. 2011 2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA45</orgName>
		</author>
		<imprint>
			<date type="published" when="1997">1997, 2000. 2001 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA46</orgName>
		</author>
		<idno>9 5.000 9180.5 TA47 (1789</idno>
		<imprint>
			<date type="published" when="1903">1940, 2021. 2047 2071.0 5.515 4990.8 2037 2066. 1903. 1927 1949</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA48</orgName>
		</author>
		<imprint>
			<date type="published" when="1912">1912, 1952. 1968 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA49</orgName>
		</author>
		<imprint>
			<date type="published" when="1915">1915. 1968. 1989 2012.0</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TA50</orgName>
		</author>
		<imprint>
			<date type="published" when="1807">1807. 1926. 1956 1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Computers and Intractability: a guide to the theory of NP-completeness</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979">1979</date>
			<publisher>Freeman and Company</publisher>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An algorithm for solving the job-shop problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carlier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="164" to="176" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Applying tabu search to the job shop scheduling problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dell'amico</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trubian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Operations Research</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="231" to="252" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A very fast tabu search algorithm for the job shop problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Grabowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wodecki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Metaheuristic optimization via memory and evolution</title>
		<editor>
			<persName><forename type="first">C</forename><surname>Rego</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Alidaee</surname></persName>
		</editor>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast tabu search algorithm for the job shop problem</title>
		<author>
			<persName><forename type="first">E</forename><surname>Nowicki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Smutnicki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="797" to="813" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Parallel taboo search techniques for the job shop scheduling problem</title>
		<author>
			<persName><forename type="first">É</forename><forename type="middle">D</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="108" to="117" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A genetic algorithm for the job shop problem</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">D</forename><surname>Croce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tadei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Volta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="15" to="24" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">On solving the classic job shop makespan problem by minimizing Lmax</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Schultz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Hodgson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>King</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<pubPlace>Raleigh, NC</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Industrial Engineering, North Carolina State University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The job shop scheduling problem</title>
		<author>
			<persName><forename type="first">J</forename><surname>Blazewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Domschke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pesch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="page" from="1" to="33" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Deterministic job-shop scheduling: past, present and future</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Meeran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page" from="390" to="434" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Job shop scheduling by local search</title>
		<author>
			<persName><forename type="first">Rjm</forename><surname>Vaessens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ehl</forename><surname>Aarts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="302" to="317" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Guided local search with shifting bottleneck for job shop scheduling</title>
		<author>
			<persName><forename type="first">E</forename><surname>Balas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vazacopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="262" to="275" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Evolution based learning in a job shop scheduling environment</title>
		<author>
			<persName><forename type="first">U</forename><surname>Dorndorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pesch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="25" to="40" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A tabu search method guided by shifting bottleneck for the job shop scheduling problem</title>
		<author>
			<persName><forename type="first">F</forename><surname>Pezzella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Merelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">120</biblScope>
			<biblScope unit="page" from="297" to="310" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">An effective optimization strategy for job shop scheduling problems</title>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Z</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="585" to="596" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Job-shop scheduling by simulated annealing combined with deterministic local search</title>
		<author>
			<persName><forename type="first">T</forename><surname>Yamada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nakano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Meta-heuristics: theory and applications</title>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996</date>
			<biblScope unit="page" from="237" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The shifting bottleneck procedure for job shop scheduling</title>
		<author>
			<persName><forename type="first">J</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Balas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zawack</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="391" to="401" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Parallel GRASP with path-relinking for job shop scheduling</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Aiex</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Binato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mgc</forename><surname>Resende</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Computing</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="393" to="430" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Ant colony optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Stützle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Ant colony system: a cooperative learning approach to the traveling salesman problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">M</forename><surname>Gambardella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="53" to="66" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An improved ant system algorithm for the vehicle routing problem</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bullnheimer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Hartl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Strauss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Operations Research</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="319" to="328" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">An ant colony optimization approach for the single machine total tardiness problem</title>
		<author>
			<persName><surname>Bauera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bullnheimer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Hartl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Strauss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1999 congress on evolutionary computation</title>
		<meeting>the 1999 congress on evolutionary computation<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="1445" to="1450" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Ant colony optimization for the total weighted tardiness problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Den Besten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Stützle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of PPSN VI, sixth international conference on parallel problem solving from nature</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<meeting>eeding of PPSN VI, sixth international conference on parallel problem solving from nature</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">1917</biblScope>
			<biblScope unit="page" from="611" to="620" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Comparing an ACO algorithm with other heuristics for the single machine scheduling problem with sequencedependent setup times</title>
		<author>
			<persName><forename type="first">C</forename><surname>Gagné</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">L</forename><surname>Price</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gravel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Operational Research Society</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="895" to="906" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">An ant approach for the flow shop problem</title>
		<author>
			<persName><forename type="first">T</forename><surname>Stützle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of EUFIT &apos;98: sixth European congress on intelligent techniques and soft computing</title>
		<meeting>eeding of EUFIT &apos;98: sixth European congress on intelligent techniques and soft computing</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1560" to="1564" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An ant colony optimization algorithm to solve a 2-machine bicriteria flowshop scheduling problem</title>
		<author>
			<persName><forename type="first">N</forename><surname>Monmarché</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Tercinet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Laügt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="250" to="257" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Ant system for job shop scheduling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Colorni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Maniezzo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trubian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Belgian Journal of Operations Research</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="39" to="53" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">An ant colony optimization algorithm for shop scheduling problems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sampels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Mathematical Modelling and Algorithms</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="285" to="308" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Beam-ACO-hybridizing ant colony optimization with beam search: an application to open shop scheduling</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Operations Research</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1565" to="1591" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Ant colony optimization for FOP shop scheduling: a case study on different pheromone representations</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sampels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2002 congress on evolutionary computation (CEC&apos;02)</title>
		<meeting>the 2002 congress on evolutionary computation (CEC&apos;02)<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1558" to="1563" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Constraint propagation and problem decomposition: a preprocessing procedure for the job shop problem</title>
		<author>
			<persName><forename type="first">U</forename><surname>Dorndorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Pesch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Phan-Huy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Operations Research</title>
		<imprint>
			<biblScope unit="volume">115</biblScope>
			<biblScope unit="page" from="125" to="145" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">A modified shifting bottleneck procedure for job-shop scheduling</title>
		<author>
			<persName><forename type="first">S</forename><surname>Dauzère-Pérès</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Lasserre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Production Research</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="923" to="932" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">The one-machine problem with delayed precedence constraints and its use in job shop scheduling</title>
		<author>
			<persName><forename type="first">E</forename><surname>Balas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Vazacopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Management Science</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="94" to="109" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Improved constructive multistart strategies for the quadratic assignment problem using adaptive memory</title>
		<author>
			<persName><forename type="first">C</forename><surname>Fleurent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">INFORMS Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="198" to="204" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">A GRASP for job shop scheduling</title>
		<author>
			<persName><forename type="first">S</forename><surname>Binato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Hery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Loewenstern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mgc</forename><surname>Resende</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Essays and surveys on metaheuristics</title>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Ribeiro</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Hansen</surname></persName>
		</editor>
		<meeting><address><addrLine>Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="59" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">ACO applied to group shop scheduling: a case study on intensification and diversification</title>
		<author>
			<persName><forename type="first">C</forename><surname>Blum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ANTS 2002-from ant colonies to artificial ants: third international workshop on ant algorithms</title>
		<title level="s">Lecture notes in computer science</title>
		<editor>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Di</forename><surname>Caro</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Sampels</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename></persName>
		</editor>
		<meeting>ANTS 2002-from ant colonies to artificial ants: third international workshop on ant algorithms<address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2463</biblScope>
			<biblScope unit="page" from="14" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Tabu search (Part I)</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="190" to="206" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Tabu search (Part II)</title>
		<author>
			<persName><forename type="first">F</forename><surname>Glover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="4" to="32" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">Resource constrained project scheduling: an experimental investigation of heuristic scheduling techniques (Supplement)</title>
		<author>
			<persName><forename type="first">S</forename><surname>Lawrence</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>Graduate School of Industrial Administration</publisher>
			<pubPlace>Pittsburgh, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">A computational study of the job-shop scheduling problem</title>
		<author>
			<persName><forename type="first">D</forename><surname>Applegate</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ORSA Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="149" to="156" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Probabilistic learning combinations of local job-shop scheduling rules</title>
		<author>
			<persName><forename type="first">H</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Industrial scheduling</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Muth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Thompson</surname></persName>
		</editor>
		<meeting><address><addrLine>Englewood Cliffs, NJ, Chichester, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hill</publisher>
			<date type="published" when="1963">1963</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Benchmarks for basic scheduling problems</title>
		<author>
			<persName><forename type="first">É</forename><forename type="middle">D</forename><surname>Taillard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="108" to="117" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Job shop scheduling by simulated annealing</title>
		<author>
			<persName><forename type="first">Pjn</forename><surname>Van Laarhoven</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ehl</forename><surname>Aarts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">K</forename><surname>Lenstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Operations Research</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="113" to="125" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
