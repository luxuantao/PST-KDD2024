<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Remaining Useful Life Prediction Based on A Double-Convolutional Neural Network Architecture</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Boyuan</forename><surname>Yang</surname></persName>
						</author>
						<author role="corresp">
							<persName><roleName>Member, IEEE</roleName><forename type="first">Ruonan</forename><forename type="middle">Boyuan</forename><surname>Liu</surname></persName>
							<email>liuruonan04@163.com</email>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Enrico</forename><surname>Zio</surname></persName>
						</author>
						<author>
							<persName><surname>Yang</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of Manchester</orgName>
								<address>
									<settlement>Manchester</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon Univer-sity</orgName>
								<address>
									<settlement>Pittsburgh</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">Centre for Research on Risk and Crisis</orgName>
								<orgName type="institution">PSL Research University</orgName>
								<address>
									<addrLine>Mines ParisTech</addrLine>
									<postCode>F-06904</postCode>
									<settlement>Sophia Antipolis</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Department of Energy</orgName>
								<orgName type="institution">Politecnico di Milano</orgName>
								<address>
									<postCode>20156</postCode>
									<settlement>Milano</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Remaining Useful Life Prediction Based on A Double-Convolutional Neural Network Architecture</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">095A41A161D1AF84E85E6D61E283859B</idno>
					<idno type="DOI">10.1109/TIE.2019.2924605</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 1</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T04:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Convolutional neural network (CNN)</term>
					<term>deep learning</term>
					<term>prognostic and health management (PHM)</term>
					<term>remaining useful life (RUL) prediction</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Remaining useful life (RUL) prediction has been increasingly considered in many industrial fields, for the reliability and safety of their systems. As a data analysis tool of deep learning, deep convolutional neural network (CNN) shows great potential for RUL prediction. This paper proposes an intelligent RUL prediction method based on a double-CNN model architecture. Given the powerful feature extraction capability of CNN, the proposed method is fed with original vibration signals with no need to resort to any feature extractor, which can also retain the useful information in maximum. The prediction includes two stages: first, incipient fault point is identified by the first CNN model and a proposed "3/5" principle; then, the second CNN model is constructed for RUL prediction. In practice, RULs of identical components are different from each other, which poses a major challenge in RUL prediction. To overcome this problem, an intermediate reliability variable is firstly calculated in this paper, instead of directly predicting the RUL value. Then, a mapping algorithm is proposed to map reliability to RUL. To demonstrate the effectiveness of the proposed method, data of four tests of bearing degradation are utilized for RUL prediction. Compared with state-of-the-art methods, the proposed method shows higher prediction accuracy and robustness. The prediction results and evaluation indexes demonstrated the effectiveness and superiority of the proposed method.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>A S an effective way to avoid unnecessary maintenance activities and improve safety reliability and availability, prognostics and health management (PHM) has gained a lot of attention in the last few decades, with remaining useful life (RUL) prediction constituting a challenging prognostic task <ref type="bibr" target="#b0">[1]</ref>. A reliable and accurate estimation of RUL not only allows for effective predictive maintenance, thus protecting the system from faults and resource wasting, but also can avoids catastrophic failures and casualties <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>. Therefore, it is important to develop RUL prediction methods <ref type="bibr" target="#b3">[4]</ref>.</p><p>According to the literature, there are different ways to categorize the RUL prediction methods. In general, they can be classified as follows: physics-based, data-driven and hybrid <ref type="bibr" target="#b4">[5]</ref>. Physics-based approaches, also known as model-based, take advantage of prior knowledge on the degradation and failure mechanisms to model the degradation and failure behavior of an equipment mathematically <ref type="bibr" target="#b5">[6]</ref>, e.g. Paris-Erdogan model <ref type="bibr" target="#b6">[7]</ref> and exponential model <ref type="bibr" target="#b7">[8]</ref> for crack propagation with particle filtering used as parameter estimator <ref type="bibr" target="#b8">[9]</ref>. However, often in practice, it is difficult, even impossible, to obtain enough prior knowledge for physics-based methods. In this case, data-based approach is proposed as an alternative. It relies on historical run-to-failure data for estimating the RUL via different machine learning methods <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>. Most of these methods consist of two stages: an offline learning with feature extractor and degradation state learner; an online stage for RUL estimation via the learned model. Support vector regression (SVR) <ref type="bibr" target="#b11">[12]</ref> and artificial neural network (ANN) <ref type="bibr" target="#b12">[13]</ref> are two widely used regression methods. The last method is hybrid, which combines the advantages of the previous two methods: physics knowledge is used to build the model, and the parameters are optimized by data-driven methods for accurate RUL estimation.</p><p>Although prognostics methods have been widely studied, they still suffer from some disadvantages. Firstly, most methods are applied of feature-level. A feature extractor can be beneficial, because it can transform the original signal into low-dimensional vectors for easier match or comparison <ref type="bibr" target="#b13">[14]</ref>- <ref type="bibr" target="#b15">[16]</ref>. However, on one hand, it excludes a lot of information during the feature extraction process, while some information can be useful. On the other hand, it also makes the prognostic process time-consuming, because it is often designed entirely hand crafted and rather specific for every new task. Therefore, although data-driven methods reduce the dependence on prior knowledge, the results are still highly dependent on experience <ref type="bibr" target="#b16">[17]</ref>. Secondly, most of the prognostic methods do not take into account the differences between degradation patterns, as well as the failure threshold (FT), which could influence the prediction performance greatly and vary from many internal or external factors, such as the change of operation condition, mission profile or processing technique. Finally, most methods in literature only consider the current prediction but ignore the prediction of previous time, which can also be valuable. As a result, the theoretical lifetime of a mechanical equipment can be influenced greatly by accidental error and noise, and therefore be different from the actual RUL <ref type="bibr" target="#b17">[18]</ref>.</p><p>Deep learning is a burgeoning new area of artificial intelligence that can learn a hierarchy of features by building highlevel features from low-level ones automatically and accurately <ref type="bibr" target="#b18">[19]</ref>. As a representative deep learning model, convolutional neural network (CNN) has achieved tremendous success in image recognition and speech tasks, because of its superior feature extraction and object recognition performances, and is also attracting attention in the industrial field <ref type="bibr" target="#b19">[20]</ref>. For instance, a CNN based on LeNet-5 is proposed for fault diagnosis, which converts signals into two-dimensional images and then extracts features from these images to eliminate the effect of handcrafted features <ref type="bibr" target="#b20">[21]</ref>. A NB-CNN method is proposed based on CNN and a Naive Bayes data fusion scheme to aggregate the information extracted from each video frame and enhance the overall performance of the system <ref type="bibr" target="#b21">[22]</ref>. A deep normalized CNN is proposed in <ref type="bibr" target="#b22">[23]</ref> for imbalanced fault classification of machinery. However, although the application of CNN has been developed well, there are few research works about the RUL prediction, which is always a difficult problem.</p><p>In this paper, a double-deep CNN framework-based intelligent RUL prediction method is proposed. The proposed method makes four contributions.</p><p>Firstly, the proposed method is a signal-level method, which can deal with raw signals directly, instead of relying on the feature extractor. The reduction of the demands for prior knowledge, physical model and human labor makes the proposed method more intelligent and adaptive.</p><p>Secondly, the proposed double-deep learning framework consists of two deep CNN architectures. Different degradation patterns are considered in the proposed framework. Then, the incipient failure (IF) point can be calculated in the first network. In this way, the RUL can be estimated in the second CNN layer through its corresponding degradation model from the IF point.</p><p>Thirdly, due to changing operational conditions and strong background noise, the prediction results can be influenced by abnormal points. In the proposed method, predictions of earlier times are also taken into account by a weighted algorithm to mitigate the effects of abnormal points and ensure the stability of the algorithm performance.</p><p>Finally, the RUL of different components, even the same component of different batches, can be different from different manufacturing conditions. Therefore, in instead of directly calculating the RUL using deep learning method, the operational reliability is firstly computed and, then, mapped to the RUL.</p><p>The remainder of the paper is organized as follows: In Section II, the proposed Intelligent RUL prediction method based on deep multi-CNN is described in detail. Then, the model is evaluated by accelerated degradation tests of bearing in Section III. In Section IV, the results are discussed, as well as the comparison with state of the art RUL prediction methods. Section V concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. PROPOSED FRAMEWORK</head><p>Based on the traditional convolutional neural network (CNN), a deep double-CNN framework is proposed in this paper for RUL prediction.Two CNN architectures are integrated in the proposed framework: the first CNN for incipient failure threshold (IFT) identification, the last one for RUL prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Convolutional Neural Network</head><p>CNN is a special feed-forward neural network that can extract topological properties from the inputs <ref type="bibr" target="#b23">[24]</ref>. Different from the traditional feed-forward ANN, it simulates three architectural properties of the visual cortex cell to ensure some degree of shift, scale and distortion invariance: local receptive fields, shared weights and subsampling <ref type="bibr" target="#b24">[25]</ref>. As shown in Fig. <ref type="figure" target="#fig_1">1</ref>, there are two basic modules in CNN, including convolution operation, which implements the first two properties of CNN, and pooling for subsampling <ref type="bibr" target="#b25">[26]</ref>.</p><p>Convolution is an operation on two functions. For example, suppose I is a two-dimensional image input, and K is a twodimensional kernel. The convolution z of I and K can be calculated as:</p><formula xml:id="formula_0">z[i, j] = m n I[i + m, i + n]K[m, n] = (I * K)[i, j] (1)</formula><p>The convolution kernel, also called the weight, slip across the input image and performs the convolution operation with each corresponding local receptive field. In this way, the network greatly reduces the unnecessary parameters because all local parts can share the same weights and, therefore, avoids the over-fitting problem.</p><p>Pooling is another important operation in CNN, through which the output of the net at a certain location is replaced with a summary statistic of the nearby outputs. It is performed mainly to reduce the calculation cost, characterize the translation invariance, cut down the input dimension and control the over-fitting risk. Invariance to local translation can be very useful because we care more about whether some feature is present than exactly where it is <ref type="bibr" target="#b26">[27]</ref>: considering an industrial signal as an example, whether the mechanical component is faulty is much more important than finding out which part of the signal shows the failure information.</p><p>The most commonly used pooling operation is max-pooling, which outputs the maximum number within a rectangular neighborhood, called the pooling size. In this paper, the maxpooling operation is used in the deep CNN architecture.</p><p>Apart from local receptive fields and shared weights, drop out is also applied in the proposed method to reduce the risk of overfitting problem. Drop out refers to dropping out units (hidden and visible) in a neural network. That is, randomly let some neurons to be 0. The primary idea of drop out is to randomly drop components of neural network (outputs) from a layer of neural network. By dropping a unit out (that is, temporarily removing it from the network), along with all its incoming and outgoing connections, the corresponding unit is retained with a fixed probability independent of other units. The thinned outputs are then used as input to the next layer.</p><p>The resulting neural network is used without drop out.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. CNN Classification Model for IF point Identification</head><p>The identification of the IF point is the first task of RUL prediction because signals offered before the IF point provide little information on the degradation process. Finding the IF point is difficult because same machines in different conditions have a large variation in the signals <ref type="bibr">[28]</ref>. If the IF point is determined earlier, the system is likely to give many false alarms; if it is too late, then some useful signals and information can be lost and make the prediction less accurate.</p><p>The IF point is often determined experimentally due to the difference between machines at failure <ref type="bibr" target="#b27">[29]</ref>, <ref type="bibr" target="#b28">[30]</ref>. However, experimentation can be time-and energy-consuming. Therefore, the proposed framework addresses the problem by automatically extracting the inherent differences between normal and failure signals, thus reducing the need for prior knowledge, data and experimentation. This is done through the use of CNN, which is a type of deep learning model in which trainable filters and local neighborhood pooling operations are applied on raw inputs alternately, resulting in a hierarchy of increasing complex features <ref type="bibr" target="#b29">[31]</ref>.</p><p>Therefore, CNN is used to identify the IF point in this step. The degradation patterns are divided into two types: rapid degradation and slow degradation. Two CNN models are trained as follows:</p><p>1. The vibration signals of mechanical components life tests under these two patterns are collected and saved as the training data.</p><p>2. For each kind of vibration data, the signals in normal stage are labeled as 0; and those in faulty stage are labeled as 1.</p><p>3. These signals are used to train the IFT identification CNN models to distinguish the faulty and normal signals.</p><p>During the RUL prediction process of an unknown test, the vibration signals are imported into the CNN classification models successively. When the output of the CNN model becomes 1 from 0, IF point is detected. However, industrial systems are not ideal model, and they can be always influenced by strong noise or fickle operational conditions. Even when the system is normal, the output of the CNN classification model can be 1 due to the influence of accidental error. Therefore, inspired by <ref type="bibr" target="#b30">[32]</ref>, a "3/5" principle is applied in this step: if for 3 times the model output is 1 in 5 sequential times, then incipient failure is detected. In this way, the IF point detection can be more stationary. The flowchart of this step is shown in Fig. <ref type="figure">2</ref>. The IF point here can be regarded as the alarm, which can remind the operator ahead of time and perform fail-safe reactions, such as shutting down the failed components and make repair/replacement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Degradation Pattern Recognition</head><p>Degradation patterns on even identical complements vary due to different operational conditions, materials, manufacturing or processing techniques <ref type="bibr" target="#b3">[4]</ref>. Most of them follow two types of increasing trend of degradation patterns: for the first, in Fig. <ref type="figure">3(a)</ref>, the root mean square (RMS) of vibration signal shows a sudden increasing trend; for the second, Fig. <ref type="figure">3(b)</ref> shows a gradually increasing trend.</p><p>Because the first degradation pattern can lead to totally failure of industrial system in a short time, it should be considered firstly. Therefore, once the tested component begins to degrade, which can be determined by CNN classification model in the previous step, each degradation process is set to be the sudden degradation pattern at the beginning. Based on the physical manifestation of the sudden degradation pattern, if RMS doubles after a few samples (usually 2 or 3 samples), this process is regarded as the first degradation pattern; otherwise, the alarm all-cleared, and this degradation process is regarded as the second pattern. The RUL of some mechanical equipments can be quite different from each other. Therefore, instead of calculating the RUL directly, reliability is firstly calculated, and, then, the reliability is converted to the RUL. At the beginning, the equipment is normal and the output of the regression CNN (the second CNN) is 1, its reliability is taken equal to 100%. When the equipment is complete failure, its reliability is 0. Then, a mapping algorithm is proposed to map the reliability to the RUL. In this way, the problem of time variance can be solved.</p><p>The objective of this step is to fit the degradation process (usually the RMS trend) with nonlinear functions. Exponential function is most commonly used because typically the RMS trend is similar exponential form. However, exponential function cannot be fitted with all degradation process due to the variability of mechanical systems and operation conditions. Therefore, a CNN regression model is used to fit the nonlinear degradation process, which can calculate the reliability based on training data. This is because deep learning methods allow computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction <ref type="bibr" target="#b25">[26]</ref>. Therefore, CNN can fit more complex nonlinear functions than exponential functions theoretically. Two CNN models are trained in this step, one for regressing rapid degradation and the other one for slow degradation. Instead of using partial dataset to train the classification models in the second step, two regression CNN models are trained via all of the collected training data.</p><p>Firstly, the collected vibration signals of the life test are imported into the CNN classification model as the training data to determine the IF point. Then, the labels corresponding to the training data are set to be linearly decreasing:</p><formula xml:id="formula_1">y 2 (i) = R(i) =    1, T i ≤ T 1 1 - T i -T 1 T e -T 1 , T i &gt; T 1<label>(2)</label></formula><p>where y 2 (i) is the label of the input at time t i . R(i) is the reliability percentage of the training data at time t i . T e is total time of the test; T 1 is the start time of IF; and T i is the run time for now. The graphical demonstration is shown in Fig. <ref type="figure">4</ref>.</p><p>After importing the vibration signals, as well as their corresponding labels, the reliability prediction models under the two degradation patterns can be learned by training the CNN regression models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Predicting the RUL of New Test Components</head><p>In this step, the trained CNN models are used to predict the RUL of a new test component. Firstly, the vibration signals of the test component are collected. Then, based on the constructed framework, the collected signals are firstly cut into a time series sample X = x (1) , x (2) , ..., x (m) . At the beginning of the test, the degradation pattern is set to be the rapid degradation pattern, and the time series samples are imported into the CNN classification model of rapid degradation to identify the IF point. Based on the "3/5" principle, if 3 To solve the RUL time variability and obatin more accurate results, the labels of the CNN regression model is constructed as the reliability, and the results of the whole framework are the estimated reliability R (i). Then, the reliability is mapped to RUL by a mapping algorithm proposed in this paper.</p><p>As shown in Fig. <ref type="figure">4</ref>, at moment t i , let T f (i) be the time from IF point to T i . So T f (i) can be calculated as:</p><formula xml:id="formula_2">T f (i) = T i -T 1<label>(3)</label></formula><p>Then, the estimated RUL from IF point to the final failure Tu (i) at t i can be estimated by T f (i) and R (i) as Fig. <ref type="figure">4</ref>:</p><formula xml:id="formula_3">Tu (i) = T f (i) 1 -R (i)<label>(4)</label></formula><p>To eliminate the influence of accidental errors, which is commonly seen in industrial systems, a weighted algorithm is proposed. That is, instead of using current signals to estimate RUL directly in traditional methods, the previous estimation results are also weighted into the proposed method, which can be mathematically expressed as:</p><formula xml:id="formula_4">Twu (i) = α 1 Twu (i -1) + α 2 Tu (i)<label>(5)</label></formula><p>where Twu (i) is the weighted total RUL from IF point to the final failure at t i ; Twu (i -1) is the weighted RUL from IF point to the final failure at t i-1 . α 1 and α 2 are the weight factors of previous results and current results, and α 1 + α 2 = 1. If the system is easily to be influenced by noise or other accidental errors, the calculated results are more sensitive and more likely to occur deviation, α 1 should set to be bigger. And if the test system is robust, the current result should be take a larger proportion because it makes use of more timely information, α 2 should be bigger.</p><p>Based on Twu (i) and T f (i), the estimated RUL is:  In this way, the proposed framework not only implements the mapping from reliability percentage to RUL, but also solves the RUL time variance problem, as well as the effect from background noise to the results.</p><formula xml:id="formula_5">RU L(i) = Twu (i) -T f (i)<label>(6</label></formula><p>The proposed framework for mechanical equipment RUL prediction is schematically represented in Fig. <ref type="figure" target="#fig_4">5</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. CASE STUDY A. Dataset Description</head><p>The experimental data come from the publicly available PRONOSTIA platform, which has been widely used to verify the effectiveness of RUL prediction methods <ref type="bibr" target="#b31">[33]</ref>. During the experiments, a radial force of 4kN is applied on the test bearings to conduct accelerated life tests. The rotating speed of bearings is set as 1800 r/min. Two vibration sensors with 25.6 kHz sampling frequency are mounted on the bearing to monitor the degradation process: one is set on the vertical axis, and the other one is on the horizontal axis. In this paper, the vertically collected signals are used for analysis. The length of every sample is 0.1s with 2560 points, and the sampling is repeated every 10s. All tests are stopped when the amplitude of the vibration signal exceeds 20g. The experimental system, as well as the tested bearings before and after a test can be found in <ref type="bibr" target="#b31">[33]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Constructing CNN Classification Models for IF Point Identification</head><p>At the beginning of the analysis, a five-layer deep CNN model is firstly constructed as shown in Fig. <ref type="figure">6</ref>, including a input layer (I1), a convolutional layer (C2), a sub-sampling layer (P3), a flatten layer (F4), a full-connected layer (F5) and a softmax classifier. In this experiment, the convolutional kernel in C2 layer is set to be 20 with 64 feature maps. Because the vibration signals are imported into the CNN model directly without any feature extraction, the convolutional kernel is a 1-dimensional vector instead of a 2-dimensional matrix in traditional methods. Then, a pooling operation is applied in the following P3 sub-sampling layer. This leads to the same number of C2 feature maps with a smaller resolution. After flatting the outputs of P3 in F4 layer, the outputs are used as the input of F5 to dense the feature maps and reduce the dimension. Suppose the number of hidden units in F5 is a; then, a a × 1 vector is used as the input of softmax classifier and the final output is the number of categories. In this paper, there are 1024 hidden units in F5, so there are 1024 inputs imported into the softmax classifier. Drop out is added in S3 layer and F5 layer in Fig. <ref type="figure">6</ref>. And drop out is set to be 0.25. The proposed method is implemented based on GPU: NVIDIA GeForce GTX 1060. For the first CNN model (classification CNN): the train time is 50.62s; the test time is 0.32s; the GPU memory cost is 3416Mb. For the second CNN model (CNN regression model): the train time is 57.96s; the test time is 0.31s; and the GPU memory cost is 3722Mb. SVR is implemented based on CPU: Intel Core i7-6700 Processor, so there is no GPU memory cost. The train time is 3.69s and the test time is 3.68s. Python 3.5 platform is applied to implement the proposed method, and ReLU function is used as the activation function. Adam algorithm is used as the optimizer <ref type="bibr" target="#b32">[34]</ref>. The parameters of the optimization algorithm are selected as Table <ref type="table" target="#tab_3">I</ref>. Two CNN classification models need to be trained to identify the IF point. In this experiment, the collected vibration signals are cut into segments with 2560 points (10 seconds), and each segment is regarded as a sample.</p><p>Two tests have been selected randomly for analysis. The vibration signals of the two tested bearings are shown in Fig. <ref type="figure">7</ref>  x( <ref type="formula" target="#formula_1">2</ref>)</p><p>x( <ref type="formula" target="#formula_2">3</ref>)</p><p>x( <ref type="formula" target="#formula_3">4</ref>  for learning CNN models in this paper.</p><p>For the first degradation pattern in Fig. <ref type="figure">7</ref>(a), its RMS of each sample is shown in Fig. <ref type="figure">7(c</ref>). It can be seen that the vibration signal lasts 8710s. And there are 871 samples, including about 828 normal samples, and about 43 faulty samples. The first 500 samples are selected as the normal training samples. And due to the rapid degradation trend, there are few faulty samples. For this test, all of the faulty samples labeled 1 are used for training. To control the input scale into a reasonable range, a "Min-Max scaling" normalization technique is applied, which can be mathematically represented as:</p><formula xml:id="formula_6">x(i) = x max -x(i) x max -x min<label>(7)</label></formula><p>where x(i) is the vibration amplitude at moment t i . x max and x min are respectively the maximum and minimum values of all the samples. In the proposed framework, the Rectified Linear Units (ReLU) function is used as the activation function for all CNNs, due to its fast convergence speed <ref type="bibr" target="#b33">[35]</ref>:</p><formula xml:id="formula_7">f (z) = 0, if z &lt; 0 z, otherwise<label>(8)</label></formula><p>The loss function is set to be the categorical cross-entropy.</p><p>For the second pattern, the waveform of its vibration signal and the RMS are shown in Fig. <ref type="figure">7</ref> sample and the degradation is slow. In this test, the first and the last 500 signal segments are used as normal and faulty samples to train the second CNN classification model, which is constructed the same as above.</p><p>After the CNN model is trained, all of the signal samples are imported into it to confirm the IF point. The classification results are shown in Fig. <ref type="figure">8</ref> in red lines. For comparison, another method is also used for IF point confirmation <ref type="bibr" target="#b34">[36]</ref>, whose results are marked with the green lines in Fig. <ref type="figure">7(c)</ref> and<ref type="figure">(d)</ref>.</p><p>It can be seen that in Fig. <ref type="figure">7</ref>(a), due to the rapid degradation, IF point can be easily confirmed at 828th sample (8280s) by both methods. However, the IF point can hardly be decided because the degradation process is slow and the indication of the bearing condition swings between normal and faulty in Fig. <ref type="figure">7(b</ref>). This problem is solved by the proposed method because based on the "3/5" principle, the IF point is confirmed at 14150s. Compared with 17330s by the comparison method, this result is more reasonable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Constructing CNN Regression Models</head><p>In this step, the CNN regression models are constructed for reliability estimation. For each test, the reliability can be calculated by Eq. ( <ref type="formula" target="#formula_1">2</ref>) based on the IF point. Then, all of the samples after IF point are imported into the CNN regression model, as well as their corresponding reliability as their labels.</p><p>In this step, the CNN models are constructed almost the same as the CNN classification model. There are three differences between them. Firstly, another full-connected network F6 with 32 hidden units is added between F5 and the last layer to avoid the dramatical shrink of the network and eliminate its influence on the analysis results. Secondly, instead of using softmax classifier in the last layer, logstic regression is applied, and the outputs of logstic regression are used as the estimated reliability R (i). Thirdly, because the problem in this step is a regression problem, the mean squared error is used as the loss function in this model, instead of the categorical cross-entropy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. IF Point Identification of Test Data</head><p>After the CNN classification models and regression models have been trained, two random tests are selected to verify the effectiveness of the proposed method. The vibration signals of the two tests are shown in Fig. <ref type="figure">9</ref>  In addition, it can also be seen in Fig. <ref type="figure">9</ref>(c) that there is some salient points during the experiment, which however, do not mean that the bearing is faulty because the bearing still works for a long time after these points. If RMS is considered as feature, these can hardly be distinguished from faulty samples by traditional methods. Based on the "3/5" principle, the proposed method solves the problem effectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. RUL Prediction of Test Data</head><p>After the IF point of each test is confirmed, all the collected samples are imported into their corresponding CNN regression models. Based on the mapping algorithm proposed in this paper, the RUL can be estimated. To future illustrate the superiority of the proposed method, SVR method is used to analyze the same signals for comparison. SVR is a regression method that can estimate a relationship between input and output random variables. It has been widely used in many research works for RUL prediction because it has shown to be very efficient in modeling non-linear relationships between a target variable and a set of predictor variables <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b35">[37]</ref>. Eleven time-and frequency-domain features, such as RMS, mean, kurtosis of the samples after IF points of the training data, and the corresponding RUL are used as the training set of the SVR. The estimated reliability, RUL prediction results, and the comparison of the RUL prediction results of the two tests are shown in Fig. <ref type="figure" target="#fig_1">11</ref> and Fig. <ref type="figure" target="#fig_1">12</ref>. The horizontal axis of Fig. <ref type="figure" target="#fig_1">11(b),</ref><ref type="figure">(c</ref>) and Fig. <ref type="figure" target="#fig_1">12(b),</ref><ref type="figure">(c</ref>) is the current time, and the vertical axis is the prediction of remaining time that can be operated, which is called the remaining useful life (RUL). For a more intuitive comparison, root-mean-square error (RMSE) and cumulative relative accuracy (CRA) <ref type="bibr" target="#b36">[38]</ref> are used as the prediction indexes, and shown in Table <ref type="table" target="#tab_4">II</ref>. To illustrate the performance between raw data and the CNN model in training procedure, the RMSE and CRA of the two training datasets are also shown in Table <ref type="table" target="#tab_4">II</ref>. It can be seen that the proposed method performs well both in training and testing procedures.</p><p>It can be seen from Fig. <ref type="figure" target="#fig_1">11</ref> and Fig. <ref type="figure" target="#fig_1">12</ref> that the prediction results of the proposed framework show high accuracy. Compared with more than 3 error of SVR in the two tests, the errors of the proposed method have been decreased a lot. At the beginning of prediction process, which is the most difficult part, the RUL prediction results of the proposed method have little difference with the actual RUL, while the SVR results are nearly two times of the actual RUL. For the first test, the SVR result in Fig. <ref type="figure" target="#fig_1">11(c</ref>) is always worse than the proposed method, but it gets better rapidly, because the first test is a rapid degradation pattern. However, for the fast degradation pattern, predicting the RUL early and accurately is important. In the second test of slow degradation, it can be seen that the RUL prediction result of the proposed method still show high accuracy and robustness for a long prediction time duration. While the prediction result of SVR differs greatly from the actual RUL until the last 100 seconds, which is why in Table II the RMSE of SVR is nearly 10 times than the proposed method, and the CRA is also worse. This is because the proposed method is driven by original signals directly, and provides accurate IF points, which not only guarantee the operational information can be fully used, but also make sure the RUL regression CNN model is trained accurately. However, even though the IF points are calculated accurately, and the training data sets are guaranteed to be effective, there is still a large gap between the results of SVR and real RULs. This can be explained as follows. In the proposed method, a weighted algorithm is used to retain the information before the current time, which can avoid the influence of outliers. While SVR, as well as most RUL prediction methods, only  </p><formula xml:id="formula_8">n c (t) = n(t) -0.5n(t)<label>(9)</label></formula><p>Then, the proposed method is used to analyze the two signals under two different noise conditions. The prediction errors of them are shown in Table <ref type="table" target="#tab_6">III</ref>. It can be seen that the addition of different noise only has a minimal influence on the performance of the proposed method, which verified the noisy and disturbance rejection abilities of the proposed method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CONCLUSION</head><p>A double-CNN framework has been proposed in this paper for intelligent RUL prediction. There are four major contributions in this work to improve the prediction accuracy. Firstly, the proposed framework is driven by original signals directly, which can not only solve the problem of feature extraction, but also retain the operational information. Secondly, two most common degradation patterns (sudden increasing trend and slow increasing trend) have been considered to build different IF distinguishing models and a RUL prediction model for each pattern to been trained. Thirdly, a weighted algorithm, as well as a "3/5" principle is proposed to ensure the stability of the prediction and eliminate or reduce the influence of abnormal points. Finally, a intermediate variable is introduced in this work to solve the RUL time and performance variance problem, instead of constructing a RUL regression model directly in traditional methods. To verify the proposed method, its performance is compared with SVR, which is widely used for RUL prediction. The results clearly demonstrate the effectiveness of the proposed method. When dealing with other datasets, the corresponding parameters should be adjusted to ensure the performance, such as kernel size and pooling region. Future work will focus on simplifying the classifier as three classifications, that is 0 as normal; 1 as sudden degradation and 2 as slow degradation, which will improve the proposed method to be more compact.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. An illustration of a CNN consisting of a pair of a convolutional layer and a pooling layer in succession.</figDesc><graphic coords="2,593.85,136.76,252.51,66.91" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .Fig. 3 .</head><label>23</label><figDesc>Fig. 2 IF point of test data Estimated reliability Ȓ Mapping algorithm Estimated RUL</figDesc><graphic coords="3,331.75,637.60,349.01,78.16" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Proposed Framework.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(a) and (b). It can be seen that the vibration amplitude of first bearing increases rapidly, while the second one increases slowly, which match with the two degradation patterns. Their vibration signals are cut into the normalized samples and used 0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 6</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .Fig. 7 .Fig. 8 .</head><label>678</label><figDesc>Fig. 6. The architecture of the signal-level CNN classifier, including a input layer I1, a convolutional layer C2 with 20 × 64 convolution kernel, a pooling layer F4 with 32 pooling size, a flatten layer F4, a full-connected layer F5 and a softmax classifier.</figDesc><graphic coords="6,103.43,147.22,201.18,59.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>(b) and Fig. 7(d). It can be seen that the vibration signal lasts 27550s, and there are 2755 signal segments. The bearing begins to degrade from 1415th 0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 7</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>(a) and (b). As described earlier in the proposed framework, the vibration signals are firstly cut into segments. Then, these segments are directly imported into the first CNN classification model for degradation pattern and IF point confirmation. The RMS of the two tests are shown in Fig. 9(c) and (d). The IF points confirmation results of the first CNN model are shown in Fig. 10. It can be seen that the IF points of the two tests are determined as 24190s and 13350s respectively. The IF point of the second test is decided based on the "3/5" principle. As shown in Fig.9(c), the RMS of the first test doubles within 2 or 3 samples after its corresponding IF point, while the second test does not. Therefore, the first test is identified as a fast degradation pattern and the second test is identified as a slow degradation. Then, their signal segments are imported into the corresponding CNN classification models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>8 ClassificFig. 9 .Fig. 10 .Fig. 11 .Fig. 12 .</head><label>89101112</label><figDesc>Fig. 9. The vibration signals of the two tests and their RMS for verification of the proposed method: (a) the vibration signal of the first test; (b) the vibration signal of the second test; (c) RMS of the first test; and (d) RMS of the second test.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics</figDesc><table><row><cell>SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS</cell><cell>4</cell></row><row><cell>D. CNN Regression Model Between Original Signals and the</cell><cell></cell></row><row><cell>Reliability Percentage</cell><cell></cell></row></table><note><p>0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Fig. 4. Graphical illustration of reliability labels generation.times the model outputs 0 in 5 sequential times, then the experimental subject is judged as incipient failure. After a few samples (always 2 to 5 samples), if RMS doubles, then the degradation pattern is confirmed to be the first one, and the reliability prediction can be continued. If RMS does not double, this degradation is confirmed as the second pattern. Then, the historical time series samples are imported into the CNN classification model corresponding to the second degradation pattern to identify the IF point again. Just like the training data, the IF point of test data is also identified following Fig.2. Once the IF point is confirmed, the collected time series samples are imported into the corresponding CNN regression model for reliability estimation.</figDesc><table><row><cell></cell><cell cols="2">If RMS doubles in 2 or 3 samples?</cell><cell>No</cell><cell>IF point</cell></row><row><cell></cell><cell>Yes</cell><cell></cell><cell></cell></row><row><cell></cell><cell>IF point</cell><cell></cell><cell></cell></row><row><cell>y</cell><cell></cell><cell></cell><cell></cell></row><row><cell>1</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">T u</cell><cell></cell></row><row><cell>R i</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>T f (i)</cell><cell>RUL</cell><cell></cell></row><row><cell>0</cell><cell>T 1 T i</cell><cell></cell><cell>T e</cell><cell>t</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics</figDesc><table><row><cell cols="4">SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS T 1 T i T e 0</cell><cell>t</cell><cell></cell><cell>5</cell></row><row><cell>Offline train step</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Library of experiments</cell><cell>Cutting vibration signals into segments as training samples</cell><cell cols="2">Training samples selection</cell><cell>CNN classifier training</cell><cell>IF point of training data</cell><cell>Eq. 2 Samples during the degradation process are labeled as their reliability percentage R(i)</cell></row><row><cell></cell><cell cols="4">Nromal samples labeled as 0</cell><cell></cell></row><row><cell></cell><cell cols="4">Faulty samples labeled as 1</cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="3">All of the samples are used as inputs</cell><cell></cell></row><row><cell>Online sensory data</cell><cell cols="2">Cutting vibration signals into segments as test samples</cell><cell></cell><cell></cell><cell cols="2">CNN regression model training</cell></row><row><cell></cell><cell>CNN classifier training</cell><cell>Fig. 2</cell><cell cols="2">IF point of test data</cell><cell cols="2">Estimated reliability Ȓ</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">Mapping algorithm</cell></row><row><cell>Online test step</cell><cell></cell><cell></cell><cell></cell><cell cols="2">Estimated RUL</cell></row></table><note><p>) 0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE I :</head><label>I</label><figDesc>The parameters of the optimization algorithm.</figDesc><table><row><cell cols="2">Parameters β 1</cell><cell>β 2</cell><cell>learning rate</cell><cell>weight decay</cell><cell>epoch</cell><cell>batch size</cell></row><row><cell>Values</cell><cell cols="2">0.9 0.999 1 × 10 -8</cell><cell>0.001</cell><cell>0</cell><cell>50</cell><cell>32</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE II :</head><label>II</label><figDesc>Prediction errors of the proposed method and SVR.</figDesc><table><row><cell></cell><cell></cell><cell>The proposed method (training)</cell><cell>The proposed method (testing)</cell><cell>SVR</cell></row><row><cell>First test</cell><cell>RMSE</cell><cell>2.13</cell><cell>4.30</cell><cell>10.28</cell></row><row><cell></cell><cell>CRA</cell><cell>0.94</cell><cell>0.77</cell><cell>0.34</cell></row><row><cell>Second test</cell><cell>RMSE</cell><cell>37.74</cell><cell>72.03</cell><cell>727.55</cell></row><row><cell></cell><cell>CRA</cell><cell>0.96</cell><cell>0.78</cell><cell>-1.51</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>0278-0046 (c) 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2019.2924605, IEEE Transactions on Industrial Electronics SUBMITTED TO IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS 9</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE III :</head><label>III</label><figDesc>Prediction errors of the proposed method under two different noise conditions. the features of the current sample. And, once an outlier appears, the result can be influenced a lot, which can also be seen in Fig.11(c) and Fig.12(c) that the oscillating amplitudes of SVR results waveforms are much larger than those of the proposed method. In addition, because different bearing can lead to different degradation time and training data sets are different from the test data sets, which can lead to a incorrect result if the prediction model stays the same with the training model if we estimate the RUL directly as traditional RUL prediction methods. While in the proposed method, a relative reliability is firstly calculated, instead of mapping the absolute RUL value directly in traditional methods. By replacing the absolute value with a relative value, the time variance problem can be solved and RUL can be predicted more reasonable.To illustrate the noise robustness, the raw signals are added with white Gaussian noise and colored noise for analyze. The white noise n(t) is constructed with mean value of 0, and variance of 1. The colored noise is constructed as follows:</figDesc><table><row><cell></cell><cell></cell><cell>White noise</cell><cell>Colored noise</cell></row><row><cell>First test</cell><cell>RMSE CRA</cell><cell>6.22 0.67</cell><cell>5.35 0.67</cell></row><row><cell>Second test</cell><cell>RMSE CRA</cell><cell>78.83 0.84</cell><cell>55.44 0.87</cell></row></table><note><p>use</p></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A classification framework for predicting components&apos; remaining useful life based on discrete-event diagnostic data</title>
		<author>
			<persName><forename type="first">O</forename><surname>Fink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Weidmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Reliability</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="1049" to="1056" />
			<date type="published" when="2015-09">Sept 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Remaining useful life prediction of aircraft engine based on degradation pattern learning</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reliability Engineering &amp; System Safety</title>
		<imprint>
			<biblScope unit="volume">164</biblScope>
			<biblScope unit="page" from="74" to="83" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Remaining useful life estimation in heterogeneous fleets working under variable operating conditions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Al-Dahidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">D</forename><surname>Maio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Baraldi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reliability Engineering &amp; System Safety</title>
		<imprint>
			<biblScope unit="volume">156</biblScope>
			<biblScope unit="page" from="109" to="124" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An improved exponential model for predicting remaining useful life of rolling element bearings</title>
		<author>
			<persName><forename type="first">N</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">X</forename><surname>Ding</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="7762" to="7773" />
			<date type="published" when="2015-12">Dec 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">State of the art and taxonomy of prognostics approaches, trends of prognostics applications and open issues towards maturity at different technology readiness levels</title>
		<author>
			<persName><forename type="first">K</forename><surname>Javed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gouriveau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zerhouni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Mechanical Systems and Signal Processing</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="214" to="236" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A particle filtering and kernel smoothing-based approach for new design component prognostics</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Baraldi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">D</forename><surname>Maio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reliability Engineering &amp; System Safety</title>
		<imprint>
			<biblScope unit="volume">134</biblScope>
			<biblScope unit="page" from="19" to="31" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Discovering prognostic features using genetic programming in remaining useful life prediction</title>
		<author>
			<persName><forename type="first">L</forename><surname>Liao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="2464" to="2472" />
			<date type="published" when="2014-05">May 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A model-based method for remaining useful life prediction of machinery</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gontarz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Radkowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dybala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Reliability</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="1314" to="1326" />
			<date type="published" when="2016-09">Sept 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Model adaptation for prognostics in a particle filtering framework</title>
		<author>
			<persName><forename type="first">B</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goebel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Prognostics and Health Management</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Health index-based prognostics for remaining useful life predictions in electrical machines</title>
		<author>
			<persName><forename type="first">F</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Habibullah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nadarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="2633" to="2644" />
			<date type="published" when="2016-04">April 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Prognostics and health management of industrial equipment</title>
		<author>
			<persName><forename type="first">E</forename><surname>Zio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Seifedine Kadry</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Direct remaining useful life estimation based on support vector regression</title>
		<author>
			<persName><forename type="first">R</forename><surname>Khelif</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chebel-Morello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Malinowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Laajili</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Fnaiech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zerhouni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="2276" to="2285" />
			<date type="published" when="2017-03">March 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Residual life predictions from vibration-based degradation signals: a neural network approach</title>
		<author>
			<persName><forename type="first">N</forename><surname>Gebraeel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lawley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Parmeshwaran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="694" to="700" />
			<date type="published" when="2004-06">June 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Time-frequency atoms-driven support vector machine method for bearings incipient fault diagnosis</title>
		<author>
			<persName><forename type="first">R</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Mechanical Systems and Signal Processing</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="345" to="370" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Discovering prognostic features using genetic programming in remaining useful life prediction</title>
		<author>
			<persName><forename type="first">L</forename><surname>Liao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="2464" to="2472" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Fault diagnosis for wind turbine generator bearing via sparse representation and shift-invariant k-svd</title>
		<author>
			<persName><forename type="first">B</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Informatics</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Dislocated time series convolutional neural architecture: An intelligent fault diagnosis approach for electric machine</title>
		<author>
			<persName><forename type="first">R</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Informatics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="1310" to="1320" />
			<date type="published" when="2017-06">June 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Extended kalman filtering for remaining-useful-life estimation of bearings</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Singleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Strangas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Aviyente</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="1781" to="1790" />
			<date type="published" when="2015-03">March 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Artificial intelligence for fault diagnosis of rotating machinery: A review</title>
		<author>
			<persName><forename type="first">R</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Mechanical Systems and Signal Processing</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="page" from="33" to="47" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">3d convolutional neural networks for human action recognition</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="221" to="231" />
			<date type="published" when="2013-01">Jan 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A new convolutional neural network-based data-driven fault diagnosis method</title>
		<author>
			<persName><forename type="first">L</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="5990" to="5998" />
			<date type="published" when="2018-07">July 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Nb-cnn: Deep learning-based crack detection using convolutional neural network and nave bayes data fusion</title>
		<author>
			<persName><forename type="first">F</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Jahanshahi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="4392" to="4400" />
			<date type="published" when="2018-05">May 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Deep normalized convolutional neural network for imbalanced fault classification of machinery and its understanding via visualization</title>
		<author>
			<persName><forename type="first">F</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Xing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Mechanical Systems and Signal Processing</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="page" from="349" to="367" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A trainable feature extractor for handwritten digit recognition</title>
		<author>
			<persName><forename type="first">F</forename><surname>Lauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">Y</forename><surname>Suen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Bloch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1816" to="1824" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Gradient-based learning applied to document recognition</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bottou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Haffner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="2278" to="2324" />
			<date type="published" when="1998-11">Nov 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Deep learning</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">521</biblScope>
			<biblScope unit="issue">7553</biblScope>
			<biblScope unit="page" from="436" to="444" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A recurrent neural network based health indicator for remaining useful life prediction of bearings</title>
		<author>
			<persName><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lin</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">240</biblScope>
			<biblScope unit="page" from="98" to="109" />
			<date type="published" when="2016">2016. 2017</date>
			<publisher>MIT press</publisher>
		</imprint>
	</monogr>
	<note>Deep learning</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A robust &amp; reliable Data-driven prognostics approach based on extreme learning machine and fuzzy clustering</title>
		<author>
			<persName><forename type="first">K</forename><surname>Javed</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
		<respStmt>
			<orgName>Université de Franche-Comté</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Health assessment and life prediction of cutting tools based on support vector regression</title>
		<author>
			<persName><forename type="first">T</forename><surname>Benkedjouh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Medjaher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zerhouni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rechak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent Manufacturing</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="213" to="223" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">3d convolutional neural networks for human action recognition</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on pattern analysis and machine intelligence</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="221" to="231" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Condition monitoring and fault detection of wind turbines and related algorithms: A review</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Hameed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Renewable and Sustainable Energy Reviews</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="39" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Pronostia: An experimental platform for bearings accelerated degradation tests</title>
		<author>
			<persName><forename type="first">N</forename><surname>Patrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rafael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kamal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Emmanuel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-M</forename><surname>Brigitte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Noureddine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Christophe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE International Conference on Prognostics and Health Management, PHM&apos;12</title>
		<imprint>
			<biblScope unit="page" from="1" to="8" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Adam: A method for stochastic optimization</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ba</surname></persName>
		</author>
		<idno>abs/1412.6980</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Automated feature selection for embeddable prognostic and health monitoring (phm) architectures</title>
		<author>
			<persName><forename type="first">A</forename><surname>Ginart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Barlas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Goldin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Dorrity</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="page" from="195" to="201" />
			<date type="published" when="2006">2006. 2006</date>
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
	<note>in Autotestcon</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Remaining useful life estimation in rolling bearings utilizing data-driven probabilistic esupport vectors regression</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Loutas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Roulias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Georgoulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Reliability</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="821" to="832" />
			<date type="published" when="2013-12">Dec 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">She currently is a Postdoctoral researcher in the Language Technologies Institute, School of Computer Science at Carnegie Mellon University. Her research interests include intelligent manufacturing, natural language processing, computer vision and machine learning. Boyuan Yang received the BA, MA and PhD degrees in School of Mechanical Engineering from Xi&apos;an Jiaotong University</title>
		<author>
			<persName><forename type="first">A</forename><surname>Saxena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Celaya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Saha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goebel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">His research interests include intelligent manufacturing, machine learning, condition monitoring and wind energy</title>
		<meeting><address><addrLine>Xi&apos;an, China; Xi&apos;an, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2010. 2013. 2015. 2019. 2013. 2015. 2019</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="4" to="23" />
		</imprint>
	</monogr>
	<note>He currently is a postdoctoral researcher in School of Electrical and Electronic Engineering at the University of Manchester</note>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">He is also a Full Professor with the Politecnico di Milano. He has authored or coauthored seven books and more than 300 papers in international journals</title>
		<author>
			<persName><forename type="first">Enrico</forename><surname>Zio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SM&apos;09) received the B.S. and Ph.D. degrees in nuclear engineering from the Politecnico di Milano</title>
		<meeting><address><addrLine>Milano, Italy; Los Angeles, CA, USA; Cambridge, MA, USA; Sophia Antipolis, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
		<respStmt>
			<orgName>Ecole de Mines, ParisTech, PSL Research University</orgName>
		</respStmt>
	</monogr>
	<note>1991 and 1995, respectively, the M.Sc. degree in mechanical engineering from the University of California. His research interests include the modeling and analysis of complex systems? reliability, maintainability, prognostics, safety, vulnerability, resilience, and security characteristics</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
