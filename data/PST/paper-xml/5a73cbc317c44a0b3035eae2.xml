<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cyberattack Detection in Mobile Cloud Computing: A Deep Learning Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Khoi</forename><forename type="middle">Khac</forename><surname>Nguyen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information and Communication Technology</orgName>
								<orgName type="institution">Hanoi University of Science and Technology</orgName>
								<address>
									<country key="VN">Vietnam</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dinh</forename><forename type="middle">Thai</forename><surname>Hoang</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dusit</forename><surname>Niyato</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ping</forename><surname>Wang</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">Nanyang Technological University</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Diep</forename><surname>Nguyen</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing and Communications</orgName>
								<orgName type="institution">University of Technology Sydney</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Eryk</forename><surname>Dutkiewicz</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing and Communications</orgName>
								<orgName type="institution">University of Technology Sydney</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Cyberattack Detection in Mobile Cloud Computing: A Deep Learning Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">09220AEEA6B6C2B33D0570B0CB11B788</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cybersecurity</term>
					<term>cyberattack</term>
					<term>intrusion detection</term>
					<term>mobile cloud</term>
					<term>and deep learning</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>With the rapid growth of mobile applications and cloud computing, mobile cloud computing has attracted great interest from both academia and industry. However, mobile cloud applications are facing security issues such as data integrity, users' confidentiality, and service availability. A preventive approach to such problems is to detect and isolate cyber threats before they can cause serious impacts to the mobile cloud computing system. In this paper, we propose a novel framework that leverages a deep learning approach to detect cyberattacks in mobile cloud environment. Through experimental results, we show that our proposed framework not only recognizes diverse cyberattacks, but also achieves a high accuracy (up to 97.11%) in detecting the attacks. Furthermore, we present the comparisons with current machine learning-based approaches to demonstrate the effectiveness of our proposed solution.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Mobile cloud computing (MCC) is an emerging architecture which has been developed based on the power of cloud computing to serve mobile devices <ref type="bibr" target="#b0">[1]</ref>. MCC allows mobile applications to be stored and remotely executed on cloud servers, thereby reducing computing and energy costs for mobile devices. Furthermore, MCC brings a huge profit to cloud service providers by optimizing cloud resource usage through advanced virtualization technologies. Forbes magazine predicts that worldwide spending on public cloud services will grow at a 19.4% compound annual growth rate (CAGR) from nearly $70 billion in 2015 to more than $141 billion in 2019 <ref type="bibr" target="#b1">[2]</ref>. However, the MCC is challenged by cybercrime. According to UK Government, 74% of small firms in the UK experienced a cybersecurity breach, and 90% of large firms were also targeted in 2014 <ref type="bibr" target="#b2">[3]</ref>.</p><p>To counter cyberattacks in MCC, it is crucial to early detect cyber threats, thereby implementing prompt countermeasures to prevent the risks. Currently, there are some approaches proposed to detect and prevent cyberattacks in cloud environment. For example, the authors of <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, and <ref type="bibr" target="#b5">[6]</ref> introduced solutions to detect DoS attacks. Alternatively, one can also rely on attacks' patterns and risk assessment <ref type="bibr" target="#b8">[9]</ref>, game theory <ref type="bibr" target="#b9">[10]</ref>, and supervised learning <ref type="bibr" target="#b10">[11]</ref> to detect and counter cyber threats. The common limitation of these methods is the relatively low accuracy in detecting cyberattacks, and they are unable to work effectively in real-time cloud systems with different types of attacks. In this paper, we propose a framework with an advanced detection mechanism developed from deep learning technique which allows to detect various attacks with high accuracy.</p><p>Deep learning is a sub-field of machine learning concerned with algorithms inspired by the structure and functions of neural networks <ref type="bibr" target="#b11">[12]</ref>. Over the past few years, deep learning has been implemented successfully in many areas. For example, deep learning can be used in automatic translation machines to improve the reliability, in recommendation systems to suggest what customers are interested in or want to buy next, and in image recognition systems to detect objects <ref type="bibr" target="#b11">[12]</ref>. In this paper, we introduce a framework to detect and prevent cyberattacks through using deep learning technology. The core idea of deep learning method is using a training dataset to train the pre-established neural network in offline mode with the aim to adjust weights of the neural network. Then, the neural network will be used to detect cyberattacks in the cloud system in online mode. Through experimental results, we show that our proposed framework can detect diverse attacks with very high accuracy. In addition, we have also compared the performance of our proposed framework with those of conventional intrusion detection methods to demonstrate the efficiency of our solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>There have been a rich literature dealing with DoS attacks in the cloud computing environment. In particular, the authors in <ref type="bibr" target="#b3">[4]</ref> introduced a method taking advantages of virtual machine status including CPU and network usage to identify Denial-of-Service (DoS) attacks in cloud data centers. The authors found that malicious virtual machines exhibit similar status patterns when a DoS attack is launched, and thus information entropy can be applied in monitoring the status of virtual machines to identify attack behaviors. The authors in <ref type="bibr" target="#b4">[5]</ref> adopted a convariance matrix method relying on investigating the correlation of several features in the IP header. The authors in <ref type="bibr" target="#b5">[6]</ref> developed a classification method to determine the behavior of packets based on Kappa coefficient.</p><p>Besides DoS attacks, other attacks have been also reported and studied. For example, in cloud computing, since multiple Virtual Machines (VM) share the same physical machine, this creates a great opportunity to carry out Cache-based Side Channel Attack (CSCA). A detection technique using Bloom Filter (BF) was developed in <ref type="bibr" target="#b6">[7]</ref> to address this problem. The core idea of the BF is to reduce the performance overhead and a mean calculator to predict the cache behavior most probably caused by CSCA. Alternatively, in <ref type="bibr" target="#b7">[8]</ref>, the SQL injection attack detection method was introduced to prevent unauthorized accesses. The method first obtains SQL keywords through the analysis of lexical regulation for SQL statement, then analyzes the syntax regulation of SQL statement to create the rule tree and traverses ternary tree to detect the attacks.</p><p>The common limitation of existing intrusion detection approaches in cloud environment is that they are unable to simultaneously detect a wide range of attacks with high accuracy. For example, all aforementioned solutions are able to detect one type of attacks only. In this work, we develop an intrusion detection framework which is able to detect diverse attacks in MCC system with high accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. SYSTEM MODEL</head><p>In this section, we first describe the proposed system model for cyberattack detection along with main functions, and then explain how the system works. As shown in Fig. <ref type="figure" target="#fig_0">1</ref>, when a request, i.e., a packet, from a mobile user is sent to the system, it will be passed to the attack detection module. This module has three main functions, i.e., data collection and preprocessing, attack recognition, and request processing.</p><p>• Data collection and pre-processing function: is responsible for collecting data and pre-processing the request to fit the deep learning model. This function is essential to enhance the performance of our model, and helps the gradient descent algorithm used in the training process to converge much faster. • Attack detection (online component) function: is used to classify the incoming requests based on the trained deep learning model. After the deep learning model has been trained in an offline mode, it will be used for this function to detect malicious requests. • Request processing: Given an incoming request, the attack detection function will mark this request as a normal or suspicious request. If the request is normal, it will be served by available cloud resources. Otherwise, the request will be reported to the security control module. When a suspicious request is sent to the security control module, the request verifying function will be activated. In particular, the request will be verified carefully by comparing with the current database and/or sending to security service providers for double-checking. If the request is identified to be harmless, it will be served as normal. On the other hand, the request will be treated as a malicious request, and the attack defend function will be activated to implement prompt security policies to prevent the spread as well as impacts of this attack. For example, if a request is identified to be a DoS attack, the security manager can immediately implement filters at the gateway to block packets from the same IP address.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. DEEP LEARNING MODEL</head><p>In this section, we present the deep learning model for cyberattack detection and explain how the learning model detects cyberattacks in the cloud system. As shown in Fig. <ref type="figure" target="#fig_1">2</ref>, there are two phases in the learning model, i.e., feature analysis and learning process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Features Analysis and Dimension Reduction 1) Features Analysis:</head><p>Feature analysis is the first step in the deep learning model. The aim of this step is to extract features and learn from the features. Different types of malicious packets may have special features which are different from the normal ones, and thus by extracting and analyzing the abnormal attributes of packets, we can determine whether a packet is malicious or not. For example, packet features such as source bytes, percentage of packets with errors, and IP packet entropy are important features to detect DoS attacks <ref type="bibr" target="#b12">[13]</ref>.</p><p>2) Dimension Reduction: Data packets contain many attributes with different features. For example, each record in the KDDcup 1999 dataset [16] and NSL-KDD dataset <ref type="bibr" target="#b15">[17]</ref> consists of 41 features. However, not all the 41 features are useful for intrusion detection. Some features are irrelevant and redundant resulting in a long detection process and degrading the performance. Therefore, selecting features which preserve the most important information of a dataset is essential to reduce the computation complexity and increase the accuracy for the learning process. Principal Component Analysis (PCA) is an effective technique which is often used in machine learning to emphasize variation and determine strong patterns in a dataset. The core idea of PCA is to reduce the dimensionality of a dataset consisting of a large number of interrelated variables, while retaining as much as possible the variation presented in the dataset <ref type="bibr" target="#b13">[14]</ref>. Thus, in this paper, we adopt the PCA to reduce dimensions for considered datasets.</p><p>Mathematically, the PCA maps a dataset from an ndimensional space to an r-dimensional space where r ≤ n to minimize the residual sum of squares (RSS) of the projection. This is equivalent to maximize the covariance matrix of the projected dataset <ref type="bibr" target="#b13">[14]</ref>. The dataset in the new domain has two important properties, i.e., the different dimensions of the data have no correlation anymore and the dimensions are ordered according to the importance of their information. We define X as a (m × n) matrix with m observations of n different variables. Then, the covariance matrix C is given by:</p><formula xml:id="formula_0">C = 1 n -1 X ⊤ X. (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>Since C is a symmetric matrix, it can be diagonalized as follows <ref type="bibr" target="#b14">[15]</ref>:</p><formula xml:id="formula_2">C = VLV ⊤ , (<label>2</label></formula><formula xml:id="formula_3">)</formula><p>where V is a matrix of eigenvectors and</p><formula xml:id="formula_4">L = diag(λ 1 , ..., λ p )</formula><p>is a diagonal matrix of eigenvalues in a decreasing order. If we use singular value decomposition (SVD) to perform PCA, we will obtain the decomposition as follow <ref type="bibr" target="#b14">[15]</ref>:</p><formula xml:id="formula_5">X = UΣV ⊤ , (<label>3</label></formula><formula xml:id="formula_6">)</formula><p>where U and V are orthonormal matrices meaning that U T U = UU T = I and V T V = VV T = I, and Σ = diag(s 1 , ..., s n ) is a diagonal matrix of singular values s i . Then, we derive the following results:</p><formula xml:id="formula_7">C = 1 n -1 X ⊤ X = 1 n -1 (VΣU ⊤ )(UΣV ⊤ ) = 1 n -1 VΣ 2 V ⊤ . (<label>4</label></formula><formula xml:id="formula_8">)</formula><p>(4) implies that singular vector V has principal directions and singular value s i is related to the eigenvalue λ i of covariance matrix C via λ i = s 2 i /(n -1). Thus, we are able to define the principal components (PCs) as follows <ref type="bibr" target="#b14">[15]</ref>:</p><formula xml:id="formula_9">P = XV = UΣV T V = UΣ,<label>(5)</label></formula><p>where the columns of matrix P are the PCs and the matrix V is called the loading matrix which contains the linear combination coefficients of the variables for each PC. We want to project the dataset from n-dimensional to r-dimensional while retaining the important dimensions of the data. In other words, we have to find the smallest value r such that the following condition holds:</p><formula xml:id="formula_10">∑ r i=1 λ i ∑ n j=1 λ j ≥ α, (<label>6</label></formula><formula xml:id="formula_11">)</formula><p>where α is the percentage of information which needs to be reserved after reducing the dimension of input data to rdimensional. We can observe that the PCA will choose the PCs, i.e., important features, that maximize the variance α.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Learning Process</head><p>The learning process includes three layers, i.e., input layer, output layer, and some hidden layers, as depicted in Fig. <ref type="figure" target="#fig_1">2</ref>. The refined features will be used as the input data of the input layer. After the learning process, we can determine whether the packet is normal or malicious. The learning process includes three main steps, i.e., pre-learning, deep learning, and softmax regression steps as shown in Fig. <ref type="figure" target="#fig_1">2</ref>.</p><p>1) Pre-learning Process: This step uses a Gaussian Binary Restricted Boltzmann Machine (GRBM) to transform real values, i.e., input data of the input layer, into binary codes which will be used in the hidden layers. The GRBM has I visible units and J hidden units. The number of visible units (i.e., the number of neurons) is defined as the number of features after reducing dimension, and the number of hidden units is pre-defined in advance. The energy function of the GRBM is defined by <ref type="bibr" target="#b20">[22]</ref>:</p><formula xml:id="formula_12">E(v, h) = I ∑ i=1 (v i -a i ) 2 2σ 2 i - I ∑ i=1 J ∑ j=1 w ij h j v i σ i - J ∑ j=1 b j h j , (<label>7</label></formula><formula xml:id="formula_13">)</formula><p>where v is visible vector and h is hidden vector. a i and b j are biases corresponding to visible and hidden units, respectively.</p><p>w ij is the connecting weight between the visible and hidden units, and σ i is the standard deviation associated with Gaussian visible unit v i . Then, the network assigns a probability to every possible pair of a visible and a hidden vector via the energy function. The probability is defined as follows:</p><formula xml:id="formula_14">p(v, h) = e -E(v,h) ∑ v,h e -E(v,h) . (<label>8</label></formula><formula xml:id="formula_15">)</formula><p>From ( <ref type="formula" target="#formula_14">8</ref>), we can derive the probability that the network is assigned to a visible vector v as follows:</p><formula xml:id="formula_16">p(v) = ∑ h e -E(v,h) ∑ v,h e -E(v,h) . (<label>9</label></formula><formula xml:id="formula_17">)</formula><p>From the probability p(v), we can derive the learning update rule for performing stochastic steepest descent in the log probability of the training data as follows:</p><formula xml:id="formula_18">∂ log p(v) ∂w ij = ⟨ 1 σ i v i h j ⟩ data - ⟨ 1 σ i v i h j ⟩ model , ∆w ij = ϵ ( ⟨ 1 σ i v i h j ⟩ data - ⟨ 1 σ i v i h j ⟩ model ) , (<label>10</label></formula><formula xml:id="formula_19">)</formula><p>where ϵ is the learning rate and ⟨•⟩ is used to denote the expectation under a distribution specified by the subscript that follows <ref type="bibr" target="#b20">[22]</ref>.</p><p>Getting an unbiased sample of ⟨v i h j ⟩ model is difficult because there is no connection between hidden units and between visible units in a GRBM. Therefore, sampling methods can be applied to address this problem. In particular, we can start at any random state of the visible units and perform Gibbs sampling alternately. Each iteration of alternating Gibbs sampling involves updating all the hidden units parallelly using <ref type="bibr" target="#b10">(11)</ref> followed by updating all visible units parallelly using <ref type="bibr" target="#b11">(12)</ref>.</p><formula xml:id="formula_20">p(h j = 1|v) = sigm ( b j + ∑ i w ij v i σ i ) , (<label>11</label></formula><formula xml:id="formula_21">)</formula><formula xml:id="formula_22">p(v i |h) = N (v i |a i + ∑ j h j w ij , σ 2 i ),<label>(12)</label></formula><p>where sigm(x) = 1/(1 + exp(-x)) is the sigmoid function and N (•|µ, σ 2 ) denotes a Gaussian probability density function with mean µ and standard deviation σ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Deep Learning</head><p>Step: This step includes a series of learning processes which are performed in sequence to adjust weights of the neural network. Each learning process is performed between two successive layers in the hidden layers through a Restricted Boltzmann Machine (RBM). The RBM is a particular type of Markov random field. It has a twolayer architecture in which the visible binary stochastic units v ∈ {0, 1} D are connected to the hidden binary stochastic units h ∈ {0, 1} F . Here, D and F are the numbers of visible and hidden units, respectively. Then, the energy of state {v, h} can be calculated by <ref type="bibr" target="#b20">[22]</ref>: <ref type="bibr" target="#b12">(13)</ref> where parameters w ij , a i , and b j are defined similarly as in <ref type="bibr" target="#b6">(7)</ref>.</p><formula xml:id="formula_23">E(v, h) = - D ∑ i=1 F ∑ j=1 w ij v i h j - D ∑ i=1 a i v i - F ∑ j=1 b j h j</formula><p>The conditional probability of a single variable being one (e.g., p(h j = 1|v)) can be interpreted as the firing rate of a neuron with the sigmoid activation function as follows <ref type="bibr" target="#b20">[22]</ref>:</p><formula xml:id="formula_24">p(h j = 1|v) = sigm( D ∑ i=1 w ij v i + b j ),<label>(14)</label></formula><formula xml:id="formula_25">p(v i = 1|h) = sigm( F ∑ j=1 w ij h j + a i ). (<label>15</label></formula><formula xml:id="formula_26">)</formula><p>Similar to the pre-learning step, we can derive the learning update rule for the weights of the RBM as follows:</p><formula xml:id="formula_27">∆w ij = ϵ(⟨v i h j ⟩ data -⟨v i h j ⟩ model ), (<label>16</label></formula><formula xml:id="formula_28">)</formula><p>where ϵ is the learning rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) Softmax Regression</head><p>Step: The output of the last hidden layer, i.e., x, will be used as the input of the softmax regression (at the output layer) to classify the packet. A packet can be classified into M = (K + 1) classes, where K denotes all types of attacks. Mathematically, the probability that an output prediction Y is class i, is determined by:</p><formula xml:id="formula_29">p(Y = i|x, W, b) = sof tmax i (Wx + b) = e Wix+bi ∑ j e Wj x+bj , (<label>17</label></formula><formula xml:id="formula_30">)</formula><p>where W is a weight matrix between the last hidden layer and the output layer, and b is a bias vector. Then, the model's prediction y pd is the class whose probability is maximal, specifically:</p><formula xml:id="formula_31">y pd = arg max i [ p(Y = i|x, W, b) ] , ∀i ∈ {1, 2, . . . , M }. (<label>18</label></formula><formula xml:id="formula_32">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Offline Deep Training and Online Cyberattack Detection</head><p>The deep training consists of two phases, i.e., pre-training phase and fine-tuning phase.</p><p>• Pre-training: This phase requires only unlabeled data which is cheap and easy to collect from the Internet for training. In <ref type="bibr" target="#b16">[18]</ref>, the authors introduced an efficient way to learn a complicated model by using a set of simple sub-models which are learned sequentially. The greedy layer-wise learning algorithm allows each sub-model in the sequence to have a different representation of the data. The sub-model performs a non-linear transformation on its input vectors to produce output vectors that will be used as inputs of the next sub-model in the sequence. The principle of greedy layer-wise unsupervised training for each layer can be applied with RBMs as the building blocks for each layer <ref type="bibr" target="#b16">[18]</ref>, <ref type="bibr" target="#b17">[19]</ref>, <ref type="bibr" target="#b18">[20]</ref>. Our training process is executed through Gibbs sampling using CD as the approximation to the gradient <ref type="bibr" target="#b19">[21]</ref>. • Fine-tuning: We use the available set of labeled data for fine-tuning. After pre-training phase, we have a sensible set of weights for one layer at a time. Thus, bottom-up back-propagation can be used to fine-tune the model for better discrimination. After the offline deep training is completed, we will obtain a deep learning model with trained weights. This learning model will be then implemented on the attack detection module to detect malicious packets in an online fashion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. DATASET COLLECTION AND EVALUATION METHODS</head><p>In this section, we give a brief overview of common cyberattacks in MCC, three real datasets are used in our experiments. We then present the methods to evaluate the experimental results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Dataset Collection</head><p>To verify the accuracy of the deep-learning cyber attack detection, we use three empirical public datasets.</p><p>1) KDDcup 1999 Dataset: The KDDcup 1999 dataset [16] is widely used as a benchmark for the intrusion detection network model. Each record in the dataset contains 41 features and is labeled as either normal or a specific type of attack. The training dataset contains 22 types of attacks, while testing dataset contains additional 17 types.</p><p>2) NSL-KDD Dataset: The NSL-KDD Dataset was presented in <ref type="bibr" target="#b15">[17]</ref> to solve some inherent problems of the KDDCup 1999 dataset such as the huge number of redundant records both in the training and testing dataset. Each traffic sample has 41 features. Attacks in the dataset are categorized into four categories: DoS, R2L, U2R, and Probe attacks. The training dataset includes 24 attack types, while the testing dataset contains 38 attack types.</p><p>3) UNSW-NB15 Dataset: This dataset has nine families of attacks, namely, Fuzzers, Analysis, Backdoors, DoS, Exploits, Generic, Reconnaissance, Shellcode and Worms. Argus and Bro-IDS network monitoring tools were used and 12 algorithms were developed to generate totally 49 features. The number of records in the training dataset is 175,340 records and that in testing dataset is 82,331 records from different types of attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Evaluation Methods</head><p>In this study, we use accuracy, precision, and recall which are typical parameters used in machine learning (deeplearning.net) as performance metrics to evaluate the deep-learning cyberattack detection model.</p><p>• Accuracy (ACC) indicates the ratio of correct detection over total traffic trace:</p><p>T P +T N T P +T N +F P +F N where T P , T N , F P , and F N stand for "true positive", "true negative", "false positive", and "false negative", respectively. Thus, the average prediction accuracy of M supported classes is defined by:</p><formula xml:id="formula_33">ACC = 1 M M ∑ i T P i + T N i T P i + T N i + F P i + F N i . (<label>19</label></formula><formula xml:id="formula_34">)</formula><p>• Precision (PPV) shows how many attacks predicted are actual attacks. P P V is defined as the ratio of the number of T P records over the number of T P and F P records.</p><formula xml:id="formula_35">P P V = T P T P + F P . (<label>20</label></formula><formula xml:id="formula_36">)</formula><p>• Recall (TPR) shows the percentage of attacks that are correctly predicted versus all attacks happened. T P R is defined as the ratio of number of T P records divided by the number of T P and F N records.</p><formula xml:id="formula_37">T P R = T P T P + F N .<label>(21)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. EXPERIMENTAL RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Visualizations of Datasets by PCA</head><p>Fig. <ref type="figure" target="#fig_2">3</ref> illustrates the visualization of three datasets using PCA with 3 most important features. After using PCA, the normal and malicious packets can be detected effectively with high accuracy. In particular, in Fig. <ref type="figure" target="#fig_2">3</ref>, normal packets are grouped together and separated from malicious packets. Thus, reducing dimensions in a high dimension dataset not only reduces the computational complexity, but also diminishes significant amount of noise in the dataset, thereby increasing the accuracy in predicting malicious packets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Performance Evaluation</head><p>Table I compares the performance of the deep learning approach with those of other machine learning algorithms, some of which include K-means, K-neighbors classifier, and the random forest classifier. We observe that the proposed deep learning approach always achieves the best performance in the terms of accuracy, precision, and recall (as defined in Section V-B), for the same datasets. In particular, the accuracy of the deep learning approach is 90.99%, 95.84%, and 97.11%, for NSL-KDD, UNSW-NB15, and KDDcup 1999 datasets, respectively. Furthermore, both precision and recall parameters achieved from the proposed approach are also much higher than those of other machine learning algorithms. In summary, there are two important observations from our proposed deep learning model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. SUMMARY</head><p>In this paper, we have introduced a deep learning approach to detect cyber threats in the mobile cloud environment. Through experimental results, we have demonstrated that our proposed learning model can achieve high accuracy in detecting cyber attacks, and outperform other existing machine learning methods. In addition, we have shown the stability, efficiency, flexibility, and robustness of our deep learning model which can be applied to many mobile cloud applications. For the future work, we will implement our proposed deep learning model on the real devices and evaluate the accuracy of the model on the real time basis. Furthermore, the energy consumption and detection time of the deep learning model will be evaluated and compared with other methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. System model for cyberattack detection in mobile cloud computing system.</figDesc><graphic coords="2,90.00,54.01,431.44,164.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Deep learning model.</figDesc><graphic coords="3,58.93,54.14,229.75,339.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Visualizations of three datasets: (a) NSL-KDD, (b) UNSW-NB15, and (c) KDDcup 1999, by using PCA with 3 most important features. Grey circles represent normal packets, while circles with other colors than grey express the different types of attacks.</figDesc><graphic coords="5,230.40,60.72,151.07,138.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>•</head><label></label><figDesc>Stability: Deep learning algorithm achieves high accuracy (up to 95.84%) under different settings. • Robustness and flexibility: Deep learning model can detect a variety of attacks on different datasets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I THE</head><label>I</label><figDesc>COMPARISON BETWEEN OUR PROPOSE MODEL WITH OTHER MACHINE LEARNING ALGORITHMS ON THREE DATASETS.</figDesc><table><row><cell></cell><cell></cell><cell>NSL-KDD</cell><cell></cell><cell cols="3">UNSW-NB15</cell><cell cols="3">KDDcup 1999</cell></row><row><cell></cell><cell>ACC</cell><cell>PPV</cell><cell>TPR</cell><cell>ACC</cell><cell>PPV</cell><cell>TPR</cell><cell>ACC</cell><cell>PPV</cell><cell>TPR</cell></row><row><cell>Decision Tree</cell><cell>87.91</cell><cell cols="2">63.62 68.50</cell><cell>93.78</cell><cell>76.42</cell><cell>68.92</cell><cell>97.01</cell><cell>94.14</cell><cell>92.52</cell></row><row><cell>K-means</cell><cell>82.78</cell><cell cols="2">84.96 56.95</cell><cell>87.05</cell><cell>74.01</cell><cell>35.23</cell><cell>86.19</cell><cell>89.16</cell><cell>65.47</cell></row><row><cell>K Neighbours Classifier</cell><cell>88.56</cell><cell cols="2">77.19 71.39</cell><cell>94.31</cell><cell>77.42</cell><cell>71.52</cell><cell>96.85</cell><cell>94.12</cell><cell>92.13</cell></row><row><cell>Logistic Regression</cell><cell>89.52</cell><cell cols="2">62.04 73.79</cell><cell>92.52</cell><cell>71.05</cell><cell>62.61</cell><cell>96.2</cell><cell>86.29</cell><cell>90.69</cell></row><row><cell>Multilayer Perceptron (MLP)</cell><cell>87.91</cell><cell>63.62</cell><cell>68.5</cell><cell>90.16</cell><cell>76.72</cell><cell>75.39</cell><cell>96.77</cell><cell>90.87</cell><cell>91.91</cell></row><row><cell>Gaussian Naive Bayes</cell><cell>88.33</cell><cell cols="2">73.98 41.67</cell><cell>88.34</cell><cell>73.98</cell><cell>41.67</cell><cell>89.29</cell><cell>83.91</cell><cell>73.22</cell></row><row><cell>Multinomial Naive Bayes</cell><cell>83.96</cell><cell cols="2">65.52 59.90</cell><cell>90.97</cell><cell>55.40</cell><cell>54.86</cell><cell>89.66</cell><cell>83.65</cell><cell>74.16</cell></row><row><cell>Bernoulli Naive Bayes</cell><cell>74.60</cell><cell cols="2">87.47 36.49</cell><cell>91.31</cell><cell>55.07</cell><cell>56.52</cell><cell>90.94</cell><cell>89.54</cell><cell>77.35</cell></row><row><cell>Random Forest Classifier</cell><cell>88.39</cell><cell cols="2">71.21 70.99</cell><cell>94.44</cell><cell>80.29</cell><cell>72.21</cell><cell>97.02</cell><cell>94.42</cell><cell>92.56</cell></row><row><cell>Support Vector Machine (SVM)</cell><cell>88.32</cell><cell cols="2">64.70 70.80</cell><cell>93.38</cell><cell>76.91</cell><cell>66.90</cell><cell>96.74</cell><cell>91.59</cell><cell>91.86</cell></row><row><cell>Our Proposed Deep Learning Approach</cell><cell>90.99</cell><cell cols="2">81.95 77.48</cell><cell>95.84</cell><cell>83.40</cell><cell>79.19</cell><cell>97.11</cell><cell>94.43</cell><cell>92.77</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2018" xml:id="foot_0"><p>IEEE Wireless Communications and Networking Conference (WCNC)</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>This work was supported in part by MOE Tier 1 under Grant 2017-T1-002-007, MoE Tier 1 (RG33/16), MOE Tier 2 under Grant MOE2014-T2-2-015 ARC4/15, and NRF2015-NRF-ISF001-2277.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A survey of mobile cloud computing: Architecture, applications, and approaches</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">T</forename><surname>Hoang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Niyato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Communications and Mobile Computing</title>
		<imprint>
			<date type="published" when="2013-12">Dec. 2013</date>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="1587" to="1611" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Roundup of cloud computing forecasts and market estimates</title>
		<author>
			<persName><forename type="first">Louis</forename><surname>Columbus</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<pubPlace>Forbes magazine</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">2015 information security breaches survey</title>
		<imprint/>
		<respStmt>
			<orgName>PWC</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Entropy-based denial-ofservice attack detection in cloud data center</title>
		<author>
			<persName><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Concurrency and Computation: Practice and Experience</title>
		<imprint>
			<date type="published" when="2015-12">Dec. 2015</date>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="5623" to="5639" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Detecting flooding based DoS attack in cloud computing environment using covariance matrix approach</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">N</forename><surname>Ismail</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Aborujilah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Musa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shahzad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE ICUIMC</title>
		<imprint>
			<date type="published" when="2013-01">Jan. 2013</date>
			<pubPlace>Kota Kinabalu, Malaysia</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Efficient DDoS TCP Flood Attack Detection and Prevention System in a Cloud Environment</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Diykh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="6036" to="6048" />
			<date type="published" when="2017-04">Apr. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive detection technique for cachebased side channel attack using Bloom Filter for secure cloud</title>
		<author>
			<persName><forename type="first">M</forename><surname>Chouhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hasbullah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Computer and Information Sciences</title>
		<imprint>
			<date type="published" when="2016-08">Aug. 2016</date>
			<biblScope unit="page" from="293" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Detection method of SQL injection attack in cloud computing environment</title>
		<author>
			<persName><forename type="first">K</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Advanced Information Management, Communicates, Electronic and Automation Control Conference</title>
		<imprint>
			<date type="published" when="2016-10">Oct 2016</date>
			<biblScope unit="page" from="487" to="493" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Intrusion detection in cloud computing based attacks patterns and risk assessment</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">C</forename><surname>Youssef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Elmehdi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Boubker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Systems of Collaboration</title>
		<imprint>
			<date type="published" when="2016-11">Nov. 2016</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A game theoretic method for VM-to-hypervisor attacks detection in cloud environment</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nezarat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing</title>
		<meeting>the 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing</meeting>
		<imprint>
			<date type="published" when="2017-05">May 2017</date>
			<biblScope unit="page" from="1127" to="1132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A survey on attack detection on cloud using supervised learning techniques</title>
		<author>
			<persName><forename type="first">G</forename><surname>Nenvani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Colossal Data Analysis and Networking</title>
		<imprint>
			<date type="published" when="2016-03">Mar. 2016</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Deep learning</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">521</biblScope>
			<biblScope unit="issue">7553</biblScope>
			<biblScope unit="page" from="436" to="444" />
			<date type="published" when="2015-05">May 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Simple Detection Method for DoS Attacks based on IP Packets Entropy values</title>
		<author>
			<persName><forename type="first">K</forename><surname>Kurihara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Katagishi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Asia Joint Conference on Information Security</title>
		<meeting><address><addrLine>Wuhan, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-09">Sept. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Principal Component Analysis and Factor Analysis, Principal component analysis</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">T</forename><surname>Jolliffe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A tutorial on principal component analysis</title>
		<author>
			<persName><forename type="first">J</forename><surname>Shlens</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1404.1100</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A detailed analysis of the KDD CUP 99 data set</title>
		<author>
			<persName><forename type="first">M</forename><surname>Tavallaee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bagheri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Ghorbani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Computational Intelligence for Security and Defense Applications</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast learning algorithm for deep belief nets</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osindero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y-W</forename><surname>Teh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1527" to="1554" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Reducing the dimensionality of data with neural networks</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">313</biblScope>
			<biblScope unit="issue">5786</biblScope>
			<biblScope unit="page" from="504" to="507" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Greedy layerwise training of deep networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lamblin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Popovici</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Larochelle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="153" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Training products of experts by minimizing contrastive divergence</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1771" to="1800" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A practical guide to training restricted Boltzmann machines</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Momentum</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">926</biblScope>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Evolving neural network intrusion detection system for MCPS</title>
		<author>
			<persName><forename type="first">N</forename><surname>Mowla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Doh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chae</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Advanced Communication Technology</title>
		<imprint>
			<date type="published" when="2017-02">Feb. 2017</date>
			<biblScope unit="page" from="183" to="187" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
