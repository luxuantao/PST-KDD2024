<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Kaixing</forename><surname>Huang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Qi</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Chunjie</forename><surname>Zhou</surname></persName>
							<email>cjiezhou@hust.edu.cn</email>
						</author>
						<author>
							<persName><roleName>Senior Member, IEEE</roleName><forename type="first">Naixue</forename><surname>Xiong</surname></persName>
							<email>neal.xiong@swosu.edu</email>
						</author>
						<author>
							<persName><forename type="first">Yuanqing</forename><surname>Qin</surname></persName>
							<email>yuan_qing@163.com</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Chunjie Zhou</orgName>
								<address>
									<settlement>Yuanqing Qin</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Automation</orgName>
								<orgName type="laboratory">Key Laboratory of Ministry of Education for Image Processing and Intelligent Control</orgName>
								<orgName type="institution">Huazhong University of Science and Technology</orgName>
								<address>
									<postCode>430074</postCode>
									<settlement>Wuhan</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Southwestern Oklahoma State University</orgName>
								<address>
									<postCode>73096</postCode>
									<settlement>Weatherford</settlement>
									<region>OK</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">55C0F6295FCF8D02AD8FDAD6A9B0944D</idno>
					<idno type="DOI">10.1109/TSMC.2017.2698457</idno>
					<note type="submission">received September 19, 2016; revised February 1, 2017; accepted April 18, 2017.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:13+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Active learning</term>
					<term>big data</term>
					<term>intrusion detection</term>
					<term>self-organizing map (SOM)</term>
					<term>visual sensor networks (VSNs)</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Visual sensor networks (VSNs) are highly vulnerable to attacks due to their open deployment in possibly unattended environments. To improve the network security of VSNs, an intrusion detection system (IDS) is an effective countermeasure. However, as visual sensors can produce big and dynamic video data, it is a tough task to rapidly and effectively detect attacks in VSNs. Moreover, attack samples in VSNs are generally too rare for IDSs to fully understand the behaviors of attacks. Facing these difficulties, in this paper, we propose an efficient intrusion detection approach for VSNs, which is based on traffic pattern learning. In the proposed approach, a traffic model is developed to describe the dynamic characteristics of network traffic in VSNs. Based on this model, the optimal feature set for traffic pattern learning can be extracted. Then a hierarchical self-organizing map (HSOM) is employed to learn traffic patterns and detect intrusions. Furthermore, an active learning strategy is devised to accelerate the training process of the HSOM and better learn the patterns of attacks. Experimental results show that the proposed approach has high detection accuracy and good real-time performance.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>V ISUAL sensor networks (VSNs) are networks that consist of a large number of sensor nodes which have imaging capabilities <ref type="bibr" target="#b0">[1]</ref>. With rapid improvements in CMOS sensors, embedded computing, and video coding techniques, VSNs have been widely used in traffic enforcement, factory monitoring, habitat sensing, and many other surveillance applications. As the visual sensors of VSNs are usually deployed in unprotected or even hostile environments, security is an issue of great concern.</p><p>Currently, research efforts in securing VSNs typically focus on encryption, watermarking, and secure protocols <ref type="bibr" target="#b1">[2]</ref>. But these techniques lack the intelligence of observing and recognizing attacks possibly present in the system. So intrusion detection systems (IDSs) are important for VSNs to maintain proper network security. Specifically, machine learning techniques have been widely applied to the problem of intrusion detection in computer networks by learning what constitutes the normal system behavior, where all unidentified behaviors are considered as potential attacks <ref type="bibr" target="#b2">[3]</ref>. However, machine learning-based IDSs face several obstacles when they are applied to VSNs.</p><p>1) While traditional visual sensors typically collect data periodically, many newly smart cameras support eventdriven delivery <ref type="bibr" target="#b3">[4]</ref>. These two kinds of heterogeneous working manners together will generate bursty and nonstationary network traffic, which poses a big challenge to learn regular traffic patterns. 2) VSN-based networks are expected to be deployed on large scales <ref type="bibr" target="#b4">[5]</ref>, so the large number of visual sensors will produce bulky data at high speed. The big sensor data in VSNs make it a tough task to rapidly train IDS classifiers and detect attacks.</p><p>3) It is impractical to acquire enough attack samples in VSNs to sufficiently train a machine learning-based intrusion detection algorithm. If this imbalance problem was not properly addressed, the class boundary learned by standard machine learning systems would be skewed toward the majority class, thereby leading to an excessively low detection rate. As VSNs are automated systems that will seldom or never be changed once deployed, the traffic pattern is relatively stable in some sense, and attacks will somehow induce anomalies into network traffic <ref type="bibr" target="#b5">[6]</ref>. Based on this rationale, in this paper, we propose a novel intrusion detection approach for VSNs, which employs machine learning techniques to learn traffic patterns and detect intrusions. First, we develop a traffic model to describe the dynamic characteristics of network traffic in VSNs. By means of this model, we can extract the most valuable features of traffic patterns, which will be fed into a hierarchical self-organizing map (HSOM) neural network for pattern learning and intrusion detection. Considering that the training data acquired from VSNs is big and imbalanced, an active learning strategy is designed to solve the class imbalance problem and accelerate the training speed.</p><p>2168-2216 c 2017 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.</p><p>See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. Finally, we conduct several experiments in Omnet++ to verify the effectiveness of our approach.</p><p>The remainder of this paper is organized as follows. In Section II, we begin with a brief introduction of VSN structure and intrusion detection in VSNs. Section III describes the details of the proposed intrusion detection approach, as well as the learning method. Then, the experiments used to evaluate the performance of the proposed approach are described in Section IV. Finally, we conclude this paper with future work in SectionV.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND AND RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Architecture of VSNs</head><p>Akyildiz et al. <ref type="bibr" target="#b6">[7]</ref> classified the architecture of VSNs into two groups: 1) single-tier and 2) multitier architectures. Singletier architectures are based on flat topologies, while multitier ones have hierarchical structures. In a multitier VSN, traffic accumulates sharply on its routing path to the cluster head (CH), which poses a high possibility of sensor fault for the nodes close to the CH. So most VSNs are currently designed with a single-tier architecture <ref type="bibr" target="#b7">[8]</ref>. Therefore, referring to <ref type="bibr" target="#b8">[9]</ref> we present a single-tier network architecture for VSNs, which is shown in Fig. <ref type="figure">1</ref>.</p><p>According to Fig. <ref type="figure">1</ref>, a VSN is composed of many clusters and a base station, where each cluster has a CH which is wirelessly connected with many one-hop visual sensors. Every visual sensor may have one auxiliary sensor node (scalar or visual), and the base station is responsible for local storage of the collected video data or uploading it to the Cloud for user access.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Intrusion Detection for VSNs</head><p>VSNs belong to the category of wireless sensor networks (WSNs), for which a large number of intrusion detection solutions have been proposed <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>. However, VSNs have some features quite different from common WSNs.</p><p>1) The amount of data obtained from visual sensors is much larger than that of scalar values read from WSN sensors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) While WSNs typically gather data periodically, many</head><p>VSNs support event-driven transmission which leads to bursty and dynamic varying network traffic.</p><p>3) The network topology of VSNs is usually simpler than that of WSNs because of the bandwidth limit. Therefore, the IDSs designed for WSNs are not directly applicable to VSNs. So far, a few papers have discussed VSN-specific IDS issues. Czarlinska and Kundur <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref> investigated the intrusion detection problem for event-driven VSNs. Czarlinska et al. <ref type="bibr" target="#b13">[14]</ref> used Neyman-Pearson detector to decide whether VSNs were under attack. Lin et al. <ref type="bibr" target="#b14">[15]</ref> proposed a trust-based intrusion detection model for VSNs. Mali and Misra <ref type="bibr" target="#b15">[16]</ref> made use of the received signal strength values received at the receiving nodes to detect attacks in VSNs. All these IDSs proposed for VSNs are summarized in Table <ref type="table" target="#tab_0">I</ref>, showing their detection techniques, advantages, and limitations. According to Table <ref type="table" target="#tab_0">I</ref>, we know that the existing studies have proposed different methods to detect only some kinds of intrusions in VSNs. Furthermore, they did not pay enough attention to the unique features of VSNs (big sensor data and dynamic network traffic). So, in this paper, we intend to use machine learning techniques to rapidly and efficiently detect various kinds of attacks for VSNs which have big and dynamic traffic data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Machine Learning-Based Intrusion Detection</head><p>Over the past two decades, many machine learning techniques have been utilized for intrusion detection in computer networks <ref type="bibr" target="#b2">[3]</ref>, such as clustering, neural network, and support vector machines (SVMs). Aiming at constructing an IDS with low computational complexity and high detection accuracy, we adopt the HSOM neural network in our approach. HSOM is a hierarchical version of self-organizing map (SOM), an unsupervised learning method. The motivations of applying HSOM to intrusion detection in VSNs include the following.</p><p>1) It has been proved that HSOM can perform well in intrusion detection problems <ref type="bibr" target="#b16">[17]</ref>. 2) HSOM can well explore the topological relationships between input features by utilizing competitive learning <ref type="bibr" target="#b17">[18]</ref>. 3) An HSOM-based IDS can detect intrusions faster because the SOMs in the same level can be trained and run in parallel. Surveillance video is generally regarded as the biggest big data. Therefore, it is a great challenge to rapidly train a machine learning-based IDS for VSNs which have massive video data. Facing this difficulty, we suggest that an appropriate traffic model could significantly accelerate the learning process because traffic models are able to describe the dynamic characteristics of network traffic and the feature sets extracted by means of traffic models could have a much smaller size <ref type="bibr" target="#b18">[19]</ref>. When it comes to the problem of intrusion detection in VSNs, the traffic data is not only huge in size but also imbalanced. Therefore, we try to use active learning <ref type="bibr" target="#b19">[20]</ref> to deal with these problems. Active learning makes the learning process faster and more effective by querying training sets, and the goal of querying is to select as representative as possible examples and achieve better generalization ability with fewer training samples. Thus, active learning can accelerate the training speed of IDS classifier by providing much fewer but more balanced and useful training data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. INTRUSION DETECTION USING TRAFFIC PATTERN LEARNING</head><p>A VSN usually has many clusters and each cluster can have a lot of nodes <ref type="bibr" target="#b4">[5]</ref>. Thus, it is complex and time-consuming to detect attacks in such large-scale VSNs. With consideration of the network architecture shown in Fig. <ref type="figure">1</ref>, a divide-andconquer strategy might be quite favorable for efficient intrusion detection. In other words, IDSs can be independently deployed in each cluster <ref type="bibr" target="#b20">[21]</ref>, which might significantly increase the real-time performance of IDSs.</p><p>In this section, we introduce our intrusion detection approach for cluster-based VSNs. After describing how the features for traffic pattern learning are extracted using the CNB model, we explain the details of the HSOM-based intrusion detection algorithm, as well as the learning strategy for training HSOM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Traffic Modeling</head><p>Inspired by the N-Burst model <ref type="bibr" target="#b21">[22]</ref> which is commonly used to evaluate the burstiness of network traffic in computer networks, we try to design a modified N-Burst model for VSNs. N-Burst model describes an arrival process which is a superposition of traffic streams from N independent and statistically identical ON/OFF sources, as illustrated in Fig. <ref type="figure" target="#fig_0">2</ref>. Each ON/OFF source consists of an ON period, namely 1 burst, and an OFF period. In the case of VSNs, when there is no target in the surveillance area, visual sensors do not transmit data (event-driven transmission mode) or transmit data with a low and nearly constant bit rate (continuous transmission mode) to the CH. This can be regarded as the OFF period. When a target enters the view of a camera, this camera will transmit video to the CH with a higher bit rate <ref type="bibr" target="#b22">[23]</ref>, which corresponds to the ON period.</p><p>In order to understand the behavior of the N-Burst model, consider the simplest case when N = 1, then we use the following terminologies to present the model.</p><p>1) T ON : Duration of an ON period.</p><p>2) T OFF : Duration of an OFF period.</p><p>3) λ ON : Mean packet transmission rate during an ON period. 4) λ OFF : Mean packet transmission rate during an OFF period. 5) ϑ ON : Mean packet interarrival time during an ON period. 6) ϑ OFF : Mean packet interarrival time during an OFF period. 7) κ: Mean arrival rate (including ON and OFF periods). When packets come from N sensors, the overall packet transmission rate τ is the sum of individual transmission rate, i.e., τ = N i=1 κ i , where κ i indicates the mean packet arrival rate of the ith node.</p><p>As explained above, N-Burst model assumes that the N ON/OFF sources are independent. However, the visual sensors in VSNs are generally not totally independent of each other. When a target is moving in the surveillance area of a VSN, multiple sensors may detect this event and a bulk of data will be transmitted to the CH in a short period of time. Generally, the sensor nodes will emit data packets in accordance with a relatively fixed sequence, and the sequence is determined by the available pathway, obstruct and shortest route in the scene being monitored. In other words, all the sensor nodes start their ON periods one after another and there are temporal drifts between the ON period start time of each node, denoted as ( t 1 , t 2 , . . . , t N ). This is the spatial-temporal correlation between VSN sensors nodes. On the basis of this kind of correlation, we propose a correlated N-Burst (CNB) model, as shown in Fig. <ref type="figure">3</ref>. This model is a variant of the N-Burst model while the difference is that the N nodes are not independent and each node is a derivation from an ON/OFF source with a time delay t i .</p><p>In a VSN cluster which has many modes, it is a challenging task to model the transition time of the ON periods between these nodes <ref type="bibr" target="#b23">[24]</ref>. As an alternative, we use n-gram method <ref type="bibr" target="#b24">[25]</ref>, which can model the transition sequences of the ON periods, to describe the spatial-temporal correlation between these nodes. Each n-gram is comprised of a predefined number (i.e., n) of successive sensor IDs in our case. All the possible n-grams can be learned to form a knowledge base, and any n-gram that cannot be recognized will be classified as an anomaly. In order to reduce the size of search space, we simply adopt a 2-gram model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Feature Extraction</head><p>According to the CNB model, traffic features can be categorized into two groups: 1) node-level features and 2) network-level features. The node-level features are used to describe the activities of specific sensor nodes, while the network-level features present the overall network condition of the whole system. Table <ref type="table" target="#tab_0">II</ref> shows all the traffic features extracted from the CNB model.</p><p>It is noted that the traffic features that have scalar values can be directly fed into SOM, whereas the 2-gram sequences must be rearranged before they can be recognized by SOM. Given a CH communicating with N nodes, we can transform the 2-gram sequences collected in a time period to a frequency vector. The frequency vector is created by computing the occurrence probability of each 2-gram sequence. The length of the frequency vector is N 2 , because every 2-gram sequence can be represented by a numerical value within the interval [1, N 2 ]. For example, suppose that a sequence (2, 3) which corresponds to the number ((2 -1) × N + 3) appeared six times in the total 40 2-gram sequences, then the entry in location ((2-1)×N +3) in the frequency vector has the value 6/40. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. HSOM-Based Intrusion Detection Algorithm</head><p>The architecture of an HSOM used for intrusion detection is designed to correlate relevant features in the lower layers and integrate the low-layer SOMs into a single final view of the whole system. Specifically, a two-layer HSOM is employed here. Fig. <ref type="figure" target="#fig_1">4</ref> shows the proposed HSOM architecture. In layer 1, the number of SOMs is equal to the number of the nodes connected with the CH; the node-level traffic features of each node are fed into each SOM. The outputs of the layer-1 SOMs, coupled with the network-level traffic features, are the inputs of the only one SOM in layer 2.</p><p>In addition to providing data to the layer-2 SOM to evaluate the overall security status, the SOMs in layer 1 can also be used to judge whether a node is under attack. Moreover, the layer-1 SOMs can run in parallel. Therefore, by constructing an HSOM which imitates the architecture of VSNs, the proposed IDS cannot only rapidly carry out the intrusion detection tasks with a comprehensive description of system operating status, but also help to find out where attacks come from.</p><p>To acquire the network parameters of the HSOM, training should be conducted. As an HSOM is composed of multiple SOMs, the training process of HSOM is divided into many sub SOM training processes. In this paper, a particular kind of SOM which has a feed-forward structure with a single output layer is adopted. The output layer of the SOM has many neurons arranged in a 2-D hexagonal map and each neuron has an associated weight vector which has the same dimensionality as the input vectors. The learning process of an SOM involves five steps.</p><p>1) Given that an SOM has J neurons and each input vector has I dimensions, initialize the network weight W = {w j , j = 1, 2, . . . , J} with random values, where w j is a I-dimension vector. 2) Pick an input vector, say x, from the training set.</p><p>3) Compute the Euclidean distance between x and each neuron in the SOM map. The neuron that has the smallest distance to x is called the best matching unit (BMU). 4) Use a neighborhood function (typically a Gaussian function) to update the weight of the BMU and the points in its near vicinity. The update formula is</p><formula xml:id="formula_0">w j (s + 1) = w j (s) + (k, j, s)β(s) x -w j (s) (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>where s is the epoch index, k indicates the BMU, (k, j, s) is a neighborhood function which calculates the distance between the neuron j and the neuron k in epoch s, β(s) is the learning rate, and xw j (s) is the Euclidean distance between x and neuron j. 5) Repeat from step 2 until the training times reach a previously set value. After training SOM with normal samples and attack samples, the input vectors that are close with each other are projected to a same cluster in the output layer, then all the BMUs for the normal samples can be acquired and we denote the set of these winning neurons as W win = {w p win , p = 1, 2, . . . , P}, where P &lt; J. Then, for each w p win ∈ W win , we calculate the mean and standard deviation of the distances between w p win and its corresponding input vectors, denoted as μ p win and σ p win , respectively. After the layer-1 SOMs have been trained, they need to provide a set of vectors which will be the inputs to the high layer. This can be achieved by calculating the distances between an input vector and every neuron in an SOM map in layer 1 <ref type="bibr" target="#b25">[26]</ref>. However, this method will drastically increase the dimensionality of the input data for the layer-2 SOM. So we adopt another method where only one output is produced by each layer-1 SOM for each input, and the output vector is constructed as follows. First, for a trained SOM in layer 1, we figure out the cluster center of all the neurons associated with normal samples, denoted as w C , using the following equation:</p><formula xml:id="formula_2">w C = P p=1 w p α p (2)</formula><p>wherein α p is the hit probability of neuron w p , i.e., the proportion of the number of the associated input vectors the neuron w p has over the total number of all the normal samples. Then, for an input vector x, the output vector x o is given by</p><formula xml:id="formula_3">x o = x -w C . (<label>3</label></formula><formula xml:id="formula_4">)</formula><p>In the intrusion detection process, by extracting features from network traffic in a short period of time, an input vector x is fed into the HSOM for pattern classification. Referring to <ref type="bibr" target="#b26">[27]</ref>, we present the intrusion detection algorithm for each SOM, as shown in Algorithm 1. In the following pseudo code, w j represents the weight of the jth neuron in a trained SOM, and γ is an adjustable threshold factor that penalizes the false Algorithm 1 Intrusion Detection Algorithm Input: an input vector x Output: normal or abnormal 1: for all w ∈ {w j , j = 1, 2, . . . , J} do 2:</p><p>Calculate its distance to w j by d j = ||xw j || 3: end for 4: Find the BMU for x, whose weight is w b , then the distance of x to its BMU is d b 5: if w b ∈ W win then 6:</p><formula xml:id="formula_5">if |d b -μ b win | &lt; γ σ b win then 7:</formula><p>x is normal 8:</p><formula xml:id="formula_6">else 9:</formula><p>x is abnormal x is abnormal 13: end if alarm rate. As shown in Algorithm 1, we first find the BMU for an input vector x, and then judge whether the BMU belongs to the set of the winning neurons for normal samples. If this criteria is met, then a threshold value is used to further identify whether the input vector is normal or not; if this criteria is not met, then x is immediately classified as abnormal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Imbalanced Big Data Learning</head><p>Recently, active learning has been used for training SVMs on imbalanced dataset by selecting the support vectors near the hyperplane with a higher probability. This kind of training strategy is rapid and effective for training SVMs because the support vectors are more informative than others and they only account for a small portion of training set. However, as SOM is a clustering method that tries to fit the topology and distribution of input vectors, if we take too many vectors near the class borders to train SOM, the cluster centers in the output layer will be biased toward the class borders, which makes these clusters not easily distinguishable. Moreover, in the case of intrusion detection, misclassifying an attack leads to more serious consequences than misclassifying a normal event <ref type="bibr" target="#b19">[20]</ref>, so the cluster associated with normal behaviors should be compact enough for not incurring a high false negative rate. As a result, when actively selecting instances from imbalanced datasets for training SOMs, the samples from anomalous data should be extensively considered, whereas the samples from normal data should be more concentrated on their cluster center.</p><p>Based on the analysis above, we propose an active subset selection (ASS) method, which does not necessitate a full search through the entire training set but only samples a small number of representative data for training SOM. First, as the attack samples in VSNs are too rare to be discarded, we oversample them by means of the SMOTE technique <ref type="bibr" target="#b27">[28]</ref>. The principle of SMOTE method is to generate new observations in the minority class by interpolating the existing instances. On the other hand, the normal instances are under-sampled from the training set by selecting the instances that are near the cluster center of normal instances with a higher probability. The detailed steps of the ASS method are summarized in Algorithm 2. In the pseudo code of Algorithm end if 22: end for infinity. ceil(η √ Size N /Size A ) is the number of iterations for subset selection and η determines the size of the subset. α (0 &lt; α &lt; 50) indicates how compact the cluster associated with normal samples is in the output layer of SOM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXPERIMENT AND RESULT ANALYSIS</head><p>In this section, we use Omnet++ <ref type="bibr" target="#b28">[29]</ref> to simulate a VSN and evaluate the detection performance of our IDS with the generated traffic data. All the experiments that follows were run on a computer running Windows 10, with a 3.0 GHz CPU and 4 GB RAM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Simulation Setup</head><p>Here, we construct a hypothetical VSN scenario, as shown in Fig. <ref type="figure" target="#fig_2">5</ref>, which has 22 cameras monitoring a crossroads. This crossroads has four entry/exit points: A, B, C, and D. Assume that a target moves along the dashed line marked in Fig. <ref type="figure" target="#fig_2">5</ref>, then there exist 12 available routes for the target. When the target is within the sensing range of a camera, the camera will detect this event with probability 1 and transmit data to the CH. When there is no target in the surveillance area, cameras do not send any data.</p><p>Some other parameter values of the VSN are specified in Table <ref type="table" target="#tab_0">III</ref>. A Poisson process is used to describe the target arrival process <ref type="bibr" target="#b29">[30]</ref>. Subsequently, the mean of the Poisson distribution, i.e., 1/λ, indicates that the target is expected to appear λ times in a time unit.</p><p>To generate synthetic network traffic, Omnet++ is adopted to simulate the communication between the sensors and the CH. Pham and Makhoul <ref type="bibr" target="#b30">[31]</ref> proposed the WVSNMODEL,  A target chooses a path randomly and moves in the monitoring area with velocity V 5:</p><p>while The target is within the monitoring area do <ref type="bibr">6:</ref> for all q ∈ {1, 2, ..., N} do 7:</p><p>if The target is within the view of camera q then 8:</p><p>Send packets to the CH with rate r Set c to be a random value chosen from a Poisson distribution with mean 1/λ 13: t ← t + c 14: end while a simulation model of VSNs developed under Omnet++ simulator. WVSNMODEL is open-source and provides strong capability of building large-scale VSNs, so we build the VSN model of our simulation experiments on the basis of WVSNMODEL. Besides, we make the simulation realistic by taking into account the interference between the sensor nodes and the CH. The interference is modeled by a Gaussian noise added to the packet interarrival time and a packet loss ratio for the packets being transferred. The following algorithm is used to generate sample packet traffic. In Algorithm 3, t indicates the elapsed simulation time, q is the index for camera ID, and T s is the simulation time limit.</p><p>Apart from normal network traffic, anomalous traffic data is generated by performing some attacks to the VSN at runtime. Five common types of attacks defined in <ref type="bibr" target="#b31">[32]</ref> are considered here.</p><p>1) Jamming: Jamming attacks are realized by introducing end-to-end time delay and packet loss. In our simulations, packet delay is set as a Gaussian noise with mean 10 ms and standard deviation 5 ms; packet loss ratio is set to be 10 -2 . 2) Man-in-the-Middle Attack: Man-in-the-Middle (MITM) attack is a form of network attack in which an attacker relays and possibly alters the packet content between two parties. This type of attack is simulated by increasing transmission delay. The delayed time is modeled by a Gaussian noise with mean 20 ms and standard deviation 5 ms. 3) Denial of Service: A denial of service (DoS) attack is conducted by totally blocking a sensor node. 4) Node Replication Attack: To conduct this kind of attack, we add one sensor node into the network and make it behave just like a normal one. 5) Node Compromise Attack: A node compromise attacker can capture a node and extract useful information to carry out further damages. We only consider the situation, where a compromised node selectively sends packets at a probability of 0.95 every time it detects an event.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Configuration of HSOM</head><p>Before the IDS can be applied to the simulated VSN, we must carefully choose the parameters of HSOM, including the neuron number, the training iterations, the variance of the Gaussian neighborhood function, denoted as (s), and the learning rate β(s). These parameters are set as follows.</p><p>1) The number of neurons in each layer-1 SOM is chosen as the square root of the size of input vectors. The number of neurons in the layer-2 SOM is set to be a little larger for better discriminatory capability, whilst not incurring too much overhead <ref type="bibr" target="#b16">[17]</ref>. 2) Usually, the number of iterations is minimally set to be 500 times the number of neurons <ref type="bibr" target="#b17">[18]</ref>. 3) SOM training is done in two phases. The first phase is the ordering process while the second is the tuning phase <ref type="bibr" target="#b32">[33]</ref>. During the tuning phase, (s) is always set to L . And during the ordering phase, (s) decreases from H down to L in accordance with</p><formula xml:id="formula_7">(s) = L + ( H -L ) 1 - s S O (<label>4</label></formula><formula xml:id="formula_8">)</formula><p>where s is the training epoch index, H is set to 3, L is set to 1, and S O is the ordering phase steps which is usually set to 100 <ref type="bibr" target="#b32">[33]</ref>. 4) During the ordering phase, the learning rate is given by</p><formula xml:id="formula_9">β(s) = β L + (β H -β L ) s S O<label>(5)</label></formula><p>where β H is set to 0.9 and β L is set to 0.02. During the tuning phase, β(s) is given by</p><formula xml:id="formula_10">β(s) = β L S O s . (<label>6</label></formula><formula xml:id="formula_11">)</formula><p>Fig. <ref type="figure">6</ref>. Overall detection performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Detection Performance Evaluation</head><p>After sample traffic is generated, we try to evaluate the performance of the proposed IDS. In particular, we will evaluate the overall detection performance, detection rates for different types of attacks, the capability of detecting new attacks, and the real-time performance of the IDS. The evaluation criterion used to model the detection performance of the IDS include: true positive rate (TPR), false positive rate (FPR), and overall accuracy (OA). TPR is defined as the ratio of the number of detected attacks to the total number of attacks, and FPR is the ratio of misclassified normal instances over the total number of normal instances. OA describes how correctly an IDS works, which is given by OA = (TPR + 1 -FPR)/2. Besides, in the following experiments, the threshold γ in Algorithm 1 is set to γ = 2 after some preliminary tests.</p><p>First, we test the overall detection performance of the proposed IDS by training it with several balanced datasets. The results of this experiment are shown in Fig. <ref type="figure">6</ref>. According to Fig. <ref type="figure">6</ref>, we know that, when training data is too less, the IDS tends to have an extremely high FPR. In contrast, when there is enough training data, the HSOM-based intrusion detection algorithm has a high detection rate and a relatively low false alarm rate. In addition, it is observed from Fig. <ref type="figure">6</ref> that the overall detection accuracy does not improve proportionally to the size of training data when it exceeds a certain threshold.</p><p>Second, we test the detection rates of our IDS for different types of attacks. The test results are shown in Table <ref type="table" target="#tab_0">IV</ref> and it suggests that DoS, node compromise and node replication attacks can be easily detected by the IDS, but to recognize jamming and MITM attacks is a bit more difficult. This can be interpreted by the fact that jamming and MITM attacks sometimes do not cause obvious traffic anomalies into networks <ref type="bibr" target="#b33">[34]</ref>. In addition, Table IV also tells us that the layer-1 SOMs which only learn from node-level traffic patterns can accurately detect node-level attacks and recognize most of network-level attacks, and a two-layer HSOM which combines both the node-level and network-level traffic features can have even better performance.</p><p>Third, we evaluate the performance of the IDS when it is detecting new attacks. Table <ref type="table">V</ref> shows the experiment setup and √ " means that the samples of the corresponding attack type in that column are included in the training set, and "×" means not. In each experiment in Table <ref type="table">V</ref>, the attack samples which are not included in the training set will be merged with normal samples and fed into the IDS to perform intrusion detection operations. According to Table V, we know that the IDS performs well when detecting new attacks. Specifically, the node compromise attack, when it is treated as a new type of attack, cannot be easily detected by the IDS (TPR = 71.6%). This is because that a compromised node can have random behaviors and may behave just like a normal node sometimes.</p><p>Fourth, we evaluate the real-time capability of the IDS by running the intrusion detection process for 1000 times. In this experiment, the layer-2 SOM and each layer-1 SOM are set to be a 16 × 16 map and a 10 × 10 map, respectively. Table VI depicts the minimum, mean, and maximum execution time of the layer-1 and layer-2 SOMs. It is obvious that the execution time of the layer-2 SOM is longer than that of a layer-1 SOM. This is because the layer-2 SOM has more neurons and thereby needs longer execution time. Considering that the layer-1 SOMs in the HSOM can perform the intrusion detection tasks in parallel when implemented on GPU, FPGA, or multicore CPU, the minimal time needed to detect an attack is the sum of the execution time of one layer-1 SOM and one layer-2 SOM. Hence, the mean detection time is only about 75 ms according to Table VI. This is an empirical substantiation that the computational complexity of our algorithm is particularly low.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. ASS Method Evaluation</head><p>To verify the effectiveness of the ASS learning strategy when it is applied to the problem of imbalanced data learning, we compare it with three other training methods. Because attack samples in VSNs are extremely rare, whereas normal samples are abundant, the imbalance ratio of training set tends to be very high. Therefore, in this experiment, we construct a set whose imbalance ratio is 100:1 for traffic pattern learning. In order to compare the detection performance of the IDS when trained with different methods, the receiver operating characteristic (ROC) curve is adopted here. ROC curve is usually used to illustrate the performance of a binary classifier system by plotting the TPR against the FPR at different parameter settings. Better detection performance is indicated by an ROC curve that is closer to the top left corner in the ROC space. Fig. <ref type="figure" target="#fig_4">7</ref> depicts the ROC curves for different training methods when FPR is within the interval [0, 0.2]. In Fig. <ref type="figure" target="#fig_4">7</ref>, the curve whose label is STD stands for the detection performance of the IDS when it is trained on a large and balanced dataset. As can be seen in Fig. <ref type="figure" target="#fig_4">7</ref>, the ASS method has the beset detection performance among the four training  methods, while both the random under-sampling (RUS) and random over-sampling (ROS) methods perform poorly. The worst performance comes from the RUS method. This may be because that the under-sampled training set is too small to contain enough pattern information. Besides, if we use the TA method, i.e., simply training the IDS with all the instances in the imbalanced datasets, the performance degradation is also serious. As a result, by utilizing the ASS method, the detection performance of the IDS when trained on imbalanced datasets can be notably improved.</p><p>Next, we test the training time needed for training a layer-1 SOM (10 × 10) with different training methods TA, RUS, and ROS). The training set used here has 10 000 normal samples and 100 attack samples. According to the results shown in Fig. <ref type="figure" target="#fig_5">8</ref>, the RUS method has the best time efficiency, but its detection performance is poor, as illustrated in Fig. <ref type="figure" target="#fig_4">7</ref>. The ROS method is extremely time-consuming because it contains too much redundant data. When compared with the TA method which simply uses all the instances in the imbalanced datasets for training, the ASS method gains an improvement of training speed at a factor of 7.45. Therefore, by using the ASS method, the training speed of the HSOM can be significantly accelerated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Discussion</head><p>Through the previous experiments, it is clear that the proposed IDS can efficiently and rapidly detect intrusions for VSNs, and the ASS method can well solve the class imbalance problem in VSN applications and accelerate the training speed. Table <ref type="table" target="#tab_0">VII</ref> presents the comparison of our IDS with several previous studies on intrusion detection for VSNs. According to Table VII, it suggests that our IDS can detect more variety of attacks at a slight cost of detection performance, and it has good real-time capability. In particular, our IDS can perform better when it is trained on a large and balanced training set. To summarize, the proposed IDS is better qualified for detecting intrusions in VSNs which have big sensor data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>In this paper, we have proposed an intrusion detection approach for VSNs. In this approach, a traffic model is designed for extracting valuable features which are fed into an HSOM neural network to learn traffic patterns and detect intrusions, and an active learning method is proposed to deal with the problem of big and imbalanced training data. The novelty of this paper lies in the following aspects. First, we have applied HSOM to the problem of intrusion detection in VSNs and showed that it can perform well in this context. Second, a traffic model is developed to describe the dynamic characteristics of the network traffic in VSNs. With the help of this traffic model, the size of training set used for traffic pattern learning can be significantly reduced. Third, we have designed a light-weight active learning method for training SOM on big and imbalanced datasets by actively selecting a small number of representative instances from the training set. This learning method can fairly well address the class imbalance problem and accelerate the training speed of SOM simultaneously.</p><p>In the future work, we plan to collect a large amount of traffic data from real world VSN applications to test the proposed IDS. In addition, it is necessary to further accelerate the training speed of the HSOM with other algorithm-level optimization methods, such as extreme learning machines.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. N-Burst model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. HSOM architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Hypothetical VSN scenario.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Comparison of ROC curves for the four training methods: ASS, TA, RUS, and ROS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Comparison of training time for the four training methods: ASS, TA, RUS, and ROS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I COMPARISON</head><label>I</label><figDesc>OF THE IDSS PROPOSED FOR VSNS Fig. 1. Architecture of VSNs.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>ASS Algorithm Input: the normal set Set N whose size is Size N , the attack set Set A whose size is Size A Output: a subset Set S 1: for i = 1 to ceil(η √ Size N /Size A ) do Randomly pick L samples from Set N to create a query pool Set L = {x 1 , x 2 , ..., x L }, where L = 2Size A = {D 1 , D 2 , ..., D L }, create a set Set near that contains all the instances which are among the top α% instances closest to C L in Set L</figDesc><table><row><cell>2:</cell></row><row><cell>3: 4: 5: 6: 7: According to D 8: Find the geometric center C L of Set L by C L = ( L l=1 x l )/L for all x j ∈ Set L do Calculate its distance to C L by D j = ||x j -C L || end for Create another set Set far = Set L -Set near 9: for k = 1 to Size A do 10: Set z to be a random integer derived from a [1, 100] discrete uniform distribution 11: if z &gt; α then 12: Randomly choose an instance from Set near and add it to Set S 13: else 14: Randomly choose an instance from Set far and add it to Set S 15: end if 16: end for 17: if i = 1 then 18: Add Set A to Set S 19: else 20: Use SMOTE to create a set whose size is Size A , and add it to Set S 21:</cell></row></table><note><p>2, ceil(x) is a function that rounds x to the nearest integer toward Algorithm 2</p></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank the anonymous referees for their helpful comments and suggestions.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported by the National Natural Science Foundation of China under Grant 61433006 and Grant 61272204. This paper was recommended by Associate Editor J. Wu.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Kaixing Huang received the B.S. degree in automation from the Huazhong University of Science and Technology, Wuhan, China, in 2012, where he is currently pursuing the Ph.D. degree in control science and control engineering with the School of Automation.</p><p>His current research interests include intrusion detection and machine learning. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Qi</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A survey of visual sensor network platforms</title>
		<author>
			<persName><forename type="first">B</forename><surname>Tavli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Bicakci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Zilan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Barcelo-Ordinas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multimedia Tools Appl</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="689" to="726" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A survey of image security in wireless sensor networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">D O</forename><surname>Gonçalves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">G</forename><surname>Costa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Imag</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="4" to="30" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A survey of data mining and machine learning methods for cyber security intrusion detection</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">L</forename><surname>Buczak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Guven</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys Tuts</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1153" to="1176" />
			<date type="published" when="2016">2016</date>
			<pubPlace>2nd Quart</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Heterogeneous information fusion and visualization for a large-scale intelligent video surveillance system</title>
		<author>
			<persName><forename type="first">C.-T</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-K</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-R</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern., Syst</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="593" to="604" />
			<date type="published" when="2017-04">Apr. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Internet of multimedia things: Vision and challenges</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Alvi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Afzal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Atzori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Mahmood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ad Hoc Netw</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="87" to="111" />
			<date type="published" when="2015-10">Oct. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Detecting anomaly node behavior in wireless sensor networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 21st Int. Conf</title>
		<meeting>21st Int. Conf<address><addrLine>Niagara Falls, ON, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-05">May 2007</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="451" to="456" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Wireless multimedia sensor networks: A survey</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Melodia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Chowdury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="32" to="39" />
			<date type="published" when="2007-12">Dec. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A survey on wireless multimedia sensor networks</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Akyildiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Melodia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">R</forename><surname>Chowdhury</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="921" to="960" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Secure privacy vault design for distributed multimedia surveillance system</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M M</forename><surname>Rahman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Gener. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="344" to="352" />
			<date type="published" when="2016-02">Feb. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A survey of intrusion detection systems in wireless sensor networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Butun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">D</forename><surname>Morgera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sankar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys Tuts</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="266" to="282" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>1st Quart.</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Anomaly detection in wireless sensor networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Rajasegarar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Leckie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Palaniswami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="34" to="40" />
			<date type="published" when="2008-08">Aug. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Reliable event-detection in wireless visual sensor networks through scalar collaboration and game-theoretic consideration</title>
		<author>
			<persName><forename type="first">A</forename><surname>Czarlinska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kundur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Multimedia</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="675" to="690" />
			<date type="published" when="2008-08">Aug. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Wireless image sensor networks: Event acquisition in attack-prone and uncertain environments</title>
		<author>
			<persName><forename type="first">A</forename><surname>Czarlinska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kundur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Multidimensional Syst. Signal Process.</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="135" to="164" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">G-E-M sensor networks for mission critical surveillance in hostile environments</title>
		<author>
			<persName><forename type="first">A</forename><surname>Czarlinska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Luh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kundur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE INFOCOM Workshops</title>
		<meeting>IEEE INFOCOM Workshops<address><addrLine>Phoenix, AZ, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-04">Apr. 2008</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Research on secure data collection in wireless multimedia sensor networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-G</forename><surname>Ryu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Commun</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">15</biblScope>
			<biblScope unit="page" from="1902" to="1909" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">TRAST: Trust-based distributed topology management for wireless multimedia sensor networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Mali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Misra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comput</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1978" to="1991" />
			<date type="published" when="2016-06">Jun. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A hierarchical SOM-based intrusion detection system</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">G</forename><surname>Kayacik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Zincir-Heywood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Heywood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. Appl. Artif. Intell</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="439" to="451" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The self-organizing map</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<meeting>IEEE</meeting>
		<imprint>
			<date type="published" when="1990-09">Sep. 1990</date>
			<biblScope unit="volume">78</biblScope>
			<biblScope unit="page" from="1464" to="1480" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Queryable semantics to detect cyberattacks: A flow-based detection approach</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">F</forename><surname>Aleroud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Karabatis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern., Syst</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Learning on the Active learning in imbalanced data classification</title>
		<author>
			<persName><forename type="first">S</forename><surname>Ertekin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bottou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Giles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 16th ACM Conf. Inf. Knowl. Manag. (CIKM)</title>
		<meeting>16th ACM Conf. Inf. Knowl. Manag. (CIKM)<address><addrLine>Lisbon, Portugal</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="127" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An integrated intrusion detection system for cluster-based wireless sensor networks</title>
		<author>
			<persName><forename type="first">S.-S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-Q</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-W</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. Appl</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="15234" to="15243" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Impact of aggregated, self-similar ON/OFF traffic on delay in stationary queueing models (extended version)</title>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Schwefel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lipsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perform. Eval</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="203" to="221" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Critical video quality for distributed automated video surveillance</title>
		<author>
			<persName><forename type="first">P</forename><surname>Korshunov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">T</forename><surname>Ooi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Annu. ACM Int. Conf. Multimedia (MULTIMEDIA)</title>
		<meeting>13th Annu. ACM Int. Conf. Multimedia (MULTIMEDIA)<address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="151" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Continuous tracking within and across camera streams</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Comput. Soc. Conf. Comput. Vis. Pattern Recognit</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="267" to="272" />
			<date type="published" when="2003-06">Jun. 2003</date>
			<publisher>Madison</publisher>
			<pubPlace>WI, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Design and analysis of multimodel-based anomaly intrusion detection systems in industrial process automation</title>
		<author>
			<persName><forename type="first">C</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Syst., Man, Cybern., Syst</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1345" to="1360" />
			<date type="published" when="2015-10">Oct. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hostbased intrusion detection using self-organizing maps</title>
		<author>
			<persName><forename type="first">P</forename><surname>Lichodzijewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Zincir-Heywood</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Heywood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Joint Conf. Neural Netw. (IJCNN)</title>
		<meeting>Int. Joint Conf. Neural Netw. (IJCNN)<address><addrLine>Honolulu, HI, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1714" to="1719" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Profiling program behavior for anomaly intrusion detection based on the transition and frequency property of computer audit data</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Security</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="539" to="550" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">SMOTE: Synthetic minority over-sampling technique</title>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">V</forename><surname>Chawla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">W</forename><surname>Bowyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">O</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">P</forename><surname>Kegelmeyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Artif. Intell. Res</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="321" to="357" />
			<date type="published" when="2002-06">Jun. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">OMNeT++ User Manual Version 5</title>
		<author>
			<persName><forename type="first">A</forename><surname>Varga</surname></persName>
		</author>
		<ptr target="http://www.omnetpp.org/doc/omnetpp/manual/" />
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Packet traffic: A good data source for wireless sensor network modeling and anomaly detection</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="15" to="21" />
			<date type="published" when="2011-06">May/Jun. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Performance study of multiple coverset strategies for mission-critical video surveillance with wireless video sensors</title>
		<author>
			<persName><forename type="first">C</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Makhoul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Mobile Comput</title>
		<meeting><address><addrLine>Niagara Falls, ON, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-10">Oct. 2010</date>
			<biblScope unit="page" from="208" to="216" />
		</imprint>
	</monogr>
	<note>Proc. IEEE 6th Int</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Simulation of attacks for security in wireless sensor network</title>
		<author>
			<persName><forename type="first">A</forename><surname>Diaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sanchez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sensors</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page">1932</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An intelligent intrusion detection system (IDS) for anomaly and misuse detection in computer networks</title>
		<author>
			<persName><forename type="first">O</forename><surname>Depren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Topallar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Anarim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Ciliz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Expert Syst. Appl</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="713" to="722" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Jamming sensor networks: Attack and defense strategies</title>
		<author>
			<persName><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Trappe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="41" to="47" />
			<date type="published" when="2006-06">May/Jun. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
