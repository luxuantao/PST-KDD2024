<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Designated Verifier Signatures: Anonymity and Efficient Construction from Any Bilinear Map</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Fabien</forename><surname>Laguillaumie</surname></persName>
							<email>laguillaumie@math.unicaen.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">Telecom Research and Development</orgName>
								<address>
									<addrLine>42, rue des Coutures</addrLine>
									<postCode>B.P. 6243, 14066, Cedex 4</postCode>
									<settlement>Caen</settlement>
									<country>France, France</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">Laboratoire de Mathématiques Nicolas Oresme</orgName>
								<orgName type="institution">Université de Caen</orgName>
								<address>
									<addrLine>Campus II, B.P. 5186</addrLine>
									<postCode>14032</postCode>
									<settlement>Caen Cedex</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Damien</forename><surname>Vergnaud</surname></persName>
							<email>vergnaud@math.unicaen.fr</email>
							<affiliation key="aff1">
								<orgName type="laboratory">Laboratoire de Mathématiques Nicolas Oresme</orgName>
								<orgName type="institution">Université de Caen</orgName>
								<address>
									<addrLine>Campus II, B.P. 5186</addrLine>
									<postCode>14032</postCode>
									<settlement>Caen Cedex</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Designated Verifier Signatures: Anonymity and Efficient Construction from Any Bilinear Map</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">8352D7B5B650C81FEACA4B9895E44851</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:05+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Designated verifier signatures</term>
					<term>Privacy of signer&apos;s identity</term>
					<term>Bilinear Diffie-Hellman problems</term>
					<term>Exact security</term>
					<term>Tight reduction</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The concept of Designated Verifier Signatures (DVS) was introduced by Jakobsson, Sako and Impagliazzo at Eurocrypt'96. These signatures are intended to a specific verifier, who is the only one able to check their validity. In this context, we formalize the notion of privacy of signer's identity which captures the strong designated verifier property investigated in their paper. We propose a variant of the pairingbased DVS scheme introduced at Asiacrypt'03 by Steinfeld, Bull, Wang and Pieprzyk. Contrary to their proposal, our new scheme can be used with any admissible bilinear map, especially with the low cost pairings and achieves the new anonymity property (in the random oracle model). Moreover, the unforgeability is tightly related to the Gap-Bilinear Diffie-Hellman assumption, in the random oracle model and the signature length is around 75 % smaller than the original proposal.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Recently, Steinfeld, Bull, Wang and Pieprzyk <ref type="bibr" target="#b16">[17]</ref> proposed a designated verifier signature scheme based on pairings. In this article, we propose three techniques which significantly improve this protocol. First of all, a novel use of a hash function in a context of digital signatures permits to rehabilitate the low cost pairing, namely the discrete exponentiation, which has been turned down because it suffers from some unavoidable drawbacks as a bilinear map. The efficiency is increased by a factor of 3.5 to 16, and the signature length is around 75 % smaller than the original proposal. Secondly, we formally define a notion of anonymity of signers, and, randomizing the signatures makes our scheme achieve this property. As a side effect, its unforgeability is tightly related to the Gap Bilinear Diffie-Hellman assumption. Finally, the proofs of security rely on a new use of a Decisional Bilinear Diffie-Hellman oracle in the simulation of a random oracle. an additional security requirement which includes the notion that an attacker cannot determine under which key an encryption was performed: it is the idea of key-privacy. Our formalization follows this notion. <ref type="bibr">Steinfeld et al.</ref> proposed at Asiacrypt'03 <ref type="bibr" target="#b16">[17]</ref> an interesting and promising scheme based on pairing, which however suffers from a lack of efficiency (compared to <ref type="bibr" target="#b14">[15]</ref>'s scheme for instance). Moreover their scheme is not secure with low cost pairings.</p><p>We revise it such that, at equal security guarantees, we obtain the most efficient UDVS scheme, and instantiated with the discrete exponentiation we obtain the most efficient DVS protocol in practice (cf. Section 4.2), but loose the universal property. The first modification which consists in a novel use of hash function in the asymmetric signature setting makes it possible to shorten the signatures and allows the scheme to be used with any admissible bilinear map. Short signatures are useful for low-bandwidth devices and environments where a person is asked to manually type in the signature. By using this technique, for a security level of 2 80 bit operations, the signature length is 271 bits and does not depend on the size of the ground field. The second trick consists in making the signature generation not deterministic. With this randomization we can draw a scheme which achieves privacy of signer's identity under an adaptive chosen-message attack in the random oracle model <ref type="bibr" target="#b2">[3]</ref>. As in <ref type="bibr" target="#b7">[8]</ref>, it also makes the unforgeability of the modified scheme tightly related to the underlying problem, in the random oracle model. We introduce a new use of a Decisional Bilinear Diffie-Hellman oracle in the security proofs to maintain a random oracle list. We obtain a very tight link between the security of the scheme and the Gap Bilinear Diffie-Hellman assumption, with a quadratic time reduction.</p><p>In the rest of the paper, we recall the definition of DVS, then we formalize the new anonymity requirement for DVS. In section 4, we present our new scheme with a precise security treatment. In appendix, we discuss the security of some other schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Definition and Security Assumptions for Designated Verifier Signatures</head><p>In this section, we state the definition of DVS schemes induced by Moreover, a designated verifier signature scheme must satisfy the following properties (formally defined in <ref type="bibr" target="#b17">[18]</ref> and discussed below): For digital signatures, the widely accepted notion of security was defined by Goldwasser, Micali and Rivest in <ref type="bibr" target="#b8">[9]</ref> as existential forgery against adaptive chosen-message attack (EF-CMA). For a DVS scheme, the security model proposed in <ref type="bibr" target="#b16">[17]</ref> and <ref type="bibr" target="#b17">[18]</ref> (under the designation ST-DV-UF) is similar, with the notable difference that, while mounting a chosen-message attack, we allow the attacker to query a verifying oracle on any couple message/signature of its choice. As usual, in the adversary answer, there is the natural restriction that the returned message/signature has not been obtained from the signing oracle (for more details, we refer the reader to <ref type="bibr" target="#b16">[17]</ref> and <ref type="bibr" target="#b17">[18]</ref>). In order to be consistent with the classical security model for usual signatures, also for DVS we denote this security point by EF-CMA.</p><p>In their formalization of UDVS <ref type="bibr" target="#b16">[17]</ref> [18], Steinfeld et al. defined the Non-Transferability Privacy property to prevent a designated-verifier from using a DVS to produce evidence which convinces a third-party that this DVS was actually computed by the signer. However, their notion is computational, and we believe that the identity of the signer should be unconditionally protected (i.e. DVS should provide information theoretical anonymity), as in ring signatures (where this security requirement is called source hiding).</p><p>Finally, even with this unconditional ambiguity, anyone can check that there are only two potential signers for a DVS. If signatures are captured on the line before reaching the verifier, an eavesdropper will be convinced that the designated verifier did not produce the signature. Therefore, in <ref type="bibr" target="#b9">[10]</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Anonymity of DVS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Formal Definition</head><p>In this section, we define formally the privacy of signer's identity under a chosen message attack (PSI-CMA). We consider a PSI-CMA-adversary A in the random oracle model, which runs in two stages: in the find stage, it takes two signing public keys pk A0 and pk A1 and a verifying public key pk B , and outputs a message m together with some state information I . In the guess stage, it gets a challenge B-designated verifier signature σ formed by signing the message m at random under one of the two keys and the information I , and must say which key was chosen. The adversary has access to the random oracle(s) H, to the signing oracles Σ A0,B , Σ A1,B and to the verifying oracle Υ B , and is allowed to invoke them on any message with the restriction of not querying (m , σ ) from the verifying oracle in the second stage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3 (Privacy of Signer's Identity).</head><p>Let k be an integer and DVS a designated verifier signature scheme with security parameter k. We consider the following random experiment, for r ∈ {0, 1}:</p><formula xml:id="formula_0">Experiment Exp psi-cma-r DVS,A (k) params R ← -DVS.Setup(k) (pk A0 , sk A0 ) R ← -DVS.SKeyGen(params) (pk A1 , sk A1 ) R ← -DVS.SKeyGen(params) (pk B , sk B ) R ← -DVS.VKeyGen(params) (m , I ) ← A Σ A 0 ,B ,Σ A 1 ,B ,Υ B ,H (find, pk B , pk A0 , pk A1 ) σ ← DVS.Sign(params, m , sk Ar , pk B ) d ← A Σ A 0 ,B ,Σ A 1 ,B ,Υ B ,H (guess, m , I , σ , pk B , pk A0 , pk A1 ) Return d</formula><p>We define the advantage of the adversary A, via</p><formula xml:id="formula_1">Adv psi-cma DVS,A (k) = Pr Exp psi-cma-1 DVS,A (k) = 1 -Pr Exp psi-cma-0 DVS,A (k) = 1 . Let t ∈ N and ε ∈ [0, 1]. The scheme DVS is said to be (k, t, ε)-PSI-CMA se- cure, if the function Adv psi-cma</formula><p>DVS,A (k) is smaller than ε for any PSI-CMA-adversary A running in time complexity less than t.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Semantically Secure Encryption Implies Anonymity</head><p>In <ref type="bibr" target="#b9">[10]</ref>, Jakobsson et al. suggested that "in order to make protocols strong designated verifier, transcripts can be probabilistically encrypted using the public key of the intended verifier". This is not sufficient in general (for instance a plaintext El Gamal encryption does not protect the anonymity of the signers). However, in this paragraph, we prove that using an additional IND-CCA2 public-key encryption layer is actually sufficient to make any DVS scheme strong.</p><p>Basically, being able to distinguish two potential signing keys in the signature scheme will give an advantage to distinguish two potential encrypted messages.</p><p>Let k be an integer, let DVS be a (weak)-designated verifier signature scheme with security parameter k and let Π be any IND-CCA2 encryption scheme. We define a designated verifier signature DVS Π as follows: the generation of a DVS Π signature of a message m is done by encrypting a DVS signature σ of m under the designated verifier public key. Its verification is performed by first decrypting the signature, then verifying it with the DVS.Verify algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 1.</head><p>Let k be an integer, let DVS be a (weak)-designated verifier signature scheme with security parameter k, and let Π be an IND-CCA2 encryption scheme with security parameter k. Then DVS Π is a strong designated verifier signature scheme. More precisely, for any PSI-CMA adversary A with security parameter k which takes advantage Adv psi-cma DVS Π ,A against DVS Π within time t, making q H , q Σ and q Υ queries to the random oracle(s), the signing oracle and the verifying oracle respectively, there exists an IND-CCA2 adversary A against Π, making q H queries to the random oracle(s), and q Υ queries to the decrypting oracle, within time t, which has the same advantage as A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof (sketch).</head><p>A general study of the security notions and attacks for encryption schemes was conducted in <ref type="bibr" target="#b1">[2]</ref>. We refer the reader to this paper for the definition of IND-CCA2 encryption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>We construct the algorithm A as follows:</head><p>-A is fed with a public key Epk B for Π and chooses two pairs of signing keys (sk A0 , pk A0 ) (sk A1 , pk A1 ) and a pair of verifying keys (sk B , pk B ). 4 The New Scheme : DVSBMH</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Bilinear Maps and Underlying Problems</head><p>In this section, we recall some definitions concerning bilinear maps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4 (Admissible Bilinear Map [4]</head><p>). Let (G 0 , +), (G 1 , +) and (H, ×) be three groups of the same prime order q and let P 0 and P 1 be two generators of G 0 and G 1 (respectively). An admissible bilinear map is a map e : G 0 × G 1 -→ H satisfying the following properties:</p><formula xml:id="formula_2">-bilinear: e(aQ, bR) = e(Q, R) ab for all (Q, R) ∈ G 0 × G 1 and all (a, b) ∈ Z 2 ;</formula><p>non-degenerate: e(P 0 , P 1 ) = 1; -computable: there exists an efficient algorithm to compute e.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 5 (Prime-Order-BDH-Parameter-Generator [4]).</head><p>A primeorder-BDH-parameter-generator is a probabilistic algorithm that takes a security parameter k as input and outputs a 7-tuple (q, P 0 , G 0 , P 1 , G 1 , H, e) satisfying the following conditions: q is a prime with 2 k &lt; q &lt; 2 k+1 , the groups G 0 , G 1 and H are of order q, P 0 and P 1 generates G 0 and G 1 (respectively), and e : G 0 ×G 1 -→ H is an admissible bilinear map. A prime-order-BDH-parametergenerator Gen is said to be symmetric if P 0 = P 1 and G 0 = G 1 for any 7-tuple (q, P 0 , G 0 , P 1 , G 1 , H, e) output by Gen.</p><p>Let (G 0 , +), (G 1 , +) and (H, ×) be three groups of the same large prime order q, P 0 and P 1 be two generators of G 0 and G 1 (respectively), and let e : G 0 × G 1 -→ H be an admissible bilinear map. For most of the applications of pairings in cryptography, it is necessary to know an efficient way to compute an isomorphism ϕ : G 0 G 1 . Contrary to Weil or Tate pairings, this is not true for the discrete exponentiation e : P 0 × (Z/qZ, +) -→ P 0 , (P, x) -→ xP where the map P 0 -→ Z/qZ is the discrete logarithm. At PKC'01, Okamoto and Pointcheval proposed a new class of computational problems, called gap problems <ref type="bibr" target="#b12">[13]</ref>. Essentially, a gap problem is a dual to inverting and decisional problems. More precisely, this problem is to solve an inverting problem with the help of an oracle for a decisional problem. Following this idea, we state the following problems (where G 0 and G 1 have not a symmetric role):</p><p>Computational Bilinear Diffie-Hellman (CBDH): let a, b and c be three integers. Given aP 0 , bP 0 , cP 1 , compute e(P 0 , P 1 ) abc . Decisional Bilinear Diffie-Hellman (DBDH): let a, b, c and d be four integers. Given aP 0 , bP 0 , cP 1 and e(P 0 , P 1 ) d , decide whether d = abc mod q. Gap-Bilinear Diffie-Hellman (GBDH): let a, b and c be three integers. Given aP 0 , bP 0 , cP 1 , compute e(P 0 , P 1 ) abc with the help of a DBDH Oracle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 6 (CBDH and GBDH Assumption).</head><p>Let Gen be a prime-order-BDH-parameter-generator. Let D be an adversary that takes as input a 7-tuple (q, P 0 , G 0 , P 1 , G 1 , H, e) generated by Gen and (X, Y, Z) ∈ G 2 0 × G 1 . He returns an element of h ∈ H. We consider the following random experiments, where k is a security parameter and O DBDH is a DBDH oracle:</p><formula xml:id="formula_3">Experiment Exp cbdh Gen,D (k) Experiment Exp gbdh Gen,D (k) (q, P 0 , G 0 , P 1 , G 1 , H, e) R ← -Gen(k) (q, P 0 , G 0 , P 1 , G 1 , H, e) R ← -Gen(k) setup ← (q, P 0 , G 0 , P 1 , G 1 , H, e) setup ← (q, P 0 , G 0 , P 1 , G 1 , H, e) x R ← -[[1, q -1]], X ← xP 0 x R ← -[[1, q -1]], X ← xP 0 y R ← -[[1, q -1]], Y ← yP 0 y R ← -[[1, q -1]], Y ← yP 0 z R ← -[[1, q -1]], Z ← zP 1 z R ← -[[1, q -1]], Z ← zP 1 h ← D(setup, X, Y, Z) h ← D O DBDH (setup, X, Y, Z) Return 1 if h = e(P 0 , P 1 ) xyz , Return 1 if h = e(P 0 , P 1 ) xyz , 0 otherwise 0 otherwise</formula><p>We define the success of D in solving the CBDH and the GBDH problems via</p><formula xml:id="formula_4">Succ cbdh Gen,D (k) = Pr[Exp cbdh Gen,D (k)=1] and Succ gbdh Gen,D (k) = Pr[Exp gbdh Gen,D (k)=1]</formula><p>Let t be an integer and ε a real in</p><formula xml:id="formula_5">[0, 1]. Gen is said to be (k, t, ε)-CBDH-secure (resp. (k, t, ε)-GBDH-secure) if no adversary D running in time t has success Succ cbdh Gen,D (k) ≥ ε (resp. Succ gbdh Gen,D (k) ≥ ε).</formula><p>Notations : we denote by T Exp-G the time complexity for evaluating exponentiation in a group G and T O the time complexity of the oracle O.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Description of the New Scheme DVSBMH</head><p>The scheme DVSBM, proposed at Asiacrypt'03 by Steinfeld et al. <ref type="bibr" target="#b16">[17]</ref> is a pairingbased DVS. The signature generation is deterministic, therefore this scheme can certainly not achieve the PSI-CMA security point. The authors required that the isomorphism between G 0 and G 1 is known and efficiently computable. In fact, DVSBM is trivially not secure if we use the discrete exponentiation. We introduce a variant of DVSBM which is more efficient, achieves the property of privacy of signer's identity and whose security is proven even if we use the discrete exponentiation. For industrial purposes, where efficiency prevails over exact security, the choice of the parameters is oriented by the underlying algorithmic problems without consideration of the reduction cost in the security proof (we call it industrial security). Considering the best algorithms to solve GBDH in both settings, the scheme with the discrete exponentiation will be prefered in practice, whereas the scheme with the Weil or Tate pairing has a tighter security reduction.</p><p>In DVSBM, the verification of signatures consists only in checking an equality between two quantities which can be computed independently by the signer and the verifier, it is actually sufficient to check the equality of some hash values of these quantities. This first remark, which seems to have been overlooked in <ref type="bibr" target="#b16">[17]</ref>, makes it possible to shorten the signature considerably and to use the discrete exponentiation to instantiate the protocol.</p><p>Our second trick aims at randomizing the signature. We prove that this is sufficient to obtain the anonymity of signers. Moreover, the security of the signature is tightly related to the GBDH and this random salt ensures the anonymity of signers. Using these tricks, we define DVSBMH.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Description of DVSBMH</head><p>Setup Let k be a security parameter. Let Gen be a prime-order-BDHparameter-generator, f 1 , f 2 , f r : N → N be three functions. We denote</p><formula xml:id="formula_6">k 1 = f 1 (k), k 2 = f 2 (k)</formula><p>and n r = f r (k). Let (q, P 0 , G 0 , P 1 , G 1 , H, e) be a 7-tuple generated by Gen(k 1 ). Let [{0, 1} * × {0, 1} nr -→ G 1 ] be a hash function family, and h be a random member of this family. Let [H -→ {0, 1} k2 ] be a hash function family, and g be a random member of this family.</p><formula xml:id="formula_7">SKeyGen a ∈ [[1, q -1]] is the secret key, P A = aP 0 is the public one VKeyGen b ∈ [[1, q -1</formula><p>]] is the secret key, P B = bP 0 is the public one Sign Given a message m, the secret key a of the signer, the public key P B of the designated verifier, compute H = h(m, r) for some random string r of length n r and s = g(e(P B , aH)) and the signature is σ = (r, s).</p><p>Verify Given a pair (m, (s, r)), the signer's public key P A , and the verifier's secret key b, the algorithm accepts the signature if and only if s = g(e(P A , bh(m, r))).</p><p>In practice, for a security requirement of 2 80 operations (i.e. k = 80), we use the values k 1 = k 2 = 160 and n r = 111 which are derived from the security proofs (cf. <ref type="bibr" target="#b11">[12]</ref>). The correctness and source hiding properties of DVSBMH are straightforward. In general, the new scheme does not satisfy the universal property from <ref type="bibr" target="#b16">[17]</ref> any more, because the security of BLS signatures <ref type="bibr" target="#b4">[5]</ref> relies on the existence of an efficiently computable isomorphism from G 0 to G 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Security of DVSBMH When</head><formula xml:id="formula_8">G 0 = G 1</formula><p>Here we formally investigate the security of the version of DVSBMH for which we know an algorithm to compute the isomorphism between G 0 and G 1 in the random oracle model (i.e. we replace the hash functions h and g by random oracles H and G). For simplicity, we assume G 0 = G 1 = G. In practice such a setting can be obtained with, for instance, the Weil or Tate pairing. In this case our new scheme can be extended to a UDVS scheme related to the randomized BLS signatures <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8]</ref>. This is an important consideration because we prove that the unforgeability is tightly related to the GBDH problem, therefore this scheme offers the best exact security of all DVS protocols. Moreover, it achieves the privacy of signer's identity under the CBDH assumption (with the random salt but without the g hash function, the anonymity would have been related to DBDH, an easier problem). These results are described in the following theorems.</p><p>Theorem 1 (Unforgeability of DVSBMH). Let Gen be a symmetric primeorder-BDH-parameter-generator, let f 1 , f 2 , f r : N → N be three functions and let DVSBMH be the associated DVS scheme. For any EF-CMA-adversary A, in the random oracle model, against DVSBMH, with security parameter k which has success ε = Succ ef-cma DVSBMH,A (k), running time t, and makes q H and q G queries to the random oracles, q Σ queries to the signing oracles and q Υ queries to the verifying oracle, there exists an adversary D for GBDH which has advantage</p><formula xml:id="formula_9">ε = Succ gbdh Gen,D (k) running in time t ∈ N such that ⎧ ⎪ ⎪ ⎨ ⎪ ⎪ ⎩ ε ≥ ε - (q H + q Σ )q Σ 2 nr -(1 + q Υ ) q G 2 k1 + 1 2 k2 t ≤ t +(q H + q Σ ) (T Exp-G + O(1)) + q Σ (T Exp-H + O(1)) +(q Υ + 1) (T DBDH + O(1))</formula><p>where</p><formula xml:id="formula_10">k 1 = f 1 (k), k 2 = f 2 (k) and n r = f r (k).</formula><p>Proof. The proof is a straightforward modification of the proof of <ref type="bibr" target="#b16">[17]</ref> using the additional technique in <ref type="bibr" target="#b7">[8]</ref>. Due to the lack of space, we have not written it down.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 2 (Anonymity of DVSBMH).</head><p>Let Gen be a symmetric primeorder-BDH-parameter-generator, let f 1 , f 2 , f r : N → N be three functions and let DVSBMH be the associated DVS scheme. For any PSI-CMA-adversary A, in the random oracle model, against DVSBMH, with security parameter k which has advantage ε = Adv psi-cma DVSBMH,A (k), running time t, and makes q H and q G queries to the random oracles, q Σ queries to the signing oracles and q Υ queries to the verifying oracle, there exists an adversary D for CBDH which has advantage</p><formula xml:id="formula_11">ε = Succ cbdh Gen,D (k) running in time t ∈ N such that ⎧ ⎨ ⎩ ε ≥ ε 2q G - (q H + q Σ + 1)(q Σ + 1) 2 nr q G - q Υ 2 k2 q G - q G q Υ 2 k1 q G t ≤ t + (q H + q Σ )(T Exp-G + O(1)) + (q Σ + q Υ )(T Exp-H + O(1))</formula><p>where</p><formula xml:id="formula_12">k 1 = f 1 (k), k 2 = f 2 (k) and n r = f r (k).</formula><p>Proof. Due to lack of space, the proof will be given in the full version of the paper <ref type="bibr" target="#b11">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Security of the General Scheme</head><p>It is not necessary, thanks to our construction, to know explicitely an isomorphism between G 0 and G 1 to achieve a secure scheme. In this general case, we have a leak in terms of exact security compared to the previous case. In fact, we obtain a very tight link between the success probability of the adversary and the success in solving the GBDH problem but the reduction is quadratic time. When we use the discrete exponentiation as the underlying pairing (and so without the isomorphism), we get the best industrial security. We provide here the proof of the unforgeability, with the use of a decisional oracle to maintain the random oracle lists. The proof of the anonymity follows the same lines.</p><p>Theorem 3 (Unforgeability of DVSBMH). Let Gen be a prime-order-BDHparameter-generator, let f 1 , f 2 , f r : N → N be three functions and let DVSBMH be the associated DVS scheme. For any EF-CMA-adversary A, in the random oracle model, against DVSBMH, with security parameter k which has success ε = Succ ef-cma DVSBMH,A , running time t, and makes q H and q G queries to the random oracles, q Σ queries to the signing oracles and q Υ queries to the verifying oracle, there exists an adversary D for GBDH which has success ε = Succ gbdh Gen,D (k)</p><formula xml:id="formula_13">running in time t ∈ N such that ⎧ ⎪ ⎨ ⎪ ⎩ ε ≥ ε - q Σ (q H + q Σ + 1) 2 nr - (q G + q Σ + 1)(q Σ + q Υ + 1) 2 k1 - (q Υ + 1)(q Σ + 1) 2 k2 t ≤ t +(q H + 2q Σ + 1) (T Exp-G1 + O(1)) +(q G + q Σ + 1)(q G + q Σ + q Υ ) (T DDH + O(1)) ,</formula><p>where</p><formula xml:id="formula_14">k 1 = f 1 (k), k 2 = f 2 (k) and n r = f r (k).</formula><p>Proof. The method of our proof is inspired by Shoup <ref type="bibr" target="#b15">[16]</ref>: we define a sequence of games of modified attacks starting from the actual adversary. Let k be a security parameter, let (q, P 0 , G 0 , P 1 , G 1 , H, e) be a 7-tuple generated by Gen(k 1 ) and (R 1 , R 2 , R 3 ) be a random instance of the GBDH problem.</p><p>Game 0 We consider an EF-CMA-adversary A with success ε = Succ ef-cma DVSBMH,A (k), within time t. The key generation algorithms are run and produce two pairs of keys (sk A , pk A ) and (sk B , pk B ). The adversary A is fed with pk A and pk B and, querying the random oracles H and G, the signing oracle Σ A,B and the verifying oracle Υ A,B , it outputs a (m , (r , s )) pair. We denote by q H , q G , q Σ and q Υ the numbers of queries from the random oracles H and G, from the signing oracle Σ A,B and from the verifying oracle Υ A,B . The only requirement is that the output signature (r , s ) has not been obtained from the signing oracle. When the adversary outputs its forgery, it can be checked whether it is actually valid or not. In any Game j , we denote by Forge j the event DVSBMH.Verify(m , (r , s ), sk B , pk A ) = 1. By definition, we have Pr[Forge 0 ] = Succ ef-cma DVSBMH,A (k). Game 1 We modify the simulation by replacing pk A by R 1 and pk B by R 2 .</p><p>The distribution of (pk A , pk B ) is unchanged since (R -If the H-List includes a quadruple (m, r, ?, ?) we abort the simulation, else we store (m, r, u, Q) in the H-List, -we browse the G-List and check for all triples (s, ⊥, ?) (resp. (⊥, v, ?)) whether (pk A , pk B , uP 1 , s) is a valid Bilinear Diffie-Hellman quadruple (resp. wether u = v). If it does, we abort the simulation, -otherwise, we record (⊥, u, s) in the G-List, and output (r, s). Since there are at most q H +q Σ +1 messages queried to the random oracle H and q G +q Σ +1 messages queried to the random oracle G, the new simulation aborts with probability at most (q</p><formula xml:id="formula_15">H + q Σ + 1) • 2 -nr + (q G + q Σ + 1) • 2 -k1 .</formula><p>Otherwise, this new oracle perfectly simulates the signature. Summing up for all signing queries, we obtain</p><formula xml:id="formula_16">|Pr[Forge 4 ] -Pr[Forge 3 ]| ≤ (q H + q Σ + 1) 2 nr + (q G + q Σ + 1) 2 k1 q Σ Game 5</formula><p>In this game, we make the verifying oracle reject all couples message/signature (m, (r, s)) such that s has not been obtained from G. As in </p><formula xml:id="formula_17">] -Pr[Forge 5 ]| ≤ (q G + q Σ + 1)(q Υ + 1) 2 k1 + q Σ (q Υ + 1) 2 k2 .</formula><p>When the game Game 6 terminates, outputting a valid message/signature (m , (r , s )) pair, by definition of existential forgery, the H-List includes a quadruple (m , r , u , Q ) with Q = u R 3 . By the simulation (pk A , pk B , Q , s ) is a valid Bilinear Diffie-Hellman quadruple, and therefore z = (s ) (u ) -1 gives the solution to the GBDH problem instance (R 1 , R 2 , R 3 ), and we obtained the claimed bounds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4 (Anonymity of DVSBMH).</head><p>Let Gen be a prime-order-BDHparameter-generator, let f 1 , f 2 , f r : N → N be three functions and let DVSBMH be the associated DVS scheme. For any PSI-CMA-adversary A, in the random oracle model, against DVSBMH, with security parameter k which has advantage ε = Adv psi-cma DVSBMH,A (k), running time t, and makes q H and q G queries to the random oracles, q Σ queries to the signing oracles and q Υ queries to the verifying oracle, there exists an adversary D for GBDH which has success ε = Succ gbdh Gen,D (k)</p><formula xml:id="formula_18">running in time t ∈ N such that ⎧ ⎪ ⎨ ⎪ ⎩ ε ≥ ε 2 - q Σ (q H +q + 1) 2 nr - (q G +q Σ + 1) 2 k1 (q Σ + q Υ + 1) - (q Υ + 1)(q Σ + 1) 2 k2 t ≤ t +(q H + 2q Σ + 1) (T Exp-G1 + O(1)) +(q G + q Σ + 1)(q G + q Σ + q Υ ) (T DDH + O(1)) ,</formula><p>where</p><formula xml:id="formula_19">k 1 = f 1 (k), k 2 = f 2 (k) and n r = f r (k).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>We designed an efficient construction for strong DVS based on any bilinear map (which is a variant of DVSBM from <ref type="bibr" target="#b16">[17]</ref>), and clarified the property of anonymity of the signers. Unlike Steinfeld et al., our construction can be instantiated with the discrete exponentiation. In this case, the unforgeability and the privacy of signer's identity are related to the Gap Diffie-Hellman problem, since the discrete logarithm in G 1 is easy. This new scheme offers the best performance in terms of computational cost and signature length. The DVSBMH scheme built on the discrete exponentiation is closely bound to a Diffie-Hellman session key exchange. The general relationship between session key exchange and DVS seems to be an interesting topic for further research.</p><p>to the verifying oracle (respectively). Then there exist ε ∈ [0, 1] and t ∈ N verifying ε ≥ ε 2 -q Υ + q H q Σ + 1 2 k t ≤ t + (q Σ + q Υ )(3T Exp-G + O(1)) such that the DDH problem can be solved with probability ε , within time t .</p><p>Proof. Due to lack of space, the proof will be in the full version of the paper <ref type="bibr" target="#b11">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Security of Saeednia, Kremer and Markowitch's Scheme (SKM)</head><p>The unforgeability of the DVS scheme in <ref type="bibr" target="#b14">[15]</ref> is only considered under a nomessage attack which is not acceptable in terms of security requirements. By using the technique introduced in the proof of Theorem 3, we can prove the unforgeability of SKM's scheme against a chosen message attack:</p><p>Theorem 6 (Unforgeability of SKM Signatures). Let A be an EF-CMAadversary against SKM's scheme with security parameter k, in the random oracle model, which produces an existential forgery with probability ε = Succ ef-cma SKM,A (k), within time t, making q H , q Σ and q Υ queries to the hash oracle, to the signing oracle and to the verifying oracle. Then there exist ε ∈ [0, 1] and t ∈ N verifying ε ≥ ε -(q H + q Σ )q Σ + q Υ 2 k , t ≤ t+(q Σ +q Υ ) (2T Exp-G +O(1))+(q H +q Σ )(q H +q Σ +q Υ ) (T DDH + O( <ref type="formula">1</ref>)) , such that the Gap Diffie-Hellman (GDH) problem can be solved with probability ε , within time t .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 7 (Anonymity of SKM Signatures).</head><p>Let A be a PSI-CMAadversary, in the random oracle model, against SKM's scheme, with security parameter k. Assume that A has advantage ε = Adv psi-cma SKM,A (k), running time t, and makes q H , q Σ , q Υ queries to the hash function H, to the signing oracles and to the verifying oracle. Then there exist ε ∈ [0, 1] and t ∈ N verifying ε ≥ ε 2 -(q H + q Σ )q Σ + q Υ 2 k t ≤ t+(q Σ +q Υ ) (2T Exp-G +O(1))+(q H +q Σ )(q H +q Σ +q Υ ) (T DDH +O(1)) such that GDH can be solved with probability ε , within time t . Proofs. They are straightfoward adaptations of the proof of Theorem 3. Due to lack of space, they will be omitted.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>-A is fed with Epk B , pk B , pk A0 and pk A1 . -In both stages, for any signing query from A, A answers using the secret key of either A 0 or A 1 . For any verifying query from A, A answers using the secret key Dpk B of B and the decryption oracle. -Eventually, in the find stage, A outputs a message m ∈ {0, 1} * . -A computes two pre-signatures σ 0 and σ 1 using the DVS.Sign algorithm of the message m, and queries these signatures to the IND-CCA2 challenger which answers with an encryption of σ b where b ∈ R {0, 1}. -A gives this challenge to A as the answer to the PSI-CMA challenge. The only verification query that A cannot answer is the one A is not allowed to ask. -Finally A outputs a bit b in the guess stage. By definition of A, b = b with probability Adv psi-cma DVS Π ,A and A distinguishes the two messages σ 0 and σ 1 encrypted by Π with the same advantage Adv ind-cca Π,A = Adv psi-cma DVS Π ,A . This concludes the proof.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>1. correctness: a properly formed B-designated verifier signature must be accepted by the verifying algorithm; 2. unforgeability: given a pair of signing keys (pk A , sk</figDesc><table /><note><p>A ) and a pair of verifying keys (pk B , sk B ), it is computationally infeasible, without the knowledge of the secret key sk A or sk B , to produce a valid B-designated verifier signature; 3. source hiding: given a message m and a B-designated verifier signature σ of this message, it is (unconditionally) infeasible to determine who from the original signer or the designated verifier performed this signature, even if one knows all secrets;</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Definition 2 (Strong Designated Verifier Signature Scheme). Given an</head><label></label><figDesc>, Jakobsson et al. suggested a stronger notion of anonymity: integer k, a strong designated verifier signature scheme DVS with security parameter k is a designated verifier signature scheme with security parameter k, which satisfies the following additional property (formally defined in the next section):</figDesc><table><row><cell>4. privacy of signer's identity: given a message m and a B-designated verifier sig-</cell></row><row><cell>nature σ of this message, it is computationally infeasible, without the knowl-</cell></row><row><cell>edge of the secret key of B or the one of the signer, to determine which pair</cell></row><row><cell>of signing keys was used to generate σ.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>1 , R 2 , R 3 ) is a random instance of the GBDH problem. Therefore we have Pr[Forge 1 ] = Pr[Forge 0 ]. Game 2 In this game, we simulate the random oracle H. For any fresh query (m, r) ∈ {0, 1} * × {0, 1} nr to the oracle H, we pick u ∈ [[1, q -1]] at random and compute Q = uR 3 . We store (m, r, u, Q) in the H-List and return Q as the answer to the oracle call. In the random oracle model, this game is clearly identical to the previous one. Hence, Pr[Forge 2 ] = Pr[Forge 1 ]. Game 3 We simulate the random oracle G by maintaining an appropriate G-List. For any query s ∈ H, -we check whether the G-List contains a triple (s, ⊥, s). If it does, we output s as the answer to the oracle call, -else, we browse the G-List and check for all triples (⊥, u, s) whether (pk A , pk B , uP 1 , s) is a valid Bilinear Diffie-Hellman quadruple. If it does, we give s as the answer, -otherwise we pick at random s ∈ {0, 1} k2 , record (s, ⊥, s) in the G-List, and output s as the answer to the oracle call. We have Pr[Forge 3 ] = Pr[Forge 2 ]. Game 4 We now simulate the signing oracle: for any m, whose signature is queried, we pick at random three elements r ∈ {0, 1} nr , s ∈ {0, 1} k2 , u ∈ [[1, q -1]], and compute Q = uP 1 .</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Game 5 of the previous proof, we get |Pr[Forge 5 ] -Pr[Forge 4 ]| ≤ (q Υ + 1)2 -k2 . Game 6 In this game, we finally simulate the verifying oracle. For any couple meswe accept the signature if and only if (pk A , pk B , Q, s) is a valid Bilinear Diffie-Hellman quadruple; else the G-List includes a triple (⊥, v, s) and we accept the signature if and only if u = v. As in Game 6 of the previous proof, we get |Pr[Forge 6</figDesc><table /><note><p>sage/signature (m, (r, s)), whose verification is queried, we check whether the H-List includes a quadruple (m, r, ?, ?). If it does not, we reject the signature. Therefore the H-List includes a quadruple (m, r, u, Q), and we browse the G-List: if it includes a triple (s, ⊥, s),</p></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Ackowledgements. We express our gratitude to Jacques Traoré, Pascal Paillier and Éric Reyssat for their helpful comments. Many thanks to Pierre and Laura for correcting some misprints and our broken english.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Review of Other Schemes</head><p>We refer the reader to <ref type="bibr" target="#b17">[18]</ref>, for the description of these schemes. The DVS schemes induced by SchUDVS 2 and RSAUDVS do not satisfy the PSI-CMA security property. Indeed, the designated verifier secret key is not involved in the verifying algorithm. However it is easy to see that SchDVS 1 , the DVS scheme induced by SchUDVS 1 , fulfills this property assuming the difficulty of the Decision Diffie-Hellman (DDH) problem:</p><p>Theorem 5 (Anonymity of SchDVS 1 ). Let A be a PSI-CMA-adversary, in the random oracle model, against the SchDVS 1 scheme, with security parameter k. Assume that A has advantage ε = Adv psi-cma SchDVS1,A (k), running time t, and makes q H , q Σ , q Υ queries to the hash function H, to the signing oracles and</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Pointcheval: Key-Privacy in Public-Key Encryption</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bellare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Boldyreva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Desai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Asiacrypt&apos;01, Springer LNCS</title>
		<meeting>of Asiacrypt&apos;01, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2248</biblScope>
			<biblScope unit="page" from="566" to="582" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Relations among Notions of Security for Public-Key Encryption Schemes</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bellare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Desai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rogaway</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc of Crypto&apos;98, Springer LNCS</title>
		<meeting>of Crypto&apos;98, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="volume">1462</biblScope>
			<biblScope unit="page" from="162" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Random Oracles are Practical: a Paradigm for Designing Efficient Protocols</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bellare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rogaway</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 1st ACM Conference on Computer and Communications Security</title>
		<meeting>of 1st ACM Conference on Computer and Communications Security</meeting>
		<imprint>
			<date type="published" when="1993">1993</date>
			<biblScope unit="page" from="62" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Identity-based Encryption from the Weil Pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Computing</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="586" to="615" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Short Signatures from the Weil Pairing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lynn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc of Asiacrypt&apos;01, Springer LNCS</title>
		<meeting>of Asiacrypt&apos;01, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2248</biblScope>
			<biblScope unit="page" from="514" to="532" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Efficient and Generalized Group Signatures</title>
		<author>
			<persName><forename type="first">J</forename><surname>Camenisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc of Eurocrypt&apos;97, Springer LNCS</title>
		<meeting>of Eurocrypt&apos;97, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">1233</biblScope>
			<biblScope unit="page" from="465" to="479" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Private Signature and Proof Systems. United States Patent 5</title>
		<author>
			<persName><forename type="first">D</forename><surname>Chaum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">493</biblScope>
			<biblScope unit="page">614</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Signature Scheme as Secure as the Diffie-Hellman Problem</title>
		<author>
			<persName><forename type="first">E.-J</forename><surname>Goh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Jarecki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc of Eurocrypt&apos;03, Springer LNCS</title>
		<meeting>of Eurocrypt&apos;03, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2656</biblScope>
			<biblScope unit="page" from="401" to="415" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A digital signature scheme secure against adaptative chosen-message attacks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Micali</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. of Computing</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="281" to="308" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Impagliazzo: Designated Verifier Proofs and their Applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Jakobsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Sako</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurocrypt&apos;96, Springer LNCS</title>
		<meeting>of Eurocrypt&apos;96, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="1996">1996</date>
			<biblScope unit="volume">1070</biblScope>
			<biblScope unit="page" from="142" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Vergnaud: Efficient and Provably Secure Designated Verifier Signature Schemes from Bilinear Maps. Crypto&apos;03 rump session</title>
		<author>
			<persName><forename type="first">F</forename><surname>Laguillaumie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rapport de Recherche LMNO</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page">pages</biblScope>
			<date type="published" when="2003">2003. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Designated Verifier Signatures: Anonymity and Efficient Construction from any Bilinear Map</title>
		<author>
			<persName><forename type="first">F</forename><surname>Laguillaumie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Vergnaud</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Full version, IACR e-print</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Pointcheval: The Gap-Problems: a New Class of Problems for the Security of Cryptographic Schemes</title>
		<author>
			<persName><forename type="first">T</forename><surname>Okamoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of PKC&apos;01 Springer LNCS</title>
		<meeting>of PKC&apos;01 Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">1992</biblScope>
			<biblScope unit="page" from="104" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Tauman: How to Leak a Secret</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Asiacrypt&apos;01, Springer LNCS</title>
		<meeting>of Asiacrypt&apos;01, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="volume">2248</biblScope>
			<biblScope unit="page" from="552" to="565" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Markowitch: An Efficient Strong Designated Verifier Signature Scheme</title>
		<author>
			<persName><forename type="first">S</forename><surname>Saeednia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kremer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ICISC 2003, Springer LNCS</title>
		<meeting>of ICISC 2003, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2836</biblScope>
			<biblScope unit="page" from="40" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Shoup: OAEP reconsidered</title>
		<author>
			<persName><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Cryptology</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="223" to="249" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Universal Designated Verifier Signatures</title>
		<author>
			<persName><forename type="first">R</forename><surname>Steinfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pieprzyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Asiacrypt&apos;03, Springer LNCS</title>
		<meeting>of Asiacrypt&apos;03, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="volume">2894</biblScope>
			<biblScope unit="page" from="523" to="542" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Efficient Extension of Standard Schnorr/RSA signatures into Universal Designated-Verifier Signatures</title>
		<author>
			<persName><forename type="first">R</forename><surname>Steinfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pieprzyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of PKC&apos;04, Springer LNCS</title>
		<meeting>of PKC&apos;04, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">2947</biblScope>
			<biblScope unit="page" from="86" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Mu: Identity-based Strong Designated Verifier Signatures Schemes</title>
		<author>
			<persName><forename type="first">W</forename><surname>Susilo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACISP&apos;04, Springer LNCS</title>
		<meeting>of ACISP&apos;04, Springer LNCS</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">3108</biblScope>
			<biblScope unit="page" from="313" to="324" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
