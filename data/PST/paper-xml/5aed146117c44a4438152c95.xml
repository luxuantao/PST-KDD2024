<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Data Illustrator: Augmenting Vector Design Tools with Lazy Data Binding for Expressive Visualization Authoring</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Zhicheng</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">John</forename><surname>Thompson</surname></persName>
							<email>jrthompson@gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Alan</forename><surname>Wilson</surname></persName>
							<email>alawilso@adobe.com</email>
							<affiliation key="aff1">
								<orgName type="institution">Adobe Systems Inc</orgName>
								<address>
									<settlement>Seattle, Atlanta, Lehi</settlement>
									<region>WA, GA</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">UT &amp;</orgName>
								<address>
									<settlement>San Francisco</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mira</forename><surname>Dontcheva</surname></persName>
							<email>mirad@adobe.com</email>
						</author>
						<author>
							<persName><forename type="first">James</forename><surname>Delorey</surname></persName>
							<email>delorey@adobe.com</email>
							<affiliation key="aff1">
								<orgName type="institution">Adobe Systems Inc</orgName>
								<address>
									<settlement>Seattle, Atlanta, Lehi</settlement>
									<region>WA, GA</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">UT &amp;</orgName>
								<address>
									<settlement>San Francisco</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sam</forename><surname>Grigg</surname></persName>
							<email>grigg@adobe.com</email>
							<affiliation key="aff1">
								<orgName type="institution">Adobe Systems Inc</orgName>
								<address>
									<settlement>Seattle, Atlanta, Lehi</settlement>
									<region>WA, GA</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">UT &amp;</orgName>
								<address>
									<settlement>San Francisco</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Bernard</forename><surname>Kerr</surname></persName>
							<email>bkerr@adobe.com</email>
							<affiliation key="aff1">
								<orgName type="institution">Adobe Systems Inc</orgName>
								<address>
									<settlement>Seattle, Atlanta, Lehi</settlement>
									<region>WA, GA</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">UT &amp;</orgName>
								<address>
									<settlement>San Francisco</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">John</forename><surname>Stasko</surname></persName>
							<email>stasko@gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Adobe</forename><surname>Research</surname></persName>
						</author>
						<title level="a" type="main">Data Illustrator: Augmenting Vector Design Tools with Lazy Data Binding for Expressive Visualization Authoring</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">EAE2A3607276F64BB0B2206BE0F1D140</idno>
					<idno type="DOI">10.1145/3173574.3173697</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.5.m. Information Interfaces and Presentation (e.g. HCI): UI Data visualization</term>
					<term>graphic design</term>
					<term>interaction techniques</term>
					<term>framework</term>
					<term>authoring</term>
					<term>systems</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Building graphical user interfaces for visualization authoring is challenging as one must reconcile the tension between flexible graphics manipulation and procedural visualization generation based on a graphical grammar or declarative languages. To better support designers' workflows and practices, we propose Data Illustrator, a novel visualization framework. In our approach, all visualizations are initially vector graphics; data binding is applied when necessary and only constrains interactive manipulation to that data bound property. The framework augments graphic design tools with new concepts and operators, and describes the structure and generation of a variety of visualizations. Based on the framework, we design and implement a visualization authoring system. The system extends interaction techniques in modern vector design tools for direct manipulation of visualization configurations and parameters. We demonstrate the expressive power of our approach through a variety of examples. A qualitative study shows that designers can use our framework to compose visualizations.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>Graphic designers have been producing infographics and charts well before the recent proliferation of computer generated visualizations <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b36">37]</ref>. As visualization becomes an increasingly popular medium for storytelling and communication, there is a renewed and growing interest to understand visualization creation from the perspective of graphic design <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b55">56,</ref><ref type="bibr" target="#b56">57]</ref>. Prior studies show that graphic designers approach visualization authoring differently from computer scientists: they often start by thinking about the high-level Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. appearance of a visualization in terms of layout and space configuration, and focus on encoding real data into the visuals later <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b55">56]</ref>. The discipline of graphic design has also established a rich set of concepts and tools that are widely used in the community. For example, professional vector editors enable designers to work with shape geometries at the level of anchor points and curve segments. The grid system and smart guides serve as two powerful tools to precisely structure visual elements and configure display space <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b55">56]</ref>.</p><p>Despite the plethora of existing visualization creation tools, few tried to incorporate designers' workflow and practices into system and interface design. Vuillemot and Boy <ref type="bibr" target="#b55">[56]</ref> argue that most visualization tools follow a bottom-up, data-to-graphics process as described in the information visualization (InfoVis) reference model <ref type="bibr" target="#b7">[8]</ref>: starting with data, one performs data transformation, visual mapping, and view transformation to generate visualizations. This model informed the development of powerful visualization algebra and declarative languages <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b48">49,</ref><ref type="bibr" target="#b51">52,</ref><ref type="bibr" target="#b57">58]</ref>. However, these tools often require coding expertise, or are not flexible enough for design practices. Systems like Lyra <ref type="bibr" target="#b47">[48]</ref> and iVisDesigner <ref type="bibr" target="#b43">[44]</ref> offer graphical user interfaces (GUI) for visualization authoring without programming, thus are more flexible. These efforts start with template or grammar-based visualization generation engines, and design interfaces for changing generative parameters. Such approaches still need to reconcile the potential tension between flexible change of graphical configurations and the formalism imposed by generation engines <ref type="bibr" target="#b3">[4]</ref>. To bridge the gap between generation engines and drawing tools, Hanpuku <ref type="bibr" target="#b3">[4]</ref> implements a streamlined model for visualization authoring across multiple tools.</p><p>the grammar or model assumed by the system. Furthermore, vector design tools are highly flexible and expressive: with enough time and patience, one can create virtually any graphics. Augmenting these tools with data encoding support can reduce manual effort without disrupting designers' workflows.</p><p>The lazy data binding approach is promising, but needs to be developed further to support a wide variety of visualizations. Data-Driven Guides <ref type="bibr" target="#b31">[32]</ref> only focus on infographics with simple layouts. d3-gridding <ref type="bibr" target="#b55">[56]</ref> primarily supports design mockups, and still requires programming. It remains a challenge for designers to create high-fidelity data visualizations with complex visual mappings and layouts.</p><p>Consider the visualizations in Figure <ref type="figure" target="#fig_1">1</ref>: Figure <ref type="figure" target="#fig_1">1</ref>(a) is a slope graph used on the cover of Alberto Cairo's book The Functional Art <ref type="bibr" target="#b6">[7]</ref>, showing U.S. states' obesity and education percentages (hereafter referred as the "Obesity vs. Education" visualization); Figure <ref type="figure" target="#fig_1">1</ref>(b) visualizes the NBA draft over the past 20 years (x axis) and the order of players in terms of draft pick (y axis) <ref type="bibr" target="#b14">[15]</ref> (hereafter referred as the "NBA Redraft" visualization); Figure <ref type="figure" target="#fig_1">1(c</ref>) is a multi-series line graph visualizing four companies' monthly stock prices <ref type="bibr" target="#b35">[36]</ref> (hereafter referred as the "Stock Prices" visualization); Figure <ref type="figure" target="#fig_1">1(d)</ref> is "A Field Guide to Red and Blue America" by Wall Street Journal, showing the PVI (Partisan Voter Index) for each state over the past 9 elections <ref type="bibr" target="#b60">[61]</ref> (hereafter referred as the "Red and Blue America" visualization). Each small bar chart represents a state, and is positioned according to US geography.</p><p>Designers might be able to use existing drawing tools or Data-Driven Guides to create these examples, but the process will be painful. Generating shapes or points on lines (Figure <ref type="figure" target="#fig_1">1(c)</ref>) can be tedious and slow; organizing the shapes into meaningful layouts (Figure <ref type="figure" target="#fig_1">1</ref>(b) and (d)) and map data to positions and color (Figure <ref type="figure" target="#fig_1">1</ref>(c)) are daunting manual tasks. To enable designers to keep using the powerful drawing tools and to automate the repetitive work, we need a systematic framework with sufficient descriptive and generative power.</p><p>In this paper we propose a novel framework for visualization authoring based on the lazy data encoding approach. This framework describes components in a visualization using graphic design concepts such as shape, anchor point, segment, and group. Two operators, repeat and partition, generate shapes and anchor points, and attach data to them. The resultant visual components each has a data scope, and are considered peers of each other inside a collection. Collections use layouts to arrange shapes, and can be nested to create more complex organizations. Data serves as constraints when bound to visual properties, and unbound properties can be freely manipulated. These components and operators can describe the structure and generation of a wide range of visualizations.</p><p>Informed by the framework, we design and implement the Data Illustrator system. We augment interactive techniques in modern vector design tools for direct manipulation of visualization configurations and parameters. We demonstrate the expressive power of our approach through a range of examples. To better understand the strengths and limitations of our approach, we conduct a qualitative user study with 13 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FORMATIVE STUDY AND DESIGN ITERATIONS</head><p>To understand how different visualizations could be described and created from a graphic design perspective, we held onehour weekly meetings with three designers over a period of two years. All three designers have more than ten years of experience in graphic design, digital illustration, web design and print design. Two of the designers have also created infographics and data visualizations on a regular basis as part of their work. The designers frequently used applications such as Adobe Photoshop <ref type="bibr" target="#b24">[25]</ref>, Illustrator <ref type="bibr" target="#b22">[23]</ref>, InDesign <ref type="bibr" target="#b23">[24]</ref> and Experience Design (XD) <ref type="bibr" target="#b21">[22]</ref>, Sketch <ref type="bibr" target="#b9">[10]</ref>, and Figma <ref type="bibr" target="#b11">[12]</ref>. These applications represent the industry standard for design professionals. They share a similar set of features and tools, varying in terms of interaction and interface design.</p><p>In the initial meetings, we collected visualizations by sampling chart types from systems like Tableau <ref type="bibr" target="#b50">[51]</ref> and stylistic information graphics from websites such as "the Kantar Information is Beautiful Awards" <ref type="bibr" target="#b30">[31]</ref>. Each week we asked the designers to describe at a high level how they would create one of these visualizations and demonstrate the workflow using the tools of their choice. We told the designers to assume that the system would take care of data binding automatically. These exercises helped us understand designers' way of thinking and workflow through concrete examples, and familiarized ourselves with an assortment of professional design tools.</p><p>Three main tasks are key in visualization authoring. Designers performed the following three tasks for all the examples: (1) sketch and generate shapes, which were accomplished by drawing tools (e.g. Pen Tool in Adobe XD) and duplication tools (e.g. Copy &amp; Paste), (2) arrange and organize shapes, where grids and groups were extensively used, and (3) bind data to visual properties, which was not supported in most design tools. Two pieces of insight were consistent with previous findings <ref type="bibr" target="#b52">[53]</ref>, and directly informed the focus on repeat and layout in our framework: repeated shapes were dominant in data visualizations, and position encoding were often relational instead of data-driven (i.e. a shape's position depended on the placement of related shapes).</p><p>Workflow is largely top-down, but data is not always an afterthought. Observations from these exercises confirmed our intuition and previous findings <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b55">56]</ref> that designers think about graphical aspects of visualizations before data encoding. However, the authoring processes were not strictly divided into a visual design stage followed by a data encoding stage. When drawing and manipulating shapes, sometimes it was beneficial to bring in real data. For example, one designer showed how he would use the Blend Tool <ref type="bibr" target="#b27">[28]</ref> in Illustrator to create multiple copies of a shape. He first drew two shapes on canvas, and then used the Blend Tool to interpolate a predefined number of shapes between them. Instead of having to define an arbitrary number, the designer wanted automatic generation of the number based on real data.</p><p>Direct manipulation enhances flexibility and reduces semantic distance. Designers treat the canvas not only as a scene for production, but also a playground for experimenting with ideas. It is important that they can flexibly and quickly sketch shapes, and change visual configurations or appearances with full control and precision. All the designers greatly valued direct manipulation features that gave them immediate visual feedback. Simple operations such as dragging corners to resize a shape, or dragging shapes to move them around can be immensely useful. Such features are commonplace in design tools, but are rarely supported in visualization systems.</p><p>In the second phase of the formative study, we explored how existing design tools could be directly used or augmented to support the three main tasks. We conducted weekly design meetings for 15 months. Each week we created a storyboard to illustrate step-by-step visualization authoring scenarios. In total we produced about 40 design sketches and mockups. For instance, we spent one month brainstorming how to augment existing design tools to create visualizations in the line graph category. In a line graph, one polyline plots all the data, and the points on the line represent individual data cases. Grammar-based approaches solve this problem through declarative specification (e.g. line(position(date * value)) <ref type="bibr" target="#b59">[60]</ref>) . To designers, however, such specification did not make sense because a line's position refers to the coordinates of its bounds. Taking a graphics-centric approach, we created storyboards based on different ideas such as repeating points along a line, duplicating a point multiple times and connecting the dots, and dividing a line into segments. We then collected designers' feedback and eliminated ideas that sounded bizarre to them. A great challenge we faced was to construct a coherent set of concepts and tools that behave consistently for diverse visualizations. Often an idea seemed feasible for one visualization design, but turned out to be inconsistent with new examples.</p><p>In addition to a single line graph, we needed to consider more complex cases such as small multiples of line graphs or multiple lines in a single chart. Moreover, slope graphs and parallel coordinate plots also use line as a visual primitive, but in different ways from a line graph. These diverse visualizations added complexity to the construction of a coherent framework. We kept iterating on the ideas as new use cases arose. After a few months of storyboard creation, we distilled a set of concepts and tools that worked consistently across different visualizations. We then started implementing a prototype which helped further concretize the ideas, and the iterations on framework and interaction designs continued towards the end of the prototyping process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THE DATA ILLUSTRATOR FRAMEWORK</head><p>The principle of consistency underpins the creation of our framework. If we borrow an existing design concept, its meaning and behavior must be consistent with the way it is used in existing design applications. Otherwise we need to devise a new concept. For example, symbol is widely adopted in mainstream vector design tools. Users can turn any visual object into a symbol (akin to the concept of class in computer science), and create many instances of the symbol. Changes to the symbol will be propagated to the instances. We tried to use symbol to describe the generation of visualizations, but eventually decided that it was a stretch to apply it in the context of visualization authoring. To explain the framework, we use the visualizations in Figure <ref type="figure" target="#fig_1">1</ref> as running examples.</p><p>Shapes, Anchor Points and Segments Shapes are the building blocks of visualizations. In professional design tools, shapes are represented as series of anchor points connected by line or curve segments. Table <ref type="table" target="#tab_0">1</ref> shows a few shape types, with information on the number of anchor points, the number of segments, and whether the path is open or closed. A line is the shape primitive for Figure <ref type="figure" target="#fig_1">1</ref> Repeat and Partition After sketching a shape primitive, designers can use the repeat and partition operators to generate shapes and attach data to them (Table <ref type="table">2</ref>). Repeat creates multiple copies of a shape, and is inspired by duplication tools (e.g. Repeat Grid in Adobe XD, Duplicate in Sketch); Partition divides a shape into constituent parts, and draws inspirations from the Knife Tool and Scissors Tool <ref type="bibr" target="#b25">[26]</ref> in Adobe Illustrator. In general, the partition operator divides a shape into its constituent parts by a categorical variable. How the division works depends on the shape type, for example, a circle is divided into slices of pie (Table <ref type="table">2</ref>).</p><p>Data Scope A shape's data scope refers to its attached data rows as a result of the repeat or partition operator. The data scope is usually a subset of the original dataset, described by Collection vs. Group After repeat (Figure <ref type="figure" target="#fig_3">2</ref>), we have a collection of lines or rectangles for each of the four examples in Figure <ref type="figure" target="#fig_1">1</ref>. This collection may be considered as a "group": in all the design applications, multiple shapes can be grouped so that they can be moved, scaled or copied at once. In our framework, however, collection and group are two distinct concepts. Table <ref type="table">3</ref> explains the differences between them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Collection Group</head><p>A collection of polylines, delineated by green dotted borders. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 3: The differences between a collection and a group</head><p>Layout To arrange the lines and rectangles in a collection, we apply a layout to the collection. Table <ref type="table">3</ref> shows an example of a grid layout with one column and four rows. The pink lines are the grid cell boundaries. In general, we can apply the following types of layout to a collection generated by repeat: freeform (i.e. no layout), grid, stack, and packing. Grid layout is an essential tool supported by most design applications. Stack layout exists in fewer applications (e.g. Auto-Layout <ref type="bibr" target="#b1">[2]</ref> in Sketch), but is an important feature in visualizations. The main differences between a grid layout and a stack layout include: (1) a grid is two dimensional (rows and columns), a stack is one dimensional (horizontal or vertical); (2) all the grid cells have the same size, and the size of the collection depends on the cell size and number of cells; in a stack layout, the size of the collection is the sum of all the children's sizes. A packing layout is a space-filling arrangement: the layout is equivalent to a Treemap for rectangle shapes, and a packed bubble chart for circles.</p><p>Both the grid and stack layouts have a coordinate space parameter consisting of two values: Cartesian and Polar. Grid layout in the polar space is inspired by the Polar Grid Tool <ref type="bibr" target="#b26">[27]</ref> in Adobe Illustrator. Similarly, stack layout has a corresponding representation in the Polar space.</p><p>Nested Collection Collections can be nested to create small multiples or visualizations with nested layouts (e.g. stacked bar chart) <ref type="bibr" target="#b29">[30]</ref>. We have seen how to create a nested collection in Figure <ref type="figure" target="#fig_4">3</ref>(b): first repeat a rectangle by Year to get a collection, then partition the rectangles in the collection by Player. This procedure will generate the structure in the "NBA Redraft" visualization, if we apply a one-row grid layout to the top level collection, and a one-row grid layout to the inner collections obtained from partitioning. Nested collections can also be created by repeating a collection.</p><p>Lazy Data Binding as Constraint By default, the lines or rectangles generated by repeat or partition behave as regular vector graphics. Users can select, scale, move, rotate, align, distribute, and delete the shapes. Even after we have organized these shapes in a collection and their positions are constrained by the layout, we can still move the collection as a whole, or edit the anchor points' position and stroke color. Such flexibility allows manual encoding of shape properties, which could be tedious. Automatic data encoding reduces the manual efforts needed, and serves as additional constraints on the manipulability of visual components.</p><p>Say we want the stroke color of the four polylines in Table <ref type="table">3</ref> to represent Company to match the "Stock Prices" visualization. We specify a data binding consisting of four parameters: a data variable (Company), a visual property (Stroke Color), a list of visual components([line1, line2, line3, line4]), and an aggregator (e.g. Sum or Mean) if the data variable is numerical and we need to aggregate multiple values. Once applied, the data binding locks the Stroke Color property and prevents it from interactive manipulation. It is still possible to change the range or domain of the scale, which in turn updates the colors. Unconstrained interaction is restored if the data binding is removed.</p><p>The data binding operator executes in three steps. First, it computes a list of data values, one per visual component, based on the component's data scope and the aggregator. In the "Stock Prices" visualization, the data values are the four companies. Second, the binding operator creates a scale. The scale type depends on the data variable type and the visual property (the choice of scale type closely follows the guidelines in D 3 <ref type="bibr" target="#b5">[6]</ref>); the scale's domain encompasses the data values computed in the previous step; and the scale's range is determined by the visual property values. Finally, the binding operator transforms the list of data value into property values using the scale, and sets the visual properties. Many systems offer automatic data binding support similar to the description above. Our framework differs in the lazy binding as constraint approach.</p><p>Peers Binding Company to Stroke Color results in a unique stroke color for each polyline (Figure <ref type="figure" target="#fig_6">4(a)</ref>). Next we need to bind Date to the x position and Price to the y position of the anchor points to create the "Stock Prices" visualization. Here we want the data binding to apply to all the anchor points on all the lines. To create the "Obesity vs. Education" visualization, the data binding works differently. In Figure <ref type="figure" target="#fig_3">2</ref>(a) we have repeated a line by State, applying a grid layout to the collection gives us the result in Figure <ref type="figure" target="#fig_6">4(b)</ref>. We then need to bind BA Degree % to y position of the first anchor point in each line only, and to bind Obesity % to y position of the last anchor points only.</p><p>To distinguish these cases and convey how the data binding will work clearly to the users, we introduce the concept of peers. Shapes generated by repeat or partition are peers of each other. For example, the four polylines in Table <ref type="table">3</ref> are peers to each other. What constitutes the peers of an anchor point depends on whether the anchor point has a data scope. When we draw a line and then repeat it by data, the anchor points have no data scopes. The peers of an anchor point are the anchor points at the same index on peer shapes (Figure <ref type="figure" target="#fig_6">4(b)</ref>). When we partition a line by data, the anchor points are generated and associated with data. All these anchor points are thus considered peers of each other. If we repeat a partitioned line by data, all the anchor points on all the lines are peers of each other (Figure <ref type="figure" target="#fig_6">4(a)</ref>). The concept of peers helps clarifying which visual components should be affected by a data binding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Layout Taking Precedence over Position Binding</head><p>The structure enforced by layouts sometimes may be in conflict with binding data to positions. In such cases, the layout takes precedence over position binding. For example, with the four polylines arranged in a grid layout (Figure <ref type="figure" target="#fig_6">4</ref>(a)), after binding data to the positions the anchor points, we obtain Figure <ref type="figure" target="#fig_7">5(a)</ref>. The framework describes the structure and generation of the backbone of the visualizations. In the actual authoring processes, we still need to perform many lower-level tasks, such as configuring the parameters of a layout, ordering and filtering the collection children, and setting the scale range for data binding. In the next section, we discuss the design of the authoring interface based on this framework, so that we can operationalize the framework with flexibility and control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTERFACE AND DESIGN RATIONALE</head><p>We designed the Data Illustrator application with the following design goals in mind: familiarity, interpretability, discoverability, and control. Realizing these design goals is a crucial step to ensure that our target audience comprehends and enjoys working with a complex authoring tool. Familiarity ensures that the user's previous experience will match their expectations; therefore if our tool uses a feature from an existing vector editing application, we want that feature to be consistent in appearance and behavior. In the case when a novel feature is needed, the design should be interpretable by the user. Interpretability requires the result of a user action to be immediately comprehended, an important requirement during generative data-bindings. Discoverability on the other hand ensures that the interface design shows affordances for interaction so that users can detect the possibility of an action with a visual object. Finally, users need to feel that they are in control at every step of the process to realize their design, especially when the system automatically generates aspects of their work.</p><p>The interface of Data Illustrator consists of seven components (Figure <ref type="figure" target="#fig_8">6</ref>). The Canvas provides space to draw, select and manipulate shapes. The Toolbar on the left contains tools for selecting and drawing shapes -only one can be active at a time. Directly to its right, the Data Variables Panel supports dataset file management. Below that is the Layers Panel which allows users to inspect the canvas. The Actionbar on the far right supports actions for associating data to shapes. Directly below, the Property Inspector displays editable attributes of the currently selected shapes. Finally, the Data Table Panel at the bottom shows all the rows and columns of the dataset and reveals the data scopes of the currently selected shapes.  Selecting Visual Components Selection is a prerequisite for operations such as changing visual properties, transforming objects, associating objects with data, or binding data to attributes. Data Illustrator supports two types of selection: (1) the Select Tool works on shapes and collections of shapes, (2) the Direct Select Tool works on anchor points and line/curve segments of shapes. The Direct Select Tool is a powerful feature in applications such as Illustrator, providing essential control to edit paths and deform regular shapes (e.g. rectangles). Both selection tools use familiar interactions such as: click to single select, shift+click to add to a selection, click+drag to lasso a selection, and clicking on the canvas to deselect. Selection tools are also used to transform objects: click+drag on an object to move it, click+drag on a bounding box corner to re-size a shape, or pressing an arrow key to nudge the selection. The rich selection of interactions in Data Illustrator provides the precise control required by designers. All user interactions in Data Illustrator are developed using RxJS <ref type="bibr" target="#b42">[43]</ref> and Backbone.js <ref type="bibr" target="#b12">[13]</ref>.</p><p>Working with Data Data Illustrator allows users to work with one tabular dataset at a time. Users can choose from a spectrum of sample datasets from various sources, or upload a CSV file from their own computer. Upon loading a dataset, the system infers the data types of each column with the Datalib library <ref type="bibr" target="#b18">[19]</ref>, displays data column summaries in the Data Variables panel, and shows the complete dataset in the Data Table <ref type="table">panel</ref>. The Data Table also acts as an inspector for the data scopes of the currently selected visual items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Context-Sensitive Interface</head><p>We design the interface to be context-sensitive so that users can understand the possibility of actions at any state. The buttons in the Actionbar are enabled and disabled based on selection on the canvas. For example, if a group is selected, the "Partition" button is disabled, indicating that partitioning a group is not allowed. Similarly, the Property Inspector displays a set of property controls based on the shape type of current selection.</p><p>Repeating Repeat actions begin with the selection of a visual object (i.e. shape, group of shapes, or collection). Clicking the Repeat button displays a preview of how the selection will be repeated by a categorical variable. The preview supports changing the categorical variable. Upon confirmation, the repeat action duplicates the selected object, and places the two objects in a default grid layout. We chose to generate only two copies of the object because for large datasets, the number of objects will be overwhelming. To enable designers to control the number of objects to work on, we augment the Repeat Grid tool from Adobe XD (Figure8(a)). Users control the number of generated objects and the grid layout parameters by the following interactions: click+drag handles to display additional rows or columns, click+drag padding to adjust spacing, double-click to open the collection and select objects inside. Dragging past the total shapes allotted by data does not generate further repeated shapes. Partitioning Like the repeat action, the partition action requires a selection of a shape with or without a data scope. Groups or collections cannot be partitioned. Clicking the Partition button will display a preview of how the selected shape will be divided. Changing the data variable updates the preview auxiliary lines. Partitioning a rectangle results in a stack layout of the sliced rectangles. Unlike the grid layout, the stack layout does not support padding. Nested structures can be created by partitioning a shape multiple times -the data hierarchy limits the number of partition actions.</p><p>Peers Peers are the atomic objects created by repeat and partition actions. Similar to symbols in Sketch, or components in Figma, peers share visual properties. Upon selecting any shape, Data Illustrator highlights its peers with a faint blue to show linkage between peers. This design applies to anchor points and segments as well (Figure <ref type="figure" target="#fig_11">9</ref>). Changes to a shape are instantaneously updated to its peer shapes. Properties shared between peers include: appearance, scaling, positioning anchor points or line segments, and data-bindings. The only non-linked property is shape position. Grid and stack layouts provide positioning to peers. When the user breaks a layout, the peer shapes can be positioned freely.</p><p>Breaking a layout is an irreversible action. Removing a grid layout poses a problem for controlling the number of displayed shapes without handles to reveal rows and columns. To remedy the loss of control over peer shape display, Data Illustrator provides a Peer Count slider in the Property Inspector.</p><p>Lazy Data-Bindings To map visual attributes to data, the user selects any object on the canvas. The Property Inspector populates with the corresponding set of properties. To bind data to property, tools such as Tableau or Lyra let users drag and drop a variable to a property field. We did not choose this design because dragging and dropping require significant cursor movement, and it is not clear which variables can be mapped to a given property. In our design, the user clicks the binding icon next to the property control, which displays a list of applicable data columns (Figure <ref type="figure" target="#fig_12">10 left</ref>). Selecting a data column creates a data binding between the underlying data scope and that visual property for all peer objects. For each binding, the system creates a scale, where the range depends on the current values of the visual property. For example, position bindings use the bounds of all peer shapes, and continuous color bindings use the original hue of the selected object.  Interactive Axes and Legends Data Illustrator automatically creates interactive axes and legends upon successful completion of data bindings. Axes and legends in Data Illustrator are explanatory -acting as a reference for the databinding, and configurable -supporting direct manipulation of the underlying scale. Upon their creation, Data Illustrator momentarily highlights axes and legends to help the user discover the afforded interactions. Users can adjust the offset of an axis with constraints: they can only move an x axis vertically, and a y axis horizontally. When the user moves an axis' peer objects, the axis follows, retaining its relative position. The user can click+drag on the axis handle to configure the underlying scale's range (Figure <ref type="figure" target="#fig_13">11</ref>(a) and (b)), which updates the bound objects instantaneously. For categorical axis, users can define the order of objects in two ways: 1) sort the objects in a collection through the "ordered by" property control slider, 2) directly drag the axis text labels to reorder objects.</p><p>Color legends can be re-positioned anywhere on the canvas. They augment designs of color palettes and color gradients from mainstream vector editors. For categorical color legends, users change colors to replace the default colors picked by the system (Figure <ref type="figure" target="#fig_13">11(c)</ref>). For numerical color legends, users can select the color for each stop, add a stop by a single click, and remove a stop by dragging it away (Figure <ref type="figure" target="#fig_13">11(d)</ref>). Changes to a color legend are immediately applied to its bound peers. Furthermore, axes and legends of the same semantic type can be linked or merged to support consistent data-bindings across collections -a concept pioneered by Claessen and Wijk <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RELATED WORK Visualization Grammars and Programming Toolkits</head><p>Graphical grammars <ref type="bibr" target="#b59">[60,</ref><ref type="bibr" target="#b58">59,</ref><ref type="bibr" target="#b16">17]</ref> have served as the basis for powerful and expressive data visualization toolkits such as ggplot <ref type="bibr" target="#b57">[58]</ref>. The grammars from Wilkinson <ref type="bibr" target="#b59">[60]</ref> and Wickham <ref type="bibr" target="#b58">[59]</ref> both follow a bottom-up approach: starting from data, aesthetic mappings from variables and coordinate systems drive the visual form of the graphic. Our framework assumes sketched shapes instead of data as the starting point. Data is only incorporated into graphics as necessary.</p><p>Declarative languages <ref type="bibr" target="#b16">[17]</ref> provide a higher-level abstraction for constructing interactive visualizations by de-coupling specification from execution. Visualization toolkits built along this research direction <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b28">29]</ref> simplify the construction of visualizations while preserving a broad design space. D 3 in particular, provides powerful capabilities in an accessible form, while supporting design freedom beyond data-driven mappings. Designers can create annotations, visual embellishments and additional structure alongside the declarative data mappings supported by D 3 . The popularity of D 3 has been attributed to its re-use of an ubiquitous medium: the Document Object Model (DOM). Our approach strives to mimic this paradigm, as D 3 enables direct manipulation of the DOM, we augment vector editing tools to interact with the scene graph. While D 3 requires designers to select, bind, and style DOM elements with JavaScript code, we provide a visual and direct manipulation approach for non-programmers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Interactive Visualization Design Tools</head><p>Numerous efforts support visualization authoring in a nonprogramming, interactive environment. Rost <ref type="bibr" target="#b45">[46]</ref> reviews twelve of these interactive tools by comparing her experience re-creating Rosling's iconic GapMinder visualization <ref type="bibr" target="#b44">[45]</ref> with each tool. Grammel et. al <ref type="bibr" target="#b15">[16]</ref> provide a comprehensive survey of different categories of tools used to construct visualizations. Chart typology tools are a popular category of visualization design tools because of their ease-of-use. They provide users with a selection of templated charts to choose from (e.g. Many Eyes <ref type="bibr" target="#b54">[55]</ref>, DataWrapper <ref type="bibr" target="#b13">[14]</ref>, Raw <ref type="bibr" target="#b10">[11]</ref>, Plotly <ref type="bibr" target="#b41">[42]</ref>). These tools quickly generate charts for users to compare design alternatives, however users are restricted to a predefined set of chart types and only a handful of customization options.</p><p>More robust and advanced tools such as Tableau provide approachable features such as recommending chart generation and automating best practices. Tableau is based on a table algebra framework <ref type="bibr" target="#b51">[52]</ref>, where operators such as cross and nest work solely on data. Visual marks only appear in a later stage of the pipeline. In our framework, operators such as repeat and partition primarily work on visual components, with data as ingredients. Tableau also supports detail-oriented customizations on scales and visual configurations, but these customizations often have to be accomplished through dialogs. Our approach brings the customization of scales, axes and legends directly to the canvas with direct manipulation widgets.</p><p>Recent data visualization research has sought to empower designers to create expressive visualizations without the need to program. Tools such as Lyra <ref type="bibr" target="#b47">[48]</ref> and iVisDesigner <ref type="bibr" target="#b43">[44]</ref> aim to provide users with the power of declarative toolkits in a familiar vector editing interface. Both systems employ higherlevel representations of the scene graph: Lyra is built upon the Vega visualization grammar <ref type="bibr" target="#b28">[29]</ref>, while iVisDesigner's custom framework supports templated plots. User interaction modifies the abstraction, which in turn updates visualization rendering. In our approach, we do not have such abstractions: user interaction directly translates to operations on the scene graph. This choice allows us to focus on the interface and interaction design first, while the system architecture and visualization model come second.</p><p>Our work continues the line of research that explores visualization composition using graphical primitives. In early research such as SageBrush <ref type="bibr" target="#b46">[47]</ref>, users choose chart type from a list of prototypes, add graphemes to the prototype, and specify mappings between data and grapheme properties. SketchStory <ref type="bibr" target="#b32">[33]</ref> and SketchInsight <ref type="bibr" target="#b33">[34]</ref> use freeform shapes as archetypes to be repeated and transformed with data mappings. Victor <ref type="bibr" target="#b53">[54]</ref> and Schachman <ref type="bibr" target="#b49">[50]</ref> contribute procedural methods for designers to create parametrically constrained graphics. Professional design tools like Illustrator <ref type="bibr" target="#b22">[23]</ref> and After Effects <ref type="bibr" target="#b20">[21]</ref> provide features such as Repeater and Blend Tool to duplicate shapes and layers. These efforts inspire our work and suggest the need of a visual language that describes the composition and generation of diverse visualizations. Data-Driven Guides (DDG) <ref type="bibr" target="#b31">[32]</ref> has taken a similar approach to ours by augmenting existing drawing tools and treating marks as flexible, deformable graphical elements. Our system supports a wider range of data-to-visual mappings and more complex layouts than DDG. Vuillemot and Boy <ref type="bibr" target="#b55">[56]</ref> define a framework to assist designers in creating visualization mock-ups by employing top-down approach for subdividing the scene graph. Our framework is similar to the segmenting, nesting and linking portions of their framework. Our system creates high-fidelity visualizations instead of mock-ups.</p><p>Additional systems have investigated novel interaction techniques for visualization authoring. Early research explored programming by demonstration as a method for creating charts, and described heuristics for inferring user intention in chart specification <ref type="bibr" target="#b40">[41]</ref>. iVoLVER <ref type="bibr" target="#b38">[39]</ref> supports the extraction, transformation and presentation of information using pipeline style widgets in the canvas. Our system takes interaction design inspiration from the progressive disclosure techniques used in the iVoLVER system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EVALUATION Visualization Examples and Videos</head><p>We have created a diverse set of visualizations using the Data Illustrator system to demonstrate the expressivity of the framework. The visualization examples and videos showing the authoring processes are available at http://www.data- illustrator.com/gallery.php. In terms of chart type, the examples include rectangular bar chart, triangle bar chart, grouped bar chart, stacked bar chart, scatter plot, line graph, slope graph, bump chart, heatmap, parallel coordinates plot, range chart, Gantt chart, stringline chart, and small multiples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>User Study</head><p>Visualization design is a complex process involving multiple stages. In the initial phase, designers often generate ideas by sketching to explore the design space. When the visual form and structure are set, mockups are created to collect feedback <ref type="bibr" target="#b55">[56]</ref>. In the final production stage, engineers or designers re-create high-fidelity visualizations by incorporating real data into the mockups. We focus on visualization re-creation tasks to evaluate whether designers can understand and use the framework to compose visualizations. While the re-creation task is not an exact replica of the complete design process, it allows us to choose visualizations that cover all the concepts and features in our tool, and to compare participants' performance objectively. Furthermore, the ability to think and act in terms of the framework concepts is the cornerstone of using Data Illustrator for ideation and more open-ended designs.</p><p>We recruited 13 designers (7 male, 6 female) from the Puget Sound area and the Atlanta metropolitan area. The breakdown of their experiences in graphic design is as follows: less than 2 years: 1 (7%); 2-4 years: 3 (23%); 4-6 years: 6 (46%); 6-8 years: 1 (7%); greater than 8 years: 2 (15%). Their design work included web UI (85%), mobile UI (77%), visualization and infographics (61%), graphics and illustration (54%), print (54%), logo (38%) and video game (7%). Out of the 13 participants, 5 (39%) had minimal or less than 2 years of experience with visualization, 4 (31%) had 2-4, 2 (15%) had 4-6, and 2 (15%) had more than 6 years of experience.</p><p>The study with each participant lasted 1.5 hours. In the setup we used two monitors, each with a resolution of 2500x1600. We first gave a tutorial on Data Illustrator following the script at https://goo.gl/UtZruK. The participants learned about the main features of the system by creating three simple visualizations: a stacked bar chart, a scatter plot, and a triangle bar chart with both positive and negative values. The tutorial lasted around 35 to 40 minutes. The participants then were asked to complete two visualization creation tasks. At the end of the two tasks, they could decide if they wanted to work on an optional, more difficult task, if time allowed. We used "Obesity vs. Education" for Task 1, and "NBA Redraft" for Task 2. The optional Task 3 was to create the "Red and Blue America" visualization. These three visualizations covered the main features and functionality of the system: Task 1 requires repeating a line by data, binding categorical data to the position and colors of anchor points, and merging scales; Task 2 involves both repeat and partition, binding numerical data to fill color, and nested collections; Task 3 requires nested collections, binding data to segment position and fill color, and breaking layout for position binding. For each visualization, we explained the schema and meaning of the source data, and described what the visual components and their properties represent. We asked the participants to focus on the main visualization and not to worry about the annotations. At the end of the session, each participant completed a questionnaire and answered questions in a semi-structured interview.</p><p>All participants successfully completed Tasks 1 and 2 with minimal guidance (µ=12.23 minutes, σ =5.61 for Task 1, µ=10.77 minutes, σ =4.30 for Task 2). Out of 13 participants, 12 volunteered to work on the third task. Four of them completed it successfully (µ=14.75 minutes, σ =2.87), the remaining eight could not finish the task after spending time (µ=10.63 minutes, σ =5.93). For these eight participants, we analyzed how close they were from success. Completing Task 3 required three milestone steps to be accomplished: create nested collections with Year and State, position the states on a map layout, and bind PVI to the y position of the rectangles' top segments. Seven out of the eight participants were able to finish two of the steps but were stuck on the last step.</p><p>The participants rated their experience of learning and using Data Illustrator on a 5-point Likert scale. The results are as follows: on learning, µ=2.62, σ =0.96 (1-very easy, 5-very difficult); on creating visualizations, µ=2.38, σ =0.77 (1-very easy, 5-very difficult); on the authoring experience, µ=2.15, σ =0.90 (1-very enjoyable, 5-very frustrating).</p><p>Designers' background and expertise directly affected their learning experience and performance. For those who had substantial experience with visualization, they thought learning was easy: "Tableau has a bit of a learning curve, and with Data Illustrator being based off of Adobe Illustrator, there isn't as much of a learning curve." (P3). In contrast, P5 had little experience with visualization, and compared to learning with graphic design tools: "it takes 30 minutes for me to learn the [Data Illustrator] tutorial via a person, that usually to me is not an easy program. [Adobe] XD for me was easy 'cause I didn't have to use any tutorials, so I'd say [learning with Data Illustrator] is somewhat difficult".</p><p>The participants were impressed by the power of the tool: "Very impressive. When I looked at all 3 visualizations I thought: oh boy, how am I going to do this! Then once you finally work through the sequences needed to make it, the actually-doing-it part is super easy!" (P11). P9 commented on the tool's flexibility and ease of use: "I feel like it's more flexible than D 3 or Tableau. It's a happy medium of being able to control the graphic visually. It's pretty simple too, you don't have to be a super expert user like with Adobe Illustrator, which is nice. It's a nice sweet spot between having little control with Tableau and getting frustrated with D 3 ". P6, however, knew little about visualization and did not understand the concept of scale. He struggled in the authoring process, but still managed to complete the two tasks by trial and error.</p><p>We also observed that the designers exhibited different workflows in the authoring processes. In Task 1, some participants used the Repeat Grid to generate a few lines first, bound data to the anchor point positions, then used the Peer Count slider to generate the remaining lines; other participants generated all the lines first before binding data to positions. The strategies to accomplish Task 2 also varied. Some participants generated all the rectangles by Row ID, broke the grid, and bound data to the x and y positions; others saw a nested structure in the visualization, and repeated a rectangle by Year then partitioned the rectangles by Player. This diversity of workflow demonstrates the flexibility of our framework and system.</p><p>We identified three recurring pain points in using the system. First, many participants confused the order of shapes inside a collection with their positions. In Task 2, they wanted to generate the visualization by simply sorting the shapes in a Repeat Grid. The order did determine the shapes' positions in a collection to a certain extent, which was the source of confusion. Second, in the current design, to bind data to shapes' position, one must break the layout. Otherwise the position property controls are hidden. Some participants were baffled not seeing the position controls. Showing the position controls at all times and prompting to break layout can resolve this problem. Finally, several participants could not recall the feature of binding to segment position and adjusting the scale to generate bar charts with negative values in Task 3. Binding to height felt more natural to them. We plan to handle negative values when binding data to height to address this issue.</p><p>The participants also made suggestions on how to improve the interface and system. The lack of undo functionality bothered many participants. They were afraid of making irreversible mistakes and chose to think deeply about the authoring strategy before trying it out. They also wanted a more robust Pen Tool and the ability to style the axes and draw grid lines. Some participants also commented that starting from scratch was harder than picking a template: "It took me some time [...] to think through sequences I would need to take to re-create it. Tableau has the 'Show Me' feature that hints what bindings can be made with that type of dataset" (P3). Such comments are consistent with previous research findings <ref type="bibr" target="#b37">[38]</ref>: compared to automated visualization generation tools, design-centric authoring tools evoke deeper reflections on design choices and execution plans. For use cases where quick visualization construction is desirable, saving the visualizations as reusable templates will be very useful.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSION AND FUTURE WORK</head><p>We present a novel framework that describes the generation of visualizations from the perspective of graphic design. Based on the framework, we design and build Data Illustrator, a system that augments vector design tools with lazy data binding for visualization authoring. We demonstrate the expressivity of our approach through visualization examples. A study with 13 designers shows that the system is learnable and designers can use the framework to compose visualizations. The Data Illustrator system is available at http://www.data-illustrator.com.</p><p>The framework we created provides descriptive and generative power for visualization design, but in its current form, it is not complete. The framework needs to be expanded to include area as a shape primitive, so that it can describe visualizations such as area charts and stream graphs. Further research is also necessary to include the support for hierarchical, network and geographic data, and the corresponding visualizations.</p><p>In terms of implementation, Data Illustrator demonstrates the feasibility and power of a subset of the framework. Layouts such as packing and polar coordinate positioning are not yet supported in the system. We also need to implement ring as a shape primitive for creating donut charts. Finally, systems such as Lyra build on top of Vega, which have access to the functionalities offered by D 3 , including interpolation methods for lines and curves. Data Illustrator should provide those capabilities in order to be more powerful.</p><p>For future work, we would also like to explore how to turn visualization designs into reusable templates. Once users create a visualization inside Data Illustrator, they should be able to export it into formats readable by other tools and to share it with other users, who can customize the design with their own data and visual styles. Adding authoring support for interactivity is also a direction to investigate further.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>CHI 2018 ,</head><label>2018</label><figDesc>April 21-26, 2018, Montreal, QC, Canada © 2018 ACM. ISBN 978-1-4503-5620-6/18/04. . . 15.00 DOI: https://doi.org/10.1145/3173574.3173697</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Visualizations with varying levels of complexity</figDesc><graphic coords="2,321.09,62.36,245.50,288.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a), a rectangle for Figure 1(b) and (d), and a polyline/path for Figure 1(c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: (a) repeat a line by State for "Obesity vs. Education", (b) repeat a rectangle by State for "Red and Blue America"</figDesc><graphic coords="4,53.93,225.78,243.06,155.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: (a) repeat a line by Company then partition lines by Date, (b) repeat a rectangle by Year then partition rectangles by Player</figDesc><graphic coords="4,321.09,62.36,243.07,179.25" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>The lines are repeated by Company and partitioned by Date (Figure 3(a)) A group of shapes in the "brain drain" visualization [1], delineated by blue borders The children of a collection have the same type (e.g. rectangle, group) The children of a group can have different types Each child inside a collection has a different data scope All the children inside a group share the same data scope</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Peers of an anchor point: (a) partitioned polylines, each anchor point has a data scope, (b) paths where the anchor points have no data scopes. The focal anchor point is colored in purple, their peers have purple borders.</figDesc><graphic coords="5,321.09,62.36,243.07,95.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: (a) The presence of a grid layout has precedence over position binding, (b) Removing the grid layout unifies the scale of position binding</figDesc><graphic coords="6,53.93,62.36,243.07,103.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Seven components of the Data Illustrator interface: 1) Toolbar, 2) Variables Panel, 3) Layers Panel, 4) Canvas, 5) Table Panel, 6) Actionbar, 7) Property Inspector</figDesc><graphic coords="6,321.09,62.36,245.51,124.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Selecting shapes: (a) Select Tool selects entire shapes and collections of shapes. (b) Direct Select Tool selects anchor points and line segments of shapes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Collections with layouts: (a) Repeat Grid. (b) Partition Stack. (c) Partition Stacks Nested in a Repeat Grid</figDesc><graphic coords="7,53.93,405.37,243.07,60.77" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Peers highlighted on selection: (a) Peer shapes. (b) Peer anchor points. (c) Peer line segments. (d) Peer shapes in free-form layout.</figDesc><graphic coords="7,321.09,62.36,243.07,54.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Lazy data-bindings: (a) clicking the binding icon shows a list of applicable variables, (b) changing the aggregator when binding numerical variables, (c) property control and icon update after binding, the remove icon indicates the possibility of removing a binding</figDesc><graphic coords="7,321.09,494.93,243.07,81.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Configurable axes and legends: (a) Numerical axis. (b) Categorical axis. (c) Categorical color legend. (d) Numerical color legend.</figDesc><graphic coords="8,53.93,101.60,243.07,101.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Anatomy of Shapes: Anchor Points and Segments</figDesc><table><row><cell>Line</cell><cell>Path</cell><cell>Rectangle</cell><cell>Circle</cell></row><row><cell cols="3">2 anchor points 4 anchor points 4 anchor pointss</cell><cell>4 anchor points</cell></row><row><cell>1 line segment</cell><cell>3 line segments</cell><cell>4 line segments</cell><cell>4 curve segments</cell></row><row><cell>open</cell><cell>open</cell><cell>closed</cell><cell>closed</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was supported in part by Adobe Research and by the National Science Foundation via award IIS-1320537.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Brain Drain -part of the collection: La Leturra -Visual Data</title>
		<author>
			<persName><surname>Accurat</surname></persName>
		</author>
		<ptr target="https://www.accurat.it/works/la-lettura/" />
		<imprint>
			<date type="published" when="2014-09-17">2014. 2014. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Auto-Layout: Introducing Stacks-Flexbox for Sketch</title>
		<author>
			<persName><forename type="first">Anima</forename><surname>App</surname></persName>
		</author>
		<ptr target="https://medium.com/sketch-app-sources/auto-layout-introducing-stacks-flexbox-for" />
		<imprint>
			<date type="published" when="2017-02-21">2017. 21 February 2017. September 17. 11422c7b5</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Reflections on how designers design with data</title>
		<author>
			<persName><forename type="first">Alex</forename><surname>Bigelow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Drucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Danyel</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miriah</forename><surname>Meyer</surname></persName>
		</author>
		<idno type="DOI">10.1145/2598153.2598175</idno>
		<ptr target="http://dx.doi.org/10.1145/2598153.2598175" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2014 International Working Conference on Advanced Visual Interfaces</title>
		<meeting>the 2014 International Working Conference on Advanced Visual Interfaces</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Iterating between tools to create and edit visualizations</title>
		<author>
			<persName><forename type="first">Alex</forename><surname>Bigelow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Drucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Danyel</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miriah</forename><surname>Meyer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2598609</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2016.2598609" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="481" to="490" />
			<date type="published" when="2017-01">2017. January 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Protovis: A graphical toolkit for visualization</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2009.174</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2009.174" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1121" to="1128" />
			<date type="published" when="2009-12">2009. December 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">D 3 : data-driven documents</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vadim</forename><surname>Ogievetsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.185</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2011.185" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="2301" to="2309" />
			<date type="published" when="2011-01">2011. January 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">The Functional Art: An introduction to information graphics and visualization</title>
		<author>
			<persName><forename type="first">Alberto</forename><surname>Cairo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
	<note>New Riders</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Readings in Information Visualization: Using Vision to Think</title>
		<author>
			<persName><forename type="first">Jock</forename><forename type="middle">D</forename><surname>Stuart K Card</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName><surname>Shneiderman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Flexible Linked Axes for Multivariate Data Visualization</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H T</forename><surname>Claessen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.201</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2011.201" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="2310" to="2316" />
			<date type="published" when="2011-12">2011. December 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">Bohemian</forename><surname>Coding</surname></persName>
		</author>
		<ptr target="https://www.sketchapp.com/" />
		<title level="m">Sketch -The digital design toolkit</title>
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Raw Graphs</title>
		<ptr target="http://rawgraphs.io/" />
		<imprint>
			<date type="published" when="2013-01-16">2013. 16 January 2013. September 17</date>
			<publisher>Density Design and Calibro</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName><forename type="first">Figma</forename><surname>Design</surname></persName>
		</author>
		<ptr target="https://www.figma.com/" />
		<title level="m">Figma: the collaborative interface design tool</title>
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><surname>Documentcloud</surname></persName>
		</author>
		<ptr target="http://backbonejs.org/" />
		<title level="m">Backbone.js</title>
		<imprint>
			<date type="published" when="2016-04-05">2016. 5 April 2016. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Datawrapper</forename><surname>Gmbh</surname></persName>
		</author>
		<ptr target="https://www.datawrapper.de/" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Twenty Years of the NBA Redrafted</title>
		<author>
			<persName><forename type="first">Russell</forename><surname>Goldenberg</surname></persName>
		</author>
		<ptr target="https://pudding.cool/2017/03/redraft/" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A survey of visualization construction user interfaces</title>
		<author>
			<persName><forename type="first">Lars</forename><surname>Grammel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Melanie</forename><surname>Tory</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Margaret-Anne</forename><surname>Storey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EuroVis -Short Papers</title>
		<imprint>
			<biblScope unit="page" from="19" to="23" />
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Declarative language design for interactive visualization</title>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Bostock</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.144</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2010.144" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1149" to="1156" />
			<date type="published" when="2010-12">2010. December 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Prefuse: a toolkit for interactive information visualization</title>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stuart</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Landay</surname></persName>
		</author>
		<idno type="DOI">10.1145/1054972.1055031</idno>
		<ptr target="http://dx.doi.org/10.1145/1054972.1055031" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;05)</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;05)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="421" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dominik</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Correll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kanit</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<ptr target="https://github.com/vega/datalib" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 26 October 2017. September 17</date>
			<publisher>Vega Datalib</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Designer&apos;s guide to creating charts &amp; diagrams</title>
		<author>
			<persName><forename type="first">Nigel</forename><surname>Holmes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984">1984</date>
			<publisher>Watson-Guptill</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Adobe After Effects CC | Visual effects and motion graphics software</title>
		<ptr target="http://www.adobe.com/products/aftereffects.html" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
			<publisher>Adobe Systems Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<ptr target="http://www.adobe.com/products/xd.html" />
		<title level="m">Adobe Experience Design CC (Beta) | Prototyping &amp; Wireframing Tool</title>
		<imprint>
			<publisher>Adobe Systems Inc</publisher>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Adobe Illustrator CC | Vector Graphic Design Software</title>
		<ptr target="http://www.adobe.com/products/illustrator.html" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
			<publisher>Adobe Systems Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<ptr target="http://www.adobe.com/products/indesign.html" />
		<title level="m">Adobe InDesign CC | Desktop Publishing Software and Online Publisher</title>
		<imprint>
			<publisher>Adobe Systems Inc</publisher>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Adobe Photoshop CC | Best photo, image &amp; design editing software</title>
		<ptr target="http://www.adobe.com/products/photoshop.html" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
			<publisher>Adobe Systems Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<ptr target="https://helpx.adobe.com/illustrator/using/cutting-dividing-objects.html" />
		<title level="m">Cut, divide, and trim objects in Illustrator</title>
		<imprint>
			<publisher>Adobe Systems Inc</publisher>
			<date type="published" when="2017-03-10">2017. 10 March 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Draw circular (Polar) grids</title>
		<ptr target="https://helpx.adobe.com/illustrator/using/drawing-simple-lines-shapes.html" />
		<imprint>
			<date type="published" when="2017-09-13">2017. 13 September 2017. September 17</date>
			<publisher>Adobe Systems Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">How to blend objects in Illustrator</title>
		<ptr target="https://helpx.adobe.com/illustrator/using/blending-objects.html" />
		<imprint>
			<date type="published" when="2017-02-15">2017. 15 February 2017. September 17</date>
			<publisher>Adobe Systems Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Vega -A Visualization Grammar</title>
		<ptr target="https://vega.github.io/vega/" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 25 October 2017. September 17</date>
		</imprint>
		<respStmt>
			<orgName>University of Washington Interactive Data Lab</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Exploring the design space of composite visualization</title>
		<author>
			<persName><forename type="first">Waqas</forename><surname>Javed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Niklas</forename><surname>Elmqvist</surname></persName>
		</author>
		<idno type="DOI">10.1109/PacificVis.2012.6183556</idno>
		<ptr target="http://dx.doi.org/10.1109/PacificVis.2012.6183556" />
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis)</title>
		<imprint>
			<date type="published" when="2012">2012. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Information is Beautiful Awards</title>
		<author>
			<persName><surname>Kantar</surname></persName>
		</author>
		<ptr target="https://www.informationisbeautifulawards.com/" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Data-driven guides: Supporting expressive design for information graphics</title>
		<author>
			<persName><forename type="first">Nam</forename><forename type="middle">Wook</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eston</forename><surname>Schweickart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhicheng</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mira</forename><surname>Dontcheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wilmot</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jovan</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hanspeter</forename><surname>Pfister</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2598620</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2016.2598620" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="491" to="500" />
			<date type="published" when="2017-01">2017. January 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">SketchStory: Telling More Engaging Stories with Data Through Freeform Sketching</title>
		<author>
			<persName><forename type="first">Bongshin</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rubaiat</forename><surname>Habib Kazi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Smith</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.191</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2013.191" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="2416" to="2425" />
			<date type="published" when="2013-12">2013. December 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">SketchInsight: Natural data exploration on interactive whiteboards leveraging pen and touch interaction</title>
		<author>
			<persName><forename type="first">Bongshin</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathalie</forename><surname>Henry Riche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amy</forename><surname>Karlson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sheelagh</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1109/PACIFICVIS.2015.7156378</idno>
		<ptr target="http://dx.doi.org/10.1109/PACIFICVIS.2015.7156378" />
	</analytic>
	<monogr>
		<title level="m">Visualization Symposium (PacificVis), 2015 IEEE Pacific</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="199" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">Juerg</forename><surname>Lehni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Puckey</surname></persName>
		</author>
		<ptr target="http://paperjs.org/" />
		<title level="m">Paper.js</title>
		<imprint>
			<date type="published" when="2015-09-17">2015. 25 October 2015. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">js multi-line graph with automatic (interactive) legend</title>
		<author>
			<persName><forename type="first">Malcom</forename><surname>Maclean</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014-07">2014. d3. 8 July 2014. September 17, 2017 from https: //bl.ocks.org/d3noob/08af723fe615c08f9536f656b55755b4</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Meggs&apos; History of Graphic Design</title>
		<author>
			<persName><forename type="first">B</forename><surname>Philip</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alston</forename><forename type="middle">W</forename><surname>Meggs</surname></persName>
		</author>
		<author>
			<persName><surname>Purvis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>John Wiley &amp; Sons</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Bottom-up vs. Top-down: Trade-offs in Efficiency, Understanding, Freedom and Creativity with InfoVis Tools</title>
		<author>
			<persName><forename type="first">Gonzalo</forename><surname>Gabriel Méndez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Uta</forename><surname>Hinrichs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miguel</forename><forename type="middle">A</forename><surname>Nacenta</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025942</idno>
		<ptr target="http://dx.doi.org/10.1145/3025453.3025942" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;17)</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;17)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="841" to="852" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">iVoLVER: Interactive Visual Language for Visualization Extraction and Reconstruction</title>
		<author>
			<persName><forename type="first">Gonzalo</forename><surname>Gabriel Méndez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Miguel</forename><surname>Nacenta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sebastien</forename><surname>Vandenheste</surname></persName>
		</author>
		<idno type="DOI">10.1145/2858036.2858435</idno>
		<ptr target="http://dx.doi.org/10.1145/2858036.2858435" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;16)</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;16)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="4073" to="4085" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Grid systems in graphic design: A visual communication manual for graphic designers, typographers and three dimensional designers</title>
		<author>
			<persName><forename type="first">Josef</forename><surname>Muller-Brockmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
			<pubPlace>Arthur Niggli</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Creating charts by demonstration</title>
		<author>
			<persName><forename type="first">Brad</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jade</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><surname>Goldberg</surname></persName>
		</author>
		<idno type="DOI">10.1145/191666.191715</idno>
		<ptr target="http://dx.doi.org/10.1145/191666.191715" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;94)</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;94)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="106" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title/>
		<author>
			<persName><surname>Plotly</surname></persName>
		</author>
		<ptr target="https://plot.ly/" />
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">RxJS</title>
		<author>
			<persName><surname>Reactivex</surname></persName>
		</author>
		<ptr target="http://reactivex.io/rxjs/" />
		<imprint>
			<date type="published" when="2016-09-17">2016. 12 December 2016. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Expressive interactive design of information visualizations</title>
		<author>
			<persName><forename type="first">Donghao</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tobias</forename><surname>Hollerer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaoru</forename><surname>Yuan</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346291</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2014.2346291" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="2092" to="2101" />
			<date type="published" when="2014-12">2014. December 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">Gapminder</title>
		<author>
			<persName><forename type="first">Hans</forename><surname>Rosling</surname></persName>
		</author>
		<ptr target="https://www.gapminder.org/tools/" />
		<imprint>
			<date type="published" when="2015-09-17">2015. 2015. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">One Chart, Twelve Tools</title>
		<author>
			<persName><forename type="first">Lisa</forename><surname>Charlotte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rost</forename></persName>
		</author>
		<ptr target="http://lisacharlotterost.github.io/2016/05/17/one-chart-tools/" />
		<imprint>
			<date type="published" when="2016-05-17">2016. 17 May 2016. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Interactive Graphic Design Using Automatic Presentation Knowledge</title>
		<author>
			<persName><forename type="first">Steven</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joe</forename><surname>Mattis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jade</forename><surname>Goldstein</surname></persName>
		</author>
		<idno type="DOI">10.1145/191666.191719</idno>
		<ptr target="http://dx.doi.org/10.1145/191666.191719" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;94)</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems (CHI &apos;94)</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994">1994</date>
			<biblScope unit="page" from="112" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Lyra: An Interactive Visualization Design Environment</title>
		<author>
			<persName><forename type="first">Arvind</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12391</idno>
		<ptr target="http://dx.doi.org/10.1111/cgf.12391" />
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="351" to="360" />
			<date type="published" when="2014">2014. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Vega-lite: A Grammar of Interactive Graphics</title>
		<author>
			<persName><forename type="first">Arvind</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dominik</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kanit</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2599030</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2016.2599030" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2017-01">2017. January 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Apparatus: A hybrid graphics editor and programming environment for creating interactive diagrams</title>
		<author>
			<persName><forename type="first">Toby</forename><surname>Schachman</surname></persName>
		</author>
		<ptr target="http://aprt.us/" />
		<imprint>
			<date type="published" when="2015-09-17">2015. 10 November 2015. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<author>
			<persName><forename type="first">Tableau</forename><surname>Software</surname></persName>
		</author>
		<ptr target="https://www.tableau.com/" />
		<title level="m">Tableau Software: Business Intelligence and Analytics</title>
		<imprint>
			<date type="published" when="2017-09-17">2017. 2017. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Polaris: A system for query, analysis, and visualization of multidimensional relational databases</title>
		<author>
			<persName><forename type="first">Chris</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Diane</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.981851</idno>
		<ptr target="http://dx.doi.org/10.1109/2945.981851" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="52" to="65" />
			<date type="published" when="2002-12">2002. December 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Understanding Data-Driven Visual Encodings through Deconstruction</title>
		<author>
			<persName><forename type="first">John</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Stasko</surname></persName>
		</author>
		<ptr target="https://www.cc.gatech.edu/~stasko/papers/infovis16-poster-deconstruction.pdf" />
	</analytic>
	<monogr>
		<title level="m">IEEE VIS 2016</title>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">Drawing Dynamic Visualizations</title>
		<author>
			<persName><forename type="first">Bret</forename><surname>Victor</surname></persName>
		</author>
		<ptr target="https://vimeo.com/66085662" />
		<imprint>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
	<note>Retrieved August 3, 2016 from</note>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Manyeyes: a site for visualization at internet scale</title>
		<author>
			<persName><forename type="first">Fernanda</forename><forename type="middle">B</forename><surname>Viegas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Wattenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frank</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jesse</forename><surname>Kriss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matt</forename><surname>Mckeon</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2007.70577</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2007.70577" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="1121" to="1128" />
			<date type="published" when="2007-12">2007. December 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Structuring Visualization Mock-ups at the Graphical Level by Dividing the Display Space</title>
		<author>
			<persName><forename type="first">Romain</forename><surname>Vuillemot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeremy</forename><surname>Boy</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2017.2743998</idno>
		<ptr target="http://dx.doi.org/10.1109/TVCG.2017.2743998" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="424" to="434" />
			<date type="published" when="2018-01">2018. January 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">An Exploratory Study of Data Sketching for Visual Representation</title>
		<author>
			<persName><forename type="first">Jagoda</forename><surname>Walny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Huron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sheelagh</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12635</idno>
		<ptr target="http://dx.doi.org/10.1111/cgf.12635" />
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="231" to="240" />
			<date type="published" when="2015">2015</date>
			<publisher>Wiley Online Library</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">ggplot2: elegant graphics for data analysis</title>
		<author>
			<persName><forename type="first">Hadley</forename><surname>Wickham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>Springer Science &amp; Business Media</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A Layered Grammar of Graphics</title>
		<author>
			<persName><forename type="first">Hadley</forename><surname>Wickham</surname></persName>
		</author>
		<idno type="DOI">10.1198/jcgs.2009.07098</idno>
		<ptr target="http://dx.doi.org/10.1198/jcgs.2009.07098" />
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Graphical Statistics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="3" to="28" />
			<date type="published" when="2010">2010. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">The Grammar of Graphics (Statistics and Computing)</title>
		<author>
			<persName><forename type="first">Leland</forename><surname>Wilkinson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Springer-Verlag New York, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<author>
			<persName><forename type="first">Randy</forename><surname>Yeip</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stuart</forename><forename type="middle">A</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Welch</surname></persName>
		</author>
		<ptr target="http://graphics.wsj.com/elections/2016/field-guide-red-blue-america/" />
		<title level="m">A Field Guide to Red and Blue America</title>
		<imprint>
			<date type="published" when="2016-07-25">2016. 25 July 2016. September 17</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
