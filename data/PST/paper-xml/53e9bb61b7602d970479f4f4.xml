<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ParkNet: Drive-by Sensing of Road-Side Parking Statistics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Suhas</forename><surname>Mathur</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Tong</forename><surname>Jin</surname></persName>
							<email>tongjin@winlab.rutgers.edu</email>
						</author>
						<author>
							<persName><forename type="first">Nikhil</forename><surname>Kasturirangan</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Janani</forename><surname>Chandrashekharan</surname></persName>
							<email>janani@winlab.rutgers.edu</email>
						</author>
						<author>
							<persName><forename type="first">Wenzhi</forename><surname>Xue</surname></persName>
							<email>wenzhi@winlab.rutgers.edu</email>
						</author>
						<author>
							<persName><forename type="first">Marco</forename><surname>Gruteser</surname></persName>
							<email>gruteser@winlab.rutgers.edu</email>
						</author>
						<author>
							<persName><forename type="first">Wade</forename><surname>Trappe</surname></persName>
							<email>trappe@winlab.rutgers.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">WINLAB</orgName>
								<orgName type="institution" key="instit2">Rutgers University</orgName>
								<address>
									<addrLine>671 Route 1 South</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">North Brunswick</orgName>
								<address>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<addrLine>MobiSys&apos;10, June 15-18</addrLine>
									<postCode>2010</postCode>
									<settlement>San Francisco</settlement>
									<region>California</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ParkNet: Drive-by Sensing of Road-Side Parking Statistics</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3DF804F5BFBB26CAFD103469C6895F23</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.3 [Special-Purpose and Application-Based Systems]: Algorithms</term>
					<term>Design</term>
					<term>Experimentaion</term>
					<term>Measurement</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Urban street-parking availability statistics are challenging to obtain in real-time but would greatly benefit society by reducing traffic congestion. In this paper we present the design, implementation and evaluation of ParkNet, a mobile system comprising vehicles that collect parking space occupancy information while driving by. Each ParkNet vehicle is equipped with a GPS receiver and a passenger-side-facing ultrasonic rangefinder to determine parking spot occupancy. The data is aggregated at a central server, which builds a real-time map of parking availability and could provide this information to clients that query the system in search of parking. Creating a spot-accurate map of parking availability challenges GPS location accuracy limits. To address this need, we have devised an environmental fingerprinting approach to achieve improved location accuracy. Based on 500 miles of road-side parking data collected over 2 months, we found that parking spot counts are 95% accurate and occupancy maps can achieve over 90% accuracy. Finally, we quantify the amount of sensors needed to provide adequate coverage in a city. Using extensive GPS traces from over 500 San Francisco taxicabs, we show that if ParkNet were deployed in city taxicabs, the resulting mobile sensors would provide adequate coverage and be more cost-effective by an estimated factor of roughly 10-15 when compared to a sensor network with a dedicated sensor at every parking space, as is currently being tested in San Francisco.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Automotive traffic congestion imposes significant societal costs. One study [1] estimated a loss of $78 billion in 2007 in the form of 4.2 billion lost hours and 2.9 billion gallons of wasted gasoline in the United States alone. Several projects have recently sought to address this issue through the design of mobile systems that collect traffic congestion information to improve route finding and trip planning <ref type="bibr" target="#b0">[2,</ref><ref type="bibr" target="#b1">3]</ref>. Unfortunately, a significant portion of traffic congestion is experienced in downtown areas where it is not always possible to reroute a driver. In these densely populated urban areas, congestion and travel delays are also due to parking. In a recent study <ref type="bibr" target="#b2">[4]</ref>, researchers found in one small business district of Los Angeles that, over the course of a year, vehicles looking for parking created the equivalent of 38 trips around the world, burning 47,000 gallons of gasoline and producing 730 tons of carbon dioxide. Clearly, addressing the problems associated with parking in downtown areas would have significant societal impact, both economically and ecologically.</p><p>Lack of information. One key factor contributing to excess parking vehicle miles is a lack of information about roadside parking availability. While occupancy data for parking garages is relatively straightforward to obtain through entry/exit counters, data is generally unavailable for road-side parking. Detailed parking availability information would allow municipal governments to make better decisions about where to install parking meters and how to set prices. Donald Shoup <ref type="bibr" target="#b3">[5]</ref> has argued that road-side parking spots are commonly underpriced compared to parking garages, and that this fiscal consideration greatly exacerbates parking problems. Detailed information would allow travelers to arrive at better decisions on mode of travel or use of parking garages versus attempting road-side parking. Indeed, several projects are already underway to monitor road-side parking spaces by detecting the presence of parked vehicles over parking spots using fixed sensors <ref type="bibr" target="#b4">[6]</ref><ref type="bibr">[7]</ref><ref type="bibr">[8]</ref>. These efforts rely on sensors installed into the asphalt or in parking meters. This necessitates a large installation cost and operational cost in order to adequately monitor the parking spaces at a city-wide level, or even at the level of a downtown area. For example, the SF-park project [8] aims to cover only 25% of the street parking spots in San Francisco, and will have a cost of several million dollars. Unfortunately, even with such a starting price tag, the cost of such a system does not scale well with the number of parking spaces to be monitored, and is also inherently limited to street-parking with clearly demarcated spaces. A further drawback of such systems is that they require that wireless relay nodes be installed separately on the road side (e.g. in lamp posts) in all areas where sensors are installed in the ground. However, projects such as <ref type="bibr">[8]</ref> highlight the magnitude of the problem in large cities and the government's dedication to long-term investments in a smart parking infrastructure.</p><p>Drive-by Parking Monitoring. In contrast to such fixed monitoring systems, this paper presents a mobile system that collects road-side parking availability information at a lower cost. Our sensing platform consists of a low cost ultrasonic sensor that simply reports the distance to the nearest obstacle and a GPS receiver that notes the corresponding location. Our sensor network leverages the mobility of vehicles that regularly comb a city, such as taxicabs and other government vehicles (parking enforcement, police cars, etc.) to reduce the number sensors needed. The cost savings come from the fact that the status of parking spaces in an urban area does not change very rapidly in time, and hence continual sensing through fixed sensors is unnecessary. Realizing this application, however, requires that several unique challenges in mobile systems be overcome that have not been addressed in prior efforts in mobile sensing.</p><p>In order to place our work in a broader context, consider the diagram presented in Figure <ref type="figure" target="#fig_0">1</ref>, where we have placed our ParkNet system relative to several notable vehicular monitoring efforts in terms of the required location accuracy needed by the sensing application as well as the underlying rate of change of the event being monitored. For example, in <ref type="bibr" target="#b5">[9]</ref>, a system is presented that monitors the presence of potholes in road surfaces. This involves monitoring a very slowly changing quantity with moderate location precision. Traffic monitoring systems, such as <ref type="bibr" target="#b0">[2]</ref> on the other hand monitor a more rapidly changing quantity, but require relatively low precision. In contrast, ParkNet can be considered to require significant spatio-temporal accuracy as the occupancy of parking spaces can vary on the order of minutes and, further, some applications in ParkNet might require significant location accuracy in order to associate cars in specific parking slots.</p><p>In our work, we have overcome the underlying challenges of dynamics and location accuracy associated with parking monitoring applications, through the careful integration of ultrasonic measurements with GPS readings that are corrected through environmental fingerprinting. Our ParkNet system has been tested experimentally, collecting over 500 miles of road-side parking data over two months, and our results show that such a system could be fitted into vehicles that frequently roam downtown areas, such as taxicabs, city buses, or parking enforcement vehicles. Further, we note that there is the potential to reuse ultrasonic rangefinders already integrated in some modern vehicles for parking assist and automated parking applications.</p><p>Overview. In Section 2, we provide an overview of the challenges associated with identifying parking locations and their occupancy. In Section 3, we detail the system that we have built for monitoring parking, providing the rationale for the system choices that we have made. We next explore in Section 4 the ability of our system to monitor parking spaces. Since one potential application we envision involves associating cars with their specific, corresponding parking slot, in Section 5 we next detail an approach to improve location accuracy sufficiently to support such an application. In Section 6 we turn to exploring how many vehicles should be part of such a mobile system in order to adequately monitor parking slots. We summarize the lessons learned in Section 7 and place our work relative to related work in Section 8. Finally, we conclude the paper in Section 9.</p><p>In summary, the key contributions of this paper are:</p><p>• Demonstrating the feasibility of a mobile sensing approach to road-side parking availability detection through the design, implementation, and evaluation of such a system. Our experimental evaluation uses over one month of data from up to three vehicles passing through the downtown Highland Park, NJ area;</p><p>• Proposing and evaluating an improved approach to GPS positioning using environmental fingerprinting that allows us to achieve the location accuracies necessary for precise matching of cars with their associated parking slots;</p><p>• Showing through trace-based simulations with a dataset involving San Francisco taxis that a few hundred taxis provide adequate spatio-temporal sampling of a downtown area, which is precisely where parking is most scarce.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE ROAD-SIDE PARKING CHALLENGE</head><p>Finding street-side parking in a crowded urban area is a problematic task and one that most drivers dread. Finding a parking space near one's destination could be much easier if there were a way to know ahead of time which areas have available parking spaces. Often times, a street only a few blocks away might have vacant parking spaces but a driver looking for parking has no way of knowing this.</p><p>One approach to addressing the road-side parking problem may be a spot reservation system that allows vehicles claim available spots before they arrive at their destination. This approach is difficult because it (i) requires exact knowledge of the available road-side parking spots at any given time, (ii) requires all other vehicles to be notified of and to obey reservations, (iii) may lead to inefficiencies if drivers with reservations do change their plans or experience significant travel delays. While this approach presents interesting research challenges, we chose to focus on a different approach that in our opinion has more potential for near-term impact: presenting drivers and municipal governments with near-real-time information and detailed historical parking statistics.</p><p>Value of Real-time Information. As Donald Shoup has argued <ref type="bibr" target="#b3">[5]</ref> municipalities already posses parking management tools such as parking meters and pay stations and a large share of excess vehicle miles due to the search for parking could be eliminated through basic road-side parking price adjustments. Shoup concludes that prices should be set to achieve an 85% occupancy rate on each block. This approach, however, would require detailed occupancy rate information that allows parking authorities to adjust prices and to determine which city areas should be included in the pricing scheme.</p><p>Beyond adjusting road-side parking prices, detailed parking availability statistics could be widely disseminated on web-based maps or navigation systems which would incur the following further benefits:</p><p>• Improve traveler decisions, with respect to mode of transportation, the choice of road-side parking vs parking garage, and in which area to search for road-side parking,</p><p>• Suggesting parking spaces to users driving on the road looking for parking, through a navigation device or cellphone,</p><p>• Allow parking garages to adjust their prices dynamically to respond to the availability or non-availability of parking spaces in the immediate area, and</p><p>• Improve efficiency of parking enforcement in systems that utilize single pay stations for multiple parking spaces -parking enforcement vehicles can detect the presence of a parked vehicle in a space that has not been paid for.</p><p>Parking information in slotted and unslotted areas. To define concrete parking metrics it is helpful to distinguish areas where vehicles are arranged in slots with demarcated parking bays (often separated by lines marked on the road), which we refer to as slotted areas, from areas without any marked parking spots, which we will call unslotted. Slotted parking space are typically used where parking meters or other parking pay stations are installed. This is arguably the more important case, because parking is usually slotted and metered in the areas where parking is most scarce. In such areas it is easier to measure the number of available parking spaces, because the spacing between cars is regulated. We consider two types of parking information: Space Count. The number of parking spaces available on one given road segment, which is simply the total number of marked parking spots less the occupied slots.</p><p>Occupancy Map. A map showing each parking slot as occupied or vacant. This is more detailed representation of the parking scenario which will be of particular interest in assisting parking enforcement.</p><p>We expect that periodic per-block space counts are sufficient for many parking information applications. Occupancy maps are immensely valuable for parking enforcement. A parking enforcement vehicle with a sensor and connectivity to a database that keeps track of which slots have been paid for, would be able to determine whether there is a car parked in a slot that has not been paid for, or whose time has expired. This is particularly relevant for street-parking areas with a single payment machine for a large group of slotted spaces, since the lack of parking meters for individual spaces makes the task of finding offending vehicles harder. In the case of unslotted street parking, the number of available slots is not defined a priori and depends on the length of vehicles. Still some parts of the road might be marked as no parking zones either explicitly or implicitly by the presence of driveways or fire hydrants for example. To define a space count for unslotted areas, we measure the distances d1, d2, . . . ...dn of all available stretches of valid parking (which are bounded by parked vehicles or no parking zones) on a given road segment. The number of spots is then defined as n = P i di/dspot , where dspot is taken to be the (fixed) size of one parking spot (typically ∼ 6 meters). The equivalent of the occupancy map for the unslotted model will be the series of available parking stretches d1, d2, . . . , dn, together with the starting latitude/longitude location stamp of each stretch.</p><p>Indeed, some municipalities have already recognized the value of such detailed parking statistics and are installing sensing technologies. The city of San Francisco, for example, is presently installing a stationary sensor network to cover 6000 parking spaces under the SFPark project [8]. This network utilizes a sensor node installed in the asphalt in the center of each parking spot. This node detects the presence of a vehicle using a magnetometer among other sensors and forms a mesh network to deliver the data to a centralized parking monitoring system. To ensure connectivity, the mesh network also requires repeaters and forwarding nodes on lamp posts and traffic lights.</p><p>Installing a dedicated sensor network for monitoring parking information is relatively expensive, due to the installation and maintenance costs. According to a Department of Transportation report <ref type="bibr" target="#b6">[10]</ref>, the installation cost of typical per spot parking management systems ranges from $250-$800 per spot. While we do not know the exact cost of the system used by the SFPark project, the total project volume including smart parking management functions is 23 million dollars <ref type="bibr">[8]</ref>. Furthermore, fixed sensors are quite difficult to place in areas without marked parking slots.</p><p>What if it were possible to obtain most of the information on the occupancy of parking spaces, at a much lower cost? We believe sensing spaces using a collection of mobile sensors can provide such a solution because turnover on one given parking spot is on the order of tens of minutes in the most expensive downtown areas and hours in many more residential city areas. Thus the required per-spot sampling rate is relatively low and the use of one dedicated sensor per spot appears wasteful. Intuitively, a single mobile sen-sor can do the work of hundreds of fixed sensors and if we accept the limitations of a probabilistic system, costs can be reduced further by mounting the mobile sensors on existing vehicles that roam the city, albeit perhaps on somewhat unpredictable paths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Design Goals and Requirements</head><p>We identify the following design goals and requirements that constrain our solution:</p><p>Provide Parking Statistics. The drive-by monitoring system should be able to determine the availability of road-side parking spaces on at least an hourly basis with sufficient accuracy to (i) direct drivers to areas with several available parking spots and to (ii) inform municipal government parking management decisions.</p><p>Assist Parking Enforcement. Given a map of paid-parking spaces the drive-by sensing system should be able to identify candidate parking spots occupied by an infringing vehicle. Accuracy should be sufficient to assign human parking enforcement personnel. The system is not intended to generate automatic citations.</p><p>Low-cost sensors. The system should operate with sensors that are typically used in automobiles for other applications. This rules out more expensive specialized sensors such as laser scanners.</p><p>Low vehicle participation rates. While one could envision that eventually all vehicles simply report their parking locations as obtained from the Global Positioning System, this would require the participation of nearly every vehicle to achieve high data accuracy. Given vehicle lifetimes of 10+ years in the United States, full deployment is difficult to achieve without government regulation mandating installation in every new vehicle or retrofitting of vehicles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">DRIVE-BY SENSING OF PARKING AVAILABILITY</head><p>The ParkNet architecture employs a mobile sensing approach with ultrasonic rangefinders and GPS to monitor road-side parking availability. It also introduces an environmental positioning concept to achieve the positioning accuracy necessary to match vehicles to demarcated parking slots. As illustrated in Fig. <ref type="figure" target="#fig_3">4</ref>, several sensors-equipped vehicles report their sensor readings to centralized parking estimation server. This server combines information from a parking spot map, which may be available in different levels of detail (as we will discuss in Sec. 4 with the sensor readings from one or multiple vehicles obtained on the same road segment to create an estimate of road-side parking availability. Vehicles can report their data over a cellular uplink but opportunistic use of Wifi connections is also possible depending on cost/delay tradeoffs. The parking availability information can then be distributed to navigation systems or distributed over the Internet, similarly to the various distribution channels for road traffic congestion information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Choice of Ultrasonic Sensors</head><p>We chose ultrasonic rangefinders because of their relatively low cost of tens of dollars compared to laser rangefinders and automotive radars, better nighttime operation compared to cameras, and their increasing availability in cars to support parking assistance and automated parking functions in modern vehicles. This potentially allows reusing already present sensors in future vehicles.</p><p>Each sensor vehicle in our set-up carries a passenger-side facing ultrasonic rangefinder to detect the presence or absence of parked vehicles. It's range should be equal to at least half the width of urban roads and the sampling rate high enough to provide several samples over the length of a car at maximum city speeds. Figure <ref type="figure" target="#fig_4">5</ref>(a) depicts our prototype incarnation using a Maxbotix WR1 waterproof rangefinder, magnet-mounted to the side of a vehicle. This sensor emits sound waves every 50 ms at a frequency of 42 KHz. The sensor provides a single range reading from 12 to 255 inches every cycle, which corresponds to the distance to the nearest obstacle or the maximum range of 255 if no obstacle is detected. The sensor measurements at each vehicle are time-stamped and location-stamped with inputs from a 5Hz GPS receiver, producing the following sensor records: &lt;Kernel-time, range, latitude, longitude, speed&gt; Vehicles transmit a collection of these measurements to the parking estimation server where data from mobile sensors is continuously aggregated and processed using prob-abilistic detection algorithms that we will describe in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">System Specifications</head><p>The on-board PC has a 1GHz CPU with 512 MB RAM, 20 GB hard disk space, an Atheros 802.11 a/b/g mini PCI card, and 6 USB 2.0 ports. We used a Garmin 18-5Hz GPS with 12 channel receiver that provides 5 fresh GPS readings per second, and a real-time WAAS correction of errors less than 3 meters. Both the sensor and the GPS provide data in serial format, which can be accessed via an USB serial port on a computer. Note that while we use an off-the-shelf GPS unit, in practice, there exists the opportunity to use built in GPS units in vehicles, which are sometimes wired together with the vehicle's odometry to allow for better location accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Prototype Deployment</head><p>We implemented and deployed this system on three vehicles which collected parking data over a 2 month time frame during their daily commute. Specifically, data was collected in three road-side parking areas in Highland Park, New Jersey as depicted in Figure <ref type="figure" target="#fig_4">5</ref>(b). One of these areas contained 57 marked slotted parking spots. The two unslotted areas are 734 m and 616 m in length. During the experiment time frame, we collected a total of more than ∼ 500 miles of data on streets with parking. All data collected was from roads with single lanes (see Section 7 for a discussion on multi-lane roads). The data collection was not controlled in any manner (e.g. speed, traffic conditions, obstacles, etc.) -all data was collected while drivers went about their daily commutes at various times of the day, oblivious to the data collection process.</p><p>To obtain ground truth information for system evaluation purposes and to be able to analyze erroneous readings, we integrated a Sony PS3 Eye webcam into the passenger-side sensor mount. To avoid angular and shift errors with respect to the sensor, we mounted the camera just above the sensor and aligned its orientation to the sensor. A user space program captures about 20fps and tags each image with a kernel time stamp. This time stamp links images to the sensor records obtained at approximately the same time. We then manually inspected each image and entered the ground  truth sensor data. For this process we implemented the java applet depicted in Fig. <ref type="figure" target="#fig_4">5(b</ref>). It displays each image together with a reference line marking the estimated aiming of the ultrasound sensor and allows the human evaluator to enter whether the reference line crosses a parked vehicle. Note that the webcam is not part of the proposed parking sensing system, it is purely used for evaluation and data analysis purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">GPS trip-boxes for limiting data collection</head><p>We limit data collection to the parking regions identified in Fig. <ref type="figure" target="#fig_4">5(c</ref>) due to the relatively small areas of roadside parking on one commute trip and the large volume of video data involved. The activation and deactivation of data collection is implemented in our system by using the idea of a tripbox. Tripboxes are derived from our virtual trip line concept <ref type="bibr" target="#b1">[3]</ref>, but represent rectangular areas defined by two (latitude,longitude) points. Each tripbox is also associate with an entry and an exit function, which starts and stops data collection, respectively. The tripbox daemon simply reads the current GPS coordinates from the GPS receiver and checks whether it falls inside or outside the tripbox region. If the current coordinate is the first instance of the mobile node inside the tripbox, it triggers the entry function. In case the mobile node is already inside the tripbox and the next received coordinate is outside this region, it triggers the exit function. We use tripboxes because it simplifies the handling of vehicle routes, which might enter a parking zone from an unexpected direction, or the acquisition of a GPS fix while already inside a trip box.</p><p>Since GPS coordinates can oscillate due to positioning errors, the tripbox implementation includes a guard distance and a guard time to avoid repeatedly triggering the same tripbox functions. The guard distance is a minimum distance that must be traveled in between two tripbox boundary crossings. Similarly, the guard time is the minimum time that must be spent before the next tripbox function can be triggered. This avoids triggering the start and the stop functions repeatedly due to GPS errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">DETECTION OF PARKING SPACES</head><p>The detection algorithm translates the ultrasound distancereading trace into a count of available parking spaces. The distance-reading trace provides a one-dimensional view of the distance to the nearest obstacle as the sensing vehicle moves forward. Figure <ref type="figure" target="#fig_6">6</ref> (a) shows an example of the trace produced by our sensor as a sensing vehicle drives past two parked cars. We will refer to the features in Figure <ref type="figure" target="#fig_6">6</ref>(a) as dips in the sensor reading. The width of a dip is representative of the length of a parked car, although, as we shall see, the errors in location estimates obtained from a GPS receiver can distort the true length of the car in a somewhat random manner. We assume that maps of areas with streetparking slots are available from another source (discussed further in Section 7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Challenges</head><p>An ultrasonic sensor does not have a perfectly narrow beam-width, but instead the beam width of the sound waves emitted widens with distance. This implies that the sensor receives echos not just from objects that are directly in front but also from objects that are at an angle. This affects how our sensor perceives vehicles that are parked very close to each another. Instead of clearly sensing the gap between these vehicles, the 'dips' in the sensor reading become merged, as depicted in Figure <ref type="figure" target="#fig_6">6(b)</ref>. Still, classification of the spatial width of the dip allows us to determine the number of cars that a dip corresponds to.</p><p>The inaccuracy of latitude and longitude values obtained from the GPS unit adds another challenge to the detection problem. The location estimate provided by a commercial grade GPS receiver suffers from well known errors. Without a priori knowledge of how the GPS error varies in space and time, it is possible that GPS errors can make a parked car appear to be shorter or longer than its true length. Since the detection of parked vehicles depends upon distinguishing objects that are about the length of a car, from other, smaller obstacles in the sensors path (such as trees, recycle bins, people, etc.), this sometimes leads to false alarms (i.e. dips caused by objects other than cars to be classified as parked cars), and missed detections (i.e. parked vehicles to be classified as something other than a parked car).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Detection algorithms</head><p>Slotted model. Each dip in the sensor trace has depth and a width, that correspond to the distance from the sensor of the object causing the dip, and the size of the object in the direction of motion of the sensing vehicle. The sensor trace is first pre-processed to remove all dips that have too few readings (less than 6 sensor readings, assuming a maximum speed of 37 mph and a car length of 5 meters) and could not possible have arisen from a parked car. To detect a parked car, the width and depth of each dip in the sensor reading is compared against thresholds. We determine these thresholds using part of our data for training the system. Figure <ref type="figure" target="#fig_8">8</ref> shows a series of filtering stages that are applied to each detected dip in the sensor reading. Figure <ref type="figure" target="#fig_9">9</ref>, shows the depth and width of the peaks observed in 19 separate trips in an area with slotted parking. We used this data for jointly picking thresholds for the depth and width of a sensor-reading dip that provide the minimum overall error rate (i.e. the sum of the false positive rate and the miss detection rate<ref type="foot" target="#foot_0">1</ref> ). These thresholds were determined to be 89.7 inches for the depth and 2.52 meters for the width, resulting in an overall error rate of 12.4%.</p><p>Finally, all remaining dips are checked for spatial width, and compared against a threshold representing the typical length of a car. For this, we convert the interpolated GPS coordinates belonging to the starting and ending sample of the dip to UTM (meters) and compute the distance in meters between the starting and ending sample. Since some dips correspond to multiple cars parked very close together, we classify dips of a width greater than twice the threshold for one car, to belong to two cars, and so on. This allows us to count the number of cars on a stretch of road. Subtracting this from the total number of slots on the road, as given by the map, provides an estimate of the number of vacant spaces.</p><p>Unslotted model. For the unslotted parking model, the number of cars that can be accommodated on a given stretch of road depends upon the manner in which cars are parked on it at any given instant of time. Since each successive pair of parked cars in this model can have a variable amount of space between them, we must estimate the space between successive parked cars to determine whether the space is large enough to accommodate one or more cars. To accomplish this, we use the sensor trace to estimate the the spatial distance between dips that have been classified as parked cars. The estimated length of the vacant stretch is then compared against the length of a standard parking space (which we have taken to be 6 meters).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Metrics</head><p>We will deal with the slotted and unslotted street-parking models separately and will assume that it is easy to obtain information about which streets have which type of parking as prior knowledge. For the slotted model, we are interested in detecting how many of the parking spaces on a road segment are vacant.</p><p>Let us assume that a street segment with the slotted parking model is known to have N parking slots and that at a given instant of time, n of these slots are vacant. A sensing vehicle that drives through this street determines that n of the slots are vacant. The value of n can differ from n due to missed detections as well as false positives. We are interested in the missed detection rate pm, i.e. the probability that a parked car is not detected, and the false positive rate p f , i.e. the probability that there is no parked car in a given slot but the detection algorithm detects one.</p><p>The ratio n/n captures the performance of the detection  algorithm in estimating the number of vacant spaces. This ratio can be smaller or larger than 1, for a given run, depending on whether there are greater number of missed detections or false positives. Since our thresholds for dip classification are chosen from our training data to minimize the overall error rate, and this is known to occur when the probability of false alarm equals the missed detection probability <ref type="bibr" target="#b7">[11]</ref>, we expect that the ratio n/n to have a mean close to 1.</p><p>For the unslotted model, the appropriate metric of interest is: 'How many more cars can be accommodated on a given road segment, given the cars that are presently parked on it?'. As explained in Section 4.2, estimating this number requires estimation of the space between parked cars. As in the slotted parking model, we will assume that we have available to us, the locations of stretches where unslotted parking spaces are available and we will run our detection algorithm only over such stretches. Whenever the detection algorithm ascertains that a space between two parked cars is large enough to accommodate another car, it records the estimated space d. Suppose the actual space between the cars is d, then d can be larger or smaller than d and as before, we will take the measure of accuracy to be d/d. Further, we are interested in the miss detection rate p m, i.e. the probability that our algorithm decides that there isn't enough space for a single car, when there actually is, and the false positive rate p f , i.e. the probability that the detection algorithm declares that one or more cars can be accommodated in a space between two parked cars, whereas in reality there is not enough space for a single car. In our evaluation, we will assume a vehicle of length 5 meters and at least half meter on either side for parking, for a minimum of 6 meters to qualify for a parking space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Evaluation</head><p>To evaluate our detection algorithm, we utilize the images recorded by the webcam in our set-up. Since the camera records images at a rate of 21 frames per second, it matches the rate at which sensor readings are recorded fairly well. Each image is manually labelled based on whether the center of the image has a car in front or not. The time stamp associated with each image allows us to interpolate a location stamp for each image. This provides the ground truth for both our training data-set and the evaluation data-set. Figure <ref type="figure" target="#fig_7">7</ref> shows an example of a typical trace of the sensor reading along with the ground truth. Also shown in the image are the speed of the car and the cars detected as output of our detection algorithm. Figure <ref type="figure" target="#fig_10">10</ref>(a) shows the tradeoff between detection rate and false positives for the slotted model, as the threshold for the width of a dip (i.e. corresponding to the length of a car) is varied. We found that a threshold of 2.5 meters provides the best tradeoff in the minimum probability of error sense. Figure <ref type="figure" target="#fig_10">10</ref>(b) shows the number of detected parked vehicles on a road with 57 parking slots, against the true number of parked cars. We found that on average, the ratio of the estimated number of cars to the true number of cars is 1.036, indicating a fairly good estimator of the availability of free spaces.</p><p>For the unslotted model, we compare our estimate of space between two successive cars with the true value as computed using the ground truth generated by our tagged video images. The plot in Figure <ref type="figure" target="#fig_11">11</ref>(a) shows this comparison as a scatterplot. The estimates space is on average 96% of the true space. Further, the estimated space is compared with the length of a typical parking slot (usually about 6 meters) to determine whether an additional car can be accommodated. The result of this detection leads to false positives and missed opportunities, and the trade-off between the corresponding false positive rate and missed detection rate is shown in Figure <ref type="figure" target="#fig_11">11(b)</ref>, as the threshold for the width of a dip is varied. Figure <ref type="figure" target="#fig_1">12</ref> shows two examples of cases, as captured by our webcam, where the detection algorithm was fooled into making false alarm decisions.</p><p>Given that our estimate for the number of cars parked in the slotted model and the amount of space between successive cars are 1.036 times and 0.963 times the true number of cars and the true space respectively, we can say that the system is approximately 95% accurate in terms of obtaining parking counts. In the following section, we will address the problem of trying to assign detected cars to specific slots in the slotted model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">OCCUPANCY MAP CREATION WITH ENVIRONMENTAL POSITIONING CORRECTION</head><p>While counting of available parking spaces did not require high absolute position accuracy, creating an occupancy map of parking increases accuracy requirements since a detected car has to be matched to a spot on a reference map. The location coordinates provided by a GPS receiver are only typically accurate to 3m (standard deviation) when the Wide Area Augmentation System (WAAS) service is available <ref type="bibr" target="#b8">[12,</ref><ref type="bibr" target="#b9">13]</ref>. Given a parking spot length of about 7m, one can expect a significant rate of errors-any error greater than 3.5m could lead to matching a vehicle to an incorrect adjacent spot.</p><p>To address the occupancy map challenge, we develop a occupancy map creation algorithm that exploits both patterns in the sequence of parking spots as well as an Environmental GPS position correction method to improve location accuracy with respect to the parking spot map. We first study how the error in GPS coordinates behaves as a function of distance. The positioning accuracy of a GPS receiver is affected by several factors including ionospheric effects, satellite orbit shifts, clock errors, and multipath. Ionospheric effect typically dominate the other error sources, except for errors that experience satellite occlusion (e.g., in urban canyons). Ionospheric effects remain similar over distances of several 10s of kilometers and they contain significant components whose rate of change is on the order of ∼10s of minutes or longer. GPS errors can therefore be expected to be correlated in time and space. However, the Wide Area Augmentation System was designed to reduce these ionospheric and some other errors, raising the question whether the resulting GPS errors with WAAS still exhibit strong spatio-temporal correlation.</p><p>We find that the GPS error is in fact highly correlated at short distances, and the correlation tapers off with distance. Motivated by this observation, we propose a method to improve absolute location precision by an environmental fingerprinting approach. In particular, we use the sensor reading to detect certain fixed objects that persistently appear in our ultrasound sensor traces, and utilize these to correct the error in the GPS trace. To validate the approach, we test it on the slot-matching problem described above. We expect that our environmental fingerprinting approach will benefit any mobile sensing application that requires precise estimates of location or distance between two points, as is the case in some of the scenarios in our sensing application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">GPS Error Correlation</head><p>We began our study by location-tagging certain fixed objects (such as trees, recycle bins, the edges of street signs, etc. which would also be picked up by our sensor) in our video traces on a given street over multiple different runs from different days. We tagged the data with the same video tagging application we developed for evaluating our detection algorithm (see Figure <ref type="figure" target="#fig_4">5(c)</ref>). We found, as expected that the tagged coordinates for a given object from multiple runs varied significantly. Using 29 different runs and 8 objects on a street, we found the standard deviation of error to be 4.6 m in the X-direction and 5.2 meters in the Y-direction. We note here that the error due to variation in the lateral position of the sensing vehicle was not corrected for because the street chosen for this was narrow enough to allow the lateral variation to be within ±1/2 meter. Also this street was almost parallel to the X axis and so we expected to observe an larger error in the Y direction to slight variaions in the sensing vehicle's lateral position.</p><p>We also found that the error between GPS coordinates is correlated from one object to the next. Figure <ref type="figure" target="#fig_2">13</ref> shows the locations of the 8 objects along the street. We chose the centroid of the 29 tagged locations for each object as the reference location and subtracted each tagged location coordinate to compute the error. Figure <ref type="figure" target="#fig_13">14</ref> shows the correlation between the error in the X and Y directions as a function of distance along the street, using the 8 objects we selected. It is worth noting that the correlation in the error is fairly high for a distance of up to ∼ 250 meters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Environmental Fingerprinting</head><p>The above investigation suggests that if the GPS error is corrected at a given point, then it is likely to remain corrected for an appreciable distance. In Figure <ref type="figure" target="#fig_14">15</ref>, we utilize the location-stamp of the first object on the street (lower left corner in Figure <ref type="figure" target="#fig_2">13</ref>) to correct the errors in the location of the remaining 7 objects. As Figure <ref type="figure" target="#fig_14">15</ref> illustrates, the residual error in the error-corrected location-stamp for the 7 objects increases with increasing distance from object 1.</p><p>Fingerprinting the environment by relying on features in the sensor trace that are produced by fixed objects in the environment, provides a possible means to improve location accuracy beyond that provided by GPS alone. However, fingerprinting a street requires multiple traces from that street, from which the locations of objects that are very likely fixed can be determined.</p><p>Estimating the GPS error using the sensor trace involves a simple task -comparing the reported location of the pattern (dips) produced by a series of fixed objects to the a priori known location of this pattern (as determined from multiple previous traces from the same road segment). The offset between the two gives an estimate of the error in the reported location.</p><p>For example, to detect the dips corresponding to two successive fixed objects from an experimental trace, we first identify a set of candidate dips for each object from the dips that are not classified as vehicles -each candidate set consists of dips within a radius of 20 meters of the known mean location of the fixed object (mean computed from past traces). We then select one dip from each candidate set so that the distance between the successive selected dips best matches the known distance between the mean locations of the objects to which they correspond. The vector offset between the known locations and the reported locations of the objects is the GPS error estimate. The correction procedure must be repeated with another set of objects once the vehicle travel distance has exceeded the correlation distance.</p><p>For n such objects, i = 1, . . . n, we recorded the location stamps li(x, y) of the dips corresponding to each object and subtracted it from the known true location of the object ti(x, y) (assuming the centroid of the 29 locations as above), giving an estimate of the error vector ei(x, y) = ti(x, y)li(x, y). Next, this error vector from a given object is added to the location estimates of all detected cars that are detected to be within 100 meters of this object.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Slot-matching</head><p>Motivated by our observation of correlation between GPS error in space, we studied the specific application of matching detected parked cars to their respective slots on a street with slotted parking. To accomplish this, the output of the algorithm for detecting cars in the slotted model (see Figure <ref type="figure" target="#fig_8">8</ref>) was augmented with the estimated location of each detected car. The locations of 57 slots on a street were determined using a satellite picture from Google Earth. The matching of cars to slots is an instance of the assignment problem <ref type="bibr" target="#b10">[14]</ref> on bipartite graphs and can be solved efficiently using the Hungarian algorithm <ref type="bibr" target="#b11">[15]</ref>. The problem involves assigning each detected parked car with specified location coordinates in the set of detected cars, to a valid slot from among the set of 57 slots available. The criterion for the assignment is the minimization of the cumulative distance between each car and its assigned slot. We used a MATLAB implementation of the Hungarian algorithm to solve for the slot-matching of detected parked cars.</p><p>Figure <ref type="figure" target="#fig_15">16</ref> shows the error-performance of the slot-matching algorithm, when using plain uncorrected traces and with traces that have been corrected using the fingerprinting algorithm described above. We find that the fingerprinting approach described in the previous section segnificantly lowers the error rate in slot assignments. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">MOBILITY STUDY</head><p>The viability of ParkNet and its desirability over static sensor systems that monitor parking is intimately tied to the number of mobile sensors that must be deployed in order to adequately monitor street-parking spaces. In particular, it is important to determine how often, statistically speaking, a ParkNet mobile node would pass by on a randomly picked street, and how this quantity varies as the number of mobile nodes in ParkNet is varied. This relationship could them be used to determine whether the underlying tradeoff allows for significantly fewer (mobile) sensors to be employed in ParkNet than a system with stationary sensors, and if so, what level of cost savings can be expected.</p><p>In order to realistically explore this question, we conducted a study of the mobility patterns of taxicabs using a public dataset of 536 taxicabs in San Francisco collected over a span of roughly one month during 2008 <ref type="bibr" target="#b12">[16]</ref>. The dataset contains time-stamped location traces for each taxicab with successive location updates being recorded 60 seconds apart. Figure <ref type="figure" target="#fig_16">17(b)</ref> shows the locations of a single taxicab in this data-set over a span of 30 days. We approximated the intermediate locations of each taxicab by linearly interpolating locations between successive GPS updates.</p><p>We considered two geographical areas, shown in Figure <ref type="figure" target="#fig_16">17(a):</ref> (i) the greater San Francisco area, and (ii) the busiest portion of San Francisco where the business districts and tourist attractions are concentrated. The latter is also happens to contain all the installations of the SFpark project <ref type="bibr">[8]</ref>. We conjecture that areas with a greater amount of street parking utilization are also the areas with a greatest presence of taxicabs since both are driven by large concentrations of people. This hypothesis is supported by the observation that all present pilot installations of fixed parking sensors under the SFpark project are in the smaller area in Figure <ref type="figure" target="#fig_16">17</ref>(a) (see <ref type="bibr">[8]</ref> for a map) and that the taxicab trace also reveals that cabs spend most time in this area (see Figure <ref type="figure" target="#fig_16">17(b)</ref>).</p><p>We divided each area into a grid of cells that were 175×190 meters in size, and computed for each cell, the mean time between successive visits by a taxicab in the fleet. We chose the size of a cell so that is most cases, only a single road segment is contained within a cell. Our findings are summarized in Figure <ref type="figure" target="#fig_17">18</ref>(a) for the larger area and in Figure <ref type="figure" target="#fig_17">18(b)</ref> for the smaller, busier area. We find, even with roughly 500 cabs deployed in the greater San Francisco area, the mean time between visits to a cell is on the order of hundreds of minutes. On the other hand, the sampling provided by these same cabs in the smaller, downtown area of San Francisco more than adequately covers the smaller area, with 80% of the cells visited on average with an inter-visit interval of under 10 minutes with just 536 cabs. Using this trace as a guideline for other urban areas, one can extrapolate to estimate the number of taxicabs that must be fitted with a sensor in order to provide a sufficiently small inter-visit time between successive visits to a randomly chosen street. Cost analysis: A rough analysis of our system reveals that the basic components in our system cost approximately ∼ $400 for one sensing vehicle (a light-weight PC platform: $170, sensor: $20, GPS unit: $100, and $100 for wiring and connecting components including labor). In comparison, <ref type="bibr" target="#b6">[10]</ref> estimates a cost of $250-$800 per space for a 'smart parking system'. Even taking a conservative estimate of $250 per spot, a system consisting of fixed sensors, covering 6000 parking spaces in the upper left corner of San Francisco (as  a pilot, the SFpark project has installed 6000 sensors in this area of San Francisco at the time of this writing), this would incur a cost of $1.5M for the fixed sensor system. On the other hand, with only 300 cabs (see Figure <ref type="figure" target="#fig_17">18(b)</ref>), which provide an average inter-polling time of ∼ 25 minutes for 80% of the cells, the corresponding cost is roughly $120,000, giving a equipment cost saving factor of 12.5. Note that this number represents a conservative estimate of the cost savings, since (i) in practice, the cost of the mobile sensing system per mobile node can be brought down below our estimate of $400 with aggressive engineering and mass production, and (ii) we have chosen the lower end of the cost estimate per spot for the fixed sensor system. Note further, that San Francisco city is estimated to have 281, 364 road-side parking spaces, of which 24, 464 are estimated to be metered spaces <ref type="bibr" target="#b13">[17]</ref>. While only 6000 spots considered 'high-value' spots by the city of San Francisco have been fitted with fixed sensors, we do not know how many of the total 24, 464 metered spots are within the downtown area we have considered. The cost saving factor is therefore likely to be larger when the actual number of spots in this area is considered.</p><p>The operational running cost of each system comprises maintenance and communications costs. We expect the total operational cost of ParkNet to be less than that of a fixed sensor system. Communications in ParkNet can be done over opportunistic WiFi connections in urban environments, making it almost free, and maintenance is expected to be more easily manageable than a fixed system because the number of mobile nodes is much smaller than the number of fixed sensors, and taxicabs are regularly taken in for maintenance into garages.</p><p>We note however, that the cost benefit that mobile sensing provides comes from the fact that it provides a nonguaranteed, random sampling of the parking process, whereas fixed sensor provide continuous monitoring wherever they are installed. Hence, the cost associated with our system does increase as we require that a higher fraction of cells be covered (for e.g. extrapolation shows that requiring 95% of the cells be sampled with a mean inter-sampling period of 25 minutes would necessitate that our system be deployed in roughly 2000 cabs). Even so, the cost benefits associated with ParkNet are still significant as it is not necessary to have continual sampling of parking space occupancy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">DISCUSSION AND LESSONS LEARNED</head><p>Apart from the challenges faced while meeting real-time localization of vacant parking spots, the gathering and processing of reliable sensor data poses its own set of difficulties. We discuss the details of the most challenging issues we encountered below.</p><p>Power source. One unexpected difficulty turned out to be noisy sensor data affected by the power source for the in-car nodes. Initially, we used a power inverter to convert the 12 volt DC vehicle power supply to AC power suitable for a standard PC power supply. Although this setup supplied adequate power, it lead to very noisy sensor data. The ultrasound transducer may have been affected by the modified sine wave output of the inverter, which is known to affect sensitive electronic equipment. To address this issue, we installed DC to DC power supplies in each car node and connected them directly to the fuse box. This solution worked in some vehicles, but in vehicles with weaker battery, turn-on of the vehicle node was unreliable.</p><p>Multilane roads. Detecting parked cars on a multi-lane road requires lane-detection so that vehicles being passed or passing the sensing car in a different lane are not classified as parked cars. GPS accuracy is unlikely to be sufficient for lane detection. The data collected and reported upon in the paper was taken entirely on single-lane roads. We found, however, through preliminary trials that it is often possible to distinguish moving vehicles in the neighboring lane from parked vehicles by the length of sensor dips. A car moving at similar speeds as the sensing vehicle, for example, will generate a very long dip. Another promising approach is to use a sensor with a much larger range -this can greatly help lane detection.</p><p>Speed limitations. A limitation of using an ultrasonic sensor is that we are limited by the speed of sound. Our sensor provides a maximum range of 6.45 meters, and since it must wait for a return echo before sending out the next pulse, the sensor provide only 20 distance readings per second. This implies that if the sensing vehicle is driving too fast, it will not be able to sense a parked vehicle. For example, at a speed of 15 meters per second (roughly 33 miles per hour), a 5 meter long parked car should produce about ∼ 6 distance readings from the sensor. However, the speed limit in areas with street parking is usually in the range of 35-40 miles per hour and so our choice of sensor should not be a limiting problem.</p><p>Obtaining parking spot maps. One issue that may seem to limit large deployments is the effort to obtain parking spot maps, particularly when complicated time-dependent parking rules are in place. Beyond manual construction from satellite imagery, as in our project, maps may be available to some extend at city authorities. We believe, however, that maps can also be automatically generated through aggregation of sensor data over time periods of weeks to months. The intuition behind this idea is simple: spaces that almost never have cars parked are likely to be invalid parking spaces (driveways, storefronts, illegal parking spots such as fire-hydrants, etc., or simply portions where parking is not allowed), while spaces that always have a car parked are very likely not parked cars, but some other immovable object.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">RELATED WORK</head><p>A number of approaches have been tested for the monitoring of parking spaces in recent times. Parking garages have been using in/out counters at the entry and exit points to count the number of additional vehicles they can accommodate at any given time <ref type="bibr" target="#b14">[18]</ref>. This information is often displayed on prominent electronic signs-boards near such garages or on nearby roadways, allowing drivers to decide which way to go to find parking. Airports and rail stations have been using similar parking management systems in recent times <ref type="bibr" target="#b14">[18]</ref>. A somewhat newer approach to finding and reserving parking spaces in urban areas, albeit with very limited success, has been tested by web-based markets such as those in <ref type="bibr">[19,</ref><ref type="bibr">20]</ref> that allow users to buy and sell parking spaces on the internet for specified times. Such an internet marketplace allows for owners of private spots (such as residential spaces) and parking garages to offer reservations to users looking for parking, and for people occupying public metered spaces to broadcast the time at which they will be vacating the parking spot. Needless to say, no reservation mechanism is possible for metered public spaces. Other web-based systems such as <ref type="bibr">[21,</ref><ref type="bibr">22]</ref> allows travellers to access information about the availability of spaces at airports or rail stations and make prior reservations. In the academic literature, <ref type="bibr" target="#b15">[23]</ref> demonstrated a toy system that monitors individual parking spaces using web cameras, allows users to query the system for vacant spaces on a web front-end and provides the user with the closest vacant parking space that meets the constraints entered by the user. Metered parking in the city of Chicago recently went through major changes <ref type="bibr" target="#b16">[24]</ref> -individual parking meters were replaced with pay stations that handle a large number of parking spaces. Doing away with individual parking meters makes the detection of offending vehicles parked in unpaid spots by parking enforcement authorities harder. Using the slot-matching approach described in this paper, such detection can be greatly simplified. SFPark [8] is the only system in our knowledge that specifically monitors street-side parking spaces, albeit, at fairly high cost of operation and only for metered spaces and garages. In contrast, the mobile sensing approach proposed in this paper provides a probabilistic alternative at a potentially much lower cost, and can work for both metered slotted spaces as well as unslotted spaces.</p><p>Another line of work related to ours is the estimation of traffic conditions on roadways using mobile sensing. The authors in <ref type="bibr" target="#b0">[2]</ref> propose techniques to mine location trace data reported by vehicles on streets reporting their locations infrequently over a cellular uplink, to characterize traffic patterns on road segments. VTrack <ref type="bibr" target="#b17">[25]</ref> explores the use of commodity smartphones for localization using cellular and WiFi signals in addition to GPS for localization to estimate traffic delays on roadways with fine spatio-temporal granularity. Their work focuses on the challenges associated with energy consumption and the unreliability of sensors. Nericell <ref type="bibr" target="#b18">[26]</ref> also utilizes sensors available on smartphones to detect road and traffic conditions in a city, using microphones to detect the level of honking and accelerometers to detect bumps and braking. Other work in mobile sensing includes <ref type="bibr" target="#b5">[9]</ref> which uses the mobility of participating vehicles to detect potholes in roads using accelerometers, and aggregate this data over time to obtain the locations of the roads that are most in need of repair. <ref type="bibr" target="#b1">[3]</ref> uses the concept of virtual triplines to address the privacy problems in traffic monitoring systems based on the reporting of GPS coordinates by individual users.</p><p>Prior work on getting location information in mobile systems has focussed heavily on the use of GPS receivers. Recent research on localization has also explored the use of GSM cellular signals for triangulation of cellphones <ref type="bibr" target="#b19">[27]</ref>. Although cellular signals provide much lower location precision, they have also been used for traffic monitoring applications <ref type="bibr" target="#b17">[25,</ref><ref type="bibr">28,</ref><ref type="bibr">29]</ref>. Finally, our work on improving location accuracy using the sensor in addition to the GPS, may be thought of as a locationing system with the fusion of information from multiple sensors, on which there exists extensive past literature (see for e.g. the location stack <ref type="bibr" target="#b20">[30,</ref><ref type="bibr" target="#b21">31]</ref> built by Hightower and Fox).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">CONCLUSIONS</head><p>We have presented the ParkNet system, a mobile approach to collecting road-side parking availability information, which introduced more challenging location accuracy and sampling frequency requirements than earlier vehicular sensing applications. Based on over 500 miles of data collected over 2 months with our prototype vehicles, we showed that ultrasound sensors combined with GPS can achieve about 95% accurate parking space counts and can generate over 90% accurate parking occupancy maps. To create occupancy maps, we corrected GPS errors using environmental references points, since we found that GPS error were correlated over time and space even with WAAS support. Using tracedriven simulations from San Francisco taxicabs we showed that equipping only 536 vehicles with sensors would lead to a mean inter-sampling interval of about 25min in 85% of the downtown area, or about 10 min in 80% of the area. Further, we expect that the density of taxicabs in an urban area to be strongly correlated with the presence of street parking spaces, since both are driven by the presence of a large number of people. With the small number of sensors required, the mobile sensing approach therefore promises significant cost benefits over current stationary sensing approaches-by an estimated factor of 10-15. We expect that the environmental positioning approach and the taxicab coverage analysis will also benefit other mobile sensing applications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Categorization of urban sensing applications by required location accuracy and relative dynamics of the process being monitored.</figDesc><graphic coords="1,359.88,206.28,152.76,135.66" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Ultrasonic sensor fitted on the side of a car detects parked cars and vacant spaces.</figDesc><graphic coords="2,334.20,53.71,204.12,73.55" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: A diagram depicting the various scenarios and events involved in the detection of parking space using mobile sensors.</figDesc><graphic coords="3,85.44,54.04,438.98,193.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Schematic diagram explaining the overall architecture of the system.</figDesc><graphic coords="4,109.56,53.82,390.60,123.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: (a) An image of the ultrasonic sensor side-mounted on a car (b) The java applet we used for recording ground truth from images. (c) The map of the data collection area.</figDesc><graphic coords="5,400.68,71.37,114.40,119.97" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Dips in the sensor reading as a sensing vehicle drives past (a) two parked cars with some space between them, and (b) two very closely spaced parked cars</figDesc><graphic coords="6,320.52,53.92,231.67,212.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: An example plot showing the sensor reading (dotted red) and ground truth (dashed blue line, high = car, low = no car), speed (increased in magnitude by x10 for visual clarity), and the output of the detection algorithm (purple squares).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: A series of filters are applied to remove dips in sensor readings that are not caused by parked cars. We use 20% of our data to train our model and the remaining 80% to evaluate its performance.</figDesc><graphic coords="7,99.84,53.55,146.72,173.67" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: A plot of the depth and width of most prominent dips observed in the sensor reading, caused by parked cars (blue squares) and objects other than cars (red stars). This data set is taken from 19 trips in an area with slotted parking and is used for training the model used for classifying the rest of the data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: (a) Detection rate versus false positive rate for the slotted parking model. (b) A scatter plot showing the number of vehicles detected against the actual number of vehicles parked for the slotted parking model. Each data point represents a separate run</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: (a) Scatter plot showing the estimate of the space between cars Vs. the true space as obtained from video measurements. (b) Detection rate versus false positive rate for the unslotted parking model, assuming at least 6 meters for a car to park.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 12 :Figure 13 :</head><label>1213</label><figDesc>Figure 12: (a) A moving bicyclist, and (b) a flowerpot, both objects that produced dips in the sensor trace that were classified incorrectly as parked cars</figDesc><graphic coords="9,63.12,71.34,112.00,84.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Correlation in the error (with respect to centroid) of the GPS location estimates corresponding to fixed points along a road, as a function of distance along the road.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: Using the first object in a series of 8 objects to correct the error of the remaining 7 objects. The plots are arranged in increasing order of distance from object 1, from left to right and top to bottom. The colors match those of objects in Figure 13 (axes are in m). Location error builds up with increasing distance from the object 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 16 :</head><label>16</label><figDesc>Figure 16: A comparison of the error rates in assigning parked cars to the correct slots with and without error correction using fingerprinting.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 17 :</head><label>17</label><figDesc>Figure 17: (a) Two areas of San Francisco (one larger and the other, a smaller downtown area) in which we monitored the movements of 536 taxicabs over a stretch of one month (b) Location trace of a single taxicab in San Francisco area over a span of 30 days. The areas with highest presence are also the busiest areas with most street-parking.</figDesc><graphic coords="11,310.92,72.42,243.87,195.24" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 18 :</head><label>18</label><figDesc>Figure 18: The cumulative distribution function of the mean time between successive taxicabs visiting a street in (a) greater San Francisco (b) smaller, busier downtown area, as the number of cabs being considered part of ParkNet is varied. To compute the CDF, the city is divided into cell of size 175 m × 190 m</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>The overall error rate is minimized when the false positive rate and the miss detection rate are equal in value<ref type="bibr" target="#b7">[11]</ref>.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.">ACKNOWLEDGEMENTS</head><p>We would like to thank Ivan Seskar for his constant guidance and support of our efforts, and Ilya Chigirev for his help in building our magnet-mounted sensor prototypes. We would also like to thank Mesut Ali Ergin for helping out with vehicular installation and wiring of mobile ORBIT nodes. The material presented in this paper is partially based upon work supported by the National Science Foundation under Grant No. CNS 0627032.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Surface street traffic estimation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yoon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Noble</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiSys &apos;07: Proceedings of the 5th international conference on Mobile systems, applications and services</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="220" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Virtual trip lines for distributed privacy-preserving traffic monitoring</title>
		<author>
			<persName><forename type="first">B</forename><surname>Hoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gruteser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Herring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ban</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Work</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-C</forename><surname>Herrera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Bayen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Annavaram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiSys &apos;08: Proceeding of the 6th international conference on Mobile systems, applications, and services</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="15" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Cruising for parking</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shoup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Access</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="16" to="22" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Price of Parking on Great Streets</title>
	</analytic>
	<monogr>
		<title level="m">Planetizen Contemporary Debates in Urban Planning</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>Island Press</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="52" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Streetline Networks</title>
		<ptr target="http://www.streetlinenetworks.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The pothole patrol: using a mobile sensor network for road surface monitoring</title>
		<author>
			<persName><forename type="first">J</forename><surname>Eriksson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Girod</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Newton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiSys &apos;08: Proceeding of the 6th international conference on Mobile systems, applications, and services</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="29" to="39" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Advanced parking management systems: A cross-cutting study -taking the stress out of parking, federal highway administration, intelligent transportation systems, u.s. department of transportation</title>
		<imprint>
			<date type="published" when="2007-01">jan 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Trees, Detection, Estimation, and Modulation Theory: Part I</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Wiley-Interscience</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Understanding GPS, Principles and Apllications</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hegarty</surname></persName>
		</author>
		<editor>Artech House</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<ptr target="www.garmin.com/manuals/425technicalspecification.pdf" />
	</analytic>
	<monogr>
		<title level="j">Garmin GPS</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">Technical Specifications</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Assignment Problems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Burkard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dell'amico</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Martello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIAM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The Hungarian Method for the assignment problem</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">W</forename><surname>Kuhn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Naval Research Logistics Quaterly</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="83" to="97" />
			<date type="published" when="1955">1955</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Yellow cab of san francisco, location dataset</title>
		<ptr target="http://cabspotting.org/" />
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Press release -sfmta completes innovative citywide census of san francisco parking, san francisco municipal transporation agency</title>
		<ptr target="http://sfpark.org/media/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<ptr target="http://www.path.berkeley.edu/path/research/featured/120804/smart-park.html" />
		<title level="m">Smart-parking at rockridge BART station</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Irisnet: an internet-scale architecture for multimedia sensors</title>
		<author>
			<persName><forename type="first">J</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Gibbons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Nath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pillai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sukthankar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MULTIMEDIA &apos;05: Proceedings of the 13th annual ACM international conference on Multimedia</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<ptr target="http://www.chicagometers.com" />
	</analytic>
	<monogr>
		<title level="j">Chicago Parking Meters</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">VTrack: accurate, energy-aware road traffic delay estimation using mobile phones</title>
		<author>
			<persName><forename type="first">A</forename><surname>Thiagarajan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ravindranath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lacurts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Toledo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Eriksson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys &apos;09: Proceedings of the 7th ACM Conference on Embedded Networked Sensor Systems</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="85" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Nericell: rich monitoring of road and traffic conditions using mobile smartphones</title>
		<author>
			<persName><forename type="first">P</forename><surname>Mohan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">N</forename><surname>Padmanabhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ramjee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SenSys &apos;08: Proceedings of the 6th ACM conference on Embedded network sensor systems</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="323" to="336" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Are GSM phones THE solution for localization</title>
		<author>
			<persName><forename type="first">A</forename><surname>Varshavsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WMCSA &apos;06: Proceedings of the Seventh IEEE Workshop on Mobile Computing Systems &amp; Applications</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="34" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">The location stack</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
		<idno>UW CSE 03-07-01</idno>
		<imprint>
			<date type="published" when="2003-07">July 2003</date>
			<pubPlace>Seattle, WA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Washington, Department of Computer Science and Engineering</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The location stack: Multi-sensor fusion in action</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hightower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Borriello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Demonstration at the Fifth International Conference on Ubiquitous Computing (Ubicomp)</title>
		<imprint>
			<date type="published" when="2003-10">October 2003</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
