<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Dynamic Adaptive Streaming over HTTP Dataset</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Stefan</forename><surname>Lederer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Alpen-Adria-Universität Klagenfurt Universitätsstraße</orgName>
								<address>
									<postCode>65-67 9020</postCode>
									<settlement>Klagenfurt am Wörthersee</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Christopher</forename><surname>Müller</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Alpen-Adria-Universität Klagenfurt Universitätsstraße</orgName>
								<address>
									<postCode>65-67 9020</postCode>
									<settlement>Klagenfurt am Wörthersee</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Christian</forename><surname>Timmerer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Alpen-Adria-Universität Klagenfurt Universitätsstraße</orgName>
								<address>
									<postCode>65-67 9020</postCode>
									<settlement>Klagenfurt am Wörthersee</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Dynamic Adaptive Streaming over HTTP Dataset</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">7905375418977753E15789521BA33711</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T03:07+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>D.5.1 [Multimedia Information System]: Video Algorithms</term>
					<term>Measurement</term>
					<term>Standardization</term>
					<term>Documentation Dynamic Adaptive Streaming over HTTP</term>
					<term>DASH</term>
					<term>Dataset</term>
					<term>Encoder</term>
					<term>Content Generation Tool</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The delivery of audio-visual content over the Hypertext Transfer Protocol (HTTP) got lot of attention in recent years and with dynamic adaptive streaming over HTTP (DASH) a standard is now available. Many papers cover this topic and present their research results, but unfortunately all of them use their own private dataset which -in most cases -is not publicly available. Hence, it is difficult to compare, e.g., adaptation algorithms in an objective way due to the lack of a common dataset which shall be used as basis for such experiments. In this paper, we present our DASH dataset including our DASHEncoder, an open source DASH content generation tool. We also provide basic evaluations of the different segment lengths, the influence of HTTP server settings, and, in this context, we show some of the advantages as well as problems of shorter segment lengths.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Online video portals like YouTube or Netflix deploy progressive download or adaptive video on demand systems and count millions of users watching their content every day. Real-time entertainment produces already nearly 50% of the U.S. peak traffic nowadays, with almost 30% of the total U.S. downstream traffic produced by Netflix <ref type="bibr" target="#b1">[1]</ref>. Due to these enormous infrastructure and bandwidth needs those costs became a huge problem for content service providers (CSP).</p><p>HTTP streaming and especially adaptive HTTP streaming got much attention in the past few years. Proprietary systems like Microsofts' Smooth Streaming [2], Adobes' HTTP Dynamic Streaming <ref type="bibr">[3]</ref> or Apples' HTTP Live Streaming <ref type="bibr" target="#b2">[4]</ref> provide similar approaches by leveraging existing content delivery network (CDN) and proxy cache infrastructures which costs are significant lower than dedicated streaming server like the Flash Media Server or other competing products.</p><p>But leveraging existing and cheap HTTP infrastructures is not the only reason for adaptive HTTP streaming. Due to the increasing availability of mobile high speed Internet connections like WLAN/3G/4G and the huge smartphone boom in the recent years, mobile video streaming is becoming more and more important. As shown in Figure <ref type="figure" target="#fig_1">1</ref>, the annual growth of mobile video will be more than 100% over the next years until a total share of up to 66% of the total mobile traffic in 2014. However, basic progressive HTTP download/streaming is not suitable for these mobile environments with considerable high bandwidth fluctuations. The video stream has to adapt to the varying bandwidth capabilities in order to deliver the user a continuous video stream without stalls at the best possible quality for the moment, which is achieved by dynamic adaptive streaming over HTTP <ref type="bibr" target="#b3">[5]</ref> <ref type="bibr" target="#b4">[6]</ref>.</p><p>In this context, the emerging ISO/IEC MPEG standard Dynamic Adaptive Streaming over HTTP (DASH) <ref type="bibr" target="#b5">[7]</ref> may get a lot of attention in the upcoming years and probably will become an important as well as company-independent adaptive HTTP streaming standard for all types of devices like PCs, Smartphones, Set-Top Boxes, etc. Hence, it is important to provide easy content generation tools and test content for researchers and developers. Unfortunately, there is currently no common test content dedicated to DASH available, showing the basic possibilities of the standard. In this paper we present our easy-to-use DASH content generation tool called DASHEncoder, which enables the user to encode and multiplex DASH-compliant content in segmented and continuous file structure with the associated Media Presentation Description (MPD). Furthermore, we provide a DASH dataset comprising full-length sequences of various genres encoded at different representations in terms of bitrate, resolution, and quality.</p><p>The remainder of this paper is organized as follows. Section 2 describes related work. The content generation is described in Section 3 and Section 4 provides details about the actual dataset. In Section 5 we use the dataset to evaluate the influence of the segment size and various Web server configurations to the streaming performance. The paper concludes with Section 6 including future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related Work</head><p>A detailed evaluation of the media formats of current adaptive streaming systems and a low overhead container format for adaptive streaming is described in <ref type="bibr">[8]</ref>. <ref type="bibr" target="#b7">[9]</ref> analyzes the quality improvements when using adaptive HTTP streaming over multiple heterogeneous network interfaces.</p><p>Microsoft Smooth Streaming is presented in <ref type="bibr" target="#b8">[10]</ref>  Adobe offers test videos for their Dynamic HTTP Streaming together with the standard installation of their Flash Media Server <ref type="bibr" target="#b9">[11]</ref>. This includes sample encodings of approx. 2 minutes ranging from 150 kbit/s to 1500 kbit/s which comes together with the Flash Media Server. For content generation they also offer a command line based packaging tool called File Packager which performs the segmentation and packaging of the raw video/audio streams. The encoding of the videos has to be done separately, e.g., using the Adobe Encoder or x264 as an open source alternative [3].</p><p>Currently, the only available DASH content is the adapted 3GPP Adaptive HTTP Streaming (AHS) test content of Ericsson Labs which is available in <ref type="bibr" target="#b10">[12]</ref>. They offer two clips, Mountain Bike (HVGA resolution) and Snowboard (VGA resolution) with a length of approx. 4 and 5 minutes respectively. This test content is offered at different bitrates ranging from 200 kbit/s to 1200 kbit/s but it maintains the same resolution. However, this content uses segments with a length of 10 seconds which is a restriction when testing, e.g., high bandwidth fluctuations or adaption algorithms like in <ref type="bibr" target="#b7">[9]</ref>.</p><p>Finally, MP4Box from GPAC <ref type="bibr" target="#b11">[13]</ref> supports the generation of fragmented MP4 files and basic MPDs for separate representations. At the time of writing of this paper, MP4Box supports only one representation which is also used as the basis for our DASHEncoder introduced in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Content Generation</head><p>For this dataset we developed a new content generation tool -on top of GPAC's MP4Box -for DASH video on demand content called DASHEncoder. Using our DASHEncoder the user does not need to encode and multiplex each quality level of the final DASH content separately. The DASHEncoder steps are depicted in Figure <ref type="figure">2</ref>. It generates the desired representations (quality/bitrate levels), fragmented MP4 files, and MPD file based on a given configuration file (e.g., as shown in Figure <ref type="figure">3</ref>) or by command line parameters respectively.</p><p>Given the set of parameters the user has a wide range of possibilities for the content generation, including the variation of the segment size, bitrate, resolution, encoding settings, URL, etc., which is shown by the example of a DASHEncoder configuration file in Figure <ref type="figure">3</ref>. Due to this easy batch processing of multiple encodings to one final DASH source it is also possible to use this application fully automatically, e.g., on user-driven social video platforms like YouTube, without any time consuming manual work of system administrators.</p><p>The DASHEncoder is available open source at <ref type="bibr" target="#b12">[14]</ref> with the aim that other developers will join this project. The content generated with the DASHEncoder is compatible with <ref type="bibr" target="#b13">[15]</ref> which can be used as a decoder and player respectively.</p><p>We developed the DASHEncoder in a very generic way which allows us to add new encoding and multiplexing tools with very low effort and with the usage of the existing parameters and configuration files respectively. Even other video codecs and/or container formats can be integrated in the same way. For example, in addition to the currently integrated AVC/MP4 tools presented in this paper, it is also possible to generate fragmented WebM files which use the VP8 video encoder and a subset of the Matroska container format. Furthermore, it shall be also possible to integrate, e.g., the Adobe packaging tool for HTTP Dynamic Streaming in DASHEncoder and use the same encoded AVC files for the generation of Adobe HTTP Dynamic Streaming compliant content.</p><p>For the current dataset we used our DASHEncoder with x264 <ref type="bibr" target="#b14">[16]</ref> for the video encoding and MP4Box <ref type="bibr" target="#b11">[13]</ref> for the multiplexing as well as for the MPD generation on representation level. Based on these separate MPDs our software generates a combined MPD file containing all representations. This MPD file fits to the generated file structure of the DASHEncoder and the provided URL of the configuration file so that one has no need to edit this file after the content generation process.  In order to retrieve the best suitable bitrate vs. resolution configuration we analysed the PSNR values of the encoded content of several overlapping bitrate configurations. For this we decoded the encoded videos with ffmpeg and upscaled the lower resolution encodings with a bilinear scaling filter to the resolution of the source video. Based on this we calculated the PSNR value of each encoding compared to the original source video. Using this metric we retrieved the best bitrates to change the resolution of the encoded content to provide a continuous quality increase through low to high bitrate levels.</p><p>For the subsequent multiplexing and segmentation step it is necessary to maintain fixed I-frame positions of the video which is achieved by restricting the GOP-size of the encoder to the desired segment size of the content. As a consequence, smaller segment sizes have a disadvantage because of their high number of I frames which need more bits in the overall bitstream. Furthermore, smaller GOP sizes also provide a lower encoding performance and quality which is also shown in <ref type="bibr" target="#b1">[1]</ref>. Table <ref type="table" target="#tab_0">1</ref> shows the PSNR values for different segment sizes and provides evidence that this needs to be considered in the evaluation process for the segment sizes of DASH streaming systems.</p><p>The time needed for the content generation of one representation in 1080p resolution based on a YUV source video and using 2 Xeon 2,33 GHz CPUs corresponds to the video playback time on average, however lower resolution representations can be generated significantly faster. In this process the time needed is mainly dependent on the x264 encoder and the settings used therefore, the multiplexing and MPD generation in contrast is done in less than 5 % of the total time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">DASH Dataset 4.1 Introduction</head><p>During our research on adaptive video streaming and DASH we always had the problem that there is no DASH test content available to perform objective comparisons of streaming algorithms and systems. In general there is hardly any DASH content available at all, except the two test sequences from <ref type="bibr" target="#b10">[12]</ref>.</p><p>Some papers used common test sequences like Foreman et al. for their video streaming tests, which are in general quite short for those kind of experiments, in the case of Foreman the length is 300 frames. One approach is to concatenate the same sequence over and over again in order to have a longer sequence for the evaluation. This approach has the disadvantage that the video characteristics are quite the same over the whole experiment which is often not the case in the real-world. In such cases one usually faces a tradeoff between high and low motion scene, fadein and fade-out, and also quality changes. It is also not always possible to achieve a continuous constant bitrate of an encoded video, especially at higher bitrates due to, e.g., low motion scenes. Therefore, full-length sequences are needed in order to provide more realistic results.</p><p>Our DASH dataset comprises the sequences as shown in Table <ref type="table" target="#tab_1">2</ref> and located at <ref type="bibr" target="#b19">[22]</ref>. All animation and movie sequences are licensed under Creative Commons-BY 2.0, so they are free to share and modify. Both sport sequences are free to use for research purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Representations, Segment Lengths and MPDs</head><p>Table <ref type="table" target="#tab_2">3</ref> shows the representation levels of our dataset. We decided to distinguish the quality level configuration between types of video and to offer at least two sequences with the same configuration. This is useful because of the different scene characteristics (high motion in sport, low detail in Animation, etc.) of the chosen video types. It is also important to mention that the sport and movie genres have only a maximum quality of 6 Mbit/sec. due to fact that our source video files are encoded at 6 Mbit/sec. Another limitation arises at the animation videos due to the lack of achieving the target bitrate of the x264 encoder at higher bitrates for this type of content. Therefore, the higher bitrate encodings are finally encoded at a lower bitrate than desired (the MPDs entries represent the bitrate of the encoded videos).</p><p>Additionally, the DASH dataset is encoded and multiplexed using different segment sizes inspired by commercial products ranging from 2 seconds (i.e., Microsoft Smooth Streaming [2]) to 10 seconds per fragment (i.e., Apple HTTP Streaming <ref type="bibr" target="#b2">[4]</ref>) with some steps in between and at the lower end. Thus, we end up with the segments sizes of 1, 2, 4, 6, 10 and 15 seconds. The length of the segments is a very important decision when providing content for adaptive streaming. Shorter segments may provide a larger overhead in term of requests, which is shown in the evaluation section, and result in more quality switches, with the cost of a lower encoding efficiency. On the other hand, longer segments are not very handy in environments with high bandwidth fluctuations like mobile networks, because the client cannot adjust the video  stream as fast as it would be needed in case of a significant bandwidth drop.</p><p>In this dataset we offer any content in a version with separate segments and the corresponding MPD. Additionally, we also offer an unsegmented version of the videos and the corresponding MPD for the movies of the animation genre, which allows for byterange requests. The provided MPDs of the dataset are based on the 2 nd Draft International Standard (DIS) of DASH <ref type="bibr" target="#b5">[7]</ref> and are also available in the version compatible with the current implementation of the DASH VLC Plugin <ref type="bibr" target="#b13">[15]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">PSNR Statistics</head><p>The average bitrate of the streamed video is a good metric for DASH clients and their stream switching algorithms. But the bitrates do not necessarily correspond to the quality of the video, especially because of the differences in encoding efficiency between high-and low-motion scenes. Usually the encoder compensates those differences by adjusting the bitrate over the whole video to get the best overall quality. However, due to the constant bitrate of DASH representations, which is more or less constant all over the video (or at least the current DASH-Period), this is not possible in our scenario. Thus, it can be useful to consider the PSNR as a metric for stream switching algorithms in certain cases. Therefore, we also provide PSNR values on frame level of the Big Buck Bunny encodings. Those values are available for each frame of each representation and each segment length version of this video, which sums up in more than 1.7 million PSNR values. One can find them together with the dataset in comma separated value (CSV) as well as Microsoft Excel files <ref type="bibr" target="#b19">[22]</ref>. As an example, Figure <ref type="figure" target="#fig_3">4</ref> shows the PSNR values of 4 representations of about 850 frames of the 2-second segment length version of our Big Buck Bunny encoding.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Dataset Usage</head><p>Our dataset can be used for many kinds of evaluations in the context of MPEG-DASH like e.g. the comparison of different stream switching algorithms, the caching performance of CDNs and proxies, new applications on top of DASH, etc. The main advantage of our dataset is that it now enables the objective comparison of research results across different institutions working in this field. The dataset and a short compendium of its characteristics can be found in <ref type="bibr" target="#b19">[22]</ref> where it is possible either to stream the video directly from our Web server or download the files via FTP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Evaluation 5.1 Introduction</head><p>Together with the dataset we provide some basic evaluations of the streaming characteristics of the different segment length versions of the videos and their impact on the average bitrate of the streamed video. Therefore, we evaluate the streaming performance of each segment length version in terms of average bitrate and interpolate a graph to find the optimal segment length for the given network scenario.</p><p>During our first tests we realized different Web server configurations on our hosting provider's sites. Some of them allow persistent connections, as defined in HTTP 1.1 <ref type="bibr" target="#b20">[23]</ref>, and some restrict the reuse of connections for multiple requests by closing the connection after the response. This is signaled by the Connection: close field of the HTTP 1.1 response header. Other providers limit the Keep-Alive-Time to 1 second, which is quite short in comparison to the 15 second standard configuration of the Apache Web server <ref type="bibr" target="#b21">[24]</ref>. Due to this difference in todays' available Web server configurations we also decided to analyze the impact thereof w.r.t. the streaming performance and segment lengths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation Setup</head><p>As a first step, we built a test environment (shown in Figure <ref type="figure" target="#fig_4">5</ref> and similar to <ref type="bibr" target="#b22">[25]</ref>) emulating standard Internet connections to show the impact of the HTTP server configuration on DASH. Therefore, we used a standard Apache Web server as source of our DASH streaming scenario which has a wide range of configuration possibilities regarding connections. The DASH client is a modified version of the DASH VLC plugin <ref type="bibr" target="#b13">[15]</ref>, with some minor changes regarding logging. Additionally, we used two Ubuntu nodes which act as gateways to emulate the typical network characteristics of a last mile Internet connection (e.g. ADSL). One node -network emulation -emulates the Internet service provider characteristics by adding a delay of 150 ms using NetEm (packet loss/packet reordering are currently not considered to keep this example evaluation simple). The other node -traffic shaping -simulates scenarios of fluctuating bandwidth conditions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">System Parameters</head><p>For our evaluations we used a standard installation of the Apache Web server and enabled/disabled the KeepAlive On/Off setting in the httpd.conf to show the impact of persistent and non-persistent connections. As already mentioned we simulated the network by  The bandwidth varies over time with a minimum of about 386 kbit/sec. and a maximum of 1536 kbit/sec. for the downlink. For our evaluation we used the Big Buck Bunny movie of our dataset, which is available in 6 different segment lengths of 1, 2, 4, 6, 10, and 15 seconds, each with 21 representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Results</head><p>Our evaluations showed a significant performance drop by streaming from a Web server which does not allow persistent connection, especially for short segments lengths like 2 seconds or less. One can see this in Figure <ref type="figure" target="#fig_5">6</ref>, which shows the comparison between the DASH streaming performance of the 2-second segment length version of Big Buck Bunny with and without persistent connections.</p><p>In our evaluation the streaming using persistent connections corresponds with the findings from <ref type="bibr" target="#b22">[25]</ref> and <ref type="bibr" target="#b23">[26]</ref> that for TCPbased streaming one needs about the double bandwidth of the media bitrate to achieve a sufficient performance. Streaming without persistent connections results in a significantly higher bandwidth demand and the average media bitrate in our evaluation of 2-seconds segment in Figure <ref type="figure" target="#fig_5">6</ref> is about 34% lower than using persistent connections. The average bitrate in the worst scenario with 1-second segments drops by 46% in comparison to a Web server with persistent connections enabled as shown in Figure <ref type="figure" target="#fig_7">8</ref>.</p><p>Segment sizes greater than 6 seconds are not influenced so much by the connection settings of the Web server. Due to the lower amount of segments and, thus, the smaller overhead produced by reconnects, the difference between both configurations reduces by 2% for the 15-seconds segment length version of Big Buck Bunny (cf. Figure <ref type="figure" target="#fig_6">7</ref>). One can see the pretty equal media bitrate need of both evaluations as well as the lower amount of requests shown by squares and triangles in the plot. The requests are not shown in Figure <ref type="figure" target="#fig_5">6</ref>, due to the high frequency of the requests (i.e., every two seconds) compared to one request every 15 seconds shown in Figure <ref type="figure" target="#fig_6">7</ref>.</p><p>Finally, we evaluated the optimal segment size of our network configuration scenario for both cases, with and without persistent connections. Therefore, we analyzed the performance of the 1, 2, 4, 6, 10 and 15 seconds segment length of Big Buck Bunny of our dataset and interpolated a graph showing the performance of the segment sizes in term average media bitrate. As shown in Figure <ref type="figure" target="#fig_7">8</ref> the optimal segment size for this network setting would be between 2 and 3 seconds using persistent connections and between 5 and 8 without using them. The bitrate of the optimal segment lengths of both configurations differs by about 50 kbit/sec.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion and Future Work</head><p>In this paper we provide, to the best of our knowledge, the first DASH dataset comprising different genres, most of them in HD quality. In comparison to other sources for video test content, which mostly offer clips with only a few seconds of length, this dataset is especially designed for DASH-based evaluations and consists of videos between 10 and 90 minutes.</p><p>Each video of this dataset is provided in different segment lengths as well as in different representations ranging from 50 kbit/sec. up to several MBit/sec. One can use this dataset to compare DASHbased streaming clients/systems in an objective way with a common content basis. Additionally, we provide PSNR values for every frame of the Big Buck Bunny representations, which provide even more evaluation possibilities for researchers.</p><p>We also developed a convenient content generation tool called DASHEncoder, which we used for the encoding of this dataset. This fully configurable and extensible DASH encoding tool is offered as open source at <ref type="bibr" target="#b12">[14]</ref>.   Finally, we showed an evaluation of the optimal segment size for a given network configuration based on our dataset. We also showed the influence of enabled versus disabled persistent connections of Web servers to the streaming performance of DASH. Therefore, we build a simulation environment for performing tests to get the optimal segment size for those different scenarios.</p><p>Based on this dataset we plan to do research on stream switching algorithms and DASH-based systems in general. We also plan to update and extend our dataset in the future, like adding alternative encodings or audio tracks to the existing videos. Additionally, we will include versions with different sub-segment lengths and other media formats.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>with two test sequences of about 10 minutes of the open source movie Big Buck Bunny. They offer the clip in different resolutions up to 720p and 1080p respectively, with 8 quality levels from about 230 kbit/s up to 3 Mbit/sec. The content generation for Microsoft Smooth Streaming is done by the IIS Transform Manager, which performs a fully automated transcoding of content to Microsoft Smooth Streaming compatible fragmented MP4 files at different quality levels.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Mobile Data Volume Growth [5].Figure2: DASHEncoder Content Generation Steps.</figDesc><graphic coords="2,66.11,62.40,223.11,134.77" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Figure 1: Mobile Data Volume Growth [5].Figure 2: DASHEncoder Content Generation Steps. # x264 Options #========================= bitrate : 200|400|600|1000 statistics : stat.temp gop : 48 profile : baseline preset : slow input : /home/stefan/foreman_cif.y4m passes : 1 const-filesize : 0 # MP4Box Options #========================= fragment-size : 2000 segment-size : 2000 rap-aligned segment-name : foreman folder-prefix : foreman # MPD Options #========================= mpd-name : foreman.mpd url-root : http://localhost/foreman_stats/ set-base-url Figure 3: DASHEncoder Configuration File Example.</figDesc><graphic coords="2,338.52,58.82,188.51,130.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: PSNR Value Example of different Representations.</figDesc><graphic coords="4,65.18,73.82,230.67,230.67" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Network Emulation Environment.</figDesc><graphic coords="4,318.51,70.18,230.72,78.31" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Non-/Persistent Connetions -2 sec. segments.</figDesc><graphic coords="5,65.88,69.49,230.78,169.77" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Non-/Persistent Connetions -15 sec. segments.</figDesc><graphic coords="5,66.63,259.04,230.67,169.42" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Segment length/Bandwidth Evaluation.</figDesc><graphic coords="5,315.00,71.63,230.67,167.93" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 . Segment Length Quality Comparison of the Big Buck Bunny Sequence (300 kbit/sec., 480x360).</head><label>1</label><figDesc></figDesc><table><row><cell>Segment</cell><cell>1 sec.</cell><cell>2 sec.</cell><cell>4 sec.</cell><cell>6 sec.</cell><cell>10 sec.</cell><cell>15 sec.</cell></row><row><cell>Length</cell><cell>(24)</cell><cell>(48)</cell><cell>(96)</cell><cell>(144)</cell><cell>(240)</cell><cell>(360)</cell></row><row><cell>(GOP)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>PSNR</cell><cell>35,83</cell><cell>36,51</cell><cell>36,98</cell><cell>37,14</cell><cell>37,31</cell><cell>37,31</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 : Overview of our DASH dataset.</head><label>2</label><figDesc></figDesc><table><row><cell>Name</cell><cell>Source Quality</cell><cell>Length</cell><cell>Genre</cell></row><row><cell>Big Buck Bunny [17]</cell><cell>1080p YUV</cell><cell>09:46</cell><cell>Animation</cell></row><row><cell>Elephants Dream [18]</cell><cell>1080p YUV</cell><cell>10:54</cell><cell>Animation</cell></row><row><cell>Red Bull Playstreets</cell><cell>1080p 6 Mbit AVC</cell><cell>01:37:28</cell><cell>Sport</cell></row><row><cell>The Swiss Account [19]</cell><cell>1080p 6 Mbit AVC</cell><cell>57:34</cell><cell>Sport</cell></row><row><cell>Valkaama [20]</cell><cell>1080p 6 Mbit AVC</cell><cell>01:33:05</cell><cell>Movie</cell></row><row><cell>Of Forest and Men [21]</cell><cell>SD</cell><cell>10:53</cell><cell>Movie</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 . Target Bitrate Levels for each Genre.</head><label>3</label><figDesc></figDesc><table><row><cell>#</cell><cell>Animation</cell><cell>Sport</cell><cell>Movie</cell></row><row><cell>1</cell><cell>50 kbit/s, 320x240</cell><cell>100 kbit/s, 320x240</cell><cell>50 kbit/s, 320x240</cell></row><row><cell>2</cell><cell cols="3">100 kbit/s, 320x240 150 kbit/s, 320x240 100 kbit/s, 320x240</cell></row><row><cell>3</cell><cell cols="3">150 kbit/s, 320x240 200 kbit/s, 480x360 150 kbit/s, 320x240</cell></row><row><cell>4</cell><cell cols="3">200 kbit/s, 480x360 250 kbit/s, 480x360 200 kbit/s, 480x360</cell></row><row><cell>5</cell><cell cols="3">250 kbit/s, 480x360 300 kbit/s, 480x360 250 kbit/s, 480x360</cell></row><row><cell>6</cell><cell cols="3">300 kbit/s, 480x360 400 kbit/s, 480x360 300 kbit/s, 480x360</cell></row><row><cell>7</cell><cell cols="3">400 kbit/s, 480x360 500 kbit/s, 854x480 400 kbit/s, 480x360</cell></row><row><cell>8</cell><cell cols="3">500 kbit/s, 480x360 700 kbit/s, 854x480 500 kbit/s, 854x480</cell></row><row><cell>9</cell><cell cols="3">600 kbit/s, 854x480 900 kbit/s, 854x480 600 kbit/s, 854x480</cell></row><row><cell cols="4">10 700 kbit/s, 854x480 1,2 Mbit/s, 854x480 700 kbit/s, 854x480</cell></row><row><cell cols="4">11 900 kbit/s,1280x720 1,5 Mbit/s,1280x720 900 kbit/s,1280x720</cell></row><row><cell cols="4">12 1,2 Mbit/s,1280x720 2,0 Mbit/s,1280x720 1,2 Mbit/s,1280x720</cell></row><row><cell cols="4">13 1,5 Mbit/s,1280x720 2,5 Mbit/s,1280x720 1,5 Mbit/s,1280x720</cell></row><row><cell cols="4">14 2,0 Mbit/s,1280x720 3,0 Mbit/s,1920x1080 2,0 Mbit/s,1920x1080</cell></row><row><cell cols="4">15 2,5 Mbit/s,1920x1080 4,0 Mbit/s,1920x1080 2,5 Mbit/s,1920x1080</cell></row><row><cell cols="4">16 3,0 Mbit/s,1920x1080 5,0 Mbit/s,1920x1080 3,0 Mbit/s,1920x1080</cell></row><row><cell cols="4">17 4,0 Mbit/s,1920x1080 6,0 Mbit/s,1920x1080 4,0 Mbit/s,1920x1080</cell></row><row><cell cols="2">18 5,0 Mbit/s,1920x1080</cell><cell></cell><cell>5,0 Mbit/s,1920x1080</cell></row><row><cell cols="2">19 6,0 Mbit/s,1920x1080</cell><cell></cell><cell>6,0 Mbit/s,1920x1080</cell></row><row><cell cols="2">20 8,0 Mbit/s,1920x1080</cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">ACKNOWLEDGMENTS</head><p>This work was supported in part by the EC in the context of the ALICANTE (FP7-ICT-248652) and SocialSensor (FP7-ICT-287975), and QUALINET (COST IC 1003) projects. Special thanks to the Red Bull Media House for providing us the Red Bull Playstreets video. They own the rights of the content but the usage for scientific purposes is permitted. Special thanks also to the team of Valkaama and to the producer Tim Baumann for providing us this content.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Netflix Now The Largest Single Source of Internet Traffic In North America</title>
		<author>
			<persName><forename type="first">E</forename><surname>Schonfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Crunch</forename><surname>Tech</surname></persName>
		</author>
		<ptr target="http://techcrunch.com/2011/05/17/netflix-largest-internet-traffic/" />
		<imprint>
			<date type="published" when="2011-05-17">2011. May 17th, 2011. Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Pantos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>May</surname></persName>
		</author>
		<ptr target="http://tools.ietf.org/html/draft-pantos-http-live-streaming-04" />
		<title level="m">HTTP Live Streaming</title>
		<imprint>
			<date type="published" when="2010-06">2010. Jun. 2010. Dec. 2010</date>
		</imprint>
	</monogr>
	<note>IETF draft. last access</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dynamic Adaptive Streaming over HTTP -Design Principles and Standards</title>
		<author>
			<persName><forename type="first">T</forename><surname>Stockhammer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the second annual ACM conference on Multimedia systems (MMSys11)</title>
		<meeting>the second annual ACM conference on Multimedia systems (MMSys11)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The MPEG-DASH Standard for Multimedia Streaming Over the Internet</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sodagar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Multimedia</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="62" to="67" />
			<date type="published" when="2011-12">Oct.-Dec. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<idno>ISO/IEC DIS 23009-1.2</idno>
		<title level="m">Information technology -Dynamic adaptive streaming over HTTP (DASH) -Part 1: Media presentation description and segment formats</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Low overhead container format for adaptive streaming</title>
		<author>
			<persName><forename type="first">H</forename><surname>Riiser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Halvorsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Griwodz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Annual ACM SIGMM Conference on Multimedia Systems (MMSys)</title>
		<meeting>the First Annual ACM SIGMM Conference on Multimedia Systems (MMSys)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improving the Performance of Quality-Adaptive Video Streaming over Multiple Heterogeneous Access Networks</title>
		<author>
			<persName><forename type="first">K</forename><surname>Evensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kaspar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Griwodz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Halvorsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the second annual ACM conference on Multimedia systems (MMSys11)</title>
		<meeting>the second annual ACM conference on Multimedia systems (MMSys11)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<ptr target="http://www.iis.net/media/experiencesmoothstreaming" />
		<title level="m">Smooth Streaming Showcase</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<ptr target="http://www.adobe.com/products/flashmediaserver/" />
		<title level="m">Flash Media Server</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<ptr target="http://www-itec.uni-klu.ac.at/dash/?page_id=6" />
		<title level="m">Ericsson AHS Content at ITEC/Alpen-Adria-Universität Klagenfurt</title>
		<imprint>
			<date type="published" when="2011-12">Dec 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Experimenting with Multimedia Advances using GPAC</title>
		<author>
			<persName><forename type="first">J</forename><surname>Le Feuvre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Concolato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-C</forename><surname>Dufourd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bouqueau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-C</forename><surname>Moissinac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM Conference on Multimedia</title>
		<meeting>ACM Conference on Multimedia<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<ptr target="http://www-itec.uni-klu.ac.at/dash/?page_id=282" />
		<title level="m">ITEC/Alpen-Adria-Universität Klagenfurt</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Test-Bed for the Dynamic Adaptive Streaming over HTTP featuring Session Mobility</title>
		<author>
			<persName><forename type="first">C</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Timmerer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the second annual ACM conference on Multimedia systems (MMSys11)</title>
		<meeting>the second annual ACM conference on Multimedia systems (MMSys11)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName><surname>X264</surname></persName>
		</author>
		<ptr target="http://www.videolan.org/developers/x264.html" />
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<ptr target="http://www.elephantsdream.org" />
		<title level="m">Elephants Dream Movie</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<ptr target="http://lt11.com/2011/07/18/the-swiss-account-2" />
		<title level="m">The Swiss Account</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<ptr target="http://www.valkaama.com" />
		<title level="m">Valkaama Movie</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<ptr target="http://www.offorestsandmen.org" />
		<title level="m">Of Forest and Men</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<ptr target="http://www-itec.uni-klu.ac.at/dash/?page_id=207" />
		<title level="m">DASH Dataset at ITEC/Alpen-Adria-Universität Klagenfurt</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Fielding</surname></persName>
		</author>
		<ptr target="http://www.w3.org/Protocols/rfc2616/rfc2616.html" />
		<title level="m">RFC 2068 -Hypertext Transfer Protocol --HTTP/1.1</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<ptr target="http://httpd.apache.org/" />
	</analytic>
	<monogr>
		<title level="j">Apache HTTP Server Project</title>
		<imprint>
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
	<note>last access</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">An Evaluation of TCP-based Rate-control Algorithms for Adaptive Internet Streaming of H.264/SVC</title>
		<author>
			<persName><forename type="first">R</forename><surname>Kuschnig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kofler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hellwagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Annual ACM SIGMM Conference on Multimedia Systems (MMSys)</title>
		<meeting>the First Annual ACM SIGMM Conference on Multimedia Systems (MMSys)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multimedia streaming via TCP: An analytic performance study</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kurose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Towsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACMTrans.Multimedia Comput. Commun. Appl</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">16</biblScope>
			<date type="published" when="2008-05">2008. May 2008</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
