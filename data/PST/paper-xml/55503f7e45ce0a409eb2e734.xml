<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Qiao</forename><surname>Yan</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Shen-zhen University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">F</forename><forename type="middle">Richard</forename><surname>Yu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Shen-zhen University</orgName>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">E11E54BAEC658DEA25DFB64C04AFA96C</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>Cloud computing has emerged as a hotspot in both academia and industry due to its essential characteristics, such as on-demand self-service, broad network access, resource pooling, rapid elasticity, and measured service. Currently, security issues have been regarded as the dominant barrier in the development of cloud computing <ref type="bibr" target="#b0">[1]</ref>. Security requirements of cloud computing include confidentiality, integrity, availability, accountability, and privacy-preservability. Among these security requirements, availability is crucial since the core function of cloud computing is to provide on-demand service of different levels. If a certain service is no longer available or the quality of service cannot meet the service level agreement (SLA), customers may lose faith in the cloud system <ref type="bibr" target="#b0">[1]</ref>. Denial of service (DoS) attacks and distributed denial of service (DDoS) attacks are the main methods to destroy the availability of cloud computing. In DoS or DDoS attacks, an attacker attempts to make a machine or network resource unavailable to its intended users <ref type="bibr" target="#b1">[2]</ref>. DoS attacks are sent by one person or system, while DDoS attacks are sent by two or more persons or systems. An attacker may be a real person or a group of zombies that are controlled by an attacker. An attacker has the capability to send large volume packets to the target with spoofed source IP addresses.</p><p>Although some excellent work has been done to defeat DDoS attacks in traditional computing environments, DDoS attacks are becoming more prevalent in cloud computing environments. Moreover, we have started to see new forms of attack based on the new characteristics of cloud computing, such as the emergence of new economic denial of sustainability (EDoS) attacks <ref type="bibr" target="#b0">[1]</ref>.</p><p>Recently, software defined networking (SDN) has attracted much interest as a new paradigm in networking <ref type="bibr" target="#b2">[3]</ref>. Although SDN brings numerous benefits by decoupling the control plane from the data plane, there is a contradictory relationship between SDN and DDoS attacks. On one hand, the capabilities of SDN (e.g. softwarebased traffic analysis, logical centralized control, global view of the network, and dynamic updating of forwarding rules) make it easy to detect and to react to DDoS attacks rapidly. On the other hand, the separation of the control plane from the data plane introduces new attacks. Consequently, SDN itself may be a target of DDoS attacks. Indeed, potential DDoS vulnerabilities exist across the SDN platform <ref type="bibr" target="#b3">[4]</ref>. For example, an attacker can take advantage of the characteristics of SDN to launch DDoS attacks against the control layer, infrastructure layer, and application layer of <ref type="bibr">SDN.</ref> In this article we first discuss the new trends and characteristics of DDoS attacks in cloud computing environments. We show that SDN brings us a new chance to defeat DDoS attacks in cloud computing environments, and we summarize good features of SDN in defeating DDoS attacks. Then we review the studies about</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ABSTRACT</head><p>Although software-defined networking (SDN) brings numerous benefits by decoupling the control plane from the data plane, there is a contradictory relationship between SDN and distributed denial-of-service (DDoS) attacks. On one hand, the capabilities of SDN make it easy to detect and to react to DDoS attacks. On the other hand, the separation of the control plane from the data plane of SDN introduces new attacks. Consequently, SDN itself may be a target of DDoS attacks. In this paper, we first discuss the new trends and characteristics of DDoS attacks in cloud computing environments. We show that SDN brings us a new chance to defeat DDoS attacks in cloud computing environments, and we summarize good features of SDN in defeating DDoS attacks. Then we review the studies about launching DDoS attacks on SDN and the methods against DDoS attacks in SDN. In addition, we discuss a number of challenges that need to be addressed to mitigate DDoS attached in SDN with cloud computing. This work can help understand how to make full use of SDN's advantages to defeat DDoS attacks in cloud computing environments and how to prevent SDN itself from becoming a victim of DDoS attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SECURITY AND PRIVACY IN EMERGING NETWORKS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Qiao Yan and F. Richard Yu</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Distributed Denial of Service Attacks in Software-Defined Networking with Cloud Computing</head><p>launching DDoS attacks on SDN and the methods against DDoS attacks in SDN. In addition, we discuss a number of challenges that need to be addressed to mitigate DDoS attached in SDN with cloud computing.</p><p>To the best of our knowledge, the contradictory relationship between SDN and DDoS attacks has not been well addressed in previous work. Essentially, it is the unique dynamics associated with SDN and DDoS attacks that present unique challenges beyond the existing works. We believe that the initial steps we have taken here help understand how to make full use of SDN's advantages to defeat DDoS attacks in cloud computing environments and how to prevent SDN itself from becoming a victim of DDoS attacks.</p><p>The rest of the article is organized as follows. We present the new trends of DDoS in cloud computing environments. Some good features of SDN in defeating DDoS attacks are discussed. We review the work about launching DDoS attacks on SDN. Some open research issues are presented. Finally, we conclude this study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DDOS ATTACKS IN CLOUD COMPUTING ENVIRONMENTS ARE GROWING</head><p>In this section we explain the reasons why the rate of DDoS attacks in cloud computing environments has grown substantially based on the essential characteristics of cloud computing, including on-demand self-service, broad network access, resource pooling, rapid elasticity, and measured service, as shown in Fig. <ref type="figure" target="#fig_0">1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ON-DEMAND SELF-SERVICE LEADING TO BOTNETS OUTBREAK</head><p>One major reason why the rate of DDoS attacks in cloud computing has grown substantially is the emergence and development of botnets. Botnets are networks that are formed by bots or machines compromised by malware. Large-scale botnets (e.g. Srizbi, Kraken/Bobax, and Rustock) have gained notoriety for performing DDoS attacks. It remains fairly complex to infect a sufficient number of machines in a short time frame in traditional networks. But the on-demand self-service capabilities of the cloud could be used by hackers to instantly create a powerful botnet. With cloud computing, malware-as-a-service is being used for launching DDoS attacks. Because of competition among suppliers, the price of malware-as-a-service has been falling rapidly. Cheap prices make it easier to use botnets to launch large-scale DDoS attacks in cloud computing environments than in traditional networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BROAD NETWORK ACCESS AND RAPID ELASTICITY LEADING TO MORE IMMENSE, FLEXIBLE, AND SOPHISTICATED DDOS ATTACKS</head><p>With cloud computing's capabilities of broad network access and rapid elasticity, attackers can not only launch immense DDoS attacks, but also produce more flexible and more sophisticated DDoS attacks by using heterogeneous thin or thick client platforms, which are discussed in the following.</p><p>More Immense DDoS Attacks in Cloud Computing: The size and frequency of DDoS attacks have grown dramatically as attackers take advantage of botnets and other high-speed Internet access technologies to overwhelm their victim's network infrastructure. In March 2013, Spamhaus, an organization that maintained lists of spammers, came under a massive DNS reflection DDoS attack. The greatest attack traffic was reportedly as high as 300Gbps.</p><p>More Flexible DDoS Attacks in Cloud Computing: Because of cloud computing's capabilities of broad network access, mobile devices such as smartphones and tablets are expected to become a significant launching platform for DDoS attacks. The rising bandwidth and processing power and the lack of security of mobile devices make them an ideal platform for hackers to compromise for DDoS attack campaigns.</p><p>More Sophisticated DDoS Attacks in Cloud Computing: DDoS attacks are becoming larger and more frequent, and they are becoming more sophisticated as they pinpoint specific applications (e.g. DNS, HTTP or VoIP) or a weak point in the victim's system design. Although sophisticated DDoS attacks require more understanding of the attacked system, they usually use less traffic and are harder to detect.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RESOURCE POOLING LEADING TO THE VICTIMS MORE VULNERABLE TO DDOS ATTACKS</head><p>In cloud computing, virtualization technology and multi-tenant infrastructure on one hand make attackers launch DDoS attacks more easily, and on the other hand cause the victims to be more vulnerable to DDoS attacks.</p><p>•Virtualization technology makes attackers launch DDoS attacks more easily: Virtualization technology can be used by attackers to preset for DDoS attacks before launching attacks. Virtual Resource pooling leading to the victims being more vulnerable to DDoS attacks.</p><p>Broad network access and rapid elasticity leading to more immense, flexible and sophisticated DDoS attacks.</p><p>Rapid elasticity and measured service leading to a new breed of DDoS attacks.</p><p>Why does the rate of DDoS attacks grow substantially in cloud computing environments</p><p>On-demand self-service leading to botnets outbreaking.</p><p>machines can be built using little memory or disk space to launch more attacks with less costs.</p><p>•Virtualization technology and multi-tenant infrastructure cause the victims to be more vulnerable to DDoS attacks: Researchers have shown that on a DoS attack, the performance of a web server hosted in a virtual machines can degrade by up to 23 percent, while that of a nonvirtualized server hosted on the same hardware degrades by only eight percent <ref type="bibr" target="#b4">[5]</ref>. Since the cloud computing environment is inherently a multi-tenant infrastructure, an attack against a single customer is actually an attack against all customers in that given cloud.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RAPID ELASTICITY AND MEASURED SERVICE LEADING TO A NEW BREED OF DDOS ATTACKS</head><p>With rapid elasticity and measured service, adopters of the cloud service model are charged on a pay-per-use basis of the cloud's server and network resources. With this model, a conventional DDoS attack on server and network resources is transformed in a cloud environment into a new breed of attack that targets the cloud adopter's economic resources, e.g. economic denial of sustainability (EDoS) attacks <ref type="bibr" target="#b0">[1]</ref>.</p><p>The goal of an EDoS attack is to deprive the victims (i.e. regular cloud customers) of their long-term economic viability. An EDoS attack succeeds when it causes financial burden on the victim. For example, attackers who act as legal cloud service clients continuously send requests to a website hosting in cloud servers to consume bandwidth, which bills to the cloud customer owning the website. It seems to the web server that this traffic does not reach the level of service denial, and it is difficult to distinguish EDoS attack traffic from other legitimate traffic <ref type="bibr" target="#b0">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IS SDN A SILVER BULLET FOR DEFEATING DDOS ATTACKS?</head><p>Enterprises have enthusiastically embraced cloud computing, which offers an effective way to reduce capital expenditure (CapEx) and operational expenditure (OpEx) <ref type="bibr" target="#b0">[1]</ref>. However, security  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>WHAT IS SOFTWARE-DEFINED NETWORKING</head><p>SDN is currently attracting significant attention from both academia and industry. The Open Networking Foundation (ONF) is a nonprofit consortium dedicated to the development, standardization, and commercialization of SDN. ONF has provided the most explicit and well received definition of SDN as follows: "In the SDN architecture, the control and data planes are decoupled, network intelligence and state are logically centralized, and the underlying network infrastructure is abstracted from the applications" <ref type="bibr" target="#b5">[6]</ref>.</p><p>ONF presents a high-level architecture for SDN that is vertically split into three main functional layers: the infrastructure layer, the control layer, and the data layer (see Fig. <ref type="figure" target="#fig_1">2</ref>). OpenFlow is an open protocol, which is proposed to standardize the communication between the switches and the controller in an SDN architecture.</p><p>SDN is closely related network function virtualization (NFV). Although both SDN and NFV aim at increasing the agility and flexibility of networks and decreasing complexity and cost, they use different methods. In SDN, control planes are separated from data planes, while in NFV, network devices are replaced by software. SDN and NFV are not dependent on one another, but one can be benefit from the other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GOOD FEATURES OF SDN IN DEFEATING DDOS ATTACKS</head><p>SDN has many good features, and these good features offer many benefits for defeating DDoS attacks, as shown in Fig. <ref type="figure" target="#fig_2">3</ref>.</p><p>•Separation of the control plane from the data plane: DDoS attacks are not a new problem. Since Yahoo, Amazon, and other well-known web sites were subjected to DDoS attacks in 2000, researchers have presented many methods to mitigate DDoS attacks. But in traditional networks, researchers cannot experiment with their ideas on a large scale in a real network setting, hence the performance of the presented algorithms cannot be well tested and verified. SDN decouples the data plane from the control plane, and thus makes it possible to easily establish large scale attack and defense experiments. The high configurability of SDN offers clear separation among virtual networks, permitting experimentation in a real environment <ref type="bibr" target="#b2">[3]</ref>. Progressive deployment of new ideas can be performed through a seamless transition from an experimental phase to an operational phase <ref type="bibr" target="#b2">[3]</ref>. This feature of SDN offers great convenience in putting forward new thoughts and methods for DDoS attack mitigation.</p><p>•A centralized controller and view of the network: The controller has network-wide knowledge of the system and global views to build consistent security policies and to monitor or analyze traffic patterns for potential security threats. Centralized control of SDN makes it possible to dynamically quarantine compromised hosts and authenticate legitimate hosts based on the information obtained through requesting end hosts and remote authentication dial in user service (RADIUS) servers for users' authentication information and system scanning during registration <ref type="bibr" target="#b2">[3]</ref>. In a multi-tenant model such as cloud computing, distinguishing tenants' activities and provisioned resources plays an important role in anomaly detection. TaheriMonfared et al. <ref type="bibr" target="#b6">[7]</ref> proposed a method to build the per-tenant view by use of an OpenFlow controller. The controller provides a unified view of the network, and is aware of the tenant logic. The monitoring node communicates with the controller to build a per-tenant view of the network and generates monitoring information for each tenant.</p><p>•Programmability of the network by external applications: The programmability of SDN supports a process of harvesting intelligence from existing intrusion detection systems (IDSs) and  •Software-based traffic analysis: Softwarebased traffic analysis greatly enables innovation, as it can be performed using all kinds of intelligent algorithms, databases, and any other software tools. Motivated by the flexibility of the SDN architecture and the observation that most mobile malware requires Internet connections, Jin and Wang designed a system that detects mobile malware through real-time traffic analysis using the SDN architecture <ref type="bibr" target="#b8">[9]</ref>.</p><p>•Dynamic updating of forwarding rules and flow abstraction: Dynamic updating of forwarding rules assist in the prompt response to DDoS attacks. Based on the traffic analysis, new or updated security policy can be propagated across the network in the form of flow rules to block the attack traffic without delay. Yu et al. <ref type="bibr" target="#b9">[10]</ref> proposed a memory-efficient system for distributed and collaborative per-flow monitoring, called DCM. DCM uses Bloom filters to represent monitoring rules using a small size of memory. It utilizes SDN's ability to dynamically update forwarding rules to install a customized and dynamic monitoring tool into the switch data plane <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ARE DDOS ATTACKS A NIGHTMARE FOR SDN?</head><p>SDN holds great promise in terms of mitigating DDoS attacks in cloud computing environments. However, the security of SDN itself remains to be addressed. Many security issues may happen in SDN, such as unauthorized access, data leakage, malicious applications, configuration issues, etc. <ref type="bibr" target="#b3">[4]</ref>. This article focuses on DDoS attacks. In this section, we first discuss how SDN itself may be a target of DDoS attacks. Then we provide an overview of available solutions to this problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>POSSIBLE DDOS ATTACKS ON SDN</head><p>SDN itself may be a target of DDoS attacks. Since SDN is vertically split into three main functional layers -infrastructure layer, control layer, and application layer -potential malicious DDoS attacks can be launched on these three layers of SDN's architecture. Based on the possible targets, we can classify the DDoS attacks on SDN into three categories: application layer DDoS attacks, control layer DDoS attacks, and infrastructure layer DDoS attacks, as shown in Fig. <ref type="figure" target="#fig_4">4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Application Layer DDoS Attacks:</head><p>There are two methods to launch application layer DDoS attacks: attack applications, or attack the north-bound API. Since isolation of applications or resources in SDN is not well solved, DDoS attacks on one application can affect other applications.</p><p>Control Layer DDoS Attacks: The controllers could potentially be seen as a risk of single point of failure for the network, so they are a particularly attractive target for DDoS attacks in the SDN architecture. The following methods can launch control layer DDoS attacks: attacking the controller, the northbound API, the southbound API, the westbound API, or the eastbound API. For example, many conflicting flow rules from different applications may cause DDoS attacks on the control plane. Within the operation of SDN, the data plane will typically ask the control plane to obtain flow rules when the data plane sees new network packets that it does not know how to handle <ref type="bibr" target="#b5">[6]</ref>. There are two options for the handling of a new flow when no flow match exists in the flow table: either the complete packet or a portion of the packet header is transmitted to the controller to resolve the query. With a large volume of network traffic, sending the complete packet to the controller would occupy high bandwidth.</p><p>Infrastructure Layer DDoS Attacks: There are two methods to launch infrastructure layer DDoS attacks: attack switches or attack the southbound API. For example, if only header information is transmitted to the controller, the packet itself must be stored in node memory until the flow table entry is returned. In this case, it would be easy for an attacker to execute a DoS attack on the node by setting up a number of new and unknown flows. As the memory element of the node can be a bottleneck due to high cost, an attacker could potentially overload the switch memory (e.g. targeting to exhaust TCAMs). The generated fake flow requests can produce many useless flow rules that need to be held by the data plane, thus making it difficult for the data plane to store flow rules for normal network flows <ref type="bibr" target="#b5">[6]</ref>.</p><p>To demonstrate the feasibility of DDoS attacks, a new SDN network scanning prototype tool (named SDN scanner) is proposed in <ref type="bibr" target="#b10">[11]</ref> to remotely fingerprint networks that deploy SDN. This method can be easily operated by modifying existing network scanning tools (e.g. ICMP scanning and TCP SYN scanning). The attack can be conducted to an SDN network by a remote attacker, and it can significantly degrade the performance of an SDN network without requiring high performance or high capacity devices.</p><p>Porras et al. <ref type="bibr" target="#b11">[12]</ref> show that OpenFlow applications may contradict or override one another, incorporate vulnerabilities, or possibly be written by adversaries. In the worst case, an adversary can use the deterministic OpenFlow application to control the state of all OpenFlow switches in the network <ref type="bibr" target="#b11">[12]</ref>. A rule conflict is said to arise when the candidate OpenFlow rule enables or disables a network flow that is otherwise inversely prohibited (or allowed) by existing rules <ref type="bibr" target="#b11">[12]</ref>. of an application server that stores the details of many users, it can easily use the same authenticated ports and source MAC addresses to inject authorized, but forged, flows into the network <ref type="bibr" target="#b12">[13]</ref>.</p><p>Although OpenFlow provides optional support for encrypted transport layer security (TLS) communication and a certificate exchange between the switches and the controller(s), using TLS/SSL does not per se guarantee secure communications. The security of those communications is as strong as its weakest link, which could be a self-signed certificate, a compromised certificate authority, or vulnerable applications and libraries <ref type="bibr" target="#b12">[13]</ref>. Moreover, the TLS/SSL model is not enough to establish and assure trust between controllers and switches. After an attacker gains access to the control plane, it may be capable of aggregating enough power force (in terms of the number of switches under its control) to launch DDoS attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AVAILABLE SOLUTIONS</head><p>We summarize possible DDoS attacks on SDN and available solutions in Table <ref type="table" target="#tab_4">1</ref>.</p><p>FortNox is a new security policy enforcement kernel as an extension to the open source NOX OpenFlow controller, which mediates all Open-Flow rule insertion requests <ref type="bibr" target="#b11">[12]</ref>. FortNOX implements role-based authentication to determine the security authorization of each Open-Flow application (rule producer), and enforces the principle of least privilege to ensure the integrity of the mediation process.</p><p>For security, OpenFlow provides optional support for encrypted transport layer security (TLS) communication and a certificate exchange between the switches and the controller(s) <ref type="bibr" target="#b13">[14]</ref>, and the use of oligarchic trust models with multiple trust-anchor certification authorities (e.g. one per sub-domain or per controller instance) is a possibility <ref type="bibr" target="#b12">[13]</ref>. Moreover, securing communications with threshold cryptography across controller replicas (where the switch will need at least n shares to get a valid controller message) may be helpful. Additionally, the use of dynamic, automated, and assured device association mechanisms may be considered, in order to guarantee trust between the control plane and data plane devices <ref type="bibr" target="#b12">[13]</ref>.</p><p>The use of IDSs with support for runtime root-cause analysis could help identify abnormal flows <ref type="bibr" target="#b12">[13]</ref>. This could be coupled with mechanisms for dynamic control of switch behavior (e.g. rate bounds for control plane requests).</p><p>AVANT-GUARD is a new framework to advance the security and resilience of OpenFlow networks with greater involvement from the data plane <ref type="bibr" target="#b14">[15]</ref>. It addresses two security challenges for SDN-enabled networks. The first goal is to secure the interface between the control plane and the data plane, and shield it from saturation attacks by a connection migration technique on the data plane. The second goal is to improve responsiveness so that security applications can efficiently access network statistics to respond to threats by creating actuating triggers when a predefined trigger condition is detected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OPEN PROBLEMS</head><p>There are many open research problems that are still not well investigated and need to be addressed by future research efforts. In this section we discuss some of the most important open research issues to mitigate DDoS attacks in cloud computing environments by use of SDN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HOW TO DEFEAT APPLICATION LAYER DDOS ATTACKS USING SDN</head><p>According to new research by Gartner, there will be noticeable growth in the incidence of application layer DDoS attacks. Access to payload information is crucial for application DDoS  Current SDN architectures only provide the visibility and control on L2-L4. Thus, defeating application layer DDoS attacks may not benefit from the current OpenFlow implementation. Major efforts need to be spent in this area in order to to extend traffic intelligence to Layer 4 to Layer 7 with good trade-offs between performance and security.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HOW TO DEFEAT MOBILE DDOS ATTACKS USING SDN</head><p>With the number of smart devices increasing, popular apps will be installed and millions of their instances can be running at the same time. Both the mobile devices and the apps can be used to initiate DDoS attacks. Based on the current trend of usage of mobile devices and cloud computing, we believe the battlefield of DDoS attacks and defense will shift from the traditional network to the mobile cloud computing environment. Because mobile networks use super proxies, the simple filter method based source IP addresses may not be used since it will also block legitimate traffic. Although some efforts have been made to extend SDN capability to mobile devices for many network problems (e.g. QoS, virtualization, and fault diagnosis), more research needs be done to defeat mobile DDoS attacks using SDN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HOW TO IMPLEMENT MULTIPLE LOCATIONS DEFENSIVE METHODS</head><p>Many multiple locations defensive methods have been presented in traditional networks. Multiple locations defense is comprised of multiple defense nodes deployed at various locations such as the source, the destination, or the networks <ref type="bibr" target="#b1">[2]</ref>. For instance, detection can be done at the victim side and the response can be initiated and dis-tributed to other nodes by the victim. So we believe with widely deployment of SDN in carrier networks, there are many research opportunities to implement multiple locations defensive methods using SDN to defeat DDoS attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HOW TO COOPERATE AMONG THE KEY DEFENSIVE POINTS</head><p>Since attackers cooperate to perform successful attacks, defenders must also form alliances and collaborate with each other to defeat DDoS attacks <ref type="bibr" target="#b1">[2]</ref>. A cooperation defense mechanism is the best way to combat DDoS attacks, and many methods have been proposed in traditional networks. Cooperation among the key defensive points can be greatly beneficial to attack prevention, detection, and response. The feature of global view and dynamic updating of forwarding rules of SDN will greatly reduce the cost of cooperation. However, this topic has not been well researched in SDN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>HOW TO BUILD A DDOS ATTACKS TOLERANT SYSTEM USING SDN</head><p>Since it is very difficult to accurately detect DDoS attacks and prevent them in a timely manner, a DDoS attacks tolerant system may be more realistic. A DDoS attacks tolerant system is a system designed with a fault-tolerant design approach, and it can operate correctly despite attacks. For instance, the system may provide service that meets the requirements of a servicelevel agreement (SLA) even under an attack by triggering automatic mechanisms to regain and recover the compromised services and resources. A DDoS attacks tolerant system often has some essential properties such as redundancy, diversity, and independence. These properties are easier to implement in SDN networks than in traditional networks. Although some efforts on building a DDoS attacks tolerant system have been made, how to use SDN characteristics to realize attack tolerant systems is a new direction that needs to be addressed by future research efforts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSIONS</head><p>In this article we first discussed the reasons why DDoS attacks are becoming more prevalent in cloud computing environments. Since SDN could be a good tool to defeat DDoS attacks in cloud computing environments, we presented some good features of SDN in defeating DDoS attacks. After that we discussed how SDN may be a victim of DDoS attacks. We reviewed the studies about how to launch DDoS attacks on SDN and how to deal with this problem. We also discussed some significant open problems.</p><p>In summary, SDN creates a very fascinating dilemma: a promising tool to defeat DDoS attacks, versus a vulnerable target of DDoS attacks. How to make full use of SDN's advantages to defeat DDoS attacks in cloud computing environments and how to prevent SDN itself from becoming a victim of DDoS attacks are an urgent problem that needs to be addressed. This article attempted to briefly explore the current technologies related to SDN and DDoS attacks,  <ref type="bibr" target="#b13">[14]</ref> FortNOX <ref type="bibr" target="#b11">[12]</ref> AVANT-GUARD <ref type="bibr" target="#b14">[15]</ref> By attacking northbound API </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. The reasons that the rate Of DDoS attacks in cloud computing environments grows substantially.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. High-level overview of the SDN architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Good features of SDN in defeating DDoS attacks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Hackers may use rule conflict to launch DDoS attacks. Because DDoS attacks use forged source IP addresses or faked traffic, simple authentication mechanisms could mitigate forged or faked traffic flows. But if an attacker assumes the control</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Potential DDoS attacks can be launched on these three layers of SDN's architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>and we discussed future research that may be beneficial in these issues. attacks are an urgent problem that needs to be addressed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>and privacy issues become a critical concern. As mentioned before, DDoS attacks are becoming the biggest threat to the availability of cloud computing. Traditional DDoS attacks mitigating mechanisms are meeting with various difficulties. SDN, as a new paradigm for enabling innovation in networking research and development, provides us with a new way of thinking to solve the problem. In this section we first introduce SDN and OpenFlow. Then we discuss the good features of SDN in defeating DDoS attacks.</figDesc><table><row><cell>With rapid elasticity</cell><cell>Application layer</cell><cell></cell><cell></cell><cell></cell></row><row><cell>and measured ser-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>vice, adopters of the cloud service model</cell><cell cols="2">Unified network monitoring and analysis</cell><cell cols="2">Network access control and bring your own device (BYOD)</cell><cell>Network virtualization</cell></row><row><cell>are charged based on a pay-per-use</cell><cell>Security application (Fw, IDS, IPS)</cell><cell></cell><cell cols="2">Mobility management</cell><cell>Energy-efficient networking</cell></row><row><cell>basis of the cloud's</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>server and network</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>resources. With this</cell><cell></cell><cell></cell><cell></cell><cell cols="2">Northbound API (e.g. FML, Procera, Frenetic, RESTful, etc.)</cell></row><row><cell>model, a convention-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>al DDoS attack on</cell><cell>Control layer</cell><cell cols="2">NodeFlow</cell><cell cols="2">NodeFlow</cell><cell>NodeFlow</cell></row><row><cell>server and network</cell><cell cols="2">Ryu Floodlight</cell><cell></cell><cell cols="2">Ryu Floodlight</cell><cell>Ryu Floodlight</cell></row><row><cell>resources is trans-</cell><cell cols="2">Beacon</cell><cell>Westbound</cell><cell>Beacon</cell><cell>Beacon</cell></row><row><cell>formed in a cloud</cell><cell>Trema Jaxon</cell><cell></cell><cell cols="2">Trema Jaxon</cell><cell>Eastbound</cell><cell>Trema Jaxon</cell></row><row><cell>environment to a</cell><cell>NOX</cell><cell></cell><cell>NOX</cell><cell></cell><cell>NOX</cell></row><row><cell>new breed of attack.</cell><cell>MUL IRIS</cell><cell></cell><cell>MUL IRIS</cell><cell></cell><cell>MUL IRIS</cell></row><row><cell></cell><cell>POX</cell><cell></cell><cell>POX</cell><cell></cell><cell>POX</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Southbound API</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">(e.g. OpenFlow, ForCES, PCEP, etc.)</cell></row><row><cell></cell><cell>Infrastructure layer</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Nettle</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">IBM RackSwitch G8264</cell><cell>Oflib-node</cell></row><row><cell></cell><cell cols="2">Physical switches</cell><cell>NEC PF5240 PF5820 Pronto 3290 and 3780</cell><cell cols="2">Virtual switches</cell><cell>OpenFlowJ OpenFaucet</cell></row><row><cell></cell><cell></cell><cell cols="2">Juniper Junos MX-Series</cell><cell></cell><cell>Pantou</cell></row><row><cell></cell><cell cols="3">Brocade NetIron CES 2000 Series</cell><cell></cell><cell>Indigo</cell></row><row><cell></cell><cell cols="3">Pica8 P-3290, P3295, P-3780 and P-3920</cell><cell></cell><cell>Pica8</cell></row><row><cell></cell><cell cols="3">Hewlett-Packard 8200zl, 6600, 6200zl, 5400zl, 3500/3500yl</cell><cell></cell><cell>OpenFlow Reference</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Open vSwitch</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 1 .</head><label>1</label><figDesc>Possible DDoS attacks on SDN and available solutions.</figDesc><table><row><cell>Possible DDoS attacks</cell><cell>Attack implementation methods</cell><cell>Available solutions</cell></row><row><cell>Application layer DDoS attacks</cell><cell>By attacking application By attacking northbound API</cell><cell>FortNOX [12]</cell></row><row><cell></cell><cell>By attacking controller</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Transport Layer</cell></row><row><cell></cell><cell></cell><cell>Security (TLS)</cell></row><row><cell>Control layer DDoS</cell><cell></cell><cell></cell></row><row><cell>attacks</cell><cell></cell><cell></cell></row></table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Security and Privacy in Cloud Computing</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="843" to="859" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Survey of Defense Mechanisms Against Distributed Denial of Service (DDoS) Flooding Attacks</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">T</forename><surname>Zargar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tipper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="2046" to="2069" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Survey on Software-Defined Networking</title>
		<author>
			<persName><forename type="first">W</forename><surname>Xia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys &amp; Tutorials</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">SDN Security: A Survey</title>
		<author>
			<persName><forename type="first">S</forename><surname>Scott-Hayward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>O'callaghan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sezer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE SDN for Future Networks and Services (SDN4FNS</title>
		<meeting>IEEE SDN for Future Networks and Services (SDN4FNS</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Performance of Virtual Machines under Networked Denial of Service Attacks: Experiments and Analysis</title>
		<author>
			<persName><forename type="first">R</forename><surname>Shea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Systems J</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="335" to="345" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Are We Ready for SDN? Implementation Challenges for Software-Defined Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sezer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multi-Tenant Network Monitoring Based on Software Defined Networking</title>
		<author>
			<persName><forename type="first">A</forename><surname>Taherimonfared</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Rong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. OTM Conf. Move to Meaningful Internet Systems</title>
		<meeting>OTM Conf. Move to Meaningful Internet Systems</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Nice: Network Intrusion Detection and Countermeasure Selection in Virtual Network Systems</title>
		<author>
			<persName><forename type="first">C.-J</forename><surname>Chung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Dependable and Secure Computing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="198" to="211" />
			<date type="published" when="2013-07">July 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Malware Detection for Mobile Devices Using Software-Defined Networking</title>
		<author>
			<persName><forename type="first">R</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE 2nd GENI on Research and Educational Experiment Wksp. (GREE)</title>
		<meeting>IEEE 2nd GENI on Research and Educational Experiment Wksp. (GREE)</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Distributed Collaborative Monitoring in Software Defined Networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1403.8008</idno>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page">17</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Attacking Software-Defined Networks: A First Feasibility Study</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd ACM SIG-COMM Wksp. Hot Topics Software Defined Networking</title>
		<meeting>2nd ACM SIG-COMM Wksp. Hot Topics Software Defined Networking</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="165" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Security Enforcement Kernel for OpenFlow Networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Porras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Wksp. Hot Topics in Software Defined Networks</title>
		<meeting>1st Wksp. Hot Topics in Software Defined Networks</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="121" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Towards Secure and Dependable Software-Defined Networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kreutz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ramos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Verissimo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd ACM SIGCOMM Wksp. Hot Topics in Software Defined Networking</title>
		<meeting>2nd ACM SIGCOMM Wksp. Hot Topics in Software Defined Networking</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Survey of Software-Defined Networking: Past, Present, and Future of Programmable Networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Nunes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mendonca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-N</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Obraczka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Turletti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1617" to="1634" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Avant-Guard: Scalable and Vigilant Switch Flow Management in Software-Defined Networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Yegneswaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Porras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Gu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGSAC Conf</title>
		<meeting>ACM SIGSAC Conf</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="413" to="424" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">From 2013 to 2014 she worked at Carleton University, Ottawa, Canada, as a visiting scholar. Her research interests are in network security, cloud computing, and software-defined networking. Her current focus is research and development of security of software defined networking</title>
		<author>
			<persName><forename type="first">Qiao</forename><surname>Yan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<pubPlace>Shenzhen, China; Xi&apos;an, China</pubPlace>
		</imprint>
		<respStmt>
			<orgName>College of Computer Science and Software Engineering at Shenzhen University</orgName>
		</respStmt>
	</monogr>
	<note>She received her Ph.D. degree in information and communication engineering from Xidian University</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">He received the IEEE Outstanding Leadership Award in 2013, Carleton Research Achievement Award in 2012, the Ontario Early Researcher Award (formerly Premier&apos;s Research Excellence Award) in 2011</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">Richard</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">including IEEE Transactions on Vehicular Technology and IEEE Communications Surveys and Tutorials. He has served on the Technical Program Committee (TPC) of numerous conferences, such as the TPC co-chair of IEEE INFOCOM-MCV&apos;15, Globecom&apos;14, WiVEC&apos;14, INFOCOM-MCC&apos;14, Globecom&apos;13, GreenCom&apos;13, CCNC&apos;13, INFOCOM-CCSES&apos;12, ICC-GCN&apos;12, VTC&apos;12S, Globecom&apos;11, INFOCOM-GCN&apos;11, INFOCOM-CWCN&apos;10</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
		<respStmt>
			<orgName>Carleton University, Canada</orgName>
		</respStmt>
	</monogr>
	<note>the Excellent Contribution Award at IEEE/IFIP Trust-Com 2010, the Leadership Opportunity Fund Award from Canada Foundation of Innovation in 2009, and the Best Paper Awards at IEEE ICC 2014. IEEE IWCMC&apos;09, VTC&apos;08F, and WiN-ITS&apos;07, and as the publication chair of ICST QShine&apos;10, and the co-chair of ICUMT-CWCN&apos;09</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
