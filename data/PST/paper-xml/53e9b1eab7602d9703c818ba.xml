<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Modeling User Activities in a Large IPTV System *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Tongqing</forename><surname>Qiu</surname></persName>
							<affiliation key="aff0">
								<address>
									<region>GA</region>
									<country>Georgia Tech Atlanta</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zihui</forename><surname>Ge</surname></persName>
							<email>gezihui@research.att.com</email>
							<affiliation key="aff1">
								<orgName type="laboratory">AT&amp;T Labs -Research Florham Park</orgName>
								<address>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Seungjoon</forename><surname>Lee</surname></persName>
							<email>slee@research.att.com</email>
							<affiliation key="aff2">
								<orgName type="laboratory">AT&amp;T Labs -Research Florham Park</orgName>
								<address>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jia</forename><surname>Wang</surname></persName>
							<email>jiawang@research.att.com</email>
							<affiliation key="aff3">
								<orgName type="laboratory">AT&amp;T Labs -Research Florham Park</orgName>
								<address>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jim</forename><surname>Xu</surname></persName>
							<affiliation key="aff4">
								<address>
									<region>GA</region>
									<country>Georgia Tech Atlanta</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Qi</forename><surname>Zhao</surname></persName>
							<email>qzhao@research.att.com</email>
							<affiliation key="aff4">
								<address>
									<region>GA</region>
									<country>Georgia Tech Atlanta</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Modeling User Activities in a Large IPTV System *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">EAB8474A8AC1277EDFA87ED006AE0BCB</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T09:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.3 [Computer System Organization]: Computer-Communication Networks-Network Operations; C.4 [Computer System Organization]: Performance of Systems-Modeling techniques Measurement</term>
					<term>Performance IPTV</term>
					<term>Network Measurement</term>
					<term>Modeling</term>
					<term>Workload Generator</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Internet Protocol Television (IPTV) has emerged as a new delivery method for TV. In contrast with native broadcast in traditional cable and satellite TV system, video streams in IPTV are encoded in IP packets and distributed using IP unicast and multicast. This new architecture has been strategically embraced by ISPs across the globe, recognizing the opportunity for new services and its potential toward a more interactive style of TV watching experience in the future. Since user activities such as channel switches in IPTV impose workload beyond local TV or set-top box (different from broadcast TV systems), it becomes essential to characterize and model the aggregate user activities in an IPTV network to support various system design and performance evaluation functions such as network capacity planning. In this work, we perform an in-depth study on several intrinsic characteristics of IPTV user activities by analyzing the real data collected from an operational nation-wide IPTV system. We further generalize the findings and develop a series of models for capturing both the probability distribution and time-dynamics of user activities. We then combine theses models to design an IPTV user activity workload generation tool called SIMULWATCH, which takes a small number of input parameters and generates synthetic workload traces that mimic a set of real users watching IPTV. We validate all the models and the prototype of SIMULWATCH using the real traces. In particular, we show that SIMULWATCH can estimate the unicast and multicast traffic accurately, proving itself as a useful tool in driving the performance study in IPTV systems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In the past several years, there has been a global trend among telecommunication companies on the rapid deployment of IPTV (Internet Protocol Television) infrastructure and service, in which live TV streams are encoded in a series of IP packets and delivered to users through the residential broadband access network. This fast growth is motivated in part by commercial reasons -strengthening their competitiveness with so-called triple-play package that combines digital voice, TV and data service together. More importantly, this new technology provides the users with great interactive capability and functional flexibility, and creates tremendous opportunities for a broad range of new applications (e.g., Collab-oraTV <ref type="bibr" target="#b11">[11]</ref>), which may very well define a next generation of TV entertainment.</p><p>While the industry rushes into the IPTV era, what lags behind is a comprehensive understanding of the user activities, which directly dictate the flow of video streams and other bi-directional data (e.g., for user interactive sessions). Although commercial TV distribution networks (e.g., cable, satellite) have prevailed for decades, to the best of our knowledge, no detailed study on modeling individual users' TV watching activities is available in the literature. This might be partially because there has not been a strong need, as data flows in conventional TV networks are typically limited to the downstream direction from servers to set-top boxes (STBs), and user channel switching (with the exception of pay per view) has very little system-wide impact. In fact, even tracking the viewership of TV program -a statistic that bears significant commercial value -is typically done through a third party <ref type="bibr" target="#b1">[1]</ref>. In IPTV systems, by contrast, an understanding of user activities is essential to many system design and engineering tasks such as evaluation of various design options, optimal system parameter tuning, improving customer care, and defining effective system care procedures to minimize service impact.</p><p>Without a realistic user activity model, the research community often has had to rely on some hypothetical user models when analyzing system performance <ref type="bibr" target="#b17">[17,</ref><ref type="bibr" target="#b19">19,</ref><ref type="bibr" target="#b2">2,</ref><ref type="bibr" target="#b20">20]</ref>. Unfortunately, such models are sometimes quite different from the reality and can potentially lead to incorrect estimation of the system performance. For example, while a constant-rate Poisson process is widely used as a workload model in other systems, it is incapable of capturing the high bursts of channel switches at around hour boundaries observed in our IPTV data. An alternative is to directly use actual IPTV trace data for the evaluation of system performance. However, such data, even when anonymized, can be highly sensitive, containing too much commercial and user private information to be publicly distributed. This creates a barrier for research community to perform system evaluation against real data traces. In this work, we bridge this gap by developing realistic models for user activities in a large IPTV system.</p><p>Our work in this paper is based on a large collection of data obtained from a nation-wide operational IPTV network, which includes the system logs from all of its subscribers' STBs, control plane signaling messages, network topology and configuration data, and TV channel information. Our approach starts with an in-depth investigation of the user activities, analyzing many intrinsic characteristics on attributes such as user viewing sessions, perchannel dwell time, and channel popularity. While some of our findings overlap with a previous study <ref type="bibr" target="#b6">[6]</ref>, we further abstract and generalize the chosen characteristics to enable realistic workload generation, which can be used for various stages of IPTV system design. Specifically, we develop a workload generator that faithfully mimics the user activities in real IPTV systems-this workload generator can turn a limited number of input parameters (published in the paper) into synthetic traces having similar statistical properties to realistic data traces.</p><p>We also consider this work a snapshot of user activity workload for the current IPTV system, which provides a feature set highly similar to that of conventional TV services such as cable and satellite. We envision that user viewing pattern evolves with more advanced IPTV features fundamentally changing the way users watch TV, and this work is used as a baseline to understand and to quantify such changes.</p><p>We make three major contributions in this paper. First, we present in-depth analysis results based on data traces from a nationwide operational IPTV system (Section 3). In addition to the largest scale of such study (using more than a million STBs in four different time zones), we identify many interesting characteristics. For example, we find that user activities (such as channel switching) are often correlated, hence the aggregate activities are much more bursty than the outcome of a fixed-rate Poisson model that many previous studies assume <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b20">20]</ref>.</p><p>Second, we develop a series of models that capture these intrinsic characteristics on each of the attributes (Section 4). We use the mixture exponential distribution to model various session duration distributions. To characterize the time-varying nature of user activities, we apply Fourier Transform and model the periodically correlated events. We distinguish sequential-channel-scans and targetedchannel-switches and use Zipf-like and exponential distribution to characterize channel access popularity. We also adopt a mixture population model to capture the channel popularity dynamics observed at the finer time granularity.</p><p>Third, we combine these models and construct a workload generation tool, namely SIMULWATCH (Section 5), which takes a small number of parameters as input and outputs a series of synthetic user traces that mimic a set of real users watching IPTV. We also validate SIMULWATCH prototype by comparing the synthetic trace with a real data trace and show that they closely match even for some properties that we do not explicitly model. Specifically, we show that for a given number of STBs, we can accurately estimate the unicast and multicast traffic bandwidth based on the synthetic workload, which also illustrates how to use SIMULWATCH to drive the performance study in an IPTV system.</p><p>We also review related work in Section 6 and conclude our work </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">BACKGROUND</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Overview of IPTV Architecture</head><p>Figure <ref type="figure" target="#fig_0">1</ref> shows a typical IPTV service system <ref type="bibr" target="#b15">[15]</ref>. The SHO (Super Hub Office), the primary source of television content, digitally encodes video streams received externally (e.g., via satellite) and transmits them to multiple VHOs (Video Hub Offices) through a high-speed IP backbone network. The VHOs, each responsible for a metropolitan area, in turn acquire additional local contents (e.g., local news), perform some further processing (e.g., advertisement insertion) and transmit the processed TV streams to end users upon request <ref type="foot" target="#foot_0">1</ref> . Inside a residential home, RG (Residential Gateway) connects to a modem and one or more STBs (Set-Top Boxes) with coaxial cable, receiving and forwarding all data, including live TV streams, STB control traffic, VoIP and Internet data traffic, into and out of the subscriber's home. Finally behind an STB, there connects a TV.</p><p>In order to leverage the one-to-many nature of IPTV traffic and ease the bandwidth requirement of the VHOs, video streams from VHOs to STBs are typically delivered using IP multicast. Depending on the TV channel and the codec used, the bit rate of each video stream varies widely from around 1.5Mbps (SDTV with H.264) to around 15Mbps (HDTV with MPEG2). The latency of channel switch is due to both the multicast group management using IGMP and the video decoding dependency (e.g., waiting for a next I-frame). They could add up to a few seconds, which might make the audience chafe at the bit. This limitation is likely to motivate IPTV users to perform more targeted channel switches than random or sequential channel scans compared to users from conventional TV systems. To address/alleviate this problem<ref type="foot" target="#foot_1">2</ref> , some IPTV providers have adopted a fast-channel-switch mechanism in which a server in the VHO sends the STB a unicast video stream (often at a rate higher than multicast rate to avoid long decoding latency) while the STB catches up with the multicast TV stream <ref type="bibr" target="#b17">[17]</ref>.</p><p>Similar to conventional TV users, IPTV users use a vendor/provider customized remote controller to control the STB. For example, one may use Up/Down buttons to sequentially switch channels, use Return button to jump back to the channel previously watched, or enter a channel number to jump directly to a specific channel. On the other hand, IPTV providers often support additional features, some of which are not offered in conventional TV services. For example, many IPTV providers add the capability for a small number of user-defined favorite channel list, so that one can easily switch between or scan through the favorite channels. Furthermore, most STBs support the DVR (Digital Video Recording) feature, in which with the help of a local hard drive, a user can pause, rewind, fast forward (up to live play), and record the TV program being played. Some IPTV providers support one channel being recorded to DVR while another channel being played live on TV. Also depending on the IPTV provider, IPTV users can enjoy many advanced features such as Picture-In-Picture (PIP), on-line gaming and chatting, and personalized web services on their TVs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Data Set</head><p>The data we use in this study are collected from a large scale IPTV provider in the United States, which has over one million subscribers and over two million STBs spread throughout four different time zones. As a privacy protection, only anonymous data was used in this study; no information that could be used to directly or indirectly identify individual subscribers was included. By combining data from the anonymous STB logs, control plane messages, network configuration data, and TV channel lists obtained from this service provider, we were able to model activities such as turning on/off STBs, switching channels, and playing live or recorded TV program. In particular, we associate each activity recorded in the anonymous STB logs with its origin STB and a timestamp (which is at the precision of one second). To account for different time zones, we map the STBs to their metropolitan area and convert the associated timestamps into their local time.</p><p>Although we have analyzed and validated data from multiple periods of time, in this paper, we only present the result based on the data collected in April 2009. More specifically, we use the 6 days' data from April 2nd to 7th for analysis and one day's data on April 8th for the validation of our model. Unless specified otherwise, we use the results based on data on April 2nd 2008 when we present the properties for a single day, while the results on other days are qualitatively similar.</p><p>There are a few limitations/caveats with the quality of the data in this study. First, the channel switch events capture user requests logged at the STB, with the timestamp indicating the time that the request is received at the STB. Note that this is different from the time when the request arrives at the VHO, and different from the time when the streaming content is received at the STB. Requests that are very rapidly followed by a subsequent request in time may not be recorded by the STB, hence are missing from our study.</p><p>Second, since we do not have any data related to the remote controller, we can only determine the outcome of a user's action, but not the action itself. For example, when we observe a channel switching event, we do not know whether it is done by using the Up/Down button or by directly inputting the channel number, for which we have to rely on inference. Third, we do not have detailed TV program information when DVR is used. From STB logs, we know a recorded video is being played, but do not know what is played. In this paper, we use a special channel, 9999, to indicate user tuning into the DVR mode and playing some recorded content. Finally, our data regarding the advanced features such as online gaming are unfortunately incomplete. Therefore, we ignore all the activities with respect to advanced features in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ANALYZING USER ACTIVITIES</head><p>Recall that our objective is to define a mathematical process that mimics the activities of IPTV users and thus can produce realistic event series for tasks such as system performance evaluation. To accomplish this, we first need to understand how real users act in an operational IPTV system. We do so by studying various charac- In particular, we focus on the aggregate properties regarding to users' turning STBs on and off, channel switches, and channel popularity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Turning STBs On and Off</head><p>We first focus on the length of STB on-and off-sessions. An on-session is defined as the duration from a STB being switched on till it gets switched off. Similarly, an off-session is the duration from the last time a STB was switched off till it gets switched on. We first examine the distribution function of the length of on-and off-sessions respectively.</p><p>Figure <ref type="figure" target="#fig_1">2</ref> shows the complementary cumulative distribution function (CCDF) of the length of on-and off-sessions. Using CCDF, we can better illustrate the tail property of the distributions. We first observe that both on-sessions and off-sessions exhibit a very long tail in their distributions -around 5% of the on-sessions and off-sessions are over 1 day in length. In fact, we believe the fast drop in both tails approaching the right end of the x axis is due to the limit of our dataset, which is 6 days in total. Comparing offsession and on-session, we find that the off-session has a heavier tail than the on-session. This matches our intuition since it is more likely that an IPTV user leaves the TV off for a long time (several days) than leaving the TV on. We also notice that the curve of offsession is below that of on-session for low session length. This is likely due to users' mistake in operating the remote controller -a user accidentally turning the STB off while watching a TV program may quickly switch the STB back on, producing a short off-session of a few seconds.</p><p>In Figure <ref type="figure" target="#fig_4">3</ref>, we show the time series of the number of on-line STBs in one-minute precision (normalized by the average number of on-line STBs). We observe a very strong diurnal pattern, with daily peak at around 9PM, followed by a quick decrease in number, reaching daily minimum at around 4AM, and then steadily ramping up during the course of day. Note that there are a significant number of STBs left on over night.</p><p>As both on-and off-sessions are bounded by users' action in switching on and off the STBs, it makes sense to observe these event processes directly. Figures <ref type="figure" target="#fig_3">4a</ref> and<ref type="figure" target="#fig_3">4b</ref> show a one-day time series of the event rate for the switching-on and switching-off events respectively. Both plots are shown in one-minute precision. Here the event rate is the number of switching-on/-off events during the interval normalized by the total number of off-line/on-line STBs at the beginning of the interval. We make two observations. First, there is a strong time-of-day effect in both figures.The switchingon event rate has local peaks at around 7AM and around 9PM and the switching-off event rate has local peaks at around 7:30AM and around 12AM, both matching well with our intuition relating to   the daily living schedules of most people. More interestingly, we observe that both event rate series are very bursty, with significant spikes aligning closely with hour or half-hour boundaries (it is more pronounced in Figure <ref type="figure" target="#fig_3">4b</ref>). This is due to the fact that most TV programs are aligned to hour boundaries. Many users may turn on TV in anticipating for a TV program or turn off TV after watching a TV program. This introduces significant correlations among users' activities, causing very strong bursts in the aggregate event rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Switching Channels</head><p>We now turn to channel switches. Figure <ref type="figure" target="#fig_1">2</ref> shows the distribution function of the length of channel-sessions, which we define as the duration from the time of a user's last channel switch (or turning on STB) till the next channel switch (or turning off STB). We find that this distribution also has a long tail, although not as heavy as those of on-and off-sessions.</p><p>Similar to those for switching-on and switching-off events, we also examine the aggregate event process for channel switches. Figure <ref type="figure" target="#fig_3">4c</ref> shows the time-series of such event rate, which is defined as the total number of channel switches normalized by the number of on-line STBs. We note that the diurnal pattern in Figure <ref type="figure" target="#fig_3">4c</ref> is quite representative of different days. Compared to switchingon/-off event rates, the channel switching events demonstrate even stronger spikes with the period of 30 minutes. This is again due to correlated user activities related to TV program alignment -many users switch channels together when a TV program ends, which may create temporarily high workload on the IPTV servers.</p><p>We next try to gain insight on how IPTV users switch channels. We classify channel switching events into two categories: sequential-scanning and target-switching. Sequential scanning represents the user in a channel-browsing mode by going through the available channels using the Up/Down button on the remote controller, while target switching represents the user intentionally switching to a specific channel of choice. We assume channel switches between adjacent channels being the sequential-scanning and the rest target-switching. To define the channel adjacency, we need to infer the list of available channels, which can be quite different from one user to another (e.g., due to different subscription plans). We keep track of all channels that a STB requests over an extended period (e.g., one month) and regard these channels as the complete list.</p><p>From the data we collected, we observe that 56% of channel switching events are sequential-scanning. This is a little bit lower than our expectation. We find that the high ratio of target switching can be attributed to many advanced features that the IPTV provider supports, including a user-customized favorite-channel list, a program menu where users can browse and switch channels by name, and an easy access to DVR. All of these help users find the TV program of interest easily and directly. To understand this effect better, we construct a user's favorite channel list using a heuristic (top ranked channels by watching time and frequency, e.g., watched in at least 4 days of a week) and find a large portion (46%) of the target-switching is toward such "favorite channels". Among sequential-scanning, we observe an unbalanced up-and down-channel-switches -72% of them are up-channel-switches. It implies that more people prefer increasing channel number. Our analysis finds the ratio moderately stable over time, although we do not have a good intuition on why this is the case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Channel Popularity</head><p>We now focus our attention on the properties of different channels. We first rank nearly 700 different channels that appeared in our data using two metrics: (1) the request count, which we call channel access frequency, and (2) total time STBs stay tuned in the channel, which we call channel dwell time. Figure <ref type="figure">5</ref> shows the cumulative distribution function of channel popularity ranked by the two metrics. We find that the distribution of channel dwell time is highly skewed -the top 100 channels account for around 63% of the total channel dwell time. As a comparison, the channel access frequency curve is less skewed. This is likely due to the large number of sequential-scanning channel switch events. We observe similar level of skewness in the distribution of channel popularity when we examine different subsets of our data (such as by different time zones or by different date), although the ranking of the channels varies from one subset to another.</p><p>Figure <ref type="figure" target="#fig_5">6</ref> shows how the top 10/50/100 popular channels change in the two adjacent hours during a day. The change percentages are averaged over 6-day data. We observe that the channel popular-   ity is relatively stable over time of day. For example, in Figure <ref type="figure" target="#fig_5">6</ref>, among top 100 channels at 12pm, less than 20% of them did not belong to top 100 channels at 1pm, while more than 80% of them were among top 100 channels at both time periods. We find that the relative channel popularity changes the most during morning hours, but remain moderately stable for most part of the day. Figure <ref type="figure" target="#fig_6">7</ref> illustrates an example on the dynamics of channel popularity within a day, in which we compare normalized numbers of STBs of a top-ranked kids channel and a top-ranked local news channel against that of the "recorded TV" that people use to watch recorded contents (called DVR channel). We observe some interesting time- of-day trends -for example, the local channel peaks in the morning when people catch early news and weather forecast before going to work; the kids channel sharply loses popularity after 8PM when most kids go to bed. In comparison, the DVR channel has the most dramatic change in scale, which finds its peak late into night. The recent work <ref type="bibr" target="#b15">[15]</ref> uncovered the reasons behind this behavior by grouping the whole user population into subgroups according to their preference. We will also integrate this into our workload generator in Section 4.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">MODELING USER ACTIVITIES</head><p>In this section, we construct mathematical models to capture the observed characteristics of IPTV user activities. We need to model three different user activities -switching-on, switching-off and channel-switch. For each of them, we match their timing properties in both the session length distribution and the dynamics of the aggregate rate. For channel-switch, we also model channel popularity properties including popularity distribution and its temporal dynamics. We first present our models and then describe our methods to deriving the parameters of our model from the data traces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Modeling Session Length</head><p>In order to capture the long tails exhibited in the empirical session length distributions (Figure <ref type="figure" target="#fig_1">2</ref>), we adopt the mixtureexponential model <ref type="bibr" target="#b13">[13]</ref> for on-, off-, and channel-sessions. The probability density function (PDF) of a mixture-exponential distribution is</p><formula xml:id="formula_0">f (x) = n X i=1 aiλie -λ i x (1)</formula><p>where 1/λ i is the mean of the i-th exponential distribution in the mixture and P n i=1 ai = 1. This model has been widely applied due to its simple form and its capability in approximating heavytailed distributions in a wide range <ref type="bibr" target="#b13">[13]</ref>.</p><p>To determine the model parameters that best describe the data trace we collected, we apply data fitting for on-, off-, and channelsessions respectively. In the following, we use channel-sessions as an example while the procedure for fitting on-and off-sessions is essentially the same. We iteratively explore different values for the number of exponential distributions, n, in the mixture model. For a given n, we apply the Expectation Maximization (EM) algorithm <ref type="bibr" target="#b4">[4]</ref> to find the maximum likelihood estimate (MLE) for the parameters λ i and ai. For the length distribution of channelsessions, we identify the best tradeoff at n = 3, as it achieves a close match to the data while using a small number (i.e., 6) of model parameters. In Table <ref type="table" target="#tab_1">1</ref>, we report the parameter values that fit our trace. The QQ (quantile-quantile) plots in Figure <ref type="figure" target="#fig_7">8</ref> demonstrate good matches between our models and real traces collected.</p><p>Looking into the parameters, we gain tremendous insight on the process. For channel-sessions, the different λ i corresponds to Poisson processes with average inter-arrival time of around 30 seconds, 40 minutes and 5 hours, representing an IPTV user in the state of channel-browsing, TV-program-watching, and being away-from-TV respectively. The likelihood of a user entering these modes  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Modeling Time-Varying Rates</head><p>The mixture-exponential models in the previous subsection imply a constant-rate stochastic process with the mean event rate equal to 1/( P i ai/λi). However, we have observed in Figure <ref type="figure" target="#fig_3">4</ref> that the aggregate event rate for switching-on, switching-off, and channel-switches are all highly variant, highlighted by many apparently-periodic spikes. The problem lies in a subtle underlying independence assumption (which has been commonly used in similar study without careful validation). The reality is that each individual user's activities are influenced by a common external process -the TV program schedules, and as a result, they become highly correlated to each other, breaking the independence assumption. In this subsection, we incorporate this impact from the external process through modeling the aggregate event rates in Figure <ref type="figure" target="#fig_3">4</ref>.</p><p>As the aggregate event rates appear very complicated in the time domain -requiring an overwhelming number of parameters to characterize it, we decide to try a different angle and approach the problem from the frequency domain. We apply fast Fourier transform (FFT) to the event time series and present the result in Figure <ref type="figure">9</ref>. The structure, in all cases, suddenly becomes very clear -there are a few of distinct spikes at frequencies that correspond to 1 hour, 30 minutes, 15 minutes etc., and an ambient gradual decrease in the power level (y-axis) from low to high frequencies. We next approximate the ambient power level by using the Weibull distribution. Its probability density function is:</p><formula xml:id="formula_1">f (x; k, μ) = k μ " x μ « k-1 e -(x/μ) k</formula><p>where k and μ are model parameters. We choose the Weibull distribution since it can very well approximate a wide range of classes of functions including exponential, normal and lognormal only with two parameters. The model parameters that best match our data traces are reported in Table <ref type="table" target="#tab_2">2</ref>.</p><p>From only a small number of parameters (k, μ, and the values for the spikes in the frequency domain), we can now generate the frequency domain function and apply inverse FFT to reconstruct the time series that initially seemed highly complex. To determine the best trade-off between the number of spikes to explicitly include in The number of spikes Mean squared error switch on switch off channel switch Figure <ref type="figure" target="#fig_0">11</ref>: Find the optimal number of spikes the model and the quality of the match between the model and the empirical trace, we show in Figure <ref type="figure" target="#fig_0">11</ref> the discrepancy metric (we use mean squared error between the empirical trace and our modeling output) as a function of the number of spikes in the model. It is clear that the discrepancy becomes negligible when we choose 2 spikes for switch on/off and 3 spikes for channel switch. So they are the values we use in the rest of the paper.</p><p>Figure <ref type="figure" target="#fig_0">10</ref> compares the result from the real trace (top) and the result from our model (bottom). We find that they match very well, even when we use only 13 parameters here (k, μ and the value for the 2-3 spikes in Table <ref type="table" target="#tab_2">2</ref>).</p><p>Finally, we define the time series function obtained from the aforementioned process as our rate moderating function g(t), which models the impact of external TV program schedule to individual users' activity. Since g(t) is constructed from data in a given window W , (in our example W = 86, 400 seconds, or 1 day), we simply repeat g(t) to make it a periodic function: g(t+W ) = g(t). Furthermore, we normalize g(t) such that R W 0 g(t)dt = W . Note that the periodic moderating function g will not impact the tail behavior of the session length distributions that we have modeled previously. However, it does change the shape of session length distribution at small durations. In particular, depending on the start time-of-day, the session length distribution varies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Modeling Channel Popularity Distribution</head><p>We have observed in Section 3 that the channel popularity is highly skewed. Motivated by the success of Zipf-like distribution in modeling skewed access frequencies of Web <ref type="bibr" target="#b3">[3]</ref> and VoD systems <ref type="bibr" target="#b18">[18,</ref><ref type="bibr" target="#b21">21]</ref>, we also examine the Zipf-like distribution in modeling channel access frequencies -for a channel of popularity rank  <ref type="figure" target="#fig_1">12</ref> shows the channel access frequency as a function of the rank, along with the best-fit power law function and the best-fit exponential function. We find the Zipf-like distribution well captures the top 10% channels while the exponential function achieves a better fit for the large "body" part of the distribution function. The parameters for the Zipf-like distribution, f 1(i) = C1i -α , are α = 0.513, C 1 = 12.642. The parameters for the exponential function, f 2(i) = e -β+C 2 , are β = 0.006, C2 = 2.392. In the rest of the paper, we use a hybrid model -approximating the top 10% of the channel popularity distribution using the above Zipflike power-law function and the remaining part using the exponential function). Particularly, the probability density function can be expressed as follows,</p><formula xml:id="formula_2">f 0(i) = ( C1i -α /C0 i &lt; 10% of available channels, e -β+C 2 /C0 others,</formula><p>where C 0 is the normalization factor such that f0(•) is a welldefined density function.</p><p>The concatenated distribution function achieves a good match for the top 600 popular channels, which together account for over 97% of the channel-switches (as shown in Figure <ref type="figure">5</ref>).</p><p>Channel popularity in terms of channel access frequencies is only applicable to target-switching. For sequential-scanning, the channel number simply increments or decrements. We define the probability of user entering target-switching mode as p t, which is 0.44 in our data. The probability of user entering sequentialscanning mode is hence 1p t. When in sequential-scanning state, a user switches to a higher number with the probability of p u (0.72 in our data), and to a lower number with 1p u.</p><p>To align the channel ID to the channel popularity, we adopt a simple random permutation method -we randomly shuffle the ranks of the channel popularity and use them as the channel ID. This however does not capture the subtle clustering effect in the commercial channel listing, such as music channels being next to each others. Depending on the application, a detailed modeling of such effects can be of interest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Modeling Channel Popularity Dynamics</head><p>The channel popularity model described in the previous section captures popularity skewness, which have been found relatively stable at large time scale (e.g., daily <ref type="bibr" target="#b15">[15]</ref>). However, we also observe from our data that channel popularity exhibits some temporal patterns over time-of-day (See Figure <ref type="figure" target="#fig_6">7</ref>). While a stationary channel popularity model might be sufficient for many applications (for example network capacity planning analysis), we expect that some other applications (for example evaluating a P2P type content caching scheme for IPTV) may require a proper modeling of such channel popularity dynamics. One way of modeling such dynamics is to observe the differences across multiple smaller time intervals (e.g., hourly granularity) and model the channel popularity</p><formula xml:id="formula_3">OFF1 ON2 OFF2 ON1 a OFF1 × λ ON1 × g ON (t) a ON1 × λ OFF1 × g OFF (t) a ON2 × λ OFF2 × g OFF (t) a OFF2 × λ ON2 × g ON (t)</formula><p>Figure <ref type="figure" target="#fig_4">13</ref>: ON-OFF model in each small interval separately. Alternately, we can try to understand the underlying structure producing such dynamics and model this underlying process. In fact, in our recent work <ref type="bibr" target="#b15">[15]</ref>, we demonstrate that the channel popularity dynamics can be well explained by groups of users that have intrinsically different channel preference and tend to watch TV at different time of day, as described next.</p><p>We divide STBs into multiple classes according to some feature. In <ref type="bibr" target="#b15">[15]</ref>, we have compared different choices for such feature. To model the daily dynamics of channel popularity, we choose average daily watching time as our classifier because (1) the resulting subgroups exhibit distinct and stable channel preference and (2) the STBs in each subgroup tend to affiliate with the same subgroup over time. Specifically, we classify STBs using two thresholds, and in our data, 28% of STBs are heavy-watchers (12 hours or longer average daily watching time), 36% of them light-watchers (1 hour or shorter average daily watching time), and the remaining 36% medium-watchers. We find that the channel preference among STBs in a particular subgroup stays stable (e.g., throughout a day), and the overall channel popularity dynamics is largely due to the change in the population mix of those groups <ref type="bibr" target="#b15">[15]</ref>.</p><p>We thus extend the model to a multiple-class population model. We first define the membership ratio for different subgroups using the numbers above. Next, we identify the channel preference within a subgroup (which is stable and follows Zipf-like distribution) and characterize the session lengths and moderating functions for each subgroup separately. This would capture the change of population mix over time. As demonstrated in <ref type="bibr" target="#b15">[15]</ref>, this method leads to a highly accurate model of channel popularity dynamics. We present more details and evaluations of this method in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">SIMULWATCH: A WORKLOAD GENERA-TOR</head><p>Thus far we have constructed several models to characterize various aspects of IPTV user activities. In this section, we present our design of SIMULWATCH -user TV watching activity generator. We validate our tool by comparing its output with the real data traces. We also demonstrate how to use this tool to drive the network performance study in an IPTV system (e.g., estimate unicast and multicast traffic rates given the number of subscribers).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">SIMULWATCH Design</head><p>For simplicity, we first describe the design of SIMULWATCH based on the single-class population model. Then we present the extension using the multi-class population model if the dynamics of channel popularity is of interest.</p><p>In the single-class population model, we first focus on generating switching-on and switching-off events matching both on-and offsession length distributions and the aggregate event rates. We define a closed-population ON-OFF model where both ON and OFF states comprise several sub-states, each of which corresponds to one of the mixture exponential distributions in Section 4.1. Figure <ref type="figure" target="#fig_4">13</ref> illustrates the structure of the ON-OFF model with 2 substates in each of the ON and OFF states. The transition rate between sub-states are constructed using the parameters in Sections 4.1 and 4.2. For example, the transition rate from ON i to OFFj state is aOFF,j × λON,i × gON(t) and similarly the reverse direction rate from OFFj to ONi is</p><formula xml:id="formula_4">aON,i × λOFF,j × gOFF(t)</formula><p>To drive the event simulation, assuming a STB arrives at state ONi at time t, we can easily determine the edge of the next transition using the branching probabilities a OFF,j , and we can also determine the time of the next transition, t+x, using the following probability density function</p><formula xml:id="formula_5">φ ON,i(x; t) = λON, i × gON(t + x) × e -λ ON,i R t+x t g ON (y)dy</formula><p>We next focus on generating channel-switch events. It is not hard to see that the timing of channel-switch events can be determined in the same fashion as those of switching-on or switching-off events. There are two subtle details worth noting. First, we need to trigger the event generation for a next channel-switch event not only at the time of the previous channel-switch, but also when a new switching-on event takes place. Second, we need to cancel a pending channel-switch event if a switching-off event from the same STB takes place first.</p><p>In order to determine which channel to switch to, we keep track of, for each STB, the last channel watched. At the time of a scheduled channel-switch event, assuming the last channel watched is i with popularity rank r i, we compute the probability that the next channel is j with rank r j as follows.</p><formula xml:id="formula_6">Probability = 8 &gt; &lt; &gt; : (1 -p t)pu + ptf0(rj) j = i + 1, (1 -p t)(1 -pu) + ptf0(rj) j = i -1, p tf0(rj ) |i -j| &gt; 1.</formula><p>The initial rank r i is randomly assigned as described in Section 4.3. The definition of f 0 and all other parameters involved are defined in Section 4.3. Now we have described the design of SIMULWATCH using the single-class population model. We will show that the above procedure simulating the channel switches cannot precisely generate the dynamics of channel popularity. To equip SIMULWATCH with this functionality, we add an extension of the multi-class population model as follows. Assume that we obtain N classes/groups, each of which consists of a fixed proportion, p i, i = 1, 2, ..., N , of all STBs, where P N i=1 pi = 1. Then for each STB, we first determinate which group it belongs to based on the probabilities p i's. Then in each group, the workload is generated using the same method as we described above using the single-class population model with the proper parameters. To generate the synthetic traffic to mimic the dynamics of channel popularity, we can determine the mapping between channel ID and its popularity rank within each group and then the channel popularity can be calculated by combining the results from all the groups.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation</head><p>In this subsection, we will evaluate whether the synthetic traces generated by our SIMULWATCH mimic the real user activities very well. We do so by comparing the synthetic traces and real traces from three aspects -(i) properties that we explicitly model such as session length distribution, aggregate event rate, and channel popularity distribution, (ii) properties we do not explicitly model like channel popularity dynamics and numbers of on-line STBs, and (iii) a case study on estimating the bandwidth consumed by simultaneous unicast streams, and concurrent multicast channels at different time.</p><p>In our experiments, we generate synthetic user activities for two millions STBs and 700 channels based on model parameters listed in Section 4. Each STB starts from a random state at time 0 and we discard the initial part of the output until the system reaches a steady state. On a PC with 2.4GHz CPU and 4GB memory, it takes about 5 hours for our implementation of SIMULWATCH to generate one-day worth of data. We compare the synthetic trace against the real trace collected on a different date (April 8, 2009) than the dates from which we derive the model parameters. Since the singleclass population based workload generator works reasonably well for many properties, we use the single-class population model unless specified otherwise for the interest of simplicity. We also use the multi-class population model when illustrating its capability in capturing the dynamics of channel popularity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Properties explicitly modeled</head><p>Session-length distribution: Figures 14 shows the sessionlength distribution of different types of sessions, where we observe an exceptionally good match between the real trace and the synthetic trace from SIMULWATCH by visual inspection. In order to qualitatively measure the closeness of two distributions, we further compute the goodness-of-fit. In the chi-square goodness-of-fit </p><formula xml:id="formula_7">χ 2 = m X i=1 (Oi -Ei) 2 /Ei</formula><p>where Oi is the observed frequency for bin i (generated by model) and E i is the expected frequency for bin i (collected from the real trace). The smaller the value is, the better the model and trace match. First, we want to test whether observation O can be considered as arising from the same distribution as E. We represent it through associated one-sided chi-square P-value P (χ 2 ), i.e., the proportion of the time that a value of χ 2 or greater would be obtained if O and E were drawn from the same distribution. For a hypothesis testing at significant level P 0, we reject the null hypothesis (O and E are from the same distribution) if P (χ 2 ) &lt; P0.</p><p>Table <ref type="table" target="#tab_3">3</ref> shows the goodness-of-fit for session length distribution (the bin size is 1 minute). Using a common significant level P 0 = 5%, we see that in all cases the two session length distributions (synthetic trace and real trace) are statistically the same. In addition, multi-class population model yields smaller goodnessof-fit score, indicating that it can fit the real trace better than the single-class population model.  Aggregate event rate: Figure <ref type="figure" target="#fig_0">15</ref> shows the aggregate event rate of different types of events. Again, we observe a reasonably good match between the model and real trace from visual inspection. Table <ref type="table" target="#tab_4">4</ref> shows the root mean square error (RMSE) between the model and real trace when modeling the time-varying rate. We find that the RMSE of multi-class population model is an order of magnitude smaller that that of single-class population model. For example, the RMSE of modeling switch-on events by using singleclass population model is 2.3e-3 where the corresponding figure by using multi-class population model is 1.8e-4. The reduction in RMSE is due to the fact that much more (triple) parameters are used in the multi-class population model (i.e., more details have been modeled). Depending on the applications of SIMULWATCH, this may or may not be a desirable property.</p><p>Channel popularity distribution: Figure <ref type="figure" target="#fig_11">16</ref> shows the channel popularity distributions for both the real trace and synthetic trace. As expected, the popularity of top 600 channels matches very well. Table <ref type="table" target="#tab_3">3</ref> shows the goodness-of-fit for channel popularity distribution (the bin size is 1 channel). Again, we observe that the multi-class population model yields smaller goodness-of-fit score, indicating that it can fit the real trace better than the single-class population model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Properties not explicitly modeled</head><p>Number of on-line STBs: Figure <ref type="figure" target="#fig_6">17</ref> shows the average number of on-line STBs as a function of the time-of-day. We normalize both synthetic trace and real trace such that the value at their peak time is 1. This is a property that we do not model directly, however, we still find a decent match in their shape.</p><p>Channel popularity dynamics: Recall that in Section 3 we showed that the channel popularity distribution changes over time within a single day. Taking a kids channel as an example, we show the change of channel popularity in Figure <ref type="figure" target="#fig_7">18</ref>. The change is normalized such that the maximum value is 1. We observe that the strength of using multi-class population model is that this model can capture the dynamics of channel popularity very well, while single-class population model fails. Note that the curve for the single-class population model is actually similar to the curve of online STBs over time in Figure <ref type="figure" target="#fig_6">17</ref> because the single-class population model treats every channel-switch event uniformly. Therefore, the changing rate of channel popularity is proportional to the changing rate of on-line STB population.</p><p>To better understand the reasons that a multi-class population model can better capture the dynamics of channel popularity, we drill down the above example. There are two factors which shape the popularity dynamics of a particular channel: i) the channel access probability defined as the number of STBs in a particular population (for multi-class population model) watching that channel divided by the number of online STBs in that population at that time period (e.g. one hour). It is actually the transition probability of that channel; ii) the population mix which consists of the proportions of different subgroups in the whole user population. The channel popularity dynamics is generated by the combinational effect (which can be viewed as the weighted sum of productions of subgroups) of these two factors.</p><p>Figure <ref type="figure" target="#fig_13">19</ref> shows the channel access probability of a popular kids channel from our multi-class synthetic trace. We display one curve for each group and an additional curve for all-STB cases (denoted by "All"). We observe that the curve for all-watchers shows a diurnal pattern, but all the other curves are quite stable. This means the change of the channel access probability in each group is very small and hence does not contribute to the dynamics of channel popularity in Figure <ref type="figure" target="#fig_7">18</ref>. Figure <ref type="figure" target="#fig_14">20</ref> illustrates the population mix in our synthetic trace. By <ref type="bibr" target="#b15">[15]</ref>, the light-watcher group consists of the majority of watchers for kids channels. When we compare Figure <ref type="figure" target="#fig_13">19</ref> with Figure <ref type="figure" target="#fig_14">20</ref>, it is clear that the increase bump (approximately 5:00 -14:00) of light-watcher group in population mix contributes to the spike view of Figure <ref type="figure" target="#fig_7">18</ref>.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Case Study</head><p>Since our ultimate goal is to use the synthetic trace from SIMULWATCH in evaluating the performance of different design of IPTV system, different system parameter settings, etc., we put SIMULWATCH to a final test by using it in a case study. In particular, we are interested in evaluating the bandwidth requirement to support fast-channel-switch. Recall that using fast-channel-switch, a short (x seconds) unicast stream is transmitted to the STB (in addition to a new multicast stream) when a user switches to a new channel. We focus on a single router in one of the VHOs in the IPTV network, which connects to 2, 137 downstream STBs. We evaluate different value of x <ref type="bibr" target="#b4">(4,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b16">16,</ref><ref type="bibr">32)</ref>. We only present result for x = 32 seconds, while other results are quantitatively very similar.</p><p>We study the number of simultaneous unicast streams flowing downstream from the router of interest under the above settings. Figure <ref type="figure" target="#fig_15">21a</ref> shows the distribution density function on the number of concurrent unicast streams when using either real trace or synthetic trace in evaluation. We observe that the two curves closely match. Both curves show that for around 4% of time there is no unicast stream in the system; with a small probability, there can be demand for more than 80 concurrent unicast streams, with the maximum being 128 in both cases; and interestingly there are two local peaks (at 10 and 60) in both distribution functions, the second of which may relate to the correlated channel switchings at hour boundaries. This result demonstrates that SIMULWATCH faithfully preserves the intrinsic characteristics of user activities that are essential to our evaluation.</p><p>We also examine the number of channels that these 2, 137 STBs collectively request. This value translates to the amount of multi- cast traffic involved to support live TV viewing for the users. In Figure <ref type="figure" target="#fig_15">21b</ref>, we report the probability density function for the number of channels, in which we confirm that the result from synthetic trace closely matches that of real trace.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">RELATED WORK</head><p>Traditionally, understanding users' TV viewing activities in the conventional TV systems relied on phone surveys or specialized monitoring boxes (e.g., by Nielsen Media Research <ref type="bibr" target="#b1">[1]</ref>). The challenge with that approach is the difficulty conducting a large-scale survey or deploying monitoring boxes for the majority of TV users.</p><p>In this paper, we analyze user activity data from more than one million commercial IPTV subscribers and present models that can be used to generate realistic user activity workload.</p><p>Many researchers recently have looked into various aspects of IPTV systems. The closest work to our study is the recent measurement study conducted by Cha et al. <ref type="bibr" target="#b6">[6]</ref>. While some of our findings overlap with their study, our focus is to model the user activities based on the measurement study and design a workload generator, which can be used to evaluate different aspects of IPTV system design and performance with respect to realistic user workload. In our earlier work <ref type="bibr" target="#b15">[15]</ref>, we extensively study one aspect of IPTV system: channel popularity. In this paper, we model a wider range of aspects of user activities, and design a workload generator. Smith <ref type="bibr" target="#b17">[17]</ref> analyzed bandwidth demand to support both multicast and unicast for fast channel change, where channel switching is modeled as a renewal process. However, the work is not based on actual traces, and such a study can benefit from our workload model and trace generator. Whereas our work focuses on IPTV services running on top of a provider backbone, there are a number of peer-to-peer (P2P) based IPTV systems <ref type="bibr" target="#b22">[22,</ref><ref type="bibr" target="#b14">14]</ref> and the measurement study focusing on P2P IPTV systems <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b16">16]</ref>.</p><p>Some researchers have investigated user activity workload in other context. For example, Costa et al. <ref type="bibr">[9]</ref> analyzed user activities in media streaming applications. Cherkasova et al. <ref type="bibr" target="#b7">[7]</ref>, Chesire et al. <ref type="bibr" target="#b8">[8]</ref>, and Tang et al. <ref type="bibr" target="#b18">[18]</ref> built models for the workload of media streaming service. Yu et al. <ref type="bibr" target="#b21">[21]</ref> studied the user activities to access a Video-on-Demand (VoD) system. Cha et al. <ref type="bibr" target="#b5">[5]</ref> explored how users access videos in the YouTube system. Guo et al. <ref type="bibr" target="#b10">[10]</ref> compared access patterns of different types of media content on the Internet including Web, P2P, VoD, and live streaming. These studies are complimentary to our work in that as IPTV providers offer more interactive video streaming and VoD services, we also need to consider these aspects in the system design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head><p>In this paper, we have performed an in-depth analysis on several intrinsic characteristics of user activities in large IPTV systems, including durations for on-, off-and channel-sessions, time-varying rates of switching-on, switching-off and channel switching events, and channel popularity. We have also developed a series of practical mathematical models to capture these characteristics. Furthermore, we construct the first IPTV user activity workload generation tool SIMULWATCH, which can generate synthetic yet realistic activity traces of a large number of IPTV users. All the derived models and the implementation of SIMULWATCH have been validated using real traces collected from a large nationwide IPTV provider in the United States. In particular, we demonstrate that while not explicitly modeled, the estimation of unicast and multicast traffic demand based on SIMULWATCH trace closely matches the actual values from the real trace. We believe that SIMULWATCH will prove useful in many different aspects of IPTV system design and evaluation.</p><p>Our future work includes several extensions to our current model. We plan to include proper modeling for the use of advanced features in IPTV, such as PIP and DVR. We also expect that users' activities likely change over time as IPTV providers introduce more features. It would be also interesting to analyze such changes and evaluate the performance impact those new features impose on IPTV systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSION</head><p>In this paper, we have performed an in-depth analysis on several intrinsic characteristics of user activities in large IPTV systems, including durations for on-, off-and channel-sessions, time-varying rates of switching-on, switching-off and channel switching events, and channel popularity. We have also developed a series of practical mathematical models to capture these characteristics. Furthermore, we construct the first IPTV user activity workload generation tool SIMULWATCH, which can generate synthetic yet realistic activity traces of a large number of IPTV users. All the derived models and the implementation of SIMULWATCH have been validated using real traces collected from a large nationwide IPTV provider in the United States. In particular, we demonstrate that while not explicitly modeled, the estimation of unicast and multicast traffic demand based on SIMULWATCH trace closely matches the actual values from the real trace. We believe that SIMULWATCH will prove useful in many different aspects of IPTV system design and evaluation.</p><p>Our future work includes several extensions to our current model. We plan to include proper modeling for the use of advanced features in IPTV, such as PIP and DVR. We also expect that users' activities likely change over time as IPTV providers introduce more features. It would be also interesting to analyze such changes and evaluate the performance impact those new features impose on IPTV systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: IPTV Architecture in Section 8. In the following section, we first overview a typical IPTV system architecture and describe the data set we use in this study.</figDesc><graphic coords="2,335.32,79.26,94.63,56.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: CCDF of the length for on-, off-, and channel-sessions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The normalized switching-on, switching-off, and channel switching events (one-minute granularity)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Number of on-line STBs</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 5: CDF of channels popularity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Channel popularity distribution change (hourly)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: QQ plots comparing models and real traces</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :Figure 12 :</head><label>912</label><figDesc>Figure 9: The time-varying rates in frequency domain</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 14 :Figure 15 :</head><label>1415</label><figDesc>Figure 14: Comparison of the session-length distribution. CCDFs for the real trace and generated workload closely match in all cases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 16 :</head><label>16</label><figDesc>Figure 16: Channel popularity distributions for the real trace and the generated workload.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 17 :Figure 18 :</head><label>1718</label><figDesc>Figure 17: Number of on-line STBs over time. The results from real trace and workload closely match.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 19 :</head><label>19</label><figDesc>Figure 19: Time-of-day dynamics for a popular kids channel, based on multi-class synthetic trace</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 20 :</head><label>20</label><figDesc>Figure 20: Population mix for each group, based on multi-class synthetic trace</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 21 :</head><label>21</label><figDesc>Figure 21: Case study. The results from real trace and workload closely match.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 : Model parameters for session length distributions</head><label>1</label><figDesc></figDesc><table><row><cell></cell><cell>λ 1</cell><cell>a 1</cell><cell>λ 2</cell><cell>a 2</cell><cell>λ 3</cell><cell>a 3</cell></row><row><cell>On-session</cell><cell>1.3e-2</cell><cell>0.3</cell><cell cols="4">3.3e-3 0.66 2.3e-4 0.04</cell></row><row><cell>Off-session</cell><cell cols="6">3.2e-2 0.19 2.5e-3 0.75 2.4e-4 0.06</cell></row><row><cell>Channel-session</cell><cell>2.1</cell><cell cols="5">0.23 2.6e-2 0.64 3.2e-3 0.13</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 : Modeling parameters for event rates</head><label>2</label><figDesc></figDesc><table><row><cell></cell><cell>k</cell><cell>μ</cell><cell cols="3">p 1-hour p 30-min p 15-min</cell></row><row><cell>Switching-on</cell><cell>0.0036</cell><cell>278</cell><cell>1.76</cell><cell>1.41</cell><cell>x</cell></row><row><cell>Switching-off</cell><cell>0.0316</cell><cell>233</cell><cell>4.43</cell><cell>7.85</cell><cell>x</cell></row><row><cell cols="3">Channel-switch 0.03840 293</cell><cell>4.23</cell><cell>5.34</cell><cell>4.53</cell></row></table><note><p>is quantified by the ai values. Similar observation can be made for on-sessions and off-sessions too.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 : Goodness-of-fit scores for session length and channel popularity distributions</head><label>3</label><figDesc></figDesc><table><row><cell>Model</cell><cell>ON</cell><cell cols="2">Session length OFF Channel popularity Channel</cell></row><row><cell cols="3">Single-class 0.147 0.132</cell><cell>0.132</cell><cell>0.083</cell></row><row><cell cols="3">Multi-class 0.099 0.089</cell><cell>0.091</cell><cell>0.067</cell></row><row><cell cols="4">computation, we divide the data into m bins and test</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 : RMSE when modeling the time-varying rate</head><label>4</label><figDesc></figDesc><table><row><cell></cell><cell cols="2">Model</cell><cell cols="2">Switch-on Switch-off Channel-switch</cell></row><row><cell></cell><cell cols="2">Single-class</cell><cell>2.3e-3</cell><cell>2.4e-3</cell><cell>2.5e-3</cell></row><row><cell></cell><cell cols="2">Multi-class</cell><cell>1.8e-4</cell><cell>1.9e-4</cell><cell>2.4e-4</cell></row><row><cell></cell><cell>10 8</cell><cell></cell><cell></cell></row><row><cell>Access frequency (log scale)</cell><cell>10 2 10 4 10 6</cell><cell></cell><cell></cell><cell>Real trace Synthetic trace</cell></row><row><cell></cell><cell>0 0 10</cell><cell cols="3">100 Chanel index sorted by popularity (linear scale) 200 300 400 500 600</cell><cell>700</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Typically a VHO connects to RGs through a protected optical network using fiber-to-the-node (FTTN) or fiber-to-the-premises (FTTP) technologies. We omit showing the network elements in between as they are not the focus of our work.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>How to reduce this delay is an active research area.</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work is supported in part by the NSF grant CNS-0905169, funded under the American Recovery and Reinvestment Act of 2009 (Public Law 111-5), and by the NSF grant CNS-0626979.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">The</forename><surname>Nielsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Company</forename></persName>
		</author>
		<ptr target="http://www.nielsenmedia.org" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Planning and Managing the IPTV Service Deployment</title>
		<author>
			<persName><forename type="first">Dakshi</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mandis</forename><forename type="middle">S</forename><surname>Beigi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chatschik</forename><surname>Bisdikian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kang-Won</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th IFIP/IEEE International Symposium on Integrated Network Management</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="353" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Generating representative web workloads for network and server performance evaluation</title>
		<author>
			<persName><forename type="first">Paul</forename><surname>Barford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Crovella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMETRICS</title>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="151" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Mixtures of exponential distributions to describe the distribution of poisson means in estimating the number of unobserved classes</title>
		<author>
			<persName><forename type="first">Kathryn Jo-Anne</forename><surname>Barger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
		<respStmt>
			<orgName>Cornell University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Everybody Tubes: Analyzing the World&apos;s Largest User Generated Content Video System</title>
		<author>
			<persName><forename type="first">Meeyoung</forename><surname>Cha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haewoon</forename><surname>Kwak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pablo</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong-Yeol</forename><surname>Ahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sue</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">You</forename><surname>Tube</surname></persName>
		</author>
		<author>
			<persName><surname>Tube</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM IMC</title>
		<meeting>ACM IMC</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Watching Television Over an IP Network</title>
		<author>
			<persName><forename type="first">Meeyoung</forename><surname>Cha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pablo</forename><surname>Rodriguez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jon</forename><surname>Crowcroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sue</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xavier</forename><surname>Amatrianin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM IMC</title>
		<meeting>ACM IMC</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Characterizing locality, evolution, and life span of accesses in enterprise media server workloads</title>
		<author>
			<persName><forename type="first">Ludmila</forename><surname>Cherkasova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minaxi</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NOSSDAV</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Measurement and analysis of a streaming media workload</title>
		<author>
			<persName><forename type="first">Maureen</forename><surname>Chesire</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alec</forename><surname>Wolman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geoffrey</forename><forename type="middle">M</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><forename type="middle">M</forename><surname>Levy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USITS</title>
		<imprint>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Analyzing client interactivity in streaming media</title>
		<author>
			<persName><forename type="first">P</forename><surname>Cristiano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Italo</forename><forename type="middle">S</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><forename type="middle">Borges</forename><surname>Cunha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Claudiney</forename><surname>Vieira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marcus</forename><forename type="middle">M</forename><surname>Vander Ramos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jussara</forename><forename type="middle">M</forename><surname>Rocha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Berthier</forename><forename type="middle">A</forename><surname>Almeida</surname></persName>
		</author>
		<author>
			<persName><surname>Ribeiro-Neto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The stretched exponential distribution of internet media access patterns</title>
		<author>
			<persName><forename type="first">Lei</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Enhua</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Songqing</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zhen</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODC</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="283" to="294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">CollaboraTV: Using Asynchronous Communication to Make TV Social Again</title>
		<author>
			<persName><forename type="first">Chris</forename><surname>Harrison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Amento</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroITV</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A measurement study of a large-scale p2p iptv system</title>
		<author>
			<persName><forename type="first">Xiaojun</forename><surname>Hei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chao</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jian</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yong</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Keith</forename><forename type="middle">W</forename><surname>Ross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1672" to="1687" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mixtures of Exponential Distributions</title>
		<author>
			<persName><forename type="first">Nicholas</forename><forename type="middle">P</forename><surname>Jewell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annuals of Statistics</title>
		<imprint>
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Anysee: Peer-to-peer live streaming</title>
		<author>
			<persName><forename type="first">Xiaofei</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hai</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yunhao</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lionel</forename><forename type="middle">M</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dafu</forename><surname>Deng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Modeling Channel Popularity Dynamics in a Large IPTV System</title>
		<author>
			<persName><forename type="first">Tongqing</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zihui</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seungjoon</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jia</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qi</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jun (jim)</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMETRICS</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Measuring p2p iptv traffic on both sides of the world</title>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Silverston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Fourmaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kavé</forename><surname>Salamatian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenjiro</forename><surname>Cho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoNEXT</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">39</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">IPTV Bandwidth Demand: Multicast and Channel Surfing</title>
		<author>
			<persName><forename type="first">Donald</forename><forename type="middle">E</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="2546" to="2550" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Medisyn: a synthetic streaming media service workload generator</title>
		<author>
			<persName><forename type="first">Wenting</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yun</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ludmila</forename><surname>Cherkasova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amin</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NOSSDAV &apos;03</title>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="12" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Modeling switched video broadcast services</title>
		<author>
			<persName><forename type="first">J</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cable Labs</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">End-user iptv traffic measurement of residential broadband access networks</title>
		<author>
			<persName><forename type="first">Young</forename><forename type="middle">J</forename><surname>Won</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mi-Jung</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Byung-Chul</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hee-Won</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chan-Kyu</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jae-Hyoung</forename><surname>Yoo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NOMS Workshops</title>
		<imprint>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Understanding user behavior in large-scale video-on-demand systems</title>
		<author>
			<persName><forename type="first">Hongliang</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dongdong</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ben</forename><forename type="middle">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Weimin</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroSys</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="333" to="344" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Coolstreaming/donet: a data-driven overlay network for peer-to-peer live media streaming</title>
		<author>
			<persName><forename type="first">Xinyan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiangchuan</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bo</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tak-Shing Peter</forename><surname>Yum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="2102" to="2111" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
