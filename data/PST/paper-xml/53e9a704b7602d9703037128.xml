<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A numerical method for solving the 3D unsteady incompressible Navier-Stokes equations in curvilinear domains with complex immersed boundaries</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-02-25">25 February 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Liang</forename><surname>Ge</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">St. Anthony Falls Laboratory</orgName>
								<orgName type="institution">University of Minnesota</orgName>
								<address>
									<addrLine>2 Third Avenue SE</addrLine>
									<postCode>55414</postCode>
									<settlement>Minneapolis</settlement>
									<region>MN</region>
									<country key="US">United States</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Fotis</forename><surname>Sotiropoulos</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">St. Anthony Falls Laboratory</orgName>
								<orgName type="institution">University of Minnesota</orgName>
								<address>
									<addrLine>2 Third Avenue SE</addrLine>
									<postCode>55414</postCode>
									<settlement>Minneapolis</settlement>
									<region>MN</region>
									<country key="US">United States</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A numerical method for solving the 3D unsteady incompressible Navier-Stokes equations in curvilinear domains with complex immersed boundaries</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-02-25">25 February 2007</date>
						</imprint>
					</monogr>
					<idno type="MD5">A24056EBAB85160D12A0325B4EE8A8D0</idno>
					<idno type="DOI">10.1016/j.jcp.2007.02.017</idno>
					<note type="submission">Received 21 October 2006; received in revised form 23 January 2007; accepted 19 February 2007</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T04:03+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Incompressible flow</term>
					<term>Navier-Stokes</term>
					<term>Staggered grid</term>
					<term>Curvilinear coordinates</term>
					<term>Fractional step method</term>
					<term>Krylov solvers</term>
					<term>Immersed boundaries</term>
					<term>Heart valves</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A novel numerical method is developed that integrates boundary-conforming grids with a sharp interface, immersed boundary methodology. The method is intended for simulating internal flows containing complex, moving immersed boundaries such as those encountered in several cardiovascular applications. The background domain (e.g. the empty aorta) is discretized efficiently with a curvilinear boundary-fitted mesh while the complex moving immersed boundary (say a prosthetic heart valve) is treated with the sharp-interface, hybrid Cartesian/immersed-boundary approach of Gilmanov and Sotiropoulos [A. Gilmanov, F. Sotiropoulos, A hybrid cartesian/immersed boundary method for simulating flows with 3d, geometrically complex, moving bodies, Journal of Computational Physics 207 (2005) 457-492.]. To facilitate the implementation of this novel modeling paradigm in complex flow simulations, an accurate and efficient numerical method is developed for solving the unsteady, incompressible Navier-Stokes equations in generalized curvilinear coordinates. The method employs a novel, fully-curvilinear staggered grid discretization approach, which does not require either the explicit evaluation of the Christoffel symbols or the discretization of all three momentum equations at cell interfaces as done in previous formulations. The equations are integrated in time using an efficient, second-order accurate fractional step methodology coupled with a Jacobian-free, Newton-Krylov solver for the momentum equations and a GMRES solver enhanced with multigrid as preconditioner for the Poisson equation. Several numerical experiments are carried out on fine computational meshes to demonstrate the accuracy and efficiency of the proposed method for standard benchmark problems as well as for unsteady, pulsatile flow through a curved, pipe bend. To demonstrate the ability of the method to simulate flows with complex, moving immersed boundaries we apply it to calculate pulsatile, physiological flow through a mechanical, bileaflet heart valve mounted in a model straight aorta with an anatomical-like triple sinus.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>0021-9991/$ -see front matter Ó 2007 Elsevier Inc. All rights reserved. doi:10.1016/j.jcp.2007.02.017</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>There is growing recent interest in the development of non-boundary conforming numerical techniques for simulating flows in domains with arbitrarily complex, immersed boundaries. Depending on the approach adopted to satisfy the boundary conditions on solid surfaces, such techniques can be broadly classified as diffused or sharp interface methodologies. The former methods are known as immersed boundary formulations and tend to smear a solid boundary across few grid nodes due to the discrete delta function formulation they employ to introduce the effect of the boundary on the equations of motion <ref type="bibr" target="#b1">[2]</ref>. The latter class of methods, on the other hand, treats solid boundaries as sharp interfaces utilizing either Cartesian, cut-cell formulations <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref> or hybrid Cartesian/Immersed Boundary (HCIB) approaches (see <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b6">7]</ref> among others)-the reader is referred to <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> for more detailed discussion of this class of methods. Regardless on whether a diffused or a sharp interface formulation is employed, however, all available non-boundary conforming methods solve the Navier-Stokes equations in a background coordinate-conforming mesh, such as a Cartesian (e.g. <ref type="bibr" target="#b0">[1]</ref>) or a cylindrical (e.g. <ref type="bibr" target="#b5">[6]</ref>) mesh. This is an inherent feature of such methods as their derivation is motivated by the need to avoid constructing a curvilinear, boundary conforming mesh, which for arbitrarily complex boundaries could be difficult if not impossible to construct.</p><p>There are, however, situations where hybrid methodologies combining aspects of curvilinear, body-fitted methodologies with those of non-boundary conforming approaches could be desirable and beneficial. Such cases are often encountered in cardiovascular flow problems where a complex, flexible immersed boundary-say the leaflets of a native or a prosthetic heart valve-is embedded within a blood vessel. The empty blood vessel geometry can be easily and efficiently discretized with a body-fitted curvilinear mesh, which can greatly facilitate the accurate resolution of the vorticity produced within the near wall boundary layers. The arbitrarily complex, deformable immersed boundary, on the other hand, can only be treated using a nonboundary conforming methodology. Therefore, the numerical simulation of such problems could greatly benefit from developing hybrid numerical techniques for simulating complex immersed boundaries moving within a background domain discretized with a generalized curvilinear mesh. A critical prerequisite, however, for the successful implementation of this novel modeling paradigm to complex flow simulations is the development of an accurate and efficient numerical method for solving the incompressible Navier-Stokes equations in generalized curvilinear coordinates and on fine computational meshes. The objective of this paper is to develop such a numerical method and demonstrate that this method can be used as the base flow solver for simulating unsteady flows with moving boundaries immersed in a curvilinear background mesh.</p><p>Our method is based on the recently developed HCIB formulation of Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref> who proposed a novel formulation for solving the incompressible Navier-Stokes equations on a hybrid, staggered/ non-staggered grid layout. As discussed extensively in Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref> pure non-staggered grid formulations, even though easier to implement in conjunction with a HCIB approach, could lead to large errors in the satisfaction of the discrete continuity equation near rapidly accelerating immersed boundaries due to large induced pressure gradients. Staggered grid methodologies, on the other hand, can drive the discrete divergence to machine zero but are cumbersome to implement in the context of HCIB approaches. The hybrid, staggered/non-staggered grid methodology developed by Gilmanov and Sotiropoulos was shown to alleviate these difficulties and was successfully applied to simulate flows with arbitrarily complex, deformable bodies, including a swimming mackerel and a planktonic copepod. This method, however, is only applicable to Cartesian meshes. Thus, a major objective of our work is to extend the method of Gilmanov and Sotiropoulos to generalized curvilinear coordinates. In doing so we also address the broader problem of formulating staggered-grid methodologies in curvilinear coordinates <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>. We show that the hybrid staggered/non-staggered grid approach of Gilmanov and Sotiropoulos can be used to satisfy the discrete continuity equation exactly in generalized, curvilinear coordinates without requiring the explicit evaluation of Christoffel symbols in the governing equations or the discretization of all three equations for the Cartesian velocity components at all surfaces of each control volume.</p><p>Another major objective of our work is to enhance the efficiency of the explicit iterative solver of Gilmanov and Sotiropoulos so that the method can be used to solve the unsteady, incompressible Navier-Stokes in generalized coordinates and on fine computational meshes. As our work is motivated by pulsatile flow problems in cardiovascular anatomies, the issue of computational efficiency becomes especially challenging. It is well known, for instance, that the performance of incompressible flow solvers deteriorates rapidly in pulsatile flow simulations where a new mass flux has to be propagated through the entire computational domain at each time step <ref type="bibr" target="#b11">[12]</ref>. In this work we show that a fractional step formulation, coupled with a generalized, minimal residual (GMRES) solver with multigrid as preconditioner for the pressure equation can greatly enhance computational efficiency in pulsatile flow simulations.</p><p>Our paper is organized as follows. In Section 2, we present the governing equations in generalized curvilinear coordinates. In Section 3, we illustrate the difficulties encountered in staggered mesh formulations in curvilinear coordinates and review previous approaches for handling these difficulties. Subsequently we extend the hybrid staggered/non-staggered mesh formulation of Gilmanov and Sotiropoulos to curvilinear coordinates and show how this new formulation can alleviate shortcoming of previous approaches. In Section 5, we discuss the fractional step approach used to solve the discrete equations, which is based on a multigrid preconditioned GMRES iteration scheme for solving the pressure equation. In Section 7, we analyze the efficiency and spatial accuracy of the method by conducting numerical experiments for various benchmark problems, including the classical 2D driven cavity problem, impulsively started flow in a long straight duct, and pulsatile flow though a 90°pipe bend. For the latter case the computed results are compared with the experimental measurements of Rindt et al. <ref type="bibr" target="#b12">[13]</ref>. In Section 7.4, we demonstrate the applicability of the method to flows with moving immersed boundaries by applying it to simulate pulsatile flow through a bileaflet mechanical heart valve mounted in a model, straight aorta geometry with an anatomical-like triple sinus geometry. Finally, in the last section of the paper we summarize the major findings of our research and discuss future further extensions of the numerical approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The Navier-Stokes equations in curvilinear coordinates</head><p>For the sake of completeness and to introduce some of the notation we adopt in this work, we begin our discussion by presenting the incompressible Navier-Stokes equations for a Newtonian fluid in Cartesian coordinates. Using Einstein's tensor notation, where repeated indices imply summation unless otherwise indicated, the governing equations read as follows (q; r ¼ 1; 2; 3):</p><formula xml:id="formula_0">ou r ox r ¼ 0 ou q ot þ o ox r ðu r u q Þ ¼ À op ox q þ 1 Re o 2 u q ox r ox r<label>ð1Þ</label></formula><p>where {x r } are the Cartesian coordinates, {u r } are the Cartesian velocity components, p is the static pressure divided by the density q, and Re is the Reynold number of the flow based on a characteristic length and velocity scales. When body-fitted curvilinear grids are used to discretize the computational domain, a generalized, curvilinear coordinate mapping is typically employed to transform the equations from Cartesian to curvilinear ðn 1 ; n 2 ; n 3 Þ coordinates-where n m ¼ n m ðx 1 ; x 2 ; x 3 Þ. There are two approaches one can adopt to implement such a coordinate transformation: the partial transformation and the full transformation.</p><p>In the partial transformation approach only the independent variables {x m } are transformed to curvilinear coordinates while the dependent variables, the components of the velocity field, are retained in terms of their Cartesian components {u m }. The partially transformed equations read as follows:</p><formula xml:id="formula_1">J o on r U r J ¼ 0<label>ð2Þ</label></formula><formula xml:id="formula_2">ou q ot þ Cðu q Þ þ G q ðpÞ À 1 Re Dðu q Þ ¼ 0<label>ð3Þ</label></formula><p>where C, G, and D are the convective, gradient, and viscous operators defined in curvilinear coordinates as follows:</p><formula xml:id="formula_3">CðÁÞ ¼ J o on r U r J Á<label>ð4Þ</label></formula><formula xml:id="formula_4">DðÁÞ ¼ J o on r g rm J o on m Á<label>ð5Þ</label></formula><formula xml:id="formula_5">G q ðÁÞ ¼ J o on r n r x q J Á !<label>ð6Þ</label></formula><p>In the above equations, J is the Jacobian of the geometric transformation J ¼ oðn 1 ; n 2 ; n 3 Þ=oðx 1 ; x 2 ; x 3 Þ, g rm is the contravariant metric tensor g rm ¼ n r x q n m x q , and U q are the contravariant velocity components, which are related with the Cartesian velocity components as follows:</p><formula xml:id="formula_6">U q ¼ u r n q xr ð7Þ u q ¼ U r ox r on q<label>ð8Þ</label></formula><p>In the full transformation approach both the dependent and independent variables are transformed in generalized curvilinear coordinates. Selecting the surface volume fluxes V q , V q ¼ U q =J , as the dependent variables the fully transformed governing equations read as follows:</p><formula xml:id="formula_7">J oV q on i ¼ 0<label>ð9Þ</label></formula><formula xml:id="formula_8">oV q ot þ CðV q Þ þ n q xr o on m n m xr J p À 1 Re DðV q Þ ¼ 0<label>ð10Þ</label></formula><p>The fully transformed convective, C, and viscous, D, operators read as follows:</p><formula xml:id="formula_9">CðV q Þ ¼ ðV r V q Þ ;r DðV q Þ ¼ 1 Re ðg qr ðV m Þ ;r þ g mr ðV q Þ ;r Þ ;m</formula><p>The covariant derivative operator that appears in the above equations is defined as</p><formula xml:id="formula_10">ðf m Þ ;r ¼ of m on r þ C m qr f q</formula><p>where C m qr are the Christoffel symbols of the second kind defined as</p><formula xml:id="formula_11">C m qr ¼ n m xs o 2 x s on q on r</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Overview of staggered grid formulations in curvilinear coordinates</head><p>Staggered grid methods in Cartesian coordinates typically locate the pressure at the control volume centers (i, j, k) and the velocity components at the surface centers (see Fig. <ref type="figure" target="#fig_0">1</ref>)-ði þ 1=2; j; kÞ; ði; j þ 1=2; kÞ; ði; j; k þ 1=2Þ for the u, v, and w velocity components, respectively <ref type="bibr" target="#b13">[14]</ref>. The continuity equation is then discretized by integrating it at control volumes that coincide with each computational cell whereas each momentum equation is discretized by integrating it over a control volume centered at the corresponding surface center. Integrating the transformed continuity equation (Eqs. (2) or ( <ref type="formula" target="#formula_7">9</ref>)) over a given control volume leads to the following discrete approximation of the continuity equation:</p><formula xml:id="formula_12">D i;j;k ðV Þ ¼ J V 1 iþ1=2;j;k À V 1 iÀ1=2;j;k Dn 1 þ . . . ! ¼ 0<label>ð11Þ</label></formula><p>where D i;j;k denotes the discrete divergence operator, and the dots imply terms in the other two spatial directions, which are omitted for convenience. As seen in the above equation, the discretized continuity equation requires the volume fluxes at all surface centers, which, by definition, equals to the product of the normal velocity and the surface area. In Cartesian coordinates, the normal velocity coincides with the Cartesian velocity component defined at the surface centers (Fig. <ref type="figure" target="#fig_0">1</ref>). Thus, the discretization of the continuity equation can be accomplished in a straightforward manner as the required Cartesian velocity components are available at the surface centers. In generalized curvilinear coordinates, however, the volume fluxes at surface centers may or may not be directly available depending on the choice of dependent variables. It is this critical difference between Cartesian and curvilinear coordinates that is at the center of the difficulties encountered in curvilinear staggered grid formulations.</p><p>If the partially transformed form of the governing equations is employed (Eqs. ( <ref type="formula" target="#formula_1">2</ref>) and ( <ref type="formula" target="#formula_2">3</ref>)) then the volume fluxes at the surface centers are not available and need to be reconstructed from the Cartesian velocity components, as follows:</p><formula xml:id="formula_13">V 1 iþ1=2;j;k ¼ n 1 x 1 J ! iþ1=2;j;k ðu 1 Þ iþ1=2;j;k þ n 1 x 2 J ! iþ1=2;j;k ðu 2 Þ iþ1=2;j;k þ n 1 x 3 J ! iþ1=2;j;k ðu 3 Þ iþ1=2;j;k</formula><p>The rigorous and most accurate approach to accomplish the reconstruction is to define at each surface center all three Cartesian velocity components and calculate them by integrating in time the three momentum equations-we shall refer to this approach as PT-1. This approach has been successfully applied in the past, see for example Maliska and Raithby <ref type="bibr" target="#b14">[15]</ref>, but it essentially triples the computational cost of the curvilinear formulation relative to the Cartesian formulation as in the latter only one momentum equation is solved at each surface center. This increased cost could be very expensive in 3D simulations and has prompted the development of approximate formulations, which define only one Cartesian component at each surface center of the curvilinear staggered mesh (i.e., u 1 component at all ði þ 1=2; j; kÞ locations and u 2 ; u 3 for the other two surface centers, respectively) and reconstruct the other two by interpolation-this approach will be denoted as PT-2. More specifically, according to this approach the volume flux at the ði þ 1=2; j; kÞ surface center would be reconstructed by obtaining u 1 directly from the solution of the x 1 -momentum equation and interpolating u 2 and u 3 from surrounding surface centers, where they are calculated by the solution of the respective momentum equations. The cost of the PT-2 approach is comparable to that of the Cartesian, staggered mesh formulation but this treatment works well only for geometries for which the primary flow direction along which say the n 1 -curvilinear coordinate remains aligned with one of the Cartesian velocity components. Consider for example a 90°curved duct with its straight entrance section along the horizontal, x 1 -direction. The curvilinear coordinate n 1 along the streamwise direction through the duct is initially aligned with the x 1 -axis but at the end of curvature it is oriented along the perpendicular x 2 -axis. Therefore, solving the u 1 momentum equation at the ði þ 1=2; j; kÞ nodes and interpolating the other two velocity components to construct the volume flux will lead to the result of having to interpolate the primary velocity component at the end of curvature (the u 2 component in this case). As shown in <ref type="bibr" target="#b15">[16]</ref> this treatment could result in odd-even decoupling of the pressure nodes and as such the resulting algorithm is not suitable for simulating arbitrarily complex flows. The above difficulties with the partially transformed version of the equations can be alleviated by using the fully transformed momentum equations, Eqs. ( <ref type="formula" target="#formula_7">9</ref>) and <ref type="bibr" target="#b9">(10)</ref>. In this case it is straightforward to design an algorithm that emulates the Cartesian, staggered grid formulation by defining the volume fluxes, V 1 , V 2 , and V 3 at the ði þ 1=2; j; kÞ, ði; j þ 1=2; kÞ, and ði; j; k þ 1=2Þ surface centers, respectively. This approach (denoted as FT-1), however, requires the solution of the fully transformed form of the Navier-Stokes equations, which are very complex and cumbersome to discretize. Furthermore, these equations involve the Christoffel symbols of the second kind, see Eq. <ref type="bibr" target="#b9">(10)</ref>, which are expensive to compute and store and increase significantly the requirements for smoothness of the computational mesh as they involve second-order derivatives of the metrics of the geometric transformation. FT-1 formulations have been proposed and applied to solve the incompressible Navier-Stokes equations, see for example <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref>, but because of the aforementioned difficulties such methods have not been widely used in the literature.</p><p>Staggered grid strategies that employ the fully-transformed equations, albeit indirectly, and can be considered as hybrid techniques between the PT-1 and FT-1 formulations have been proposed and successfully applied in <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b10">11]</ref>. Methods in this category, which will be denoted here as FT-2 formulations, exploit the relationship between the volume fluxes and the Cartesian velocity components (see Eq. ( <ref type="formula">7</ref>) above) to avoid dealing with the fully-transformed form of the Navier-Stokes equations directly. Namely, the transport equations for the volume fluxes are derived from the partially-transformed form of the Navier-Stokes equations as follows:</p><formula xml:id="formula_14">oV q ot ¼ n q xm J ou m ot ¼ À n q xm J Cðu m Þ þ G m ðpÞ À 1 Re Dðu m Þ<label>ð12Þ</label></formula><p>Using the definition of the pressure gradient operator given by Eq. ( <ref type="formula" target="#formula_5">6</ref>), the above equation reads as follows:</p><formula xml:id="formula_15">oV q ot ¼ À n q xm J Cðu m Þ À 1 Re Dðu m Þ À n q xm o on r n r xm J p<label>ð13Þ</label></formula><p>Eq. ( <ref type="formula" target="#formula_15">13</ref>) is essentially identical to the fully-transformed equations ( <ref type="formula" target="#formula_7">9</ref>) and (10) but does not explicitly involve the Christoffel symbols, which of course will appear if the above equation is further manipulated. In a similar fashion as FT-1 formulations, FT-2 type methods discretize at each surface center the transport equation for the respective volume flux in the form given by Eq. ( <ref type="formula" target="#formula_15">13</ref>). At the ði þ 1=2; j; kÞ nodes, for instance, the V 1 equation is semi-discretized as follows:</p><formula xml:id="formula_16">d dt ðV 1 iþ1=2;j;k Þ ¼ À n 1 x 1 J ! iþ1=2;j;k Cðu 1 Þ À 1 Re Dðu 1 Þ iþ1=2;j;k À n 1 x 2 J ! iþ1=2;j;k Cðu 2 Þ À 1 Re Dðu 2 Þ iþ1=2;j;k À n 1 x 3 J ! iþ1=2;j;k Cðu 3 Þ À 1 Re Dðu 3 Þ iþ1=2;j;k þ G 1 iþ1=2;j;k ðpÞ ð<label>14Þ</label></formula><p>where</p><formula xml:id="formula_17">G 1 iþ1=2;j;k ðpÞ ¼ À n 1 x 1 iþ1=2;j;k d n r ð n r x 1 J pÞ iþ1=2;j;k À n 1 x 2 iþ1=2;j;k d n r n r x 2 J p iþ1=2;j;k À n 1 x 3 iþ1=2;j;k d n r n r x 3 J p iþ1=2;j;k<label>ð15Þ</label></formula><p>is the pressure gradient operator for curvilinear cooordinates and d n r is the central differencing operator at the surface center. The advantage of using the above discretization approach over the FT-1 formulation is that the explicit evaluation of the Christoffel symbols is avoided. This is accomplished, however, at the expense of having to discretize at each surface center the convective and viscous operators for all three Cartesian momentum equations. In other words, the computational cost for discretizing the governing equations with this approach is comparable to that of the PT-1 formulation <ref type="bibr" target="#b9">[10]</ref>.</p><p>In the following section, we present a new approach, which reduces significantly the computational work required to discretize the governing equations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Hybrid staggered/non-staggered approach in curvilinear coordinates</head><p>The curvilinear formulation we propose in this work is based on the hybrid staggered/non-staggered approach developed by Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref>. They were motivated by the need to develop a method for solving the Navier-Stokes equations in Cartesian meshes that facilitates the implementation of boundary conditions in flows with complex, moving, immersed boundaries while satisfies the discrete continuity equation exactly. In this section, we show that the method of Gilmanov and Sotiropoulos is a natural choice for developing an efficient curvilinear formulation that has all the advantages of a pure staggered grid formulation (i.e. satisfies the discrete continuity exactly) and eliminates the need for discretizing the Christoffel symbols without the excessive additional computational cost of previous formulations.</p><p>We define and store the volume fluxes V q at the respective surface centers (as in the FT-1 and FT-2 formulations) and the pressure at the volume centers. The volume fluxes are obtained by discretizing and solving their respective transport equations, which, for reasons that will soon become apparent, are formulated as follows:</p><formula xml:id="formula_18">oV q ot ¼ ÀR q À n q xm o on r n r xm J p<label>ð16Þ</label></formula><p>where R q ðq ¼ 1; 2; 3Þ denote the contravariant fluxes of the convective and viscous terms:</p><formula xml:id="formula_19">R q ¼ n q x m J Cðu m Þ À 1 Re Dðu m Þ<label>ð17Þ</label></formula><p>The key difference between the proposed method and the FT-2 approach is that the R q terms at their respective surface centers are not obtained by discretizing the C and D terms at the surface centers (as required in approach FT-2 as shown in Eq. ( <ref type="formula" target="#formula_16">14</ref>)) but are reconstructed by interpolation from the volume centers. This is accomplished by first re-constructing the Cartesian velocity components at the volume centers-ði; j; kÞ nodes-by interpolating the contravariant velocity components and using Eq. ( <ref type="formula" target="#formula_6">8</ref>). With the Cartesian velocity components available at the volume centers the convective and viscous terms (Cðu m Þ and Dðu m Þ for m ¼ 1; 2; 3) can be readily discretized using the discretization method of choice (see below for details) in the same manner as in a non-staggered mesh. Subsequently, the discrete approximations of the R q i;j;k , (q ¼ 1; 2; 3) terms can be calculated using Eq. ( <ref type="formula" target="#formula_19">17</ref>). This step is followed by interpolation to re-construct R 1 iþ1=2;j;k , R 2 i;jþ1=2;k , and R 3 i;j;kþ1=2 and the semi-discrete (in space) approximation of Eq. ( <ref type="formula" target="#formula_18">16</ref>) reads as follows:</p><formula xml:id="formula_20">d dt ðV 1 iþ1=2;j;k Þ ¼ R 1 iþ1=2;j;k À G 1 iþ1=2;j;k ðpÞ ð<label>18Þ</label></formula><p>where G 1 iþ1=2;j;k ðpÞ is the same discrete curvilinear pressure gradient operator defined as in Eq. ( <ref type="formula" target="#formula_17">15</ref>). Obviously the proposed method is substantially more efficient that the FT-2 approach as it does not require the discretization of the convective and viscous terms for all three momentum equations at each surface center-a step, which as discussed earlier essentially triples the amount of computational work compared to a non-staggered grid method. Instead the cost for discretizing these terms in the present method is similar to that of a non-staggered mesh as their discretization takes place only once per time step at each ði; j; kÞ node. Of course relative to a non-staggered formulation, the present method does incur an additional computational overhead due to the intermediate re-construction steps needed to obtain the Cartesian velocity components at the volume centers and then project back the discrete convective and viscous terms at the surface centers. As we will subsequently discuss, however, the various re-construction steps involve local, one-dimensional interpolations in the transformed space and as such the computational cost associated with them is minimal. The details of the implementation of the various steps of the proposed method are as follows.</p><p>Let us assume that the volume fluxes at their respective surface centers are known at a given time step-V 1 iþ1=2;j;k , V 2 i;jþ1=2;k , and V 3 i;j;kþ1=2 . Reconstruction of the Cartesian velocity components at the volume centers-ðu r Þ i;j;k (r ¼ 1; 2; 3)-is accomplished using the one-dimensional QUICK <ref type="bibr" target="#b20">[21]</ref> interpolation formula, which was also employed for the Cartesian mesh analogue of the method by Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref>. For example, the V 1 volume flux is calculated by interpolating along the n 1 direction as follows: assuming the grid volumes centers along i direction is numbered from 1; 2; . . . ; i max ,</p><formula xml:id="formula_21">V 1 i;j;k ¼ 1 8 ð6V 1 iÀ1=2;j;k À V 1 iÀ3=2;j;k þ 3V 1 iþ1=2;j;k Þ for i &gt; 1 1 8 ð6V 1 iþ1=2;j;k À V 1 iþ3=2;j;k þ 3V 1 iÀ1=2;j;k Þ for i ¼ 1 (<label>ð19Þ</label></formula><p>Similarly the V 2 and V 3 volume fluxes are determined by interpolating along their respective grid lines (j and k lines, respectively). With all three volume fluxes known at the volume centers the three contravariant and Cartesian velocity components can be readily computed using Eq. ( <ref type="formula" target="#formula_6">8</ref>).</p><p>At the end of this step the Cartesian velocity components are available at the volume centers and the partially transformed convective, Cðu r Þ, and viscous, Dðu r Þ, terms for the three momentum equations (Eqs. ( <ref type="formula" target="#formula_3">4</ref>) and ( <ref type="formula" target="#formula_4">5</ref>)) can be readily discretized in a manner similar to a non-staggered grid formulation. In this work, we employ the QUICK scheme to discretize the convective terms and standard, three-point central differencing to discretize the viscous terms. Subsequently, the discrete approximations of the contravariant fluxes of the convective and viscous terms can be calculated at the volume centers R q i;j;k , (q ¼ 1; 2; 3) using Eq. ( <ref type="formula" target="#formula_19">17</ref>).</p><p>The final step for completing the discretization of the transport equations for the volume fluxes according to Eq. ( <ref type="formula" target="#formula_20">18</ref>) is to re-construct the R q terms at their respective surface centers. Here, similarly as in <ref type="bibr" target="#b0">[1]</ref>, we use the following QUICK scheme (see <ref type="bibr" target="#b0">[1]</ref> for a discussion on the rationale for biasing the direction of the interpolation scheme):</p><formula xml:id="formula_22">R 1 iþ1=2;j;k ¼ 1 8 ð6R 1 iþ1;j;k À R 1 iþ2;j;k þ 3R 1 i;j;k Þ for i &lt; i max À 1 1 8 ð6R 1 i;j;k À R 1 iÀ1;j;k þ 3R 1 iþ1;j;k Þ for i ¼ i max À 1 (<label>ð20Þ</label></formula><p>Similar interpolation formulas are used to obtain R 2 i;jþ1=2;k and R 3 i;j;kþ1=2 along the j and k grid lines, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Time integration scheme</head><p>We employ a fractional step method similar to that proposed in <ref type="bibr" target="#b21">[22]</ref> to integrate the governing equations in time. First, intermediate volume fluxes V qðÃÞ that do not satisfy continuity are calculated by solving implicitly (see below for details) the following momentum equations at the surface centers (we shall denote this step as the momentum step):</p><formula xml:id="formula_23">1 2Dt ð3V qðÃÞ À 4V qðnÞ þ V qðnÀ1Þ Þ ¼ ÀRðV qðÃÞ Þ À G q ðp ðnÞ Þ ð<label>21Þ</label></formula><p>where V qðnÞ represents the solution at time step n, and G q is the curvilinear gradient operator expressed as in Eq. ( <ref type="formula" target="#formula_17">15</ref>). In the above equations, the time derivative is discretized with a second-order backward Euler scheme and the right hand side is calculated using the previously described hybrid staggered/non-staggered approach. The above step is followed by a pressure correction step to satisfy the continuity equation:</p><formula xml:id="formula_24">3 2Dt ðV qðnþ1Þ À V qðÃÞ Þ ¼ G q ð/Þ ð<label>22Þ</label></formula><formula xml:id="formula_25">D i;j;k ðV ðnþ1Þ Þ ¼ 0<label>ð23Þ</label></formula><p>where D i;j;k ðÁÞ is the discrete divergence operator defined in Eq. ( <ref type="formula" target="#formula_12">11</ref>) and / is the pressure correction, whose value is obtained by solving the following Poisson equation:</p><formula xml:id="formula_26">D i;j;k ðGð/ÞÞ ¼ 3 2Dt D i;j;k ðV ðÃÞ Þ ð<label>24Þ</label></formula><p>The pressure at the new time step n þ 1 can be recovered as</p><formula xml:id="formula_27">p nþ1 ¼ p n þ /<label>ð25Þ</label></formula><p>Both the momentum and pressure-correction steps result in large sparse systems. The numerical algorithms we employ for solving the two steps are described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Implicit solution of the momentum step</head><p>Our preliminary attempts to handle R in Eq. ( <ref type="formula" target="#formula_23">21</ref>) explicitly were not successful, especially in fine-mesh, pulsatile flow simulations. The explicit evaluation of R imposed severe restrictions on the physical time step Dt and was further found to undermine the stability of the entire fractional step approach. Implicit treatment of R, however, is not straightforward and requires careful consideration. A direct approach would require the inversion of a very large non-linear sparse matrix and the resulting algorithm would be far too expensive to be practical. As such, alternative iterative solvers, such as Newton-Krylov methods or approximate factorization methods, provide the only feasible solution. Approximate factorization methods, say such as that developed by Beam and Warming <ref type="bibr" target="#b22">[23]</ref>, require the evaluation of the Jacobian of the right hand side of Eq. <ref type="bibr" target="#b20">(21)</ref>. It is easy to see, however, that in the present case the calculation of the Jacobian could be very costly as it would require the evaluation of the Christoffel symbols, which is exactly what we tried to avoid in the first place by developing the hybrid staggered/non-staggered grid approach. To circumvent this difficulty we employ a matrix-free, Newton-Krylov method. In what follows, we will briefly review the basic concepts of such methods in the context of the present problem-see <ref type="bibr" target="#b23">[24]</ref> for a recent comprehensive review of the current state of development and application of matrix-free Newton-Krylov methods.</p><p>The semi-discretized momentum equation ( <ref type="formula" target="#formula_23">21</ref>) can be reorganized as follows:</p><formula xml:id="formula_28">F ðV qÃ Þ ¼ 1 2 ð3V qÃ À 4V qn þ V qnÀ1 Þ À RðV qÃ Þ þ n q xm o on r n r xm J p n ¼ 0<label>ð26Þ</label></formula><p>Advancing Eq. ( <ref type="formula" target="#formula_23">21</ref>) implicitly in time is essentially equivalent to seeking the solution of the equation F ðV qÃ Þ ¼ 0, which can be efficiently accomplished through the following Newton-like iteration scheme:</p><formula xml:id="formula_29">V qÃ kþ1 ¼ V qÃ k þ dV qÃ k ; k ¼ 0; 1; . . .<label>ð27Þ</label></formula><p>where k is the iteration counter, dV qÃ k ¼ ÀI À1 F ðV qÃ k Þ and I ¼ oF =oV q is the Jacobian matrix. The correction at the kth step of Newton iteration can be obtained by solving the following linear system:</p><formula xml:id="formula_30">IdV qÃ k ¼ F ðV qÃ k Þ<label>ð28Þ</label></formula><p>using a Krylov subspace method, such as GMRES <ref type="bibr" target="#b24">[25]</ref>. Solving the above linear system with GMRES, however, does not require the explicit evaluation of the Jacobian matrix I but only the matrix vector product IdV . Following Brown and Saad <ref type="bibr" target="#b25">[26]</ref>, this product can be approximated as follows:</p><formula xml:id="formula_31">IdV qÃ k ¼ F ðV qÃ k þ hdV qÃ k Þ À F ðV qÃ k Þ h</formula><p>where h is a small perturbation.</p><p>In this work, we employ the matrix-free Newton-Krylov solver implemented in PETSc <ref type="bibr" target="#b26">[27]</ref> to efficiently solve Eq. ( <ref type="formula" target="#formula_23">21</ref>). Typically about 5-7 N iterations are required to reduce the residual of F ðV qÃ Þ by 5 orders or more.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Solution of the pressure-correction equation</head><p>It is well-known that the overall efficiency of any fractional step method for solving the incompressible Navier-Stokes equations largely depends on the approach adopted to solve the pressure correction equation, Eq. <ref type="bibr" target="#b23">(24)</ref>. If one seeks to solve the Poisson equation in simple coordinates-for example, rectangular domain with Cartesian grids or circular domain with cylindrical grid systems-the solution can be efficiently obtained through direct solvers <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b28">29]</ref>. These direct methods, however, are not useful for our work as we are interested in complicated flow domains using generalized curvilinear grids. Iterative methods are the only feasible alternative to the discrete Poisson equation arising in such curvilinear grid systems. The most efficient iterative solvers available today include Krylov subspace methods, such as GMRES and BICGSTAB <ref type="bibr" target="#b29">[30]</ref>, and multi-grid methods. In our work, we employ a Flexible GMRES (FGMRES) solver <ref type="bibr" target="#b30">[31]</ref> to solve the Poisson equation. Typically a GMRES solver is used together with a preconditioner, such as Jacobi, SOR, incomplete LU (ILU) decomposition <ref type="bibr" target="#b31">[32]</ref>, etc., in order to improve its robustness and efficiency. As we will subsequently show through numerical experiments in Section 7.2, the convergence performance of the GMRES solver with simple preconditioner (such as Jacobi or ILU) deteriorates dramatically with increasing mesh size for the problems we are interested in. Such grid-size-dependent convergence performance can be effectively addressed by using a multigrid method as preconditioner for the GMRES solver <ref type="bibr" target="#b32">[33]</ref>. As illustrated in <ref type="bibr" target="#b32">[33]</ref>, a multigrid-preconditioned GMRES solver is very robust and its overall performance is far superior than that of the multigrid method alone. In our work, we employ a cell-centered multigrid method as the preconditioner for the FGM-RES solver. Upon constructing the multigrid preconditioner, we need to choose the grid coarsening strategy, smoother for fine grid levels and coarsest grid level solver, as well as the restriction and interpolation operators. For grid coarsening we implemented and tested both full coarsening and semi-coarsening strategies. The multigrid preconditioner uses ILU decomposition as smoother for the fine grid levels and the coarsest grid level equation is efficiently solved through a Krylov subspace solver (GMRES or BICGSTAB). We use the standard trilinear interpolation operator for the restriction and interpolation between different levels <ref type="bibr" target="#b33">[34]</ref> and these operators are provided as subroutines. The coefficient matrices at each grid level are obtained by discretizing the left-hand side of Eq. ( <ref type="formula" target="#formula_26">24</ref>) at the corresponding grid level and their values are stored in the memory for improved performance. In Section 7.2, we evaluate the convergence performance of the Poisson equation solver and show that multigrid-preconditioned GMRES can solve the discrete pressure Poisson equation very efficiently on fines meshes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Sharp interface immersed boundary method</head><p>As stated in the introduction of this paper, our objective is to combine sharp-interface, immersed boundary methodologies with a background curvilinear mesh in order to effectively handle complex, internal flows with flexible immersed boundaries.The curvilinear Navier-Stokes solver described above is thus integrated with the HCIB approach of Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref>. The details of the method can be found in <ref type="bibr" target="#b0">[1]</ref>. Here it suffices to state that the method employs an unstructured, triangular mesh to discretize and track the position of a complex, moving immersed boundary, which is handled as a sharp interface. The presence of the boundary on surrounding fluid nodes is accounted for by reconstructing boundary conditions for the velocity field at grid nodes in the immediate vicinity of the boundary (the so-called immersed boundary nodes) by interpolating along the local normal to the boundary. Since in the current scheme the discretization of the right hand side terms are accomplished at volume centers (where the reconstructed Cartesian velocity components are located), the reconstruction methodology of Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref> can be readily implemented without any modifications and will not be discussed further. The reconstruction method has been shown to be second-order accurate on Cartesian grids with moving immersed boundaries <ref type="bibr" target="#b0">[1]</ref>. The capability of the combined curvilinear grid/immersed boundary method will be illustrated in Section 7. <ref type="bibr" target="#b3">4</ref>, where we apply it to simulate flow through a bileaflet mechanical heart valve inserted in a modeled aorta with an anatomic-like, triple sinus structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Numerical results</head><p>In this section, we report a series of numerical experiments aimed at demonstrating the accuracy and efficiency of the numerical method. We also present a series of calculations for pulsatile flow in a 90°pipe flow aimed at validating the base flow solver. The ability of the method to simulate complex flows with moving boundaries immersed in a curvilinear background mesh is also demonstrated by reporting results from the calculation of pulsatile flow in a mechanical bileaflet heart valve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">2D driven cavity</head><p>As we have already discussed, the present numerical method is the extension of the Cartesian method developed by Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref> to generalized curvilinear coordinates at least insofar as the hybrid staggered/non-staggered grid discretization and immersed boundary reconstruction technique are concerned. Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref> carried out grid-refinement studies to demonstrate that their method is secondorder accurate for flows with moving immersed boundaries. Since when the present method is applied to a Cartesian mesh it reduces to the discretization approach of <ref type="bibr" target="#b0">[1]</ref>, second-order convergence rate should also be anticipated and numerical tests have indeed verified this conclusion. In this section, we focus our attention on the spatial accuracy of the base flow solver when applied to generalized curvilinear coordinate systems. Carrying out a rigorous grid refinement study in a curvilinear mesh, however, is not straightforward due to the fact that the grid spacing varies throughout the computational domain. For that we adopt an indirect approach to demonstrate the accuracy of the proposed curvilinear staggered/non-staggered grid discretization approach. We carry out numerical simulations on both Cartesian uniform and stretched curvilinear grids and compare the numerical solutions to show that the latter yield results that are essentially indistinguishable from the former. Note that a similar general approach was also adopted by Wesseling et al. <ref type="bibr" target="#b10">[11]</ref> to demonstrate the accuracy of their curvilinear staggered grid method.</p><p>We select the standard 2D driven cavity (DC) problem <ref type="bibr" target="#b34">[35]</ref>, which is a widely used benchmark test case for incompressible flow solvers. We consider three computational meshes all with 33 2 grid nodes: DC_g1 is the base uniform Cartesian mesh while DC_g2 and DC_g3 are both distorted curvilinear grids (see Fig. <ref type="figure">2</ref>). The two curvilinear meshes are purposely distorted in order to set up challenging computational tests for the various aspects of the staggered/non-staggered grid discretization (reconstruction of Cartesian velocity components at cell centers, interpolation of the convective and viscous terms at surface centers, etc.). The curvilinear mesh DC_g2 (shown in Fig. <ref type="figure">2a</ref>) is constructed by selecting the four edges of the driven cavity as the boundaries of the curvilinear. On each edge, the grid nodes are distributed with a hyperbolic tangent distribution function with the grid spacing at one end specified as 0.01 and the other one 0.04. The curvilinear grid DC_g3 is constructed by dividing the moving lid of the cavity into two segments by introducing an arbitrary albeit strategically selected point (point D in Fig. <ref type="figure">2b</ref>). The right boundary of the so resulting computational domain consists of the horizontal portion of the lid to the right of point D and the vertical right edge of the cavity. The corner singularity in this boundary results in a severely distorted and discontinuous mesh in a critical region of the flowfield, i.e. the region where the vorticity generated by the moving lid is ejected into the flowfield to set up the overall recirculating flow pattern. Naturally such an irrational mesh topology would never be used for simulating the driven cavity flow but it is selected herein in order to test the accuracy of the numerical method under severe mesh continuity and smoothness conditions. Note, however, that highly distorted grid cells such as those generated at the upper right corner of the cavity in DC_g3 mesh are quite frequently encountered in complex geometries discretized with body-fitted curvilinear grids.</p><p>We carried out numerical simulations for both Re ¼ 100 and 1000 on all three grids. Steady state solutions are obtained on all calculations. The computed results are compared with each other in Figs. <ref type="figure" target="#fig_1">3</ref><ref type="figure" target="#fig_2">4</ref><ref type="figure" target="#fig_3">5</ref><ref type="figure" target="#fig_4">6</ref>. As seen in Fig. <ref type="figure">2</ref>. Two deliberately distorted curvilinear grids for the driven cavity flow. The four letters mark the corners of the transformed domain in curvilinear space.   Figs. <ref type="figure" target="#fig_1">3</ref> and<ref type="figure" target="#fig_3">5</ref>, which illustrate the velocity profile along the vertical and horizontal center lines, the velocity field obtained on these three different grid systems are almost identical to each other. What is more encouraging, however, is that the vorticity fields on all three grids are very close to each other, as shown in Figs. <ref type="figure" target="#fig_2">4</ref> and<ref type="figure" target="#fig_4">6</ref>.</p><p>These comparisons clearly demonstrates the ability of our curvilinear staggered/non-staggered grid approach to yield accurate solutions on very distorted meshes that are unavoidable in practical simulations of real-life engineering flows. It is also important to emphasize here that these results underscore the success of our interpolation procedure for reconstructing both the Cartesian velocity components at cell centers and the convective and viscous terms at surface centers. As we discussed in Section 4 the interpolation for both cases is carried out in the transformed space so that the interpolation coefficients remain constant and do not depend locally on the grid spacing (see Eqs. ( <ref type="formula" target="#formula_21">19</ref>) and ( <ref type="formula" target="#formula_22">20</ref>)). The results shown in Figs. <ref type="figure" target="#fig_1">3</ref><ref type="figure" target="#fig_2">4</ref><ref type="figure" target="#fig_3">5</ref><ref type="figure" target="#fig_4">6</ref>attest to the accuracy of our approach, which should be attributed to the fact that we interpolate contarvariant fluxes V q and/or R q . Fluxes have by definition the information about the local area of the surface centers embedded in them, thus, accounting for the variations in mesh spacing automatically even though the interpolation is carried out in the uniform transformed curvilinear space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">Impulsively started pipe flow</head><p>This case is specifically designed to measure the efficiency of the Poisson equation solver. We consider laminar, impulsively started flow in a straight square duct of length l and height d ¼ 1 (Fig. <ref type="figure">7</ref>). The flow is initially (t = 0) stagnant everywhere. At t ¼ 0 þ , the flow is impulsively accelerated by imposing a uniform incoming flow of constant velocity U ¼ 1 at the inlet. Following the impulsive input at the inlet, the flow within the duct will develop toward a fully-developed steady state assuming that l is sufficiently long. When this flow is simulated in a time-accurate manner, the very first time step of the simulation poses a challenging test for the efficiency of any incompressible flow solver. During this first time step the flow will undergo the most dramatic change as the flow rate at each streamwise section downstream of the inlet should adjust instantaneously from zero to the inlet value. This very first time step can also be thought as representative of the problem an incompressible flow solver will have to solve during each time step of a pulsatile flow simulation where the inlet flow rate is continuously changing with time. Finally, since the convergence rate of iterative solvers is known to deteriorate with aspect ratio, the severity of this problem from the standpoint of the Poisson solver can be further exacerbated by appropriately varying the aspect ratio l=d of the duct. For these reasons we select the impulsively accelerated straight duct flow from the initial time t ¼ 0 þ to t ¼ Dt as the test case to gauge the performance of the various versions of GMRES-based solvers for the Poisson equation and demonstrate the superior performance of the multigrid-preconditioned GMRES approach. Calculations are carried out using the numerical procedure described in Section 5 for Re ¼ 100 (based on U and d), Dt ¼ 0:01, various l=d values, and successively finer meshes. All tests in this sections have been carried out by running the code in parallel on 4 CPUs and using system clock time to measure the time required by the flow solver for each case. The so measured CPU time is scaled by the number of grid nodes to provide an objective measure of the computational work associated with each algorithm.</p><p>The first set of numerical experiments is designed to gauge the effect of grid refinement on the efficiency of the flow solver while the mesh aspect ratio is kept constant and equal to 1. We set l ¼ d ¼ 1 and consider three, successively finer uniform grids: 33 3 , 65 3 and 129 3 . The performance of the iterative solver is measured through the convergence rate, which is defined as:</p><formula xml:id="formula_32">c ðkÞ ¼ kr ðkÞ k 2 kr ð0Þ k 2</formula><p>where r (k) is the residual for the discrete divergence of the velocity field at the kth step iteration and k Á k 2 denotes the L2-norm. In Fig. <ref type="figure">8</ref> we compare the performance of the FGMRES solver preconditioned with ILU preconditioner (Fig. <ref type="figure">8a</ref>) and with (Fig. <ref type="figure">8b</ref>) the multigrid preconditioner by plotting the convergence rate versus CPU time per grid node. As clearly evident from Fig. <ref type="figure">8a</ref>, the convergence rate of the FGMRES solver with ILU preconditioner deteriorates rapidly as the grid is refined even though the mesh aspect ratio is one for all three grids. The implementation of the multigrid method as preconditioner to FGMRES, on the other hand, has a profound effect on the efficiency of the solver. As seen in Fig. <ref type="figure">8b</ref>, the multigrid-FGMRES algorithm yields a convergence rate that is nearly insensitive to mesh refinement especially when compared to the performance of the ILU preconditioned FGMRES. In fact on all three grid levels, the multigrid-FGMRES algorithm reduces the L2 -norm of the error by at least 10 orders within 9 iterations. A second set of numerical experiments is carried out to investigate the effect of grid aspect ratio on the convergence of the pressure solver. It is well known that large grid aspect ratios can deteriorate the performance of the multigrid solver but this problem can be effectively addressed using an appropriate grid coarsening strategy <ref type="bibr" target="#b33">[34]</ref>. To demonstrate the effect of the coarsening strategy on the performance of our method, we consider two flow domains with l ¼ 10 and 100 both discretized with the same number of grid nodes (101 3 )-the grid spacing in each spatial direction is uniform. By construction the resulting meshes are uniform and have constant aspect ratios equal to 10 and 100, respectively. Fig. <ref type="figure" target="#fig_6">9</ref> compares the performance of the multigrid-FGMRES algorithm in conjunction with full-coarsening and semi-coarsening (grid is  coarsened only in the transverse plane) for the two cases. Both coarsening strategies work well for the l ¼ 10 case but the superior performance of the semi-coarsened multigrid preconditioner is evident for the l ¼ 100 case. The semi-coarsened preconditioner appears to be nearly insensitive to grid aspect ratio while the performance of its full-coarsening counter-part deteriorates dramatically for the large aspect ratio case. In fact the convergence rate of the semi-coarsening algorithm is nearly one order of magnitude faster than that of the full-coarsening.</p><p>The superior performance of the semi-coarsening multigrid algorithm should be attributed to the fact that for the geometry under consideration coarsening the mesh only in the transverse plane results in coarser grids with successively smaller aspect ratios whereas full-coarsening preserves the fine-mesh aspect ratio on all mesh levels. Therefore, the FGMRES solver preconditioned with semi-coarsened multigrid should be expected to work well for geometries that have one dominant long spatial dimension. As such, the results presented in this section point to the conclusion that the semi-coarsening approach should be very efficient for the cardiovascular applications that have motivated the present work. This conclusion will be further reinforced in the results shown in the two subsequent sections.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.">Pulsatile flow in a 90°pipe bend</head><p>This test case is selected to demonstrate the accuracy and efficiency of our method in a complex, 3D pulsatile flow. We simulate numerically the curved pipe geometry studied experimentally by <ref type="bibr" target="#b12">[13]</ref>, which is shown in Fig. <ref type="figure" target="#fig_7">10</ref>. The bend has a diameter of 8 mm and radius of curvature equal to 24 mm. A gear pump providing a steady flow of Re ¼ 500 in conjunction with a piston pump generating a sinusoidal flow waveform with Reynolds number ranging from À300 to 300 were used in the experiment to generate the pulsatile flow waveform shown in Fig. <ref type="figure" target="#fig_8">11</ref>. The resulting Womersley number of the experimental flow is 7.8. The characteristic length and velocity scales used to calculate the non-dimensional numbers and non-dimensionalize the problem are the pipe diameter and median bulk velocity, respectively. The characteristic time scale is based on the characteristic length and velocity scales. The so resulting non-dimensional period of the incoming flow oscillation is T ¼ 12:3.</p><p>The flow wave-form at the inlet is specified from the Womersley solution of a fully developed pulsatile flow within a circular pipe <ref type="bibr" target="#b35">[36]</ref>:  where J 0 denotes the Bessel function of the first kind and order zero, r is the radial distance from the center of the pipe, R is the radius of the pipe, x represents the angular frequency of the flow oscillation, which is 13.31 rad/s, and m is the fluid viscosity. In order to generate the sinusoidal flow waveform that varies in accordance with the experiments from Re ¼ 200 to Re ¼ 800, the constant K is selected to be 0.375. We use Matlab to solve the above equation and the resulting solutions are stored and fed into the flow solver to specify the time-varying inlet flow. The so computed inflow waveform is in good overall agreement with the experimental inflow condition as shown in Fig. <ref type="figure" target="#fig_8">11</ref>.</p><formula xml:id="formula_33">u inlet ðr; tÞ ¼ 2 1 À r R h i À i K x e ixt 1 À J 0 r ffiffiffiffiffiffi Àix m q J 0 R ffiffiffiffiffiffi Àix m q 2 6 4 3 7 5<label>ð29Þ</label></formula><p>A curvilinear mesh is used to discretize the pipe cross-section (see Fig.   <ref type="figure" target="#fig_9">12</ref>, which shows the convergence history for the finest grid. As seen, the FGMRES solver preconditioned with semi-coarsened multigrid performs very well for this more complex flow case.</p><p>To validate our numerical simulation, we compare streamwise velocity profiles from our simulations against the experiments in [13] at five different locations, which are h = 0°, 22.5°, 45°, 67.5°and 90°, respectively. The streamwise velocity profiles at four different time instants (0, 0.25 T, 0.5 T and 0.75 T) are compared with the experimental measurements in Figs. <ref type="bibr">13-16.</ref> As seen in these figures even the coarsest mesh is adequate for obtaining grid independent solutions for this case. Furthermore, the calculated velocity profiles are in good agreement with measurements, with the largest overall discrepancies appearing at 0.75 T time instant. Given the fact that all three meshes yield solutions that are identical to each other, this discrepancy could be largely attributed to the our inlet boundary conditions. As shown in Fig. <ref type="figure" target="#fig_8">11</ref>, the wave-form prescribed at the inlet exhibits the largest deviation from the experimental wave form near t = 0.75 T, i.e. the time instant when the largest discrepancies between the calculated and measured velocity fields are observed throughout the bend. This discrepancy not withstanding, however, the results presented in this section establish both the efficiency and accuracy of our method in complex, 3D pulsatile flow simulations.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4.">Pulsatile flow in a mechanical heart valve</head><p>The last numerical experiment is designed to demonstrate the capabilities of our method in a complex, pulsatile flow with moving immersed boundaries. We simulate physiological, pulsatile flow through a simplified bileaflet mechanical heart valve (MHV) mounted in a model aorta geometry. Bileaflet mechanical heart valves are widely used as prosthetic heart valves to replace malfunctioning native valves. However, all current mechanical heart valve designs are far from ideal and their implantation is associated with complications, such as thromboembolism, tissue overgrowth and anticoagulant related hemolysis, etc. <ref type="bibr" target="#b36">[37]</ref>. The exact mechanisms that lead to these undesirable complications are yet to be fully understood. They are, however, believed to be strongly linked with the complicated hemodynamics induced with the mechanical heart valve. As such, advancing our understanding of MHV flows through simulations is critical prerequisite for establishing and quantifying the link between complex hemodynamics and thromboembolic complications.</p><p>As shown in Fig. <ref type="figure" target="#fig_16">17</ref>, the modeled aorta is basically a straight pipe (as opposed to the curved shape of the actual ascending aorta) with three bulges symmetrically attached to the side wall. These bulges are introduced to model the three anatomic dilations (triple-sinus structure) of the ascending aorta, which occur at the aortic root just above each one of the three leaflets of the native aortic valve. Even though the mechanical valve we consider herein is bileaflet, when it is implanted in the aortic position it operates just upstream a triple-sinus geometry very similar to that shown in Fig. <ref type="figure" target="#fig_16">17</ref>  A simplified bileaflet MHV that represents the geometry of a St. Jude Regent 23 mm valve is inserted upstream to the triple sinus. The actual valve contains two leaflets and a circular ring like housing structure. The two leaflets are connected to the housing through a hinge mechanism and they open/close following the changing of incoming pulsatile flow waveform (as shown in Fig. <ref type="figure" target="#fig_20">19</ref>). For the purpose of this paper, we neglect the housing structure as well as the hinge mechanism here and focus on the flow phenomena induced by the two mov-  ing leaflets. The background, empty aorta domain is discretized with a boundary-fitted, curvilinear grid system with 153 • 153 • 201 grid nodes along the two cross-sectional directions and the streamwise direction, respectively (Fig. <ref type="figure" target="#fig_19">18</ref>). The leaflets are discretized with an unstructured, triangular grid, immersed in the background mesh as shown in Fig. <ref type="figure" target="#fig_19">18</ref> and treated as sharp interfaces using the method of <ref type="bibr" target="#b0">[1]</ref>. At the inlet we specify plug flow velocity profile whose magnitude varies in time according to the nearly physiological, half sine flow waveform shown in Fig. <ref type="figure" target="#fig_20">19</ref>. The prescribed kinematics of the leaflet motion is also shown (dashed line) in Fig. <ref type="figure" target="#fig_20">19</ref> in terms of the relative position of leaflet ðh À h 0 Þ=ðh max À h 0 Þ (where h is the leaflet opening angle and is defined as shown in Fig. <ref type="figure" target="#fig_20">19b</ref>, h 0 and h max represent the opening angle of the leaflet at the fully close and fully open position, respectively, and h 0 ¼ 23 while h max ¼ 85 ). The peak Reynolds number based on the peak flow velocity U and the aorta diameter is 4000, which is within the physiological range. The period of the flow cycle equals to 860 ms and each cycle is divided into 1200 time steps. The typical convergence history of the Poisson equation solver is shown in Fig. <ref type="figure" target="#fig_21">20</ref>. Even for this very complex flow case, which not only involves pulsatile flow but also rapidly moving immersed boundaries, our method can very efficiently reduce the discrete divergence of the velocity by up to 8 orders of magnitude within few iterations per simulated cycle. To illustrate the richness of the flow patterns generated by the moving leaflets, we show in Fig. <ref type="figure" target="#fig_22">21</ref> the numerical solutions at four different time instants, namely: (1) acceleration phase (Fig. <ref type="figure" target="#fig_23">21a</ref> and<ref type="figure">b</ref>); (2) peak systole (Fig. <ref type="figure" target="#fig_23">21c</ref> and<ref type="figure">d</ref>); (3) deceleration phase (Fig. <ref type="figure" target="#fig_23">21e</ref> and<ref type="figure">f</ref>); and (4) leaflets fully closed (Fig. <ref type="figure" target="#fig_23">21g</ref> and<ref type="figure">h</ref>). The calculated flowfields are visualized in terms of out-of-plane vorticity contours and the iso-surfaces of q-criterion <ref type="bibr" target="#b37">[38]</ref>. The acceleration phase up to peak systole is dominated by the growth of coherent vortical structures shed from the valve leaflets and at the interface of the sinus and aortic flows. The non-linear interactions between these vortices leads to the rapid emergence of a very complex three-dimensional flow with multiple streamwise and hairpin-like vortices. As the deceleration phase commences and the valve leaflets begin to close, the flow is getting rapidly disorganized and multiple small scale structures develop in the wake of the leaflets giving rise to a very rich, chaotic-like state.</p><p>It is evident from the above figures that the overall flow patterns generated by the moving leaflets of the MHV are very complex. The detailed discussion of the simulated flow physics, however, is beyond the scope of this work and will be reported in future publications. The results presented herein serve to illustrate the complexity of the flow in order to underscore the ability of our numerical method to obtain converged unsteady solutions for a dynamically rich, 3D, pulsatile flow case with moving immersed boundaries on a fine computational mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusions</head><p>We have developed a novel numerical method for solving the 3D, unsteady, Navier-Stokes equations in generalized curvilinear domains containing complex, moving, immersed boundaries. The method integrates elements from finite-volume, boundary conforming methods with a previously developed sharp-interface, Cartesian methodology for handling complex immersed boundaries. The method is especially suited for internal flow problems for which the background flow domain within which the moving boundaries are immersed can be efficiently discretized with boundary-fitted, generalized coordinates. Such situations are often encountered in simulations of cardiovascular flow problems where complex moving boundaries (the leaflets of a native or a prosthetic heart valve) are immersed within a blood vessel.</p><p>To develop the method we had to address two major numerical issues. The first issue relates to the development of a numerical technique for discretizing the Navier-Stokes equations in generalized, curvilinear staggered grids. The proposed discretization method is an extension to curvilinear coordinates of the hybrid staggered/non-staggered Cartesian grid method developed by Gilmanov and Sotiropoulos <ref type="bibr" target="#b0">[1]</ref>. Our method is an improvement over currently available curvilinear, staggered grid techniques as it neither requires the explicit evaluation of the Christoffel symbols nor the discretization of all three Cartesian momentum equations at each surface center. The accuracy of the method on deliberately skewed and stretched curvilinear grids was demonstrated by applying to simulate flow in a lid-driven cavity. We showed that even on severely distorted curvilinear grids the method is capable of yielding solutions of comparable accuracy to those obtained on uniform Cartesian grids.</p><p>The second major issue we addressed in this work is the efficiency of the resulting unsteady flow solver on fine, curvilinear meshes. We employed a fractional-step approach coupled with a Jacobian-free, GMRES solver for the momentum step and a FGMRES method pre-conditioned with multigrid for the pressure-Poisson equation. We showed that when combined with a semi-coarsening strategy, the multigrid method is a powerful preconditioner of the FGMRES solver yielding convergence rates that are not very insensitive to grid size and aspect ratio. Numerical tests for impulsively started flow in a long straight duct and pulsatile flow in a curved pipe bend showed that the method can reduce the discrete divergence of the velocity field by 8-10 orders within 5-10 iterations on grids with 10 6 grid nodes.</p><p>The ability of the method to yield converged solutions for a very complex, pulsatile flow with moving immersed boundaries was demonstrated by applying it to simulate flow in a mechanical bileaflet heart valve mounted in a straight, albeit anatomically-inspired aorta geometry. The convergence rate of the flow solver even for this very complex case was comparable to that obtain in the simpler benchmark problems. The results demonstrate that our method can resolve geometrically complex flows with very rich flow physics and point to its potential as a powerful simulation tool for cardiovascular and other internal flow problems with moving, immersed boundaries.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Velocity and pressure storage arrangement for a staggered grid layout.</figDesc><graphic coords="5,180.09,67.32,187.92,151.63" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Velocity profile comparisons (Re ¼ 100): (a) profile of vertical velocity component, v, along horizontal center line; (b) profile of horizontal velocity component, u, along vertical center line. The points show benchmark result from [35]. DC_g1 is the uniform Cartesian grid. DC_g2 and DC_g3 are the distorted curvilinear grids shown in Figs. 2a and b, respectively.</figDesc><graphic coords="12,79.37,67.32,378.00,154.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Comparisons of vorticity contours (Re ¼ 100). Solid lines: DC_g1; Dashed lines: DC_g2; Dotted lines: DC_g3. DC_g1 is the uniform Cartesian grid. DC_g2 and DC_g3 are the distorted curvilinear grids shown in Figs. 2a and b, respectively.</figDesc><graphic coords="12,192.76,284.88,153.36,149.18" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Velocity profile comparisons (Re ¼ 1000): (a) profile of vertical velocity component, v, along horizontal center line; (b) profile of horizontal velocity component, u, along vertical center line. DC_g1 is the uniform Cartesian grid. DC_g2 and DC_g3 are the distorted curvilinear grids shown in Figs. 2a and b, respectively.</figDesc><graphic coords="12,79.37,493.74,377.64,154.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Comparisons of vorticity contours (Re ¼ 1000). Solid lines: DC_g1; Dashed lines: DC_g2; Dotted lines: DC_g3. DC_g1 is the uniform Cartesian grid. DC_g2 and DC_g3 are the distorted curvilinear grids shown in Figs. 2a and b, respectively.</figDesc><graphic coords="13,199.93,67.32,150.48,146.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .Fig. 8 .</head><label>78</label><figDesc>Fig. 7. Sketch of the straight duct geometry with unit square cross-section.</figDesc><graphic coords="14,161.57,67.32,215.64,85.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Effect of the coarsening strategy used in the multigrid preconditioner of the FGMRES Poisson equation solver for the impulsively started straight duct case during the first time step of the simulation. Two different duct aspect ratios are considered: (a) l=d ¼ 10; (b) l=d ¼ 100. For both cases a uniform mesh with 129 3 grid nodes is used. c is the L2-norm of the discrete divergence of the velocity field scaled with its value at the start of the iterative process. Solid line: Semi-coarsening; Dash line: Full-coarsening.</figDesc><graphic coords="15,80.87,181.13,385.20,183.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig.10. Geometry and typical computational grid for the 90°pipe bend case. The diameter of the bend, d, equals to 8 mm. R denotes the radius from the center of bend curvature.</figDesc><graphic coords="15,165.91,432.91,215.64,225.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Incoming flow waveform. Solid line: analytical flow waveform prescribed at the inlet of the flow domain obtained by assuming that the inlet flow follows the Womersley solution; Points: the measurements of [13].</figDesc><graphic coords="16,178.58,261.22,181.44,155.09" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Pulsatile flow in a 90°pipe bend. Typical convergence histories of the discrete divergence of the velocity field for several time-steps during a pulsatile flow cycle on the 81 • 81 • 161 mesh.</figDesc><graphic coords="16,175.75,480.08,184.32,178.42" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Pulsatile flow in a 90°pipe bend. Measured (points) and computed streamwise velocity profiles at t = 0. Solid line: 81 • 81 • 81 grid; Dash line: 41 • 41 • 81 grid; Dash-dot line: 81 • 81 • 161 grid. The five locations corresponding to (a)-(e) are h = 0°, 22.5°, 45°, 67.5°, and 90°, respectively. R i and R o represent the inner and outer bend radius from the center of bend curvature.</figDesc><graphic coords="17,89.38,140.21,370.80,508.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Pulsatile flow in a 90°pipe bend. Measured (points) and computed streamwise velocity profiles at t ¼ 0:25T . Solid line: 81 • 81 • 81 grid; Dash line: 41 • 41 • 81 grid; Dash-dot line: 81 • 81 • 161 grid. The five locations corresponding to (a) to (e) are h = 0°, 22.5°, 45°, 67.5°, and 90°, respectively.</figDesc><graphic coords="18,85.04,138.93,371.52,509.61" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Pulsatile flow in a 90°pipe bend. Measured (points) and computed streamwise velocity profiles at t ¼ 0:5T . Solid line: 81 • 81 • 81 grid; Dash line: 41 • 41 • 81 grid; Dash-dot line: 81 • 81 • 161 grid. The five locations corresponding to (a)-(e) are h = 0°, 22.5°, 45°, 67.5°, and 90°, respectively.</figDesc><graphic coords="19,89.38,138.93,370.44,509.61" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Pulsatile flow in a 90°pipe bend. Measured (points) and computed streamwise velocity profiles at t ¼ 0:75 T. Solid line: 81 • 81 • 81 grid; Dash line: 41 • 41 • 81 grid; Dash-dot line: 81 • 81 • 161 grid. The five locations corresponding to (a)-(e) are h = 0°, 22.5°, 45°, 67.5°,and 90°, respectively.</figDesc><graphic coords="20,82.20,136.07,371.88,512.49" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>10</head><label>10</label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>) and calculations are carried out for three successively finer meshes: 41 • 41 • 81, 81 • 81 • 81 and 81 • 81 • 161 in the two transverse and streamwise directions, respectively. Each pulsatile flow cycle is divided into 1000 time steps, with a corresponding non-dimensional time step DT ¼ 0:0123. The typical convergence history of Poisson equation solver for this pulsatile flow computation is illustrated in Fig.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 17</head><label>17</label><figDesc>Fig. 17. The geometry for the straight aorta configuration with a anatomic-like triple sinus structure. (a) Perspective view; (b) side view from the downstream direction.</figDesc><graphic coords="21,165.91,416.87,215.64,241.63" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>Fig. 17. The geometry for the straight aorta configuration with a anatomic-like triple sinus structure. (a) Perspective view; (b) side view from the downstream direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>. The diameter of the straight aorta is set equal to 25.4 mm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 18 .</head><label>18</label><figDesc>Fig. 18. Representative views of the computational grid for the bileaflet mechanical heart valve simulation. (a) Side view showing the background curvilinear grid used to discretize the empty aorta and the unstructured mesh used to discretized the valve leaflets; (b) crosssectional view. For clarity, only every third grid line is plotted.</figDesc><graphic coords="22,113.39,295.41,311.98,353.15" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. (a). The prescribed incoming flow waveform and kinematics of leaflet motions for the mechanical heart valve case. (b) Definition of leaflet opening angle h and h 0 (fully closed position), h max (fully open position).</figDesc><graphic coords="23,165.91,144.36,215.64,279.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Fig. 20 .</head><label>20</label><figDesc>Fig. 20. Pulsatile flow through a bileaflet mechanical heart valve. Typical convergence rate for the discrete divergence of the velocity field over several instants in time during a simulated cardiac cycle. Empty aorta grid size: 153 • 153 • 201.</figDesc><graphic coords="23,182.92,476.49,184.53,182.05" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Fig. 21 .</head><label>21</label><figDesc>Fig. 21. Calculated instantaneous flow patterns for the pulsatile flow through a bileaflet mechanical heart valve. (a), (c), (e) and (g): points indicate phases in the cardiac cycle. Middle: contours of the out-of-plane vorticity component on the vertical plane of symmetry of the valve leaflets. (b), (d), (f), and (h): Corresponding 3D coherent structures visualized using the q criterion [38].</figDesc><graphic coords="24,113.39,165.05,312.48,483.41" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>Fig. 21</head><label>21</label><figDesc>Fig. 21 (continued)</figDesc><graphic coords="25,117.72,188.66,311.04,478.37" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="11,80.87,489.83,384.12,168.62" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>L. Ge, F. Sotiropoulos / Journal of Computational Physics 225 (2007) 1782-1809</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>L. Ge, F. Sotiropoulos / Journal of Computational Physics 225 (2007) 1782-1809</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work was supported by NIH Grant RO1-HL-07262, NSF Grant 0625976 and the Minnesota Supercomputing Institute. We are grateful to Ajit Yoganathan and the members of Georgia Tech's Cardiovascular Fluid Mechanics Laboratory for providing us with the geometry of the mechanical valve and the leaflet kinematics.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A hybrid cartesian/immersed boundary method for simulating flows with 3d, geometrically complex, moving bodies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gilmanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Sotiropoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">207</biblScope>
			<biblScope unit="page" from="457" to="492" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The immersed boundary method</title>
		<author>
			<persName><forename type="first">C</forename><surname>Peskin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Numerica</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="479" to="517" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An accurate cartesian grid method for viscous incompressible flows with complex immersed boundaries</title>
		<author>
			<persName><forename type="first">T</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">S</forename><surname>Udaykumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Shyy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">156</biblScope>
			<biblScope unit="page" from="209" to="240" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A sharp interface Cartesian grid method for simulating flows with complex moving boundaries</title>
		<author>
			<persName><forename type="first">H</forename><surname>Udaykumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rampunggoon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Khanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">174</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="345" to="380" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Combined immmersed-boundary finite-difference methods for three-dimensional complex flow simulations</title>
		<author>
			<persName><forename type="first">E</forename><surname>Fadlun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Verzicco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Orlandi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mohd-Yusof</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">161</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="35" to="60" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An immersed-bounday finite-volume method for simulations of flow in complex geometries</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Choi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">171</biblScope>
			<biblScope unit="page" from="132" to="150" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A general reconstruction algorithm for simulating flows with complex 3D immersed boundaries on Cartesian grids</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gilmanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Sotiropoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Balaras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">191</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="660" to="669" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A non-oscillatory Eulerian approach to interfaces in multimaterial flows (the Ghost Fluid Method)</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Aslam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Merriman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">152</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="457" to="492" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Immersed boundary methods</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Iaccarino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual Review of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="239" to="261" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A non-staggered grid, fractional step method for time-dependent incompressible Navier-Stokes equations in curvilinear coordinates</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">L</forename><surname>Street</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Koseff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">114</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="18" to="33" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Computing flows on general three-dimensional nonsmooth staggered grids</title>
		<author>
			<persName><forename type="first">P</forename><surname>Wesseling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Segal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">G M</forename><surname>Kassels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="page" from="333" to="362" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Calculation of unsteady flows in curved pipes</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">A</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Cheer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Rutaganira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Shacheraghi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluids Engineering</title>
		<imprint>
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="869" to="877" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Unsteady entrance flow in a 90°curved tube</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C M</forename><surname>Rindt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Van Steenhoven</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="page" from="445" to="474" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Numerical calculation of time-dependent viscous incompressible flows with free surface</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">H</forename><surname>Harlow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physics of Fluids</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="2182" to="2189" />
			<date type="published" when="1965">1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A method for computing three dimensional flows using non-orthogonal boundary-fitted co-ordinates</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Maliska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">D</forename><surname>Raithby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal for Numerical Methods in Fluids</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="519" to="537" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">On the adoption of velocity variable and grid system for fluid flow computation in curvilinear coordinates</title>
		<author>
			<persName><forename type="first">W</forename><surname>Shyy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">C</forename><surname>Vu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page">82</biblScope>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Large-eddy simulation of boundary-layer separation and transition at a change of surface curvature</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">R</forename><surname>Voke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">439</biblScope>
			<biblScope unit="page" from="305" to="333" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Large-eddy simulation of turbulent flow inside a sudden-expansion cylindrical chamber</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Sung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Turbulence</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">4</biblScope>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A fractional step solution method for the unsteady incompressible Navier-Stokes equations in generalized coordinate systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rosenfeld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kwak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vinokur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="102" to="137" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Multigrid calculation of fluid flows in complex 3d geometries using curvilinear grids</title>
		<author>
			<persName><forename type="first">P</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Salcudean</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Gartshore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Nowak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Fluids</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="395" to="419" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Stable and accurate convective modeling procedure based on quadratic upstream interpolation</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">P</forename><surname>Leonard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Methods in Applied Mechanics and Engineering</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="98" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A 2nd-order accurate pressure-correction scheme for viscous incompressible-flow</title>
		<author>
			<persName><forename type="first">J</forename><surname>Van Kan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="870" to="891" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">An implicit finite-difference algorithm for hyperbolic systems in conservation-law form</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Beam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Warming</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="87" to="110" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Jacobian-free Newton-Krylov methods: a survey of approaches and applications</title>
		<author>
			<persName><forename type="first">D</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Keyes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">193</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="357" to="397" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">GMRES: A generalized minimal residual algorithm for solving nonsymmetric linear systems</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Saad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schultz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="856" to="869" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hybrid Krylov methods for nonlinear-systems of equtions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Saad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="450" to="481" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">S</forename><surname>Balay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Buschelman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">D</forename><surname>Gropp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kaushik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Knepley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Mcinnes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">F</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<ptr target="&lt;http://www.mcs.anl.gov/petsc&gt;" />
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Direct methods for solving poissons equations</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">L</forename><surname>Buzbee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Golub</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="627" to="656" />
			<date type="published" when="1970">1970</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A direct method for the discrete solution of separable elliptic equations</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Swarztrauber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1136" to="1150" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">BiCGSTAB: A fast and smoothly converging variant of BiCG for the solution of nonsymmetric linear systems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Vorst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="631" to="644" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A flexible inner-outer preconditioned GMRES</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Saad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="461" to="469" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Templates for the Solution of Linear Systems: Building Blocks for Iterative Methods</title>
		<author>
			<persName><forename type="first">R</forename><surname>Barrett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Berry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">F</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Demmel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
			<pubPlace>SIAM, Philadelphia, PA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An evaluation of parallel multigrid as a solver and a preconditioner for singularly perturbed problems</title>
		<author>
			<persName><forename type="first">C</forename><surname>Oosterlee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Washio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="87" to="110" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">U</forename><surname>Trottenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Oosterlee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schuller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Multigrid</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">High-Re solutions for incompressible flow using the Navier-Stokes equations and a multigrid method</title>
		<author>
			<persName><forename type="first">U</forename><surname>Ghia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ghia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Numerical Boundary Condition Procedures and Multigrid Methods</title>
		<meeting><address><addrLine>Moffett Field, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1981">Oct. 19-22, 1981. 1982</date>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="387" to="411" />
		</imprint>
	</monogr>
	<note>NASA</note>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Multi-block and overset-block domain decomposition techniques for cardiovascular flow simulation</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">M</forename><surname>Healey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Fluid mechanics of heart valves</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Yoganathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual Review of Biomedical Engineering</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="331" to="362" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Eddies, stream, and convergence zones in turbulent flows</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C R</forename><surname>Hunt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Moin</surname></persName>
		</author>
		<idno>CTR-S88</idno>
		<imprint>
			<date type="published" when="1988">1988</date>
		</imprint>
		<respStmt>
			<orgName>Center for Turbulence Research</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
