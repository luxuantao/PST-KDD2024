<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Minimizing Broadcast Latency and Redundancy in Ad Hoc Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Rajiv</forename><surname>Gandhi</surname></persName>
							<email>gandhi@cs.umd.edu</email>
						</author>
						<author>
							<persName><forename type="first">Srinivasan</forename><surname>Parthasarathy</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Arunesh</forename><surname>Mishra</surname></persName>
							<email>arunesh@cs.umd.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Minimizing Broadcast Latency and Redundancy in Ad Hoc Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F1A47D2802B4B3E47F2000D341AA6B8A</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>C.2.2 [Computer-Communication Networks]: Network Protocols; F.2.2 [Analysis of Algorithms and Problem Complexity]: [Nonnumerical Algorithms and Problems] Algorithms</term>
					<term>Performance</term>
					<term>Theory Ad Hoc Networks</term>
					<term>Broadcasting</term>
					<term>Approximation Algorithms</term>
					<term>NP-Hardness</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Network wide broadcasting is a fundamental operation in ad hoc networks. In broadcasting, a source node sends a message to all the other nodes in the network. In this paper, we consider the problem of collision-free broadcasting in ad hoc wireless networks. Our objective is to minimize the latency and the number of retransmissions in the broadcast. We show that minimum latency broadcasting is NP-hard for ad hoc wireless networks. We also present a simple and distributed collision-free broadcasting algorithm for broadcasting a message. For networks with bounded node transmission ranges, our algorithm simultaneously guarantees that the latency and the number of retransmissions are within O(1) times their respective optimal values. Our algorithm and analysis extends to the case when multiple messages are broadcast from multiple sources. Experimental studies indicate that our algorithms perform much better in practice than the analytical guarantees provided for the worst case.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Ad hoc networks are a set of wireless mobile nodes which communicate with one another. Nodes in these networks do not rely on any pre-existing routing infrastructure for communication, but instead communicate either directly or with the help of other intermediate nodes in the network. The distributed, wireless and self-configuring nature of ad hoc networks make them suitable for a wide variety of applications. At the same time, these characteristics also introduce several challenging and interesting research issues in the design of communication protocols for these networks.</p><p>Network wide broadcasting is a fundamental operation in ad hoc networks. Its goal is to transmit a message from a source to all the other nodes in the network. Several ad hoc network protocols assume the availability of an underlying broadcast service. Applications which make use of broadcasting include LAN Emulation, host paging, sending an alarm, and establishing unicast routes <ref type="bibr" target="#b21">[21]</ref>. Broadcasting is also a common operation in many distributed computing applications and can be used for service or resource discovery in unstructured environments. In the absence of other mechanisms, broadcast also serves as a last resort for other group communication operations such as multicast.</p><p>Any communication protocol for ad hoc networks should contend with the issue of interference in the wireless medium. When two or more nodes transmit a message to a common neighbor at the same time, the common node will not receive any of these messages. In such a case, we say that a collision has occurred at the common node. In multi-hop ad hoc networks where all the nodes may not be within the transmission range of the source, intermediate nodes may need to assist in the broadcast operation by retransmitting the message to other remote nodes in the network. Retransmissions use up valuable resources in the network such as power and bandwidth. Hence, it is important to choose the intermediate nodes carefully so as to avoid redundancy in retransmissions. Another metric of interest in broadcast protocols is the end-to-end broadcast latency which is the time taken by the message to reach all the nodes in the network.</p><p>One of the earliest broadcast mechanisms proposed in the literature is flooding <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b17">17]</ref>, where every node in the network retransmits a message to its neighbors after receiving it. Although flooding is extremely simple and easy to implement, it was shown in <ref type="bibr" target="#b21">[21]</ref> that flooding can be very costly and can lead to serious redundancy, bandwidth contention and collision: a situation known as broadcast storm. Since then, a lot of research has been directed towards designing broadcast protocols which are collision-free and which reduce redundancy by reducing the number of retransmissions.</p><p>Recently, there has been a tremendous interest for supporting real-time multimedia traffic over ad hoc networks. Ad hoc sensor networks are also expected to play a big role in military communications, disaster relief and rescue operations. These applications impose stringent end-to-end latency requirements on the underlying protocols. In lieu of these real-time applications, it is necessary to have broadcast protocols which can meet the combined requirements of collision-free delivery, low end-to-end latency and low redundancy. To the best of our knowledge, none of the existing broadcast protocols address all these issues together.</p><p>In this paper, we study collision-free broadcasting in ad hoc networks. We provide algorithms which guarantee that all nodes in the network receive the broadcast messages without collision. Our algorithms simultaneously guarantee low broadcast latency and low number of retransmissions. The following is a summary of our contributions in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Our Contributions</head><p>• We show that the problem of minimum latency broadcasting in ad hoc networks is NP-hard. This implies that there are no efficient broadcast algorithms which can minimize the latency of broadcast in ad hoc networks, unless P=NP.</p><p>• For networks with bounded node transmission ranges, we present a collision-free broadcast algorithm which simultaneously produces provably good solutions in terms of latency and the number of retransmissions. In particular, both the latency and the number of retransmissions of our algorithm are within O(1) times their respective optimal values.</p><p>• We extend our algorithm and analysis to the case when multiple messages are broadcast from multiple sources, in networks with uniform node transmission ranges.</p><p>• We study the performance of our algorithms under various network conditions through simulations.</p><p>Our algorithms and analysis make use of certain simple but powerful geometric properties of wireless networks. All our approximation factors are independent of network characteristics. In particular, they are independent of the number of network nodes and the maximum degree of nodes in the network. Our algorithms are simple and have easy distributed implementations. Experimental studies indicate that their performance is much better in practice on typical inputs than the analytical guarantees we provide for the worst case.</p><p>The remainder of this paper is organized as follows: We review related work in the next section. In Section 3, we present the details of our model and the formal problem statement. In Section 4, we show that minimum latency broadcasting in ad hoc networks is NP-hard. In Section 5, we present and analyze our broadcast algorithms and extend it to the case when multiple messages are broadcast from multiple sources. In Section 6, we discuss the distributed implementation of our algorithm. In Section 7, we evaluate the performance of our algorithms experimentally through simulations. Section 8 contains conclusions and directions for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>As noted earlier, flooding is one of the earliest protocols for multicasting and broadcasting in ad hoc networks <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b17">17]</ref>. In flooding, every node in the network retransmits the message to its neighbors after receiving it. Ni et al. <ref type="bibr" target="#b21">[21]</ref> study the flooding protocol analytically and experimentally and show that it can lead to severe contention, collision and redundant retransmissions: a situation referred to as broadcast storm. They also propose neighbor-knowledge and coverage based heuristics to determine which nodes should retransmit the message. Several other heuristics have been proposed where nodes make use of their neighborhood information to determine if they need to retransmit a message <ref type="bibr" target="#b19">[19,</ref><ref type="bibr" target="#b24">24,</ref><ref type="bibr" target="#b25">25,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b27">27,</ref><ref type="bibr" target="#b22">22]</ref>. Although the goal of all the above protocols is to minimize the number of retransmissions, none of them guarantee any bounds for their solution with respect to the optimal number of retransmissions.</p><p>In a series of papers <ref type="bibr" target="#b26">[26,</ref><ref type="bibr" target="#b12">12,</ref><ref type="bibr" target="#b11">11]</ref>, it was proposed that a connected dominating set (CDS) can be used as a virtual backbone for routing in ad hoc networks. A dominating set in a graph G = (V, E) is defined as a set of vertices V ⊆ V , such that every node in V -V is adjacent to some node in V . A connected dominating set (CDS) is a dominating set whose induced subgraph is connected. An MCDS is a CDS of minimum size. The notion of CDS occurs naturally in broadcast protocols since the set of retransmitting nodes in any broadcast protocol forms a CDS. Minimizing the number of retransmissions directly translates to finding an MCDS in a graph.</p><p>Guha and Khuller <ref type="bibr" target="#b14">[14]</ref> studied MCDS in general graphs and showed that computing MCDS is NP-hard. They also gave two greedy approximation algorithms for this problem. In <ref type="bibr" target="#b10">[10]</ref>, it was shown that computing MCDS is NP-hard even for unit disk graphs (UDGs). UDGs model ad hoc networks where all the node transmission ranges are uniform. Several researchers have addressed the issue of efficient approximation algorithms for MCDS for UDGs <ref type="bibr" target="#b28">[28,</ref><ref type="bibr" target="#b5">5,</ref><ref type="bibr" target="#b20">20]</ref>. Although these results lead to efficient broadcast algorithms in terms of the number of retransmissions, it does not directly lead to low broadcast latency.</p><p>There has been relatively less research directed towards low latency broadcasting in ad hoc networks. However, some results exist in radio network literature whose models are essentially the same as ours. In particular, Chlamtac and Kutten <ref type="bibr" target="#b7">[7]</ref> study the complexity of minimum latency broadcast scheduling with interference and show that the problem is NP-hard for general graphs. Recently, Elkin and Kortsarz <ref type="bibr" target="#b13">[13]</ref> showed a logarithmic hardness of approximation for the same problem. However, these results do not directly extend to ad hoc networks since ad hoc networks are modeled by a very restricted class of geometric graphs called disk graphs. In <ref type="bibr" target="#b8">[8]</ref>, Chlamtac and Kutten gave an algorithm for constructing a broadcast tree and for collision-free scheduling of a message along this broadcast tree. They proved that for arbitrary graphs, the broadcast latency of their schedule is within O(ln(N/r) 2 ) times the optimal, where N is the number of network nodes and r is the graph theoretic radius of the network. For ad hoc networks with bounded node transmission ranges, we improve upon these results in this paper, by showing the NP-hardness for disk graphs and by presenting algorithms with broadcast latency and number of retransmissions which are within O(1) times their optimal values.</p><p>Basagni et al. <ref type="bibr" target="#b3">[3]</ref> present a mobility transparent broadcast scheme for mobile multi-hop radio networks. In their scheme, nodes compute their transmit times once and for all in the beginning. They provide two schemes with bounded latency. These schemes have approximation factors which are linear and polylogarithmic in the number of network nodes. In effect, they assume that the topology of the network is completely unknown. Although, their schemes are extremely attractive for highly mobile environments, their approximation factors are far from what is achievable in static and relatively less mobile environments where the broadcast tree and broadcast schedule can be computed efficiently. In addition, they do not bound the number of retransmissions in their schemes. Other results which deal with broadcasting in unknown topologies include <ref type="bibr" target="#b6">[6,</ref><ref type="bibr">9]</ref>.</p><p>Hung et al. <ref type="bibr" target="#b16">[16]</ref> provide centralized and distributed deterministic algorithms for broadcasting and experimentally study the efficiency of their algorithms with respect to collisionfree delivery, number of retransmissions and broadcast latency. While their centralized algorithm is guaranteed to be collision-free, their distributed algorithm is not. They also do not provide any guarantees with respect to the number of retransmissions and latency of the broadcast schedule. For an excellent survey of many of the above mentioned protocols, the reader is referred to the survey by <ref type="bibr">Williams and Camp [29]</ref>. This survey provides a neat characterization and experimental evaluation of many of these protocols under a wide range of network conditions.</p><p>Finally, we mention another area of research which is related to that of broadcast scheduling: broadcast time in radio networks. This area investigates the actual amount of time required by a broadcast message to reach all the network nodes under the same interference model as that of ours. However, the computation of a broadcast schedule before a message originates is disallowed. The reader is referred to <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b1">1,</ref><ref type="bibr" target="#b4">4,</ref><ref type="bibr" target="#b18">18]</ref> for more details. To the best of our knowledge, these results model the network as an arbitrary graph which is not an accurate model for ad hoc networks. These results may not be applicable for scenarios where it is possible to schedule the broadcasting of a message in advance and where the cost of broadcast schedule computation can be amortized over multiple messages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PRELIMINARIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Network Model</head><p>We model an ad hoc network using a directed graph G = (V, E). The nodes in V are embedded in the plane. Each node u ∈ V has a transmission range, range(u) ∈ [rmin, rmax]. Let d(u, v) denote the Euclidean distance between u and v. An arc (u, v) ∈ E iff v is in the transmission range of u, i.e., d(u, v) ≤ range(u). Such graphs are called Disk Graphs. When the node transmission ranges are uniform, G is called a Unit Disk Graph (UDG). We say that an edge</p><formula xml:id="formula_0">(u, v) is uni-directional if (u, v) ∈ E and (v, u) ∈ E. We say that an edge (u, v) is bi-directional if both (u, v) ∈ E and (v, u) ∈ E.</formula><p>A UDG can be treated as an undirected graph since all its edges are bi-directional.</p><p>We assume that time is discrete. Since the medium of transmission is wireless; whenever a node transmits a message, all its out-neighbors hear the message. We say that there is a collision at node w, if w hears a message from two transmitters at the same time. In such a case, we also say that the two transmissions interfere. A node w receives a message collision-free iff w hears the message without any collision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Problem Statement</head><p>We are given a disk graph G = (V, E) and a set of messages M = {1, 2, . . . , m}. We are also given a set of sources for these messages: sources = {sj |sj is the source of message j}. A node can transmit message j only after it receives message j collision-free. A broadcast schedule specifies, for each message j and each node i, the time at which node i receives message j collision-free and the time at which it transmits message j. If a node does not transmit a message then its transmit time for that message is 0. The latency of the broadcast schedule is the first time at which every node receives all messages. The number of retransmissions is the total number of times every node transmits any message. Our goal is to compute a broadcast schedule in which the latency and the number of retransmissions are minimized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Background: Approximation Algorithms</head><p>Many interesting optimization problems are NP-hard. Computing optimal solutions to such problems in polynomial time is not possible unless P = NP . A common approach to NP-hard problems is to develop approximation algorithms, which have polynomial running times and which produce provably good solutions with costs close to the optimal.</p><p>Definition. An α-approximation algorithm for a minimization problem Π is an algorithm that runs in polynomial time and for every instance I of Π it produces a solution of cost at most αOPT(I), α &gt; 1, where OPT(I) refers to cost of an optimal solution for instance I. In this case, we also say that the approximation algorithm has an approximation factor of α.</p><p>Notice that in the definition, we compare the cost of our solution with the cost of an optimal solution. But finding the cost of an optimal solution is NP-hard. In order to establish the approximation guarantee, we must find in polynomial time, a lower bound on the cost of an optimal solution. Lower bounds closer to the optimal cost yield better approximation guarantee. A standard way to prove that a problem is NP-hard is by reducing a known NP-hard problem to the problem at hand. Intuitively, this reduction implies that the problem at hand is at least as "hard" as the original NP-hard problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">NP-HARDNESS</head><p>We prove that minimum latency broadcast in ad hoc networks is NP-hard via a reduction from 3-SAT. This reduction is similar to the reduction from 3-SAT for general graphs. However, the ad hoc network reduction is complicated by the fact that its nodes are to be embedded on the plane and that its arcs be consistent with the transmission ranges of the nodes. Due to lack of space, we do not give the reduction here but state the following theorem without proof.  </p><formula xml:id="formula_1">BroadcastTree(G = (V, E), s) 1 P ← ∅ /*</formula><formula xml:id="formula_2">BroadcastMessage(G = (V, E), s) 1 T broadcast ← BroadcastTree(G, s) 2</formula><p>ScheduleBroadcasts(T broadcast , s) </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">BROADCAST ALGORITHMS</head><p>We first present an algorithm for computing the broadcast schedule for a single message. We then extend the algorithm for scheduling multiple messages from the same source. Finally we present the algorithms for scheduling multiple messages from multiple sources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Scheduling Broadcasts for a Single Message</head><p>The algorithm in Figure <ref type="figure" target="#fig_1">3</ref> takes as input a directed graph G = (V, E) and a source node s. Let <ref type="bibr">Ni(u)</ref> and No(u) denote the set of in-neighbors and out-neighbors of a node u ∈ V . The algorithm consists of two parts -(i) constructing a broadcast tree, T broadcast , rooted at s in which if a node u ∈ V is a parent of a node w ∈ V then u is responsible for transmitting the message to w without any collision at w (pseudo-code in Figure <ref type="figure">1</ref>), (ii) scheduling the transmit times for all nodes in V such that every node receives the message collision-free (pseudo-code in Figure <ref type="figure" target="#fig_0">2</ref>).</p><p>The broadcast tree T broadcast , is constructed as follows. The set of nodes V , is partitioned into a set of primary nodes, P , and a set of secondary nodes S. The set of primary nodes P forms a dominating set in G, i.e., each node in S is in the transmission range of some node in P . If G is undirected, P is any maximal independent set in G. However, if G is directed, a maximal independent set need not be a dominating set. Hence, P is constructed as follows. Initially, P is empty. A node w ∈ V is added to P if and only if P constructed so far does not dominate w. For each node u ∈ V , its parent, parent(u), in T broadcast , is determined as follows. Let Li, i = 0, 1, 2, . . . , l, be the set of nodes at level i in the BFS tree rooted at source s. Let Pi = P ∩ Li and Si = S ∩ Li be the set of primary nodes and secondary nodes respectively at level i in the BFS tree. If u ∈ Pi then parent(u) is any one of its in-neighbors in Li-1. If u ∈ Si then parent(u) is any one of it's in-neighbors in Pi-1 ∪ Pi. All nodes whose parent is u constitute the set Children(u).</p><p>The transmissions are scheduled following a greedy strategy. Note that the nodes that retransmit the message are the internal (non-leaf) nodes in T broadcast . Any retransmitting node, u, retransmits at the minimum time t that satisfies the following three constraints -(i) u has received the message collision-free before time t, (ii) no node in Children(u) is hearing any transmissions at time t, (iii) no node in No(u) \ Children(u) is receiving the message collision-free at time t, where No(u) is the set of out-neighbors of u.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Analysis</head><p>Lemmas 5.1, 5.2, and 5.3 represent some useful properties of our algorithm.</p><p>Lemma 5.1. For any two primary nodes u and w in P , d(u, w) &gt; rmin.</p><p>Proof. Without loss of generality, assume that u was chosen in P before w. If d(u, w) ≤ rmin then w would be dominated by u and would not have been chosen in P by our algorithm. Lemma 5.2. If (u, w) ∈ E broadcast then both u and w can not be secondary nodes, i.e. {u, w} ∩ P ≥ 1.</p><p>Proof. Without loss of generality, let u = parent(w). If w ∈ P then the claim is true. If w is a secondary node then w chooses a primary node as it's parent in line 16 of the pseudo-code BroadcastTree in Figure <ref type="figure">1</ref>. Hence, u must be a primary node.</p><p>Lemma 5.3. In our algorithm every node retransmits at most once.</p><p>Proof. Consider any node v ∈ V . If v is a leaf in T broadcast then Children(v) = ∅ and v is never included in the list T ransmitters (line 13 in Figure <ref type="figure" target="#fig_0">2</ref>). Hence, v never retransmits. If v is an internal node in T broadcast then it retransmits exactly once at transmitT ime(v). Node v is then removed from T ransmitters (line 12 in Figure <ref type="figure" target="#fig_0">2</ref>). Proof. Let c be the center of the disk D. For each primary node u ∈ P rimaries(r), consider a disk of radius rmin/2 centered at u. Let H denote the set of all such disks. Thus, |P rimaries(r)| = |H|. By Lemma 5.1, no two primary nodes are within distance rmin from each other. Thus, H is a set of non-intersecting disks. Each primary node in D is at most a distance of r from c. Any point on a disk in H is at a distance of at most r + (rmin/2) from c. The size of H is upper-bounded by the number of non-intersecting disks of radius rmin/2 whose areas are completely contained within a disk of radius r + (rmin/2). Hence we have </p><formula xml:id="formula_3">|H| ≤ π(r + r min 2 ) 2 π(</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Latency Bound</head><p>Recall that l is the depth of the BFS tree. Let OP T lat be the latency in an optimal solution. Note that l ≤ OP T lat .</p><p>Theorem 5.6. Algorithm BroadcastMessage gives an approximation guarantee of O(r 2 max /r 2 min ). Proof. Recall that for any node u, receiveT ime(u) is the time when u receives the message collision-free from its parent in T broadcast . By induction on the number of levels in the BFS tree, we will show that for any i = 0, 1, . . . , l, and for some constant k,</p><formula xml:id="formula_4">∀v ∈ Li, receiveT ime(v) ≤ ti = k(r 2 max /r 2 min )i<label>(1)</label></formula><p>We then substitute i = l and use l ≤ OP T lat to prove the theorem.</p><p>Base Case: i = 0. In this case, expression (1) is trivially true since Li = {s} and by definition, s receives the message at time 0. Induction Hypothesis: Assume that expression (1) is true for i = 0, 1, . . . , q. Induction Step: We will show that equation ( <ref type="formula" target="#formula_4">1</ref>) is true for i = q + 1. Let z ∈ Lq+1. Let y = parent(z) and x = parent(y). A node u may retransmit the message only after it receives the message collision-free. It also avoids all times in I(u) to schedule the transmission. After satisfying these constraints u chooses transmitT ime(u) greedily. Hence, we get</p><formula xml:id="formula_5">receiveT ime(z) ≤ receiveT ime(y) + 1 + |I(y)| receiveT ime(y) ≤ receiveT ime(x) + 1 + |I(x)| receiveT ime(z) ≤ receiveT ime(x) + 2 + |I(y)| + |I(x)|</formula><p>Note that either x ∈ Lq-1 or x ∈ Lq. Using Lemma 5.5, induction hypothesis, and choosing k ≥ 4k2, we get</p><formula xml:id="formula_6">receiveT ime(z) ≤ tq + 2 + 2k2(r 2 max /r 2 min ) receiveT ime(z) ≤ k(r 2 max /r 2 min )q + 2 + 2k2(r 2 max /r 2 min ) ≤ k(r 2 max /r 2 min )(q + 1)</formula><p>As a corollary, our algorithm gives a constant factor approximation guarantee for graphs where maximum and minimum node transmission ranges are bounded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Corollary 5.7. If the maximum and minimum node transmission ranges in G are bounded then our algorithm has an approximation factor of O(1).</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Bound on the number of retransmissions</head><p>Let OP Tret be the set of nodes that retransmit in an optimal algorithm. Without loss of generality, we assume that each node in OP Tret retransmits exactly once (otherwise, the number of retransmissions in the optimal solution would only increase and give us a better lower bound).</p><p>Lemma 5.8. The total number of retransmissions in our algorithm is at most 2 |P |.</p><p>Proof. In our algorithm, each node retransmits at most once (Lemma 5.3). Hence, the total number of retransmissions is at most |P | + |Sret|, where P is the set of primary nodes and Sret is the set of retransmitting secondary nodes. By Lemma 5.2, in T broadcast , every child of a secondary node is a primary node with a unique parent. <ref type="bibr">Hence</ref> Proof. Combining Lemmas 5.8, 5.9, and 5.4, we get the result.</p><p>Corollary 5.11. If the maximum and minimum node transmission ranges are bounded in G, then the number of retransmissions in our algorithm is at most O(1) times the optimal number of retransmissions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Algorithms for Scheduling Multiple Messages</head><p>We present three algorithms for scheduling broadcasts of multiple messages. The first is a "one-to-all" broadcast algorithm which schedules the broadcast of multiple messages from a single source. The second and third are "all-to-all" broadcast algorithms which schedule the broadcast of multiple messages from many sources. For the remainder of the section, we assume that the network has a uniform transmission range. Recall that M = {1, . . . , m} is the set of messages. We now present our algorithm for scheduling the broadcast of M from a single source s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Single Source Multiple Messages (SSMM)</head><p>Figure <ref type="figure" target="#fig_4">4</ref> presents a sketch of our single source multiple message scheduling algorithm. The algorithm consists of three stages. The first stage computes the broadcast tree from s using the algorithm given in Figure <ref type="figure">1</ref>. The second stage computes a schedule for a single message using a modified version of the scheduling algorithm presented in Figure <ref type="figure" target="#fig_0">2</ref>. The third stage reuses this schedule efficiently for every message in M . We now present the details of the last two stages.</p><p>Stage 2 is identical to the algorithm presented in Figure <ref type="figure" target="#fig_0">2</ref> except Line 9 which is replaced by lines 9.1, 9.2 and 9.3 in Figure <ref type="figure" target="#fig_4">4</ref>. Recall that Lq is the set of nodes at level q in the BFS tree rooted at s. Also recall that tq = kq (see expression <ref type="bibr" target="#b1">(1)</ref>). Let u ∈ Lq. Line 9.2 ensures that for any level q, all nodes in Lq transmit the message between times tq + 1 and tq+1. Line 9.3 specifies delay(u), which is the amount of time by which u delays the transmission of a message after receiving it.</p><p>In Stage 3, s transmits messages 1 through m sequentially with a uniform gap of 3k time units between two successive messages. Specifically, message j is transmitted by s at time 3(j -1)k + 1. Any retransmitting node u which receives j, delays the transmission of j by delay(u) time units computed above.</p><p>Why should s introduce a gap of 3k time units between two successive message transmissions? To answer this question, we make the following observations. Let Lq and L q be two BFS levels such that q &gt; q. Our first observation is that, in a network with only bi-directional edges, Lq and L q have an edge between them only if q ≤ q + 1. Specifically, transmissions from Lq to Lq+1 and transmissions from Lq+3 to Lq+4 can proceed simultaneously without interfering  with each other. Thus, it suffices to "separate" two different messages by three levels in order to allow simultaneous collision-free transmissions of these messages. Our next observation is that once all nodes in Lq receive a message, it takes atmost k time units for all nodes in Lq+1 to receive the message (see proof of Theorem 5.6). Clearly, 3k time units is an appropriate choice of the gap between successive messages.</p><formula xml:id="formula_7">ScheduleBroadcasts SSMM(G = (V, E), M, s) Stage 1. T ←BroadcastTree(G,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Multiple Source Multiple Messages</head><p>We present two algorithms for scheduling broadcasts of multiple messages with multiple sources. Recall that for every message j ∈ M , sj is the source of the message j. In the first algorithm, called Intermediate Source Broadcast (ISB), messages get unicast from their sources sj to the intermediate source s. These unicasts themselves are greedily scheduled to ensure collision-free transmissions (see section 5.3.3). After s receives all the messages, it broadcasts them using the algorithm presented in Figure <ref type="figure" target="#fig_4">4</ref>. In the second algorithm called Multi-Source Broadcast (MSB), a broadcast tree Tj from each source sj. Message j gets broadcast on tree Tj using the greedy scheduling algorithm presented in Figure <ref type="figure" target="#fig_0">2</ref>. We now briefly explain the details of the algorithm below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3">Intermediate Source Broadcast (ISB)</head><p>This algorithm consists of two stages. Consider the shortest path pj from sj to s. In the first stage, every message j, gets unicast along pj to s. We ensure that these unicasts are collision-free by a greedy scheduling strategy such that message j1 gets priority over j2 iff j1 &lt; j2. In the second stage, s uses the algorithm in Figure <ref type="figure" target="#fig_4">4</ref> to broadcast all the messages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.4">Multi-Source Broadcast (MSB)</head><p>In the multi-source broadcast algorithm, each source sj of the message computes a broadcast tree rooted at itself using Figure <ref type="figure">1</ref>. Message j is broadcast along tree rooted at sj . Transmissions are scheduled using the algorithm in Figure <ref type="figure" target="#fig_0">2</ref>. Message j1 gets priority over j2 iff j1 &lt; j2. This priority is enforced by scheduling j1 before j2.</p><p>The two algorithms for multiple messages present interesting trade offs. The intermediate source algorithm (ISB) requires only one broadcast tree to be computed and maintained at s, apart from the unicasts from each sj to s. The multi-source algorithm (MSB), on the other hand, requires computation and maintenance of potentially m trees from each sj. However, intuitively, MSB should have a lower broadcast latency, since the messages are not routed through an intermediate source. Experimental studies (see section 7.2) confirm this intuition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Analysis for Multiple Messages</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Latency</head><p>We now state the latency bounds for SSMM and the ISB. Recall that k is the constant which appears in expression (1). Theorem 5.12. Algorithm SSMM has a latency T such that</p><formula xml:id="formula_8">3k(m -1) + k(l -2) ≤ T ≤ 4kOP T lat (2)</formula><p>Theorem 5.13. Algorithm ISB has a latency T such that</p><formula xml:id="formula_9">3k(m -1) + k(l -2) ≤ T ≤ 6kOP T lat (3)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.2">Bound on the Number of Retransmissions</head><p>We state the following theorem for all three multiple message broadcast algorithms. The bound below holds for networks with uni-directional edges also.</p><p>Theorem 5.14. The number of retransmissions in all the three multiple message broadcast algorithms is O(r 2 max /r 2 min ) times the number of retransmissions in the optimal algorithm.</p><p>Corollary 5.15. For networks with bounded maximum and minimum node transmission ranges, the number of retransmissions in all the three multiple message broadcast algorithms is O(1) times the number of retransmissions in the optimal algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">DISTRIBUTED IMPLEMENTATION</head><p>All the algorithms presented in this paper have easy distributed implementations when all the edges in the network are bi-directional. Our distributed implementations are inspired by the technique presented in <ref type="bibr" target="#b8">[8]</ref>. The basic building blocks for our distributed implementation are the Depth First Search (DFS) and the Breadth First Search (BFS) graph traversal algorithms. There are many distributed DFS and BFS implementations available and we could use any of them for our purpose.</p><p>In order to build the broadcast tree for a message, the source of the message creates a token. The purpose of this token is to record the information about the set of primaries and their parents. This token visits each node of the graph during its DFS traversal. When a node receives the token, it knows the current set of primaries and their parents. In particular, it can determine if it is within the range of any current primary. If not, it adds itself to the set of primaries, chooses its parent, updates this information in the token, and passes the token to the next node in the DFS traversal. Since each edge is traversed twice in a DFS traversal, once forward and once backward, a node u also computes its set of children as the token visits u through the back edges.</p><p>In order to compute the schedule for a message, the source creates another token. The purpose of this token is to record the information about the receive and transmit times of the nodes in the graph. This token does a DFS traversal of the non-leaf nodes of the broadcast tree created above. When a node receives this token, it knows the transmit times of all the internal nodes visited so far. In particular, it knows the transmit times of the nodes which could interfere with its own transmission. The node now computes its minimum possible collision-free transmit time, updates this information in the token and sends it to the next node to be visited. In other words, the single message broadcast algorithm can be implemented using two DFS traversals, independent of the number of messages m.</p><p>We now discuss the distributed implementations of our multiple message broadcasting algorithms. We note that essentially the same technique discussed above can be applied for the distributed implementation of the single source multiple message (SSMS) algorithm. The first DFS computes the broadcast tree from the source s. In the second DFS, every retransmitting node u computes the delay(u) by which it should delay the transmission of any message after receiving it. After this step, s starts transmitting all the messages with a uniform gap of 3k time units between two successive messages (see section 5.3.1). In the intermediate source broadcast (ISB), the second stage is the same as SSMS. In the first stage, ISB computes the shortest path from the source sj of each message j to s and greedily schedules the unicast of the messages along these paths. We note that this stage can be efficiently implemented using one BFS (for computing shortest paths) and one DFS (for computing the schedule). We omit the details involved due to lack of space. Finally, for the multiple source broadcast, we perform a DFS from each source sj to compute its broadcast tree and for each message j to compute its schedule. This is precisely the tradeoff referred to earlier between ISB and MSB: ISB involves three DFS traversals and one BFS traversal which is independent of the number of messages m, whereas MSB involves potentially 2m DFS traversals. However, MSB has a much better broadcast latency compared to ISB (see section 7.2).</p><p>There are several other issues which arise in the presence of uni-directional edges. In this case, many back edges during a DFS traversal might not even exist. Instead, A single back edge may need to be replaced by a directed path. Another basic issue is that of network connectivity. All the distributed implementations presented above assume strong network connectivity, i.e., the existance of a directed path from any node u to any other node v. In the presence of uni-directional edges, the network may not be strongly connected. We simply note that routing in ad hoc networks in the presence of uni-directional edges is a very involved and interesting research issue. A complete treatment of this issue is beyond the scope of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">EXPERIMENTAL EVALUATION</head><p>This section deals with the experimental performance evaluation of our algorithms through simulations. The experiments focus on the effect of various network conditions on broadcast latency and the number of retransmissions. In all the experiments, the network nodes were placed uniformly at random within a square. All the experiments were performed on strongly connected graphs. All data points were averaged over 10 simulation runs and the error bars indicate the maximum and minimum deviation of any observed value from the mean, i.e, a confidence of 100% that the mean is within the range indicated by the error bars. The choice of parameters made in our experiments were inspired in part by the recent survey by Williams and Camp <ref type="bibr" target="#b29">[29]</ref> and by the need for completing the simulations within reasonable time. All our simulations were performed using the Mathematica and Combinatorica packages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Single Message Broadcast</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1">Uniform Transmission Ranges</head><p>We present the results of our study of the single message broadcast algorithm with uniform node transmission range. In these experiments, we placed the nodes uniformly at random in a square of length 350 meters and chose the transmission range to be 100 meters. We varied the number of nodes from 20 to 110 in steps of 10, leading to higher node densities and higher average node degree. We studied the effect of this on the latency and the number of retransmissions. One node was chosen uniformly at random to be the source. We now present our results.</p><p>Figure <ref type="figure">5</ref> is a plot of the broadcast latency vs. the number of network nodes. Broadcast latency is the maximum time taken by any node to receive the message. The plot indicates that latency does not vary much with the number of nodes in the graph. This is intuitive, since the latency is mostly influenced by the depth of the BFS tree from the source. This depth does not depend much upon the number of nodes, but only on the length of the square and the transmission range. In reality, the plotted ratio is a conservative estimate of the real approximation ratio. As is seen from the plot, even this ratio is very close to 1 most of the times. In fact, the worst case ratio observed for all the runs is no worse than 1.75.</p><p>Figure <ref type="figure">7</ref> is a plot of the number of retransmitting nodes vs. the number of network nodes. While the number of re- </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2">Non-uniform Transmission Ranges</head><p>We now present the results of the study of the single message broadcast algorithm with non-uniform transmission ranges. In these experiments, we placed 200 nodes in a square of length 1500 meters. The transmission ranges were chosen uniformly at random from the interval [rmin, rmax], where rmin = 200 meters for all experiments, and rmax was varied from 200 to 1000 in steps of 100.</p><p>Figure <ref type="figure">8</ref> plots latency vs. rmax and Figure <ref type="figure">10</ref> plots the number of retransmissions vs. rmax. Note that both these values drop down with increasing rmax values. Intuitively, as rmax increases, the average range of the nodes also increases. This leads to increasing number of nodes being covered for each retransmission leading to a reduction in the total number of retransmissions. Note that even though the latency drops down with rmax, in Figure <ref type="figure" target="#fig_7">9</ref> the ratio (Latency/BF SDepth) stabilizes around 1.5. This is in contrast with the analytically predicted approximation ratio of (r 2 max /r 2 min ). We interpret these results as an indication of a much better average case performance than the guaranteed worst case performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Multiple Messages</head><p>We now present the results of performance studies of the MSB algorithm. In these experiments, 100 nodes were placed in a square area of length 350 meters. All nodes had a uniform transmission range of 100 meters. The number of messages were doubled in each step from 2 to 128. All the messages originate at the same time. We studied the approx- Figure <ref type="figure" target="#fig_8">11</ref> plots the approximation ratio vs. lower bound. Note how the ratio increases initially and then drops down to a constant value as the number of messages increase. In particular, the ratio reaches the peak when the number of messages is around 10. This can be explained by observing that the BF SDepth is a very poor lower bound when multiple messages are transmitted. Once the number of messages exceeds the BF SDepth, which happens at around 10, the lower bound is strengthened leading to a better approximation ratio. This plot also implies that for every additional message, the marginal increase in latency is only 4 time units.</p><p>In the case of the intermediate source broadcast (ISB), recall that equation (3) provides a tight lower bound of 3k for the broadcast of multiple messages. This indicates that when the number of messages m is large, ISB will have a marginal latency of about 200 times units for every additional message. In contrast, MSB performs much better with a marginal latency of only 4 for every additional message. However, while ISB can be implemented with three DFS and one BFS traversal which is independent of the number of messages, MSB requires potentially 2m DFS traversals. This is precisely the trade off between MSB and ISB which was referred to in Section 5.3.4. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">CONCLUSIONS AND FUTURE WORK</head><p>In this paper, we studied the problem of efficient collisionfree broadcasting in ad hoc networks. We showed that minimum latency collision-free broadcasting in ad hoc networks is NP-hard. We presented simple, efficient and distributed collision-free broadcast algorithms which have provably good approximation bounds for both latency and the number of retransmissions. Specifically, for single message broadcast, for networks with bounded node transmission ranges, the latency of our algorithm is within a factor of O(1) from the optimal value. For multiple messages, for networks with uniform transmission ranges, our algorithms have a latency which is within a factor of O(1) from the optimal. For networks with bounded node transmission ranges, the number of retransmissions for all our algorithms is within a factor of O(1) from the optimal. We studied the performance of our algorithms experimentally and showed that our algorithms perform much better in practice than what is analytically guaranteed.</p><p>An interesting future work is to extend our current algorithms to networks with dynamic topologies. Creating and maintaining a broadcast tree in dynamic topologies is inefficient. Existing deterministic, collision-free broadcasting approaches involve pre-computing the schedule of all the nodes independent of the network topology in the beginning. However, in general, such schemes do not guarantee good latency and retransmission bounds. Randomized schemes which do not rely on complete topology information but locally guarantee collision-free transmissions with high probability seem more attractive for dynamic topologies. Another research issue for the future is extending our work to support multicast operations.</p><p>Finally, integrated protocols for supporting a mixture of unicast, multicast, and broadcast traffic is a very interesting and challenging research issue.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Algorithm for scheduling the broadcasts</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Algorithm for broadcasting a single message from source s</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Lemma 5 . 4 .</head><label>54</label><figDesc>Consider a disk D, of radius r ≥ rmin. If P rimaries(r) represent the set of primary nodes within D then |P rimaries(r)| ≤ k1r 2 /r 2 min , where k1 is a constant.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>2 Lemma 5 . 5 .</head><label>255</label><figDesc>Consider an internal node u in T broadcast that has received the message collision-free. Recall that I(u) (line 8 in ScheduleBroadcasts) is the set of interference times that u must avoid while choosing transmitT ime(u).|I(u)| ≤ 2 |P rimaries(3rmax)| ≤ k2r 2 max /r 2 min ,where k2 is a constant. Proof. Let us represent the transmission range of any node u by a disk of radius range(u) ≤ rmax. Let w be a transmitter such that u and w share a common out-neighbor and transmitT ime(w) ∈ I(u). Thus, d(u, w) ≤ 2rmax. Let B(u) be the set of all such nodes w. Since each node retransmits at most once, |I(u)| ≤ |B(u)|. We will now upperbound |B(u)|. Nodes in B(u) are either primary nodes, B p (u), or secondary nodes, B s (u). Let us first bound |B p (u)|. Note that |B p (u)| ≤ |P rimaries(2rmax)|, where we can obtain |P rimaries(2rmax)| from Lemma 5.4. We will now bound |B s (u)|. Let v ∈ B s (u). By Lemma 5.2, every child of v in T broadcast is a primary node. These primary nodes are at a distance of at most 3rmax from u. Thus, |B s (u)| ≤ |P rimaries(3rmax)|. Using Lemma 5.4, we get |B p (u)| + |B s (u)| ≤ 2 |P rimaries(3rmax)| ≤ k2r 2 max /r 2 min , for some constant k2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Single Source Multiple Message (SSMM)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :Figure 6</head><label>56</label><figDesc>Figure 5: Latency vs. # nodesFigure6is a plot of the approximation ratio vs. the number of network nodes, where ratio is (latency/BF SDepth). In reality, the plotted ratio is a conservative estimate of the real approximation ratio. As is seen from the plot, even this ratio is very close to 1 most of the times. In fact, the worst case ratio observed for all the runs is no worse than 1.75.Figure7is a plot of the number of retransmitting nodes vs. the number of network nodes. While the number of re-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Figure 6: ratio vs. # nodes. ratio = latency/BFS depth</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Figure 8: Latency vs. rmax</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :</head><label>11</label><figDesc>Figure 10: # retransmissions vs. rmax</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Proof. Any node has a maximum transmission range of rmax. The maximum number of primary nodes in a disk of radius rmax is |P rimaries(rmax)|. Since each node in OP Tret can reach at most |P rimaries(rmax)| primary nodes, we get the required bound.</figDesc><table><row><cell>Theorem 5.10. The number of retransmissions in our al-</cell></row><row><cell>gorithm is O(r 2 max /r 2 min ) times the number of retransmis-</cell></row><row><cell>sions in an optimal algorithm.</cell></row></table><note><p>, |Sret| ≤ |P |. Lemma 5.9. Recall that P rimaries(rmax) is the set of primaries in a disk of radius rmax. Then we have |OP Tret| ≥ |P | |P rimaries(rmax)| .</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Theorem 4.1. Minimum latency broadcast problem in ad hoc networks is NP-hard.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. We thank Samir Khuller, Sriram Pemmaraju, Aravind Srinivasan and Yung-Chun (Justin) Wan for useful discussions. Special thanks to Sriram Pemmaraju for answering various questions about Mathematica and Combinatorica.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Research supported by NSF Award CCR-9820965. † Research supported by NSF Award CCR-0208005. ‡ Research supported by a NIST grant.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A lower bound for radio broadcast</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bar-Noy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Linial</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Peleg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="290" to="298" />
			<date type="published" when="1991-10">Oct. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On the time-complexity of broadcast in multi-hop radio networks: An exponential gap between determinism and randomization</title>
		<author>
			<persName><forename type="first">R</forename><surname>Bar-Yehuda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Goldreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Itai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer and System Sciences</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="104" to="126" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A mobility-transparent deterministic broadcast mechanism for ad hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Basagni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Bruschi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking (TON)</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="799" to="807" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Lower bounds for the broadcast problem in mobile radio networks</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bruschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">D</forename><surname>Pinto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distributed Computing</title>
		<imprint>
			<biblScope unit="page" from="129" to="135" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Polynomial-time approximation scheme for minimum connected dominating set in ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">X</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D.-Z</forename><surname>Du</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note type="report_type">Tech. rep</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Making transmission schedule immune to topology changes in multi-hop packet radio networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Farago</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="page" from="23" to="29" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">On broadcasting in radio networks -problem analysis and protocol design</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kutten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Communications</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="1240" to="1246" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Tree-based broadcasting in multihop radio networks</title>
		<author>
			<persName><forename type="first">I</forename><surname>Chlamtac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kutten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="1209" to="1223" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Deterministic broadcasting in unknown radio networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Chlebus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gasieniec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gibbons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pelc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Rytter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distributed Computing</title>
		<imprint>
			<biblScope unit="page" from="27" to="38" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Unit disk graphs</title>
		<author>
			<persName><forename type="first">B</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Colbourn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Mathematics</title>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="165" to="177" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Routing in ad-hoc networks using minimum connected dominating sets</title>
		<author>
			<persName><forename type="first">B</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICC</title>
		<imprint>
			<date type="published" when="1997">1997</date>
			<biblScope unit="page" from="376" to="380" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Routing in ad-hoc networks using a virtual backbone</title>
		<author>
			<persName><forename type="first">B</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Sivakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">6th International Conference on Computer Communications and Networks (IC3N &apos;97)</title>
		<imprint>
			<date type="published" when="1997-09">Sept. 1997</date>
			<biblScope unit="page" from="1" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Combinatorial logarithmic approximation algorithm for directed telephone broadcast problem</title>
		<author>
			<persName><forename type="first">M</forename><surname>Elkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kortsarz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the thiry-fourth annual ACM symposium on Theory of computing</title>
		<meeting>the thiry-fourth annual ACM symposium on Theory of computing</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="438" to="447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Approximation algorithms for connected dominating sets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Khuller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="page" from="374" to="387" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Flooding for reliable multicast in multi-hop ad hoc networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Obraczka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Tsudik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Viswanath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Discrete Algorithms and Methods for Mobile Computing and Communications (DIALM)</title>
		<meeting>the International Workshop on Discrete Algorithms and Methods for Mobile Computing and Communications (DIALM)</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="64" to="71" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Scheduling of broadcasts in multihop wireless networks</title>
		<author>
			<persName><forename type="first">P.-K</forename><surname>Hung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Sheu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-S</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">European Wireless</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">A simple protocol for multicast and broadcast in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Jetcheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-07">July 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Deterministic broadcasting time in radio networks of unknown topology</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Kowalski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pelc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">43rd Annual Symposium on Foundations of Computer Science (FOCS)</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Multicast tree construction and flooding in wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd ACM international workshop on Modeling, analysis and simulation of wireless and mobile systems</title>
		<meeting>the 3rd ACM international workshop on Modeling, analysis and simulation of wireless and mobile systems</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="61" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Simple heuristics for unit disk graphs</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">V</forename><surname>Marathe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Breu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Iii</forename><surname>Hunt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Rosenkrantz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Networks</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="59" to="68" />
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The broadcast storm problem in a mobile ad hoc network</title>
		<author>
			<persName><forename type="first">S.-Y</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-C</forename><surname>Tseng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y.-S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Sheu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the fifth annual ACM/IEEE international conference on Mobile computing and networking</title>
		<meeting>the fifth annual ACM/IEEE international conference on Mobile computing and networking</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="151" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Efficient broadcast in mobile ad hoc networks using connected dominating sets</title>
		<author>
			<persName><forename type="first">W</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Software -Beijing</title>
		<imprint>
			<date type="published" when="1999">1999</date>
			<pubPlace>China</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Ahbp: An efficient broadcast protocol for mobile adhoc networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Science and Technology -Beijing</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<pubPlace>China</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On the reduction of broadcast redundancy in mobile adhoc networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X.-C</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of First Annual Workshop on Mobile Ad Hoc Networking Computing. MobiHOC</title>
		<meeting>First Annual Workshop on Mobile Ad Hoc Networking Computing. MobiHOC</meeting>
		<imprint>
			<date type="published" when="2000-08-11">Aug. 11, 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Multipoint relaying: An efficient technique for flooding in mobile wireless networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Qayyum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Viennot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Laouiti</surname></persName>
		</author>
		<idno>RR-3898</idno>
	</analytic>
	<monogr>
		<title level="j">INRIA</title>
		<imprint>
			<date type="published" when="2000-02">Feb. 2000</date>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. Research Report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Spine routing in ad hoc networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Sivakumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bharghavan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM/Baltzer Cluster Computing Journal</title>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
	<note>special issue on Mobile Computing</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">An efficient distributed network-wide broadcast algorithm for mobile adhoc networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sucec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Marsic</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-09">September 2000</date>
		</imprint>
		<respStmt>
			<orgName>Rutgers University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. rep</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Distributed construction of connnected dominating set in wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">P.-J</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Alzoubi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Frieder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE INFOCOM</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Comparison of broadcasting techniques for mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">B</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Camp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the third ACM international symposium on Mobile ad hoc networking and computing</title>
		<meeting>the third ACM international symposium on Mobile ad hoc networking and computing</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="194" to="205" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
