<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Distinguishing Congestion Losses from Wireless Transmission Losses : A Negative Result</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Saad</forename><surname>Biaz</surname></persName>
							<email>saadb@cs.tamu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Texas A&amp;M University College Station</orgName>
								<address>
									<postCode>77843-3112</postCode>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nitin</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
							<email>vaidya£@cs.tamu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Texas A&amp;M University College Station</orgName>
								<address>
									<postCode>77843-3112</postCode>
									<region>TX</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Distinguishing Congestion Losses from Wireless Transmission Losses : A Negative Result</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">908D23EEFBF8DC3EDA01A98C965B57F0</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T10:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>TCP is a popular transport protocol used in present-day internet. When packet losses occur, TCP assumes that the packet losses are due to congestion, and responds by reducing its congestion window. When a TCP connection traverses a wireless link, a significant fraction of packet losses may occur due to transmission errors. TCP responds to such losses also by reducing congestion window. This results in unnecessary degradation in TCP performance.</p><p>We define a class of functions named loss predictors which may be used by a TCP sender to guess the actual cause of a packet loss (congestion or transmission error) and take appropriate actions. These loss predictors use simple statistics on round-trip times and/or throughput, to determine the cause of a packet loss. We investigate their ability to determine the cause of a packet loss. Unfortunately, our simulation measurements suggest that the three loss predictors do not perform too well.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>TCP is a popular protocol for reliable data delivery in the internet. TCP is robust in that it can adapt to disparate network conditions <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b8">9]</ref>. When a packet loss occurs, TCP sender assumes that congestion has occurred in the network, and drastically reduces its congestion window. Reducing congestion window temporarily reduces the number of packets sent by the sender, and reduces the throughput. The congestion window can grow again gradually, until another packet loss occurs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¤</head><p>Research reported is supported in part by the Fulbright Program, National Science Foundation grant CDA 9529442, and Texas Advance Technology Program grants 009741-052-C and 010115-248.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¥</head><p>On leave from the Ecole Superieure de Technologie de Fes (MOROCCO).</p><p>TCP makes the implicit assumption that all packet losses are due to congestion. This assumption is not accurate when a TCP connection traverses a wireless link.</p><p>Due to increasing acceptance of wireless networking technology, there is considerable interest in using TCP over wireless links (e.g, <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b7">8]</ref>). Previous work has shown that, unless the TCP protocol is modified, it performs poorly on paths that include a wireless link subject to transmission errors. The reason for this is that a TCP sender activates congestion control mechanisms <ref type="bibr" target="#b8">[9]</ref> even if a packet loss is due to wireless transmission errors.</p><p>Past proposals for improving performance of TCP over wireless require some cooperation from an intermediate node on the path from the sender to the receiver <ref type="bibr" target="#b1">[2]</ref>. For several practical reasons <ref type="bibr" target="#b10">[11]</ref>, our interest is in mechanisms that impose minimal demands (if any) on any host other than the sender or the receiver. Ideally, it would help if the sender could differentiate between packet losses due to congestion from the packet losses due to wireless transmission errors. Once a sender knows that the packet loss is due to congestion or due to transmission error, it can respond appropriately. One possible approach to distinguish between the two types of packet losses is as follows: ¦ Use a "loss predictor" that can guess whether a packet transmitted in the near future will be lost due to congestion or transmission error.</p><p>¦ When a packet is lost: If the loss predictor predicted that the packet will be lost due to congestion, conclude that the packet loss is indeed due to congestion. Otherwise, conclude that it was due to transmission errors.</p><p>The obvious question now is how to design a loss predictor that can predict the cause of a future loss. In this paper, we consider three loss predictors derived directly from previously proposed techniques for congestion avoidance. The Congestion Avoidance Techniques (CATs) were proposed to determine when it is appropriate to increase or decrease TCP congestion window <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b12">13]</ref>. In the basic TCP, congestion window is decreased only when TCP sender determines that a packet has been lost. Otherwise, the congestion window gradually increases whenever receipt of new data is acknowledged by the receiver. The congestion avoidance techniques <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b12">13]</ref> monitor the level of congestion in the network, and recommend when the congestion window should be increased or decreased.</p><p>The CATs in <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b12">13]</ref> use simple statistics on observed round-trip times (RTT) and/or observed throughput of a TCP connection. An objective of this paper is to investigate the ability of loss predictors, based on these CATs, to determine the cause of a packet loss. The paper also evaluates how the loss predictors react to changes in several network parameters, such as link bandwidth and packet loss rates.</p><p>Rest of this paper is organized as follows. Section 2 describes the three congestion avoidance techniques (CATs) used in this paper. Section 3 describes how loss predictors are derived from the CATs. Performance parameters of interest are defined in Section 4. Simulation model and simulation results are discussed in Section 5. Conclusions are presented in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Congestion Avoidance Techniques</head><p>To describe the congestion avoidance techniques, we first need to introduce some terminology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Terminology and Notations</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Sender's Congestion Window : The congestion window determines the maximum amount of unacknowledged data sent by the TCP sender.</p><p>¦ ¢¡ -th monitored packet £ ¥¤ : At any time, one packet sent by the sender is monitored. For the ¡ -th moni- tored packet £ ¥¤ , we define three parameters below, to be used in implementing the CATs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Window size ¦¤ for the ¡ -th monitored packet: §¤ is the amount of data transmitted (including the monitored packet) during the interval from the time when the monitored packet is transmitted, until when an acknowledgement for the monitored packet is received.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Round-trip time © © ¤ for ¡ -th monitored packet : Round-trip time © © ¤ for the ¡ -th monitored packet £ ¤ is the duration from the time when £ ¤ is transmitted, until the time when an acknowledgement for £ ¤ is received by the sender.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Throughput © ¤ for the ¡ -th monitored packet : For the ¡ -th monitored packet £ ¤ , the window size is ¤ , and round-trip time is © © ¤ . In this case, throughput © ¤ is defined as © ¤ ¦¤ "! #© © $¤ .</p><p>The congestion avoidance techniques considered here are motivated by the following expectation of network behavior <ref type="bibr" target="#b9">[10]</ref>. As illustrated in Figure <ref type="figure" target="#fig_0">1</ref>, when network load is small, increasing the load should result in a comparable increase in network throughput with only a small increase in round-trip times (RTT). At some point, when the load is large enough, increasing the load further should result in a smaller increase in throughput, and a larger increase in round-trip times (this occurs at the "knee" of the loadthroughput curve). If the load is increased further, at some point, the network throughput should drop sharply, while round-trip times should become extremely large. The three CATs considered in this paper are summarized below. The CATs are implicitly based on the notion that there will be some response from the network to a congestion window size change for a TCP connection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Congestion Avoidance Technique 1:</head><p>TCP-Vegas <ref type="bibr" target="#b6">[7]</ref> requires a TCP sender to keep track of the % '&amp; $( 0) © © , defined as the minimum of all © © s measured during the TCP connection. When acknowledgement for the ¡ -th monitored packet is received, the sender calculates the expected throughput as,</p><formula xml:id="formula_0">Expected Throughput ¤ % '&amp; $( 0) © ©</formula><p>The actual throughput © ¤ (as defined earlier), is calculated as ¡ ¢ ¤£ ¤£ ¡ . Then the difference ¥ is calculated as,</p><formula xml:id="formula_1">¥ expected throughput ¦ actual throughput ¡ § © ¢ ¤£ ¤£ ¦ ¡ ¢ ¤£ £ ¡ Reference [7] expresses this difference</formula><p>¥ in terms of extra packets in the network, by multiplying ¥ by % '&amp; $( 0) © © . We define ! as,</p><formula xml:id="formula_2">" ! % '&amp; $( ) © © $# ¥ ¦¤ % '&amp; ¦</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Congestion Avoidance Technique 3:</head><p>Jain proposed a congestion avoidance technique based on Normalized Delay Gradient <ref type="bibr" target="#b9">[10]</ref>. Our implementation of this heuristic evaluates 7 qp 8 as follows, when acknowl- edgement for the ¡ -th monitored packet is received:</p><formula xml:id="formula_3">7 qp 8 G © © ¤ ¦ © © ¤ C ID R G © © ¤ sr © © ¤ C ID R G ¤ sr ¤ C ©D R G ¤ ¦ ¤ C ©D R</formula><p>If 7 tp 8 65 X , this congestion avoidance technique suggests that congestion window size should be decreased, otherwise it suggests that the window size be increased.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Loss Predictors</head><p>In this section, we describe how loss predictors are obtained using the CATs described above. In general, whenever a CAT suggests that congestion window be decreased, the corresponding loss predictor would predict that next packet loss will be due to congestion. The motivation behind our definition of the loss predictors is as follows. A good congestion avoidance technique should suggest that congestion window be increased only if congestion is not very likely to occur in the near future. Thus, if a loss occurs when the congestion avoidance technique is recommending increasing window size, it may be reasonable to assume that the loss is due to transmission errors (and vice versa).</p><p>Loss predictor Vegas: Loss predictor Vegas is obtained using congestion avoidance technique 1 described in section 2.2. Whenever acknowledgement for a monitored packet is received, the loss predictor calculates the quantity named 3 " ! , as defined in Section 2.2.</p><formula xml:id="formula_4">If V " ! u5 &amp; (resp. 3 " ! Ev &amp;</formula><p>), then the cause of the next loss will be assumed to be congestion (resp. transmission errors).</p><p>Loss predictor w §© A@ : Loss predictor w © A@ is obtained using congestion avoidance technique 2 described in Section 2.3. Whenever acknowledgement for a monitored packet is received, the loss predictor calculates the quantity named 37 £ ©8 , as defined in Section 2.3. If 37 £ 98 1 &amp; ! ih (resp. 37 £ ©8 6x &amp; ! ih ), then the cause of next packet loss will be assumed to be congestion (resp. transmission errors).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Loss predictor w</head><p>¥ @ : Loss predictor w ¥ @ is obtained using the congestion avoidance technique 3 described in Section 2.4. Whenever acknowledgement for a monitored packet is received, the loss predictor calculates the quantity named 37 qp 8 , as defined in Section 2.4. If V7 qp 8 y5 X (resp. 7 tp 8 $v X ), then the cause of next packet loss will be assumed to be congestion (resp. transmission errors).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Performance Metrics</head><p>To characterize the ability to distinguish congestion losses from wireless transmission error losses, we define four metrics for each loss predictor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Frequency of Congestion Loss Prediction ( '£ ):</head><p>'£ is obtained by dividing the number of times the loss predictor predicts that the next loss will be due to congestion, by the total number of times the predictor (i.e., value </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Simulations</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Simulation Model and Methodology</head><p>We use the network simulator ns-2 (version 2.1b1) <ref type="bibr" target="#b0">[1]</ref> from Berkeley. The system model used for simulations is illustrated in Figure <ref type="figure" target="#fig_2">2</ref>. We have a TCP connection from a source to a sink £ . We use the ¨) ! agent from ns-2 for this connection. This connection shares the link ¨D " $# &amp;% with a cross traffic issued by a © ' &amp; ¡ )( ! 10 32 4 § 5 <ref type="bibr" target="#b0">[1]</ref> agent from £ to sink ¤ . The © ' &amp; ¤ ¡ )( ! 10 2 1 § 5 agent from ns-2 <ref type="bibr" target="#b0">[1]</ref> is a constant-bit rate (CBR) source with idle time and busy time exponentially distributed with mean 0.1 s. UDP is the transport protocol used for this source.</p><p>All the links in Figure <ref type="figure" target="#fig_2">2</ref> are labeled with a (bandwidth, propagation delay) pair. Note that propagation delay does not include transmission time or queueing delays. The links 6% ¤" $# £ and £% ¦" $# ¤ are assumed to have a negligible propagation delay. In our simulations, this propagation delay is assumed to be 0. The link ¨% ¦ 7# 4 6 is a wireless link with transmission loss rate ' ¥ (i.e, fraction ' ¥ packets are lost due to transmission errors). All other links are error-free. We simulate the network with different values for bandwidth 8 @9 and delay A (please refer Figure <ref type="figure" target="#fig_2">2</ref>).</p><p>In different simulations, 8 @9 takes the values 100 Kbits/s, 500 Kbits/s, 1000 Kbits/s, 1500 Kbits/s and 2 Mbits/s, and A takes values 3 ms, 5 ms, 8 ms, 13 ms, 18 ms, 23 ms, 38 ms, 50 ms, and 75 ms.</p><p>Router ¨D has an output queue (towards 3% ) whose size is limited to B ( packets. B ( takes the values 5, 10, or 15 in our simulations. All other queues at the two routers are unbounded (infinite). Obviously, the potential bottleneck here is the link ¨D ¦ 7# £% .  We denote the congestion loss rate for the TCP connection as ' ¢ . ' ¢ is measured as a fraction (or percentage) of packets lost due to congestion. In our simulations, for each set of parameters (© FC , 8 @9 , B ( ), the rate of the constant-bit rate source RS (© ' &amp; ¤ ¡ G( ! 40 32 4 § 5 agent) is adjusted to produce a desired value of ' ¢ . Then, we make 10 additional TCP transfers, which last between 200 and 4000 seconds depending on 8 @9 , and collect statistics. Each transfer starts after a random warm-up period larger that 100 seconds.</p><p>For the measurements, we monitor one packet per window : we log its round trip time (© © ¤ ) and the number of packets ( ¦¤ ) sent between its transmission and its acknowledgement. The congestion window size is limited to 32 packets. From the logged information, we compute the values ! , 7 £ ©8 , and 7 tp 8 , as defined in section 2. Note that the three values are computed from the same set of data.</p><p>Using these values, the performance metrics ( £ , ' £ , ¡ H¢ and ¡ ¥ ) for the loss predictors can be determined. For the ten transfers, the standard deviation on the performance metrics for each loss predictor is less than 0.05. For each loss predictor, we perform 4 sets of experiments. In each set, one of the four parameters, namely, © IC (or A ), 8 @9 , B ( and ' ¢ , is varied, while the other three param- eters are held constant. ¦ Bandwidth 8 @9 from 100 Kbits/s to 2 Mbits/s. When 8 @9 is held constant for some plots presented in this paper, we hold it at 1.5 Mbits/s (T1 bandwidth).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Queue size limit B ( at router ¨D from 5 to 15 packets (packet size is 1000 bytes).</p><p>When B ( is held constant for some plots in this paper, we hold it at B ( ¡ because the trends are similar for the other values of B ( .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Simulation Results</head><p>Objective of our simulation experiments was two-fold:</p><p>(a) determine the magnitudes of frequencies ( '£ and ' £ ) and accuracies ( ¡ ¢ and ¡ ¦¥ ) achieved using the loss predictors, and (b) determine the variations in these metrics as a function of network parameters (such as 8 @9 and ' ¢ ).</p><p>The simulation results are summarized below. We present graphs showing only some of our simulation results. However, the conclusions reported here are drawn from a larger set of simulations <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">Loss Predictor Vegas</head><p>In this section, we summarize our observations for the loss predictor Vegas, and attempt to provide intuitive (or mathematical) explanations. First we discuss variation trends for '£ , and then the trends for ¡ £¢ and ¡ ¥ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Recall that if 3 ! 5 &amp;</head><p>, then the Vegas predictor predicts congestion losses. The probability that ! will be greater than 1 decreases if 3 " decreases. Thus, if " ! decreases, £ for the predictor will decrease. This relationship will be used in our explanations below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Variations in Frequency of Congestion Loss Prediction:</head><p>¦ '£ for Vegas predictor decreases when © FC is increased, while holding 8 9 , B ( , ' ¢ and ' ¥ constant. Re- fer Figure <ref type="figure" target="#fig_3">3</ref> for an illustration. In Figure <ref type="figure" target="#fig_3">3</ref>, the horizontal axis corresponds to © FC -the values listed in the parenthesis along the horizontal axis are held constant for all simulations reported in this figure . 

This observation is supported by a simple mathematical analysis. Note that © © ¤ can be expressed as © © ¤ © C Fr £¢ ¤ , where ¢ ¤ is a random variable de- pending on the transmission time, the queueing delay and the processing time for the monitored packet. Sim-  '£ decreases when 8 @9 is increased, keeping © EC , B ( , ' ¢ , and ' ¥ constant, as illustrated in Figure <ref type="figure" target="#fig_4">4</ref>.</p><formula xml:id="formula_5">ilarly, % '&amp; $( 0) © © can be expressed as % '&amp; $( ) © © © C r ¤¢ § © where ¢ § © is a random variable simi- lar to ¢ ¤ with ¢ § © v ¢ ¤ ( % '&amp; $( 0) © © is the smallest round trip time experienced by the connection.) Then, ! ¤ G &amp; ¦ £ ¦¥ ¨ § © £ ¦¥ § © ¡ R . Thus, ! ! #" £ ¦¥ ¦¤ $ © ¨ % C © ¡ ! £ ¥ § © ¡ " &amp; (' . Since ¢ ¤ x ¢ § I c , )! %0 1 2 3" £ ¦¥</formula><p>Similar to the above derivation, we provide a mathematical explanation for this observation. Let us express © © ¤ as © © ¤ % '&amp; $( 0) © © r 54 B 0¤ where 4 B ¤ is the extra queueing delay for the ¡ -th monitored packet, as compared to % '&amp; $( ) © © (assuming that the round trip time variation is due only to the queueing delays).  i.e., in this case, when 8 @9 increases. Therefore, when bandwidth 8 @9 is increased, queueing delay 4 B will decrease, and consequently 3 " ! will decrease (as )! 0 1 92 ) 3" 7 8 ¡ 5 X ). Finally, when ! decreases, the '£ for the Vegas predictor also decreases.</p><formula xml:id="formula_6">Thus, " ! ¦¤ q# G &amp; ¦ § © ¢ ¤£ ¤£ § I c "¢ ¤£ £ 6 § 7 8 ¡ R . Since )! %0 1 92 ) ¨ " 7 8 ¡ $ ¡ § © ¢ ¤£ ¤£ ! § I c "¢ ¤£ £ 6 § 7 8 ¡ " &amp; @'</formula><p>¦ '£ increases when B ( is increased, keeping 8 @9 , © C , ' ¢ and ' ¥ constant, as illustrated in Figure <ref type="figure">5</ref>.</p><p>As B ( increases, with the congestion loss rate ' ¢ held constant , the average queueing delay variations increase. We showed above that the value V ! in- creases with larger queueing delays variations. Therefore, 3 " ! increases with increasing B ( . Thus, '£ will increase with increasing B ( . ¡ is typically positive. Thus, if ¤ de- creases, then ! will also decrease. Now, note that, as ' ¢ increases, the average congestion window size, and thus ¦¤ , decreases. Therefore, with increasing ' ¢ , " will decrease, consequently, the '£ for the Vegas predictor will also decrease.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Accuracy of Congestion Loss Prediction ¡ £¢ : Accuracy</head><p>of congestion loss prediction ¡ ¢ for ¡ ) £¢ &amp; ( usually follows '£ 's trends. Typically, ¡ ¢ is higher than '£ . The difference between ¡ ¢ and '£ is significant with certain parameter values (for instance, small © C (1 ¥¤ ih ms), low congestion loss rate (1-2%) and small queue size (B ¡ packets). Thus, for congestion loss prediction, the Vegas predictor is capable of performing better than a random coin tossing predictor under certain circumstances (as discussed in Section 3, for the random predictor '£ ¡ £¢ ).</p><p>The absolute value of ¡ &amp;¢ varies a lot depending on the network parameters. Accuracy ¡ &amp;¢ in the range of 0.5 to 0.8 was observed in a large number of cases. As noted in the previous section, Vegas predictor (and, also the other loss predictors) determine their predictions based on the network's response to congestion window size change for the TCP connection. Typically, a single TCP connection constitutes a small fraction of the total network traffic. Thus, the observed network response also depends on other traffic, and not just on window size changes for a single TCP connection. Therefore, accuracy of congestion loss prediction tends to be poorer than one may expect. (This same reason causes other predictors to perform below expectation as well.)</p><p>Whenever sender mistakes a congestion loss as a transmission error loss, it would not take congestion control actions. Therefore, low ¡ ¢ may be detrimental to overall net- work performance. Thus, design of loss predictors that can consistently yield high ¡ £¢ is of interest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Accuracy of Wireless Loss Prediction ¡ ¥ : Wireless</head><p>transmission losses occur independently of the network conditions. Therefore, it is not reasonable to expect RTT and throughput estimates to yield any indication of an impending transmission loss. However, such estimates may provide an indication of an impending congestion loss. Therefore, in our loss predictors, a lack of an indication of congestion loss is used as an "indication" of a wireless loss.</p><p>Therefore, ¡ ¥ (and ' £ ) follow trends that are opposite of ¡ H¢ and '£ (that is, when ¡ ¤¢ increases, ¡ ¥ decreases).</p><p>The Vegas predictor does not perform very well at diagnosing wireless losses, when compared to a random coin tossing predictor. In general, ¡ ¥ 1 ' £ for the Vegas predictor, whereas ¡ ¥ ' £ for a random predictor.</p><p>It is important to emphasize that a good loss predictor needs to be able to diagnose both types of packet losses reasonably well. Ideally, we would like to have high ¡ £¢ and ¡ ¥ both. However, if a compromise is to be made, a high ¡ ¢ and moderate ¡ ¦¥ may be acceptable. Low or moder- ate ¡ ¦¥ may often result in erroneously identifying wireless losses as congestion losses. This would affect performance of the TCP connection using this loss predictor, but it cannot adversely affect performance of other network traffic (unlike a low ¡ ¤¢ ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.">Loss Predictor w © A@</head><p>This section presents the observations from simulation results obtained for the NTG predictor. Recall that, if 7 £ ©8 1 D % , then the NTG predictor predicts congestion. Therefore, as 7 £ 98 increases, £ decreases. This rela- tionship will be used in the explanations below.  </p><formula xml:id="formula_7">7 £ ©8 © C r 4 D ¤ ¦ ¤ C ©D % ¦¤ © C Ar 4 ¤ ¦ ¦¤ C ©D © C r 4 ¤ C ID i(</formula><p>Now note that, since we are using TCP-Reno in our simulations, most of the time the TCP connection is in congestion avoidance phase. Therefore, very of-</p><formula xml:id="formula_8">ten, ¤ ¦ ¦¤ C ©D &amp; packet. Assuming this, it can be shown that, if 4 ¤ C ID x 4 ¤ then 7 £ ©8 x D % , pro- vided &amp; 2 'G £ ¥ § 7 d £ ¥ § 7 ¡ ¢¡ £ ¥ § 7 d £ ¥ § 7 ¡ ¤£ d R x D % . The condition &amp; 2 9G £ ¦¥ § 7 d £ ¥ § 7 ¡ ¡ £ ¦¥ ¨ § 7 d £ ¥ § 7 ¡ ¤£ d R x D</formula><p>% means that the round-trip time for any monitored packet is less than twice the round trip time for the first packet. This is in general true, unless the propagation time is very small and the queueing delay variations very large. In conclusion, if 4 ¤ C ©D x 4 ¤ then NTG predictor will typically not pre- dict congestion.</p><p>As noted before, typically</p><formula xml:id="formula_9">¤ ¦ ¤ C ©D 5 X . It can be shown that, if 4 ¤ C ©D 1 4 #¤ , #0 ¦¥ ¨ § ¨© £ ¦¥ 5 X provided that G © C r 4 ¤D R % x G 4 #¤ C ©D ¦ 4 D R G 4 ¤ ¦ 4 ¤D R . This last condi-</formula><p>tion means that the variations in the delays should not exceed the absolute value of the first round trip time, which is in general true. Therefore, 7 £ ©8 typically increases with increasing propagation time © IC . Therefore, '£ decreases when © FC increases. ¦ '£ decreases when 8 @9 is increased, keeping © EC , B ( , ' ¢ , and ' ¥ constant, as illustrated in Figure <ref type="figure">8</ref>. Similar to the above derivation, we provide a mathematical explanation for this observation. We can ex-press © © ¤ as © © ¤ ¦ © © $¤ C ID r 4 8 where 4 8 is the difference in the queueing delay between the two monitored packets £ ¤ and £ ¤ fC ID . Note that 4 8 can be positive or negative. It can be shown that #0</p><formula xml:id="formula_10">¦¥ ¨ § ¨© 7 ¡ ¦ ¢ ¤£ ¤£ d ¡ ! ¡ C ¡ £ d #" ! ¢ ¤£ ¤£ ¡ § 7 ¢ )" &amp; .</formula><p>As, for TCP-Reno, typically ¤ 5 ¤ C ID , we have #0 ¦¥ ¨ § © 7 1 X . Thus, 7 £ 98 de- creases with increasing 4 8 . Therefore, '£ increases when 4 8 increases, and vice-versa. Now, 4 8 decreases when the bandwidth 8 @9 increases (because queueing delay magnitudes and variations decrease when service rate increases). Hence, '£ decreases when 8 @9 increases. ¦ '£ increases when B ( is increased, keeping 8 @9 , © EC and ' ¢ constant, as illustrated in Figure <ref type="figure" target="#fig_7">9</ref>.</p><p>For a constant loss rate, as B ( increases, the amount of random source's traffic in the queue ahead of a TCP packet can increase. Therefore, queueing delay variation for TCP packets is larger. We showed above that 7 £ ©8 decreases with increasing queueing delay varia- tions. Thus, '£ increases with increasing B ( . £ does not exhibit any trend when ' ¢ is increased, keeping 8 @9 , © C , ' ¥ , and B ( constant, as illustrated in Figure <ref type="figure" target="#fig_8">10</ref>.</p><p>As for the ¡ ) ¢ &amp; $( predictor, the trend of '£ for w © A@ predictor when congestion loss rate ' ¢ is varied is related to the average congestion window size. However, unlike Vegas predictor, in this case, the sign of #0 ¥ ¨ § ¨© ¡ depends on the sign of © © ¤ ¦ © © $¤ C ID . Now, © © ¤ and © © ¤ C ©D correspond to window size ¤ and ¦¤ fC ID , where typically ¤ 5 ¦¤ C ©D . When bandwidth 8 @9 is not small, the RTT is essentially in- dependent of the window size. Therefore, the sign of © © $¤ ¤¦ © © ¤ C ©D does not depend of the window size. This, in turn, implies that the 7 £ ©8 is independent of ¤ and loss rate ' ¢ , when 8 @9 is high. In general, for w © A@ , ¡ ¢ tends to be smaller and closer to '£ , as compared to the case of Vegas pre- dictor. Thus, w © A@ behaves more like a random coin toss- ing predictor -this implies that w © A@ is unable to cap- ture the indications of an impending congestion (if it exists) from the RTT or throughput statistics. Based on our simulations, it appears that w © A@ is a poor loss predictor.</p><p>Accuracy of Wireless Loss Prediction ¡ ¤¥ : ¡ ¦¥ trends for w © A@ are similar to those for the ¡ ) ¢ &amp; $( predictor, ex- cept that ¡ ¦¥ follows ' £ much more closely for w © A@ . This confirms that w © A@ performs similar to a random coin tossing predictor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.">Loss Predictor w ¥ @</head><p>Recall that if 7 tp 8 is positive then the NDG predic- tor predicts congestion. Also, in our simulations, the agent TCP-Reno uses the Jacobson congestion avoidance algorithms. Thus, often ¤ C ©D T1 ¦¤ and the sign of 7 tp 8 depends only on the sign of G © © ¤ ¦ © © ¤ C ©D R .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Variations in Frequency of Congestion Loss Prediction:</head><p>The simulation results indicate that '£ , ¡ £¢ , ' £ and ¡ ¥ for the NDG predictor do not show any trends (increas- ing or decreasing) as a function of the four parameters © IC , 8 @9 , B ( and ' ¢ . Now we attempt to provide intuitive expla- nation for this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Variation of '£ when © C is increased, while holding 8 @9 , B ( , ' ¢ and ' ¥ constant. Refer Figure <ref type="figure" target="#fig_0">11</ref>.</p><p>We can write © © ¤ as © © ¤ © C r ¢ ¤ where ¢ ¤ is a random variable. Therefore, the sign of When bandwidth 8 @9 is small, a larger window size typ- ically results in a greater round-trip time. However, at higher bandwidths the round-trip time tends to be independent of the window size. Therefore, with low bandwidth 8 @9 , it is more likely that an increase in conges- tion window size induces a larger round trip time. In this case 7 qp 8 5 X . In short, when 8 9 is low, w ¥ @ will predict congestion loss more often. Therefore, at low bandwidths, '£ decreases when 8 @9 increases. On the other hand, when 8 @9 is reasonably high, '£ becomes independent of 8 9 . In Figure <ref type="figure" target="#fig_2">12</ref>, '£ de- creases slightly initially, but is essentially constant for larger 8 @9 .</p><formula xml:id="formula_11">G © © ¤ ¦ © © ¤ C ID R is the sign of G ¢ "¤ ¦ ¢ ¤ C ©D R , independent of © C .</formula><p>¦ Variation of '£ when B ( is increased, while holding © C , 8 @9 , ' ¢ , and ' ¥ constant. Refer Figure <ref type="figure" target="#fig_3">13</ref>. Queue size B ( has an impact on the magnitude of queueing delays. Since 7 tp 8 depends on the sign of difference between queueing delays for different packets, but not on the magnitude of the difference, 7 tp 8 is independent of B ( .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¦</head><p>Variation of '£ when ' ¢ is increased, while holding © C , 8 @9 , ' ¥ , and B ( constant. Refer Figure <ref type="figure" target="#fig_4">14</ref>.</p><p>The congestion loss rate affects size of the TCP congestion window. Although 7 qp 8 depends on the dif- ference ¦¤ S¦ ¦¤ C ©D , it does not depend on the absolute values of the congestion window size. So, '£ is independent of the loss rate.</p><p>Accuracies ¡ ¢ and ¡ ¦¥ : ¡ ¢ curves usually tracks £ curves, and ¡ ¦¥ curves closely follows ' £ curves. ¡ ¢ and £ values for w ¥ @ is typically smaller than the Ve- gas loss predictor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Discussion and Conclusion</head><p>Simulation results indicate that, the loss predictors cannot always perform better than a random coin predictor. Under some network conditions, Vegas is able to perform better than a random predictor, when ¡ £¢ is considered. In general, our results suggest that Vegas is a better loss predictor than w ¥ @ and w © A@ . However, all three predictors do perform like a random predictor under some circumstances. It is useful to provide an intuitive explanation of this result. A predictor will accurately diagnose congestion losses only if the following qualitative conditions are fulfilled: (a) Congestion losses are preceded by a "long" queue build-up at some router, (b) A queue build-up typically results in congestion losses, and (c) The loss predictor correctly senses "serious" queue build-up. Condition (a) means that the interval of time between the instant when a router queue starts to build up and the instant when the queue overflows must be long enough. Otherwise, congestion losses will occur before the predictor has a chance to detect congestion. To fulfill condition (a), favorable values of network parameters are as follows: round-trip time small, router queue size large, and input bandwidth to the bottleneck small. Condition (b) above will tend to be satisfied if queue size is small. We can see that conditions (a) and (b) have contradictory requirements on the queue size.</p><p>As noted earlier, the three predictors are designed based on the congestion avoidance techniques. These congestion avoidance techniques are motivated by the expectation that a variation in the congestion window size will result in a "response" from the network which reflects the true state of the network. Unfortunately, the traffic of one connection is, in general, a small fraction of the overall traffic. Therefore, the network response is often independent of one TCP connection's action. This suggests that the three predictors cannot correctly detect queue build-up, and hence cannot diagnose congestion losses accurately. Incidentally, based on a very different type of experiment, Bolot <ref type="bibr" target="#b5">[6]</ref> has observed that congestion losses appear to be random. We believe that our experiments <ref type="bibr" target="#b2">[3]</ref> support Bolot's observation, and provide additional insight into packet losses due to congestion and wireless errors.</p><p>We must also note that the three congestion avoidance techniques were not designed as "loss predictors". These congestion avoidance techniques were designed to let the sender operate at the knee of the throughput-delay curve <ref type="bibr" target="#b9">[10]</ref>. While it is not a surprise that these predictors are unable to perfectly diagnose cause of packet losses, it is indeed a surprise that they often behave similar to a random coin tossing predictor. The three congestion avoidance techniques seem inadequate for the design of good loss predictors.</p><p>Based on the results obtained for Vegas, it appears that © © and throughput statistics hold some information that correlates to the cause of packet losses. However, it is not yet clear if there is sufficient correlation to develop loss predictors that can yield high ¡ ¢ and ¡ ¦¥ both. Future work on this topic would investigate design of better loss predictors. The loss predictors presented in this paper are sender-based in that the TCP sender attempts to distinguish between the type of packet losses. At present, we are studying a receiverbased technique <ref type="bibr" target="#b4">[5]</ref>. This technique, implemented at the receiver, uses statistics on the inter-arrival times of the packets. Preliminary results show that this technique may be useful if the last link on the TCP path is wireless, and is the bottleneck.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Throughput and RTT versus network load [10]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. ¥( network topologyLet © DC denote the round-trip propagation delay for the TCP connection (i.e., from CS to CK and back to CS). Then, with the values of A used in our simulations, © EC varies in the range 12 ms to 300 ms.We denote the congestion loss rate for the TCP connec-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. FCP, ¡ &amp;¢ and ¡ ¥ versus © FC</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. FCP, ¡ ¢ and ¡ ¥ versus 8 @9</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .Figure 6 .</head><label>56</label><figDesc>Figure 5. FCP, ¡ &amp;¢ and ¡ ¥ versus B (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. FCP, ¡ ¢ and ¡ ¦¥ versus © C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 .</head><label>9</label><figDesc>Figure 9. FCP, ¡ &amp;¢ and ¡ ¥ versus B (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 .</head><label>10</label><figDesc>Figure 10. FCP, ¡ ¢ and ¡ ¦¥ versus ' ¢ Accuracy of Congestion Loss Prediction ¡ £¢ Accuracy of congestion loss prediction ¡ £¢ follows closely '£ in most cases.In general, for w © A@ , ¡ ¢ tends to be smaller and closer to '£ , as compared to the case of Vegas pre- dictor. Thus, w © A@ behaves more like a random coin toss- ing predictor -this implies that w © A@ is unable to cap-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>is obtained by dividing the number of times the loss predictor predicts that the next loss will be due to wireless transmission error, by the total number of times the predictor (i.e., value V ! , 7 £ ©8 or 37 qp 8 ) is evaluated during the TCP connection. It follows that</figDesc><table><row><cell>' £</cell><cell>&amp; ¦ '£ .</cell></row></table><note><p><p>3 ! , 7 £ ©8 or 7 tp 8 ) is evaluated dur- ing the TCP connection. ¦ Frequency of Wireless Loss Prediction ( ' £ ): ' £ ¦ Accuracy of Congestion Loss Prediction ¡ £¢ : ¡ ¤¢ is the fraction of packet losses due to congestion that are correctly diagnosed. A congestion loss is correctly diagnosed if the latest prediction before this loss was a congestion loss. ¦ Accuracy of Wireless Loss Prediction ¡ ¤¥ : ¡ ¦¥ is the fraction of packet losses due to wireless transmission error losses that are correctly diagnosed.</p>Now, consider a "random coin tossing" loss predictor that uses probabilistic coin tossing to determine whether to predict congestion loss or wireless loss. Suppose that it predicts that next packet loss will be congestion loss with probability § . Clearly, in this case, '£ ¨ § and £ &amp; ¦ © § . Also, as the prediction made by the predictor is in- dependent of network conditions, in this case, ¡ ¢ § and ¡ ¥ &amp; ¦ § . Thus, a simple coin tossing scheme can yield ¡ ¢ '£ § and ¡ ¦¥ ' £ &amp; ¦ § for any desired value of § . Choosing high § will result in high ¡ ¢ , but low ¡ ¥ , and vice versa.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Thus, each set of experiments helps us to determine the variations in '£ , ¡ &amp;¢ , ' £ , and ¡ ¥ Round-trip propagation time © EC in the range 10 ms to 300 ms. Note that © C does not include the queueing and transmission delays.When © C is held constant for some plots, we hold it constant at 32 ms because it represents a typical value of round trip propagation time on WANs.</figDesc><table><row><cell></cell><cell>and 5%. The results are similar for these values, there-&amp; P fore, we only present the results for ' ¥ .</cell></row><row><cell>¦</cell><cell>Congestion loss rate (' ¢ ) from 1% to 10% (congestion</cell></row><row><cell></cell><cell>loss rate specifies the fraction of packets lost by the TCP connection at router ¨D ) When ' ¢ is held constant for some plots presented</cell></row><row><cell></cell><cell>in this paper, we hold it constant at 3%, because the</cell></row><row><cell></cell><cell>trends observed are representative of what we observed for other ' ¢ values.</cell></row><row><cell></cell><cell>, 3%</cell></row></table><note><p>as a function of each of the four parameters. The following values for the parameters are used: ¦ Extensive simulations were done with ' ¥ &amp; P ¦</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>is usu- ally negative. This means that the value of " decreases when © C is increased. Therefore, as © C in- creases, '£ for Vegas predictor should decrease.</figDesc><table><row><cell>1</cell><cell></cell><cell></cell><cell></cell><cell>FCP(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ac(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>FWP(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Aw(Vegas)</cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>50</cell><cell>100</cell><cell>150</cell><cell>200</cell><cell>250</cell><cell>300</cell></row><row><cell cols="5">Tp(ms) (rc=3% rw=1% bw=1500 Kbits/s qs=5 pkts)</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>5 X , the value ! increases with increasing queueing delay 4 B ¤ .</figDesc><table><row><cell>1</cell><cell></cell><cell></cell><cell>FCP(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Ac(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>FWP(Vegas)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Aw(Vegas)</cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>100Kb/s</cell><cell>500Kb/s</cell><cell>1Mb/s</cell><cell>1.5Mb/s</cell><cell>2Mb/s</cell></row><row><cell></cell><cell>bw</cell><cell cols="2">(rc=3% rw=1% Tp=32 ms qs=5 pkts)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>From queueing theory, it follows that, queueing de-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>lay variations decrease when the service rate increases,</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Variations in Frequency of Congestion Loss Prediction:</head><label></label><figDesc>To support this observation, we show that 7 £ ©8 is in- creasing with increasing © C . We can write © © ¤ C ©D © C qr 4 ¤ C ID and © © ¤ © C r 4 #¤ where 4 #¤ C ©D and 4 #¤ are positive random variables depending on the transmission time, the queueing delays and the processing time</figDesc><table><row><cell>1</cell><cell></cell><cell></cell><cell>FCP(NTG)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Ac(NTG)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>FWP(NTG)</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Aw(NTG)</cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>100Kb/s</cell><cell>500Kb/s</cell><cell>1Mb/s</cell><cell>1.5Mb/s</cell><cell>2Mb/s</cell></row><row><cell></cell><cell>bw</cell><cell cols="2">(rc=3% rw=1% Tp=32 ms qs=5 pkts)</cell><cell></cell></row><row><cell cols="5">Figure 8. FCP, ¡ ¢ and ¡ ¦¥ versus 8 @9</cell></row></table><note><p><p><p><p><p>¦</p>'£ decreases when © C is increased, while holding 8 @9 , B ( , ' ¢ , and ' ¥ constant. Refer Figure</p>7</p>.</p>for ¡ -th and ¡ r &amp; -th monitored packets. We can then rewrite 7 £ ©8 as :</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>Thus, £ does not depend on © FC . Variation of £ when 8 @9 is increased, while holding © C , B ( , ' ¢ and ' ¥ constant. Refer Figure12.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>FCP(NDG)</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Ac(NDG)</cell></row><row><cell>1</cell><cell></cell><cell></cell><cell>FCP(NDG) FWP(NDG) Ac(NDG)</cell><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>FWP(NDG) Aw(NDG)</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Aw(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell>2</cell><cell>3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>10</cell></row><row><cell cols="5">0 Figure 11. FCP, ¡ ¢ and ¡ ¦¥ versus © C 50 100 150 200 250 300 Tp(ms) (rc=3% rw=1% bw=1500 Kbits/s qs=5 pkts)</cell><cell cols="6">rc(%) (bw=1500 Kbits/s Tp=32 ms qs=5 pkts) Figure 14. FCP, ¡ ¢ and ¡ ¦¥ versus ' ¢</cell></row><row><cell>1</cell><cell></cell><cell></cell><cell>FCP(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Ac(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>FWP(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Aw(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>100Kb/s</cell><cell>500Kb/s</cell><cell>1Mb/s</cell><cell>1.5Mb/s</cell><cell>2Mb/s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>bw</cell><cell cols="2">(rc=3% rw=1% Tp=32 ms qs=5 pkts)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Figure 12. FCP, ¡ &amp;¢ and ¡ ¥ versus 8 @9</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>1</cell><cell></cell><cell></cell><cell>FCP(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Ac(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>FWP(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Aw(NDG)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>5</cell><cell></cell><cell>10</cell><cell></cell><cell>15</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="3">qs(pkts) (bw=1500 Kbits/s Tp=32 ms rc=3% rw=1%)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>Figure 13. FCP, ¡ ¢ and ¡ ¦¥ versus B ( ¦</p></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://www-mash.cs.berkeley.edu/ns/" />
		<title level="m">VINT project U.C. berkeley/LBNL, ns2:network simulator</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A comparison of mechanisms for improving TCP performance over wireless links</title>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Padmanabhan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Seshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM&apos;96</title>
		<imprint>
			<date type="published" when="1996-08">Aug. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Using end-to-end statistics to distinguish congestion and corruption losses : A negative result</title>
		<author>
			<persName><forename type="first">S</forename><surname>Biaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vaidya</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997-08">Aug. 1997</date>
		</imprint>
		<respStmt>
			<orgName>CS Dept., Texas A&amp;M University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>draft version</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Sender-based heuristics for distinguishing congestion losses from wireless transmission losses</title>
		<author>
			<persName><forename type="first">S</forename><surname>Biaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Vaidya</surname></persName>
		</author>
		<idno>TR98-013</idno>
		<imprint>
			<date type="published" when="1998-06">June 1998</date>
		</imprint>
		<respStmt>
			<orgName>CS Dept., Texas A&amp;M University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Discriminating congestion losses from wireless losses using inter-arrival times at the receiver</title>
		<author>
			<persName><forename type="first">S</forename><surname>Biaz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Vaidya</surname></persName>
		</author>
		<idno>98-014</idno>
		<imprint>
			<date type="published" when="1998-06">June 1998. August 1998</date>
		</imprint>
		<respStmt>
			<orgName>CS Dept., Texas A&amp;M University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Characterizing end-to-end packet delay and loss in the internet</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bolot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of High-Speed Networks</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="289" to="298" />
			<date type="published" when="1993-09">Sept. 1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">TCP-vegas : New techniques for congestion detection and avoidance</title>
		<author>
			<persName><forename type="first">L</forename><surname>Brakmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>O'malley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIG-COMM&apos;94</title>
		<imprint>
			<date type="published" when="1994-10">Oct. 1994</date>
			<biblScope unit="page" from="24" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improving the performance of reliable transport protocols in mobile computing environments</title>
		<author>
			<persName><forename type="first">R</forename><surname>Caceres</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Iftode</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE JSAC Special issue on Mobile Computing Networks</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="1995-06">June 1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Congestion avoidance and control</title>
		<author>
			<persName><forename type="first">V</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM&apos;88</title>
		<imprint>
			<date type="published" when="1988-08">Aug. 1988</date>
			<biblScope unit="page" from="314" to="329" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A delay-based approach for congestion avoidance in interconnected heterogeneous computer networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM CCR</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="56" to="71" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Improving performance of TCP over wireless networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mehta</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998-08">Aug. 1998</date>
		</imprint>
		<respStmt>
			<orgName>Texas A&amp;M University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Transmission control protocol</title>
		<author>
			<persName><forename type="first">J</forename><surname>Postel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">RFC</title>
		<imprint>
			<biblScope unit="volume">793</biblScope>
			<date type="published" when="1988-09">Sept. 1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">A new congestion control scheme : Slow start and search (tri-s)</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Crowcroft</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-01">Jan. 1991</date>
			<publisher>ACM CCR</publisher>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="32" to="43" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
