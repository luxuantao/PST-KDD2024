<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SoK: The Evolution of Sybil Defense via Social Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Lorenzo</forename><surname>Alvisi</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Allen</forename><surname>Clement</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Mpi-Sws</forename><surname>Alessandro</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Epasto</forename><surname>Sapienza</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Silvio</forename><surname>Lattanzi</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Google</forename><surname>Inc</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Panconesi</forename><surname>Alessandro</surname></persName>
						</author>
						<author>
							<persName><forename type="first">U</forename><surname>Sapienza</surname></persName>
						</author>
						<author>
							<persName><surname>Of Rome</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">UT</orgName>
								<address>
									<settlement>Austin</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">U of Rome</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">SoK: The Evolution of Sybil Defense via Social Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D06C4F6B8A6F2F285155C61A53C9AD16</idno>
					<idno type="DOI">10.1109/SP.2013.33</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T14:11+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Sybil attacks in which an adversary forges a potentially unbounded number of identities are a danger to distributed systems and online social networks. The goal of sybil defense is to accurately identify sybil identities.</p><p>This paper surveys the evolution of sybil defense protocols that leverage the structural properties of the social graph underlying a distributed system to identify sybil identities. We make two main contributions. First, we clarify the deep connection between sybil defense and the theory of random walks. This leads us to identify a community detection algorithm that, for the first time, offers provable guarantees in the context of sybil defense. Second, we advocate a new goal for sybil defense that addresses the more limited, but practically useful, goal of securely white-listing a local region of the graph.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>The possibility that malicious users may forge an unbounded number of sybil identities, indistinguishable from honest ones, is a fundamental threat to distributed systems that rely on voting <ref type="bibr" target="#b10">[11]</ref>. This threat is particularly acute in decentralized systems, where it may be impractical or impossible to rely on a single authority to certify which users are legitimate <ref type="bibr" target="#b19">[20]</ref>. The goal of sybil defense is to accurately identify sybil identities <ref type="foot" target="#foot_0">1</ref> -"ideally, the system should accept all legitimate identities but no counterfeit entities" <ref type="bibr" target="#b10">[11]</ref>but simple techniques can be either too brittle (beating a CAPTCHA <ref type="bibr" target="#b39">[40]</ref> costs a fraction of a cent) or too blunt (IP filtering penalizes all users behind a NAT).</p><p>Against this background, Yu et al. have put forward a radically different approach <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref>: protecting a distributed system by leveraging the social network that connects its users. Intuitively, as long as sybil identities are unable to create too many attack edges connecting them to honest identities, it may be possible to separate the wheat from the chaff by analyzing the topological structure of the users' social graph. This style of sybil defense <ref type="foot" target="#foot_1">2</ref> promises not only to be more surgical, but offers a mathematically precise and elegant way to characterize the robustness of a sybil defense technique in terms of the number of attack edges it can handle. The vision is to offer universal sybil defense to all honest nodes in the system: as long as the social graph conforms to certain assumptions, an honest node will correctly classify almost all honest nodes in the graph while rejecting all but a bounded number of sybil nodes <ref type="bibr" target="#b44">[45]</ref>.</p><p>Several protocols that embrace this style of sybil defense have since been proposed <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b34">[35]</ref>, <ref type="bibr" target="#b41">[42]</ref>, <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref> and higher-level distributed applications that rely on them are beginning to emerge <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b35">[36]</ref>.</p><p>∼ * ∼ The first goal of this paper is to examine the promise and the fundamental limits of universal sybil defense. We will see that at the core of this approach are a set of assumptions about the structure of a social graph under sybil attacks that, in essence, amount to modeling the social graph as consisting of two sparsely connected regions: one comprised of sybil nodes; and the other of honest nodes, homogeneously connected with one another. We will report on several studies, confirmed by our own experiments, that suggest that this model over-simplifies the social structure of the honest region of the graph: rather than homogeneous, this region appears as a collection of tightly-knit local communities relatively loosely coupled with one another.</p><p>Our second goal for this paper is then to advocate a realignment of the focus of sybil defense to leverage effectively the robustness of communities to sybil infiltration. The intuition that motivates us is not new. Prior work has suggested casting sybil defense as a community detection problem <ref type="bibr" target="#b38">[39]</ref> and asked whether it is possible to use off-theshelf community detection algorithms to find sybils. On this front, we make two contributions. First, we show that this approach requires extreme caution, as the choice of the community detection protocol can dramatically affect whether sybil nodes are accepted as honest. Second, we identify the mathematical foundations on which the connection between sybil defense and community detection rests: we identify a well-founded theory and point to an established literature to guide the development of future sybil defense protocols.</p><p>Our conclusion is that instead of aiming for universal coverage, sybil defense should settle for a more limited goal: offering honest nodes the ability to white-list a set of nodes of any given size, ranked accordingly to their trustworthiness. We believe that this is a good bargain, and not just because it results in a goal that, unlike its alternative, is attainable, but because <ref type="bibr" target="#b0">(1)</ref> the guarantees it provides are in practice what nodes that engage in crowd-sourcing <ref type="bibr" target="#b46">[47]</ref> or cooperative P2P applications <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b24">[25]</ref> need, and (2) the computational cost of providing these guarantees depends only on the size of the desired white-listed set rather than, as in techniques that aim for universal sybil defense, on the total number of identities in the network.</p><p>The final goal of this paper is to serve as a warning against the danger of falling into a Maginot syndrome: the building of an ever more sophisticated line of defense against attacks that the enemy can easily circumvent. Indeed, evidence from the RenRen social network <ref type="bibr" target="#b42">[43]</ref> shows sybil attacks that differ from what current sybil defenses anticipate and that, despite their simplicity, can be devastating. We argue that the key to address this challenge is defense in depth, where early defense layers (of which we sketch a few) are designed to catch the simple sybil subgraphs that current defenses are ill-equipped to detect.</p><p>Finally, a friendly warning. Achieving the goals we have outlined requires a good mathematical understanding of the problem and of the techniques developed to address it. At times the discussion will be technical; we hope that the persevering reader will be rewarded. Bear with us.</p><p>∼ * ∼ The paper proceeds as follows. Section 2 examines four fundamental structural properties of social graphs (popularity, small world property, clustering coefficient, and conductance) and asks: which can better serve as a foundation for sybil defense? The answer, we find, is conductance, a property intimately related to the concept of mixing time of a random walk. We then proceed in Section 3 to discuss protocols that exploit variations in conductance as a basis for decentralized universal sybil defense <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b34">[35]</ref>, <ref type="bibr" target="#b41">[42]</ref>, <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref>. These protocols provide elegant worst-case guarantees when it comes to their vulnerability to sybil attacks; however, these guarantees are critically sensitive to a set of assumptions that do not appear to hold in actual social networks <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b22">[23]</ref>. This motivates us to explore, beginning with Section 4, an alternative goal for sybil defense that leverages two observations: (1) social graphs have an internal structure organized around tightlyknit communities and (2) the graph properties crucial for sybil defense are significantly more likely to hold within a community rather than in the entire social graph. Section 5 reviews recent work on the theory of random walks that provides a solid theoretical foundation to sybil defense based on community detection; we deepen our investigation of random walks in Section 6, where we show how the well-known concept of Personalized PageRank (not to be confused with PageRank itself) offers honest nodes a path towards a realistic target for sybil defense that is more limited than universal coverage but nonetheless useful: a way to white-list trustworthy nodes that proves efficient and robust in both theory and practice. After all this effort, Section 7 greets us with a sobering result: in spite of their sophistication, state of the art sybil defense protocols are helpless against very crude real-life sybil attacks. However, we show that sybil defense protocols based on random walks continue to be effective when used in combination with very simple checks that leverage structural properties of the social graph other than conductance. Section 8 offers our conclusions and points to directions for possible future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. SYBIL DEFENSE VIA SOCIAL NETWORKS</head><p>Sybil defense via social networks is predicated on the assumption that it is possible to leverage the structural properties of the social graph G underlying a distributed system to differentiate the honest subgraph H from the sybil subgraph S. In this section, we ask a basic question: which structural property, if any, is most promising towards defending against sybil attacks?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Structural properties of social graphs</head><p>We consider (and briefly review below) four well-known structural properties that are commonly viewed as characterizing social graphs: the popularity distribution among its nodes <ref type="bibr" target="#b4">[5]</ref>, the small world property <ref type="bibr" target="#b40">[41]</ref>, the value of its clustering coefficient <ref type="bibr" target="#b40">[41]</ref> and its conductance <ref type="bibr" target="#b16">[17]</ref>.</p><p>Popularity: The node degree distribution of social graphs is heavy-tailed, as in a power-law or lognormal distribution.</p><p>Small world property: The diameter of a social graphi.e., the longest distance between any two nodes in the graph-is small.</p><p>Clustering coefficient: A measure of how closely-knit is a social network. When we associate a network vertex v with the user u that it represents, the vertex' clustering coefficient c v is the ratio between the actual number of friendships between the friends of u and the maximum possible number of friendships between them. Formally, let f v denote the actual number of edges between neighbors of v, i.e. Conductance: Social graphs are conjectured to be fastmixing, meaning that if we take a random walk in a social graph we will quickly arrive at a random point. This property is at the core of many solutions developed for sybil defense. A graph's mixing time <ref type="bibr" target="#b29">[30]</ref>, which informally conveys the minimum length of a random walk that ends on a uniformly random edge, is intimately related to the concept of conductance: when conductance is high, mixing time is low. Intuitively, the conductance of a set S of vertices, denoted by ϕ(S), in a given network is the ratio between the number of edges going out from S and the number of edges inside S. More precisely, given a set of vertices S, the conductance of the set is defined as </p><formula xml:id="formula_0">f v := |{xy : x ∈ N v , y ∈ N v ,</formula><formula xml:id="formula_1">ϕ(S) := |cut(S)| vol(S)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Which property is most resilient?</head><p>Consider a social network G in which every node is honest, and assume a sybil defense that uses a structural property of the social graph to correctly classify every node. An attack that somehow turns some of the nodes in G into sybils, without otherwise affecting the social network, will be undetectable, since it will change nothing tangible. We could term this a perfect attack. Similarly, if an adversary can add sybil identities to G without altering G's structural properties, then any sybil defense that tries to leverage those properties will be circumvented.</p><p>We can however compare the four structural properties above in terms of the effort they require of an adversary bent on evading detection: in particular, we measure the number of attack edges that the adversary needs to create to be undetectable.</p><p>To this end, we assume that a graph H with n honest nodes is given and that the attack induces a graph S of sybil nodes. While H is fixed, the adversary has full control over S and can build it so that its structural properties are indistinguishable from those of H-for simplicity, we assume that S is an exact copy of H.</p><p>The adversary tries to set up m := |E(H)| potential attack edges that connect H with S. We assume that the endpoints of these edges in both H and S are chosen by preferential attachment, i.e. a vertex v is chosen with probability</p><formula xml:id="formula_2">deg(v) 2m<label>(1)</label></formula><p>As we will see, preferential attachment is crucial to not alter properties of the social network and in particular its degree distribution.</p><p>If the attacker is able to create arbitrarily many attack edges, no sybil defense can hope to distinguish between the two regions of the graph. Therefore, as customary in the sybil defense literature <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref>, we assume that the attacker's ability to create attack edges is limited; in particular, we postulate that tentative attack edges are accepted with probability p and rejected with probability 1p, resulting in a set A of attack edges. To account for the outcome of recent social engineering experiments <ref type="bibr" target="#b5">[6]</ref>, we allow p to be constant: the expected cardinality of A is then pm. We denote with G the graph that results from joining S to H via A.</p><p>Under this simple attack model, how resilient are then the four defining structural properties of social graphs?</p><p>1) Popularity: We find that it is trivial for the adversary to make sure that G's popularity distribution is statistically indistinguishable from that of H. We prove <ref type="bibr" target="#b1">[2]</ref> that a) the expected degree of an honest node in G is barely higher than in H and b) moving to G will, in essence, at most double the degree of a popular honest node.</p><formula xml:id="formula_3">Proposition 1. (a) For each v ∈ H, E[deg G (v)] = deg H (v) 1 + p 2 . (b) If deg H (v) &gt; 6 log n, then deg H (v) ≤ deg G (v) ≤ deg H (v) (2 + p) with probability 1 -o(1).</formula><p>Figure <ref type="figure" target="#fig_1">1</ref> plots of the degree distribution of the Facebook network before and after two attacks in which attack edges are inserted respectively with probability p = 0.01 and p = 0.1: the curves before and after the attacks have the same shape. Indeed, an attack that introduced no attack edges would produce the same curve! We conclude that popularity is ill-suited as a foundation for sybil defense. 2) Small world property: The small world property does not fare much better than popularity, since the adversary can easily keep the diameter of G from growing suspiciously. First, it is easy for the adversary to bound the relative growth of the diameter of G with respect to that of H: if S = H and the adversary succeeds in inserting just one attack edge the diameter can at most double. The following proposition immediately follows <ref type="bibr" target="#b1">[2]</ref>:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 2. A sybil attack can at most double the diameter of H.</head><p>Second, it is easy for the adversary, who has full control over S, to effect any change to the diameter slowly, so that it appears completely physiological. Our experimental evaluation of several real life social networks shows (90% diameter column of Table <ref type="table">I</ref>) that the 90%-effective diameter <ref type="bibr" target="#b15">[16]</ref>, which measures the maximum distance between 90% of the pair of nodes, is indeed barely affected under attack.</p><p>3) Clustering coefficient: Leveraging the clustering coefficient appears promising because attack edges reduce its value. Unfortunately, while the clustering coefficient of social networks is typically high, its value varies significantly from network to network <ref type="bibr" target="#b16">[17]</ref>, from 0.79 in the actor collaboration network of IMDB, down to 0.35 for Live Journal and to a mere 0.09 for the social network of Yahoo! Messenger chat exchanges. Thus, if an attack modifies the clustering coefficient by a small multiplicative factor, the change is hard to detect, especially if made very gradually.</p><p>We capture that intuition in the following result <ref type="bibr" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 1. Let H be the graph of honest nodes and let</head><p>G be the network under the sybil attack described in II-B. Also, let α := 8(1 + 1 2 p) 2 , where p is the probability that an attack edge is accepted. Then, c(G) ≥ α -1 c(H) with high probability The implications of this theorem are disappointingly clear: the clustering coefficient is not a good basis for sybil defense, since even after the attack its value cannot drop by too much. In fact, if the number of attack edges is smaller than pm, with high probability there will be only a constant change in the clustering coefficient. The Clustering Coeff column of Table <ref type="table">I</ref> confirms the theorem's predictions.</p><p>4) Conductance: Yu et al. <ref type="bibr" target="#b44">[45]</ref> prove that for graphs whose conductance is asymptotically constant, an adversary that can introduce O(n) attack edges can build a graph G whose conductance is indistinguishable from that of H. We generalize that result to graphs of arbitrary conductance as follows <ref type="bibr" target="#b1">[2]</ref>.</p><p>Theorem 2. Let H denote a network of n honest nodes and m edges such that ϕ(H)m = Ω(log n), and let S denote a network of n sybil nodes with m edges such that ϕ(S) ≥ ϕ(H) and ϕ(H)m ≤ m ≤ m. Suppose further that the adversary is able to establish between ϕ(H)m log ϕ(H) -1 and m attack edges. Then, with high probability, ϕ(G) = Ω(ϕ(H)).</p><p>The fundamental implication of the theorem is that if the adversary is able to introduce at least ϕ(H)m log 1 ϕ(H) attack edges (i.e., O(m) attack edges when the mixing time is O(log n)), then the conductance of the graph will with high probability remain very nearly the same.</p><p>Table <ref type="table">I</ref> confirms the theorem's message that an adversary that succeeds in generating sufficiently many attack edges can circumvent any technique that attempts to detect sybil nodes by looking for significant changes in global conductance. As expected, the conductance drops significantly under a weak attack (p = 0.01), providing leverage for sybil detection. However, under a strong attack (p = 0.1) the conductance may actually increase because, by adding random attack edges, the adversary enlarges every cut with some probability, including the cut with minimum conductance which defines the conductance of the entire network.</p><p>Note that computing a graph's conductance is NP-hard. The conductance values that we report are approximate and were obtained using the the approximation method proposed by Leskovec et al. <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Discussion</head><p>None of the structural properties of social graphs that we have considered provides full-proof defense against sybil attacks in general, or even against the specific attack we have assumed. However, as Table <ref type="table">II</ref> shows, when a graph under attack is observed through the lens of conductance, the adversary has to work much harder to look inconspicuous. These results both motivate and justify the insight of Yu and his collaborators to rely on conductance in the work that jump-started sybil defense via social networks <ref type="bibr" target="#b45">[46]</ref>. We Property Number of edges to circumvent it Degree distribution review their approach, its successes, and what we believe to be ultimately its fundamental limitations in the next section.</p><formula xml:id="formula_4">|A| ≥ 0 Diameter |A| ≥ 1 Clustering coefficient 0 ≤ |A| ≤ m Conductance ϕ(G)m log ϕ(G) -1 ≤ |A| ≤ m Table II THE</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. LEVERAGING CONDUCTANCE TOWARDS UNIVERSAL SYBIL DEFENSE</head><p>The vision behind the seminal work of Yu and his collaborators is to develop a decentralized approach to universal sybil defense, with the goal of allowing honest users to correctly assess with high probability the honesty of every other user in the system. False positive and false negatives would still be possible, but they would be few and, further, their number would be bound within a rigorous theoretical framework. This compelling vision, first articulated in the SybilGuard protocol <ref type="bibr" target="#b45">[46]</ref>, is further refined in their later work on SybilLimit <ref type="bibr" target="#b44">[45]</ref> and has inspired several other efforts in sybil defense <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b34">[35]</ref>, <ref type="bibr" target="#b41">[42]</ref>.</p><p>We begin this section by discussing the main intuition underlying these techniques and the guarantees that they provide; we then proceed to discuss the crucial role that a set of key assumptions play in ensuring those guarantees and present evidence suggesting that the assumptions do not appear to hold in actual social graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Picking whom to trust</head><p>In all these protocols, an honest node determines which nodes to trust on the basis of a sample of the social graph collected by using random walks. Different protocols apply sampling in different ways and to different parts of the graph. SybilLimit <ref type="bibr" target="#b45">[46]</ref> samples edges; SybilGuard <ref type="bibr" target="#b44">[45]</ref> and Gatekeeper <ref type="bibr" target="#b34">[35]</ref> sample nodes in the graph; SybilInfer <ref type="bibr" target="#b9">[10]</ref> uses the random walks to build a Bayesian model for the likelihood that a trace T was initiated by an honest node. In the following, we provide an overview of how SybilLimit <ref type="bibr" target="#b45">[46]</ref> applies the random sampling of edges to identify honest users. While the details of the discussion are specific to SybilLimit, the intuition for how the structural properties of the graph make random sampling effective is common to this entire family of protocols.</p><p>Let us consider a particularly simple version of the sybil detection problem. We are given two disjoint graphs H and S-the graph of honest and, respectively, sybil nodes; an honest vertex u-the seed; and a vertex v. Our task is to determine whether v belongs to H or to S. Both nodes select an edge at random: u accepts v if they pick the same edge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The probability of collision is very low, 1</head><p>m . To boost it we can use the classic birthday paradox. Vertex u picks a set S u of, say, √ m distinct edges, while v picks a set S v of √ m edges independently at random: now u accepts v if there is a collision (i.e. S u ∩ S v = ∅). This probability is</p><formula xml:id="formula_5">1 -Pr(no collision) = 1 -1 - 1 √ m √ m ∼ 1 - 1 e<label>(2)</label></formula><p>a good probability of success. Note now that the set S u can itself be picked at random. Since</p><formula xml:id="formula_6">|S u | = √ m m</formula><p>, almost all edges will be distinct. This simple protocol succeeds with good probability: each vertex picks a set of √ m edges independently and uniformly at random. If the two sets intersect, then u accepts v, otherwise it does not. The protocol is symmetric and can be used by both u and v to determine whether to trust one another. This basic idea can be further refined to obtain a test that succeeds with overwhelming probability with small-sized edge sets.</p><p>Suppose now we have two disjoint graphs and two vertices: we want to determine whether or not they belong to the same graph. If vertices are restricted to pick the edge set from their own graph, the simple protocol above provides the membership test we are looking for: if the two vertices live in different graphs the chance that they trust each other is zero, otherwise it is given by Equation <ref type="bibr" target="#b1">(2)</ref>.</p><p>But how can we implement the test in a distributed fashion? A simple approach is to take a random walk in the graph-which, in the interest of efficiency, should be very short-and pick the last edge of the walk. This is a correct implementation of the test as long as the short random walk picks edges at random (i.e., every edge is equally likely to be selected). It is here that the graph's mixing time enters the picture: it is the minimum length of a random walk that selects edges in an unbiased way. 3 Networks for which random walks of length O(log n) are sufficient (i.e., have mixing time O(log n)) are said to be fast mixing.</p><p>Therefore, if we assume that the graph of honest nodes is fast mixing, we have a very good protocol for sybil detection, as long as H and S are disjoint. In reality, however, H and S are connected through the attack edges that nodes in S have convinced nodes in H to accept: it is then possible that a random walk starting from v ∈ S will traverse an attack edge, enter H, and pick one of the edges selected by u ∈ H. The intuition is that, as long as the cut between H and S is sparse, such situations are sufficiently unlikely that the mechanism continues to function with good probability. Indeed, as we already mentioned, Yu et al. prove <ref type="bibr" target="#b45">[46]</ref> that as long as the number of attack edges is bound by o( n log n ), then this approach can effectively distinguish between honest and sybil nodes. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Cracks in the foundations</head><p>There are then two fundamental assumptions that underly this elegant approach towards decentralized universal sybil defense. The first is that the cut between the sybil and honest region-the set of attack edges-is suitably sparse. The second is that the mixing time of the honest region is O(log(n)). The combination of these two assumptions ensures that random walks of Θ(log n) steps will end in a random edge in the honest region with high probability.</p><p>Recent literature has cast doubts on whether these assumptions hold in practice. Social graphs do not seem to be fast mixing after all <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b22">[23]</ref>, and the probability with which fake identities are accepted as friends is much higher than anticipated <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b42">[43]</ref>, implying that the set of attack edges is not as sparse as assumed. We then ask: to what degree are SybilLimit-like protocols sensitive to their assumptions about sparse cuts and mixing time?</p><p>To answer this question, using SybilLimit <ref type="bibr" target="#b45">[46]</ref> as representative (we find that the behavior of other SybilLimit-like protocols is similar), we produce, as in <ref type="bibr" target="#b38">[39]</ref>, a ranking of nodes with respect to a given verifier node u, in decreasing order of trust: the first node in the ranking is the node that u trusts the most. We then measure the defensive efficacy of SybilLimit by using two metrics well known in the field of information retrieval: precision and recall. In particular, we define the precision at position k as the fraction of 3 The discussion in this section is informal for the sake of clarity. honest nodes among the k nodes that the protocol ranks the highest. Similarly, we define the recall at position k as the ratio between the number of honest nodes among the top k positions in the ranking and the total number of honest nodes in the network. SybilLimit-like protocols do not operate on raw social networks: they are to be used only on networks that have been preprocessed by iteratively removing all nodes with degree lower than five <ref type="bibr" target="#b45">[46]</ref>. Table <ref type="table">III</ref> shows the statistical properties of the graphs we use in our experiments. Sensitivity to sparse cuts. Figure <ref type="figure">3</ref> plots SybilLimit's precision versus recall for the preprocessed Facebook data set. SybilLimit proves very effective when the number of attack edges is within the theoretical bound (which corresponds to p = 0.01). Once the bound is exceeded, however, the performance of SybilLimit decays rather quickly. Sensitivity to mixing time. Mohaisen et al. <ref type="bibr" target="#b22">[23]</ref> are the first to observe that this step, while boosting the mixing time of social graphs to the level required by SybilLimit to be effective, can also reduce the size of the graph. Table III confirms this observation: in the case of Wiki-Talk, the preprocessing step removes over 85% of the nodes. Removed nodes are effectively considered sybils by the protocol, and while those nodes may still be able in some circumstances to enlist other nodes in the network as proxies <ref type="bibr" target="#b44">[45]</ref>, it is unclear in general how removed nodes can safely take advantage of honest nodes' resources and vice versa <ref type="bibr" target="#b22">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Discussion</head><p>The goal of universal decentralized sybil defense with strong theoretical guarantees, which has driven early research on sybil defense via social networks, rests on assumptions (short mixing time and cut sparseness) whose validity is at best dubious. What to do? In a recent survey <ref type="bibr" target="#b43">[44]</ref>, Yu suggests a couple of ways forward: one could offer sybil defense only to the nodes in the core of the social graph, in effect institutionalizing the removal of nodes that are not as well connected; or one could simply renounce the elegant theoretical worst-case claims of the current framework and rely instead on "weaker but less clean assumptions" <ref type="bibr" target="#b43">[44]</ref>. In the next section, we explore a third alternative that offers every honest node a useful degree of sybil protection without compromising on elegance and rigor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. COMMUNITIES</head><p>The theoretical guarantees offered by the protocols discussed so far hold only as long as honest nodes are closely connected to one another everywhere in the social graph and the cut between honest and sybil nodes is sparse. Empirical evidence suggests a different reality: social graphs consist of communities, each a tightly knit sub-network <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b22">[23]</ref>. Indeed, it is quite conceivable that the cut between two tightly-knit communities of honest nodes A and B be as sparse as the cut between A and the sybil region: to an honest node in A using a protocol in the style of SybilLimit, a sybil node would then be indistinguishable from an honest node in B <ref type="bibr" target="#b37">[38]</ref>, <ref type="bibr" target="#b38">[39]</ref>.</p><p>While these considerations argue against universal sybil defense, they suggest an alternative goal: to provide each honest node u with the ability to white-list a trustworthy set of nodes-namely those in the community to which u belongs. This new goal can be more precisely stated as follows:</p><p>Problem 1. Let u be an honest user and S a subset of the honest region such that: (a) u ∈ S, (b) S has mixing time τ </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>and (c) there are at most o |S| τ edges between S and the rest of the social graph. We want an algorithm capable of distinguishing almost perfectly between the nodes in S and the nodes outside of S.</head><p>We make two observations. First, the problem of universal sybil defense is a special case of Problem 1 in which τ = O(log n) and S is the entire honest network. Second, sybil defense appears, informally, to reduce to the task of detecting the "community" S.</p><p>The fundamental affinity between community detection and sybil defense has been first observed by Viswanath et al <ref type="bibr" target="#b38">[39]</ref>. After pointing out that, from the perspective on an honest node, SybilLimit-like protocols separate the social graph in two communities-honest nodes and sybils-they go on to ask a natural follow-up question: can off-the-shelf community detection algorithms be used to detect sybils? Their answer is mixed: on the one hand, they show that a generic community detection algorithm due to Mislove <ref type="bibr" target="#b20">[21]</ref> (also a co-author in <ref type="bibr" target="#b38">[39]</ref>) achieves results comparable to those of SybilLimit-like protocols on both a synthetic topology and a real-life Facebook social graph; on the other, they observe that attackers wise to the community substructure of the honest portion of the social graph can manage, as we discussed above, to make the sybil region appear indistinguishable from a sub-network of honest nodes.</p><p>We believe that a first step towards a more conclusive answer is to recognize that casting the problem simply in terms of generic community detection leaves it underspecified. While intuitively compelling, the notion of community is ambiguous, as the many community detection algorithms found in the literature, each aiming for a subtly different notion of community, clearly indicate <ref type="bibr" target="#b11">[12]</ref>. But what should be the basis for the notion of community to be used in sybil defense?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The minimum conductance cut</head><p>A somewhat obvious candidate to serve in this role is conductance. Conductance is hard to tamper with (see Section II) and it is intimately related to mixing time, a critical property to leverage against sybil attacks (see Section III).</p><p>It is tempting to define the problem of sybil defense in terms of the minimum conductance cut problem found in the community detection literature: Problem 2. Find a set S whose conductance ϕ(S) is as close as possible to ϕ(G), the minimum conductance of the graph.</p><p>If we believe that the honest region is fast mixing and that it is connected to the sybil region via a sparse cut, the set S should be very close to capturing the entire honest region. This view is of course too simplistic and can lead to community detection algorithms that can be circumvented by an adversary using far fewer attack edges than needed to dupe SybilLimit-like protocols. Mislove's algorithm <ref type="bibr" target="#b20">[21]</ref> serves, in this sense, as a cautionary tale.</p><p>Mislove's algorithm is a heuristic algorithm that finds small conductance cuts-which is, in essence, analogous to finding an approximate solution to Problem 2. The set S is built greedily. Starting from a vertex u, the algorithm grows S by incorporating the vertex v connected to S that results in a set S ∪ {v} with minimal conductance. <ref type="foot" target="#foot_3">4</ref>Although this simple heuristic appears to capture the intuition behind Problem 2, it fails against the following simple attack. Let v be an honest node, that has no neighbor of degree at most 3. We create the sybil region with nodes s 0 , s 1 , . . . , s n as follows:</p><p>• s 0 and s 1 are connected to v.</p><p>• For every i ≤ n -2, s i is connected with the next two sybil nodes in the sequence s i+1 , s i+2 , and also with the previous two, s i-1 , s i-2 . Figure <ref type="figure" target="#fig_2">4</ref> illustrates the attack, involving only the two attack edges connecting v to s 0 and s 1 , that results in Mislove's algorithm deterministically admitting every node of the sybil region <ref type="foot" target="#foot_4">5</ref> (see <ref type="bibr" target="#b1">[2]</ref> for a full proof).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Discussion</head><p>Reframing sybil defense to leverage the community substructure that exists in social graphs requires a deep understanding of the relationship between sybil defense and conductance-in essence, understanding when a solution to Problem 2 is also a solution to Problem 1. The key to the approach we explore in subsequent sections relies, at a local scale, on a technique central to the efforts towards universal sybil defense discussed in Section III: random walks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. FAST MIXING COMMUNITIES</head><p>Because of its tight connection with the theory of random walks, the minimum conductance cut problem that we have used to formalize the intuitive relationship between sybil defense and community detection has been studied in depth.</p><p>Problem 2, as we have called it, is NP-hard, so the best that can be hoped for is an approximate solution. Several sophisticated algorithms offer non trivial guarantees on the quality of their approximation to the problem <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b30">[31]</ref>, but they have two serious drawbacks when it comes to large social graphs: they are not obviously parallelizable and their running time is polynomial in the size of the entire graph. We then consider a different style of techniques that offer less stringent guarantees on the approximations they produce but whose time complexity depends only on the size of the set S we are trying to identify, which we expect to be significantly smaller than the size of the entire social graph.</p><p>The first such "local" algorithm was developed by Spielman and Teng <ref type="bibr" target="#b31">[32]</ref>. Very roughly, their idea is to associate a weight with each node and to identify as part of the community all nodes whose weight exceeds a certain threshold. To determine the weight of a node they effectively run many truncated random walks of the same length t ∈ Õ(φ -1 ), all originating from the same node (the seed): a node's weight is given by the frequency with which it is visited normalized by degree. The potential of this algorithm for sybil detection becomes evident once one interprets the weight of a node v as a measure of the trust that the seed node puts in v. Indeed, the recent sybil detection protocol SybilRank <ref type="bibr" target="#b6">[7]</ref> is essentially an implementation of the algorithm of Spielman and Teng, run using multiple seed nodes.</p><p>Since the work of Spielman and Teng, however, the use of truncated random walks for computing low conductance cuts has been further refined. In particular, Andersen, Chung and Lang <ref type="bibr" target="#b2">[3]</ref> originate many random walks from the honest seed, as in <ref type="bibr" target="#b31">[32]</ref>, but the length of their random walks, instead of being fixed, is determined by means of a (geometrically distributed) random variable. This algorithm has two properties that are extremely useful in our context. First, it computes a set S whose conductance is smaller than what is computable with the approach used in SybilRank. Second, it is parallelizable and, crucially, its running time depends not on the size of the entire graph, but only on the size of S.</p><p>Andersen and Perez <ref type="bibr" target="#b26">[27]</ref> and, very recently, Gharan and Trevisan <ref type="bibr" target="#b23">[24]</ref> have proposed further improvements. It is not immediately obvious, to us at least, if these algorithms can be used by an honest seed to rank other nodes according to its trust in them. For this reason, we will focus henceforth on the method proposed in <ref type="bibr" target="#b2">[3]</ref>, which naturally computes such ranking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Discussion</head><p>Formalizing community detection in terms of Problem 2 allows us to draw from the rich literature on random-walkbased algorithms. Among them, the algorithm of Andersen, Chung and Lang stands out for the combination of its features: it supports node ranking; the cut it computes has smaller conductance than most of its peers; its running time depends on the size of the community, not that of the graph; and it is easy to parallelize. In the next section we will see that this algorithm solves Problems 1 and 2 simultaneously, i.e., it is able to identify a community of honest nodes containing the honest seed, without being lured into the sybil region. Further, we will prove the first theoretical guarantees on the performance of a community detection algorithm in the context of sybil defense and show experimentally that the algorithm is quite competitive with the state of the art.</p><formula xml:id="formula_7">Algorithm 1 AP P R(v, α, ) ppr(u) = 0 ∀u ∈ V r(u) = χ v Q = {v} for |Q| = 0 do Extract u from Q. while r(u) ≥ d(u) do ppr, r = P ush u (ppr, r)</formula><p>Insert in Q all the nodes w in the neighborhood of u such that r(w) ≥ d(w) end while end for return ppr Algorithm 2 P ush v (ppr, r) Ensure: ppr = ppr and r = r with the following exceptions</p><formula xml:id="formula_8">ppr (v) = ppr(v) + αr(v) r (v) = 1-α 2 r(v) for all u ∈ V : (u, v) ∈ E do r (u) = r(u) + 1-α 2d(v) r(v) end for</formula><p>return ppr e r that this dependence on precision is linear: it is possible to show that the running time of the algorithm is O( 1 α ) and therefore, for fixed α, the running time is O( 1 ). Note that this offers an interesting trade-off between speed and precision.</p><p>A second consequence of the choice of comes from the way the push-flow algorithm works. It can be shown that all vertices w whose frequency p w in the stationary distribution is smaller than receive a trust of 0 from APPR. When APPR stops, nodes with a non-zero ppr value define a connected component around the source, while all vertices outside have zero trust.</p><p>When ACL is computed with respect to the same seed with two values &lt; δ, the non-zero portion of the -ranking is longer than the corresponding prefix of the δ-ranking. The surprising finding is that these two rankings, u 1 , . . . , u n and u δ 1 , . . . , u δ n are almost the same, as can be measured for instance using the Tau-Kendall distance (see Table <ref type="table">IV</ref>). This is a very useful property: it says that if we want to identify quickly a set of trusted nodes, we can do so just by using a larger value of . Because the running time of the protocol is dependent on the values of α and and not the size of the graph, this allows ACL to effectively scale in situations where partial node rankings suffice.</p><p>To conclude, we remark that Theorem 3 holds for the values defined by Equation 3 and not for their approximation (Equation <ref type="formula">4</ref>). We expect however this approximation to work well in practice. We verify this next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparative Evaluation</head><p>Our key question in evaluating ACL is to determine whether it expands the guarantees offered by today's social defense systems in two directions: <ref type="bibr" target="#b0">(1)</ref>   relying on the assumption that the entire graph is fast mixing (to avoid the need for preprocessing). Method and environment: Viswanath et al. <ref type="bibr" target="#b38">[39]</ref> observe that, despite their peculiarities, sybil defense schemes are based on the same fundamental principle-community detection-and produce highly correlated results. Hence, for the sake of clarity, the experiments we report compare ACL only against SybilLimit, which we use as the SybilLimitlike champion. Although SybilLimit performed better than its peers, our experiments with SybilGuard, SybilInfer and Gatekeeper returned qualitatively similar results.</p><p>The graphs we use to compare their performance are generated by subjecting social networks that we assume to include only honest nodes to the attack described in section II-B. We then run ACL and SybilLimit on the resulting graphs, rank the nodes using the same methodology discussed in Section III, and measure precision (the percentage of nodes in the prefix that are honest) and recall (the percentage of honest nodes that are in the prefix) from the perspective of 10 randomly chosen seeds. We report the average of the values we obtain.</p><p>We configure SybilLimit to have 1.5 √ m random walks of length 1.5 log(n). ACL is configured with α = 10 -3 and sufficiently small to label every node in the attacked graph with non-zero weight. For DBLP = 10 -7 ; for all other graphs = 10 -6 suffices.</p><p>ACL tolerates denser attacks: Figure <ref type="figure" target="#fig_4">6</ref> shows the degree to which ACL and SybilLimit succeed in defending the Facebook graph when the attack strength, measured as the percentage p of attack edges in the graph, varies from p = 0.01 to p = 0.1. Note that, to respect the "operating range" of each protocol the results we report for ACL are obtained on the original Facebook graph while the results from SybilLimit apply to the preprocessed Facebook graph.</p><p>We observe that the ability of ACL to correctly classify nodes degrades gracefully as the attack increases in strength, remaining relatively high even when p = 0.1. Indeed, the selectivity of ACL under an attack of strength p = 0.05 is comparable to that of SybilLimit for an attack of p = 0.01. SybilLimit on the other hand becomes confused rather rapidly as the attack strength increases.</p><p>ACL does not need preprocessing: Figure <ref type="figure">7</ref> shows the protection offered by ACL and SybilLimit to the Facebook, DBLP, Epinions, and WikiTalk graphs for an attack where p = 0.01. For ACL, we report only results from the raw graph. For SybilLimit we report results from both the raw and preprocessed graphs.</p><p>Without preprocessing, ACL achieves high precision at high recall. SybilLimit's performance, on the other hand, is mixed. For Facebook, Epinions, and WikiTalk, SybilLimit provides excellent protection as long as the graphs are preprocessed. When the graphs are not preprocessed, the offered coverage degrades to varying extents. The degradation in coverage for Facebook is negligible; for Epinions the degradation is minor but noticeable.</p><p>SybilLimit performs poorly on DBLP with or without preprocessing, though preprocessing the graph does provide a significant boost. We speculate that this poor performance is the side effect of the relatively high mixing time observed by Mohaisen et al. <ref type="bibr" target="#b22">[23]</ref>.</p><p>A second attack model: In this section we compare the algorithms using an attack model widely used in the literature <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b41">[42]</ref>. The number of attack edges g is fixed, and random honest nodes are declared to be sybil until g attack edges are obtained. Then more sybil nodes are created from scratch until a total of γ sybils is reached. These γ sybils are then connected among themselves via a scale-free topology. In our attack we use the scale-free topology of Barabasi-Alberts, as in <ref type="bibr" target="#b41">[42]</ref>.</p><p>Figure <ref type="figure" target="#fig_5">8</ref> shows the results for our Facebook graph and g = 50000 and γ = 10000. ACL and Mislove are essentially perfect, outperforming all other algorithm (Gatekeeper, SybiLimit and SybilGuard). We also ran experiments with other graphs obtaining similar results. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Local vs Global detection</head><p>We have shown that ACL is very effective in practice to address Problem 1. Building a universal sybil defense system for community-structured networks, however, remains an open problem.</p><p>In a recently published paper Cao et al. <ref type="bibr" target="#b6">[7]</ref> suggest to expand defensive coverage by relying on multiple trusted seed nodes instead of a single one. More precisely, suppose there are several trusted seeds evenly distributed among communities of honest nodes; it is then possible to merge the local ranking of the nodes to get a unified global ranking of the nodes in the network.</p><p>While effective in practice, the use of multiple seeds does not immediately lead to strong theoretical guarantees, even assuming that all seeds are honest nodes. For example, suppose we can prove, as it is typical for ACL, that a 1o(1) fraction of the honest seeds will assign a negligible fraction of the overall score to sybil nodes and distribute the rest evenly across the honest region. There is always, however, a fraction of unlucky honest seeds for which such guarantees are impossible-e.g., seeds at the boundary between the honest and sybil regions. Unfortunately, because of the arbitrary nature of the sybil region, walks originating from these nodes might produce an unconstrained (and adversarial) probability distribution among the sybil nodes. This is not only true for the ACL algorithm, but virtually for any sybil defense algorithm that relies on random walks and mixing time (see for instance <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref>). Unfortunately, it is not clear how an unlucky choice of seeds will affect the overall ranking. While lucky seeds will distribute evenly the score among honest nodes, unlucky ones might concentrate the score to a smaller, but still significant, subregion of the sybil graph, thus letting such nodes overtake the first positions of the ranking. Despite these words of caution, the results obtained by Cao et al. <ref type="bibr" target="#b6">[7]</ref> using multiple seed in real world scenarios are encouraging, and we believe this is a promising research direction. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Discussion</head><p>We have shown experimentally that ACL is extremely effective at identifying the community of a given honest seed and provided formal guarantees for the rankings it produces. To our knowledge this is the first time that formal guarantees are given for a community detection algorithm in the context of sybil defense. While we have shown that ACL can be used to effectively solve Problem 1, in the next section we will discover a sobering reality: all sophisticated state-ofthe-art methods based on random walks, including ACL, are helpless against some of the simple, primitive sybil attacks that are encountered in deployed social networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. AVOIDING THE MAGINOT SYNDROME</head><p>Our appraisal in Section II of the resilience of different structural properties of social graphs indicated that leveraging the complementary notions of mixing time and conductance are the most promising line of defense against sybil attacks; furthermore, techniques based on this approach can provide impressive end-to-end guarantees. Yet one key question remains: how effective are these techniques against actual sybil attacks?</p><p>While data on sybil attacks in deployed social networks is not readily available, two recent papers have included experience reports that shed light on the types of attacks that occur in the wild.</p><p>Cao et al. report to have successfully used SybilRank to identify sybil users in the Tuenti social network <ref type="bibr" target="#b6">[7]</ref>. They observe large clusters of sybil users in regular topologies (star, mesh, tree, etc.) that are connected to the honest communities through a limited number of attack edges. They also report that an unspecified fraction of the remaining accounts are sybil but to preserve confidentiality are unable to report on the number or characteristics of those accounts.</p><p>Yang et al.'s experience in analyzing the RenRen social network is significantly different <ref type="bibr" target="#b42">[43]</ref>: they do not observe any large clusters of well-connected sybil nodes in turn connected to the honest sub-graph through a small set of attack edges, as would be expected by the sybil defense techniques we have surveyed; instead, they find isolated sybil nodes each connected to the honest sub-graph with a large number of attack edges.</p><p>The simple attack observed in the RenRen social network is devastating for conductance-based protocols. We simulated the attack on our Facebook graph and measured the probability that a randomly-chosen honest node be considered more trustworthy than a randomly-chosen sybil one by SybilLimit <ref type="bibr" target="#b44">[45]</ref>, SybilGuard <ref type="bibr" target="#b45">[46]</ref>, Mislove <ref type="bibr" target="#b38">[39]</ref>, Gatekeeper <ref type="bibr" target="#b34">[35]</ref>, and ACL. A probability of 1 corresponds to the ideal case in which every honest node is ranked higher than any sybil one; a probability of 0 indicates the reverse case; a random ranking correspond to 0.5 probability. In our results, every protocol performs poorly: the probability is 0.45 for SybilLimit, 0.44 for SybilGuard, 0.34 for Mislove, 0.49 for Gatekeeper, and 0.37 for ACL. The vulnerability of conductance-based techniques to an attack where each sybil node can create more than one attack edge is fundamental, as Yu et al. proved <ref type="bibr" target="#b44">[45]</ref>.</p><p>These experiences indicate that while today's sociallybased sybil defenses are designed to provide the theoretically-best defense posture, they are also easily circumvented. Much like the real-life Maginot line. <ref type="foot" target="#foot_5">6</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Defense in depth</head><p>To avoid this fate, we believe that effective sybil-defense mechanisms should embrace a strategy inspired by the notion of defense in depth <ref type="bibr" target="#b33">[34]</ref>: rather than relying solely on techniques based on conductance, they should include a portfolio of complementary detection techniques. For example, Yang et al. observe <ref type="bibr" target="#b42">[43]</ref> that it is possible to spot sybil nodes by tracking their clustering coefficient (see Section II) and the rate at which their requests of friendship are accepted, both of which in the RenRen graph are significantly higher for honest nodes than for sybils (in the case of the clustering coefficient, this is because a single sybil node that randomly issues friendship requests is unlikely to have many friends who are themselves friends with each other). As a rule of thumb, Yang et al. suggest to report as sybil those users whose friendship-request acceptance rate is less than 50% and whose clustering coefficient is below 1/100. They report that this is sufficient to correctly identify more than 98% of the sybils, with a false positive rate of less than 0.5%. Note that, while these results sound impressive, they are not cause for unconditional celebration, as it is quite easy for a slightly more sophisticated adversary to circumvent both checks by issuing friendship requests to other sybil nodes under his control. But, at the very least, checks like these make the life of the attacker more difficult and prevent more sophisticated defenses to be trivially sidestepped. Indeed, they may even nudge the attacker, whether he likes it or not, towards the kind of attacks where conductance-based method can start to be effective. For instance, simply introducing a defense layer that monitors the rate of friendship acceptance introduces a bound (albeit loose) on the conductance of the cut between honest users and sybils.</p><p>In particular, assume that honest users accept sybil request with probability p and that the threshold of accepted requests below which a node is flagged as sybil is T . Then the following simple result holds (see <ref type="bibr" target="#b1">[2]</ref> for the proof) Proposition 3. Sybil nodes, to not be detected, must create fewer than p 1-T T -p of their edges as attack edges. So, for example, if honest users accept friendship requests with probability p = 10% and T = 50% (as in <ref type="bibr" target="#b42">[43]</ref>), then each sybil node must have seven links to sybil nodes for every attack edge to avoid detection.</p><p>Proposition 3 bounds the conductance of the cut between honest and sybil nodes in the sense that whenever the sybil region has fewer edges than the honest region, the conductance of the cut is at most 2p 1-T T -p . While this bound is loose, it is encouraging that it can be obtained through a defense layer based on a fairly primitive measure such as the rate of friendship acceptance. We speculate that in the near future new defense layers based on advanced machine-learning and profiling techniques <ref type="bibr" target="#b32">[33]</ref> will force a sybil attacker who wants to escape detection to generate sybil regions that resemble ever more actual social graphs, connected through a sparse cut of attack edges to the honest portion of the graph: in other words, exactly the scenario suitable for conductance-based sybil defense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. CONCLUSIONS</head><p>This work has traced the evolution of social sybil defenses from the seminal work of Yu et al <ref type="bibr" target="#b45">[46]</ref> to the developments of the last several years <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b34">[35]</ref>, <ref type="bibr" target="#b44">[45]</ref> to recent reports <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b42">[43]</ref> that detail their usage in practice.</p><p>We have identified two main trends in the literature. The first is based on random walk methods whose goal is to identify fast-mixing (sub)regions that contain the honest seed. The implicit assumption is that social networks under sybil attacks must exhibit a simple structure-a fast-mixing region of honest nodes connected via a sparse cut to the sybil region. We have seen how this initial simplified picture of the world has progressively become more nuanced, leading to methods based on random walks that are able to cope with a more complex world consisting of a constellation of tightly-knit, fast-mixing communities loosely connected among themselves and to the sybil region.</p><p>The other trend that we have discussed considers sybil defense as an instance of community detection. While we have revealed the limitation of this approach, we have been able to enucleate its core validity.</p><p>As we have shown with our discussion on Personalized PageRank, the two approaches can go hand in hand to yield more robust sybil defense protocols that are competitive with the state of the art. The discussion has highlighted the importance of the body of literature that studies foundational issues on random walks. As we have shown, both algorithms and useful conceptual tools can be distilled from it and successfully deployed in the context of sybil defense.</p><p>Despite their growing mathematical sophistication, we have also seen how sybil defense methods can perform poorly when confronted with some real-world attacks that exhibit a very primitive structure. We believe that the defense-in-depth approach that we have advocated as a response to this challenge can be facilitated by moving from the original vision of offering individual honest users decentralized and universal sybil defense <ref type="bibr" target="#b44">[45]</ref>, <ref type="bibr" target="#b45">[46]</ref> towards defense techniques that assume that the defender has complete knowledge of the social graph topology <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b42">[43]</ref> and can deploy the kind of parallelizable implementations suitable for handling the large graphs of on-line social networks. In particular, social network operators are in a position to use machine learning techniques, user profiling, and monitoring of user activity to gain additional knowledge that can help them filter sybil attacks not well-suited for detection using techniques based on random walks, community detection, and their combination. Still, as attackers increase in sophistication, claims of a silver bullet should be met with healthy skepticism. As the arms race between attackers and defenders continues, it will be increasingly important that new defense mechanisms clearly state the kind of attack they aim to withstand, a landscape that too often is blurred.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>xy ∈ E}; and let k be the maximum number of edges between neighbors of v: k = deg(v) 2 , where deg(v) denotes v's degree. Then, c v := fv k . The clustering coefficient of a graph is the average clustering coefficient of all its vertices, i.e. c(G) := v∈V (G) cv |V | .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Degree distribution of the Facebook graph before and after attack. The attack shifts the distribution up (because it doubles the size of the graph) and to the right (proportionally to the number of attack edges), but does not change the shape of the curves.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Two edge attack.</figDesc><graphic coords="7,119.23,562.04,114.07,125.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Impact of varying α. Precision vs Recall graph with Facebook-New Orleans data set under (a) a weak attack (edge density p = 0.01) and (b) a strong attack (edge density p = 0.1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. The impact of varying the attack strength on (a) ACL on the original Facebook graph and (b) SybilLimit on the preprocessed and raw Facebook graph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8. The precision of ACL and the other algorithms on Facebook graph with standard attack model with g = 50000 and γ = 10000.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>STATISTICAL PROPERTIES OF THE LARGEST STRONGLY CONNECTED COMPONENT IN A COLLECTION OF REAL WORLD DATA SETS. THE VALUES REPORTED REFLECT THE PROPERTIES OF THE DATA SET BEFORE AND AFTER THE ATTACK SPECIFIED IN SECTION II-B. THE DBLP GRAPH IS A SNAPSHOT OF THE DBLP CO-AUTHOR GRAPH FROM 2011; THE EPINIONS GRAPH IS A DATASET FROM THE EPINIONS PRODUCT REVIEW SITE OBTAINED IN 2003; THE FACEBOOK GRAPH IS A CRAWL OF THE FACEBOOK-NEW ORLEANS COMMUNITY IN 2007; THE WIKITALK GRAPH IS DERIVED FROM THE WIKIPEDIA PAGE EDIT HISTORY AS OF JANUARY 2008.</figDesc><table><row><cell>Graph</cell><cell>Nodes</cell><cell cols="2">Edges</cell><cell cols="5">Attack Edges Diameter 90% Diameter Clustering Coeff Est. Conductance</cell></row><row><cell>DBLP [1]</cell><cell>718115</cell><cell cols="2">2786906</cell><cell>0</cell><cell>20</cell><cell>7.43</cell><cell>0.73</cell><cell>0.016</cell></row><row><cell>... p = 0.01</cell><cell cols="3">1436230 5601767</cell><cell>27955</cell><cell>19</cell><cell>7.94</cell><cell>0.71</cell><cell>0.006</cell></row><row><cell>... p = 0.10</cell><cell cols="3">1436230 5851341</cell><cell>277529</cell><cell>17</cell><cell>7.02</cell><cell>0.67</cell><cell>0.031</cell></row><row><cell>Epinions [28]</cell><cell>26588</cell><cell cols="2">100120</cell><cell>0</cell><cell>16</cell><cell>5.98</cell><cell>0.23</cell><cell>0.020</cell></row><row><cell>... p = 0.01</cell><cell>53176</cell><cell cols="2">201197</cell><cell>957</cell><cell>16</cell><cell>6.72</cell><cell>0.23</cell><cell>0.005</cell></row><row><cell>... p = 0.1</cell><cell>53176</cell><cell cols="2">210291</cell><cell>10051</cell><cell>14</cell><cell>5.97</cell><cell>0.21</cell><cell>0.027</cell></row><row><cell>Facebook [37]</cell><cell>63392</cell><cell cols="2">816886</cell><cell>0</cell><cell>12</cell><cell>5.15</cell><cell>0.25</cell><cell>0.020</cell></row><row><cell>... p = 0.01</cell><cell>126784</cell><cell cols="2">1641891</cell><cell>8119</cell><cell>14</cell><cell>5.79</cell><cell>0.25</cell><cell>0.005</cell></row><row><cell>... p = 0.10</cell><cell>126784</cell><cell cols="2">1715206</cell><cell>81434</cell><cell>13</cell><cell>5.25</cell><cell>0.23</cell><cell>0.020</cell></row><row><cell>WikiTalk [15]</cell><cell>92117</cell><cell cols="2">360767</cell><cell>0</cell><cell>9</cell><cell>4.63</cell><cell>0.14</cell><cell>0.048</cell></row><row><cell>... p = 0.01</cell><cell>184234</cell><cell cols="2">725152</cell><cell>3618</cell><cell>10</cell><cell>5.02</cell><cell>0.13</cell><cell>0.005</cell></row><row><cell>... p = 0.10</cell><cell>184234</cell><cell cols="2">757729</cell><cell>36195</cell><cell>10</cell><cell>4.75</cell><cell>0.12</cell><cell>0.053</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Table I</cell><cell></cell><cell></cell></row><row><cell cols="5">where the volume of S is defined as vol(S) := v∈S deg(v)</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">(the sum of the degrees of vertices in S), and the cut induced</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">by S is the set cut(S) of edges with one endpoint in S and</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">the other endpoint outside of S. Finally, the conductance of</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">a graph G is defined as</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">ϕ(G) := min vol(S)≤|E|</cell><cell cols="2">ϕ(S).</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>TABLE SHOW HOW MANY EDGES ARE NEEDED FOR THE ATTACKER TO CIRCUMVENT THE MAIN 4 PROPERTIES OF SOCIAL NETWORKS.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>withstanding denser attacks; and (2) providing high quality sybil defense without</figDesc><table><row><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision</cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.2 0.4</cell><cell>0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>(a) ACL</cell><cell></cell><cell></cell></row><row><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision</cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.2 0.4</cell><cell>0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">(b) SybilLimit</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>The precision-recall tradeoffs for ACL and SybilLimit on DBLP, Epinions, Facebook, WikiTalk, with p = 0.01. Results for ACL are reported for the raw graphs. Results for SybilLimit are reported for both raw and preprocessed graphs.</figDesc><table><row><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>1.01</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.8</cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>0.99</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision</cell><cell>0.6</cell><cell>0.97 0.98</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Precision</cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>0.96</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>0.95</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="3">0.95 0.96 0.97 0.98 0.99</cell><cell>1</cell><cell>1.01</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell><cell cols="4">SybilLimit w/ preprocessing SybilLimit w/o preprocessing ACL</cell><cell></cell><cell></cell><cell>0</cell><cell></cell><cell cols="2">SybilLimit w/ preprocessing SybilLimit w/o preprocessing ACL</cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell></cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>(a) Facebook</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(b) Epinions</cell><cell></cell></row><row><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.8</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Precision</cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Precision</cell><cell>0.6</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.4</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0.2</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0</cell><cell></cell><cell cols="4">SybilLimit w/ preprocessing SybilLimit w/o preprocessing ACL</cell><cell></cell><cell></cell><cell>0</cell><cell></cell><cell cols="2">SybilLimit w/ preprocessing SybilLimit w/o preprocessing ACL</cell><cell></cell></row><row><cell></cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell></cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell><cell>0</cell><cell>0.2</cell><cell>0.4</cell><cell>0.6</cell><cell>0.8</cell><cell>1</cell><cell>1.2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Recall</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>(c) DBLP</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(d) WikiTalk</cell><cell></cell></row><row><cell>Figure 7.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Although this goal may be more accurately characterized as sybil detection<ref type="bibr" target="#b37">[38]</ref>, we use here the term sybil defense originally proposed by Yu<ref type="bibr" target="#b44">[45]</ref> and widely adopted in the literature.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>Henceforth, mentions of sybil defense, unless specified otherwise, refer to techniques that leverage the structure of social networks.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>1081-6011/13 $26.00 © 2013 IEEE DOI 10.1109/SP.2013.33</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>The original proposal for Mislove's algorithm<ref type="bibr" target="#b20">[21]</ref> relies on a normalized conductance metric, but in the context of sybil defense the protocol is evaluated using just conductance<ref type="bibr" target="#b38">[39]</ref>. For consistency, we follow the approach of the second paper.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p><ref type="bibr" target="#b4">5</ref> Furthermore this attack can be modified to withstand also the preprocessing defined in section III-B</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>http://en.wikipedia.org/wiki/Maginot Line</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We thank Bimal Viswanath and Alan Mislove for the code of Mislove's algorithm,Nguyen Tran for the Gatekeeper code, and Krishna Gummadi for his comments on an early draft. Lorenzo Alvisi is supported by the National Science Foundation under Grant No. 0905625. Alessandro Epasto is supported by the Google European Doctoral Fellowship in Algorithms, 2011. Alessandro Panconesi is partially supported by a Google Faculty Research Award.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. A DEEP DIVE: PERSONALIZED PAGERANK AND LOCAL DEFENSE</head><p>In this section we analyze in some depth the "variable length" random walk algorithm of Andersen, Chung and Lang <ref type="bibr" target="#b2">[3]</ref>, which from now we refer to as ACL. Since ACL is based on the normalized stationary distribution of the Personalized PageRank <ref type="bibr" target="#b12">[13]</ref> (PPR) random walk, we start by reviewing PPR's definition.</p><p>Starting from an initial vertex v (which in our application will be an honest seed), at each step in the walk a pebble returns to v with probability α and moves to a uniformly random neighbor of its current location with probability 1α. This random walk has a unique stationary distribution <ref type="bibr" target="#b2">[3]</ref> that we denote as p α,v := (p 1 , . . . , p n ). Clearly, this distribution depends on the starting node v and the jumpback parameter α.</p><p>Intuitively, it is as if, starting from the honest seed, we performed many random walks whose length is determined by means of a geometric random variable: a random walk has length k with probability α(1α) k-1 and, as it is well-known, expected length α -1 . Note that long walks are likely to be rare-their probability decays exponentiallywhile short walks in the neighborhood of the honest seed are common. In this fashion, the nodes in the "community" to which the honest seed belongs should be visited most frequently. The weight p α,v (u) that a node u receives, intuitively, is proportional to the number of times it is visited when "many" random walks are performed. ACL uses the PPR limit distribution, for a given honest seed v and a given α, to assign a "trust" value to each vertex u in the network as follows:</p><p>Sorting according to t α,v in descending order produces a ranking of the nodes from the point of view of the verifying node v, from the most trustworthy to the least trustworthy.</p><p>This ranking is significantly more robust than that obtained by methods based on PageRank (see for example EigenTrust <ref type="bibr" target="#b28">[29]</ref>, TrustRank <ref type="bibr" target="#b47">[48]</ref>) or that apply PPR directly <ref type="bibr" target="#b21">[22]</ref>. First, since a random walk can reset only to the seed node, this ranking is immune to all attacks to PageRank based on exploiting random walks that jump back to a spam node <ref type="bibr" target="#b7">[8]</ref>. Second, it includes a normalization step that is crucial to obtain the formal guarantees and experimental performance we are seeking: in particular, it prevents highdegree sybil nodes from spuriously outranking less popular honest nodes just by virtue of their high degree.</p><p>We now prove that this ranking achieves precisely what we are looking for: it defines a low-conductance cut containing the honest seed and almost no sybil nodes, thereby solving Problem 1.</p><p>Let us assume that the degree distribution of the honest region H follows a power law and that S is a subset of nodes in H. Let τ be the mixing time of the graph induced by S, and let α := (10τ ) -1 . Theorem 3. Let 0 ≤ ≤ 1 2 be a constant and let cut(S, S) = o(|S|τ -1 ). Then, there exists a subset S ⊂ S of size |S | ≥ (1 -)|S| such that, for every node v ∈ S , the first |S| positions of the ranking induced by t α,v contain at least a 1o(|S|) fraction of vertices from S. This theorem, proved in <ref type="bibr" target="#b1">[2]</ref>, shows that almost all vertices of S can be used as seeds to obtain a ranking whose first |S| positions consist almost only of honest nodes from S, thereby essentially solving Problem 1. Probabilistically, if we pick a random seed inside the honest community S then, with probability 1the corresponding ranking will correctly white-list almost all vertices in S.</p><p>We are now ready to discuss how ACL provides an arbitrarily good approximation of this ranking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Computing the ranking</head><p>The difficult step in producing the ACL ranking lies in producing the PPR distribution, which, as a stationary distribution, is inefficient to compute in general. ACL consequently relies on a push-flow algorithm for approximating it quickly <ref type="bibr" target="#b2">[3]</ref>. This algorithm, which we dub Approximate Personalized PageRank (APPR), has three input parameters: a starting vertex v, a jump back probability α, and an error parameter . APPR computes an approximate vector q v,α := (q 1 , . . . , q n ) that is an approximation of the PPR vector p v,α .</p><p>To produce the approximate vector q v,α , APPR assigns to the starting node v an amount of "trust" equal to 1, which then flows from v to the rest of the network through a series of "trickle" operations. Each push-flow operation simulates one step of the random walk by transferring a small amount of trust from a vertex u to its neighbor w in proportion to the probability that the random walk moves from u to w in one step. For each node v, APPR keeps track of two quantities: a ppr(v) value and a residual value r(v). The former is the current approximation of the PPR of the node v, while the latter is the amount of total residual trust that the node is allowed to distribute to itself and to its neighbors. The algorithm is described as Algorithm 1 (for a full discussion see <ref type="bibr" target="#b2">[3]</ref>).</p><p>The final step in ACL is to degree-normalize the approximate vector q v,α produced by APPR as follows:</p><p>To understand the ACL algorithm it is important to appreciate the effect of changing the α and parameters. Theorem 3 tells us how we should set the value of α. The dependence on is also reasonably straightforward. Since measures how far we are from the limit distribution, smaller values of imply longer running times. The good news is</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://dblp.uni-trier.de/xml/" />
		<title level="m">Dblp</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Communities, random walks and social sybil defense</title>
		<author>
			<persName><forename type="first">L</forename><surname>Alvisi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Clement</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Epasto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lattanzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Panconesi</surname></persName>
		</author>
		<idno>TR-13-04</idno>
		<ptr target="http://wwwusers.di.uniroma1.it/∼epasto/papers/sybil-tr.pdf" />
	</analytic>
	<monogr>
		<title level="j">UTCS</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Local graph partitioning using pagerank vectors</title>
		<author>
			<persName><forename type="first">R</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Expander flows, geometric embeddings and graph partitioning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Arora</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Vazirani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Emergence of scaling in random networks</title>
		<author>
			<persName><forename type="first">A.-L</forename><surname>Barabasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">All your contacts are belong to us: Automated identity theft attacks on social networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Bilge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Strufe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Balzarotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Kirda</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Aiding the detection of fake accounts in large scale social online services</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sirivianos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pregueiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Manipulability of pagerank under sybil strategies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NetEcon</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Samsara: Honor among thieves in peer-to-peer storage</title>
		<author>
			<persName><forename type="first">L</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Noble</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOSP</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sybilinfer: Detecting sybil nodes using social networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Danezis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NDSS</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The sybil attack</title>
		<author>
			<persName><forename type="first">J</forename><surname>Douceur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IPTPS</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Community detection in graphs</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fortunato</surname></persName>
		</author>
		<idno>CoRR, abs/0906.0612</idno>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Topic-sensitive pagerank: A contextsensitive ranking algorithm for web search</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Haveliwala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Knowledge and Data Engineering</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Multicommodity max-flow mincut theorems and their use in designing approximation algorithms</title>
		<author>
			<persName><forename type="first">T</forename><surname>Leighton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Predicting positive and negative links in online social networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Huttenlocher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Graphs over time: densification laws, shrinking diameters and possible explanations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<editor>KDDWS</editor>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Statistical properties of community structure in large social and information networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J</forename><surname>Lang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Mahoney</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A sybil-proof one-hop DHT</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lesniewski-Laas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SNS</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Whanau: A sybilproof distributed hash table</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lesniewski-Laas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Kaashoek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<meeting><address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Quantifying and discouraging sybil attacks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Margolin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">N</forename><surname>Levine</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<pubPlace>UMass Amherst</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">You are who you know: Inferring user profiles in online social networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Viswanath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Gummadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WSDM</title>
		<imprint>
			<date type="published" when="2010-02">February 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Keep your friends close: Incorporating trust into social network-based sybil defenses</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mohaisen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Measuring the mixing time of social graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mohaisen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Approximating the Expansion Profile and Almost Optimal Local Graph Clustering</title>
		<author>
			<persName><forename type="first">S</forename><surname>Oveis Gharan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Trevisan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">The bittorrent p2p file-sharing system: Measurements and analysis. Peer-to-Peer Systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Pouwelse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Garbacki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Epema</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sips</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Sybil attacks against mobile users: friends and foes to the rescue</title>
		<author>
			<persName><forename type="first">D</forename><surname>Quercia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hailes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Finding sparse cuts locally using evolving sets</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">P</forename><surname>Reid Andersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Trust management for the semantic web</title>
		<author>
			<persName><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISWC</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">The eigentrust algorithm for reputation management in p2p networks</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">G</forename><surname>-M. Sepandar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kamvar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mario</forename><forename type="middle">T</forename><surname>Schlosser</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Improved bounds for mixing rates of markov chains and multicommodity flow</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sinclair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">LATIN</title>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Approximate counting, uniform generation and rapidly mixing markov chains</title>
		<author>
			<persName><forename type="first">A</forename><surname>Sinclair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jerrum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Comput</title>
		<imprint>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Nearly-linear time algorithms for graph partitioning, graph sparsification, and solving linear systems</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">A</forename><surname>Spielman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-H</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Facebook immune system</title>
		<author>
			<persName><forename type="first">T</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mangla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SNS</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Considering defense in depth for software applications. Security Privacy</title>
		<author>
			<persName><forename type="first">M</forename><surname>Stytz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Optimal sybilresilient node admission control</title>
		<author>
			<persName><forename type="first">N</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Subramanian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Sybil-resilient online content voting</title>
		<author>
			<persName><forename type="first">N</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Min</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Subramanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">On the evolution of user interaction in facebook</title>
		<author>
			<persName><forename type="first">B</forename><surname>Viswanath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Cha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Gummadi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">WOSN</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Exploring the design space of social network-based sybil defenses</title>
		<author>
			<persName><forename type="first">B</forename><surname>Viswanath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mondal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Clement</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Gummadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">COMSNETS</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">An analysis of social network-based sybil defenses</title>
		<author>
			<persName><forename type="first">B</forename><surname>Viswanath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Gummadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Captcha: Using hard ai problems for security</title>
		<author>
			<persName><forename type="first">L</forename><surname>Von Ahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Langford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology-EUROCRYPT 2003</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Collective dynamics of &apos;smallworld&apos; networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Watts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Strogatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">339</biblScope>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Sybildefender: Defend against sybil attacks in large social networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Uncovering social network sybils in the wild</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Dai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Using social networks to overcome sybil attacks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGACT News</title>
		<imprint>
			<date type="published" when="2011-09">September 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">Sybillimit: A near-optimal social network defense against sybil attacks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Gibbons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaminsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Xiao</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>OAKLAND</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Sybilguard: Defending against sybil attacks via social networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaminsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Gibbons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Flaxman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">A survey of crowdsourcing systems</title>
		<author>
			<persName><forename type="first">M.-C</forename><surname>Yuen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-S</forename><surname>Leung</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>IEEE Socialcom</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Combating web spam with trustrank</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">O P</forename><surname>Zoltán Gyongyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hector</forename><surname>Garcia-Molina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VLDB</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
