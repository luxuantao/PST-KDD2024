<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Performance of a New Bluetooth Scatternet Formation Protocol *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ching</forename><surname>Law</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Massachusetts Institute of Technology</orgName>
								<address>
									<addrLine>77 Massachusetts Avenue Cambridge</addrLine>
									<postCode>02139-4307</postCode>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Amar</forename><forename type="middle">K</forename><surname>Mehta</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Massachusetts Institute of Technology</orgName>
								<address>
									<addrLine>77 Massachusetts Avenue Cambridge</addrLine>
									<postCode>02139-4307</postCode>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Kai-Yeung</forename><surname>Siu</surname></persName>
							<email>siu@list.mit.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Massachusetts Institute of Technology</orgName>
								<address>
									<addrLine>77 Massachusetts Avenue Cambridge</addrLine>
									<postCode>02139-4307</postCode>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Performance of a New Bluetooth Scatternet Formation Protocol *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F0374F4728CF4E2F37D0087C021E0BEC</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Bluetooth</term>
					<term>Ad Hoc Networks</term>
					<term>Resource Discovery</term>
					<term>Topology Construction</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A Bluetooth ad hoc network can be formed by interconnecting piconets into scatternets. The constraints and properties of Bluetooth scatternets present special challenges in forming an ad hoc network efficiently. In this paper, we evaluate the performance of a new randomized distributed Bluetooth scatternet formation protocol.</p><p>Our simulations validate the theoretical results that our scatternet formation protocol runs in O(log n) time and sends O(n) messages. The scatternets formed have the following properties: 1) any device is a member of at most two piconets, and 2) the number of piconets is close to be optimal. These properties can avoid overloading of any single device and lead to low interference between piconets. In addition, the simulations show that the scatternets formed have O(log n) diameter.</p><p>As an essential part of the scatternet formation protocol, we study the problem of device discovery: establishing multiple connections with many masters and slaves in parallel. We investigate the collision rate and time requirement of the inquiry and page processes.</p><p>Deducing from the simulations results of scatternet formation and device discovery, we can verify that the total number of packets sent is O(n) and demonstrate that the maximum number of packets sent by any single device is O(log n). At last, we give estimates of the total time requirement of the protocol and suggest further improvements.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Bluetooth <ref type="bibr" target="#b1">[1,</ref><ref type="bibr" target="#b9">9,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b16">16]</ref> is an emerging low cost and low power short-range radio technology. It has been projected that as many as 200 million Bluetooth devices will be shipped in year 2001 <ref type="bibr" target="#b6">[6]</ref>. Thus, Bluetooth is likely to become another important platform for ad hoc networking. Ad hoc networking over Bluetooth can lead to many useful applications. For example, in a conference room, a special announcement can be broadcast to the Bluetooth-enabled mobile phones and hand-held computers through an ad hoc network. Bluetooth ad hoc networks can also be used for rapid deployment of EMID (electromagnetic identification) readers <ref type="bibr" target="#b4">[4]</ref>.</p><p>The area of ad hoc networking has gathered much research interests in the past years. Many studies have concentrated on the routing issues of ad hoc networks <ref type="bibr" target="#b17">[17]</ref>. These studies usually assume that any two in-range nodes can communicate with each other. Therefore, an ad hoc network can be modeled as a graph such that the in-range nodes are adjacent. For example, simulation-based studies <ref type="bibr" target="#b7">[7,</ref><ref type="bibr">8]</ref> of ad hoc routing protocols have been conducted with a link-layer model based on or similar to the IEEE 802.11b standard.</p><p>A Bluetooth ad hoc network, however, brings new challenges. There are specific Bluetooth constraints not present in other wireless networks. A Bluetooth network is composed of piconets. Each piconet contains one master and up to seven slaves. Piconets can be connected by sharing slaves. A scatternet (Figure <ref type="figure" target="#fig_0">1</ref>) is a set of connected piconets. As shown in <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b21">21]</ref>, the configuration of a scatternet has great effects on the performance of the network. For instance, when a scatternet contains more piconets, the rate of packet collisions increases.</p><p>Before we can tap the enormous power of Bluetooth ad hoc networking, we must first devise an efficient protocol to form a scatternet from isolated Bluetooth devices.</p><p>In this paper, we study the problem of scatternet formation in the situation where the devices are in-range of one another. We adopt a two-layered approach for our investigation of this problem. First, we investigate how these devices can get organized into scatternets. We evaluate the performance of a new scatternet formation protocol. Second, as a subroutine of the protocol, we study how the devices can discover each other efficiently. In Section 2, we discuss the relevant research on Bluetooth scatternets. In Section 3, we introduce the problem of scatternet formation. We then present our protocol in Section 4 with simulation results. We discuss device discovery with simulation results in Section 5. In Section 6 we estimate the overall performance of the protocol. Section 7 concludes with remarks on future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Miklos et al. <ref type="bibr" target="#b15">[15]</ref> use heuristics to generate scatternets with some desirable properties. They evaluated these scatternets of different characteristics through simulations. Johansson et al. <ref type="bibr" target="#b10">[10]</ref> perform link-layer simulations of piconets. Raman et al. <ref type="bibr" target="#b18">[18]</ref> argue for cross-layer optimization in Bluetooth Scatternets.</p><p>Aggarwal et al. <ref type="bibr" target="#b3">[3]</ref> introduce a scatternet algorithm. Their algorithm first partitions the network into independent piconets, and then elects a 'super-master' that knows about all the nodes. However, the resulting network is not a scatternet, because the piconets are not inter-connected. Thus, another phase of re-organization is required.</p><p>Salonidis et al. <ref type="bibr" target="#b19">[19]</ref> discuss the issues of symmetric connection between a pair of Bluetooth devices. In their symmetric protocol, the devices switch states (INQUIRY and INQUIRY SCAN) with a random schedule. In contrast, in our work, the devices switch states periodically, but pick the states randomly.</p><p>Salonidis et al. <ref type="bibr" target="#b20">[20]</ref> also present a scatternet formation algorithm -BTCP (Bluetooth Topology Construction Protocol). BTCP has two phases: first, a leader is elected with a complete knowledge of all devices, and second, this leader will tell other devices how a scatternet should be formed. Our algorithm has only one phase: the scatternet is formed once a leader is elected. Since the topology is determined by a single device, BTCP has more flexibility in constructing the scatternet. A default scheme is presented in <ref type="bibr" target="#b20">[20]</ref> for up to 36 devices.</p><p>The algorithms in <ref type="bibr" target="#b3">[3,</ref><ref type="bibr" target="#b20">20]</ref> depend on a single device to design the scatternet topology and then notify the other devices. Therefore these algorithms will have time complexity Ω(n/k), where n is the number of nodes, and k is the maximum number of slaves in a scatternet. We proved that our algorithm, which consists of single phase, has O(log n) time complexity <ref type="bibr" target="#b13">[13]</ref>. However, as pointed out in <ref type="bibr" target="#b20">[20]</ref>, the role determination phase is much shorter than the coordinator election phase. Thus, the advantage of the O(log n) bound might not be relevant in practice unless the number of devices is very large. Moreover, we note that at least the phase two of <ref type="bibr" target="#b20">[20]</ref>'s BTCP protocol can be modified to run in O(log n) time, if the topological information is distributed along a tree. However, a tree-based distribution scheme will increase the complexity of the protocol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PRELIMINARIES</head><p>In this section we introduce some terminologies and performance measures for the scatternet formation problem.</p><p>Bluetooth devices share 79 channels of 1 Mhz bandwidth within the 2.45 GHz band. Frequency hopping is used to reduce interference and enhance security.</p><p>When two Bluetooth devices are connected, one of the devices acts as a master and the other device acts as a slave.</p><p>Any Bluetooth device can perform the role of a master and/or a slave.</p><p>A Bluetooth device can discover other devices by the inquiry process. A master in INQUIRY state hops 3,200 times per second according to a 32-channel inquiry hopping sequence. At the same time, a slave in INQUIRY SCAN state changes its listening frequency every 1.28 seconds, along the same sequence.</p><p>If the inquiry process succeeds, the master learns the address (which is unique for each Bluetooth device) and the clock of the slave. In the page process, the master in PAGE state contacts the slave with a 32-channel page hopping sequence, which is a function of the slave's address and (estimated) clock. Similarly, the PAGE SCAN slave hops with the period of 1.28s along the same sequence.</p><p>After the master and the slave are connected, they communicate with a hopping sequence over all 79 channels at the rate of 1600 hops per second. This hopping sequence is determined by the master's clock and address A piconet consists of 1 master and 1 to k slaves (k is 7 in Bluetooth 1.0b). All packets are exchanged between a master and its slaves within a piconet. There is no direct master-master or slave-slave communication. A device can be a slave in several piconets but be a master in only one piconet. The degree of a device is the number of piconets to which the device belongs. A device is unshared if its degree is 0 or 1. Otherwise, it is shared. A scatternet is a set of piconets connected through shared devices.</p><p>The problem of scatternet formation: How do a collection of isolated devices form a scatternet? The devices are isolated in the beginning, each device is not aware of the other devices. Therefore, the scatternet formation protocol must be distributed. We assume that the devices are in the communication range<ref type="foot" target="#foot_0">1</ref> of each other. This means that, potentially, any pair of devices can be connected directly.</p><p>A scatternet formation protocol has two important performance measures:</p><p>• time complexity -amount of time to form a scatternet. A scatternet must be formed as fast as possible to minimize the delay experienced by the users.</p><p>• message complexity -number of messages sent between the devices. This is important because Bluetooth devices usually operate with limited power. By reducing the number of messages sent, power consumption is conserved.</p><p>In addition, it is also crucial to have scatternets of good quality. It is not very useful to have scatternets that lead to poor network performance. Thus, we should aim to produce scatternet that facilitates inter-piconet communications. It is not easy to quantify the quality of a scatternet, but we believe the following quality measures are good indicators.</p><p>• number of piconets -a measurement of a scatternet's efficiency. Since all piconets share the same set of 79 channels, there will be more collisions when there are more piconets. As shown in <ref type="bibr" target="#b21">[21]</ref>, the burst failure rate increases with the number of piconets.</p><p>• maximum degree of the devices -the maximum number of piconets that any device belongs to. Since the piconets communicate through shared slaves, if a slave belongs to many piconets, then this slave could become the bottleneck of inter-piconet communications.</p><p>A shared slave has to be time multiplexed between the piconets that it belongs to. Therefore, a shared slave of high degree could become overloaded.</p><p>• network diameter -maximum number of hops between any pair of devices. This will provide us with an estimation of the maximum routing delay of the scatternet.</p><p>A good balance among the quality measures is desirable. Consider, for example, a star topology: a single "central" slave is shared by all piconets. In such a scatternet of n devices with every piconet containing k slaves, there are (n -1)/k piconets. Although the number of piconets is minimized, this scatternet probably would not perform very well in practice because the shared slave will be overwhelmed, unless the network is small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SCATTERNET FORMATION</head><p>In this section, we first present our scatternet formation protocol and then evaluate its performance and properties by simulations. The development of this algorithm was inspired by our research on resource discovery algorithms in general networks <ref type="bibr" target="#b12">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Algorithm</head><p>In the beginning, we are given a set of isolated but in-range devices. During the execution of the algorithm, the devices are partitioned into components. A component is a set of interconnected devices. A component can be a single device, a piconet, or a scatternet. There is one leader for each component. For a single-device component, the only member is the leader. For a piconet, the master is the leader. For a scatternet, one of the masters is the leader. When a leader retires, it stops being a leader and will be inactive for the rest of the scatternet formation algorithm. For any device v, let S(v) be the set of v's slaves. If v is not a master or has no slaves, then S(v) = ∅. For this algorithm, we assume that k ≥ 2.</p><p>In <ref type="bibr" target="#b13">[13]</ref>, we proved the following invariances for the algorithm:</p><p>• Each leader either has no slave, or has at least one unshared slave in its piconet.</p><p>• Each leader has fewer than k slaves in its piconet, i.e., |S(u)| &lt; k for any leader u.</p><p>All leaders execute procedure Main in the beginning of each round. We assume a constant φ, such that procedure Main and the procedures called by it can be completed in φ seconds. A good choice of φ can be found by simulations (see Section 5) and by prototyping. We assume that all leaders will call procedure Main at time t0 + iφ, for i = 0, 1, . . . , where t0 is the start time. Initially all devices are leaders.</p><p>In procedure Main, a leader calls Seek with probability p, 1/3 &lt; p &lt; 2/3. Otherwise, the leader calls Scan or asks an unshared slave to call Scan. During each round, only one device of each component will call Seek or Scan.</p><p>Main(leader u)</p><formula xml:id="formula_0">1 x ← a random number in [0, 1) 2 if x &lt; p (1/3 &lt; p &lt; 2/3) 3 then Seek(u) 4 else if S(u) = ∅ 5 then Scan(u) 6 else v ← an unshared slave of u 7 Scan(v)</formula><p>When a leader executes Seek, it tries to acquire a new slave (which is running Scan). However, the leader may not always succeed, because, in any given round, the number of devices running Scan can be fewer than the number of devices running Seek. Therefore, if a leader is not able to contact a slave after certain time, it should give up and run Main again in the next round. Similarly, Scan might also fail in any given round. Essentially, during each round, a matching is found between the Seek devices and Scan devices. The number of connections made (size of the matching) is the smaller of the number of Seek devices and the number of Scan devices.</p><formula xml:id="formula_1">Seek(u) 1 u performs INQUIRY 2 if a slave v is found 3 then u connects to slave v by PAGE 4 // S(u) ← S(u) ∪ {v} 5 Connected(u, v) Scan(v) 1 v performs INQUIRY SCAN 2 if v is contacted by a master u 3 then v waits for u in PAGE SCAN</formula><p>We note that Seek and Scan devices will go into PAGE and PAGE SCAN modes respectively after all inquiries are completed. The amount of time required is investigated in Section 5. In general, we make sure that each master is matched to only one slave, and vice versa. The details of this low-level protocol are discussed in Section 5.  • Any scatternet contains at least (n -1)/k piconets.</p><p>• The scatternet formation algorithm has O(log n) time complexity and O(n) message complexity.</p><p>The last leader will keep calling Main even after the scatternet is formed. It is because the leader cannot be certain that all devices are already connected unless it knows the total number of devices. We can let the leader stop after it has failed to find any device for several rounds. However, in a dynamic setting, this could prevent new devices from joining the scatternet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Simulation Results</head><p>In this subsection, we investigate the properties and performance of our scatternet formation protocol.</p><p>We simulate our scatternet formation algorithm in with simjava <ref type="bibr" target="#b2">[2]</ref>, a discrete event simulation package for Java. The probability p that each leader chooses to execute Seek is 1/2 in our simulations. Following Bluetooth 1.0b specification, we set k = 7. We start with 2, 4, and 8 nodes, and then increase by increments of 8 nodes, up to 128 nodes. This allows us to present the results against the number of nodes in both linear scale and logarithmic scale. All results are averages of 50 trials.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Scatternet Properties</head><p>First, we found that the maximum degree of the scatternet formed is 1 when there are fewer than 8 nodes and is 2 when there are at least 8 nodes. This means that the maximum degree is optimal except when there are 8 nodes, in which case a maximum degree of 1 is possible.</p><p>As we discussed in Section 3, it is important to minimize the number of piconets because piconets will interfere with each other. Figure <ref type="figure">7</ref> shows that the number of piconets formed lies between the protocol's theoretical upper bound (n -2)/(k -1) +1 and the universal lower bound (n -1)/k The largest difference between our simulation result and the lower bound is 2.2 piconets.</p><p>The network diameter of a scatternet captures the maximum routing delay between any pair of nodes in the scatternet. Although we did not have a theoretical analysis of the network diameter, Figure <ref type="figure">8</ref> shows that the network diameter is linear over the number of devices in log scale. This means that the network diameter is O(log n) (within the range of 2 to 128 devices).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Performance</head><p>First, it is crucial that the scatternet is formed as fast as possible, because this translates to the waiting time experienced by the users. In Figure <ref type="figure">9</ref>, we can see that the number of rounds required to form the scatternet is around 1.2 log 2 n + 2. This validates the O(log n) time complexity result. In Section 5, we will investigate how long it takes to complete each round.</p><p>Second, as most mobile Bluetooth devices are expected to run on batteries, it is important to minimize the number of messages sent in order to conserve energy. We can put the messages into three categories: Pages -Bluetooth PAGE and PAGE RESPONSE packets.</p><p>Algorithmic Messages -rest of the messages used by our scatternet formation algorithm.</p><p>Figure <ref type="figure" target="#fig_0">10</ref> presents the total number of the Algorithmic Messages, Inquiries, and Pages. We can verify that all three types of messages are linear against the number of devices. This agrees with the O(n) message complexity result.</p><p>At last, in Figure <ref type="figure" target="#fig_5">11</ref>, we can see that the maximum number of messages sent by any device is O(log n). This suggests that the power requirement of the unluckiest device is O(log n). A good candidate of such unlucky device is the last remaining leader in the protocol. Since the last leader is not retired, the number of messages sent by this leader is Ω(log n).</p><p>In the next section, we will find out how long it takes to finish one round of inquiry and page. We will also see how many packets are sent during the inquiry and page processes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">DEVICE DISCOVERY</head><p>In this section, we investigate the performance of a device discovery protocol. This protocol is used during each round of the scatternet formation algorithm.</p><p>As we discussed in Section 2, most previous work on Blue-   tooth connection establishment researched the problem of forming a single master-slave connection. However, in the scenario for scatternet formation, there are many devices trying to get connected at the same time, so the inquiry and page processes will interfere with each other. We call this the problem of device discovery when a set of in-range devices try to connect with each other. In the following, we discuss our approach and present the simulation results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Protocol</head><p>We present a simple randomized protocol for the problem of device discovery. This protocol is repeated during each round of the scatternet formation algorithm introduced in Section 4. We are given n devices that are not aware of each other. Our goal is to establish as many connections as possible. We are not concerned with exactly which of the devices are connected.</p><p>First, each device independently decides to be a Seek node (with probability p) or a Scan node (with probability 1-p).</p><p>The protocol contains two phases -the inquiry phase and the page phase. In the inquiry phase, all the Scan devices stay in the INQUIRY SCAN state. Each Seek device will try to contact a Scan device. However, a Seek device may not always succeed in finding a slave because the number of Scan devices can be fewer than the number of Seek devices. Therefore, if a Seek device is not able to contact a slave after certain amount of time, it will simply give up. Similarly, a Scan device might also fail to be connected. In the page phase, the already paired devices are connected with PAGE and PAGE SCAN.</p><p>This protocol makes sure that each Seek device is connected to at most one Scan device and each Scan device is connected to at most one Seek device. In other words, we obtain a one-to-one matching between the Scan devices and Seek devices. The number of connections established is the smaller of the number of Seek devices and the number of Scan devices.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Simulation Results</head><p>We also use simjava <ref type="bibr" target="#b2">[2]</ref> for the simulations of this protocol. IBM's BlueHoc simulator <ref type="bibr" target="#b5">[5]</ref> is not used because we started our implementation before BlueHoc was released in public. Frequency hopping sequences are implemented and collisions are detected. Since the overall time scale of the simulation is small, we did not implement clock drift. We present results up to 128 devices. The results are averages of 10 trials.</p><p>Figure <ref type="figure" target="#fig_6">12</ref> shows the running time of the inquiry phase, with three different master-to-slave ratios. The number of masters is distributed binomially. For number of nodes more than 8 and p = 1/2, the 25%-75% split and 75%-25% split encompass at least 2 standard deviations around the expected number of masters. We observe that the inquiry time of the 50%-50% split case increases sharply when there are around 64 devices. Since all Seek devices follow the same inquiry hopping sequence (the phase depends on the device's clock), packet collision is a major problem when there are many devices. From the collision graph (Figure <ref type="figure" target="#fig_7">13</ref>) on the 50%-50% split case, we can deduce that collisions start to hurt the performance severely when there are around 64 devices.   In Figure <ref type="figure" target="#fig_8">14</ref>, we observe that, for up to 64 devices, the time consumed by the page phase is below 0.02 seconds, which is insignificant compared to the time required for inquiry. This is because the Seek devices already know the address and clock of their target Scan devices, thus they are able to contact the Scan devices quickly. In addition, since their hopping sequences are different, the amount of collisions is much lower in this case. Therefore, the total time φ required by each round of the scatternet formation algorithm can approximated by the inquiry time of the largest number of devices to be supported. For example, if we want to support 32 devices, then a round-time φ of 1.4 seconds should be sufficient.</p><p>At last, Figure <ref type="figure" target="#fig_9">15</ref> shows the total number of packets sent. Again the number of packets sent rises sharply around the 64-device case, due to collisions. However, we can see that the total number of packets is around (10000/32)n for n = 32, 64, 128. This means that the total number of packets sent is still roughly linear of the number of devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">OVERALL PERFORMANCE</head><p>We now estimate the overall performance of our protocol from the results of Subsection 4.2 and Subsection 5.2.</p><p>In Subsection 4.2, we learned that the number of Inquiries, Pages, and Algorithmic Messages all increase linearly with the number of devices. And in Subsection 5.2, we found that the number of packets sent during a single round of the protocol is also linear of the number of devices. Therefore, we can conclude that overall message complexity of the protocol is linear. This means that the average power consumed by a device remains constant when the number of devices increase. In Subsection 4.2, we also showed that the number of Inquiries, Pages, and Algorithmic Messages of any single device increases logarithmically. This means that our protocol does not cause a very high load on any single device.</p><p>The issue of overall time requirement is more complicated. For an upper bound on the total time taken by the protocol, we can multiply the number of rounds (Figure <ref type="figure">9</ref>) by the time required for each round (Figure <ref type="figure" target="#fig_6">12</ref>). For example, we found that a timeout value of 1.4s is sufficient for each round up to 32 devices, and that the protocol takes about 7.7 rounds to form the piconet. This means that the total time requirement is about 7.7 × 1.4 = 10.78 seconds. Similarly, the total time required for 16 devices and 64 devices are at most 9.92 seconds and 29.94 seconds respectively.</p><p>The overall time requirement is longer than that of BTCP <ref type="bibr" target="#b20">[20]</ref>. However, we believe the actual time requirement of our protocol can be made much shorter because of the following observations:</p><p>• The worst-case per-round time happens when there is an even split between the masters and slaves. However, if this happens a lot, the total number of rounds required is smaller. For example, if there is an even split every round, the protocol will only need log 2 32 = 5 rounds to form a scatternet.</p><p>• The number of active leaders decreases rapidly. For example, the last round of the protocol will have only two leaders and thus can be finished in a shorter time.</p><p>In general, as suggested by <ref type="bibr" target="#b18">[18]</ref>, we need "cross-layer" optimization to improve the overall performance. In particular, an asynchronous approach should be studied: such that once a connection is established, the involved parties can proceed with the procedure Connected. In practice, it is not necessary for all devices to execute Connected at the same time. The synchronized nature of the current protocol is useful for the theoretical analyses, but it should be possible to consider and evaluate an asynchronous version of the protocol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUDING REMARKS</head><p>In this paper, we introduced a Bluetooth scatternet formation protocol with O(log n) time complexity and O(n) message complexity. These bounds are validated by our simulation results</p><p>We have shown that the algorithm produces scatternet with some desirable properties: small number of piconets for minimizing inter-piconet interference, and low device degrees for avoiding network bottlenecks. In addition, according to the simulations, the diameter of the scatternet, which corresponds to the maximum routing distance between nodes, is O(log n). At last, we also demonstrated that no single device is particularly exhausted by the protocol.</p><p>In the following, we suggest three directions of future work.</p><p>When there are many devices, collisions among INQUIRY devices can adversely affect the performance. In particular, if two INQUIRY devices happen to have their clocks in phase so that their inquiry sequences are synchronized, then their inquiry packets will collide repeatedly. This effect was observed in our simulations in those cases with large numbers of devices. It is conceivable that this problem can be alleviated if the INQUIRY devices back off randomly during a heavy-collision situation. We note that this back-off by the INQUIRY device is not related to the random back-off by an INQUIRY SCAN device after an inquiry packet is received, as specified in Bluetooth 1.0b.</p><p>In certain situations, some devices might be out of range of one another. The protocol has to be modified for such an environment. Basically, we need to check for feasibility before each Move procedure is executed. Depending on the connectivity of the devices, the piconets are likely to be of smaller sizes, implying a larger number of piconets.</p><p>Our protocol can be easily extended to work with dynamic environments (with devices joining and leaving the scatternet) and to support fault tolerance. Our current protocol already handles the events of devices joining. The new devices can simply start as leaders and will discover or be discovered by other devices. Additional work is required to deal with the case of devices leaving or failing. We can give an outline of a possible solution:</p><p>• If a master fails (or leaves the network), then a new master can be elected from the slaves. If the failed master was shared, then the new master should become a leader and merge with the rest of the scatternet by the protocol.</p><p>• If a shared slave fails, its master should become a leader again and then it will be connected to the rest of the scatternet by the protocol.</p><p>• Nothing needs to be done when an unshared slave fails, unless it is the only unshared slave of an active leader.</p><p>• In general, if we end up with a leader u with no unshared slave, then this leader has to disconnect from its shared slaves. Other masters connected to this leader u through the shared slaves should now become leaders again. This will allow the protocol to proceed as usual.</p><p>Fortunately, this expensive reorganization should be a rare event.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: A Bluetooth scatternet.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Lines 5-7 in procedure Connected for k = 7.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Lines 11-12 (case |S(u) ∪ S(w)| + 1 &lt; k) in procedure Connected for k = 7.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Figure 8: Network diameter of the scatternet formed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :Figure 10 :</head><label>710</label><figDesc>Figure 7: Number of piconets in the scatternet formed, compared to upper bound (n -2)/(k -1) + 1 and lower bound (n -1)/k , where k = 7.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Maximum number of Algorithmic Messages, Pages, and Inquiries sent by any single node.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Running time of the inquiry phase with three master-slave ratios.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Percentage of packet collisions (over all packages sent) when there are 50% masters and 50% slaves.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Running time of the page phase with three master-slave ratios.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: Total number of packages sent when there are 50% masters and 50% slaves.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>10m to 100m in Bluetooth 1.0b</p></note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>* This work is supported in part by the MIT Auto-ID Center</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The algorithm does not minimize the absolute number of messages passed between devices in all circumstances. The current design is a compromise between simplicity of the algorithm and the constant factors of the time and message complexities of the algorithm. Moreover, Section 5 will show that most of the packets are sent during the inquiry processes.</p><p>We summarize the theoretical results proved in <ref type="bibr" target="#b13">[13]</ref>:</p><p>• The scatternet formed by the algorithm has maximum degree two.</p><p>• The scatternet formed by the algorithm has at most (n -2)/(k -1) + 1 piconets.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>References</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://www.bluetooth.com" />
		<title level="m">The Bluetooth Special Interest Group</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<ptr target="http://www.dcs.ed.ac.uk/home/hase/simjava/" />
		<title level="m">simjava</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Clustering algorithms for wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">Alok</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manika</forename><surname>Kapoor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lakshmi</forename><surname>Ramachandran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abhinanda</forename><surname>Sarkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Workshop on Discrete Algorithms and Methods for Mobile Computing and Communications</title>
		<meeting>the 4th International Workshop on Discrete Algorithms and Methods for Mobile Computing and Communications<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
			<biblScope unit="page" from="54" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">-Id</forename><surname>Mit Auto</surname></persName>
		</author>
		<author>
			<persName><surname>Center</surname></persName>
		</author>
		<ptr target="http://auto-id.mit.edu" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Bluetooth performance evaluation tool</title>
		<author>
			<persName><surname>Bluehoc</surname></persName>
		</author>
		<ptr target="http://oss.software.ibm.com/developerworks/opensource/bluehoc/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">Jennifer</forename><surname>Bray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charles</forename><forename type="middle">F</forename><surname>Sturman</surname></persName>
		</author>
		<title level="m">Bluetooth: Connect Without Cables</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">A performance comparison of multi-hop wireless ad hoc network routing protocols. Mobile Computing and Networking</title>
		<author>
			<persName><forename type="first">Josh</forename><surname>Broch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yih-Chun</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jorjeta</forename><surname>Jetcheva</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="85" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Simulation-based performance evaluation of routing protocols for mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">R</forename><surname>Samir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jiangtao</forename><surname>Casta Neda</surname></persName>
		</author>
		<author>
			<persName><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mobile Networks and Applications</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="179" to="189" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Bluetooth -the universal radio interface for ad hoc, wireless connectivity</title>
		<author>
			<persName><forename type="first">Jaap</forename><surname>Haartsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ericsson Review</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="110" to="117" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Short range radio based ad-hoc networking: performance and properties</title>
		<author>
			<persName><forename type="first">P</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Korner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Elg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Svennarp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications</title>
		<meeting>the IEEE International Conference on Communications</meeting>
		<imprint>
			<date type="published" when="1999">1999. 1999</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1414" to="1420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Performance of a new Bluetooth scatternet formation protocol</title>
		<author>
			<persName><forename type="first">Ching</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Amar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai-Yeung</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><surname>Siu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc)</title>
		<meeting>the ACM Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc)<address><addrLine>Long Beach, California, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10">2001. October 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An O(log n) randomized resource discovery algorithm</title>
		<author>
			<persName><forename type="first">Ching</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai-Yeung</forename><surname>Siu</surname></persName>
		</author>
		<idno>FIM/110.1/DLSIIS/2000</idno>
		<ptr target="http://list.mit.edu/~ching/" />
	</analytic>
	<monogr>
		<title level="m">Brief Announcements of the 14th International Symposium on Distributed Computing</title>
		<imprint>
			<date type="published" when="2000-10">October 2000</date>
			<biblScope unit="page" from="5" to="8" />
		</imprint>
		<respStmt>
			<orgName>Technical University of Madrid</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Bluetooth scatternet formation algorithm</title>
		<author>
			<persName><forename type="first">Ching</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai-Yeung</forename><surname>Siu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Ad Hoc Wireless Networks</title>
		<meeting>the IEEE Symposium on Ad Hoc Wireless Networks<address><addrLine>San Antonio, Texas, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-11">2001. November 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Ad-hoc network formation using Bluetooth scatternets. Master&apos;s thesis</title>
		<author>
			<persName><forename type="first">Amar</forename><surname>Mehta</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-06">June 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Performance aspects of Bluetooth scatternet formation</title>
		<author>
			<persName><surname>Gy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Miklos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Racz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Turanyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Valko</surname></persName>
		</author>
		<author>
			<persName><surname>Johansson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The First Annual Workshop on Mobile Ad Hoc Networking and Computing</title>
		<meeting>The First Annual Workshop on Mobile Ad Hoc Networking and Computing</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Bluetooth Revealed: The Insider&apos;s Guide to an Open Specification for Global Wireless Communications</title>
		<author>
			<persName><forename type="first">Brent</forename><forename type="middle">A</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chatschik</forename><surname>Bisdikian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">Charles</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<title level="m">Ad Hoc Networking</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Arguments for cross-layer optimizations in Bluetooth scatternets</title>
		<author>
			<persName><forename type="first">Bhaskaran</forename><surname>Raman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pravin</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Srinivasan</forename><surname>Seshan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Symposium on Applications and the Internet</title>
		<meeting>Symposium on Applications and the Internet</meeting>
		<imprint>
			<date type="published" when="2001">2001. 2001</date>
			<biblScope unit="page" from="176" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Proximity awareness and fast connection establishment in Bluetooth</title>
		<author>
			<persName><forename type="first">Theodoros</forename><surname>Salonidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pravin</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leandros</forename><surname>Tassiulas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First Annual Workshop on Mobile and Ad Hoc Networking and Computing</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="141" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Distributed topology construction of Bluetooth personal area networks</title>
		<author>
			<persName><forename type="first">Theodoros</forename><surname>Salonidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pravin</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Leandros</forename><surname>Tassiulas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Lamaire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twentieth Annual Joint Conference of the IEEE Computer and Communications Societies</title>
		<meeting>the Twentieth Annual Joint Conference of the IEEE Computer and Communications Societies</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Considerations on link and system throughput of Bluetooth networks</title>
		<author>
			<persName><forename type="first">Stefan</forename><surname>Zurbes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th IEEE International Symposium on Personal, Indoor and Mobile Radio Communications</title>
		<meeting>the 11th IEEE International Symposium on Personal, Indoor and Mobile Radio Communications</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1315" to="1319" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
