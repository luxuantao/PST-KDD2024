<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Distributed Randomized Algorithms for the PageRank Computation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010-09-09">September 09, 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Member, IEEE</roleName><forename type="first">Hideaki</forename><surname>Ishii</surname></persName>
							<email>ishii@dis.titech.ac.jp</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computational Intelligence and Systems Science</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
								<address>
									<postCode>226-8502</postCode>
									<settlement>Yokohama</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Fellow, IEEE</roleName><forename type="first">Roberto</forename><surname>Tempo</surname></persName>
							<email>roberto.tempo@polito.it</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computational Intelligence and Systems Science</orgName>
								<orgName type="institution">Tokyo Institute of Technology</orgName>
								<address>
									<postCode>226-8502</postCode>
									<settlement>Yokohama</settlement>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Qu</forename><forename type="middle">H</forename><surname>Ishii</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">IEIIT-CNR</orgName>
								<orgName type="institution">Politecnico di Torino</orgName>
								<address>
									<postCode>10129</postCode>
									<settlement>Torino</settlement>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Distributed Randomized Algorithms for the PageRank Computation</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2010-09-09">September 09, 2010</date>
						</imprint>
					</monogr>
					<idno type="MD5">BA7C9B7066486E9F7B596B0BC2A79654</idno>
					<idno type="DOI">10.1109/TAC.2010.2042984</idno>
					<note type="submission">received November 25, 2008; revised July 15, 2009 and November 30, 2009; accepted January 25, 2010. First published February 17, 2010; current version</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T16:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Distributed computation</term>
					<term>multi-agent consensus</term>
					<term>PageRank algorithm</term>
					<term>randomization</term>
					<term>search engines</term>
					<term>stochastic matrices</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In the search engine of Google, the PageRank algorithm plays a crucial role in ranking the search results. The algorithm quantifies the importance of each web page based on the link structure of the web. We first provide an overview of the original problem setup. Then, we propose several distributed randomized schemes for the computation of the PageRank, where the pages can locally update their values by communicating to those connected by links. The main objective of the paper is to show that these schemes asymptotically converge in the mean-square sense to the true PageRank values. A detailed discussion on the close relations to the multi-agent consensus problems is also given.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>I N the last decade, search engines have become widely used indispensable tools for searching the web. For such engines, it is essential that the search results not only consist of web pages related to the query terms, but also rank the pages properly so that the users quickly have access to the desired information. The PageRank algorithm at Google is one of the successful algorithms that quantify and rank the importance of each web page. This algorithm was initially proposed in <ref type="bibr" target="#b7">[8]</ref>, and an overview can be found in, e.g., <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b24">[25]</ref>.</p><p>One of the main features of the PageRank algorithm is that it is based solely on the link structure inherent in the web. The underlying key idea is that links from important pages make a page more important. More concretely, each page is considered to be voting the pages to which it is linked. Then, in the ranking of a page, the total number of votes as well as the importance of the voters are reflected. This problem is mathematically formulated as finding the eigenvector corresponding to the largest eigenvalue of a certain stochastic matrix associated with the web structure.</p><p>For the PageRank computation, a critical aspect is the size of the web. The web is said to be composed of over 8 billion pages, and its size is still growing. Currently, the computation is performed centrally at Google, where the data on the whole web structure is collected by crawlers automatically browsing the web. In practice, the class of algorithms that can be applied is limited. In fact, the basic power method is employed, but it is reported that this computation takes about a week <ref type="bibr" target="#b24">[25]</ref>. This clearly necessitates more efficient computational methods.</p><p>In this regard, several approaches have recently been proposed. In <ref type="bibr" target="#b21">[22]</ref>, an adaptive computation method is developed, which classifies web pages into groups based on the speed of convergence to the PageRank values and allocates computational resources accordingly. Another line of research is based on distributed approaches, where the computation is performed on multiple servers communicating to each other. For example, Monte Carlo methods are used in <ref type="bibr" target="#b3">[4]</ref>, while the work in <ref type="bibr" target="#b37">[38]</ref> utilizes the block structure of the web to apply techniques from the Markov chain literature. In <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b23">[24]</ref>, methods based on the so-called asynchronous iterations <ref type="bibr" target="#b4">[5]</ref> in numerical analysis are discussed.</p><p>In this paper, we follow the distributed approach and, in particular, develop a randomized algorithm for the PageRank computation; for recent advances on probabilistic approaches in systems and control, see <ref type="bibr" target="#b33">[34]</ref>. This algorithm is fully distributed and has three main features as follows: First, in principle, each page can compute its own PageRank value locally by communicating with the pages that are connected by direct links. That is, each page exchanges its value with the pages that it is linked to and those linked to it. Second, the pages make the decision to initiate this communication at random times which are independent from page to page. This means that, in its implementation, there is neither a fixed order among the pages nor a centralized agent in the web that determines the pages to update their values. Third, the computation required for each page is very mild.</p><p>The main result of the paper shows that the algorithm converges to the true PageRank values in the mean-square sense. This is achieved by computing the time average at each page. From a technical viewpoint, an important characteristic of the approach is that the stochasticity of the matrix in the original problem is preserved and exploited. We first propose a basic distributed update scheme for the pages and then extend this into two directions to enhance its performance and flexibility for implementation. It is further noted that in <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b19">[20]</ref>, this approach has been generalized to incorporate failures in the communication as well as aggregation of the web structure. In <ref type="bibr" target="#b17">[18]</ref>, a related result on finding the variations in the PageRank values when the web data may contain errors is given.</p><p>We emphasize that the approach proposed here is particularly motivated by the recent research on distributed consensus, agreement, and flocking problems in the systems and control community; see, e.g., <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b20">[21]</ref>, <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b25">[26]</ref>- <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b29">[30]</ref>, <ref type="bibr" target="#b30">[31]</ref>, <ref type="bibr" target="#b32">[33]</ref>, <ref type="bibr" target="#b34">[35]</ref>- <ref type="bibr" target="#b36">[37]</ref>. For additional details, we refer to <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b4">[5]</ref>. Among such problems, our approach to PageRank computation is especially related to the consensus, where multiple agents exchange their values with neighboring agents so that they obtain consensus, i.e., all agents reach the same value. The objective is clearly different from that of the PageRank problem, which is to find a specific eigenvector of a stochastic matrix via the power method. However, the recursion appearing in the consensus algorithm is exactly in the same form as the one for our distributed PageRank computation except that the class of stochastic matrices is slightly different. These issues will be discussed further.</p><p>The organization of this paper is as follows: In Section II, we present an overview of the PageRank problem. The distributed approach is introduced in Section III, where we propose a basic scheme and prove its convergence. Its relation with multi-agent consensus problems is discussed in Section IV. We then develop two extensions of the basic distributed algorithm: One in Section V is to improve the rate of convergence by allowing multiple pages to simultaneously update and the other in Section VI to reduce the communication load among the pages. The proposed algorithm is compared with an approach known as asynchronous iteration from the field of numerical analysis in Section VII. Numerical examples are given in Section VIII to show the effectiveness of the proposed schemes. We conclude the paper in Section IX. Part of the material of this paper has appeared in a preliminary form in <ref type="bibr" target="#b16">[17]</ref>.</p><p>Notation: For vectors and matrices, inequalities are used to denote entry-wise inequalities: For , implies for and ; in particular, we say that the matrix is nonnegative if and positive if</p><p>. A probability vector is a nonnegative vector such that . Unless otherwise specified, by a stochastic matrix, we refer to a column-stochastic matrix, i.e., a nonnegative matrix with the property that for . Let be the vector with all entries equal to 1 as . Similarly, is the matrix with all entries being 1. For , we denote by the vector containing the absolute values of the corresponding entries of . The norm for vectors is the Euclidean norm. The spectral radius of the matrix is denoted by . We use for the identity matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. THE PAGERANK PROBLEM</head><p>In this section, we provide a brief introductory description of the PageRank problem; this material can be found in, e.g., <ref type="bibr" target="#b7">[8]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b24">[25]</ref>.</p><p>Consider a network of web pages indexed by integers from 1 to . This network is represented by the directed graph . Here, is the set of vertices corresponding to the web page indices while is the set of edges representing the links among the pages. The vertex is connected to the vertex by an edge, i.e.,</p><p>, if page has an outgoing link to page , or in other words, page has an incoming link from page . To avoid trivial situations, we assume . The objective of the PageRank algorithm is to provide some measure of importance to each web page. The PageRank value, or simply the value, of page is a real number in [0, 1]; we denote this by . The values are ordered such that implies that page is more important than page .</p><p>The basic idea in ranking the pages in terms of the values is that a page having links from important pages is also important. This is realized by determining the value of one page as a sum of the contributions from all pages that have links to it. In particular, the value of page is defined as where , i.e., this is the index set of pages linked to page , and is the number of outgoing links of page . It is customary to normalize the total of all values so that . Let the values be in the vector form as . Then, from what we described so far, the PageRank problem can be restated as <ref type="bibr" target="#b0">(1)</ref> where the matrix , called the link matrix, is given by if , otherwise.</p><p>(</p><p>Note that the value vector is a nonnegative unit eigenvector corresponding to the eigenvalue 1 of the nonnegative matrix . In general, for this eigenvector to exist and to be unique, it is sufficient that the web as a graph is strongly connected <ref type="bibr" target="#b14">[15]</ref>. 1  However, the web is known not to be strongly connected. Thus, the problem is slightly modified as follows. 2  First, note that in the real web, the so-called dangling nodes, which are pages having no links to others, are abundant. Such pages can be found, e.g., in the form of PDF document files having no outgoing links. These pages introduce zero columns into the link matrix. To simplify the discussion, we redefine the graph and thus the matrix by bringing in artificial links for all dangling nodes (e.g., links back to the pages having links to a dangling node). As a result, the link matrix becomes a stochastic matrix, that is, for each . This implies that there exists at least one eigenvalue equal to 1.</p><p>To emphasize the changes in the links that we have just made, we state the following as an assumption.</p><p>Assumption 2.1: The link matrix given in ( <ref type="formula" target="#formula_0">2</ref>) is a stochastic matrix.</p><p>Next, to guarantee the uniqueness of the eigenvalue 1, a modified version of the values has been introduced in <ref type="bibr" target="#b7">[8]</ref> as follows: Let be a parameter such that , and let the modified link matrix be defined by</p><p>(3)</p><p>1 A directed graph is said to be strongly connected if for any two vertices i; j 2 V, there is a sequence of edges which connects i to j . In terms of the link matrix A, strong connectivity of the graph is equivalent to A being irreducible. 2 In fact, in the consensus literature, it is known that the eigenvalue 1 of a row-stochastic matrix is simple iff the underlying graph has at least one globally reachable node; this means that there is a node from which each node in the graph can be reached via a sequence of edges (see, e.g., <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b27">[28]</ref>, <ref type="bibr" target="#b30">[31]</ref>). For our purpose, it is indeed possible to provide the column-stochastic counterpart of globally reachable nodes, but the real web does not possess this property either. In the original algorithm in <ref type="bibr" target="#b7">[8]</ref>, a typical value for is chosen as ; we use this value throughout this paper. <ref type="foot" target="#foot_0">3</ref> Notice that is a positive stochastic matrix. By the Perron theorem <ref type="bibr" target="#b14">[15]</ref>, this matrix is primitive;<ref type="foot" target="#foot_1">4</ref> in particular, the eigenvalue 1 is of multiplicity 1 and is the unique eigenvalue of maximum modulus (i.e., with the maximum absolute value). Furthermore, the corresponding eigenvector is positive. Hence, we redefine the value vector by using in place of in (1) as follows. Definition 2.2: The PageRank value vector is given by ( <ref type="formula">4</ref>)</p><p>As mentioned in the Introduction, due to the large dimension of the link matrix , the computation of the eigenvector corresponding to the eigenvalue 1 is difficult. The solution that has been employed in practice is based on the power method. That is, the value vector is computed through the recursion <ref type="bibr" target="#b4">(5)</ref> where and the initial vector is a probability vector. The second equality above follows from the fact , . For implementation, the form on the far right-hand side is important, exhibiting that multiplication is required using only the sparse matrix , and not the dense matrix .</p><p>Based on this method, we can asymptotically find the value vector as shown below; see, e.g., <ref type="bibr" target="#b14">[15]</ref>.</p><p>Lemma 2.3: In the update scheme (5), for any initial state that is a probability vector, it holds that as . We now comment on the convergence rate of this scheme. Denote by and the largest and the second largest eigenvalues of in magnitude. Then, for the power method applied to , the asymptotic rate of convergence is exponential and depends on the ratio . Since is a positive stochastic matrix, we have and . Furthermore, it is shown in <ref type="bibr" target="#b24">[25]</ref> that the structure of the link matrix leads us to the bound <ref type="bibr" target="#b5">(6)</ref> We next provide a simple example for illustration. Example 2.4: Consider the web with four pages shown in Fig. <ref type="figure" target="#fig_0">1</ref>. As a graph, this web is strongly connected, and there are no dangling nodes. The link matrix and the modified link matrix can easily be constructed by ( <ref type="formula" target="#formula_0">2</ref>) and ( <ref type="formula">3</ref>), respectively, as where we used the value from <ref type="bibr" target="#b7">[8]</ref>. Then, the value vector can be computed as . Notice that page 2 has the largest value since it is linked from three pages while page 1, which has only one link to it, has the smallest value. On the other hand, pages 3 and 4 have the same number of incoming links, but page 4 has a larger value. This is because page 4 has more outgoing links, and thus it receives more contribution from page 3 than what it gives back.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. A DISTRIBUTED RANDOMIZED APPROACH</head><p>In this section, we propose a distributed approach to compute the value vector .</p><p>Consider the web from the previous section. The basic protocol of the scheme is as follows: At time , page initiates its PageRank value update (i) by sending the value of page to the pages that are linked and (ii) by requesting the values from the pages that are linked to page . All pages involved in this process renew their values based on the latest available information.</p><p>To implement the scheme in a distributed manner, we assume that the pages taking the update action are determined in a random manner. This is specified by the random process , . If at time , , then page initiates an update action by communicating and exchanging the values with the pages connected by incoming and outgoing links. Specifically, is assumed to be i.i.d., and its probability distribution is given by <ref type="bibr" target="#b6">(7)</ref> This means that each page takes the update action with equal probability. In principle, this scheme may be implemented without requiring a centralized decision maker or any fixed order among the pages.</p><p>In particular, consider the distributed update scheme in the following form: <ref type="bibr" target="#b7">(8)</ref> where is the state whose initial state is a probability vector, is the mode of the system, and , , are called the distributed link matrices and are to be determined; is a parameter replacing in the centralized scheme <ref type="bibr" target="#b4">(5)</ref>.</p><p>The objective here is to design this distributed update scheme by finding the appropriate link matrices and the parameter so that the PageRank values are computed through the time average of the state . Let be the average of the sample path as <ref type="bibr" target="#b8">(9)</ref> We say that, for the distributed update scheme, the PageRank value is obtained through the time average if, for each initial state that is a probability vector, converges to in the mean-square sense as follows: <ref type="bibr" target="#b9">(10)</ref> This type of convergence is called ergodicity for stochastic processes <ref type="bibr" target="#b28">[29]</ref>.</p><p>In what follows, we develop the distributed update scheme of (8). The main result is presented as Theorem 3.4 showing the convergence of the scheme. The design consists of two steps, one for the link matrices and then the parameter . In later sections, this approach will be extended to improve the convergence rate and the necessary communication load.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Distributed Link Matrices and Their Average</head><p>The first step in the development is to introduce the distributed link matrices. For each , the matrix is obtained as follows: (i) The th row and column coincide with those of ; (ii) the remaining diagonal entries are equal to , , ; and (iii) all the remaining entries are zero. More formally, we have if if otherwise, <ref type="bibr" target="#b10">(11)</ref> It follows that these matrices are stochastic because the original link matrix possesses this property. As we shall see later, this property indeed is critical for the convergence of the scheme. To clarify the properties of the link matrices just introduced, we consider the simpler update scheme <ref type="bibr" target="#b11">(12)</ref> where is the state with being a probability vector, and the mode is specified in <ref type="bibr" target="#b6">(7)</ref>. In particular, we focus on its average dynamics. The mean of the state follows the recursion , where is the average matrix and is the expectation with respect to the random process . Hence, we now inspect this matrix . Due to the probability distribution of in ( <ref type="formula">7</ref>), we have <ref type="bibr" target="#b12">(13)</ref> It is obvious that is a stochastic matrix since all are stochastic.</p><p>The following lemma shows some properties of this matrix that will be useful later.</p><p>Lemma 3.2: For the average matrix given in ( <ref type="formula">13</ref>), we have the following: i) . ii) There exists a vector which is an eigenvector corresponding to the eigenvalue 1 for both matrices and .</p><formula xml:id="formula_1">Proof: i) By definition of , we have if , if .</formula><p>By definition of , we have and . Thus, the expression for follows. ii) From (i), we have . This implies that every eigenvector of the link matrix associated with the eigenvalue 1 is also an eigenvector of the average matrix for the same eigenvalue.</p><p>The lemma above provides some justification for the proposed distributed approach. That is, even though the matrices and have different structures, they share an eigenvector for the eigenvalue 1, which corresponds to the PageRank vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Mean-Square Convergence of the Distributed Update Scheme</head><p>As in the case with the original link matrix , for the average matrix , the eigenvector corresponding to the eigenvalue 1 may not be unique. We follow an argument similar to that in Section II and introduce the modified versions of the distributed link matrices.</p><p>Since the link matrices are stochastic, we can rewrite the distributed update scheme in (8) as <ref type="bibr" target="#b13">(14)</ref> where the modified distributed link matrices are given by <ref type="bibr" target="#b14">(15)</ref> This expression is derived by the relation because in (8) is a probability vector for each . Note that are positive stochastic matrices.</p><p>Similarly to the argument on the link matrices above, the problem at this second step is as follows: We shall find the modified link matrices by choosing the parameter such that their average and the link matrix from (3) share an eigenvector for the eigenvalue 1. Since such an eigenvector is unique for , it is necessarily equal to the value vector (see ( <ref type="formula">4</ref>)). Let be the mean of the state of the system <ref type="bibr" target="#b13">(14)</ref>. Its dynamics is expressed as <ref type="bibr" target="#b15">(16)</ref> where and the average matrix is given by . A simple way of defining would be to let as in the case with ; however, it can be shown that there is no clear relation between the original matrix and the average matrix such as that between and as we have seen in Lemma 3.2. Instead, we take the parameter as <ref type="bibr" target="#b16">(17)</ref> For the value used in this paper, we have . For this choice of , the next result holds. Lemma 3.3: For the parameter given in ( <ref type="formula">17</ref>), we have the following: i) and . ii) . iii) For the average matrix , the eigenvalue 1 is simple and is the unique eigenvalue of maximum modulus. The value vector is the corresponding eigenvector. Proof: i) By the assumptions and , in ( <ref type="formula">17</ref>) is positive. Also, we have . Hence, , that is, . ii) This can be shown by direct calculation as follows:</p><p>iii) From (ii), we have . Hence, and share an eigenvector for the eigenvalue 1. However, both and are positive stochastic matrices. Therefore, by the Perron theorem <ref type="bibr" target="#b14">[15]</ref>, for these matrices, the eigenvalue 1 is of multiplicity 1 and is the unique one having the maximum magnitude. Moreover, by (4), the corresponding eigenvector coincides with .</p><p>From (iii) in the lemma above, it follows that the value vector can be obtained by the power method, i.e., by the average system in (16) as , . Hence, in an average sense, the distributed update scheme asymptotically provides the correct values. It is interesting to observe that this can be achieved though the original link matrix does not explicitly appear in the scheme. In fact, an eigenvector of the matrix is computed through randomly switching among the distributed link matrices .</p><p>However, this property turns out not to be sufficient to guarantee convergence of to the true value . From Lemma A.4 (ii) in the Appendix, we can show that for any sequence , there exists a sequence of probability vectors such that, for any , it holds that as . The vector and hence the state in general do not converge. This can be seen in Example 3.1 when, e.g., page 1 initiates an update ; the update for page 4 is given by , showing that cannot stay at its equilibrium value. Therefore, in the distributed approach, we resort to computing the time average of the states. The following theorem is the main result of this section. It shows that the time average indeed converges to the value vector in the mean-square sense.</p><p>Theorem 3.4: In the distributed update scheme in ( <ref type="formula">14</ref>), the PageRank value is obtained through the time average in (9) as , . The theorem highlights an ergodic property in the proposed update scheme. It can be shown by general Markov process results in, e.g., <ref type="bibr" target="#b10">[11]</ref>. For completeness, however, a proof more specific to the current setup is provided in Appendix B; it employs tools for stochastic matrices and moreover is useful for an extension given in Section VI. Regarding the convergence of this algorithm, we see from (53) in the proof that it is of order and moreover depends on the size of linearly through the parameter in <ref type="bibr" target="#b16">(17)</ref>.</p><p>Several remarks are in order. In practice, each page needs to communicate with the pages that are directly connected by incoming or outgoing links. We emphasize that the recursion to be used is <ref type="bibr" target="#b7">(8)</ref> and not the equivalent expression of ( <ref type="formula">14</ref>); in the latter case, the link matrices are positive, which can imply that the values of all pages are required for an update of a page. Nevertheless, as can be seen in ( <ref type="formula">8</ref>), the link matrices are sparse. Thus, at time , communication is required only among the pages corresponding to the nonzero entries in . Each page then performs weighted addition of its own value, the values just received, and the extra term . Consequently, the amount of computation required at each page is limited at any time.</p><p>Implementation issues such as how web pages can exactly make local computations are outside the scope of this paper. However, it is clear that certain regulations may be necessary so that page owners cooperate with the search engine and the PageRank values computed by them can be trusted. <ref type="foot" target="#foot_2">5</ref> Another issue concerning reliability of the ranking is that of link spam, i.e., links added to enhance the PageRank of certain pages on purpose; a method to detect such spamming is studied in, e.g., <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. RELATIONS TO CONSENSUS PROBLEMS</head><p>In this section, we discuss the relation between the two problems of PageRank and consensus. First, we describe a stochastic version of the consensus problem. Such problems have been studied in, e.g., <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b13">[14]</ref>, <ref type="bibr" target="#b32">[33]</ref>, <ref type="bibr" target="#b35">[36]</ref>; see also <ref type="bibr" target="#b34">[35]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Consider a set of agents having scalar values. The network of agents is represented by the directed graph</head><p>. The vertex is connected to the vertex by an edge if agent can communicate its value to agent . Assume that the graph is strongly connected. 6  The objective is that all agents reach a common value by communicating to each other, where the pattern in the communication is randomly determined at each time. Let be the value of agent held at time , and let . The values are updated via the recursion <ref type="bibr" target="#b17">(18)</ref> where is the mode specifying the communication pattern among the agents and is the number of such patterns. The communication patterns are given as follows: Each corresponds to the subset of the edge set. Then, the matrix has if and only if . We assume that (i) for all , (ii) , and (iii) the matrix is a row-stochastic matrix. The communication pattern is random, and in particular, is an i.i.d. random process. Its probability distribution is given by for . We say that consensus is obtained if for any initial vector , it holds that <ref type="bibr" target="#b18">(19)</ref> with probability one for all . A well-known approach is to update the value of each agent by taking the average of the values received at that time. In this case, the matrix is constructed as</p><formula xml:id="formula_2">if otherwise</formula><p>where is the number of agents with , i.e., those that transmit their values to agent .</p><p>Example 4.1: Consider the graph in Example 2.4 with four agents. We introduce four communication patterns arising from the protocol in the distributed PageRank algorithm: The edge subset contains all and in the original edge set including that corresponds to a self-loop for ,2,3,4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The matrices can be written as</head><p>We now present the convergence result for consensus. 6 As discussed in Section II, this assumption can be replaced with a weaker one that a globally reachable node exists.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 4.2:</head><p>Assume that the graph is strongly connected. Then under the scheme of <ref type="bibr" target="#b17">(18)</ref>, where the communication pattern is chosen randomly, consensus is obtained in the sense of <ref type="bibr" target="#b18">(19)</ref>.</p><p>Outline of the Proof: Let be the average matrix. This matrix is stochastic and irreducible. This is because the original graph is strongly connected, and hence under the probability distribution of , we have for each . Furthermore, by definition, the diagonal entries are positive, and thus is a primitive matrix, implying that it has the unique eigenvalue 1 of maximum modulus <ref type="bibr" target="#b14">[15]</ref>. Thus, by <ref type="bibr" target="#b32">[33]</ref>, it follows that consensus is obtained.</p><p>In comparison with the distributed PageRank problem, the consensus problem has the features below:</p><p>i) The graph is assumed to be strongly connected.</p><p>ii) The goal is that all values become equal, and moreover there is no restriction on its size. iii) Convergence with probability one can be attained for the values directly; there is no need to consider their time average (as in in ( <ref type="formula">9</ref>)). iv) The matrices are row stochastic and the diagonal entries are all positive. In contrast, in our distributed PageRank computation scheme, the link matrices are column stochastic. However, the coefficient of ergodicity, which is the tool employed for proving Theorem 3.4, is useful also for this problem; see, e.g., <ref type="bibr" target="#b32">[33]</ref>. It is clear that many similarities exist between the algorithms for consensus and PageRank. We emphasize that the distributed PageRank approach in this paper has been particularly motivated by the recent advances in the consensus literature. We highlight two points that provide helpful insights into the PageRank problem as follows:</p><p>1) At the conceptual level, it is natural to view the web as a network of agents that can make its own computation as well as communication with their neighboring agents. 2) At the technical level, it is important to impose stochasticity on the distributed link matrices. For the distributed PageRank computation, very few works exploit this viewpoint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EXTENSIONS TO SIMULTANEOUS UPDATES</head><p>So far, we have discussed the update scheme where only one page initiates an update at each time instant. In the web with billions of pages, however, this approach may not be practical. In this section, we extend the distributed algorithm by allowing multiple pages to simultaneously initiate updates.</p><p>Consider the web with pages from Sections II and III. As before, at each time , the page initiates its PageRank value update (i) by sending its value to the pages that it is linked to and (ii) by requesting the pages that link to it for their values. All pages involved here update their values based on the new information. The difference from the simpler scheme before is that there may be pages that are requested for their values by multiple pages at the same time. The current scheme handles such situations.</p><p>These updates can take place in a fully distributed and randomized manner. The decision to make an update is a random variable. In particular, this is determined under a given probability at each time , and hence, the decision can be made locally at each page. Note that the probability is a global parameter in that all pages share the same . Formally, the proposed distributed update scheme is described as follows. Let , , , be Bernoulli processes given by if page initiates an update at time , otherwise where their probability distributions are specified as <ref type="bibr" target="#b19">(20)</ref> The process is generated at the corresponding page . Similarly to the argument in Section III, we start with the update law as in ( <ref type="formula">8</ref>): <ref type="bibr" target="#b20">(21)</ref> where , the initial state is a probability vector, is the parameter used instead of in the centralized case, and are the distributed link matrices. The problem of distributed PageRank computation is formulated as follows: Find the distributed link matrices and the parameter such that, for the corresponding distributed update scheme <ref type="bibr" target="#b20">(21)</ref>, the PageRank value is obtained through the time average. This problem is a generalization of that in Section III, where only one page initiates an update at a time. The current approach is called the distributed scheme with simultaneous updates. Its analysis is more involved as we shall see.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Distributed Link Matrices and Their Average</head><p>We introduce the distributed link matrices. Let the matrices be given by if or , if</p><p>there are matrices. They have the property that (i) if , then the th column and the th row are the same as those in the original link matrix , (ii) if , then the th diagonal entry is chosen so that the entries of the th column add up to 1, and (iii) all other entries are 0. Hence, these are constructed as stochastic matrices. Notice that the link matrix coincides with in <ref type="bibr" target="#b10">(11)</ref> when and for all . We next analyze the average dynamics of the distributed update scheme in <ref type="bibr" target="#b20">(21)</ref>. For simplicity, as in Section III, we use the same notation for the average link matrix given by <ref type="bibr" target="#b22">(23)</ref> where is the expectation with respect to , . This matrix is stochastic.</p><p>The following result shows that the average link matrix has a clear relation to the original link matrix . In particular, it implies that the two matrices share the eigenvector for eigenvalue 1.</p><p>Proposition 5.1: For the average link matrix given in ( <ref type="formula">23</ref>), we have the following: i) .</p><p>ii) There exists a vector which is an eigenvector corresponding to the eigenvalue 1 for both and . The proof of this proposition is preceded by a preliminary result. Observe that can be written as <ref type="bibr" target="#b23">(24)</ref> where the matrices , , are given by <ref type="bibr" target="#b24">(25)</ref> The matrix is the sum of matrices for the cases where pages simultaneously initiate updates.</p><p>These matrices can be explicitly written in terms of the original link matrix . Here, we use the binomial coefficient given by . Note that for any . Lemma 5.2: The matrices , , in (25) can be expressed as follows:</p><formula xml:id="formula_4">if , if , if .<label>(26)</label></formula><p>Proof: We consider four cases as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1)</head><p>: This is the case when all pages initiate updates, and thus by definition .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2)</head><p>: When all but one page initiate updates, it is obvious from the definition that . Since there are such cases, their sum is . 3) : In the case when none of the pages initiates an update, by definition, the matrix reduces to the identity matrix as . Noting that , we have <ref type="bibr" target="#b25">(26)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4)</head><p>: To prove the expression of for these cases, we must show for each entry that if , if , (27) In the following, the proof is divided into two steps for the cases of and . i)</p><p>: By the definition of in <ref type="bibr" target="#b21">(22)</ref>, its entry reduces to if or , otherwise Thus, from (25) <ref type="bibr" target="#b27">(28)</ref> where the last equality is established by counting the number of cases where or holds among all possible combinations of such that of them are equal to 1. Using the formula for binomial coefficients <ref type="bibr" target="#b28">(29)</ref> we can show that . Hence, from <ref type="bibr" target="#b27">(28)</ref>, we arrive at <ref type="bibr" target="#b26">(27)</ref> for . ii)</p><p>: Since in the link matrix in (2) and by <ref type="bibr" target="#b21">(22)</ref>, the entry of is if , if Hence where the first term is obtained by counting the number of possible combinations of such that their sum equals and ; the second term is a consequence of switching the order of two summations. By a combinatorial argument again, we have . The original link matrix in (2) is stochastic with diagonal entries being 0. This fact together with (29) yields . Therefore, ( <ref type="formula">27</ref>) is attained for the case .</p><p>Proof of Proposition 5.1: i) By <ref type="bibr" target="#b23">(24)</ref> and Lemma 5.2, the matrix can be computed directly as <ref type="bibr" target="#b29">(30)</ref> In the first term above, we have by the binomial identity . Similarly, for the second term,</p><p>. Substituting these relations into (30), we have , which is the desired expression of .</p><p>ii) The equality in (i) implies that any eigenvector of the link matrix associated with the eigenvalue 1 is also an eigenvector of the average matrix for this eigenvalue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Mean-Square Convergence of the Distributed Update Scheme</head><p>To guarantee that the distributed scheme yields the PageRank value, we now examine the modified versions of the distributed link matrices. We first express the distributed update scheme of <ref type="bibr" target="#b20">(21)</ref> in its equivalent form as <ref type="bibr" target="#b30">(31)</ref> where the modified distribution link matrices are given by <ref type="bibr" target="#b31">(32)</ref> This form can be obtained by using the facts that the link matrices are stochastic and that . Clearly, these matrices are positive and stochastic. The objective here is to find the modified link matrices , by selecting the parameter , so that their average and the link matrix from (3) share an eigenvector corresponding to the eigenvalue 1. Since an eigenvector is unique for , it is necessarily equal to the value vector .</p><p>As in the earlier case in Section III, we take the parameter to be different from the original . In particular, let <ref type="bibr" target="#b32">(33)</ref> For the value used in this paper, we have . Then, let the average link matrix be . Here, the distributed link matrices are positive stochastic matrices, which implies that the average matrix enjoys the same property. The next lemma is the key to establish the desired relation between the distributed link matrices and their average. It is stated without proof; it follows similarly to that for Lemma 3.3.</p><p>Lemma 5.3: The scalar in <ref type="bibr" target="#b32">(33)</ref> and the link matrices in (32) have the following properties: i) and . ii) . iii) For the average matrix , the eigenvalue 1 is simple and is the unique eigenvalue of maximum modulus. The value vector is the corresponding eigenvector. We can show by (iii) in the lemma that, in an average sense, the distributed update scheme asymptotically obtains the correct values. More precisely, we have as . Further, as discussed in Section II, the asymptotic rate of convergence is dominated by the second largest eigenvalue in magnitude. By ( <ref type="formula">6</ref>) and (ii) in the lemma, this eigenvalue can be bounded as It is clear that this is a monotonically decreasing function of and . That is, higher probability in updates and/or larger results in faster convergence in average.</p><p>We are now ready to state the main result of this section. Theorem 5.4: Consider the distributed scheme with simultaneous updates in <ref type="bibr" target="#b30">(31)</ref>. For any update probability , the PageRank value is obtained through the time average in (9) as , . The proof follows along similar lines as that in Theorem 3.4. More specifically, we can prove either by the general Markov chain results of, e.g., <ref type="bibr" target="#b10">[11]</ref> or by Appendix B where we replace the expression of there with the one in Lemma 5.3. Hence, the convergence is of order , as in the algorithm of Section III; it also depends on the update probability but is independent of .</p><p>We remark that this scheme is fully decentralized when . It is parameterized by , which determines the frequency in the updates, communication load among the pages, and the rate of convergence in the mean as we have seen above. In practice, the recursion in (31) must be implemented in the equivalent form <ref type="bibr" target="#b20">(21)</ref>. It is clear that communication is required only over the links corresponding to the nonzero entries in the link matrices there. Each page then computes weighted additions of its own value, the values received from others, and the constant . On the other hand, when , the scheme reduces to the original centralized one in Section II. In this case, the distributed link matrix is and coincides with the original because and from Lemma 5.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. UPDATE TERMINATION IN PAGERANK COMPUTATION</head><p>In this section, we further develop the distributed algorithm for calculating the PageRank. We relax the objective and aim at obtaining approximate values of the PageRank. The key feature here is to allow the pages to terminate their updates at the point when the values have converged to a certain level. The benefit is that such values need to be transmitted only once to the linked pages; hence, the computation and communication load can be reduced.</p><p>In a centralized setting, the idea of update termination for the PageRank computation has been introduced by <ref type="bibr" target="#b21">[22]</ref>. We extend this idea to the distributed update scheme of Section V. First, we consider a simple case to attain a convergence result. Then, we provide the details of the proposed algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Convergence Properties for the Distributed Scheme</head><p>Consider the distributed update scheme with simultaneous updates in <ref type="bibr" target="#b20">(21)</ref> for computing the values together with their time average</p><p>. Within this subsection, we fix the sample paths , , up to time of the processes specifying the updates in the pages. Suppose that some of the time averages have, in an approximate sense, converged. This is measured by finding those that have varied only within sufficiently small ranges for a certain number of time steps. We introduce two parameters: Let be the relative error level, and let be the number of steps. Using the history of its own time average , each page then determines at time whether the following condition holds:</p><p>If so, then (i) the page will terminate its update and fix its estimate at , and then (ii) this value is transmitted to the pages connected to by direct links. After this point, these values will be used at the pages performing further updates.</p><p>The question of interest is whether the pages that continue with their updates after time will reach a good estimate of their true values. In what follows, we show that the answer is positive and the approximation level achievable in the estimate will be as good as that for the pages that have terminated their updates. Note that the analysis is based on the given sample paths , and hence the state and its average up to time are fixed; we study their stochastic behaviors after this time.</p><p>Let be the set of page indices that have reached good estimates at time as The cardinality of this set is denoted by . We assume . Also, let . Based on these sets, we introduce a coordinate transformation for the state and partition it as where contains the values of the pages in and contains those of the pages in . With slight abuse of notation, we write the transformed state by . Also, we use the shorthand notation for , ,</p><p>. Then, the distributed link matrices in <ref type="bibr" target="#b21">(22)</ref> and the average link matrix in <ref type="bibr" target="#b22">(23)</ref> are partitioned accordingly as <ref type="bibr" target="#b34">(35)</ref> Since the time average has converged sufficiently by time , the proposed approach employs the value as for all . Hence, the value at time is reset as</p><p>The updates are carried out through the distributed algorithm given by <ref type="bibr" target="#b35">(36)</ref> where (37)   individual values of (measured by the norm) rapidly decreases and remains small while the total error (in the norm) also decreases but at a slower rate.</p><p>In Fig. <ref type="figure" target="#fig_4">4</ref>, the final values of for the first twenty pages are plotted as together with the acceptable ranges of error, that is, by two lines connected in the middle. As we mentioned in Section VI, the time average is no longer normalized in this case. However, the sum of all at turned out to be about 0.989, which is very close to the desired value 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IX. CONCLUSION</head><p>In this paper, we first gave an overview of the PageRank computation problem, which is critical in making accurate search results with Google. We introduced a randomization-based distributed approach for the computation of PageRank values and showed the mean-square convergence of the proposed schemes. It was demonstrated that the approach has a clear relation to consensus type problems. The algorithms were generalized in the recent papers <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b19">[20]</ref>, where random link failures and computations based on aggregating groups of pages are addressed and more discussions on the advantages of this approach can be found. Future research will deal with the effects of communication delays and the improvement of convergence rate, and also study issues related to implementation of the proposed distributed algorithms.</p><p>Finally, by substituting (57) and (59) into (54) and by from Lemma 5.3 (i)</p><p>The far right-hand side converges to zero as , which completes the proof.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Web with four pages.</figDesc><graphic coords="3,128.34,66.74,70.00,70.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Example 3 . 1 :</head><label>31</label><figDesc>We continue with the 4-page web in Example 2.4. The link matrices are given by</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Sample paths of y (solid lines) with the times at which updates stopped (marked by for each page) and the true PageRank values x (dashed lines) for i = 21; ...; 30.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Estimation error: ke(k)k (solid line) and ke(k)k (dash-dot line).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Ranges of approximate PageRank values (marked by two lines) and y for i = 1;...; 20, at k = 8;000 (marked as ).</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>In<ref type="bibr" target="#b7">[8]</ref>, no specific reason is given for this choice of m. As shown later in<ref type="bibr" target="#b5">(6)</ref>, however, large m has the effect of faster convergence in the computation while it can also average out the PageRank values.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>A nonnegative matrix X 2 is said to be primitive if it is irreducible and has only one eigenvalue of maximum modulus.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>In the consensus literature, problems involving cheating have been studied. An example is the Byzantine agreement problem, where among the agents there are malicious ones who send confusing information so that other agents cannot achieve consensus (see, e.g.,<ref type="bibr" target="#b34">[35]</ref>).</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors wish to thank E.-W. Bai, B. Ross Barmish, T. Bas ¸ar, F. Dabbene, S. Dasgupta, S. Hara, Z. Qu, M. Vidyasagar, and Y. Yamamoto, for their helpful comments and discussions on this work.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>. This work was supported in part by the Ministry of Education, Culture, Sports, Science and Technology, Japan, under KAKENHI Grant 21760323. Recommended by Associate Editor Z.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>with</head><p>. We note that the matrices are nonnegative, but are no longer stochastic; the sums of the entries of the first columns are larger than 1 while those of the other columns are smaller than 1. Hence, though still holds, the state may not be a probability vector. In addition, this scheme is in the distributed form of <ref type="bibr" target="#b20">(21)</ref>, and not the one in <ref type="bibr" target="#b30">(31)</ref> based on the modified link matrices.</p><p>The time average is also modified by fixing the entries for as where is determined through the original formula <ref type="bibr" target="#b8">(9)</ref>. For the approximate update scheme <ref type="bibr" target="#b35">(36)</ref>, its average state follows the recursion <ref type="bibr" target="#b37">(38)</ref> where the average link matrix is given by (39) Regarding this average link matrix, the following result will be useful in the subsequent development.</p><p>Lemma 6.1: The submatrix of the average link matrix as given in (39) satisfies the following: i) and, in particular, is a stable matrix. ii) . Proof: i) Since the original average link matrix in ( <ref type="formula">35</ref>) is a stochastic matrix, the block diagonal matrix containing the submatrix satisfies . By the property of nonnegative matrices <ref type="bibr" target="#b14">[15]</ref>, it follows that . Therefore, . By Lemma 5.3 (i), and hence . ii) Let . This is the eigenvalue of with the smallest real part. By (i), we have . Thus, is an -matrix, 7 so it has an inverse that is nonnegative <ref type="bibr" target="#b15">[16]</ref>. We remark that in (i) in the lemma, the level of stability is affected by the parameter as it determines the size of .</p><p>It is clear that the value vector (with the coordinate change) is an equilibrium of the system <ref type="bibr" target="#b37">(38)</ref>. We partition it as <ref type="bibr">(40)</ref> It is also simple to show that the vector given by ( <ref type="formula">41</ref>) is an equilibrium of the system <ref type="bibr" target="#b37">(38)</ref>. This vector always exists by (ii) in the lemma above. 7 A matrix X 2 is said to be an M-matrix if its off-diagonal entries are nonpositive and all eigenvalues have positive real parts.</p><p>After the pages in have terminated their updates, the dynamics of the scheme can be characterized as follows.</p><p>Lemma 6.2: For the distributed update scheme (36) and its average system <ref type="bibr" target="#b37">(38)</ref>, the following statements hold.</p><p>i) The average state converges to and, in particular, as . ii) If , then . Proof: i) Since is an equilibrium of the average system <ref type="bibr" target="#b37">(38)</ref>, it follows that:</p><p>Here, we have , . Thus By Lemma 6.1 (i), is a stable matrix. Hence, we have as . ii) For the average system <ref type="bibr" target="#b37">(38)</ref>, and are both equilibria, and thus By Lemma 6.1 (ii),</p><p>. Moreover, by construction, . Thus, using the assumption, we have where the last equality follows because is an equilibrium of <ref type="bibr" target="#b37">(38)</ref>.</p><p>The lemma shows that if the values in are actually close to the true values , then via the recursion in <ref type="bibr" target="#b35">(36)</ref>, we can still obtain an approximate value in the average sense for all other states; the approximation level is the same as that for , represented by the parameter . The following is the main convergence result for the scheme described in this section. Theorem 6.3: Consider the distributed scheme in <ref type="bibr" target="#b35">(36)</ref>, where under the given sample paths , , at time , the updates at pages have terminated. The time average , , converges to the equilibrium in the mean-square sense as , . The proof is presented in Appendix C. It is based on that for Theorem 3.4. However, unlike the setup there, the distributed link matrices in the current scheme are not stochastic. This means that we cannot employ general Markov process results of, e.g., <ref type="bibr" target="#b10">[11]</ref>. In contrast, the proof relies on the stability of the submatrix as shown in Lemma 6.1 (i). Also, for this reason, the analysis does not involve the modified link matrices such as that appeared in the previous section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Distributed Algorithm With Update Termination</head><p>We present the distributed algorithm with update termination based on the results from this section. where is constructed by (37) using . 3) Check if has sufficiently converged based on <ref type="bibr" target="#b33">(34)</ref>. If so, then (i) add to the set , (ii) send to the pages having direct links to page , and (iii) fix for .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4) If</head><p>, then terminate the algorithm. Otherwise, set and , and then go to Step 1. We remark that, in this scheme, the choice of the parameters and affects the accuracy in the values when the pages terminate their updates as well as the time when the pages decide to do so. Taking smaller and/or larger will improve the value estimates, but will require longer time before the updates terminate; this in turn will keep the computation and communication load higher.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. DISCUSSION ON ASYNCHRONOUS ITERATION METHODS</head><p>In this section, we discuss the application of a numerical analysis method known as asynchronous iteration <ref type="bibr" target="#b4">[5]</ref> to the distributed computation of PageRank values. Deterministic algorithms for the PageRank problem under this approach have been discussed in, e.g., <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b23">[24]</ref>. We present a randomization-based algorithm and clarify its relation to the schemes of this paper.</p><p>Consider the original update scheme in <ref type="bibr" target="#b20">(21)</ref> based on the power method. Let for , , be the i.i.d. random processes whose distributions are as in <ref type="bibr" target="#b19">(20)</ref>. Similarly to the scheme with simultaneous updates in Section V, when at time , then page initiates an update; such an event occurs with probability . However, the difference is that this update is performed as in the power method, and moreover pages whose corresponding processes are zero do not make any updates.</p><p>The distributed update recursion is given as follows:</p><p>(43)</p><p>where the initial state is a probability vector and the link matrices are given by if , if and , otherwise.</p><p>(44) It is clear that these matrices keep the rows of the original link matrix in (3) for the pages that initiate updates. Other pages just keep their previous values. Thus, these matrices are not stochastic.</p><p>The following result shows that through this algorithm, we can compute the PageRank values.</p><p>Lemma 7.1: Under the distributed update scheme of (43), for every initial state that is a probability vector, the PageRank value is obtained as , , with probability one.</p><p>The distributed update scheme in (43) is a randomized version of the one in [5, Section 6.2], and the proof can be extended in a straightforward way. Specifically, it relies on the property that the link matrix has. The algorithm is based on general asynchronous iteration algorithms for distributed computation of fixed points in the field of numerical analysis. It is interesting to note that the proof of the result above employs an argument similar to that of Lyapunov functions. We also point out that the convergence rate is exponential and the general scheme can handle delays in the communication.</p><p>In comparison, the algorithms proposed in this paper have the following characteristic features. First, the link matrices in the update schemes ( <ref type="formula">8</ref>) and ( <ref type="formula">21</ref>) are stochastic, and this property is exploited in the convergence analysis. It moreover provides the relation to consensus type problems as discussed in Section IV. Second, there is a difference with regard to the type of links over which communication takes place. In particular, it is shown in a subsequent paper <ref type="bibr" target="#b19">[20]</ref> that the present approach can be extended in such a way that each page communicates only with those connected by outgoing links; the information of such links are by default available locally. By contrast, in the asynchronous iteration algorithm, pages must utilize the incoming links. This means that popular pages linked from many pages need extra storage to keep the data of such links.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VIII. NUMERICAL EXAMPLE</head><p>We present an example with 1,000 web pages . The links among the pages were randomly generated. The first ten pages are designed to have high rankings and are given links from over 90% of the pages. Others have between 2 and 333 links per page.</p><p>We ran Algorithm 6.4 in Section VI where each page initiates an update at a fixed probability and terminates the updates when an approximate value is obtained. In the distributed scheme (42), we generated sample paths of the processes , , which determine the pages initiating updates, and computed the state . The initial state was taken as a random probability vector. The parameters for the update termination were chosen as follows: The number of steps before stopping the update was and the parameter determining the level of approximation was . We chose these values so that the characteristics of this scheme are visible in the plots.</p><p>The responses of the time average for are shown in Fig. <ref type="figure">2</ref>. The times when the corresponding pages terminated their updates are marked by . We observe that the convergence is fairly fast, and the updates stop by time for these pages.</p><p>Let the errors in the estimates be . In Fig. <ref type="figure">3</ref>, these are shown for two cases:</p><p>under the norm and under the norm. The plot shows that the error in the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX</head><p>In this appendix, following some preliminary material, the proofs of Theorems 3.4 and 6.3 are given.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Preliminaries</head><p>We present some results related to infinite products of stochastic matrices from <ref type="bibr" target="#b12">[13]</ref>, <ref type="bibr" target="#b31">[32]</ref>. These are required for the proof of Theorem 3.4 given in the next subsection.</p><p>First, the notion of weak ergodicity is introduced. Definition A.1: Given a sequence of stochastic matrices , let their (backward) product be . The sequence is said to be weakly ergodic if <ref type="bibr">(45)</ref> In ( <ref type="formula">45</ref>), for all tend to be equal as , that is, all columns of the product matrix coincide in the limit. However, in general, the columns do not converge to a single vector.</p><p>To characterize matrix sequences that are weakly ergodic, we employ the tool known as the coefficient of ergodicity. Let be the scalar function for stochastic matrices in given by ( <ref type="formula">46</ref>)</p><p>This function has the following properties. Lemma A.2: i) and, moreover, if and only if there exists a probability vector such that , where . ii) . iii) for stochastic matrices . Weak ergodicity can be characterized by the following lemma.</p><p>Lemma A.3: For a sequence of stochastic matrices , their product is weakly ergodic if for all , where is a scalar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Distributed Update Scheme</head><p>We now analyze the proposed algorithm in Section III.</p><p>Lemma A.4: For the distributed update scheme ( <ref type="formula">14</ref>) and its average system ( <ref type="formula">16</ref>), the following hold.</p><p>i) The matrices , , and satisfy and . ii) For any mode sequence , the matrix sequence is weakly ergodic. Proof: i) We show only for since the case of is similar. Recall that by ( <ref type="formula">13</ref>) and ( <ref type="formula">15</ref>), the average matrix can be expressed as</p><p>. Thus, we have</p><p>The matrix is stochastic, and hence, by Lemma A.2 (i), it holds that . Consequently, we arrive at the inequality . ii) This follows from (i) and Lemma A.3 since by Lemma 3.3 (i).</p><p>Proof of Theorem 3.4: Let the error from the average be . Note that satisfies . This is because in the systems ( <ref type="formula">14</ref>) and ( <ref type="formula">16</ref>), by assumption, the initial states are probability vectors, and furthermore, , , and are stochastic matrices; hence, both and are nonnegative vectors whose entries add up to 1. Observe that Thus (47)</p><p>We use the norm relation for <ref type="bibr" target="#b14">[15]</ref> and the property to obtain the bound . Then, in the first summation term in (47), we have (48)</p><p>In the second summation term, we see that the summands can be written as (49)</p><p>Here, by taking the expectation of the matrix product with respect to the random variables (50</p><p>where the second and third equalities follow from the independence of and the definition of the average matrix , respectively. Since, by Lemma 3.3 (iii), is the eigenvector of for the eigenvalue 1, it follows that . Further, we have and again apply the fact , , to derive from (50) that <ref type="bibr">(51)</ref> where in the last inequality, we also used . As we have mentioned above, it holds that . Thus, apply Lemma A.2 (ii) and (iii) to (51) and obtain <ref type="bibr">(52)</ref> where the last inequality is due to . Note that by Lemma A.4, . Finally, by substituting (48) and ( <ref type="formula">52</ref>) into (47), we have and hence using the bound on in Lemma A.4 (i), we obtain (53) Thus, the PageRank value is obtained through the time average .</p><p>Proof of Theorem 6.3: For simplicity, let the initial time of the update scheme <ref type="bibr" target="#b35">(36)</ref>  We next look at the the second summation term of (54). The summands can be written as Here, by taking the expectation of the matrix products , , with respect to the random variables , we have where the second and third equalities, respectively, follow from the independence of and the definition of in (39). As is an equilibrium of the average system in <ref type="bibr" target="#b37">(38)</ref> He is author or co-author of more than 150 research papers published in international journals, books and conferences. He is also a co-author of the book Randomized Algorithms for Analysis and Control of Uncertain Systems, (Berlin, Germany: Springer-Verlag, 2005). He is currently an Editor and Deputy Editor-in-Chief of Automatica. His research activities are mainly focused on analysis and design of complex systems with uncertainty, and related control applications.</p><p>Dr. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Special section on complex networked control systems</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Control Syst. Mag</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Local computation of PageRank contributions</title>
		<author>
			<persName><forename type="first">R</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Borgs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chayes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-H</forename><surname>Teng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Algorithms and Models for the Web-Graph</title>
		<title level="s">Lect. Notes Comp. Sci.</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4863</biblScope>
			<biblScope unit="page" from="150" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Special issue on the technology of networked control systems</title>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE</title>
		<editor>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Antsaklis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Baillieul</surname></persName>
		</editor>
		<meeting>IEEE</meeting>
		<imprint>
			<date type="published" when="2007-01">Jan. 2007</date>
			<biblScope unit="volume">95</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Monte Carlo methods in PageRank computation: When one iteration is sufficient</title>
		<author>
			<persName><forename type="first">K</forename><surname>Avrachenkov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Litvak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Nemirovsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Osipova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Numer. Anal</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="890" to="904" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Parallel and Distributed Computation: Numerical Methods</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989">1989</date>
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Coordination of groups of mobile autonomous agents using nearest neighbor rules</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="968" to="969" />
			<date type="published" when="2007-05">May 2007</date>
		</imprint>
	</monogr>
	<note>Comments on</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Randomized gossip algorithms</title>
		<author>
			<persName><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2508" to="2530" />
			<date type="published" when="2006-06">Jun. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The anatomy of a large-scale hypertextual Web search engine</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Page</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Networks ISDN Syst</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="107" to="117" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The $25,000,000,000 eigenvector: The linear algebra behind Google</title>
		<author>
			<persName><forename type="first">K</forename><surname>Bryan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Leise</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Rev</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="569" to="581" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Symmetries in the coordinated consensus problem</title>
		<author>
			<persName><forename type="first">R</forename><surname>Carli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Fagnani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Speranzon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zampieri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Networked Embedded Sensing and Control Workshop</title>
		<editor>
			<persName><forename type="first">J</forename><surname>Antsaklis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Tabuada</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">331</biblScope>
			<biblScope unit="page" from="25" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On products of random stochastic matrices</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cogburn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Contemporary Math</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="199" to="213" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Asynchronous iterative solution for state-based performance metrics</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">V</forename><surname>Jager</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Bradley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMETRICS</title>
		<meeting>ACM SIGMETRICS</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="373" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Markov Set-Chains</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Hartfiel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lect. Notes Math.</title>
		<imprint>
			<biblScope unit="volume">1695</biblScope>
			<date type="published" when="1998">1998</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Agreement over random networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Hatano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mesbahi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1867" to="1872" />
			<date type="published" when="2005-11">Nov. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<title level="m">Matrix Analysis</title>
		<meeting><address><addrLine>Cambridge, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<title level="m">Topics in Matrix Analysis</title>
		<meeting><address><addrLine>Cambridge, U.K.</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge Univ. Press</publisher>
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A distributed randomized approach for the PageRank computation: Parts 1 and 2</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 47th IEEE Conf. Decision Control</title>
		<meeting>47th IEEE Conf. Decision Control</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="3523" to="3528" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Computing the PageRank variation for fragile web data</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SICE J. Control, Meas., Sys. Integr</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1" to="9" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Distributed PageRank computation with link failures</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Amer</title>
		<meeting>Amer</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="1976" to="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Distributed randomized PageRank computation based on web aggregation</title>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E.-W</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dabbene</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 48th IEEE Conf</title>
		<meeting>48th IEEE Conf</meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="3026" to="3031" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Coordination of groups of mobile autonomous agents using nearest neighbor rules</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jadbabaie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Morse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="988" to="1001" />
			<date type="published" when="2003-06">Jun. 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Adaptive methods for the computation of PageRank</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kamvar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Haveliwala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Golub</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linear Algebra Appl</title>
		<imprint>
			<biblScope unit="volume">386</biblScope>
			<biblScope unit="page" from="51" to="65" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Quantized consensus</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kashyap</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Bas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Srikant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="1192" to="1203" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Asynchronous iterative computations with Web information retrieval structures: The PageRank case</title>
		<author>
			<persName><forename type="first">G</forename><surname>Kollias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gallopoulos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Szyld</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Joubert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ed</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Parallel Computing: Current and Future Issues of High-End Computing</title>
		<title level="s">NIC Series</title>
		<meeting><address><addrLine>Julich, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>John von Neumann-Institut for Computing</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="309" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Google&apos;s PageRank and Beyond: The Science of Search Engine Rankings</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Langville</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Meyer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Princeton Univ. Press</publisher>
			<pubPlace>Princeton, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Necessary and sufficient graphical conditions for formation control of unicycles</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Maggiore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="121" to="127" />
			<date type="published" when="2005-01">Jan. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Formations of vehicles in cyclic pursuit</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Marshall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Broucke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Francis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1963" to="1974" />
			<date type="published" when="2004-11">Nov. 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Stability of multiagent systems with time-dependent communication links</title>
		<author>
			<persName><forename type="first">L</forename><surname>Moreau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="169" to="182" />
			<date type="published" when="2005-02">Feb. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Papoulis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">U</forename><surname>Pillai</surname></persName>
		</author>
		<title level="m">Probability, Random Variables and Stochastic Processes, 4</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw Hill</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
	<note>th ed</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Cooperative control of dynamical systems with application to autonomous vehicles</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">A</forename><surname>Hull</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="894" to="911" />
			<date type="published" when="2008-05">May 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Information consensus in multivehicle cooperative control</title>
		<author>
			<persName><forename type="first">W</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Beard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Atkins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Control Syst. Mag</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="71" to="82" />
			<date type="published" when="2007-04">Apr. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">E</forename><surname>Seneta</surname></persName>
		</author>
		<title level="m">Non-Negative Matrices and Markov Chains</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1981">1981</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">A necessary and sufficient condition for consensus over random networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Tahbaz-Salehi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jadbabaie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="791" to="795" />
			<date type="published" when="2008-04">Apr. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Randomized Algorithms for Analysis and Control of Uncertain Systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Calafiore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dabbene</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Springer</publisher>
			<pubPlace>London, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Monte Carlo and Las Vegas randomized algorithms for systems and control: An introduction</title>
		<author>
			<persName><forename type="first">R</forename><surname>Tempo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Ishii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Control</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="189" to="203" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Synchronization and convergence of linear dynamics in random directed networks</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">W</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Autom. Control</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1207" to="1210" />
			<date type="published" when="2006-07">Jul. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Three and higher dimensional autonomous formations: Rigidity, persistence and structural persistence</title>
		<author>
			<persName><forename type="first">C</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Hendrickx</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Fidan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">D O</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Blondel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Automatica</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="387" to="402" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Distributed PageRank computation based on iterative aggregation-disaggregation methods</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 14th ACM Conf. Inform. Knowledge Manag</title>
		<meeting>14th ACM Conf. Inform. Knowledge Manag</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="578" to="585" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
