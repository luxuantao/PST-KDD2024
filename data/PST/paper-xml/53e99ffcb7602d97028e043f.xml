<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Algorithm for cardinality-constrained quadratic optimization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-11-15">15 November 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Dimitris</forename><surname>Bertsimas</surname></persName>
							<email>dbertsim@mit.edu</email>
						</author>
						<author>
							<persName><forename type="first">Romy</forename><surname>Shioda</surname></persName>
							<email>rshioda@math.uwaterloo.ca</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Sloan School of Management and Operations Research Center</orgName>
								<orgName type="institution">Massachusetts Institute of Technology</orgName>
								<address>
									<postCode>E53-363, 02139</postCode>
									<settlement>Cambridge</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Combinatorics and Optimization</orgName>
								<orgName type="department" key="dep2">Faculty of Mathematics</orgName>
								<orgName type="institution">University of Waterloo</orgName>
								<address>
									<postCode>N2L 3G1</postCode>
									<settlement>Waterloo</settlement>
									<region>ON</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Algorithm for cardinality-constrained quadratic optimization</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-11-15">15 November 2007</date>
						</imprint>
					</monogr>
					<idno type="MD5">3A7534F5CB3DA58EDC1EF7C0300F89BF</idno>
					<idno type="DOI">10.1007/s10589-007-9126-9</idno>
					<note type="submission">Received: 14 June 2006 / Revised: 25 May 2007 /</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T04:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Mixed-integer quadratic programming</term>
					<term>Branch-and-bound</term>
					<term>Lemke&apos;s method</term>
					<term>Subset selection</term>
					<term>Portfolio selection</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper describes an algorithm for cardinality-constrained quadratic optimization problems, which are convex quadratic programming problems with a limit on the number of non-zeros in the optimal solution. In particular, we consider problems of subset selection in regression and portfolio selection in asset management and propose branch-and-bound based algorithms that take advantage of the special structure of these problems. We compare our tailored methods against CPLEX's quadratic mixed-integer solver and conclude that the proposed algorithms have practical advantages for the special class of problems we consider.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>We present a method for solving cardinality-constrained quadratic optimization problems (CCQO), i.e., quadratic optimization problems that limit the number of non-zero variables in the solution, using a tailored branch-and-bound implementation with pivoting algorithms. Specifically, we consider the following problem: minimize 1  2 x Qx + c x, subject to Ax ≤ b,</p><formula xml:id="formula_0">| supp(x)| ≤ K, x i ≥ α i , i ∈ supp(x), 0 ≤ x i ≤ u i , i = 1, . . . , d,<label>(1)</label></formula><p>where Q ∈ R d×d is symmetric positive semi-definite, c ∈ R d , A ∈ R m×d , b ∈ R m , α i &gt; 0, u i is the nonnegative upper bound of x i , K is some positive integer, and supp(x) = {i|x i = 0}. The second set of constraints, referred to as the cardinality constraint, and the third set of constraints, referred to as the lower bound constraints, introduce discreteness to the problem, making this a quadratic mixed-integer optimization problem.</p><p>Compared to linear integer optimization, quadratic mixed-integer optimization problems have received relatively little attention in the literature. In the first study of problems of type <ref type="bibr" target="#b0">(1)</ref>, <ref type="bibr" target="#b3">[4]</ref> proposes a tailored branch-and-bound algorithm and replaces the cardinality constraint | supp(x)| ≤ K with a surrogate constraint i (x i /u i ) ≤ K. Moreover, the x variables are branched on directly instead of introducing binary variables, i.e., the constraint x j ≤ 0 is added when branching down on x j and the constraint x j ≥ α i is added when branching up on x j . The underlying quadratic solver used in <ref type="bibr" target="#b3">[4]</ref> is a primal feasible algorithm that searches for feasible descent directions, which includes Newton's direction, steepest descent direction and Frank-Wolfe's method. Warm-starting was done at each branch-and-bound node by using a quadratic penalty function.</p><p>Motivated by this work, we extend the algorithm of <ref type="bibr" target="#b3">[4]</ref> by using Lemke's pivoting algorithm <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b13">14]</ref> to solve the successive sub-problems in the branch-and-bound tree. Unlike <ref type="bibr" target="#b3">[4]</ref>, we do not explicitly add the variable bound constraints, x j ≤ 0 and x j ≥ α i , thus the size of the subproblems never increases. The other major distinction to <ref type="bibr" target="#b3">[4]</ref> is that we use a pivoting algorithm to solve the subproblems, which allows for efficient warm-starting. Section 2 elaborates on this general methodology for solving CCQO's. In Sect. 3, we further tailor our method to solve two important problems in statistics and finance: subset selection in regression and portfolio selection in finance. We illustrate the results of our computational experiments in Sect. 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">General methodology</head><p>In a branch-and-bound setting, we solve the convex relaxation of Problem (1) via Lemke's method, then choose a branching variable x s . When branching down, we update the subsequent subproblem by deleting the data associated to x s and when branching up, we modify Lemke's method so that x s ≥ α s is enforced during pivoting.</p><p>The relaxation we solve at each node is: minimize 1  2 x Qx + c x, subject to Ax ≤ b, x ≥ 0,</p><formula xml:id="formula_1">x i ≥ α i , i ∈ U, (2)</formula><p>where the cardinality constraint is removed and U is the set of indices of variables that have been branched up. The lower bound constraints x i ≥ α i for α i strictly positive are enforced by implementing Lemke's method with non-zero lower-bounds (analogous to the simplex method with lower and upper-bounds). Section 2.1 describes the use of Lemke's method to solve Problem <ref type="bibr" target="#b1">(2)</ref> in the context of branch-and-bound. Section 2.2 illustrates the procedure for updating the subproblem after the branching variable is deleted. Section 2.3 describes a heuristic based on our branch-and-bound procedure for finding a good feasible solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Lemke's method as underlying quadratic optimizer</head><p>We use Lemke's pivoting method to optimize the convex relaxation of the subproblem at each branch-and-bound node. This method was originally developed to solve linear complementarity problems (of which quadratic programs are a special case) via pivoting akin to the simplex method. As with the dual simplex method in linear optimization, the key advantage of Lemke's method is its ease and efficiency of starting from an infeasible basic solution. This is critical in the branchand-bound setting since the optimal solution of the parent node can be used as the initial point to solve the problem of the current node. Thus, this approach has an advantage over interior point methods which may need to solve from scratch at each node.</p><p>A linear complementarity problem (LCP) is the following: Given q ∈ R n and M ∈ R n×n , find z ∈ R n and w ∈ R n such that,</p><formula xml:id="formula_2">w = Mz + q, z ≥ 0, w ≥ 0, z w = 0.</formula><p>The above problem is referred to as LCP(q, M). Clearly, the KKT necessary and sufficient optimality conditions of a convex quadratic programming problem is an LCP.</p><p>The Lemke's method first checks whether q ≥ 0, in which case z = 0 and w = q is a solution. Otherwise, it augments LCP(q, M ) to</p><formula xml:id="formula_3">w = q + hz 0 + Mz ≥ 0, z 0 ≥ 0, z ≥ 0, z w = 0, (<label>3</label></formula><formula xml:id="formula_4">)</formula><p>where h is some user-defined covering vector with h &gt; 0. We need to start the algorithm with a complementary basis that does not necessarily satisfy the nonnegativity constraint. A simple default basis is to have all the z variables be nonbasic and w be basic. We then set the auxiliary variable z 0 to the smallest positive value such that w ≥ 0 when z = 0, i.e., z 0 = max i (-q i /h i ), i = 1, . . . , d. Thus, z i w i = 0, i = 1, . . . , n and z 0 &gt; 0, and z 0 is pivoted into the basis in place of w r , where r = argmax i (-q i /h i ). Such a point is called an almost complementary point for the augmented problem <ref type="bibr" target="#b2">(3)</ref>. The algorithm follows a path from one almost complementary basic solution to the next, until z 0 is pivoted out to be a nonbasic variable or LCP(q, M ) is shown to be infeasible <ref type="bibr" target="#b12">[13]</ref>.</p><p>During the branch-and-bound procedure, we want to resolve a new subproblem starting with the basic solution of the parent subproblem. Let M and q be the modified data for the current subproblem, and let B and N be the corresponding columns of the basic and nonbasic variables, respectively, of the parent node. We want Lemke's method to solve LCP(M B , q B ), where M B = -B -1 N and q B = B -1 q, and have B as its initial complementary basis matrix. This basis is most likely not feasible for LCP(M B , q B ), thus the problem is augmented by the auxiliary variable z 0 , z 0 is increased until the initial basis is feasible for the augmented problem, and then we execute sequence of pivots until z 0 is pivoted out or the LCP is deemed infeasible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Branching down</head><p>When branching down on x s , we delete all the data associated to x s for the subsequent subproblems and update the basis accordingly. We chose to delete the variable instead of explicitly adding the constraint x s = 0 to prevent increasing the size of the subproblem as well as for numerical stability purposes. We will show that in most cases, the inverse of the new basis can be efficiently derived from the inverse of the old basis via elementary row operations.</p><p>Let us assume that x s is a basic variable and suppose B and N are basic and nonbasic columns, respectively, of the previous solution. We delete the column and row of B corresponding to x s and the column and row of N corresponding to its dual variable w s . Although we can get the new inverse of the basis simply by inverting the modified basis, calculating the inverse can be a significant bottleneck. Instead, we calculate the new inverse from the previous inverse using elementary row operations.</p><p>Suppose, for notational purposes, that the column and row needed to be deleted in B are the first column and first row and B ∈ R n×n , so that:</p><formula xml:id="formula_5">B = v B row B col B , B -1 = u U row U col U ,</formula><p>where B and U are n -1 by n -1 lower-right submatrices of B and B -1 , respectively, B col , B row , U col and U row are (n -1)-dimensional column vectors, and v and u are scalars. We know that</p><formula xml:id="formula_6">B -1 B = uv + U row B col uB row + U row B vU col + UB col U col B row + U B = I n , thus, U B = I n-1 -U col B row . (<label>4</label></formula><formula xml:id="formula_7">)</formula><p>Since U col B row is a rank one matrix, we can execute linear number of elementary row operations to the matrix I n-1 -U col B row to get I n-1 . Let E be the matrix representing those operations. Then EU is the inverse matrix of B if B is invertible.</p><p>In the previous section, we stated that we use M B = -B -1 N as input to Lemke's. We avoid this matrix multiplication via similar elementary row operations. Suppose M B = -B -1 N at termination of Lemke's at the parent node. Again, let us assume that the column corresponding to w s in N is the first one. Then,</p><formula xml:id="formula_8">M B = -B -1 N = - u U row U col U p N row N col N = w M row M col M ,</formula><p>where N and M are n -1 by n -1 lower-right submatrices of N and M B , respectively, and N col , N row , M col and M row are (n -1)-dimensional column vectors, and p and w are scalars. Again, we know that</p><formula xml:id="formula_9">-U N = M + U col N row .</formula><p>Since EU = B -1 , the new M B matrix will be</p><formula xml:id="formula_10">M B = E(M + U col N row ).<label>(5)</label></formula><p>There are several assumptions that need to be checked before executing the above procedures. Most critically, if B is singular, then E may be undefined. In such a case, we start Lemke's method from scratch with the initial basis B = I n-1 . Clearly, this is not the only solution to this problem, but the scenario occurred rarely enough in practice so that this method was adequate for our purposes. Also, we assumed that we deleted the first row and nth column from B, B -1 , N and M B . The general case can be easily modified to this special case. Finally, if x s is a nonbasic variable in the previous solution, we can apply the following methodology for its complementary variable w s which must be a basic variable.</p><p>To update q B , we delete the sth element of c, giving us c. Suppose q B = B -1 q at the termination of Lemke's method, where q = c b . Again, assuming that s = 1, we have:</p><formula xml:id="formula_11">q B = qs qB = B -1 q = u U row U col U q s q ,</formula><p>where qB and q is the (n -1) lower subvector of q B and q, respectively, and q s = c s . Similar to M B , we get:</p><formula xml:id="formula_12">q B = E( qB -q s U col ). (<label>6</label></formula><formula xml:id="formula_13">)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LU decomposition of the basis</head><p>From ( <ref type="formula" target="#formula_10">5</ref>) and ( <ref type="formula" target="#formula_12">6</ref>), we only need to know one column of B -1 to update M and q. Thus, instead of explicitly maintaining B -1 , we calculate the LU decomposition of the basis B at the termination of Lemke's method and use it only to derive the required column of B -1 . We use Crout's algorithm <ref type="bibr" target="#b21">[22]</ref> to construct the LU decomposition of B and derive the sth column of B -1 using back-substitution. If x s is the ith basic variable, then we get U col by deleting the ith element of the column. Given B, N and U col , we can update M and q according to (5) and <ref type="bibr" target="#b5">(6)</ref>, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">A heuristic</head><p>To find a good feasible solution at the root node, we run a heuristic which combines the heuristics proposed by <ref type="bibr" target="#b3">[4]</ref> and <ref type="bibr" target="#b11">[12]</ref>. Let x * be the solution of the continuous relaxation at the root node. We first run what <ref type="bibr" target="#b11">[12]</ref> refers to as the "reoptimization heuristic" which "reflects common practice", where the continuous relaxation is solved again using only the variables with the K largest absolute values of x * . The lower-bound constraint x i ≥ α i is also imposed for these variables. If this problem is feasible, the solution is a feasible solution to the original CCQO and let UB 0 be its corresponding objective value. To improve on UB 0 , we then run the heuristic proposed by <ref type="bibr" target="#b3">[4]</ref>. Let G = {i | |x * i | is one of the K + W largest absolute values of x * }, where W is a user-defined small positive integer such that |G| = K + W d (we have set W = 0.1d in our computational experiments). We then solve the CCQO problem using only the variables in G, setting UB 0 as the initial upper-bound to the optimal value. We also put a limit on the number of nodes to examine. Thus, we are implementing our branch-and-bound procedure just on the variables in G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Applications of CCQO</head><p>We focus on applying the methodology described in Sect. 2 to the K-subset selection problem in regression and optimal portfolio selection in Sects. 3.1 and 3.2, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Subset selection in regression</head><p>In traditional multivariate regression, we are given m data points (x i , y i ), x i ∈ R d , y i ∈ R, and we want to find β ∈ R d such that i (y ix i β) 2 is minimized. This has a closed-form solution, β = (X X) -1 X Y , where X ∈ R m×d with x i as its ith row, and Y ∈ R m with y i as its ith element. Primarily for robustness purposes, i.e., to limit the variance of the predicted Y , it is desirable to use a small subset of the variables (see <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b22">23]</ref>). For example, suppose we want to choose K variables (K &lt; d) that minimizes the total sum of squared errors. We formulate this problem as:</p><formula xml:id="formula_14">minimize (Y -Xβ) (Y -Xβ), subject to | supp(β)| ≤ K, (<label>7</label></formula><formula xml:id="formula_15">)</formula><p>which is clearly a CCQO.</p><p>Authors of <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref> use pivoting and enumeration to search for subsets with the best regression "fit" (e.g., minimum total sum of squared errors) for subsets of all sizes. Authors of <ref type="bibr" target="#b18">[19]</ref> solve linear mixed-integer optimization problems that find a subset of K variables (K &lt; d) that has the minimum total absolute error.</p><p>We solve <ref type="bibr" target="#b6">(7)</ref> by tailoring our approach to this unconstrained version of a CCQO. When the cardinality constraint is relaxed, the optimal objective value is Y Y -Y X (X X) -1 X Y , thus we do not need to run the Lemke's method. The main computational work is in the branch down procedure. Clearly, we can extend our method to regression problems with linear constraints with respect to the β's by applying our general methodology. However to highlight the merits of our tailored approach versus a general purpose software such as CPLEX, we focus on the unconstrained regression in this paper.</p><p>When branching down on x s , we delete the sth row and column of X X, and the inverse (X X) -1 is updated as illustrated in Sect. 2.2. To further alleviate computation, we set v = X Y ∈ R d at the root node. Thus, deleting x s corresponds to deleting the sth element of v. We do not need to multiply X and Y in subsequent nodes-we simply need to delete corresponding elements from v. The optimal objective value of a given node is then:</p><formula xml:id="formula_16">Y Y -v (X X) -1 v,</formula><p>where X X and v are the updated X X and v, respectively. Thus, calculating the objective value requires only matrix-vector multiplications. There is no need to update the subproblem when branching up, since the optimal solution of the parent node is optimal for the next node. Section 4.1 illustrates computational results of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Portfolio selection</head><p>Let us consider the traditional mean-variance portfolio optimization problem, which can be modeled as a convex quadratic optimization problem. Large asset management companies manage assets against a benchmark that has d securities. So that they are not seen as indexers, it is desirable that they only use K d securities in the portfolio. In addition, several portfolios are marketed as focused funds that are only allowed by their prospectus to own a small collection of securities. Finally, asset management companies that manage separate accounts for their clients that only have say $100,000 can only realistically own a small number of securities, since otherwise, the transaction costs would significantly affect performance. Such limited diversification constraints, along with fixed transaction costs and minimum transaction levels, present discrete constraints and variables to the quadratic problem (see <ref type="bibr" target="#b2">[3]</ref>).</p><p>Given the difficulty of solving quadratic integer optimization problems, such a portfolio problem has commonly been approached in one of two ways. The first approach is approximating the problem to a simpler form. For example, <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref> approximate the quadratic objective function by a linear and piece-wise linear function, and <ref type="bibr" target="#b10">[11]</ref> further assumes equal weights across assets to formulate the problem as a pure 0-1 problem. In <ref type="bibr" target="#b20">[21]</ref>, portfolio problems with fixed transaction costs are solved in polynomial time when the covariance matrix has equal off-diagonal elements. The second approach uses heuristics to find strong feasible solutions. For example, <ref type="bibr" target="#b16">[17]</ref> proposes a linear mixed-integer optimization based heuristic, <ref type="bibr" target="#b4">[5]</ref> introduces a dynamic programming based heuristic, and <ref type="bibr" target="#b5">[6]</ref> proposes genetic algorithm, tabu search and simulated annealing approaches for the problem.</p><p>There have been also significant efforts in finding exact algorithms to solve discrete portfolio optimization problems. For example, <ref type="bibr" target="#b19">[20]</ref> extends the work of <ref type="bibr" target="#b3">[4]</ref> to limited diversification portfolios, and <ref type="bibr" target="#b11">[12]</ref> solves portfolio problems with minimum transaction levels, limited diversification and round lot constraints (which requires investing in discrete units) in a branch-and-bound context. In <ref type="bibr" target="#b14">[15]</ref>, the authors solve a portfolio optimization problem that maximizes net returns where the transaction costs are modeled by a concave function. They successively estimate the concave function by a piecewise linear function and solve the resulting LP. They have shown that their solution converges to the optimal solution of the original problem. In <ref type="bibr" target="#b15">[16]</ref>, the authors present a divide-and-conquer algorithm that partitions the feasible set of the solutions to find the exact solution to a problem with fixed transaction costs and round lots.</p><p>In this paper, we focus on the traditional mean-variance portfolio optimization model with cardinality constraints. The key difference between our approach and those described above is our use of Lemke's pivoting algorithm to solve the underlying quadratic program in our branch-and-bound implementation. Let us further suppose that the d stocks can be categorized into S industry sectors. Investors may wish to limit the total investment change within each of S industry sectors. Let the current portfolio weights be x 0 ∈ R d . The traditional mean-variance model determines the new weights for the d stocks, x ∈ R d , that maximizes the total expected return minus a penalty times total variance. In practice, there are other direct and indirect transaction costs, such as price impact costs and ticket costs. Impact costs reflect the stock price impact resulting from purchase or sale orders and the magnitude of this cost depends on the particular stock and the trade sizes. For example, large purchase orders will increase the price and large sales orders will decrease the price of the stock. Assuming symmetric impact for purchases and sales, this effect is often modeled by the following quadratic function</p><formula xml:id="formula_17">d i=1 c i (x i -x 0 i ) 2 ,</formula><p>where c i &gt; 0 is the impact coefficient for Stock i. The second form of transaction costs is ticket cost, which is a fixed cost associated to trading a positive volume of a stock. This cost can easily be incorporated into our CCQO framework using binary variables, but we will not include it in the present work because ticket costs are often second order compared to impact costs. This portfolio selection problem can be represented by the following formulation:</p><formula xml:id="formula_18">minimize -r x + 1 2 (x -x B ) (x -x B ) + d i=1 c i (x i -x 0 i ) 2 , subject to i∈S l (x i -x B i ) ≤ l , l = 1, . . . , S, d i=1 x i = 1, | supp(x)| ≤ K, x i ≥ α i , i ∈ supp(x), x i ≥ 0, i = 1, . . . , d,<label>(8)</label></formula><p>where is the covariance matrix of the rates of return, x B i is the benchmark weight for stock i, r is a d-dimensional vector of the expected rates of return, α i is the minimum transaction level of stock i, c i is the price impact coefficient for Stock i, and S l is the set of indices of stocks in Sector l. The first constraint limits the total change in the portfolio weights in Sector l to be less than some l . The second set of constraints ensures that the weights sum up to 1, and the third constraint limits investing up to K stocks. The fourth set of constraints implies that if we invest in stock i, then x i must be at least α i . Clearly, Problem ( <ref type="formula" target="#formula_18">8</ref>) is in the form of Problem <ref type="bibr" target="#b0">(1)</ref> and can be solved using our methodology.</p><p>We rewrite Problem (8) as</p><formula xml:id="formula_19">minimize -r x + 1 2 x ˜ x + C 0 , subject to i∈S l x i ≤ l + i∈S l x B i , l = 1, . . . , S, - i∈S l x i ≤ l - i∈S l x B i , l = 1, . . . , S, d i=1 x i = 1, | supp(x)| ≤ K, x i ≥ α i , i ∈ supp(x), x i ≥ 0, i = 1, . . . , d,<label>(9)</label></formula><p>where r = r + x B + 2Cx 0 , ˜ = + 2C where C is the diagonal matrix with c i as the ith diagonal element, and C 0 is a constant equal to (x B ) x B + d i=1 c i (x 0 i ) 2 . We solve the relaxation of Problem (9) using Lemke's method described in Sect. 2.1, and branch down on a variable as in Sect. 2.2. Section 4.2 illustrates the computational results of this method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Computational results</head><p>We describe computational experiments on subset selection and portfolio selection problems in Sects. 4.1 and 4.2, respectively. For each problem, we compare our tailored approaches to CPLEX's quadratic mixed integer programming solver <ref type="bibr" target="#b7">[8]</ref>. Clearly, CPLEX's implementation of the pivoting methods and branch-and-bound is far superior to ours, however, our motive is to measure the advantages of a tailored implementation over a general mixed-integer solver for these particular CCQO problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Results for subset selection</head><p>We compared our branch-and-bound implementation for solving subset selection with forward regression and CPLEX's quadratic mixed-integer programming solver. Forward regression is a greedy heuristic that, given the variables already chosen, chooses another variable that reduces the residual error the most, i.e., the first variable chosen, β <ref type="bibr" target="#b0">(1)</ref> , corresponds to β (1) = arg min j =1,...,d i (y ix i,j β j ) 2 . The next variable minimizes i ( ȳix i,j β j ) 2 for all j ∈ {1, . . . , d} \ (1), where ȳi = y ix i, <ref type="bibr" target="#b0">(1)</ref> β <ref type="bibr" target="#b0">(1)</ref> . This step is repeated until K variables are chosen <ref type="bibr" target="#b17">[18]</ref>.</p><p>We used CPLEX's quadratic mixed-integer optimizer to solve Problem ( <ref type="formula" target="#formula_14">7</ref>) by introducing binary inclusion variables z i , replacing the cardinality constraint by i z i ≤ K and adding constraints β i ≥ -Mz i and β i ≤ Mz i , where M is some large positive number. We found that setting M = 100 was sufficiently large to solve our generated problems effectively. By comparing our method with CPLEX, we hope to see the computational advantages, if any, of not using binary variables z i and branching directly on β i 's. One obvious benefit is the elimination of the need for the so called "big-M" constraints.</p><p>Our branch-and-bound and CPLEX's branch-and-bound search procedure used depth-first-search, and branches on the variable with maximum absolute value first. In our algorithm, we ran the heuristic presented in Sect. 2.3 after solving the continuous relaxation of the root node and not in any subsequent nodes.</p><p>For each d (the number of variables), we randomly generated five instances of X and β, and set Y = Xβ + , where i ∼ N(0, 1) for each i. For each problem size, we present the average performance of the methods over all five instances in Tables <ref type="table" target="#tab_0">1</ref> and<ref type="table" target="#tab_1">2</ref>. The performances of the individual instances are presented in Tables <ref type="table" target="#tab_5">6</ref> and<ref type="table">7</ref> in the Appendix. In all of the tables, the columns "Forward", "BnB", and "CplexMIQP" correspond to the results of the forward regression, our method, and CPLEX, respectively. We did not record the running time for forward regression since this simple heuristic was able to solve almost all the instances in a fraction of a second. The column labeled "time" is the total CPU seconds required to solve the problem up to a specified time limit (discussed below). This number includes the running time of the root node heuristic as well. The column labeled "nodes" is the total number of nodes in the branch-and-bound tree at termination, "best node" is the node corresponding to the best feasible solution and "RSS" is the best total sum of squared errors found for subsets of size K. All the numbers, except for the CPU time, were rounded to the nearest integer. Table <ref type="table" target="#tab_0">1</ref> shows the results when the time limit for both our method and CPLEX was set 60 CPU seconds. These results illustrate whether these exact methods can find a "good" feasible solution relatively quickly. It is apparent from this table that the exact approaches significantly improve upon the forward regression in terms of residual sum of squares, even when they do not solve to provable optimality. Both "BnB" and CPLEX solved the problems with (d, K) = (20, 10), <ref type="bibr" target="#b19">(20,</ref><ref type="bibr" target="#b4">5)</ref>, (50, 40) to provable optimality in several seconds. However, in all cases where CPLEX does not find the optimal solution within 60 seconds, the RSS of "BnB" is consistently lower than that of CPLEX. This is most evident in cases where K is large relative to d, i.e., for (d, K) = (100, 80) and (d, K) = (500, 400). CPLEX performs especially poorly in these cases, having RSS values worse than that of the forward heuristic. In contrast, "BnB" appears to do especially well, having significantly lower RSS values than the other two methods. For three out of the five instances with (d, K) = (100, 80), our method found the provably optimal solution in under one second (see Table <ref type="table" target="#tab_5">6</ref>). From the "best node" column, it is clear that our heuristic, which applies our branchand-bound procedure on a smaller subproblem of the original CCQO, yields good solutions. The CPLEX routine also runs a general heuristic at the root node, but it does not appear to be as effective for these problems.</p><p>These results show that in a minute or less, our method is able to provide solutions that are often substantially better than that of the forward heuristic. Thus, if speed is important, using our method with a short time limit may be a viable alternative to the forward heuristic.</p><p>Table <ref type="table" target="#tab_1">2</ref> illustrates the results when our method and CPLEX are run for 3600 CPU seconds. For (d, K) = (50, 20), both "BnB" and CPLEX solved to provable optimality within minutes, where "BnB" had faster running times in three out of the five instances. Our method also solves all five instances of (d, K) = (100, 80) in an average of 8 minutes, however, it is surprising to see that CPLEX could not solve three out of the five instances within one hour (two of them being instances that "BnB" solved in under one minute-see Table <ref type="table">7</ref>). CPLEX solved the remaining two instances in about 45 minutes each. As in Table <ref type="table" target="#tab_0">1</ref>, CPLEX performs relatively poorly when K is large, namely for (d, K) = (100, 80) and (500, 400). It is not clear why these instances are especially difficult for CPLEX to find a good feasible solution. Again, in every single instance where CPLEX did not find the optimal solution, the best solution found by "BnB" was superior to that of CPLEX. We also see that our heuristic solution is still very strong. With the longer running time, our method is able to improve on the heuristic solution, however, it is often very close to the best RSS value found in one hour.</p><p>We selected some problem instances and ran CPLEX for up to 12 hours in hopes of finding a provably optimal solution. However, CPLEX could not find a better solution than those found by "BnB" in one hour. For example, in one of the instance of (d, K) = (100, 20) (this is problem instance (d, K, v) = (100, 20, 1) in Table <ref type="table">7</ref> of the Appendix), CPLEX could not find the optimal solution in 12 hours. Its best RSS value was 758, 261 (which was found by its root node heuristic) whereas the RSS value found by "BnB" in one hour was 690, 532. In one of the instance of (d, K) = (500, 400) (this is problem instance (d, K, v) = (500, 400, 1) in Table <ref type="table">7</ref> of the Appendix), CPLEX's best RSS value was 56, 390, 541, whereas the RSS value found by "BnB" in one hour was 38, 781. Thus, it appears that this general solver is not well suited to solved this particular type of CCQO.</p><p>The difference in the two methods is most likely due to the difficulty of solving the explicit mixed-integer quadratic program formulation of the subset selection problem with the binary variables and big-M constraints. These big-M constraints can lead to weak LP relaxations, making it hard to fathom nodes. In addition, our branch-andbound based heuristic appears to be very effective in finding strong feasible solutions. This combination allows us to fathom many more nodes than CPLEX.</p><p>Note that the per node computation time for "BnB" decreases as K decreases. This is highlighted in d = 100 and d = 500, where the average number of nodes explored increases significantly as K decreases. This is because we delete variables that are branched down, making the subproblem smaller and smaller as we go down the branch-and-bound tree until at most d -K variables are deleted. Thus, many of the subproblems solved when K = 20 is much smaller than when K = 400, resulting in the difference in average per node computation time.</p><p>The main bottleneck of our method is the number of nodes needed to prove optimality. Even when the heuristic finds the optimal solution at the root, the branchand-bound tree can grow to a million nodes to prove optimality, even for moderate sized problems. The main factors preventing significant pruning of the tree are the free variables and the lack of constraints. A subproblem solution almost always has all non-zero variables. However, provable optimality may not be of critical importance to data mining practitioners who may be interested in finding a "good" solution "quickly". From these empirical studies, we have seen that our branch-and-bound procedure finds near-optimal solutions in one minute. Given the noise in the data, perhaps these solutions are sufficient in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Results for portfolio selection</head><p>We tested our approaches described in Sect. 3.2 against two alternative methods. One method uses CPLEX's quadratic barrier method to solve the relaxation problem of ( <ref type="formula" target="#formula_19">9</ref>), and the second uses CPLEX's quadratic mixed-integer solver to solve the explicit mixed-integer formulation. All branch-and-bound procedures, including CPLEX, were set to depth-first-search, branch up first and branch on variable with maximum absolute value. Depth-first-search was used primarily due to its ease of implementation and limited memory usage.</p><p>For each d (total number of assets), S (number of sectors), and K (the upper bound on diversification), we generated five random instance of Problem <ref type="bibr" target="#b7">(8)</ref> and averaged the results. We set x 0 = 0 for all of our instances. For , we generated a matrix A from a Gaussian distribution, then used d d-1 A T A as our covariance matrix. The values of r and c i were taken from a Gaussian and uniform distribution, respectively. We acknowledge that using randomly generated data may give unrealistically optimistic running times. However, since our interest is to compare the computational performance of different solution methods, we hope that this relative difference extends to real stock data as well. Tables <ref type="table" target="#tab_2">3</ref> and<ref type="table" target="#tab_3">4</ref> illustrate the results. In these tables, "UB" is the best feasible solution found, "best node" is the node where "UB" was found and "nodes" is the total number of nodes explored. Entries labeled "-" indicate that the method failed to find a feasible solution within 120 CPU seconds.</p><p>"LemkeBnB" refers to our method described in Sect. 2. "BarrierBnB" is the same as "LemkeBnB", except we use CPLEX's barrier method to solve the continuous quadratic optimization problem. Finally, "CplexMIQP" is the result of using CPLEX quadratic mixed-integer solver. All three methods were run for a total of 120 CPU seconds. The column labeled "nodes" is the average of the total number of nodes each method explored, "best node" is the average of the node where the best feasible solutions were found, and "UB" is the best feasible objective value found within the time limit.</p><p>Table <ref type="table" target="#tab_2">3</ref> runs all three methods without running any heuristic methods to find a good feasible solution, whereas Table <ref type="table" target="#tab_3">4</ref> runs a heuristic once at the root. For "LemkeBnB" and "BarrierBnB", we ran the heuristic for at most 30 CPU seconds after the root is solved. We were not able to put a time limit on the heuristic for CplexMIQP, which ran until CPLEX deemed it had an acceptable upper-bound. When the size of K was relatively large (K &gt; 0.1d), the CPLEX heuristic ran for at most 10 CPU seconds, whereas it can last over 100 CPU seconds when d is large (d &gt; 200) and K is small compared to d (e.g., K ≤ 0.1d). Both pivoting-based methods, "LemkeBnB" and "CplexMIQP", are significantly faster than "BarrierBnB" for every instance. Although the relative difference in the total number of nodes explored did decrease as the problem size increased, the advantage of interior point methods in large dimensions over pivoting methods did not compensate the latter's advantage in warm starting. For example, for problems that would take an average of 400 pivots to solve from scratch, any intermediary node would require only about 5 pivots to resolve the subproblem of that node. Also, the pivoting methods always give a basic feasible solution to the KKT equations of the quadratic programming problem. Thus, it is guaranteed to give the solution to the relaxation with the minimum support, unlike the interior point method. Since many of the generated instances and most real world problems do not guarantee positive definiteness (only positive semi-definiteness) in the quadratic matrix, this difference can be another significant advantage.</p><p>It is clear that the node to node computation time of "CplexMIQP" is faster than "LemkeBnB" for most instances. However, the relative difference significantly decreases as K becomes small relative to d. For example, when K ≈ 0.5d, the differ- ence in number of nodes explored is about a factor of 10, whereas when K ≈ 0.1d, it reduces to a factor of 2 to 3. For the case when d = 200 and K = 20, the total computation time of "LemkeBnB" and "CplexMIQP" are about the same. We reach similar conclusions when we increase the running time. Table <ref type="table" target="#tab_4">5</ref> shows results for running our method and CPLEX for 3600 CPU seconds.</p><p>Running the heuristic, even for just 30 CPU seconds, brought significant improvement to our models in terms of finding good feasible solutions. Using |G| small enough so that Lemke's method can run sufficiently fast allowed us to find a good feasible solution quickly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>From this computational study, we learn that: 1. Our tailored approaches for solving cardinality constrained quadratic optimization problems in regression and portfolio optimization show some computational advantages over a general mixed-integer solver. 2. For subset selection in regression, our method was able to find the subset of variables with significantly better fit than the forward regression heuristic even with a 60 second time limit. The results also show that our approach has significant computational advantages to CPLEX which needs to solve an explicit mixed-integer quadratic formulation with big-M constraints. 3. For the portfolio selection problem, the combination of our branch-and-bound implementation and Lemke's method has significantly faster running times compared to using the barrier method to solve the continuous quadratic optimization problem. The key bottleneck for efficient quadratic mixed-integer optimization has been the inability of interior point methods to start at infeasible points. Although they are undoubtedly more effective in solving high dimensional quadratic optimization problems than pivoting methods started from scratch, the pivoting methods can re-solve each subproblem more efficiently at each node of the branchand-bound tree. 4. CPLEX's quadratic mixed-integer solver has a more sophisticated pivoting and branch-and-bound implementation, yet our tailored approach compensates for our lack of software engineering prowess. Our root heuristic finds good upper bounds quickly and our variable deletion and Lemke's method with non-zero lower bounds updates each subproblem without increasing the size of the problem. With further improvements in implementation (e.g., regarding data struc-tures, decompositions, and memory handling), we believe our methodology will have comparable node-to-node running times.</p><p>There are several potential improvements to our model. We use depth-first-search in all of our branch-and-bound procedures due to the ease of implementation. Although we can find good upper-bounds faster with this approach, we often get stuck in a subtree. Also, with large number of nodes, we cannot utilize best lower-bounds effectively, since the root relaxation would be the lower-bound for a large majority of the nodes we explore. There is also merit in investigating other principal pivoting techniques other than Lemke's. The main drawback of Lemke's method is the lack of choice in the entering variable. Alternative pivoting methods, though more difficult to initialize, have the flexibility of choosing amongst several entering variables, akin to the simplex method. It also does not augment the LCP, thus not introducing an auxiliary variable and column. These properties may allow us to converge faster to the solution.</p><p>Our goal in this work was to investigate the computational merit of tailored branch-and-bound implementations that does not require introducing binary variables for solving subset selection in regression and portfolio selection problem in asset management. To find good (but not necessarily provably optimal) solutions quickly, these approaches appear to have advantages over generalized solvers. We hope to further improve our implementation and explore the practicality of our algorithm to other examples of CCQOs.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix A: Additional tables</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Table 7</head><label>7</label><figDesc>different instances for each (d, K) pair were solved and v denotes the instance number Results for Subset Selection with 3600 CPU seconds. d is the number of variables, K is the size of the selected subset, and RSS is the residual sum of squares. Five different instances for each (d, K) pair were solved. v denotes the instance number</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Results for Subset Selection with 60 CPU seconds. The column "time" is in CPU seconds and "RSS" is the residual sum of squares</figDesc><table><row><cell>d</cell><cell>K</cell><cell>Forward</cell><cell>BnB</cell><cell></cell><cell></cell><cell></cell><cell>CplexMIQP</cell><cell></cell></row><row><cell></cell><cell></cell><cell>RSS</cell><cell cols="4">Time Nodes Best RSS</cell><cell cols="2">Time Nodes</cell><cell>Best</cell><cell>RSS</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>node</cell><cell></cell><cell></cell><cell></cell><cell>node</cell></row><row><cell>20</cell><cell>10</cell><cell cols="2">7,518 0.03</cell><cell>234</cell><cell>116</cell><cell></cell><cell>4,306 0.04</cell><cell>249</cell><cell>140</cell><cell>4,306</cell></row><row><cell>20</cell><cell>5</cell><cell cols="2">22,358 0.02</cell><cell>174</cell><cell>2</cell><cell cols="2">19,343 0.05</cell><cell>266</cell><cell>247</cell><cell>19,343</cell></row><row><cell>50</cell><cell>40</cell><cell cols="3">37,455 1.89 1,149</cell><cell>0</cell><cell></cell><cell cols="3">2,550 15.06 35,805 35,498</cell><cell>2,552</cell></row><row><cell>50</cell><cell>20</cell><cell cols="4">113,515 60.13 88,729 7,595</cell><cell cols="3">65,301 60.33 167,208</cell><cell>0</cell><cell>72,272</cell></row><row><cell>100</cell><cell>80</cell><cell cols="4">359,586 24.69 2,362 1,275</cell><cell></cell><cell cols="3">6,610 60.15 53,609 52,943</cell><cell>674,280</cell></row><row><cell>100</cell><cell>50</cell><cell cols="4">487,124 60.32 9,103 2,338</cell><cell cols="3">116,265 60.11 54,750</cell><cell>0</cell><cell>692,558</cell></row><row><cell>100</cell><cell>20</cell><cell cols="4">815,097 60.18 34,425 5,077</cell><cell cols="3">636,623 60.12 53,547</cell><cell>0</cell><cell>692,558</cell></row><row><cell cols="4">500 400 11,914,096 108.46</cell><cell>3</cell><cell>0</cell><cell cols="2">64,229 60.36</cell><cell>346</cell><cell>118 83,047,520</cell></row><row><cell cols="4">500 100 22,246,620 61.26</cell><cell>3</cell><cell cols="3">0 15,534,560 60.34</cell><cell>302</cell><cell>113 83,122,180</cell></row><row><cell>500</cell><cell cols="4">20 36,746,520 64.04 1,489</cell><cell cols="3">868 35,458,480 60.80</cell><cell>130</cell><cell>0 102,030,200</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Results for Subset Selection with 3600 CPU seconds. The column "time" is in CPU seconds and "RSS" is the residual sum of squares</figDesc><table><row><cell>d</cell><cell>K</cell><cell>BnB</cell><cell></cell><cell></cell><cell></cell><cell cols="2">CplexMIQP</cell></row><row><cell></cell><cell></cell><cell>Time</cell><cell>Nodes</cell><cell>Best</cell><cell>RSS</cell><cell>Time</cell><cell>Nodes</cell><cell>Best</cell><cell>RSS</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>node</cell><cell></cell><cell></cell><cell></cell><cell>node</cell></row><row><cell>50</cell><cell>20</cell><cell cols="3">310.28 485,646 7,595</cell><cell>65,301</cell><cell>323.85</cell><cell>893,967</cell><cell>774,687</cell><cell>65,301</cell></row><row><cell>100</cell><cell>80</cell><cell>483.97</cell><cell cols="2">82,489 77,020</cell><cell cols="4">5,851 3,255.31 2,842,164 2,836,986</cell><cell>110,216</cell></row><row><cell>100</cell><cell cols="4">50 3,600.00 655,182 11,957</cell><cell cols="3">115,926 3,600.00 3,324,088</cell><cell>0</cell><cell>692,558</cell></row><row><cell>100</cell><cell cols="4">20 3,600.00 2154,433 5,077</cell><cell cols="3">636,623 3,600.00 3,192,809</cell><cell>0</cell><cell>692,558</cell></row><row><cell cols="3">500 400 3,600.00</cell><cell>7,419</cell><cell>501</cell><cell cols="2">63,033 3,600.00</cell><cell>62,448</cell><cell>62,411 66,477,040</cell></row><row><cell cols="3">500 100 3,600.00</cell><cell>51,637</cell><cell cols="3">0 15,534,560 3,600.00</cell><cell>105,140</cell><cell>46,161 64,677,580</cell></row><row><cell>500</cell><cell cols="6">20 3,600.00 118,422 61,716 35,372,860 3,600.00</cell><cell>131,396</cell><cell>23,800 74,620,900</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3</head><label>3</label><figDesc>Results for portfolio selection, without Heuristic, solved until 120 CPU seconds</figDesc><table><row><cell>d</cell><cell>K</cell><cell cols="3">S LemkeBnB</cell><cell></cell><cell>BarrierBnB</cell><cell>CplexMIQP</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Nodes</cell><cell cols="2">Best node UB</cell><cell cols="2">Nodes Best node UB</cell><cell>Nodes</cell><cell>Best node UB</cell></row><row><cell cols="7">100 50 10 16992.20 16039.60 28.46 4526.80 4472.00</cell><cell>44.51 119697.00 76987.00 19.02</cell></row><row><cell cols="7">100 10 4 27231.40 8329.40 18.83 5686.00 1678.20</cell><cell>19.57 58530.20 12736.60 18.49</cell></row><row><cell cols="8">200 100 10 2952.80 2933.80 142.73 751.20 729.40 150.57 30188.60 30062.80 81.86</cell></row><row><cell cols="7">200 20 4 6913.20 1281.00 38.73 1284.00 656.20</cell><cell>39.77</cell><cell>7236.80 1245.60 38.73</cell></row><row><cell cols="3">500 200 10</cell><cell cols="2">142.40 -</cell><cell>-</cell><cell>30.80 -</cell><cell>-</cell><cell>4864.00 4812.60 345.46</cell></row><row><cell cols="3">500 100 10</cell><cell>164.40</cell><cell cols="2">137.80 159.68</cell><cell>33.20 -</cell><cell>-</cell><cell>782.60</cell><cell>398.00 158.68</cell></row><row><cell cols="3">500 50 4</cell><cell>64.20</cell><cell></cell><cell>46.40 90.89</cell><cell>35.40 -</cell><cell>-</cell><cell>226.40</cell><cell>140.40 90.89</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4</head><label>4</label><figDesc>Results for portfolio selection, with the root Heuristic, solved until 120 CPU seconds</figDesc><table><row><cell>d</cell><cell>K</cell><cell cols="3">S LemkeBnB</cell><cell></cell><cell>BarrierBnB</cell><cell></cell><cell>CplexMIQP</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Nodes</cell><cell cols="2">Best node UB</cell><cell cols="3">Nodes Best node UB</cell><cell>Nodes</cell><cell>Best node UB</cell></row><row><cell cols="5">100 50 10 13998.40 0.00</cell><cell cols="4">12.93 4029.40 2678.20 36.36 116468.20 70551.00 18.68</cell></row><row><cell cols="5">100 10 4 23926.40 0.00</cell><cell cols="2">14.87 4166.40</cell><cell cols="2">0.00 15.66 58410.40 12736.60 18.49</cell></row><row><cell cols="5">200 100 10 2490.60 0.00</cell><cell cols="2">32.90 485.40</cell><cell cols="2">0.00 34.51 18533.20 7800.80 52.84</cell></row><row><cell cols="5">200 20 4 6232.80 58.60</cell><cell cols="2">34.87 916.40</cell><cell cols="2">58.60 35.58</cell><cell>6937.00 1245.60 38.73</cell></row><row><cell cols="3">500 200 10</cell><cell cols="2">119.40 0.00</cell><cell>83.93</cell><cell>24.60</cell><cell>-</cell><cell>-</cell><cell>1098.00</cell><cell>0.00 138.83</cell></row><row><cell cols="3">500 100 10</cell><cell cols="2">134.00 0.00</cell><cell>80.40</cell><cell>27.00</cell><cell>-</cell><cell>-</cell><cell>1097.40</cell><cell>0.00 140.29</cell></row><row><cell cols="3">500 50 4</cell><cell cols="2">47.00 0.00</cell><cell>81.53</cell><cell>27.40</cell><cell>-</cell><cell>-</cell><cell>146.40</cell><cell>103.20 91.14</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5</head><label>5</label><figDesc>Results for portfolio selection, with the root Heuristic, solved for 3600 CPU seconds</figDesc><table><row><cell>d</cell><cell>K</cell><cell>S</cell><cell>LemkeBnB</cell><cell></cell><cell></cell><cell>CplexMIQP</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Nodes</cell><cell>Best node</cell><cell>UB</cell><cell>Nodes</cell><cell>Best node</cell><cell>UB</cell></row><row><cell>500</cell><cell>200</cell><cell>10</cell><cell>6,100</cell><cell>0</cell><cell>83.93</cell><cell>49,720</cell><cell>0</cell><cell>138.83</cell></row><row><cell>500</cell><cell>100</cell><cell>10</cell><cell>5,960</cell><cell>0</cell><cell>80.40</cell><cell>55,183</cell><cell>0</cell><cell>140.29</cell></row><row><cell>500</cell><cell>50</cell><cell>4</cell><cell>13,828</cell><cell>0</cell><cell>80.01</cell><cell>15,078</cell><cell>7,995</cell><cell>89.34</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6</head><label>6</label><figDesc>Results for Subset Selection with 60 CPU seconds. d is the number of variables, K is the size of the selected subset, and RSS is the residual sum of squares. Five</figDesc><table /></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The research of D. Bertsimas was partially supported by the Singapore-MIT alliance. The research of R. Shioda was partially supported by the Singapore-MIT alliance, the Discovery Grant from NSERC and a research grant from the Faculty of Mathematics, University of Waterloo.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Mathematical Programming in Statistics</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">S</forename><surname>Arthanari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Dodge</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The discarding of variables in multivariate analysis</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M L</forename><surname>Beale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Kendall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Mann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biometrika</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">3/4</biblScope>
			<biblScope unit="page" from="357" to="366" />
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Portfolio construction through mixed-integer programming at Grantham, Mayo, Van Otterloo and Company</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bertsimas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Darnell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Soucy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Interfaces</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="49" to="66" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Computational study on families of mixed-integer quadratic programming problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bienstock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="121" to="140" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Optimal selection of small portfolio</title>
		<author>
			<persName><forename type="first">B</forename><surname>Blog</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Van Der Hoek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">H G</forename><surname>Rinnooy Kan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">T</forename><surname>Timmer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manag. Sci</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="792" to="798" />
			<date type="published" when="1983">1983</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Heuristics for cardinality constrained portfolio optimisation</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">J</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Meade</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">E</forename><surname>Beasley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sharaiha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Operat. Res</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="1271" to="1302" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Cottle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Stone</surname></persName>
		</author>
		<title level="m">The Linear Complementarity Problem. Academic</title>
		<meeting><address><addrLine>San Diego</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m">ILOG CPLEX 8.1 User Manual. ILOG CPLEX Division</title>
		<meeting><address><addrLine>Incline Village, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Furnival</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">W</forename><surname>Wilson</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Regression by leaps and bounds</title>
		<imprint>
			<date type="published" when="1974">1974</date>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="499" to="511" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Selection of the best subset in regression analysis</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">R</forename><surname>Hockings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">N</forename><surname>Leslie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="531" to="540" />
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A limited diversification portfolio selection model for the small investor</title>
		<author>
			<persName><forename type="first">N</forename><surname>Jacob</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Finance</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="847" to="856" />
			<date type="published" when="1974">1974</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Computational aspects of alternative portfolio selection models in the presence of discrete asset choice constraints</title>
		<author>
			<persName><forename type="first">N</forename><surname>Jobst</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Horniman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Mitra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Quant. Finance</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="489" to="501" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Bimatrix equilibrium points and mathematical programming</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Lemke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manag. Sci</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="681" to="689" />
			<date type="published" when="1965">1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Equilibrium points of bimatrix games</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Lemke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Howson</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Soc. Ind. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="413" to="423" />
			<date type="published" when="1964">1964</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Portfolio optimization problem under concave transaction costs and minimal transaction unit constraints</title>
		<author>
			<persName><forename type="first">H</forename><surname>Konno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wijayanayake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Program</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="233" to="250" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An exact approach for portfolio selection with transaction costs and rounds</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mansini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Speranza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IIE Trans</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="919" to="929" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Heuristic algorithms for portfolio selection problem with minimum transaction lots</title>
		<author>
			<persName><forename type="first">R</forename><surname>Mansini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Speranza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Operat. Res</title>
		<imprint>
			<biblScope unit="volume">114</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="219" to="233" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Subset Selection in Regression</title>
		<author>
			<persName><forename type="first">A</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monographs on Statistics and Applied Probability</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<date type="published" when="1990">1990</date>
			<publisher>Chapman and Hall</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Selection of variables in linear regression using the minimum sum of weighted absolute errors criterion</title>
		<author>
			<persName><forename type="first">S</forename><surname>Narula</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wellington</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="299" to="311" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">The solution of a class of limited diversification portfolio selection problems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Owens-Butera</surname></persName>
		</author>
		<idno>CRPC-TR97724-S</idno>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
		<respStmt>
			<orgName>Rice University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A simple algorithm for optimal portfolio selection with fixed transaction costs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Subrahmanyam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manag. Sci</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="303" to="314" />
			<date type="published" when="1982">1982</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Numerical Recipes in C, 2nd edn</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Flannery</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Vetterling</surname></persName>
		</author>
		<ptr target="http://www.nr.com" />
		<imprint>
			<date type="published" when="1992">1992</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">P</forename><surname>Ryan</surname></persName>
		</author>
		<title level="m">Modern Regression Methods. Wiley Series in Probability and Statistics</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A linear programming algorithm for mutual fund portfolio selection</title>
		<author>
			<persName><forename type="first">W</forename><surname>Sharpe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Manag. Sci</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="499" to="510" />
			<date type="published" when="1967">1967</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A linear programming approximation for the general portfolio analysis problem</title>
		<author>
			<persName><forename type="first">W</forename><surname>Sharpe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Financ. Quant. Anal</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1263" to="1275" />
			<date type="published" when="1971">1971</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
