<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Robert</forename><surname>Szewczyk</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Eric</forename><surname>Osterweil</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Joseph</forename><surname>Polastre</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Michael</forename><surname>Hamilton</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Alan</forename><surname>Mainwaring</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Deborah</forename><surname>Estrin</surname></persName>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">2BEE6B399C985B0D125F9B6D681046B0</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T05:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H</head><p>istorically, the study of microclimate and habitat utilization have been largely observational, with climatic and behavioral variables being extrapolated from a few or even individual measurement sites. Today, densely deployed sensor networks are being scaled to the size of the organisms under study, sampling phenomena at frequencies the organisms encounter, and dispersed in patterns that capture the full range of environmental exposures to provide the fine-grain information needed for accurate modeling and prediction.</p><p>Ranging in size from tens to potentially thousands of nodes within a habitat patch, these networks are beginning to provide a view of often subtle changes in a given landscape at unprecedented spatial and temporal resolution. The technological challenges for developing and deploying them are daunting. They must be unobtrusive yet durable under a range of environmental stresses, including damage caused by the organisms themselves. They must be so energy efficient that they can remain in situ with little human interaction and be maintenance-free for years at a time. They must also reliably interconnect with a cyber infrastructure that permits frequent network access for data upload, device programming, and management. Here, we survey the components of a complete habitat-monitoring system, from miniature data-collection sensor nodes to data-processing backends containing millions of observations, showing how they fit into a unified architecture, deriving our data and conclusions from several case studies (see the sidebar "Sensing the Natural Environment").</p><p>Few themes permeate basic and applied ecological research to such an extent as the relationship of microclimate and ecological patterns, processes, physiology, and biological diversity. Microclimate can be defined as the climate close to surfaces, upon and beneath soils, under snow, or in water, on living things (such as trees), or even on individual animals. Individuals may disperse across broad areas, but persistence, growth, and reproduction depend on the existence of narrow ranges of key environmental conditions that vary over narrow spatial gradients. For example, we see only the stand of trees that reached the right microclimate as seeds but not the tens of thousands of seeds that perished or simply failed to take root because they germinated in areas outside the range of their tolerance.</p><p>Through their presence and activity, organisms alter their surroundings in important ways. Tree shape, physiology, and canopy structure can produce significantly different ranges of light, humidity, and temperature than might occur in an adjacent open area. In addition, burrow-nesting birds, insects, or mammals might create a further unique range of climatic values through their nest-chamber construction. Finally, it is important for life scientists to consider the effects of seasonality and longer-term patterns of growth, disturbance events, and change in terms of an organism's encounter with the environment.</p><p>Organisms do not experience the average climate but a specific microclimate on a scale proportional to their size. The ecologist who relies on extrapolations from a few measurements at sites removed from the actual location of the study species risks failing to accurately measure the degree of microenvironmental variance that organisms experience.</p><p>Better understanding of population dynamics, mortality factors, and habitat needs will come only if scientists scale their data collections to match the full range of an organism's activities. Such data is increasingly important in conservation biology, landscape monitoring and management, the setting of landacquisition priorities, and species-recovery efforts involving both plants and animals, yet traditional methodologies seldom scale to the organisms and their habitats under study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Network Architecture</head><p>Several real-world deployments of habitat monitoring applications in the U.S. have guided our devel-opment of a flexible, multilevel network architecture. Here, we discuss the structure of these systems based on developments from <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b5">6]</ref>, then describe the core services required to operate the networks. We conclude by anticipating the contribution of broader sensor network research on this emerging class of applications.</p><p>Figure <ref type="figure" target="#fig_1">1</ref> shows the main components of a typical habitat-monitoring application. The samples originate at the sensor nodes, which typically involve heterogeneous sensing capability, processing power, and storage. They are typically deployed in dense patches, where each patch corresponds to a particular slice of the habitat of interest; individual patches are often widely separated. The data from the various patches flows through the transit network to an on-site data center. In addition to storing the data from the sensor network, the data center also stores the information from the verification network.</p><p>Sensor nodes are small (only a few inches around) battery-powered devices installed in the areas of interest. A typical micronode is built around a low-power microcontroller running at a few MIPS with a few kilobytes of RAM. The sensing elements take the form of a probe connected to a general-purpose signal-acquisition board or are integrated into the packaging with microcontroller and wireless transmitter. Certain applications (such as acoustic bird-call classification) require macrosensors with additional computing power and storage. A typical macrosensor offers at least 10 times the capability-in terms of All nodes in a patch form a routing tree that is used to disseminate control information and collect and process biological data. The routing tree is rooted at the gateway node, which provides access to the transit network.</p><p>The data produced by the sensor network gains scientific validity through a process of verification and corroboration. The sheer scale of a sensor network precludes frequent in-thefield manual calibration, so any such application demands a systematic approach. While certain properties of the data can be checked through software services internal to the sensor patch, the data needs to be compared to independent calibrated instruments. A verification network is the application component responsible for collecting these independent readings. It often consists of fewer but more-established sensing devices. It needs to provide the data quickly, so scientists, as well as network administrators, can adjust the function (such as detection thresholds and sampling rates) of the sensor patch, eliminate faulty sensors, and perform maintenance.</p><p>The verification network also needs to exhibit failure modes independent of the sensor patch, a property often achieved automatically, as networks employ different sensing and networking technologies. Examples of verification networks include deployments of traditional weather stations to corroborate microclimate measurements and cameras to confirm or invalidate animal-detection algorithms. Sensing the Natural Environment T o date, three outdoor deployments of wireless sen- sor networks have implemented variations of the architecture outlined in Figure <ref type="figure" target="#fig_1">1</ref>, using different query semantics, routing service, and power-management structure.</p><p>The Extensible Sensing System at the University of California's James Reserve in the San Jacinto Mountains of southern California continuously monitors ambient microclimate below and above ground, avian nest-box interior microclimates, and animal presence in more than 100 locations within a 25-hectare study area (see the Figure upper right). Individual nodes, each with up to eight sensors, are deployed along a transect, or straight line along which ecological measurements are taken, and in dense patches, crossing all major ecosystems and environments on the Reserve. Sensor data includes temperature, humidity, photosynthetically active radiation (PAR), and infrared thermopiles for detecting animal proximity.</p><p>ESS is built on a Tiny Diffusion <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7]</ref> routing substrate running across the hierarchy of nodes. Micronodes collect low-bandwidth data and perform simple processing. Macrosensors organize the patches, initiate tasking, and further process the sensor-patch data. They usually perform functions of both cluster heads and patch gateways. In case of a macrosensor failure, the routing layer automatically associates macrosensors with the nearest available cluster head. The entire system is time-synchronized and uses S-MAC medium access control <ref type="bibr" target="#b10">[11]</ref> for low-power operation. Data and timestamps are normalized and forwarded to an Internet publish-and-subscribe middleware subsystem called the subject server bus (SSB), through which data is multicast to a heterogeneous set of clients (such as Oracle, MatLab, and LabVIEW) for processing and analyzing both historical and live data streams.</p><p>ESS makes aggressive use of hierarchy within a patch; the diversity of sensors can also be used to verify data. The SSB is a noteworthy departure from the architecture in Figure <ref type="figure" target="#fig_1">1</ref>, allowing for natural integration of triggered features into the system, in addition to data analysis.</p><p>During the summers of 2002 and 2003, scientists deployed three wireless sensor networks for habitat monitoring on Great Duck Island, about 15 miles off the coast of Maine, to monitor the Leach's Storm Petrel <ref type="bibr" target="#b5">[6]</ref>. The networks monitored underground nesting burrows and surface microclimates for biologists and ecologists. The data, consisting of temperature, humidity, occupancy, and pressure, was used to correlate nesting patterns with microclimates. A 50-node single-hop sensor network was deployed each year in patches corresponding to high densities of petrel burrows. In 2003, the scientists deployed an additional 100-node multihop network and a verification network with infrared cameras (see the Figure <ref type="figure">lower right</ref>).</p><p>The principle behind the system architecture's design is simplicity rather than generality. Nodes ran software that sampled the data periodically and routed messages to the gateway. A limited set of parameters-sampling rate and calibration data-could be tuned in situ. The gateway node was a micronode device equipped with a high-gain antenna communicating with the base station several hundred meters away. That station, located at a lighthouse keeper's house on the southern coast of the island, consisted of a solar-powered laptop with satellite Internet link. Data, stored in a relational database (PostgreSQL), was periodically replicated to a larger data store maintained at Intel Research in Berkeley, CA. To maximize the network's longevity without the overhead of timesynchronization, the network featured a low-power radio-energy sampling scheme operating at a 1% duty cycle. A notable difference from Figure <ref type="figure" target="#fig_1">1</ref> was the absence of node hierarchy in the patch; though the network contained heterogeneous nodes, all were macrosensors.</p><p>California redwoods are such large organisms that their life cycles can be measured through microclimate observations. Having developed models for their metabolism, biologists and ecologists are now using sensor networks to verify and refine these models. The sensor network measures direct and incident PAR, temperature, and relative humidity. In the fall of 2003, the scientists deployed 70 nodes on a representative tree in the middle of the forest, reporting data every minute. Biologists now want to grow the network to include both interior and edge trees in a representative grove in Sonoma County, CA.</p><p>The network is an instantiation of the Tiny Application Sensor Kit <ref type="bibr" target="#b3">[4]</ref>. The macrosensors in the patch run a version of the TinyDB query processing engine propagating queries and collecting results from a multihop network (see the article by Woo et al. in this section). There is no separate transit network; the patch bridges directly to the base station running a TASK server that logs data, queries, and network health statistics while automatically keeping a journal of the experiment. The TASK server is capable of running on a macrosensor. Deployment and in-the-field debugging are aided by a PDA-class device running a field tool application allowing for connectivity assessment and direct querying of individual sensors. The entire network is time-synchronized and duty-cycled to achieve low-power operation. c Extensible Sensing System deployment at the University of California James San Jacinto Mountains Reserve in Idyllwild, CA, where multiple hierarchical patches monitor a number of habitats.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Great Duck Island deployment; a surface mote (detail) is associated with several underground sensors (red flags) and an infrared camera (black box).</head><p>Habitat-monitoring applications consist of multiple software components implementing core system services. Because they require ways to specify and deliver data of interest, they need a routing and tasking service. Similarly, long-term operation dictates that the system operate in low-power mode; current applications achieve this goal via duty cycling, or changing the amount of time the subsystem is active during any given period, at several levels. Finally, network health monitoring and management are necessary for network users to both trust the incoming measurements and ensure the network's performance and longevity.</p><p>Routing. The routing service in habitat-monitoring networks delivers the queries to the sensor nodes and reports the data of interest; that data is either streaming (such as humidity sampled every five minutes) or triggered (such as when an animal enters the area of interest). The service copes with poor-quality links, dynamic topology changes, and potentially arbitrary termini (sinks) for data; these features all need to be robust and consume only minimal resources on the constrained nodes. Fortunately, in many cases the actual deployment simplifies the general routing problem. For example, on Great Duck Island (see the sidebar), it was sufficient for us to provide tree-based routing for data collection and simple flooding for parameter dissemination. The data to be gathered was specified ahead of time; sensor motes self-organized into a tree rooted at the patch gateway. A constrained set of commands-setting sampling rates, reporting immediate status, and invoking calibration procedures-was flooded through the network, and the acknowledgements flowed using the tree-based routing.</p><p>I n the general case, each communication pattern poses a different set of routing challenges: triggered data requires low latency; streaming data provides opportunities for efficient use of bandwidth across multiple hops; and query delivery addresses the problems of scalable, reliable dissemination. The query syntax, in particular, has tremendous influence on routing design, defining how to name the data, how often to sample it, and what type of processing to apply to the data stream; these factors in turn profoundly affect routing.</p><p>In Tiny Diffusion <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7]</ref>, the routing infrastructure is aware of data naming and provides a custom filter infrastructure. Applications like the Extensible Sensing System (ESS), discussed in the sidebar, use it to create custom behaviors; ESS executes aggregate queries across multiple sensors, detects changes like rising edges, and triggers sampling based on event detection. The predicates, specified in a variant of C, are compiled into the application. In contrast, TinyDB <ref type="bibr" target="#b4">[5]</ref> defines a SQL variant as the query language and an associated interpreter running on sensor nodes. Queries are disseminated in an epidemic fashion, and any tree-based routing service can be used for data collection and aggregation. Query semantics and their implications for routing are explored in detail in the article by Woo et al. in this section.</p><p>Duty cycling. Because habitat-monitoring applications operate for months or years at a time with limited-capacity batteries, a node spends most of its time asleep, then periodically wakes up to sample, compute, and communicate. The percentage of time each node is awake is known as the node's duty cycle, and a variety of approaches are available for achieving lowduty-cycle operation.</p><p>Carrier-sense multiple access (CSMA) can be modified to provide low-duty-cycle operation. By sensing and detecting whether activity is on the channel, a node may sleep and periodically sample the channel. If a node detects incoming energy on the channel, it stays awake to receive the packet. Because the transmitter might repeatedly send its packet, the receiver must be awake during at least one transmission of the packet-a scheme commonly called lowpower listening (LPL)-inspired by Aloha with preamble sampling <ref type="bibr" target="#b1">[2]</ref>. The node's duty cycle using LPL depends on the number of its neighbors, as well as the application and sensor sampling rate. As the number of neighbors or sampling rate increases, the traffic in any given cell increases, causing the node to be awake more often. Since the transmission length must match the channel-sampling frequency, each transmission is more expensive than the transmissions in traditional CSMA systems. B-MAC <ref type="bibr" target="#b7">[8]</ref> implements LPL for TinyOS at a variety of duty cycles. The networks on Great Duck Island employ low-power listening at 1% channel-sampling duty cycle. Accounting for packet reception, data collection, and transmission, an average node on Great Duck Island is active 2.2% of the time.</p><p>Time-division multiple access (TDMA) divides the channel into slots that are used by each transmitter to send data. To achieve low duty cycles, nodes sleep when slots are not assigned. S-MAC <ref type="bibr" target="#b10">[11]</ref> and T-MAC <ref type="bibr" target="#b9">[10]</ref> are examples of TDMA schemes optimized for low-duty-cycle sensor network applications. The downside of TDMA is its complexity in multihop environments where it requires time synchronization, organization, schedule derivation, and other distributed tasks. It also exhibits greater latency than CSMA for triggered events. Protocols used in the Tiny Application Sensor Kit (TASK) <ref type="bibr" target="#b3">[4]</ref> and ESS require time synchronization but do not perform slot allocation or scheduling.</p><p>A combination of LPL and TDMA schemes permits both communication modalities to be realized simultaneously and efficiently. LPL may be used for infrequent triggered communication. TDMA may be used for periodically collecting data at specific sampling intervals. LPL can intercept signaling traffic to achieve time synchronization to initialize a TDMA schedule.</p><p>Network health monitoring. Because sensor nodes operate in exposed environments, they are affected by local environmental conditions. For example, temperature directly affects battery voltage, which in turn affects radio communication and most sensor readings. Moisture and wildlife may penetrate the protective packaging of any given node, disabling some sensors or in extreme cases destroying a device. A health-monitoring service is crucial to providing performance and status information to remote administrators over the life spans of these systems, allowing users to perform maintenance and estimate the confidence associated with the readings. Ultimately, we would like to see the health data used within the network to perform self-maintenance.</p><p>T he health-monitoring system relies on explicit and implicit signals. Explicit health signals come from sensors dedicated to health measurement and are designed into the system. For example, all motes sense battery voltage, which provides information about remaining capacity. ESS motes collect information about relative humidity inside a sealed package; an increase above a threshold indicates it has lost its integrity. Explicit signals can be collected just like any other sensor data; for example, every reading in the Great Duck Island deployment contains information about voltage, and all TASK deployments run a dedicated query that reports health information.</p><p>Implicit health signals are computed from analysis of available sensor readings. This analysis can range from a simple threshold (such as the humidity sensor must not give readings below 0% or above 100% relative humidity) to identifying outliers from a complex, multimodal regression. Radio and real-time clock can also be treated as sources of health information; for example, a large clock skew or a high packetloss rate might indicate problems with the node. Implicit health information can be computed either offline, as in <ref type="bibr" target="#b8">[9]</ref>, or on the device. Explicit as well as implicit signals can be used to ensure liveness, or evidence a node's software is still running, and the connectivity of the network. For example, TASK uses watchdog timers to trigger a reset when a node is disconnected from the network.  By virtue of their integration with the physical world, the locations of sensors and actuators represent critical information. GPS is insufficient for computing (determining or tracking) because it is ill-suited to tiny resource-impoverished devices with severe energy constraints and not applicable to either indoor or outdoor environments lacking a clear view of the sky. Acoustic ranging may require additional infrastructure or may experience reduced accuracies due to obstructions. Providing robust localization services remains a fundamental research challenge facing the entire sensor network development community.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sought-After Advances</head><p>Because sensors quantify physical phenomenon, their readings must be accurate and accompanied by units of measurement. When size and scale require network architects to operate on aggregates of devices rather than individual elements, the accuracy and uniformity of measurements must be achieved through manufacturing processes and local adaptation in the field. When sensors are deployed in applications designed to run for years, sensor drift must be measured over time, compensated for when possible, and reported back to health and status systems. Meanwhile, maintaining distributed yet consistent clocks in sensor networks is essential for scheduling events within the system.</p><p>Due to the highly constrained power and communication resources within sensor networks, pushing computation into individual devices can reduce the energy consumption and volume of the data being communicated. To reduce processing and bandwidth demand, individual nodes should be designed to sense changes and trigger subsequent processing both locally and in neighboring nodes. Compression within and aggregation between devices can reduce the volume of information being communicated. While today's networks look toward processing to reduce power consumption, a number of applications, including audio streams, must be able to process data to cope with bandwidth limitations.</p><p>Finally, although a number of important public policy questions, including those involving privacy and security, do not necessarily arise in habitat-monitoring applications, networks for monitoring animal behavior might also be adapted for monitoring people, in private and in public (see the article by Perrig et al. in this section). While biological observation on a small scale may be widely distributed and publicized, the same kind of observation carried out on larger scales reflects policy and legal implications affecting us all. As the science and technology of habitat-monitoring matures, questions concerning the security, privacy, and social effects of such networks must be addressed.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>CAREN ROSENBLATT Miniature weather station. Node incorporates sensors for monitoring sunlight, humidity, air pressure, and temperature, along with battery, processor, and wireless network; plastic cone adds shading and protection. memory, processing, and communication bandwidth-of a micronode. A patch may contain several different sensor types. (The design constraints and capabilities of each class of device are explored in the article by Hill et al. in this section.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. System architecture for habitat monitoring.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="4,273.22,103.43,261.69,193.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="4,271.42,344.44,268.40,222.69" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Existing application deployments, including the ones discussed in the sidebar, sidestep a number of issues, despite being active areas of research. Robust localization, calibration, clock synchronization, and data processing are just a few of the soughtafter advances that would enhance future habitat-</figDesc><table><row><cell>ROBUST</cell></row><row><cell>localization, calibration,</cell></row><row><cell>clock synchronization, and</cell></row><row><cell>data processing are just a few</cell></row><row><cell>sought-after advances that</cell></row><row><cell>would enhance future</cell></row><row><cell>habitat-monitoring networks.</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>June 2004/Vol. 47, No. 6 COMMUNICATIONS OF THE ACM</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Michael Hamilton (director@jamesreserve.edu) is the director of the James San Jacinto Mountains Reserve and an adjunct assistant professor of biology at the University of California, Riverside. Deborah Estrin (destrin@cs.ucla.edu) is the director of the Center for Embedded Networked Sensing and a professor of computer science at the University of California at Los Angeles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Alan Mainwaring</head><p>Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.</p><p>© 2004 ACM 0001-0782/04/0600 $5.00 c</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Habitat monitoring: Application driver for wireless communications technology</title>
		<author>
			<persName><forename type="first">A</forename><surname>Cerpa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Elson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Girod</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2001 ACM SIGCOMM Workshop on Data Communications in Latin America and the Caribbean</title>
		<meeting>the 2001 ACM SIGCOMM Workshop on Data Communications in Latin America and the Caribbean<address><addrLine>San Jose, Costa Rica</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-03-05">Apr. 3-5, 2001</date>
			<biblScope unit="page" from="20" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Aloha with preamble sampling for sporadic traffic in ad hoc wireless sensor networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>El-Hoiydi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications</title>
		<meeting>the IEEE International Conference on Communications<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-05-02">Apr. 28-May 2, 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Matching data dissemination algorithms to application requirements</title>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Conference on Embedded Networked Sensor Systems (SenSys)</title>
		<meeting>the 1st International Conference on Embedded Networked Sensor Systems (SenSys)<address><addrLine>Los Angeles; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003-07">Nov. 5-7. 2003</date>
			<biblScope unit="page" from="218" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">TASK: Tiny Application Sensor Kit</title>
		<author>
			<persName><forename type="first">W</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hellerstein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
	<note>see berkeley.intel-research.net/task</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The design of an acquisitional query processor for sensor networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Hong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGMOD International Conference on Management of Data</title>
		<meeting>the ACM SIGMOD International Conference on Management of Data<address><addrLine>San Diego</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003">June 9-12, 2003</date>
			<biblScope unit="page" from="491" to="502" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Wireless sensor networks for habitat monitoring</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mainwaring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st ACM International Workshop on Wireless Sensor Networks and Applications</title>
		<meeting>the 1st ACM International Workshop on Wireless Sensor Networks and Applications<address><addrLine>Atlanta, Sept; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="88" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Tiny Diffusion in the Extensible Sensing System at the James Reserve</title>
		<author>
			<persName><forename type="first">E</forename><surname>Osterweil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-05">May 2003</date>
		</imprint>
	</monogr>
	<note>see www.cens.ucla.edu/~eoster/ tinydiff/</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">An adaptive CSMA layer for lowpower operation. TinyOS 1.1.3, Dec</title>
		<author>
			<persName><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
		<author>
			<persName><surname>B-Mac</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
	<note>see www.tinyos.net</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Lessons from a sensor network expedition</title>
		<author>
			<persName><forename type="first">R</forename><surname>Szewczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Polastre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mainwaring</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Culler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st IEEE European Workshop on Wireless Sensor Networks and Applications</title>
		<meeting>the 1st IEEE European Workshop on Wireless Sensor Networks and Applications<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004">Jan. 19-21, 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An adaptive energy-efficient macprotocol for wireless sensor networks</title>
		<author>
			<persName><forename type="first">T</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Langendoen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Conference on Embedded Networked Sensor Systems (SenSys)</title>
		<meeting>the 1st International Conference on Embedded Networked Sensor Systems (SenSys)<address><addrLine>Los Angeles; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003-07">Nov. 5-7. 2003</date>
			<biblScope unit="page" from="171" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An energy-efficient macprotocol for wireless sensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heidemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Infocom</title>
		<meeting>IEEE Infocom<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-06-23">2002. June 23-27, 2002</date>
			<biblScope unit="page" from="1567" to="1576" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Robert Szewczyk (szewczyk@cs.berkeley.edu) is a graduate student in the Electrical Engineering and</title>
		<imprint/>
		<respStmt>
			<orgName>Computer Sciences Department at the University of California, Berkeley</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Eric Osterweil (eoster@cens.uclaedu) is a staff researcher at the Center for Embedded Networked Sensing at the University of California at Los Angeles</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">edu) is a graduate student in the Electrical Engineering and Computer Sciences Department at the University of California</title>
		<author>
			<persName><forename type="first">Joseph</forename><surname>Polastre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">polastre@cs.berkeley.</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
