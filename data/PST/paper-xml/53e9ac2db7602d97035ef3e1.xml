<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Chip-firing Games on Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Anders</forename><surname>Bj6rner</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Royal Institute of Technology</orgName>
								<address>
									<postCode>S-10044</postCode>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Laszlo</forename><surname>Lovasz</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Royal Institute of Technology</orgName>
								<address>
									<postCode>S-10044</postCode>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Peter</forename><forename type="middle">W</forename><surname>Shor</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Royal Institute of Technology</orgName>
								<address>
									<postCode>S-10044</postCode>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">AT&amp;T Bell Laboratories</orgName>
								<address>
									<postCode>07974</postCode>
									<settlement>Murray Hill</settlement>
									<country>New Jersey, U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Anders</forename><surname>Bjorner</surname></persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Eotvos Lorand University</orgName>
								<address>
									<postCode>H-1088</postCode>
									<settlement>Budapest</settlement>
									<country key="HU">Hungary</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Laszl6</forename><surname>Lov Asz</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Princeton University</orgName>
								<address>
									<postCode>08544</postCode>
									<settlement>Princeton</settlement>
									<region>New Jersey</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Chip-firing Games on Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">DE9D21B65BC541FF96DB84ACCAD828CE</idno>
					<note type="submission">Received 13 April 1989 and accepted 25 April 1990</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T13:05+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We analyse the following (solitaire) game: each node of a graph contains a pile of chips, and a move consists of selecting a node with at least as many chips on it as its degree, and letting it send one chip to each of its neighbors. The game terminates if there is no such node. We show that the finiteness of the game and the terminating configuration are independent of the moves made. If the number of chips is less than the number of edges, the game is always finite. If the number of chips is at least the number of edges, the game can be infinite for an appropriately chosen initial configuration. If the number of chips is more than twice the number of edges minus the number of nodes, then the game is always infinite.</p><p>The independence of the finiteness and the terminating position follows from simple but powerful 'exchange properties' of the sequences of legal moves, and from some general results on 'antimatroids with repetition', i.e. languages having these exchange properties. We relate the number of steps in a finite game to the least positive eigenvalue of the Laplace operator of the graph.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Studying a certain 'balancing game', J. Spencer <ref type="bibr" target="#b12">[13]</ref> introduced the following (solitaire) game. We start with N chips in a pile. We move lN/2j of them to the right and lN /2j of them to the left by one unit (if the number of chips is odd, one chip stays in its original position). In the next step, we do the same with each of the piles, and so on. Spencer proved that for the first N steps, the procedure is well approximated by the 'Galton process', i.e. the procedure in which a fractional number of chips is allowed and the pile of N is split into two piles of size N /2.</p><p>Inspired by these results, R. Anderson et a/. <ref type="bibr" target="#b1">[2]</ref> examined this procedure in greater detail. In some respects it turned out to be more natural to study the refined procedure in which an elementary step was to select a pile with more than one chip and move one chip of the pile to the left and one to the right. Among other results, it was shown that this procedure terminates in exactly k(k-1)(2k-1)/6 steps, where k = l(N + 2)/2j. Moreover, independently of the selections made during the procedure, the terminating configuration consists of N consecutive single-chip piles, if N is odd, and N + 1 consecutive single-chip piles with the middle pile missing, if N is even.</p><p>It is natural to consider this procedure on an arbitrary finite graph G. We start with a pile of some chips on each node, N chips altogether. A step consists of selecting a node v which has at least as many chips as its degree, and move one chip from v to each of its neighbors. We call this step firing the node v. The game terminates if each node has fewer chips than its degree. The original game corresponds to the case in which the graph is a sufficiently long path and all chips are piled up on the middle node.</p><p>In general, the finiteness of this procedure will depend on both the graph and the distribution of the chips. However, we shall show that it does not depend on the choices made during the game: the graph and the original position of the chips determines both the number of steps and (if this number is finite) the terminating configuration. It seems that there are various ways to put this fact in a more general context. First, the positions of the game can be viewed as a so-called 'Church-Rosser system'. Second, the feasible sequences of moves form a language that has strong 'exchange properties'. These properties are extensions of exchange properties of greedoids and, more specifically, of antimatroids, to languages that allow repetition. We shall pursue this second approach because it will yield a more thorough understanding of the structure of feasible games. Among others, it follows that the positions that can be reached from a given beginning position form a locally free semimodular lattice. (For the connections between greedoids and Church-Rosser systems, see Faigle, Goecke and Schrader <ref type="bibr" target="#b7">[8]</ref>). A third way of putting this game in a more general context is to view it as a Petri net (for an introduction to Petri nets, see Reisig [12]). Although we have not been able to use this connection, it is possible that it could also contribute to understanding the game.</p><p>Our main concern will be to study the finiteness of the procedure. It is clear that if the number of chips, N, is more than 2 •IE(G)I-IV(G)I then the procedure cannot terminate: with so many chips, one node will have at least as many as its degree. If N ~ 2 • IE( G)l -IV( G)l then clearly we can have a terminating position. We shall prove that if the number of chips is less than IE(G)I then the game always terminates; while if IE(G)I~N~2•1E(G)I-IV(G)I then the game may or may not terminate, depending on the original configuration of the chips (both possibilities occurring for every graph and every number of chips in this range).</p><p>Our proof gives a rather poor (exponential) bound on the number of steps in which the procedure terminates (if it terminates at all). G. Tardos [14] proved that if the procedure terminates then it terminates in O(IV(GW) steps. In Section 4, we relate the chip-firing game to the eigenvalues of the Laplace matrix of the graph. This approach yields a bound on the length of this procedure in terms of the smallest positive eigenvalue of the Laplace matrix. This bound is, in terms of the number of nodes of the graph, weaker than the bound given by Tardos, but if the least positive eigenvalue of the Laplace matrix is not too small (the graph has good expanding properties), then it may be better.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">THE CHIP-FIRING GAME AND GREEDOIDS WITH REPETITION</head><p>Let us fix a connected graph G (without loops or multiple edges) on node set {1, ... , n }, and start by putting a; chips on node i, i = 1, ... , n. So a E Z':. and ~;a;= N. Recall that firing the node i means that we decrease a; by the degree deg(i) of node i, and increase ai by 1 for each neighbor j of i. Formally, we can define the vector w; by _ {deg(i), (w;)i--1, 0,</p><formula xml:id="formula_0">if j = i, if ij E E(G), otherwise.</formula><p>Then firing i means subtracting w; from a; this step is legal if a -w; ;;, 0. A position in the game is any distribution of the chips on the graph, i.e. any vector b E Z';. such that ~; b; = N. A legal game is any sequence of positions, starting with a, such that each position is obtained from the previous one by a legal step.</p><p>Let us record the order in which the nodes are fired in a game; this gives us a word formed from the nodes as letters. Let ~ denote the set of records of all legal games. We shall show that ~ has special exchange properties which imply that if it is finite then it is an 'antimatroid with repetition' (see below for definition). This will yield the following theorem: THEOREM 2.1. Given a connected graph and an initial distribution of chips, either every legal game can be continued indefinitely, or every legal game terminates after the same number of moves with the same final position. The number of times a given node is fired is the same in every legal game.</p><p>Let E be a finite set and:£ a language over E, i.e. a set of finite strings formed from the elements of E. A subword of a word a is obtained by deleting letters from a arbitrarily (so a subword need not consist of consecutive letters of a). We denote by lal the length of the word a, and by [a] the 'score' of the word a, i.e. the vector in Z! defined by</p><formula xml:id="formula_1">[a];= k, if i occurs k times in a.</formula><p>For two vectors u, vERn, we shall denote by u v v their co-ordinate-wise maximum and by u A v, their co-ordinate-wise minimum. We shall denote by luh the lrnorm (sum of absolute values of entries) of the vector u.</p><p>We say that the language :£ is left-hereditary, or briefly hereditary, if whenever a string belongs to it, every beginning section of this string also belongs to it. We say that :£is locally free if the following holds:</p><p>(LF) Let a E :£ and x =I= y be two letters in E such that ax E :£ and ay E :£. Then axy E :£.</p><p>We say that :£is permutable if:</p><formula xml:id="formula_2">(PM) Whenever a, p E :£, [a]= [{J]</formula><p>and ax E :£for some x E E, we also have {Jx E :£.</p><p>It will be easy to verify that the records of legal games have these properties. On the other hand, just these properties of a language have quite strong implications. The key to these is the following 'strong' exchange property:</p><p>(SE) If a, p E :£then a contains a subword a' such that {Ja' E 5t and</p><formula xml:id="formula_3">[{Ja'] =[a] v [{J].</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>This last property is a very strong version of the greedoid exchange property:</head><p>(GE) If a, p E :£and IPI &lt; lal then there exists a letter x in a such that {Jx E :£.</p><p>If:£ is simple, i.e. no word in:£ contains the same letter more than once, then (GE) defines greedoids (among all left-hereditary languages). Since this case does not concern us in this paper, we refer the reader to Korte and Lovasz <ref type="bibr" target="#b9">[10]</ref> for other definitions of greedoids and some basic examples and properties. In the case of simple languages, (SE) defines a special class of greedoids, called antimatroids. Antimatroids were introduced by Edelman <ref type="bibr" target="#b6">[7]</ref> and Jamison <ref type="bibr" target="#b8">[9]</ref> as closure operations abstracting the combinatorial properties of convexity and (equivalently) as locally free semimodular lattices; as special left-hereditary languages they were characterized by Korte and Lovasz <ref type="bibr" target="#b10">[ 11]</ref>. The characterization as left -hereditary simple languages with the strong exchange property was given by Bjorner <ref type="bibr" target="#b2">[3]</ref>. So the languages considered in this paper may be viewed as 'antimatroids with repetition'. Bjorner <ref type="bibr" target="#b2">[3]</ref> and Bjorner and Ziegler <ref type="bibr" target="#b4">[5]</ref> extended the notion of greedoids to languages with repeated letters. We refer to the latter for a discussion of other related exchange properties. LEMMA 2.2. Every locally free permutable left-hereditary language has the strong exchange property. Conversely, every language with the strong exchange property is locally free and permutable.</p><p>PROOF. We use induction on I[ a] v [fJ]h. Let a' consists of those letters x in a which are preceded by at least <ref type="bibr">[fJ]</ref>x occurrences of x. We show that {Ja' E :£; the fact that</p><formula xml:id="formula_4">[{Ja'] = [a] v [{J] is obvious.</formula><p>Let a" be the longest prefix of a' such that f3a" E 2. Assume, by way of contradiction, that a" =I= a', and let x be the letter in a' following a". The fact that x occurs in a' at all implies that  <ref type="bibr" target="#b10">11</ref> and so we can apply the induction hypothesis and find a subword y of f3a"</p><formula xml:id="formula_5">[a)x = [f3)x + [a')x &gt; [f3)x + [a")x = [{3a")x,</formula><formula xml:id="formula_6">= [{3a''). Moreover, l[f3a")h &lt; l[f3a')h = I[ a] v [{3)1</formula><p>such that a 1 y E .:t and [a 1 y] = [{3a"). Clearly, x does not occur in y. Since both a 1 x and a 1 y are in .:t, we can apply (LF) repeatedly and obtain that a 1 yx E 2. Now (PM) implies that f3a"x E 2, which contradicts the choice of a".</p><p>The converse, which is more straightforward, is left to the reader. D</p><p>Let .:t be any left-hereditary language. We say that a word a E .:tis basic if it is not a proper beginning section of any word in the language. It is clear that if a left-hereditary language has the strong exchange property (or just the greedoid exchange property) and has a basic word, then every basic word has the same length, and no word is longer. We call the common length of basic words the rank of the language. We say that the rank is infinite if there are no basic words. Note that in this latter case, every word can be extended indefinitely.</p><p>The strong exchange property also implies that if a and f3 are basic words then [a]= [{3). We can generalize this observation as follows. We say that two words a and f3 in a left-hereditary language .:tare equivalent (in notation a-{3), if for every string y, ay E .:t iff f3y E 2. The equivalence classes of this equivalence relation are called flats. We say that a flat f is a subflat of flat g, if every word in f can be extended to a word in g. Note that it would be enough to require this for a single word in f: if a Ef and ayE g, and f3 is equivalent to a, then f3y is in .;e by the definition of equivalence, and f3y is trivially equivalent to ay. For a study of flats in general greedoids, see <ref type="bibr">Bjorner [3)</ref>, <ref type="bibr">Crapo [6)</ref> and Bjorner, Korte and Lovasz <ref type="bibr" target="#b3">[4)</ref>.</p><p>We show now that the flats of a left-hereditary language with the strong exchange property have a particularly simple structure: LEMMA 2. 3. Let .:t be a locally free permutable left-hereditary language of finite rank and a, f3 E 2. Then the flat defined by a is a subflat of the flat defined by f3 iff <ref type="bibr">[a]</ref> </p><formula xml:id="formula_7">~ [{3]. In particular, a-f3 iff [a]= [{3).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PROOF. Assume that [a]~ [{3)</head><p>. Then by the strong exchange property, there exists a word y such that ayE .:t and [ay] = [{3). By permutability, ay belongs to the same flat as {3, and so a belongs to a subflat of this.</p><p>Conversely, assume that a defines a subflat of the flat defined by {3, and let ay be an extension of a in this flat. Let ay&lt;5 be an extension to a basic word. Then {3&lt;5 is also in the language, and is clearly also basic. But then, as remarked, [ay&lt;5] = [{3&lt;5) and hence </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D</head><p>Therefore the flats of such a language can be identified with the scores of words. These scores are partially ordered by the co-ordinate-wise ordering and form a lattice (since by the strong exchange property, the co-ordinate-wise maximum of two scores is again a score). It follows easily from the local freeness of the language that this lattice is locally free (i.e. the interval from any lattice element x to the join of all elements covering x is a Boolean algebra; see <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>). This property implies that the lattice is semimodular (i.e. if x covers x 1\ y then x v y covers y ). The lattice rank of a score vector equals its 1 1 -norm. Now we apply these general results to the language of legal games on a given graph, starting from a given position.</p><p>LEMMA 2.4. The records of legal games form a locally free permutable left-hereditary language.</p><p>PROOF. It is trivial that this language is left-hereditary. To check property (LF), note that if node y can be fired after the game a, i.e. it has enough chips on it, then this remains true after the firing of node x (this can only increase the number of chips on y), i.e. axy is a legal game. To show that the language is permutable, note that if the games a and {3 have the same score then they lead to the same position, and hence any legal continuation of one is also a legal continuation of the other. D</p><p>The positions in the game have a very simple interpretation in terms of the language.</p><p>LEMMA 2.5. Suppose the language of legal games is of finite rank. Then two legal games lead to the same position if and only if they have the same score. (Hence, the positions in the game can be identified with the flats of the language.) PROOF. Let a and {3 lead to the same position. Then they have the same continuations, and hence a-{3. By Lemma 2.3, this implies that</p><formula xml:id="formula_8">[a] = [{3]. Conversely, if [a]= [{3]</formula><p>then, as already used, they lead to the same position.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D</head><p>Now the proof of Theorem 2.1 is immediate: terminating legal games correspond to basic words and so, by the above, they have the same length and same score, and lead to the same position. REMARK 2.6. The argument of Lemma 2.4 carries over to the following more general 'game': let Ax,;_:;: b (b;:;:: 0) define a non-empty polyhedron Pin Rd. Let E be any finite set of vectors in Rd with the property that for each row vector a of A, at most one of the inner product ax (x E E) is positive. Consider the language of those sequences x 1 x 2 • • • Xn, X; E E, which satisfy x 1 + • • • + xj E P for all 1 :s;: j , ; _: ; : n. Then this language is left-hereditary, locally free and permutable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">THE FINITENESS OF THE GAME</head><p>In this section we study the question of which chip-firing games are infinite and which are finite. Let G be a connected graph with n nodes and m edges, and let us have N chips. We start with a simple lemma.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LEMMA 3.1. If a chip-firing game :S infinite, then every node is fired infinitely often.</head><p>PROOF. There is a node v which is fired infinitely often. Let u be any neighbor of v. Then every time v is fired, it sends a chip to u. Since u cannot compile more than N chips, it must be fired infinitely often itself. Since the graph is connected, this means that every node is fired infinitely often. D</p><p>Let us contrast this with the following fact proved by Tardos <ref type="bibr" target="#b13">[14]</ref>: LEMMA 3.2. If the chip-firing game terminates, then there is a node which is not fired at all.</p><p>PROOF. For the sake of completeness, we give Tardos's simple proof. We want to show that once every node has been fired, the game cannot get stuck. Consider the node v that has been idle for the longest time. Then all of its neighbors have been fired since the last firing of v, and since it received a chip from each of its neighbors, v must have at least deg( v) chips. So v can be fired. 0</p><p>The main result in this section relates the finiteness of the game to the number of chips. PROOF. It is obvious that if N &gt;2m-n then the game cannot terminate: there is always a node v with at least deg( v) chips on it. It is also obvious that if N,;; 2mn then we can place at most deg(v) -1 chips on each node v, and so there are configurations with no legal move.</p><p>Next we show that if the number of chips is at least m then there is an initial configuration that leads to an infinite game. Clearly, it suffices to show this for N = m. Consider any acyclic orientation of G, and let deg+(v) denote the out-degree of node v. Let us place deg+(v) chips on each node v; this is clearly possible since there are m chips altogether. We claim that this game is infinite.</p><p>Observe first that there must exist a node that can be fired in the first step. In fact, the orientation is acyclic, which implies that there is a source, i.e. a node v with deg(v) = deg+(v). Now fire this node, and observe that the resulting distribution of chips can also be obtained from an acyclic orientation: if we reverse the edges incident with v, we decrease the out-degree of v by deg+(v), and increase the out-degree of each of its neighbors by 1. Since reversing the edges incident with a source does not create any directed cycle, we can find a source in the resulting digraph which can again be fired, and so on.</p><p>The proof of (c) is motivated by the previous construction. Consider any distribution of N &lt; m chips on the nodes; let f(v) denote the number of chips on node v. Also consider an acyclic orientation of the graph G and the quantity</p><formula xml:id="formula_9">T = 2: max{O, f(v)-deg+(v)}. veV(G)</formula><p>We say that a node u is deficient iff(u) &lt; deg+(u); by our hypothesis that N &lt; m, there must exist a deficient node. We are going to show that we can modify the orientation during the game so that T never increases, and if the set of deficient nodes changes then T must actually decrease. If the game is infinite then every node gets fired infinitely often, and hence the set of deficient nodes must change infinitely often (since a deficient node cannot be fired). Since T cannot decrease infinitely often, this implies that the game is finite. Consider the node v that is first fired; we have f(v);;;.: deg(v). Fire v and reverse the orientation of all edges leaving v. We do not create any cycle. Moreover, we do not increase T, since the term in T corresponding to v decreases by deg(v)-deg+(v), while each of the deg(v)-deg+(v) terms corresponding to the nodes u for which uv E E( G) increases by at most 1. Also note that if such a node u was deficient then T actually decreases; if none of these was deficient then the set of deficient nodes did not change. As remarked, this proves the theorem. 0 REMARK 3.4. Suppose the chip-firing game is played on a directed graph with n nodes and m arcs, so that when vertex vis fired then deg+(v) chips are moved from .it along the outgoing arcs to the neighbors dominated by v. Furthermore, suppose that the graph has no sinks, so that every node has an arc v leaving it. The same analysis as in Lemma 2.4 shows that the language of legal games is left-hereditary, locally free and permutable (see also Remark 2.6). So Theorem 2.1 is valid also for this directed version, and one can ask for a characterization of those digraphs and initial chip configurations that guarantee finite termination. Clearly, if N &gt; m-n then the game is infinite (there must be a node v with at least deg + ( v) chips on it). For N ~ m -n the situation is more complicated, and we leave open the problem of whether there is some general result for the directed games of which parts (b) and (c) of Theorem 3.3 are special cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">CmPs AND THE EIGENVALUES OF THE LAPLACE MATRIX</head><p>The Laplace matrix L = LG = (/;j) of the graph G with n nodes is then x n matrix the rows and columns of which are indexed by the nodes, and</p><formula xml:id="formula_10">1 .. - -{~e 1 g(i), ifi = j; l] ' ifij E E(G); 0, otherwise.</formula><p>This matrix is symmetric and clearly 0 is an eigenvalue of it (with corresponding eigenvector (1, ... , 1)T). Moreover, Lis positive semidefinite, which is easily seen by expressing the corresponding quadratic form as a sum of squares:</p><formula xml:id="formula_11">xTLx = 2: (x; -xjf ijeE(G)</formula><p>If G is connected (which we assume throughout this paper), then all the other eigenvalues of L are positive, since the above quadratic form is clearly non-zero unless all entries of x are the same. The least of these non-zero eigenvalues, which we shall denote by .l. 11 is closely related to several 'expanding' properties of G (see Alon [1]). We shall need the following (probably folklore) lower bound on it (cf. also <ref type="bibr" target="#b0">[1]</ref>). Let d denote the diameter of G.</p><p>LEMMA 4.1. .l. 1 ~ 1/ (nd).</p><p>PROOF. Let w be an eigenvector belonging to ). 11 with unit length. Then there is a node, say node 1, such that Jw 1 1 ~ 1/Vn. We may assume without loss of generality that w 1 &gt; 0. Since w is orthogonal to the eigenvector belonging to the eigenvalue 0, we have ~j wj = 0, and hence there exists a k such that wk &lt; 0. Let, say, nodes 1, 2, ... , k form a minimal path from 1 to k (so that k-1 ~din this labelling). Now we have PROOF. Assume that we started with a; chips on node i and after a total of s steps, we have b; chips on node i. Let X; denote the number of times node i was fired. By the lemma of Tardos mentioned in the previous section, if the game is finite then there is a node, say node n, such that Xn = 0.</p><p>Straightforward counting yields the formula Lx =a -b.</p><p>We can express Lin the following form: </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>THEOREM 3 . 3 .</head><label>33</label><figDesc>(a) If N &gt;2m-n, then the game is infinite. (b) If m ,;; N,;; 2mn, then there exists an initial configuration guaranteeing finite termination and also one guaranteeing infinite game. (c) If N &lt; m, then the game is finite.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>k- 1 = 2 :</head><label>12</label><figDesc>(w;-wJ 2 ~ 2: (w;-W;+1) 2 ijeE(G) i=l 0Let us return to the chip-firing game. We prove the following bound on the length of the game: THEOREM 4.2. The number of steps in any terminating chip-firing game with N chips is at most 2nN I A1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>n- 1 L= 2 : 1 L</head><label>121</label><figDesc>A;• v;vi, i=l where A 1 :s;; • • • :s;; An-I are the non-zero eigenvalues of L and Vv . . . , Vn-l are corresponding orthogonal eigenvectors of unit length. Consider the generalized inverse L' of L, 'L= ~ v.vT=I-v vT=l--J .L.J 1 1 nn ' i=1 n where I is the identity matrix and J is the all-1 matrix (since {vv ... , vn} is an orthonormal basis). Hence and s = lTx =(neT -neTL'L)x = -neTL'!L'(a-b)= ~ -~(e!v;)(vi(a-b)). So we can estimates as follows (using the Cauchy-Schwartz inequality): n-1 2: (vi(a-b)? i=1 D</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>and hence we can write a as a 1 xa 2 , where [ adx = [{3a"lx• Now [ad~ [{3a"], and hence [ad v [{3a'')</figDesc><table /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Using Lemma 4.1, we obtain that s &lt; 2n 2 dN &lt; 2n 3 N. This is slightly worse than Tardos's <ref type="bibr" target="#b13">[14]</ref> O(n <ref type="bibr" target="#b3">4</ref> ) result, since N may be as large as Q(n 2 ). On the other hand, for 'expanding' graphs A. 1 is bounded from below by a constant, so in this case our bound is tighter.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Eigenvalues and expanders</title>
		<author>
			<persName><forename type="first">N</forename><surname>Alon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="83" to="96" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Disks, balls, and walls: analysis of a combinatorial game</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">W</forename><surname>Shor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Spencer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Winograd</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>to appear in Am. Math. Monthly</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On matroids, groups and exchange languages</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bjorner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Matroid Theory and its Applications</title>
		<editor>
			<persName><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Recski</surname></persName>
		</editor>
		<meeting><address><addrLine>North-Holland, Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1985">1985</date>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="25" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Homotopy properties of greedoids</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bjorner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Korte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="447" to="494" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Introduction to greedoids</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bjorner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">M</forename><surname>Ziegler</surname></persName>
		</author>
		<editor>Matroid Applications, N. White</editor>
		<imprint>
			<date type="published" when="1991">1991</date>
			<publisher>Cambridge University Press</publisher>
			<biblScope unit="page" from="284" to="357" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Selectors: a theory of formal languages, semimodular lattices, branchings, and shelling processes</title>
		<author>
			<persName><forename type="first">H</forename><surname>Crapo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Math</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="233" to="277" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Meet-distributive lattices and the anti-exchange closure</title>
		<author>
			<persName><forename type="first">P</forename><surname>Edelman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Alg. Univ</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="290" to="299" />
			<date type="published" when="1980">1980</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Church-Rosser decomposition in combinatorial structures</title>
		<author>
			<persName><forename type="first">U</forename><surname>Faigle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Goecke</surname></persName>
		</author>
		<author>
			<persName><surname>Schrader</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Op. Res</title>
		<imprint>
			<date type="published" when="1986">1986</date>
		</imprint>
		<respStmt>
			<orgName>Institute for Operations Research, University of Bonn</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">preprint</note>
	<note>To appear in</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A perspective on abstract convexity: classifying alignments by varieties</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Jamison</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Pure and Applied Mathematics</title>
		<editor>
			<persName><forename type="first">Related</forename><surname>Convexity</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">C</forename><surname>Combinatorial Geometry</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Kay</surname></persName>
		</editor>
		<editor>
			<persName><surname>Breehm</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="113" to="150" />
			<date type="published" when="1982">1982</date>
			<pubPlace>Dekker, New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<author>
			<persName><forename type="first">B</forename><surname>Korte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Structural properties of greedoids</title>
		<imprint>
			<date type="published" when="1983">1983</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="359" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Shelling structures, convexity, and a happy end</title>
		<author>
			<persName><forename type="first">B</forename><surname>Korte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Lovasz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graph Theory and Combinatorics, Proceedings of the Cambridge Combinatorial Conference in Honour of P. Erdos</title>
		<editor>
			<persName><forename type="first">B</forename><surname>Bollobas</surname></persName>
		</editor>
		<meeting><address><addrLine>New York/London</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1984">1984</date>
			<biblScope unit="page" from="219" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Petri Nets: An Introduction</title>
		<author>
			<persName><forename type="first">W</forename><surname>Reisig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985">1985</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Balancing vectors in the max norm</title>
		<author>
			<persName><forename type="first">J</forename><surname>Spencer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Combinatorica</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="55" to="66" />
			<date type="published" when="1986">1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Polynomial bound for a chip firing game on graphs</title>
		<author>
			<persName><forename type="first">G</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Discr. Math</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="397" to="398" />
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
