<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hiding Individuals and Communities in a Social Network</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Marcin</forename><surname>Waniek</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Warsaw</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tomasz</forename><surname>Michalak</surname></persName>
							<email>tomasz.michalak@cs.ox.ac.uk</email>
							<affiliation key="aff1">
								<orgName type="institution">University of Oxford &amp; University of Warsaw</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Talal</forename><surname>Rahwan</surname></persName>
							<email>trahwan@gmail.com</email>
							<affiliation key="aff2">
								<orgName type="institution">Masdar Institute of Science and Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Michael</forename><surname>Wooldridge</surname></persName>
							<email>michael.wooldridge@cs.ox.ac.uk</email>
							<affiliation key="aff3">
								<orgName type="institution">University of Oxford</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Hiding Individuals and Communities in a Social Network</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2022-12-25T13:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The Internet and social media have fueled enormous interest in social network analysis. New tools continue to be developed and used to analyse our personal connections, with particular emphasis on detecting communities or identifying key individuals in a social network. This raises privacy concerns that are likely to exacerbate in the future. With this in mind, we ask the question: Can individuals or groups actively manage their connections to evade social network analysis tools? By addressing this question, the general public may better protect their privacy, oppressed activist groups may better conceal their existence, and security agencies may better understand how terrorists escape detection. We first study how an individual can evade "network centrality" analysis without compromising his or her influence within the network. We prove that an optimal solution to this problem is hard to compute. Despite this hardness, we demonstrate that even a simple heuristic, whereby attention is restricted to the individual's immediate neighbourhood, can be surprisingly effective in practice. For instance, it could disguise Mohamed Atta's leading position within the WTC terrorist network, and that is by rewiring a strikingly-small number of connections. Next, we study how a community can increase the likelihood of being overlooked by community-detection algorithms. We propose a measure of concealment, expressing how well a community is hidden, and use it to demonstrate the effectiveness of a simple heuristic, whereby members of the community either "unfriend" certain other members, or "befriend" some non-members, in a coordinated effort to camouflage their community.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The on-going process of datafication continues to turn many aspects of our lives into computerised data <ref type="bibr" target="#b21">[23]</ref>. This data is being collected and analysed for various diverse applications by public and private institutions alike. One particular type of data that has received significant attention over the past decade concerns our social connections. To this end, a number of tools have been advocated for social network analysis, with particular emphasis on the detection of communities or the identification of key individuals within a network. For all their benefits, the widespread use of such tools raises legitimate privacy concerns. For instance, Mislove et al. <ref type="bibr" target="#b22">[24]</ref> demonstrated how, by analysing Facebook's social network structure, as well as the attributes of some users, it is possible to infer otherwise-private information about other Facebook users.</p><p>To tackle such privacy issues, various countermeasures have been proposed, ranging from strict legal controls <ref type="bibr" target="#b0">[1]</ref>, through algorithmic solutions <ref type="bibr" target="#b13">[15]</ref>, to market-like mechanisms that allow participants to monetize their personal information <ref type="bibr" target="#b18">[20]</ref>. However, to date only few such countermeasures have been implemented, leaving the privacy issue largely unresolved, e.g., as is evident from the very recent release of Facebook's "Global Government Requests Report" [2], which revealed a global increase in government requests to secretly access user data. Furthermore, it is unlikely that effective legal mechanisms will be introduced in countries with authoritarian regimes, where so-1 arXiv:1608.00375v1 [cs.SI] 1 Aug 2016 cial networking sites and other internet content is policed, and anti-governmental blogs and activities are censored <ref type="bibr" target="#b15">[17,</ref><ref type="bibr" target="#b16">18]</ref>.</p><p>Against this background, we ask the question: can individuals or communities proactively manage their social connections so that their privacy is less exposed to the workings of network analysis tools? To put it differently, can we disguise our standing in the network to escape detection? This matters because, on one hand, it assists the general public in protecting their privacy against intrusion from government and corporate interests; on the other hand, it assists counterterrorism units and lawenforcement agencies in understanding how criminals and terrorists could escape detection, especially given their increasing reliance of social-media survival strategies <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b12">14]</ref>. To date, however, this fundamental question has received little attention in the literature, as most research efforts have focused on developing ever more sophisticated network analysis tools, rather than considering how to evade them.</p><p>To address the above question from an individual's viewpoint, we focus on three main centrality measures, namely degree, closeness, and betweenness, and study how one can avoid being highlighted by those measures without compromising his or her influence. Since, from a graph-theoretic perspective, this is fundamentally an optimization problem, we analyse its computational complexity to illuminate the theoretical limits of such capability as disguising oneself. Although we show that an optimal solution is often hard to compute, we demonstrate the effectiveness of a surprisingly simple heuristic, whereby the rewiring of social connections is restricted to the individual's immediate network neighbourhood. Specifically, it involves two actions that are already available on popular social-media platforms: (i) "unfriending" certain neighbours; (ii) introducing certain neighbours to each other.</p><p>From a group's viewpoint, we study how a community can conceal itself to increase the likelihood of being overlooked by community-detection algorithms. To this end, we propose a measure of concealment, designed to quantify the degree to which a group of individuals is hidden. Using this measure, we demonstrate the effectiveness of yet another simple heuristic, whereby members of the community either "unfriend" certain other members, or "befriend" some non-members to blend into the surrounding web of social connections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Model</head><p>This section presents the basic concepts and objectives; all formal definitions can be found in the Supporting In-formation.</p><p>Centrality Measures: A measure of centrality reflects the importance of any given node in the network. Arguably, the standard centrality measures are: degree, closeness and betweenness <ref type="bibr" target="#b9">[11]</ref>. In particular, for any given node v, the degree centrality focuses on the number of neighbours that v has (the more neighbours the better). In contrast, the closeness centrality quantifies the importance of v based on its average distance to other nodes (the closer the better). Finally, the betweenness centrality focuses on the number of shortest paths on which v lies (the more paths the better).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Models of Influence:</head><p>The best established mathematical models of influence are the Independent Cascade model <ref type="bibr" target="#b10">[12]</ref> and the Linear Threshold model <ref type="bibr" target="#b14">[16]</ref>. Basically, both models start with some "active" subset of nodes, called the seed set. <ref type="foot" target="#foot_0">1</ref> Then, as time passes (in discrete rounds), new nodes become activated due to the influence from other previously-activated nodes. The two models differ in the way influence propagates through the network. Specifically, in the Independent Cascade model, an active node activates each of its neighbours with some pre-defined probability. In contrast, with the Linear Threshold model, each node has some random predefined threshold, and gets activated when the number of its active neighbors exceeds that threshold. Under either model, the influence of a node, v, on another, w, is measured as the probability that w gets activated when the seed set is {v}.</p><p>First Objective: Given a network and a source node, v † , our objective is to conceal the importance of v † by decreasing its centrality (according to each of the aforementioned measures of centrality) without compromising its influence over the network (according to the aforementioned models of influence). We do so by rewiring the links of the network, without exceeding a certain budget-the maximum number of links allowed to be modified (i.e., added or removed). To simplify our analysis, we divide the process of disguising v † into two consecutive phases. In the first phase, part of the budget is spent on minimizing the three centrality measures, during which the influence of v † is likely to decrease-we call this the centrality minimization problem. The second phase involves spending the remaining budget to recover as much as possible of the influence of v † while avoiding the addition of any links that were removed during the centrality minimization phase. Here, we consider two variants of this latter problem: (i) the individual influence recovery problem, where the goal is to recover the influence of v † over every single node, and (ii) the global influence recovery problem, where the goal is to recover the sum of influences of v † over all nodes.</p><p>Second Objective: Given a community, i.e., subset of nodes, C † , our goal is the conceal the identity of C † by hiding its existence within the network. Recall that a community structure is a partition of the set of nodes into disjoint and exhaustive subsets, or "communities". As such, C † is exposed if a community-detection algorithm is able to return a community structure, CS , such that C † ∈ CS . We hide C † by rewiring the links of the network, again according to some budget, i.e., maximum number of permitted modifications.</p><p>3 Disguising Individuals</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Hardness Results</head><p>Our main theoretical results are summarized in Table <ref type="table" target="#tab_0">1</ref> (for more details, see theorems 1 through 4 in the Supporting Information). As shown in the table, all the problems under consideration turn out to be NP-complete, with the exception of minimizing degree centrality. To put it differently, finding an optimal way to disguise one's importance in a social network is extremely difficult (from a computational point of view), not to mention the fact that it requires knowing the entire network structure, and may also require adding or removing links that are far from the source node. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">A Scalable Heuristic</head><p>Typically, one has very limited knowledge of the social ties beyond his or her immediate friends, or maybe friends of friends. However, even if one was able to somehow acquire information about the entire network structure, our theoretical results from the previous subsection suggest that it is extremely unlikely for such an individual to have the necessary computational power to optimally disguise himself or herself. Against this background, we investigate the possibility of disguising one's centrality adequately (albeit not optimally) while restricting one's attention to only his or her immediate neighbourhood, and without requiring massive computational power nor expertise in sophisticated optimization techniques. With this in mind, we propose a heuristic whose instructions are simple enough for an average user of social-networking services to understand and use, regardless of their technical background. Our heuristic, called ROAM-Remove One, Add Many-is detailed in the box below, and an illustration of how it works is presented in Figure <ref type="figure" target="#fig_8">1</ref>.</p><p>The ROAM heuristic given a budget b:</p><p>• Step 1: Remove the link between the source node, v † , and its neighbour of choice, v 0 ;</p><p>• Step 2: Connect v 0 to b − 1 nodes of choice, who are neighbours of v † but not of v 0 (if there are fewer than b − 1 such neighbours, connect v 0 to all of them).</p><p>Let us now comment on this heuristic, starting with Step 1. As far as the centrality of v † is concerned, this step can only be beneficial. More specifically, cutting off v † from one of its neighbours is the only way to reduce the degree of v † . Likewise, Step 1 can only decrease the closeness of v † (this happens when all shortest paths between v † and some other node run through the removed link), and can only decrease the betweenness of v † (this happens when some of the shortest paths going through v † contain the removed link). However, as far as the influence of v † is concerned, Step 1 may be detrimental, as it deprives v † from its direct influence over v 0 .</p><p>Moving on to Step 2, this step is primarily designed to compensate for any influence that v † may have lost during the previous step. Specifically, it creates new, indirect connections between v † and v 0 to compensate for the direct one that was removed earlier. As far as the centrality of v † is concerned, while Step 2 does not affect the degree of v † , it increases the degrees of some of its neighbours, which in turn contributes towards concealing the relative importance of v † within the network. Furthermore, the addition of a link, (v 0 , v i )-where v i is some neighbour of v † -cannot increase the closeness centrality of v † beyond its original state, i.e., its state before running the ROAM heuristic altogether. This is because any path containing (v 0 , v i ) and (v i , v † ) is certainly longer than an original path in which (v 0 , v i ) and (v i , v † ) were replaced with (v 0 , v † ). Likewise, the addition of this link cannot Figure <ref type="figure" target="#fig_8">1</ref>: Executing the ROAM heuristic twice on the 9/11 terrorist network to hide Mohamed Atta-one of the ringleaders of the attack <ref type="bibr" target="#b17">[19]</ref>. The red link is the one to be to removed by the algorithm, and the dashed links are the ones to be added. increase the betweenness centrality of v † beyond its original state, because replacing a direct connection between v † and v 0 with an indirect one cannot increase the percentage of shortest paths going through v † .</p><p>Finally, let us comment on the how to choose v 0 , and how to choose the neighbours of v † to connect to v 0 . Based on the simulation study reported in the Supporting Information, we choose v 0 to be the neighbour of v † with the most connections, and we connect v 0 to the b − 1 neighbours of v † with the least connections. With such choices, it is relatively straightforward to execute the ROAM heuristic on existing social-networking services. On Facebook, for example, one can typically view the number of friends that each of his friends has (even if some of them make this information private, one can still choose among those that do not). Once the nodes are chosen, Step 1 simply requires v † to "unfriend" v 0 , whereas</p><p>Step 2 requires v † to "suggest" the friendship of v 0 to the other chosen nodes. Note that, on Facebook, v † can only introduce two individuals to each other if they were both v † 's friends. As such, Step 2 must be executed before</p><p>Step 1, that is, v † must end the friendship with v 0 after introducing v 0 to the other nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Disguising Communities 4.1 A Measure of Concealment</head><p>We propose a measure of how well a community, C † , is hidden in a community structure, CS . Note that C † is not necessarily a member of CS . To put it differently, when describing C † as a "community", we mean to use this term in its broader sense, where C † is essentially just a subset of nodes. As such, when measuring how well C † is hidden in CS , it may well be the case that the members of C † are spread out across multiple communities in CS .</p><p>To this end, we start by proposing two measures, denoted by µ and µ , which capture different aspects of concealment. In particular, µ is defined for every community C † ⊆ V and every community structure CS as follows:</p><formula xml:id="formula_0">µ (C † , CS ) = |{C i ∈ CS : C i ∩ C † = ∅}|−1 max(|CS |−1, 1) max Ci∈CS (|C i ∩ C † |)</formula><p>.</p><p>Basically, this measure focuses on how well the members of C † are spread out across the communities in CS . In more detail, we have µ (C † , CS ) ∈ [0, 1], and the greater µ (C † , CS ), the greater the concealment of C † in CS . Note that the numerator grows linearly with the number of communities that C † is distributed over. Subtracting 1 from both the numerator and the |CS | term of the denominator is meant to handle the worst case, where all members of C † appear in a single (possibly larger) community in CS ; in this case, we have:</p><formula xml:id="formula_1">µ (C † , CS ) = 0.</formula><p>In contrast, the term max C∈CS (|C ∩ C † |) is meant to promote community structures in which the members of C † are more evenly distributed across the communities in CS . As such, the maximum concealment is achieved when the members of C † are uniformly distributed, with each member appearing in a separate community; in this case:</p><formula xml:id="formula_2">µ (C † , CS ) = 1.</formula><p>Moving on to the second measure, µ , it is defined as:</p><formula xml:id="formula_3">µ (C † , CS ) = Ci∈CS |C i \ C † | max(n − |C † |, 1)</formula><p>.</p><p>Intuitively, µ focuses on how well C † is "hidden in the crowd"; it grows linearly with the number of nonmembers of C † that appear with members of C † in the same community in CS . Note that µ (C † , CS ) ∈ [0, 1], and the greater the value, the greater the concealment of C † in CS .</p><p>Having defined µ and µ , we now use the two as building blocks to construct a single measure whereby the trade-off between µ and µ is controlled by a parameter, α ∈ [0, 1]. More formally, our proposed measure of concealment of a community C † in a community structure CS is:</p><formula xml:id="formula_4">µ(C † , CS ) = αµ (C † , CS ) + (1 − α)µ (C † , CS ).</formula><p>Figure <ref type="figure">2</ref> presents a sample network with three different community structures, and highlights the community that we wish to conceal, namely C † . For every such community structure, we measure the concealment of C † using our measure µ with α = 0.5. In particular, Figure <ref type="figure">2</ref>(a) presents one extreme where µ(C † , CS ) = 0, reflecting the fact that C † is completely exposed as a community. Figure <ref type="figure">2</ref>(b) presents the other extreme where µ(C † , CS ) = 1, reflecting the fact that C † is completely hidden, since every member appears in a separate community along some non-member of C † . Finally, a case between the two extremes is presented in Figure <ref type="figure">2(c)</ref>, where µ(C † , CS ) = 3 8 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">A Scalable Heuristic</head><p>We set to develop a simple heuristic that can be applied by any group of people regardless of their technical background or their knowledge of the network topology. After all, it is of little use to have an exact algorithm that can only be understood or applied by optimization experts armed with enormous processing power. Likewise, exact algorithms that require knowing the entire network topology may prove useless, since such knowledge is rarely available.</p><p>Our heuristic, called DICE-Disconnect Internally, Connect Externally-is detailed in the box below.</p><p>The DICE heuristic given a budget b:</p><formula xml:id="formula_5">• Step 1: Disconnect d ≤ b links from within C † ; • Step 2: Connect b − d nodes from within C † to b − d nodes from outside of C † .</formula><p>This heuristic is inspired by modularity <ref type="bibr" target="#b24">[26]</ref>-a widely used index for measuring the quality of any given community structure. Specifically, it promotes structures that have dense connections within communities and sparse connections between them. As such, communitydetection algorithms are typically designed to search for a structure that maximizes modularity. With this in mind,</p><p>Step 1 of our heuristic decreases the density of the connections within C † , whereas Step 2 increases the connections between C † and other communities. In doing so, a community-detection algorithm is more likely to overlook C † , i.e., it would fail to recognize C † as a community, and instead assign its members to multiple communities.</p><p>Finally, let us comment on how DICE can be applied in practice. On Facebook, for example, Step 1 requires some members to "unfriend" other members, which is rather straightforward. As for Step 2, members must send a friendship request to non-members; these could be classmates, coworkers, neighbours living next door, or even random people (it is possible to try multiple random friendship requests, hoping that some of them would be successful).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Data sets</head><p>We experiment with two types of real-life networks: (a). Covert organizations: we consider three terrorist network, responsible for the WTC 9/11 attacks <ref type="bibr" target="#b17">[19]</ref>; the 2002 Bali attack <ref type="bibr" target="#b11">[13]</ref>; and the 2004 Madrid train bombings <ref type="bibr" target="#b11">[13]</ref>;</p><p>(b). Social networks: we study anonymized fragments of three social networks, namely Facebook, Twitter and Google+. These fragments are taken from SNAPthe Stanford Network Analysis Platform <ref type="bibr" target="#b19">[21]</ref>.</p><p>We also study randomly-generated networks, namely: (a). Scale-free networks using the Barabasi-Albert model <ref type="bibr" target="#b2">[4]</ref>. We write ScaleFree(x, y) where x is the number of nodes; y is the number of links added with each node; ScaleFree(100, 3)  (b). Small-world networks using the Watts-Strogatz model <ref type="bibr" target="#b31">[33]</ref>. We write SmallWorld (x, y, z) where x is the number of nodes; y is the average degree; z is the rewiring probability;</p><p>(c). Random graphs generated using the Erdos-Renyi model <ref type="bibr" target="#b7">[9]</ref>. We write RandomGraph(x, y) where x is the number of nodes; y is the expected average degree.</p><p>For each type of randomly-generated networks, we report the average result taken over 50 such networks, with the error bars representing the 95% confidence intervals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Experimenting with ROAM</head><p>Each of our experiments consists of a network, a budget, a source node, and an influence model. More specifically, we experiment with a budget of 2, 3, and 4. The source node is assumed to be the one with the lowest sum of centrality rankings (ties are broken uniformly at random).</p><p>Whenever the Independent Cascade model is used, an activation probability of 0.15 is assumed on each link. On the other hand, whenever the Linear Threshold model is used, a uniform distribution of thresholds is assumed (see the Supporting Information for more details). For both models, the influence values are approximated using the Monte-Carlo method. In each of these experiment, the ROAM heuristic is executed multiple, consecutive times. Figure <ref type="figure" target="#fig_3">3</ref> shows the results of some of our experiments (the remaining results are provided in the Supporting In-</p><formula xml:id="formula_6">((b = 4, d = 0) (b = 4, d = 4)</formula><p>Madrid bombing q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00</p><p>ScaleFree(100, 3) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 formation). The centrality plots depict the ranking of the source node, whereas the influence plots depict its relative influence value (compared to the original influence value before executing the heuristic altogether). As can be seen, the heuristic is effective in decreasing the source node's ranking, and this effectiveness increases with the budget spent on rewiring the network. As for influence, the performance of the heuristic varies depending on the network, the influence model, and the budget. Overall, the greater the budget, the greater the influence, e.g., a budget of 4 manages to maintain (or even increase) the influence in 4 out of 6 cases. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Experimenting with DICE</head><p>For each network, we experiment with seven communitydetection algorithms implemented in the igraph package of the R language (version 1.0.1), namely: Eigenvector <ref type="bibr" target="#b23">[25]</ref>, Betweenness <ref type="bibr" target="#b24">[26]</ref>, Walktrap <ref type="bibr" target="#b27">[29]</ref>, Louvain <ref type="bibr" target="#b4">[6]</ref>, Greedy <ref type="bibr" target="#b5">[7]</ref>, Infomap <ref type="bibr" target="#b29">[31]</ref> and Spinglass <ref type="bibr" target="#b28">[30]</ref>. As such, every experiment consists of a community-detection algorithm and a network. The experiment starts by running the algorithm to obtain a community structure, CS . After that, the community to be hidden, i.e., C † , is chosen to be the element in CS whose size is the median of the sizes of all communities in CS (ties are broken uniformly at random). Although C † does not necessary have to be an element of CS , we choose it this way in order to study the worst case scenario in which C † is initially exposed completely. The experiment then proceeds in rounds, each involving the execution of DICE followed by the execution of the community-detection algorithm, to measure how well C † is hidden in the new outcome of the algorithm (this measurement is done using µ with α = 0.5). We set the number of rounds to be |C † |/b . In each round, we disconnect d links from within C † (chosen uniformly at random), and then connect b − d members of C † to b − d non-members of C † (again chosen uniformly at random).</p><p>Due to this randomness in our implementation, DICE may yield different results in different executions. Therefore, we repeat each experiment multiple times, and report the 95% confidence interval.</p><p>Figure <ref type="figure" target="#fig_4">4</ref> shows the results of some of our experiments (for the remaining results see the Supporting Information). As can be seen, DICE is able to hide the community, C † with varying levels of success, depending on the community-detection algorithm being used. Importantly, the performance does not appear to be overly-sensitive to the parameter d. This is important because it provides the members of C † with the ability to control this parameter as needed (i.e., control the trade-off between the number of internal edges being removed, and the number of external edges being added). For example, the members of C † might be interested in hiding their community as much as possible, while removing as few internal links as possible (after all, the added external links are fake, serving no purpose other than disguising the community, whereas the removed internal links are real; they existed in the community for a reason). In such a case, since the addition of an external link is not entirely under the control of C † (as it requires the consent of a non-member), the number of newly-added external links may be insufficient for providing a satisfactory level of concealment, in which case the members can compensate for this by sacrificing more internal links, i.e., by increasing the parameter d.</p><p>Figure <ref type="figure" target="#fig_5">5</ref> illustrates the average value of our concealment measure, µ, in each experiment where b = 4 and d = 2. In particular, each row represents a communitydetection algorithm, each row represents a network, and the intensity of the colour in each cell represents the average value of µ, taken over 50 simulations, either by generating a new random network in each simulation, or by re-running the simulation over and over on the same reallife network (recall that our implementation of DICE is non-deterministic, and may yield different results on the same network). As can be seen, the Infomap <ref type="bibr" target="#b29">[31]</ref> algorithm seems to be the most difficult to fool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Discussion</head><p>Our goal was to understand the practical limits of disguising individuals and communities, to increase the likelihood of them being overlooked by social network analysis tools. Our main result is that, despite the hardness of finding an optimal solution, disguise is surprisingly easy in practice using simple heuristics that are readilyimplementable even by lay people. Viewed from a different perspective, our work can be seen as an extension of the sensitivity analyses of centrality measures <ref type="bibr" target="#b6">[8]</ref> and community detection algorithms <ref type="bibr" target="#b26">[28]</ref>; while such analyses typically consider the effects of small network alterations, we consider changes that are much wider in scope, and strategic in nature.</p><p>On one hand, our findings contribute towards charting the limits of protecting privacy in social networks. On the other hand, they expose implications for using generic social network analysis tools in security applications; the fact that such tools can be easily misled underlines the need for developing specialized tools that account for the nature of links and nodes in the network and not just the topology per se.</p><p>Despite these findings, our understanding of how to evade social network analysis tools is still limited, with many research questions yet to be answered. For instance, we still do not know how a relationship can be hidden from the eyes of link-prediction algorithms <ref type="bibr" target="#b20">[22]</ref>, or how an individual can evade detection by Eigenvector centrality-the backbone of Google's search engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Organization of the Appendix</head><p>In this document, we formally define the relevant centrality measures and influence models, before defining our optimization problems (Section B). After that, we present the proofs of our theoretical results (Section C), followed by a discussion of various experimental results (Section D). Finally, we study the problem of constructing a network from scratch, designed for the sole purpose of concealing the identity of the leader while ensuring that it is a highly influential node in the network (Section E).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Definitions</head><p>Basic Notation: Let G = (V, E) ∈ G denote a network, where V = {v 1 , . . . , v n } is the set of n nodes and E ⊆ V ×V is the set of edges. A path is a sequence of distinct nodes, v l , . . . , v k , such that every two consecutive nodes are connected by an edge. The length of a path is considered to be the number of edges in that path. For any pair of nodes, v i , v j in G, the set of all shortest paths between them is denoted by sp G (v i , v j ), and the distance between them is denoted by d G (v i , v j ), where distance is defined as the length of a shortest path between the two. In case of an undirected network G we do not discern between edges (v i , v j ) and (v j , v i ); otherwise the network is said to be directed. Furthermore, G is said to be connected (strongly connected for directed networks) if there exists a path between every pair of nodes in G.</p><p>We denote by N pred</p><formula xml:id="formula_7">G (v i ) the set of predecessors of v i in G, that is, N pred G (v i ) = {v j ∈ V : (v j , v i ) ∈ E}. On the other hand, we denote by N succ G (v i ) the set of successors of v i in G, i.e., N succ G (v i ) = {v j ∈ V : (v i , v j ) ∈ E}. Finally, we denote by N G (v i ) the set of neighbours of v i in G, i.e., N G (v i ) = N pred G (v i ) ∪ N succ G (v i ).</formula><p>For the case of undirected graph, we will assume that</p><formula xml:id="formula_8">N G (v i ) = N pred G (v i ) = N succ G (v i ).</formula><p>To make the notation more readable, we will often denote two arbitrary nodes by v and w, instead of v i and v j . Moreover, we will often omit the network itself from the notation whenever it is clear from the context, e.g., by writing d(v, w) instead of d G (v, w); this applies not only to the notation presented thus far, but to all notation.</p><p>We consider a community structure, CS = {C 1 , . . . , C k }, to be a partition of the set of nodes into disjoint and exhaustive subsets, or communities.<ref type="foot" target="#foot_1">2</ref> Formally, it satisfies the following three conditions:</p><formula xml:id="formula_9">∀ Ci∈CS C i ⊆ V , Ci∈CS C i = V , and ∀ Ci,Cj ∈CS C i ∩ C j = ∅.</formula><p>Centrality Measures: Formally, a centrality measure <ref type="bibr" target="#b9">[11]</ref> is a function c : G × V → R. The degree centrality <ref type="bibr" target="#b30">[32]</ref> is denoted by c degr , the closeness centrality <ref type="bibr" target="#b3">[5]</ref> is denoted by c clos , and the betweeness centrality <ref type="bibr" target="#b1">[3,</ref><ref type="bibr" target="#b8">10]</ref> is denoted by c betw . Specifically, given a node v i ∈ V and an undirected network, we have:</p><formula xml:id="formula_10">c degr (G, v i ) = |N G (v i )| n − 1 c clos (G, v i ) = n − 1 vj ∈V d G (v i , v j ) c betw (G, v i ) = 2 (n − 1)(n − 2) vj ,v k ∈V \{vi} |{p ∈ sp G (v j , v k ) : v i ∈ p}| |sp G (v j , v k )|</formula><p>On the other hand, given a directed network, we have:</p><formula xml:id="formula_11">c degr (G, v i ) = |N G (v i )| 2(n − 1) c clos (G, v i ) = 1 n − 1 vj ∈V 1 d G (v i , v j ) c betw (G, v i ) = 1 (n − 1)(n − 2) vj ,v k ∈V \{vi} |{p ∈ sp G (v j , v k ) : v i ∈ p}| |sp G (v j , v k )| + |{p ∈ sp G (v k , v j ) : v i ∈ p}| |sp G (v k , v j )|</formula><p>Models of Influence: The propagation of influence through the network is often modeled as follows: when a certain node is sufficiently influenced by its neighbour(s), it becomes "active", in which case it starts to influence any "inactive" neighbour(s) it may have, and so on. Of course, to initiate this propagation process, a set of nodes needs to be activated right from the start; this set is called the seed set. Assuming that time moves in discrete rounds, we denote by I(t) ⊆ V the set of nodes that are active at round t, implying that I(1) is the seed set. The way influence propagates from the seed set to the remaining nodes depends on the influence model under consideration. Here, the two main models of influence are:</p><p>• Independent Cascade <ref type="bibr" target="#b10">[12]</ref>: In this model, every pair of nodes is assigned an activation probability, p :</p><formula xml:id="formula_12">V × V → [0, 1].</formula><p>Then, in every round, t &gt; 1, every node v ∈ V that became active in round t − 1 activates every inactive successor, w ∈ N succ (v) \ I(t − 1), with probability p(v, w). The process ends when there are no new active nodes, i.e., when I(t) = I(t − 1).</p><p>• Linear Threshold <ref type="bibr" target="#b14">[16]</ref>: In this model, every node v ∈ V is assigned a threshold value t v which is sampled (according to some probability distribution) from the set {0, . . . , |N pred (v)|}. Then, in every round, t &gt; 1, every inactive node v becomes active, i.e., becomes a member of I(t), if:</p><formula xml:id="formula_13">|I(t − 1) ∩ N pred (v)|≥ t v .</formula><p>The process ends when I(t) = I(t − 1).</p><p>In either model, the influence of a node, v, on another, w, is denoted by inf G (v, w) and defined as the probability that w gets activated given the seed set {v} (we make the common assumption that inf</p><formula xml:id="formula_14">G (v, v) = 0 for all v ∈ V ). The influence of v over the entire network G is then: inf G (v) = w∈V inf G (v, w).</formula><p>First Objective (Disguising a Node): Roughly speaking, given a source node, v † , and a limited budget, b, specifying the maximum number of edges that are allowed to be added or removed, our goal is to first rewire the network so as to minimize the centrality of v † , and then to further rewire the network so as to "recover" the influence of v † (in an attempt to compensate for any influence that v † might have lost during the centrality-minimization phase).</p><p>We consider two variants of the influence-recovery problem; the first focuses on the influence of v † over every single node, whereas the second focuses on the influence of v † over the network as a whole. In both cases, only the addition of edges is considered, since the removal of edges can only decrease the influence of v † . Next, we formally define the aforementioned problems.</p><p>Definition 1 (Disguising Centrality) This problem is defined by a tuple, (G, v † , b, c, R, Â), where G = (V, E) ∈ G is a network, v † ∈ V is the source node (whose centrality is to be minimized), b ∈ N is a budget specifying the maximum number of edges that can be added or removed, c : G × V → R is a centrality measure, R ⊆ E is a set of edges whose removal is forbidden, Â ⊆ (V × V ) \ E is a set of edges whose addition is forbidden. The goal is then to identify two sets of edges,</p><formula xml:id="formula_15">R * ⊆ (E \ R) and A * ⊆ (V × V ) \ (E ∪ Â), such that: |A * |+|R * |≤ b and G * = (V, (E ∪ A * ) \ R * ) is connected (strongly connected if G is directed) and G * is in: arg min G ∈{(V,(E∪A)\R):R⊆(E\ R),A⊆(V ×V )\(E∪ Â)} c(G , v † ).</formula><p>Definition 2 (Individual Influence recovery) This problem is defined by a tuple,</p><formula xml:id="formula_16">(G, v † , inf , Â, f ), where G = (V, E) ∈ G is a network, v † ∈ V is the source node (whose influence is to be recovered), inf : V × V → R is an influence measure, Â ⊆ (V × V ) \ E</formula><p>is a set of edges whose addition is forbidden, and f : V → R specifies the influences to be recovered (i.e., for every v i ∈ V we want the influence of v † over v i to be at least f (v i )). The goal is then to identify a set of edges, A * , that is in:</p><formula xml:id="formula_17">arg min A⊆(V ×V )\(E∪ Â):∀ v i ∈V inf (V,E∪A) (v † ,vi)≥f (vi)</formula><p>|A|.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3 (Global Influence recovery)</head><p>This problem is defined by a tuple, (G, v † , inf , Â, φ), where G = (V, E) ∈ G is a network, v † ∈ V is the source node (whose influence is to be recovered), inf : V × V → R is an influence measure, Â ⊆ (V × V ) \ E is a set of edges whose addition is forbidden, and φ ∈ R is the total influence to be recovered. The goal is then to identify a set of edges, A * , that is in:</p><formula xml:id="formula_18">arg min A⊆(V ×V )\(E∪ Â):inf (V,E∪A) (v † )≥φ |A|.</formula><p>Second Objectives (Disguising a Community): Roughly speaking, given a community to be hidden, C † , and a limited budget, b, specifying the maximum number of edges that are allowed to be added or removed, our goal is to rewire the network so as to hide C † . To this end, we propose a measure of concealment, µ, defined for every community C † ⊆ V and every community structure CS , as follows:<ref type="foot" target="#foot_2">3</ref> </p><formula xml:id="formula_19">µ(C † , CS ) = αµ (C † , CS ) + (1 − α)µ (C † , CS ),</formula><p>where α ∈ [0, 1] and:</p><formula xml:id="formula_20">µ (C † , CS ) = |{C i ∈ CS : C i ∩ C † = ∅}|−1 max(|CS |−1, 1) max Ci∈CS (|C i ∩ C † |) µ (C † , CS ) = Ci∈CS |C i \ C † | max(n − |C † |, 1)</formula><p>. where alg(G) is the community structure returned by the algorithm alg given the network G.</p><formula xml:id="formula_21">Note that µ(C † , CS ) ∈ [0,</formula><p>Note that the above optimization problem requires C † to know the exact community-detection algorithm that the adversary is using. Since such knowledge is hardly available, we avoid this requirement, and instead aim to develop a general-purpose heuristic, designed for no particular community-detection algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Proofs</head><p>From the computational point of view, disguising the degree centrality of v † is easy, since the only way to decrease this centrality is to remove edges connecting v † to its neighbour(s). Next, we study the problems of disguising closeness centrality and betweenness centrality, followed by the problem of influence recovery under the Independent-Cascade model and under the Linear-Threshold model.</p><p>Theorem 1 Disguising closeness centrality is NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof. The decision version of the optimization problem is the following: given</head><formula xml:id="formula_22">a network G = (V, E), a source node v † , two sets R ⊆ E, Â ⊆ (V × V ) \ E, a budget b ∈ N and a value x ∈ R, does there exist two sets R * ⊆ (E \ R) and A * ⊆ (V × V ) \ (E ∪ Â) such that |A * |+|R * |≤ b, and the network (V, (E ∪ A * ) \ R * ) is connected (strongly connected if G is directed) and c clos ((V, (E ∪ A * ) \ R * ), v † ) ≤ x?</formula><p>This problem is in NP, as given a solution, i.e., two sets A * and R * , we can verify whether c clos ((V, (E ∪ A * ) \ R * ), v † ) ≤ x in polynomial time; this only requires computing the closeness centrality of node v † in network (V, (E ∪ A * ) \ R * ).</p><p>We will now show that the decision version is NP-hard. To this end, let us denote by q ∈ R the smallest possible closeness centrality of v † in any (strongly) connected network whose set of nodes is V . One can see that q = 2/n in the case of undirected networks, and q = ( n−1 i=1 1 i )/(n − 1) in the case of directed network; this happens if and only if:</p><p>• the network is a path of which v † is an end (when dealing with undirected networks); or</p><p>• the network is a directed cycle (when dealing with directed networks).</p><p>Let us denote such a network by Q; the closeness centrality of v † in Q is then q. With this in mind, the proof involves a reduction from the Hamiltonian cycle problem (i.e., the problem of determining whether there exists a cycle that visits each node exactly once) to the decision problem of determining whether it is possible to reduce the closeness centrality of v † to a value smaller than, or equal to, q.</p><p>To this end, given some arbitrary network, G = (V , E ), be it directed or undirected, let us modify G so as to obtain a new network, G = (V, E), as illustrated in figures 6 and 7. Formally, we do so by choosing some arbitrary node, w ∈ V , and then setting:</p><formula xml:id="formula_23">V = V ∪ {v † , v 1 , v 2 }, E = E ∪ {(v † , w), (v 1 , v 2 )} ∪ {(v, v 1 ) : v ∈ V , v ∈ N G (w)},</formula><p>in the case of undirected networks, or setting: • in the Hamiltonian cycle, there are exactly two edges of which w is an end; remove any of those edges in the undirected network, or the one pointing to w in the directed network; let us denote the removed edge as (v , w);</p><formula xml:id="formula_24">V = V ∪ {v † , v 1 }, E = E ∪ {(v † , w), (v 1 , v † )} ∪ {(v, v 1 ) : v ∈ V , v ∈ N pred G (w)},</formula><p>• remove all edges from all predecessors of w to v 1 , with the exception of (v , v 1 ); there are exactly |N pred (w)| edges from G, then there exists a Hamiltonian cycle in G . We will first deal with the undirected case, before moving on to the directed case.</p><p>In the undirected case, observe that nodes v † and v 2 each have a degree of 1 in G, since their only neighbours are w and v 1 , respectively. Now since Q is connected, and since we obtained Q by only removing (rather than adding) edges from G, the nodes v † and v 2 must each have a degree of 1 in Q. Consequently, they must be the two ends of Q. This, in turn, implies that v 1 must have exactly two neighbours in Q; we know that one of them is v 2 , let us call the other v . This, as well as the fact that v † is only connected to w, implies that the segment of Q between w and v contains all  original nodes from G and only original edges from G (recall that we did not add any edges between original nodes). Finally, by adding to that segment the original edge between v and w, we obtain a Hamiltonian cycle in G .</p><formula xml:id="formula_25">𝑤 𝑣 † 𝑣 1 𝑣 2 𝑣′ 𝑤 𝑣′ 𝑣 † 𝑣 1 𝑣 2 𝑤 𝑣′ 𝐺′ 𝐺 𝑄</formula><p>As for the directed case, we observe that node v † has only one successor in Q, namely w, and only one predecessor in Q, namely v 1 . We also know that v 1 has only one predecessor in Q; let us call that predecessor v . These facts imply that the segment of Q between w and v contains all original nodes from G and only original edges from G (again, recall that we did not add any edges between original nodes). By adding to that segment the original edge between v and w, we obtain a Hamiltonian cycle in G .</p><p>We have shown that a Hamiltonian cycle in G exists if and only if it is possible to reduce the closeness centrality of v † to q by removing exactly |E |−|V |+|N pred G (w)| edges from G, which concludes the proof.</p><p>2</p><p>Theorem 2 Disguising betweenness centrality is NP-complete.</p><p>Proof. The decision version of the optimization problem is the following:</p><formula xml:id="formula_26">given a network G = (V, E), a source node v † , two sets R ⊆ E, Â ⊆ (V × V ) \ E, a budget b ∈ N and a value x ∈ R, does there exist two sets R * ⊆ (E \ R) and A * ⊆ (V × V ) \ (E ∪ Â) such that |A * |+|R * |≤ b, and the network (V, (E ∪ A * ) \ R * ) is connected (strongly connected if G is directed) and c betw ((V, (E ∪ A * ) \ R * ), v † ) ≤ x?</formula><p>This problem is in NP, as given a solution, i.e., two sets A * and R * , we can verify whether c betw ((V, (E ∪ A * ) \ R * ), v † ) ≤ x in polynomial time; this only requires computing the betweenness centrality of node v † in network (V, (E ∪ A * ) \ R * ).</p><p>We will now show that the decision version is NP-hard. To this end, we propose a reduction from the NP-complete Set cover problem. The decision version of this problem is defined by a universe U = {u 1 , . . . , u l } and a collection of sets S = {S 1 , . . . , S m } such that ∀ j S j ⊂ U , where the goal is to determine whether there exist k ≤ m elements of S the union of which equals U .  First, let us create a network G as shown in figures 8 and 9. More specifically, we create one node for every S j ∈ S, one node for every u i ∈ U , and three additional nodes, v † , v 0 and v 1 . Next, we add (either undirected or directed) edges as follows. We add the edges (v † , v 0 ) and (v 1 , v † ), and for every node u i ∈ S j we add the edges (S j , u i ) and (u i , v 1 ). In case of a directed network, we also add the edges (u i , S j ) and (v 1 , u i ) for every u i ∈ S j , as well as the edge (v 0 , v 1 ). Now, consider the problem of disguising the betweenness centrality of v † in G given R = E and Â = (V × V ) \ {(S 1 , v 0 ), . . . , (S m , v 0 )}. Note that v † "controls" (i.e., lies on) every shortest path to v 0 , and does not control any shortest path between any other pair of nodes. As such, to minimize the betweenness centrality of v † , we need to create alternative shortest paths to v 0 ; this should be done by adding (some of) the edges in {(S 1 , v 0 ), . . . , (S m , v 0 )}, since no other edge can be added, and no edge can be removed (following the definitions of R and Â). To be more precise, we can add at most b edges {(S 1 , v 0 ), . . . , (S m , v 0 )}, since we cannot exceed the budget. After this process, the betweenness centrality of v † may drop to as little as q = 2 (n−1)(n−2) in the undirected case, or as little as q = 1 (n−1)(n−2) in the directed case; this happens when v † no longer controls any of the shortest paths to v 0 except for the one from v 1 to v 0 . Note that adding an edge (S j , v 0 ) creates a new shortest path from every nodes u i ∈ S j to v 0 . This implies that the betweenness centrality of v † can be reduced to q if and only if there exists at most b elements of S the union of which equals U .</p><p>We have just reduced the decision version of the Set Cover problem given k to the following decision problem: Given network G and budget b = k, where R = E and Â = (V × V ) \ {(S 1 , v 0 ), . . . , (S m , v 0 )}, determine whether it is possible to reduce the closeness centrality of v † to some value ≤ q, by removing at most b edges from G.</p><p>2</p><p>Theorem 3 Both the global and the individual influence recovery problems are NP-hard under the Independent Cascade model.</p><p>Proof. We show a reduction from the NP-complete Set cover problem, defined by a universe U = {u 1 , . . . , u l } and a collection of sets S = {S 1 , . . . , S m } such that S 1 ∪ . . . ∪ S m = U and ∀ j S j ⊆ U , and the goal is to determine whether there exist k ≤ m elements of S the union of which equals U . To this end, let us create a network G as illustrated in figures 10 and 11. In more detail, we start by creating one node for every S j ∈ S, one node for every u i ∈ U , and one additional node v † . After that, for every S j ∈ S and every u i ∈ S j , we add the edge (S j , u i ) (either directed or undirected). In the directed case we additionally add an edge Consider the influence recovery problem in G under the Independent Cascade model, where:</p><formula xml:id="formula_27">(u i , v † ) for every u i ∈ U . 𝑣 † 𝑆 1 … … 𝑆 2 𝑆 𝑚 𝑢 1 𝑢 𝑙 𝑢 2 𝑢 3</formula><formula xml:id="formula_28">• Â = (V × V ) \ {(v † , S 1 ), . . . , (v † , S m )}; • p : V × V → [0, 1] such that ∀ Sj ∈S p(v † , S j ) = 1 and ∀ Sj ∈S ∀ ui∈Sj p(S j , u i ) = 1</formula><p>, and p(v, w) = 0 for every other pair of nodes;</p><p>• for individual influence recovery, ∀ ui∈U f (u i ) = 1 and f (v) = 0 for every other node;</p><p>• for global influence recovery, φ = k + l.</p><p>The goal is then to identify the smallest subset of edges to be added to the network, A ⊆ {(v † , S 1 ), . . . , (v † , S m )}, such that either inf (V,E∪A) (v † ) ≥ φ in the global variant of the problem, or</p><formula xml:id="formula_29">∀ vi∈V inf (V,E∪A) (v † , v i ) ≥ f (v i ) in the individual variant of the problem.</formula><p>Recall that the influence of v † is measured by setting the seed set as {v † } and calculating the probability that other nodes get activated. Also recall that under the Independent Cascade model an active node, v, activates any of its predecessors, w, with probability p(v, w). Importantly, with the p function defined as above, adding an edge (v † , S j ) for some S i ∈ S makes the influence of v † on every u i ∈ S j equal to 1. Furthermore, the above definitions of φ and f imply that our goal (in both the individual and the global variants of the problem) is achieved if and only if the influence of v † on every node u i ∈ U equals 1. Consequently, our goal is achieved if and only if we add to G a set of edges, A ⊆ {(v † , S 1 ), . . . , (v † , S m )}, such that:</p><formula xml:id="formula_30">(v † ,Sj )∈A S j = U.</formula><p>Since we are interested in finding the smallest such subset, a solution to the above instance of the influence recovery problem gives us a solution to the Set Cover problem.</p><p>2</p><p>Theorem 4 Both the global and the individual influence recovery problems are NP-hard under the Linear Threshold model.</p><p>Proof. We show a reduction from the NP-complete Set cover problem, defined by a universe U = {u 1 , . . . , u l } and a collection of sets S = {S 1 , . . . , S m } such that S 1 ∪ . . . ∪ S m = U and ∀ j S j ⊆ U , and the goal is to determine whether there exist k ≤ m elements of S the union of which equals U .</p><formula xml:id="formula_31">𝑇 1 … … 𝑇 2 𝑇 𝑚 𝑢 1 𝑢 𝑙 𝑢 2 𝑢 3 𝑆 1 … 𝑆 2 𝑆 𝑚 … 𝑠 1,1 𝑠 1,𝑙 … 𝑠 2,1 𝑠 2,𝑙 … 𝑠 𝑚,1</formula><p>𝑠 𝑚,𝑙 𝑣 † For the directed case, we create a network G as illustrated earlier in Figure <ref type="figure" target="#fig_8">11</ref>. As for the undirected case, we create G as illustrated in Figure <ref type="figure" target="#fig_14">12</ref>. In more detail, for every S j ∈ S, we create two nodes, namely S j and T j , as well as l additional nodes, namely s j,1 , . . . , s j,l . We also create one node for every u i ∈ U , and finally add the source node, v † . As for the edges, for every S j ∈ S and every u i ∈ S j , we add the edge (T j , u i ). Furthermore, for every node s j,i , we add the edges (S j , s j,i ) and (s j,i , T j ). Now consider the influence recovery problem in G under the Linear Threshold model, where:</p><formula xml:id="formula_32">• Â = (V × V ) \ {(v † , S 1 ), . . . , (v † , S m )};</formula><p>• t v = l for every node v ∈ {T 1 , . . . , T m } and t v = 1 for every other node;</p><p>• for individual influence recovery, ∀ ui∈U f (u i ) = 1 and f (v) = 0 for every other node;</p><p>• for global influence recovery, φ = k + l for the directed case, and φ = k(l + 2) + l for the undirected case.</p><p>The goal is then to identify the smallest subset of edges to be added to the network,</p><formula xml:id="formula_33">A ⊆ {(v † , S 1 ), . . . , (v † , S m )}, such that either inf (V,E∪A) (v † ) ≥ φ in the global variant of the problem, or ∀ vi∈V inf (V,E∪A) (v † , v i ) ≥ f (v i ) in the individual variant of the problem.</formula><p>Recall that the influence of v † is measured by setting the seed set as {v † } and calculating the probability that other nodes get activated. Also recall that under the Linear Threshold model a node, v, gets activated if the number of its active predecessors exceeds t v . Note that, with t v defined as above, adding an edge (v † , S j ) in the undirected case leads to the activation of nodes s i,j and T i , which in turn leads to the activation of every u i ∈ S j (see Figure <ref type="figure" target="#fig_14">12</ref>). Likewise, in the directed case, adding (v † , S j ) leads to the activation of every u i ∈ S j (see Figure <ref type="figure" target="#fig_8">11</ref>). To put it differently, when adding (v † , S j ), the influence of v † on every u i ∈ S j equals 1. Importantly, the above definitions of φ and f imply that our goal (in both the individual and the global variants of the problem) is achieved if and only if the influence of v † on every node u i ∈ U equals 1. Those observations imply that our goal is achieved if and only if we add to G a set of edges, A ⊆ {(v † , S 1 ), . . . , (v † , S m )}, such that:</p><formula xml:id="formula_34">(v † ,Sj )∈A S j = U.</formula><p>Since we are interested in finding the smallest such subset, a solution to the above instance of the influence recovery problem gives us a solution to the Set Cover problem. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Empirical Evaluation D.1 Configuring the ROAM Heuristic</head><p>As mentioned in the main article, the ROAM heuristic involves choosing v 0 (the neighbour of v † whom the heuristic will disconnect from v † ), and choosing the b−1 neighbours of v † whom the heuristic will connect to v 0 . We conducted a number of experiments to determine whether it is more beneficial to choose v 0 as the neighbour of v † with the least connections or the most connections. Likewise, we wanted to determine whether it is more beneficial to choose the b − 1 neighbours of v † (who will be connected to v 0 ) as the ones with the least connections or the most connections.</p><p>In particular, Figure <ref type="figure" target="#fig_8">13</ref> compares the different settings given 50 radomly generated scale-free networks consisting of 100 nodes each, where 3 edges are added with each step of the generation process (for more details, see <ref type="bibr" target="#b2">[4]</ref>); we chose scale-free networks as they resemble real-life networks in many way, e.g., in terms of degree distribution. As for the source node, it is chosen to be the one with the lowest sum of centrality rankings (ties are broken uniformly at random). As for the Independent Cascade model, we set the activation probability to be p(v, w) = 0.15 for every pair of nodes, v, w ∈ V . As for the Linear Threshold model, for every node, v ∈ V , the threshold value, t v , is sampled uniformly at random from the set {0, . . . , |N pred (v)|}. For both models, the influence values are approximated using the Monte-Carlo method. In the figure, we write ROAM-x-y(b), where x can either be "max" or "min" (indicating that v 0 is the neighbour with the most connections or the least connections, respectively) and y can either be "max" or "min" (indicating that the b−1 neighbours are chosen to be the ones with the most connections or the least connections, respectively), whereas b represents the budget (which is set to 3 in this experiment). Since the results are averaged over 50 random networks, the error bars in the figure represent the 95% confidence intervals. For each network, the ROAM heuristic is executed multiple, consecutive times; the x-axis in each subfigure represents the number of executions. As can be seen, while there is no setting that dominates the others, the best overall performance seems to be achieved by ROAM-max-min(3). Based on this, in all subsequent experiments on ROAM, we choose v 0 as the neighbour of v † with the most connections, and we connect v 0 to the b − 1 neighbours of v † with the least connections. .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Degree Ranking Closeness Ranking</head><p>Betweenness Ranking IC Influence LT Influence Figure <ref type="figure" target="#fig_8">13</ref>: Comparing different settings of ROAM on 50 randomly generated scale-free network consisting of 100 nodes, with 3 edges added in each step of the generation process. For each such network, ROAM is executed multiple, consecutive times (the x-axis represents the number of executions). The subfigures show the source node's ranking (according to different centrality measures), and the relative change in its influence value (according to different influence models).</p><p>In the main article, due to space constraints, we only specified how the two main steps of ROAM can be applied on undirected networks. Next, we specify how these steps are modified to work on directed networks. First of all, v 0 is not chosen among the neighbours of v † , but rather among the successors of v † . This is mainly because removing a successor of v † reduces its closeness centrality, whereas removing a predecessor has no such impact. As for the b − 1 neighbours of v † to be connected to v 0 , they are chosen among the predecessors of v † ; for each such predecessor, v i , we add the edge (v i , v 0 ). This is mainly because it could potentially rebuild the influence of v † on v 0 , which was hampered by the removal of the edge (v † , v 0 ). Furthermore, for every shortest path that contains the edge (v † , v i ), the addition of (v i , v 0 ) could create a new alternative shortest path that does not pass through v † , thus further reducing the betweenness centrality of v † .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 Experimental Results</head><p>In the main article, we only presented some of the our experimental results due to space constraints; in this subsection, we present all of our experimental results. Although most of the experimental details can be found in the main article, we add here the only missing detail, which concerns the anonymized fragments of the social networks of Facebook, Twitter and Google+ (note that the fragments of Twitter and Google+ are the only directed networks in our experiments; the remaining networks are all undirected). all anonymized fragments were taken from SNAP-the Stanford Network Analysis Platform <ref type="bibr" target="#b19">[21]</ref>.</p><p>• Facebook: the small fragment consists of 61 nodes and 272 edges; the medium one consists of 333 nodes and 2523 edges; the large one consists of 786 nodes and 14027 edges;</p><p>• Twitter: the small fragment consists of 201 nodes and 2503 edges; the medium one consists of 247 nodes and 8041 edges; the large one consists of 235 nodes and 15957 edges;</p><p>• Google+: the small fragment consists of 108 nodes and 2884 edges; the medium one contains 215 nodes and 7132 edges; the large one consists of 338 nodes and 12341 edges.</p><p>Our experimental results for the ROAM heuristic are all presented in figures 16, 17 and 18, which can be found at the end of this document.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E Constructing a Network from Scratch</head><p>Having studied the problem of disguising a node by rewiring an existing network, we now study the same problem but from a different perspective, where the goal is to construct a network from scratch, designed for the sole purpose of concealing the source node, v † . In this section, we will restrict our attention to undirected networks. Specifically, given n nodes, our goal is to identify a topology in which v † has a reasonably-high influence, while at the same time ensuring that a certain number of nodes is ranked higher than v † according to each of the three centrality measures. To tackle this problem, we propose what we call a Lieutenant network, the structure of which is detailed in the box below.</p><p>The Lieutenant network of size n:</p><p>• Label one node as the source node, v † ;</p><p>• Label two groups of lieutenants, containing k nodes each, namely: L = {l 1 , . . . , l k } and L = {l 1 , . . . , l k };</p><p>• Label all remaining nodes as M = {m 1 , . . . , m λ } where λ = n − 2k − 1; these are called members;</p><p>• Connect the source node to every lieutenant;</p><p>• Connect every lieutenant in L to every one in L ;</p><p>• Connect every member to exactly c lieutenants from L and exactly c lieutenants from L while ensuring that the degrees of lieutenants differ by at most 1.</p><p>Here is how the Lieutenant network works. The source node v † only comes into contact with its lieutenants. These are the ones that are supposed to conceal v † by ensuring that they are each ranked higher than v † according to the three standard centrality measures. These are also the nodes that are supposed to pass on the influence of v † to the rest of the network. Figure <ref type="figure" target="#fig_6">14</ref>  Theorem 5 Let f denote the minimum number of members connected to any single lieutenant, i.e., f = cλ k . Then, for every Lieutenant network such that f &gt; k − 1 and f 2 &gt; 4ck, all lieutenants have greater degree, closeness and betweenness centrality than the source node v † .</p><p>Proof. Starting with degree centrality, the degree of the source node, v † , is c degr (G, v † ) = 2k n−1 , since it is only connected to lieutenants. On the other hand, the degree of a lieutenant, l i , is c degr (G, l i ) ≥ 1+k+f n−1 , since it is connected to the source node, to all lieutenants from the other group, and to at least f members. As such, we have:</p><formula xml:id="formula_35">c degr (G, l i ) − c degr (G, v † ) ≥ f − k + 1 n − 1 Therefore, c degr (G, l i ) &gt; c degr (G, v † ) for all l i ∈ L ∪ L when f &gt; k − 1.</formula><p>Moving on to closeness centrality, for any given node, v, this centrality depends inversely on the sum of the lengths of shortest paths from v to every other nodes, i.e., u∈V d G (v, u). For both the source node and every lieutenant, the distance to every other node is either 1 or 2. More precisely, for every v ∈ {v † } ∪ L ∪ L , we have:</p><formula xml:id="formula_36">u∈V d G (v, u) = 1|N (v)|+2(n − |N (v)|) = 2n − |N (v)|.</formula><p>Consequently, whenever all lieutenants have greater degree centrality than v † , they must also have greater closeness centrality than v † . This in turn implies that c clos (G,</p><formula xml:id="formula_37">l i ) &gt; c clos (G, v † ) for all l i ∈ L ∪ L when f &gt; k − 1.</formula><p>Finally, regarding betweenness centrality, let δ(v) denote: u,w∈V \{v}:u =w</p><formula xml:id="formula_38">|{p∈sp G (u,w):v∈p}| |sp G (u,w)|</formula><p>. Then the betweenness centrality of a node v ∈ V can be written as:</p><formula xml:id="formula_39">c betw (G, v) = 2 (n−1)(n−2) δ(v)</formula><p>. Furthermore, for any two lieutenants, u, w ∈ L ∪ L : u = w, let γ u,w denote the number of members that are neighbours to both of them, i.e., γ u,w = |M ∩ N G (u) ∩ N G (w)|. Note that, for every pair of lieutenants belonging to the same group, the source node belongs to exactly one of the shortest path between those two lieutenants. Based on this, we have:</p><formula xml:id="formula_40">δ(v † ) = u,w∈L:u =w 1 k + 1 + γ u,w + u,w∈L :u =w 1 k + 1 + γ u,w</formula><p>By observing that for any a, b &gt; 0 we have 1 a+b &lt; 1 a , we conclude that:</p><formula xml:id="formula_41">δ(v † ) &lt; u,w∈L:u =w 1 k + 1 + u,w∈L :u =w 1 k + 1</formula><p>Now since the number of pairs of different lieutenants from each group is k(k−1)</p><formula xml:id="formula_42">2 &lt; k(k+1)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>, then:</p><formula xml:id="formula_43">δ(v † ) &lt; k</formula><p>Having analyzed δ(v † ), let us now analyze δ(l i ) for some lieutenant l i ∈ L (the same analysis can be done for a lieutenant l j ∈ L ). In particular, since l i belongs to shortest paths (i) between every pair of lieutenants from the other group, (ii) between the source node and every member connected to l i , and (iii) between every pair of members connected to l i , we have: </p><formula xml:id="formula_44">δ(l i ) = u,w∈L :u =w 1 k + 1 + γ u,w + v∈M ∩N (li)</formula><formula xml:id="formula_45">δ(l i ) &gt; f 2c + f (f − 1) 4c &gt; f 2<label>4c</label></formula><p>Finally, by comparing δ(v † ) with δ(l i ), we find that:</p><formula xml:id="formula_46">δ(l i ) − δ(v † ) &gt; f 2 4c − k</formula><p>Therefore, if f 2 &gt; 4ck every lieutenant has higher betweenness centrality than the source node. 2</p><p>As stated in the theorem, a Lieutenant network can indeed conceal its source node as far as centrality is concerned. On the other hand, as far as influence is concerned, we evaluate the network empirically to see how the different parameters affect the influence of the source node. To this end, given a Lieutenant network of 400 nodes, we varied the parameters of the network, namely k (the size of each lieutenant group) and c (the number of lieutenants from each group, connected to any given member). For every pair, (k, c), we measured the difference in centrality between the source node, v † , and any given lieutenant (the greater the difference, the more v † is disguised), and measured the influence of v † to see how this influence is affected by the disguising process.</p><p>The results are depicted in Figure <ref type="figure" target="#fig_8">15</ref>, where the x-axis represents k and the y-axis represents c. <ref type="foot" target="#foot_3">4</ref> Roughly speaking, the results can be categorized into four categories:</p><p>• small k and small c: This yields relatively high levels of disguise in terms of betweenness, but not in terms of degree and closeness. On the other hand, it yields rather low levels of Independent-Cascade influence and Linear-Threshold influence;</p><p>• small k and large c: This yields relatively high levels of disguise in terms of degree and closeness, but not in terms of betweenness. On the other hand, it yields relatively high levels of Independent-Cascade influence, but not Linear-Threshold influence;</p><p>• large k and small c: This yields relatively low levels of disguise in terms of degree, closeness and betweenness. On the other hand, it yields relatively high levels of Linear-Threshold influence, but not Independent-Cascade influence;</p><p>• large k and large c: This yields relatively low levels of disguise in terms of degree, closeness and betweenness. On the other hand, it yields relatively high levels of Independent-Cascade influence, but not Linear-Threshold influence.</p><p>For future work, it would be interesting to identify other network structures that manage to disguise the source node according to all three centrality measures, while at the same time maintaining high levels of influence according to both models of influence. ScaleFree(100, 3) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00</p><p>ScaleFree(1000, 3) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00</p><p>RandomGraph(100, 10) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00</p><p>RandomGraph(1000, 10) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00</p><p>SmallWorld(100, 10, .25) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 SmallWorld(1000, 10, .25) q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 Bali attack q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 Madrid bombing q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.5 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.2 0.4 0.00 0.25 0.50 0.75 1.00 WTC 9/11 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.4 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.0 0.1 0.2 0.3 0.00 0.25 0.50 0.75 1.00</p><p>Facebook (small) q q q q q q q q q q q 0.000 0.025 0.050 0.075 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.00 0.05 0.10 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.00 0.05 0.10 0.15 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.00 0.05 0.10 0.15 0.00 0.25 0.50 0.75 1.00 q q q q q q q q q q q 0.00  </p><note type="other">0</note></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>( a ) 8 (Figure 2 :</head><label>a82</label><figDesc>Figure 2: How the concealment of C † differs from one community structure to another according to µ where α = 0.5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Executing ROAM multiple, consecutive times (the x-axis represents the number of executions). Given the Madrid-attack network, 50 scale-free networks, and a medium-sized fragment of Facebook's network (333 nodes, 5038 edges), the subfigures show the source node's ranking (according to different centrality measures), and the relative change in its influence value (according to different influence models). Results are for ROAM(b) : b = 2, 3, 4, where b is the budget in each execution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Executing DICE multiple, consecutive rounds (the x-axis represents the percentage of completed rounds), given the Madrid-attack network, scale-free networks, and a fragment of Facebook's network (consisting of 333 nodes, 5038 edges).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Avg. concealment-measure value in each experiment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>1 ]Definition 4 (</head><label>14</label><figDesc>for all C † and CS , with greater values indicating greater levels of concealment of C † in CS . Having presented our concealment measure, we are now ready to formally introduce our problem. Disguising a Community) This problem is defined by a tuple, (G, C † , alg, b), where G = (V, E) is a network, C † ⊆ V is the community to be hidden, alg is a community-detection algorithm, and b ∈ N is a budget specifying the maximum number of edges that can be added or removed. The goal is then to find a set of edges to be added, A * ⊆ (V ×V )\E, and another to be removed, R * ⊆ E, such that |A * |+|R * |≤ b and G * = (V, (E ∪A * )\R * ) is in: arg max G ∈{(V,(E∪A)\R) : A⊆(V ×V )\E, R⊆E, |A|+|R|≤b} µ(C † , alg(G )),</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>in the case of directed networks.We will now show that the Hamiltonian cycle problem in G is equivalent to the following decision problem: Given network G and budget b = |E |−|V |+|N pred G (w)|, where Â = R = ∅, determine whether it is possible to reduce the closeness centrality of v † to a value ≤ q, by removing at most b edges from G. Throughout the remainder of the proof, the edges and nodes in G that were in G will be referred to as "original". Firstly, we will show that if G has a Hamiltonian cycle then it is possible to obtain Q by removing |E |−|V |+|N pred G (w)| edges from G. To this end, fix a Hamiltonian cycle of G , then: • remove from G all original edges that are not in the Hamiltonian cycle; there are exactly |E |−|V | such edges;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>G (w)|− 1</head><label>1</label><figDesc>such edges. In so doing, we have obtained the network Q by removing a total of |E |−|V |+|N pred G (w)| edges from G (see figures 6 and 7). Secondly, we show that if it is possible to obtain Q by removing |E |−|V |+|N pred G</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Figure6: The main steps of reducing the Hamiltonian cycle problem to the problem of determining whether the closeness centrality of v † can be reduced to a value ≤ q in an undirected network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Figure7: The main steps of reducing the Hamiltonian cycle problem to the problem of determining whether the closeness centrality of v † can be reduced to a value ≤ q in a directed network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Undirected network used to reduce the Set cover problem to our problem of disguising the betweenness centrality of v † . To solve both problems, we consider adding (some of) the dashed edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 9 :</head><label>9</label><figDesc>Figure9: A directed network used to reduce the Set cover problem to our problem of disguising the betweenness centrality of v † . To solve both problems, we consider adding (some of) the dashed edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 10 :Figure 11 :</head><label>1011</label><figDesc>Figure 10: Undirected network used to reduce the Set cover problem to our influence recovery problem. To solve both problems, we consider adding (some of) the dashed edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Undirected network used to reduce the Set cover problem to our influence recovery problem under the Linear Threshold model. To solve both problems, we consider adding (some of) the dashed edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>−max(3) ROAM−max−min(3) ROAM−min−max(3) ROAM−min−min(3)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: An illustration of a Lieutenant network with c = 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>∩N (li):u =w 1 |sp G (u, w)| By omitting the first term of the right-hand side of the equation and observing that |M ∩ N (l i )|≥ f and |{{u, w} ⊆M ∩ N (l i )}|≥ f (f −1)2 and |sp G (u, w)|≤ 2c for every u, w ∈ M ∩ N (l i ) : u = w, we end up with the following:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 15 :Figure 16 :Figure 17 :Figure 18 :</head><label>15161718</label><figDesc>Figure 15: Given a Lieutenant netowrk of 400 nodes, with different values of parameter k (the x-axis) and parameter c (the y-axis), the figure depicts the difference in centrality between the v † and a lieutenant, as well as the influence value of v † .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 19 :</head><label>19</label><figDesc>Figure 19: Executing DICE multiple, consecutive rounds (the x-axis represents the percentage of completed rounds) in undirected random networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Figure 20 : 4 TwitterFigure 21 :Facebook 4 Figure 22 :</head><label>20421422</label><figDesc>Figure 20: Executing DICE multiple, consecutive rounds (the x-axis represents the percentage of completed rounds) in undirected real-life networks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Summary of our computational-hardness results.</figDesc><table><row><cell>Disguising centrality (Degree)</cell><cell>P</cell></row><row><cell>Disguising centrality (Closeness)</cell><cell>NPC</cell></row><row><cell cols="2">Disguising centrality (Betweenness) NPC</cell></row><row><cell>Individual influence recovery (LT)</cell><cell>NPC</cell></row><row><cell>Individual influence recovery (IC)</cell><cell>NPC</cell></row><row><cell>Global influence recovery (LT)</cell><cell>NPC</cell></row><row><cell>Global influence recovery (IC)</cell><cell>NPC</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">An active node can be thought of as an infected person who influences, but not necessarily infects, his or her neighbours. Analogously, an inactive node can be a healthy person who is influenced by any infected neighbours he or she may have; stronger influence corresponds to stronger chances of infection.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1">Some works have considered overlapping community structures<ref type="bibr" target="#b32">[34]</ref>. However, as common in the literature, we restrict our attention to disjoint communities.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2">Note that C † is not necessarily a member of CS . To put it differently, when describing C † as a "community" we use this term in its broader sense, where C † is essentially just a subset of nodes. As such, when measuring how well C † is hidden in CS , it may well be the case that the members of C † are spread out across multiple communities in CS .</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3">we set max(c) ≤ min(k) to ensure that we have a value in every cell of the grid; otherwise some cells would correspond to networks in which the are no sufficient lieutenants to connect to.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">European data protection supervisor, meeting the challenges of big data</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">The rush in a graph</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Anthonisse</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1971">1971</date>
			<pubPlace>Amsterdam</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Amsterdam Mathematical Centre</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Emergence of scaling in random networks</title>
		<author>
			<persName><forename type="first">A.-L</forename><surname>Barabási</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">science</title>
		<imprint>
			<biblScope unit="volume">286</biblScope>
			<biblScope unit="issue">5439</biblScope>
			<biblScope unit="page" from="509" to="512" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An improved index of centrality</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Beauchamp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavioral Science</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="161" to="163" />
			<date type="published" when="1965">1965</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast unfolding of communities in large networks</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Blondel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-L</forename><surname>Guillaume</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lambiotte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Lefebvre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Statistical Mechanics: Theory and Experiment</title>
		<imprint>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">P10008</biblScope>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Finding community structure in very large networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Clauset</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Moore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical review E</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">66111</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visual reasoning about social networks using centrality sensitivity. Visualization and Computer Graphics</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Correa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Crnovrsanin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="106" to="120" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">On random graphs i</title>
		<author>
			<persName><forename type="first">P</forename><surname>Erdős</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rényi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Publ. Math. Debrecen</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="290" to="297" />
			<date type="published" when="1959">1959</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A set of measures of centrality based on betweenness</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Sociometry</title>
		<imprint>
			<biblScope unit="page" from="35" to="41" />
			<date type="published" when="1977">1977</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Centrality in social networks conceptual clarification</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Social networks</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="215" to="239" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Using complex systems analysis to advance marketing theory development: Modeling heterogeneity effects on new product growth through stochastic cellular automata</title>
		<author>
			<persName><forename type="first">J</forename><surname>Goldenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Libai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Muller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Academy of Marketing Science Review</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Connecting the dots can the tools of graph theory and social-network studies unravel the next big plot?</title>
		<author>
			<persName><forename type="first">B</forename><surname>Hayes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Scientist</title>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="400" to="404" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">F</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Vorobyeva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gabriel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Velasquez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Manrique</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Restrepo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wuchty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">New online ecology of adversarial aggregates: Isis and beyond</title>
				<imprint>
			<date type="published" when="2016">2016</date>
			<biblScope unit="volume">352</biblScope>
			<biblScope unit="page" from="1459" to="1463" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Private algorithms for the protected in social network search</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kearns</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">S</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Yaroslavtsev</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>Proceedings of the National Academy of Sciences</publisher>
			<biblScope unit="page">201510612</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Maximizing the spread of influence through a social network</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">É</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining</title>
				<meeting>the ninth ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="137" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">How censorship in china allows government criticism but silences collective expression</title>
		<author>
			<persName><forename type="first">G</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Political Science Review</title>
		<imprint>
			<biblScope unit="volume">107</biblScope>
			<biblScope unit="issue">02</biblScope>
			<biblScope unit="page" from="326" to="343" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Reverse-engineering censorship in china: Randomized experimentation and participant observation</title>
		<author>
			<persName><forename type="first">G</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">345</biblScope>
			<biblScope unit="issue">6199</biblScope>
			<biblScope unit="page">1251722</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Mapping networks of terrorist cells</title>
		<author>
			<persName><forename type="first">V</forename><surname>Krebs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Connections</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="43" to="52" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">I</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Stodden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bender</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Nissenbaum</surname></persName>
		</author>
		<title level="m">Privacy, big data, and the public good: frameworks for engagement</title>
				<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Learning to discover social circles in ego networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Mcauley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
				<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="539" to="547" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Link prediction in complex networks: A survey</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lü</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica A</title>
		<imprint>
			<biblScope unit="volume">390</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">11501170</biblScope>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Big Data: A Revolution That Will Transform How We Live, Work and Think. Viktor Mayer-Schnberger and Kenneth Cukier</title>
		<author>
			<persName><forename type="first">V</forename><surname>Mayer-Schnberger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
			<publisher>John Murray Publishers</publisher>
			<pubPlace>UK</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">You are who you know: Inferring user profiles in online social networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mislove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Viswanath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">P</forename><surname>Gummadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third ACM International Conference on Web Search and Data Mining, WSDM &apos;10</title>
				<meeting>the Third ACM International Conference on Web Search and Data Mining, WSDM &apos;10<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Finding community structure in networks using the eigenvectors of matrices</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical review E</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">36104</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Finding and evaluating community structure in networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Girvan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">26113</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Pro-ISIS Online Groups Use Social Media Survival Strategies to Evade Authorities</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nordrum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A comparison of community detection algorithms on artificial networks</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">K</forename><surname>Orman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Labatut</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Discovery science</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="242" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Computing communities in large networks using random walks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Pons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Latapy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer and Information Sciences-ISCIS 2005</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="284" to="293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Statistical mechanics of community detection</title>
		<author>
			<persName><forename type="first">J</forename><surname>Reichardt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bornholdt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">16110</biblScope>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The map equation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Rosvall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Axelsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Bergstrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The European Physical Journal Special Topics</title>
		<imprint>
			<biblScope unit="volume">178</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="13" to="23" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Group structure and the behavior of individuals in small groups</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">E</forename><surname>Shaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Psychology</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="139" to="149" />
			<date type="published" when="1954">1954</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Collective dynamics of small-world networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Watts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Strogatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">nature</title>
		<imprint>
			<biblScope unit="volume">393</biblScope>
			<biblScope unit="issue">6684</biblScope>
			<biblScope unit="page" from="440" to="442" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Overlapping community detection in networks: The state-of-the-art and comparative study</title>
		<author>
			<persName><forename type="first">J</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kelley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">K</forename><surname>Szymanski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys (csur)</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">43</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
