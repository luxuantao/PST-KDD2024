<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Neural Network Approximation-based Near-optimal Motion Planning with Kinodynamic Constraints Using RRT</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Yang</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Marine Science and Technology</orgName>
								<orgName type="institution">Northwestern Polytechnical University</orgName>
								<address>
									<postCode>710072</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><roleName>Member, IEEE</roleName><forename type="first">Rongxin</forename><surname>Cui</surname></persName>
							<email>r.cui@nwpu.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">School of Marine Science and Technology</orgName>
								<orgName type="institution">Northwestern Polytechnical University</orgName>
								<address>
									<postCode>710072</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">College of Automation Science and Engineering</orgName>
								<orgName type="institution">South China University of Technology</orgName>
								<address>
									<postCode>510641</postCode>
									<settlement>Guangzhou</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Demin</forename><surname>Xu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Marine Science and Technology</orgName>
								<orgName type="institution">Northwestern Polytechnical University</orgName>
								<address>
									<postCode>710072</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">College of Automation Science and Engineering</orgName>
								<orgName type="institution">South China University of Technology</orgName>
								<address>
									<postCode>510641</postCode>
									<settlement>Guangzhou</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rongxin</forename><forename type="middle">Cui</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Marine Science and Technology</orgName>
								<orgName type="institution">Northwestern Polytechnical University</orgName>
								<address>
									<postCode>710072</postCode>
									<settlement>Xi&apos;an</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Neural Network Approximation-based Near-optimal Motion Planning with Kinodynamic Constraints Using RRT</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C4F8F4AA95F62A6E8FD418322718BB9E</idno>
					<idno type="DOI">10.1109/TIE.2018.2816000</idno>
					<note type="submission">This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics received June 20, 2017; revised August 18, 2017 and September 28, 2017; accepted March 02, 2018. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-27T05:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Motion planning</term>
					<term>Neural networks</term>
					<term>Sampling-based algorithms</term>
					<term>Kinodynamic constraints</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, the problem of near-optimal motion planning for vehicles with nonlinear dynamics in a clustered environment is considered. Based on rapidlyexploring random trees (RRT), we propose an incremental sampling-based motion planning algorithm, i.e., nearoptimal RRT (NoD-RRT). This algorithm aims to solve motion planning problems with nonlinear kinodynamic constraints. To achieve the cost/metric between two given states considering the nonlinear constraints, a neural network is utilized to predict the cost function. On this basis, a new reconstruction method for the random search tree is designed to achieve a near-optimal solution in the configuration space (C-space). Rigorous proofs are presented to show the asymptotical near-optimality of NoD-RRT. Simulations are conducted to validate the effectiveness of NoD-RRT through comparisons with typical RRT and kinodynamic RRT*. In addition, NoD-RRT is demonstrated in an experiment using a Pioneer3-DX robot.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>In recent years, robot motion planning problems have received a considerable amount of research attention because of their important applications, such as civilian search/rescue, autonomous exploration, storehouse management, assembly planning, bioengineering, and so forth <ref type="bibr" target="#b0">[1]</ref>- <ref type="bibr" target="#b2">[3]</ref>. Motion planning is one of the basic issues in industrial processes since most industrial production processes need robotic or mechanical assistance. Robots, vehicles and machines can operate more safely with a good path or motion planning, such as autonomous guided vehicles (AGVs) in automated storage and retrieval systems (ASRS), autonomous robots in assembly processing, mechanical arms in chip production, and so on. In addition, motion planning is also important in industrial processes because of energy optimality or time optimality or because a combination of robots and vehicles is generally considered <ref type="bibr" target="#b3">[4]</ref>- <ref type="bibr" target="#b6">[7]</ref>. In <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref>, energy-optimal and time-optimal trajectory generation methods are proposed, respectively. In <ref type="bibr" target="#b5">[6]</ref>, nonuniform environments are considered during the path planning of unmanned vehicles.</p><p>In general, robot motion planning problems can be described as finding a sequence of control inputs that drive the robot from its initial state to its goal state while avoiding obstacles in a complex environment <ref type="bibr" target="#b7">[8]</ref>. Sampling-based algorithms, such as RRT and probabilistic roadmaps (PRM) <ref type="bibr" target="#b8">[9]</ref>, have achieved remarkable success in solving motion planning problems, particularly with a high-dimensional C-space. RRT is a sampling-based algorithm that exhibits highly effective performance in high-dimensional configuration spaces. This algorithm is able to explore and search the configuration space quickly. In addition, RRT can address much broader nonlinear systems, eventually determining a valid path in a complex environment when enough samples are made. Due to the efficiency of RRT, it is widely used in many applications, such as nonholonomic wheeled robots, surgical planning, search and rescue, and so forth. RRT constructs a random search tree in a robotic C-space, and then it incrementally extends the search tree toward the sampling states that are uniformly generated according to some given sampling strategy, such as the goal bias method. RRT has provably probabilistic completeness, i.e., the probability that RRT returns an available solution from the initial state to the goal state is almost surely one as the number of samples tends to infinity if a solution exists. PRM is a multiple-query method that contains all available path sets. Then, the best path is searched from the initial state to the goal state set. In <ref type="bibr" target="#b2">[3]</ref>, samples are generated in a lowdimensional manifold of high-dimensional C-space such that the connectivity of states is easier to identify. This method is provably more efficient than PRM with a six-dimensional C-space.</p><p>RRT has been proven to be asymptotically non-optimal <ref type="bibr" target="#b9">[10]</ref>. To achieve optimality, several other sampling-based path planning algorithms have been proposed, such as PRM* and RRT*. RRT* is a typical extension of RRT, which has been applied in several applications <ref type="bibr" target="#b10">[11]</ref>- <ref type="bibr" target="#b12">[13]</ref>. The solution returned by RRT* converges to optimality when the number of samples tends to infinity. The reason for the asymptotical optimality of RRT* primarily lies in the post processing, i.e., the reconstruction of the search tree. It checks each near node neighboring with a new sample, and it reconstitutes the local edges to decrease the cost based on the metric between the new sample and each node in the near node set. Other asymptotic optimal motion planning methods, such as transition-based RRT* (T-RRT*) and anytime T-RRT (AT-RRT), have also been proposed. In <ref type="bibr" target="#b13">[14]</ref>, the edges of the search tree are evaluated in the form of discrete cost based on mechanical work. In this way, paths are efficiently planned in a cost space.</p><p>There are two important issues from which RRT* suffers when kinodynamic constraints are considered, namely, the local boundary value problem (BVP) and the metric computation problem. During the process of reconstruction in RRT*, a new edge is added to the search tree once it has a potentially lower cost. Due to the kinodynamic constraints, the replacement can be described as a local BVP problem with two states in Cspace. Although a BVP solver can provide the optimal or suboptimal solutions, it is difficult to address the problem in highdimensional C-space.</p><p>A new extension of RRT*, called kinodynamic RRT*, was proposed to address the BVP problem with an optimal controller for linear dynamics <ref type="bibr" target="#b14">[15]</ref>. It estimates the fixed final time based on the optimal control policy, and then it computes the local optimal trajectory. This method requires the robot dynamics to be holonomic, and it is still computationally expensive. SPARSE-RRT adopts a sparse structure in a forward propagation to replace the BVP solver <ref type="bibr" target="#b15">[16]</ref>.</p><p>The key idea involves a drain of nodes to select a better cost with other new sampling states. In contrast to other sampling-based algorithms, it avoids the steer functions with a sparse data structure, which is adapted to minimize the number of propagations per iteration. The asymptotic completeness and optimality of SPARSE-RRT were also proven in <ref type="bibr" target="#b15">[16]</ref>. In <ref type="bibr" target="#b10">[11]</ref>, a novel motion planning algorithm called RRT # (RRT "sharp") was proposed. RRT # combines the concept of lifelong planning A* (LPA*) to guarantee that the solutions contain the optimal one if at least one node of the current tree is within the goal region. In <ref type="bibr" target="#b16">[17]</ref>, an asymptotically nearoptimal RRT, named lower bound tree-RRT (LBT-RRT), was proposed based on RRT* and rapidly-exploring random graph (RRG). This algorithm returns high-quality solutions and uses less running time with a slight trade-off in optimality. RRT X was described as the first sampling-based replanning algorithm in <ref type="bibr" target="#b17">[18]</ref> and was proven to be asymptotical. Moreover, this algorithm performs well when environment changes are detected. This result indicates that RRT X has good properties in both dynamic environments and static environments.</p><p>In <ref type="bibr" target="#b18">[19]</ref>, the motion planning problem for aerial vehicles is considered as an optimal control problem, i.e., a constrained two-point BVP problem. A potential field is designed to generate the new sample. However, sampling-based algorithms adopt a collision detector other than the explicit representation of the obstacles and build a search tree in obstacle-free robotic C-space. The BVP problem is also avoided due to its forward propagation. In <ref type="bibr" target="#b19">[20]</ref>, the integration of the system dynamics is computed in the form of spline curve parameterization. In this approach, the differential constraints are always satisfied when the connection/edge between two states in robotic C-space are generated. On this basis, RRT can work well with kinodynamic constraints in finite runtime. However, the performance of this algorithm is sensitive to the choice of the metric in C-space.</p><p>The metric of two states in C-space is generally regarded as the effort between them, such as total length, time-togo, or another combination. A suitable metric can provide a more accurate estimation of the cost. In RRT, the metric is defined as the Euclidean distance or weighted Euclidean distance between the two states in a C-space. Because the reconstruction is sensitive to the metric, the weights have a substantial influence on the convergence efficiency.</p><p>Meanwhile, several new types of metrics are approximated based on the finite-horizon linear quadratic regulation (LQR) in <ref type="bibr" target="#b20">[21]</ref>. It has good performance with linear systems, as well as with nonlinear systems by linearizing the dynamics. In each iteration, the differential Riccati equation needs to be integrated, which actually has high computational complexity. Dubins' path is designed as the metric in <ref type="bibr" target="#b18">[19]</ref>, which is not easy to extend to other applications. In <ref type="bibr" target="#b21">[22]</ref>, the travel time is considered due to the finite energy of a solar-powered robot. The unique feature in <ref type="bibr" target="#b18">[19]</ref> is that the environment includes additional solar energy in a known density distribution.</p><p>Neural networks (NNs) are widely applied in many fields, such as data classification, controller design and black box approximation, among others <ref type="bibr" target="#b22">[23]</ref>- <ref type="bibr" target="#b26">[27]</ref>. Specifically, NNs have remarkable efficiency for approximation problems. In <ref type="bibr" target="#b27">[28]</ref>, an adaptive NN is used for performance index approximation. In <ref type="bibr" target="#b28">[29]</ref>, a multivariate max-product NN is designed for uniform approximation, which is proven to be more accurate. NN approximation-based adaptive control of a discrete time system is presented in <ref type="bibr" target="#b29">[30]</ref>. Due to the approximation ability of NNs, we design NNs to approximate the metric in C-space. Compared with the LQR method, NNs are considerably easier in terms of computation. Moreover, the training of NNs can be completed prior to motion planning without considering any environment constraints. Without loss of generality, the cost function can be defined as the total length of the path in this work. Specifically, NNs are utilized to approximate the ratio of the optimal cost of two nodes and corresponding configuration states, based on which the cost function estimation can be derived. The main contributions of this paper can be summarized as follows:</p><p>(i) A neural network is designed to approximate the cost function considering nonlinear kinodynamic constraints. (ii) A new reconstruction method for the random search tree is proposed to guarantee asymptotic optimality. (iii) The proposed NoD-RRT algorithm can return a valid path within a reasonable time for nonlinear dynamic systems that have an unclosed-form optimal solution. Compared with RRT and kinodynamic RRT*, this algorithm is more effective in terms of computational complexity when handling nonlinear systems. The remainder of this paper is organized as follows. In section II, the problems, definitions, and notations are described. In section III, the body of NoD-RRT and its main sub-algorithms are presented in detail. Moreover, a rigorous proof is presented in section IV. In section V, several simulations and one real experiment are presented to show the effectiveness of NoD-RRT. Conclusions are drawn in section VI. Let X ⊆ R n be the ndimensional robotic C-space. X obs denotes the obstacle region, and it is also a closed subset of X . Thus, the free configuration space can be derived as X f ree = X \ X obs . It is clear that X f ree is an open subset of X . Let x ∈ X denote the robotic configuration state. x init and X goal are the initial configuration and the goal region, respectively. Let G = (V, E) denote the spanning tree, where V is the vertex set in robotic C-space and E is the edge set. Given any v ∈ V in G, successors of v are the vertices that can be visited from v. Meanwhile, the predecessor vertex of v denotes the vertex from which v ∈ V is visited adjacently.</p><p>In this paper, the dynamics of a robot is described as</p><formula xml:id="formula_0">ẋ = f (x, u)<label>(1)</label></formula><p>where u ∈ U is the piecewise control vector. It is assumed that f is smooth with respect to x and u. A valid trajectory is defined as function π(t) : [0, s] → X f ree , where π(0) = x 1 , π(s) = x 2 . Meanwhile, the corresponding control input sequence is denoted as u π (t) : [0, s] → U, which drives the robot from x 1 to x 2 . In practice, the rigid robot body must maintain a secure distance from obstacles, also called clearance distance. Thus, we define the δ-clearance trajectory in robotic configuration space as follows.</p><formula xml:id="formula_1">Definition 1 [10] [δ-clearance Trajectory] Given trajectory π : R → R n , π is δ-clearance if for any x obs ∈ X obs , |π(t) - x obs | ≥ δ.</formula><p>This definition is also typically called strong δ-clearance. If there exists 0 &lt; δ a ≤ δ such that π(t) has δ a -clearance and there exists a continuous transformation from π(t) to π (t) with strong δ-clearance, we say that π(t) has weak δ-clearance.</p><p>Let c(π) : R n → R ≥0 denote the cost function of π(t):</p><formula xml:id="formula_2">c(π) = s 0 [π(t) Qπ(t) + u π(t) Ru π(t) ]dt<label>(2)</label></formula><p>where Q and R are positive matrices. In general, the Euclidean distance is chosen when π(t) Qπ(t)</p><formula xml:id="formula_3">+ u π(t) Ru π(t) = 1.</formula><p>In this work, we select the cost function as the length of the path without loss of generality, i.e., c(π(t</p><formula xml:id="formula_4">)|t ∈ [0, s]) = t 0 dt. Let us denote c(π(t 1 ), π(t 2 )) = t2 t1 dt as the cost of the path from x 1 = π(t 1 ) to x 2 = π(t 2 ).</formula><p>For brevity, we denote c(π(t 1 ), π(t 2 )) as c(x 1 , x 2 ). The cost function is generally more complex in real applications, which even results in the computation being intractable. In this work, we utilize NNs (see section III-A) to address any cost described by (2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Problem Formulation</head><p>In this section, we formally present the definitions of the problems considered in this work. The basic path planning problem can be defined as follows.</p><p>Problem 1 (Basic Path Planning Problem <ref type="bibr" target="#b8">[9]</ref>) Given an initial state x init and a goal region X goal , find a trajectory π(t) : [0, s] → X f ree such that π(0) = x init and π(s) ∈ X goal .</p><p>Kinodynamic constraints always exist in real applications. Thus, we define the δ-clearance motion planning problem with kinodynamic constraints as follows.</p><p>Problem 2 Given an initial state x init and a goal region state set X goal , find a trajectory π(t) : [0, s] → X f ree and the corresponding control input function u(t) : [0, s] → U such that π(t) is derived from u(t) and is δclearance, which satisfies π(0) = x init , π(s) ∈ X goal .</p><p>Let us denote the existing available solution set for Problem 2 as Π, and denote π * ∈ Π as the optimal path. In most applications, the objective involves the optimality of the path and the efficiency of the algorithms. We define the asymptotic near-optimality property as follows.</p><p>Definition 2 (Asymptotic Near-optimality of Trajectories) Given the problem described in Problem 2 and the cost function of trajectories c(π), an algorithm possesses asymptotic near-optimality if it returns the solution π, whose cost is no more than (1 + )π * for any small &gt; 0, with probability of one when the number of samples tends to infinity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. MAIN ALGORITHMS</head><p>In this section, the proposed NoD-RRT algorithm is described in detail. The NN approximation method is outlined first. Then, NoD-RRT is introduced as a new incremental sampling-based algorithm for Problem 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Neural Network Approximation for Cost Function</head><p>In RRT*, the robot is viewed as a free-flying node in Cspace. Each obstacle-free edge e = (x i , x j ), namely, the straight line from x i to x j , is regarded as available for robots. This is restricted for real applications with kinodynamic constraints, such as minimum turning radius. It also leads to the fact that the path length between two nodes cannot be calculated in the form of Euclidean distance, as shown in Fig. <ref type="figure" target="#fig_0">1</ref>. The estimation of the real optimal or near-optimal cost is more important for whether and how the new node is added to the search tree, as well as the process of reconstructing the search tree. Let us define the relationship between the cost function and the Euclidean distance with kinodynamic constraints as</p><formula xml:id="formula_5">L (x i , x j ) = c(x i , x j ) -ρ(x i , x j ) ρ(x i , x j )<label>(3)</label></formula><p>where ρ(x i , x j ) is the Euclidean distance from</p><formula xml:id="formula_6">x i to x j . It is clear that L ∈ [0, 1] because c(x i , x j ) ≤ ρ(x i , x j ).</formula><p>Since the approximation error returned by NNs must exist, we calculate the cost function indirectly if L / ∈ [0, 1]. To estimate the unknown function L (x i , x j ) : R 3 × R 3 → R, we introduce the two-layer feed-forward NN with sigmoid hidden neurons and linear output neurons N (x) : R 3 → R as</p><formula xml:id="formula_7">N (x) = φS(ω, In(x))<label>(4)</label></formula><p>where In(x) = [b, θ s , |v| 2 , ρ(x i , x j )] ∈ R 3 is denoted as the input vector and the weights φ and ω are denoted as φ = [φ 1 , φ 2 , . . . , φ l ] and ω = [ω i,j ] 3×l , respectively. The structure of the NN is shown in Fig. <ref type="figure" target="#fig_1">2</ref>. Each element in the input vector of the NN is described as in Fig. <ref type="figure" target="#fig_3">3(a)</ref>. θ s ∈ [0, π] is the absolute value of the angle between the velocity vector of x i and the straight line through</p><formula xml:id="formula_8">x i to x j . |v| 2 ∈ [0, v 2 max ]</formula><p>is the Euclidean 2-norm of the velocity vector of x i , where v max is the maximum of velocity.  Intuitively, all of these three elements have an influence on L (x i , x j ), as shown in Fig. <ref type="figure" target="#fig_3">3</ref>(b)-Fig. <ref type="figure" target="#fig_3">3(d</ref>). Increasing θ s and |v| 2 will clearly lead to an increase in L . Conversely, the Euclidean distance reduces the impact of the kinodynamic constraints. Moreover, L will tend to 0 when ρ → ∞. Once we obtain L (x i , x j ) after training the NN, cost function c(x i , x j ) can be approximated as c (x i , x j ) = [1 + L (x i , x j )]ρ(x i , x j ).</p><p>The training data for the NN are generated using an offline process. As shown in Fig. <ref type="figure" target="#fig_4">4</ref>, a new state x 2 is randomly uniformly generated in robotic C-space. Thus, x 1 is set to be the origin of the plane. Meanwhile, the velocity of x 1 is also randomly selected in [0, v max ]. Then, the path from x 1 to</p><p>x 2 is calculated according to the robotic controller. Ideally, the optimal segment path from x 1 to x 2 can be generated based on a linear controller <ref type="bibr" target="#b30">[31]</ref> or an optimal controller <ref type="bibr" target="#b31">[32]</ref>. However, it is inappropriate for our problems due to the computational cost of the Riccati equation. Here, we use a simple but effective PD controller to drift forward x 2 . For testing the training results, we randomly divided the data into 70%, 15% and 15% for training, validating and testing, respectively. For brevity, we use the Levenberg-Marquardt (LM) algorithm <ref type="bibr" target="#b32">[33]</ref> to update the weights of the NN.  Green dot line will be removed due to a higher cost. x near2 is re-extended, in which x new is generated with a potentially lower cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. NoD-RRT</head><p>Considering the nonlinear robot dynamics described by (1), the main body of the proposed NoD-RRT is described in Algorithm 1. This algorithm can be viewed as a new version of the RRT* algorithm, based on which a new method of reconstruction is proposed to address kinodynamic constraints.</p><p>At iteration k, a new sample x rand is generated according to a uniform distribution on C-space (Algorithm 1, Line 3). Indeed, x rand needs to be utilized to expand the search tree in C-space. In typical RRT, new edges are generated toward x rand from the nearest node x nearest that has the least distance from x rand . Due to the kinodynamic constraints, a "distance" estimation is achieved by the NNs trained in section III-A (Algorithm 1, Line 4).</p><p>To maintain the asymptotic optimality property, reconstruction must be called after x new is added to G(V, E). Reconstruction in NoD-RRT includes two parts: the Reextend function and the Rewire function. Fig. <ref type="figure" target="#fig_5">5</ref> shows the reconstruction process.</p><p>First, the near vertex set X near is obtained using the Near function (Algorithm 1, Line 7), and then it is determined whether trajectories with less cost exist. For each vertex x ∈ X near , the x parent of x new is replaced with x once the cost function of x new is decreased. Due to the unknown local optimal trajectory from x to x new , it is always impractical to calculate the accurate cost. In contrast to typical RRT*, NoD-RRT re-extends toward the x new region from x . In other words, a new vertex x new is generated by applying the controller on x , which attempts to re-explore from x . Note x rand ← SampleFree(X ); 4:</p><p>x nearest ← Nearest(G = (V, E), x rand );</p><p>5:</p><p>x new ← Steer(x nearest , x new );</p><p>6:</p><p>if CollisionFree(x nearest , x new ) then 7:</p><formula xml:id="formula_9">X near ← Near(G = (V, E), x new , min{γ * ( log k k ) 1 d , η}); 8: V ← V {x new }; 9:</formula><p>c min ← Cost(x nearest ) + Cost(x nearest , x new );</p><p>10:</p><p>x min ← x nearest ;</p><p>11:</p><p>for each y ∈ X near do 12:</p><p>if CollisionFree(y,</p><formula xml:id="formula_10">x new ) &amp;&amp; Cost(G = (V, E), y) + Cost(y, x new ) &lt; c min then 13:</formula><p>Re-extend(y, x new ); for each y ∈ X near , x new ∈ X new do x new ← Driven(x near , input) 3: add vertex(G = (V, E), x new ) 4: x new .parent ← x near 5: x near .u ← input that if the cost estimation of the trajectory from x is optimal rather than its prior parent vertex, then it is worth extending the search tree toward x new from x .</p><p>The important advantage of the Re-extend function is the avoidance of the complicated local nonlinear BVP problem. It is only required after collision detection compared with other sampling-based algorithms, which certainly leads to a reduction in the computational complexity. In RRT*, the useless edge e = (x ∈ X , x new ) is added, and e = (x nearest , x new ) is deleted. Considering kinodynamic constraints, however, it is complicated for calculation.</p><p>Meanwhile, the reconstruction is also performed by checking the edge set E = (x new , x ∈ X near ). If the cost of x ∈ X near decreases when the parent vertex is replaced with x new , then NoD-RRT attempts to set the new edge e = (x , x new ). Considering the kinodynamic constraints, however, the local BVP problem still exists. Thus, we propose a new method in the Rewire function. As shown in Algorithm 3, Re-extend is called to extend the search tree toward x from Algorithm 3 Rewire Function Delete(e = (x near .parent, x near ));</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>Delete(x near .parent.u); 6: else 7:</p><p>add vertex(G(V, E), x near ); 8:</p><p>x near .parent ← x new ; 9:</p><p>x new .u ← input 10: end if</p><p>x new if x ∈ X near is the leaf vertex. In other situations, a new state is obtained by applying the control returned by the same policy, and this new state is denoted as x new . If x new and x are almost identical, i.e., Cost(x new , x ) &lt; , then the parent vertex of x is changed to x new . Otherwise, x new is added to the search tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. ANALYSIS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Probabilistic Completeness</head><p>The probabilistic completeness property of an algorithm is stated in <ref type="bibr" target="#b9">[10]</ref> considering the feasible problem. RRT has provably probabilistic completeness, as shown in Lemma 1.</p><p>Lemma 1 (Probabilistic Completeness of RRT <ref type="bibr" target="#b33">[34]</ref>) Consider Problem 1; there exists an available path from x init to X goal and a constant η &gt; 0 such that the probability that RRT returns failure is at most -ηn . Additionally, the probability will almost surely be zero when n tends to infinity.</p><p>The probabilistic completeness of RRT is achieved by a klength attraction sequence {A 0 , . . . , A k }, which combines the initial state x init and the goal state set X goal . The attraction sequence {A i } can intuitively be viewed as a random trail that guides the robot toward the goal if a basin set B i ⊇ A i can be found for each A i and two conditions are satisfied: 1. given the metric, each vertex of A i is closer to each element (vertex) of A i+1 than any vertex out of B i , and 2. if a vertex in B i is chosen for extension, a feasible input control sequence will be selected to eventually drive the robot to A i .</p><p>to <ref type="bibr" target="#b33">[34]</ref>, the probability that the random search of RRT has at least one vertex in the goal state set can be considered as a binomial distribution. Moreover, the upper bound of the probability that RRT fails to find a feasible path is given. Similarly, the probabilistic completeness of NoD-RRT can also be achieved.</p><p>Theorem 1 [Probabilistic Completeness of NoD-RRT] Consider Problem 1 and given X f ree and X goal , there exists constants η &gt; 0 and integer n 0 &gt; 0 such that P(NoD-RRT finds a solution inX f ree ) &gt; 1 -e -ηn , ∀n &gt; n 0 <ref type="bibr" target="#b4">(5)</ref> Proof: First, it is reasonable to consider that the sampling process of NoD-RRT generates the same vertices when the parameters in NoD-RRT are selected the same as in RRT, such as the goal bias rate. It means that V N oD-RRT (n) ⊇ V RRT (n) for all n ∈ N. Meanwhile, NoD-RRT absolutely returns a connected graph.</p><p>We utilize the attraction sequence {A i |i = 0, 1, . . . , k} to show the probabilistic completeness of NoD-RRT. The attraction sequence is generated in the same way as that in RRT, and A 0 = x init , A k = X goal . For each A i , the basin set B i is selected such that the two constraints are satisfied. Specifically, the second constraint of B i needs to consider the kinodynamic constraints of the robot. In NoD-RRT, it is assumed that the controllers are designed to be asymptotically stable. According to Lemma 1, if the attraction sequence exists, then the probability that RRT with asymptotically stable controllers fails to find a solution under kinodynamic constraints tends to zero as number of samples increases. Because V N oD-RRT (n) ⊇ V RRT (n), the probabilistic completeness of NoD-RRT can be achieved directly from the results of RRT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Asymptotic Near-Optimality of NoD-RRT</head><p>Asymptotic optimality of a planning algorithm is important in the case of sufficient planning time. In real applications, however, the planning time is also a factor of efficiency for algorithms. An acceptable pattern is intuitively designed to find a solution that has enough "good" property in the least possible planning time. Thus, the near-optimality is proposed as a trade-off between optimality and running efficiency.</p><p>Definition 3 (Asymptotic Near-optimality) Given the planning problem (X f ree , x init , X goal ) and cost function c(π), the planning algorithm is asymptotically optimal if for any &gt; 0,</p><formula xml:id="formula_11">P({ lim n→∞ sup c(π n ) = (1 + )c * }) = 1<label>(6)</label></formula><p>Definition 4 [Asymptotically Stable Lyapunov-based Controller] Denote the equations of motion for the system as ẋ = f (x, u, t) and one of the corresponding solutions as x * (u * , t), a small positive real number ; then, there exists</p><formula xml:id="formula_12">( , t 0 ) &gt; 0 such that ||x(t) -x * (t)|| ≤ if ||x(t 0 ) -x * (t 0 )|| ≤ .</formula><p>In this paper, it is assumed that the robot controller is asymptotically Lyapunov stable, i.e., the robot can follow the path if it exists. Let σ * denote the optimal path from x init to X goal . Let {δ n } n∈N denote a sequence of positive real numbers and lim n→∞ δ n = 0. Let {σ n } n∈N denote a sequence of paths such that σ n has strong δ n -clearance. We will show the existence of {σ n } n∈N in Lemma 2.</p><p>Lemma 2 [Existence of {σ n } n∈N ] Given that σ * with corresponding control u * has weak δ-clearance, sequence {δ n } n∈N satisfies lim n→∞ δ n = 0 and 0 &lt; δ n ≤ δ; then, there exists a sequence of paths {σ n } n∈N such that lim n→∞ σ n = σ * and σ n has δ n -clearance.</p><p>Proof: Motivated by the proof of Lemma 50 in <ref type="bibr" target="#b9">[10]</ref>, we define a sequence {X n } n∈N in the form of X n := cl(int δn (X free )), where cl(A) denotes the closure of set A. Note that any node in X n has a distance of at least σ n from any node in obstacles. Because of the weak δ-clearance of σ * , function κ : [0, 1] → Σ f ree exists such that κ(0) = σ * . The path sequence is defined as β n := min β∈[0,1] {β|κ(β) ∈ Σ f ree }, σ n := κ(β n ), as shown in Fig. <ref type="figure" target="#fig_8">6</ref>.  Because any node of σ n has a distance of at least σ from any node in X obs and δ n ≤ δ, it is clear that σ n has strong δ n -clearance.</p><p>Meanwhile, ∀β ∈ (0, 1], ∃δ β &gt; 0 such that κ(β) has strong δ β -clearance. Thus, because lim n→∞ , we obtain lim n→∞ β n = 0, which implies that lim n→∞ σ n = σ * . This completes the proof.</p><p>We construct the ball sequence along σ * as {B n,1 , B n,2 , . . . , B n,m }. The center of each ball is located at σ(t), t ∈ [0, 1], and they are at least δ n ε/(1 + ε), ε ∈ (0, 1), apart from each other as shown in Fig. <ref type="figure" target="#fig_9">7</ref>. The radius of each ball is also defined as δn 1+ε .</p><formula xml:id="formula_13">Lemma 3 If γ * &gt; 3( 1 d ) 1 d ( µ(X f ree ) ζ d ) 1 d</formula><p>, then there exists a positive constant 0 &lt; ε &lt; 1 such that for sufficiently large n, each ball in B n contains at least one vertex.</p><p>Proof: This is a direct conclusion of Lemma 52 in <ref type="bibr" target="#b9">[10]</ref>. The main difference is the radius of the reconstructed ball. Let F n and F c n denote the event that each ball of B n contains at least one vertex and its complement set, respectively. Meanwhile, let F c n,i denote the event that ball B n,i contains no vertices. The bound of the probability of F c n,i can be calculated as</p><formula xml:id="formula_14">P(F c n,i ) = 1 - ζ d µ(X f ree ) ( γ * 2 + ε ) 1 d log n n n (<label>7</label></formula><formula xml:id="formula_15">)</formula><p>Due to the inequality (1 <ref type="figure">Thus,</ref><ref type="figure">P(F c</ref> n ) can be bounded as</p><formula xml:id="formula_16">-1/f (n)) r ≤ exp -r/f (n) , P(F c n,i ) can be bounded as P(F c n,i ) ≤ n - ζ d µ(X f ree ) .</formula><formula xml:id="formula_17">P(F c n ) = P( M i=1 F c n,i ) ≤ Cn - ζ d µ(X f ree ) ( γ * 2+ε ) d -1 d (8) Note that ε &lt; 1 and γ * &gt; 3( 1 d ) 1 d µ(X f ree ) ζ d 1 d</formula><p>, and</p><formula xml:id="formula_18">-ζ d µ(X f ree ) ( γ * 2+ε ) d -1 d &lt; 0 is always satisfied. Because P(F c n ) &lt; ∞ holds, P(lim n→∞ F c n ) = 0.</formula><p>Thus, we have P(lim n→∞ F n ) = 1, which implies that each ball of B n contains at least one vertex.</p><p>Once NoD-RRT runs n iterations, we denote the path set Σ n as all paths returned by NoD-RRT, and we denote the closest path σ c ∈ Σ n to σ n , i.e., σ c := min σc∈Σn |σ c -σ n |. Then, we will show that the bound of variance of σ c -σ n is almost surely finite, which is formally described as Lemma 4.</p><formula xml:id="formula_19">Lemma 4 |c(σ c ) -(σ n )| &lt; c(σ n ) is almost surely satisfied with sufficiently large n.</formula><p>Proof: This proof can be followed by Lemma 55 in <ref type="bibr" target="#b34">[35]</ref>. The main difference lies in the process of extending the edges in the random search tree. An asymptotically stable Lyapunovbased controller in 4 is used to generate the new vertex x new . According to the definition of the controller, x new will finally be added such that |x new -x sample | &lt; for any small positive &gt; 0 if a segment path from x nearest to x sample exists. It means that if samples are randomly selected in each ball of B n , i.e., M i=1 V N oD-RRT B n,i = ∅. Thus, the conclusion could be achieved. This completes the proof.</p><p>Lemma 5 [Asymptotic Near-optimality of NoD-RRT] Given any planning problem (X f ree , x init , X goal ) and the cost function c(π), for any positive constant &gt; 0, the solution returned by NoD-RRT has at most (1 + )c(σ * ).</p><p>Proof: Under the assumption of Lemma 2, we know that lim n→∞ σ n = σ * . Additionally, lim n→∞ c(σ c ) &lt; (1 + )c(σ n ) is satisfied from Lemma 4. Thus, we obtain P({lim n→∞ c(y N oD-RRT ) &lt; (1 + )c(σ * )}) = 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. APPLICATIONS</head><p>In this section, several numerical simulations are conducted to evaluate our motion planning algorithms. We provide two applications with the comparison with other algorithms, i.e., typical RRT, RRT* and kinodynamic RRT*. Autonomous underwater vehicles (AUVs) are widely applied both in civil and military applications, such as salvage operations, ocean surveying and field monitoring, among others. To perform underwater tasks safely and effectively, considering motion planning for AUVs is necessary. In addition, the dynamics of AUVs are nonlinear and have many constraints, such as turning radius, velocity saturation, and so on. Moreover, the optimal solution of the BVP for AUVs is difficult to be solved in closed-form. The dynamics of an underactuated system is described as</p><formula xml:id="formula_20">ẋ = R(ψ)v v = -M -1 [(C(v) + D(v))v + g(x) + ∆(x, v)] (9)</formula><p>where the parameters are chosen the same as in <ref type="bibr" target="#b35">[36]</ref>. An AUV is set to be in a square space R 2 . The initial state of the AUV is [-9m, -9m, π/2rad, 0, 0, 0] , and the goal state set is set to be {x||x-[9, 9] | 2 ≤ 0.5}. For simplicity, the PD controller is utilized as the AUV's controller, where the parameters are designed as K p = [3, 3, 1] and K d = <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b2">3]</ref> .</p><p>First, the NN is trained for the approximation of L (x i , x j ), and the training results are shown in Figs. <ref type="bibr">8-10.</ref> In this case, we set 10 hidden neurons with a sigmoid function, i.e., S(x) = 1 1+e -x . The gradient descent of L (x i , x j ) describes the potential area where the cost function may decrease with high probability.   L (x i , x j ) is shown in Fig. <ref type="figure">9</ref> when v = [3, 0, 0] , which describes how the velocity affects the cost function due to the kinodynamic constraints. Note that L (x i , x j ) is large when x j is located behind the orientation of the velocity v(x j ). For example, from Fig. <ref type="figure">8</ref>, L (x i , x j ) is higher if x j lies on the left plane. In addition, if |v| 2 = 3 and x j locates near x i and behind the orientation of the velocity, then L (x i , x j ) has a clear increase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Comparison with typical RRT</head><p>NoD-RRT and original RRT are both applied on the AUV that is described above with the same environments, including the same obstacles and controllers. The range of the environment is set to be X ∈ [-100, 100] × [-100, 100] . The bounds for the velocity of the AUV are set to be [2m/s, 2m/s, 0.18rad/s]. Moreover, the parameters are set to be the same as in <ref type="bibr" target="#b36">[37]</ref>. The results are shown in Fig. <ref type="figure" target="#fig_13">12</ref>, from which we can observe that the cost function (i.e., the total path length from the start node to the goal node) decreases more by NoD-RRT than that by RRT.</p><p>In fact, the sampling sequence is different between each simulation, even when the same parameters are adapted. Thus, we test the performance of NoD-RRT with multiple simulations under the same situations and parameters. The results are shown in Fig. <ref type="figure" target="#fig_0">11</ref>, from which we can observe that NoD-RRT returns better solutions than the original RRT for an AUV.</p><p>In addition, we also present a numerical simulation of NoD-RRT with data from national oceanic and atmospheric 0278-0046 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.  administration (NOAA). This simulation could serve as a guide for implementation in physical settings. We apply NoD-RRT to search the planar trajectory for AUVs. We select the parameters for the AUV the same as in <ref type="bibr" target="#b8">(9)</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Comparison with RRT* and kinodynamic RRT*</head><p>In this section, we present a comprehensive comparison with RRT* and kinodynamic RRT*. First, RRT* considers the path as a series of line segments. Since it is not concerned about the dynamic constraints directly, the path should be smoothed using an interpolation method, such as B-spline. Meanwhile, kinodynamic RRT* is proposed to refine the path toward optimality using a fixed-final-state-free-final-time controller. As described in <ref type="bibr" target="#b14">[15]</ref>, nonlinear dynamics must be linearized in the form of first-order approximations as</p><formula xml:id="formula_21">ẋ = Ax + Bu + c<label>(10)</label></formula><formula xml:id="formula_22">A = ∂f ∂ x B = ∂f ∂ ū c = f -Ax -B ū</formula><p>where x and ū are the state and control input where the system dynamics is linearized. In kinodynamic RRT*, "weighted controllability Gramian", i.e., G(t) (see <ref type="bibr" target="#b10">(11)</ref>) needs to be calculated for an optimal BVP problem given two states. If the closed-form of G(t) is available, the computation time can be remarkably reduced. If not, a numerical integration, such as 4-order Runge Kutta needs to be conducted.</p><formula xml:id="formula_23">G(t) = t 0 exp[A(t -t )BR -1 B exp[A (t -t )]]dt (11)</formula><p>It certainly results in considerably more computational time, which does not exist for the systems with linear dynamics. A summary of the comparison between RRT* and kinodynamic RRT* is presented in Table <ref type="table" target="#tab_4">I</ref>.</p><p>To show the difference in performance between NoD-RRT and kinodynamic RRT*, we conducted simulations on both algorithms with linear and nonlinear systems in the same scenarios. A linear system can be described as an integrator robot that operates in the plane, which is formulated as in </p><p>Meanwhile, we have also conducted simulations of kinodynamic RRT* with a nonlinear system the same as in Fig. <ref type="figure" target="#fig_13">12(a)</ref>. Furthermore, we set the initial and goal to be located similarly as [-90, -90] and [80, 80] , respectively. As shown in Fig. <ref type="figure" target="#fig_6">14</ref>, kinodynamic RRT* returns both the nearoptimal path and the optimal path successfully, although with different computation times, as shown in Table <ref type="table" target="#tab_6">II</ref>. We can observe that kinodynamic RRT* has remarkable efficiency for the systems with linear dynamics compared with NoD-RRT. Moreover, NoD-RRT performs better for systems with nonlinear dynamics, particularly when the closed-form Gramian matrix is unavailable.   To show the advantages of NoD-RRT, we also conduct a simulation in a scenario with a large number of obstacles as in <ref type="bibr" target="#b19">[20]</ref>. The start and goal locate at [0, 0] and [230, 230] , respectively, which are denoted as a pink rectangle and a green circle. We attempt to drive the AUV toward the goal with many clustered circular obstacles with NoD-RRT and kinodynamic RRT*. Fig. <ref type="figure" target="#fig_18">15</ref> shows the results, from which it can be observed that both algorithms can search a valid path, although with different computation time. In addition, the performance comparison (path length and computation time) is described in Fig. <ref type="figure" target="#fig_19">16</ref>, including the simulations for systems with linear and nonlinear dynamics.   In contrast to the typical RRT algorithm, kinodynamic RRT* attempts to connect the random sampled nodes directly. Although the asymptotic convergency is indeed ensured, useful extending attempts may be ignored by kinodynamic RRT*, particularly for scenarios with a greater number of obstacles. Compared with kinodynamic RRT*, NoD-RRT avoids the computation of the connection directly. The computation of NoD-RRT mainly lies in the neural network, such as the numbers of hidden layers and neurons and the activation function of neurons.</p><p>In NoD-RRT, the neural network is composed of a hidden layer and a linear output layer. Suppose that the numbers of neurons in the hidden layer and output layer are n h and n o , respectively, and the number of training samples is m. The computational complexity of the neural network can be denoted as O(m(3n h + n h n o )). Since n o = 1 in our neural network, the computational complexity can be obtained as O(mn h ). Thus, the time complexity of the prediction is O(n h ). Consequently, NoD-RRT will be a better choice when systems have nonlinear dynamics and the closed-form of Gramian is unavailable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Experiments with a Pioneer3-DX robot</head><p>To demonstrate the effectiveness of NoD-RRT, we apply NoD-RRT with a Pioneer3-DX robot, which was used in our previous researches <ref type="bibr" target="#b37">[38]</ref>. A neural network with 10 sigmoid neurons is trained in advance. The robot uses sonar to detect obstacles. The robot used in the experiment has 8 forwardfacing ultrasonic (sonar) sensors, and 8 rear-facing sonar. As we restrict the robot moving forward only, the obstacles are detected by the forward-facing sonar, which is uniformly distributed on the front side as shown in Fig. <ref type="figure" target="#fig_20">17</ref> [39]. As shown in Fig. <ref type="figure" target="#fig_0">18</ref>, the node of random searching tree, x rand , which needs to be tested whether it is feasible, has a distance of d x rand ,robot from the robot. The corresponding sonar, which measures the sector where x rand locates, returns the minimum distance d min from obstacles. If d min -d x rand ,robot &lt; δ, then x rand is unfeasible and is regenerated until x rand ∈ C f ree .  Control inputs are calculated according to NoD-RRT per 0.1s. The boundary of the environment is {x ∈ X : x 1 ∈ [0, 4.2m], x 2 ∈ [0, 3.5m]}. There exist four obstacles in the environment of this experiment. The initial state and the goal region locate at [0, 0, 0] and [3.8, 2.6, π/4] , respectively. Pioneer3-DX used in the experiment has a maximum velocity of 1.2m/s. Because of the limited environment boundary, we restrict the velocity of each wheel as v ∈ (0, 0.3m/s]. It also means that the robot can only move forward. The distance between two wheels is 0.34m. Accordingly, the maximum turning radius is 0.17m. The experiment result is shown in Fig. <ref type="figure" target="#fig_7">19</ref>, in which the planning trajectory returned using NoD-RRT and actual trajectory are presented with red and green 0278-0046 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS line, respectively. Snapshots of the experiment process are presented in Fig. <ref type="figure" target="#fig_23">20</ref>. From the results we can observe that the Pioneer3-DX robot avoids the obstacles and reaches the goal region along a near-optimal path. The length of the path is 3.49m.  Here, we present several notes on the practical application of the proposed algorithms. i) Since NoD-RRT is a hybrid of a sampling-based planning algorithm with NNs, the computational complexity is also affected by the quality of the random sampling process. In the case of large-scale environments, the goal bias sampling strategy is simple and effective. ii) Indeed, NoD-RRT can also be applied on real-time tasks. For real-time implementations, we generate training data randomly based on the kinodynamic constraints of vehicles according to the method that we described above. To return a valid path online, the number of hidden layers and neurons needs to be restricted due to the limited computational capability. The approximation error of the NNs may increases slightly. In this case NoD-RRT will need more samples to search a reasonable δ-clearance near-optimal path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSIONS</head><p>In this paper, we have presented a new motion planning approach, namely, NoD-RRT, for the purpose of addressing kinodynamic constraints. NoD-RRT utilizes NNs to approximate the cost function. Moreover, a new reconstruction of the search tree has been proposed based on RRT*. By using the tools attraction sequence, theoretical analysis has indicated that NoD-RRT has the properties of probabilistic completeness and asymptotic near-optimality. Moreover, NoD-RRT translates the nonlinear constraints into the form of cost/metric approximated by NNs. It leads to the computational time being independent of the robot or vehicle dynamics that are considered in the motion planning. Thus, NoD-RRT can return an acceptable near-optimal solution within a reasonable computational time, particularly for the systems with nonlinear dynamics that can not be solved in unclosed-form.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig.1. Considering the robotic kinodynamic constraints, the robot cannot move exactly along the straight line from P 1 to P 2 , and one of its acceptable paths is shown as the curve from P 1 to P 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Structure of the NN.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) Input vector of NN. (b) L (x 1 , x 2 ) mostly increases as θs grows. (c) L (x 1 , x 2 ) mostly increases as |v| 2 increases. (d) L (x 1 , x 2 ) mostly decreases as ρ(x 1 , x 2 ) increases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Choice for the inputs of NNs and corresponding influences.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. New states are randomly generated in robotic configuration space. Paths are calculated based on the controller, e.g., PD controller used in this work.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Fig.5. Reconstruction process: red dot dash line shows the expand process toward xnew. x near1 is rewired from xnew. Green dot line will be removed due to a higher cost. x near2 is re-extended, in which x new is generated with a potentially lower cost.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>14 :E</head><label>14</label><figDesc>c min ← Cost(G = (V, E), y) + Cost(y, x new ) ← E (x min , x new )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>19 :</head><label>19</label><figDesc>if CollisionFree(x new , y) &amp;&amp; Cost(G = (V, E), y) + Cost(x new , y) &lt; c min then 20:Rewire(x new , y); end for 25: return G = (V, E); Algorithm 2 Re-extend Function 1: input ← control policy(x near , x new ); 2:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Path sequence {σn} n∈N , i.e., {κ(β)|β ∈ [0, 1]} can be considered a homotopy sequence of σ * to approach σ * with strong δn-clearance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Ball sequence Bn is constructed to cover all of σn.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>Fig. 8. L (x i , x j ) when v = [1, 0, 0] .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 10 .Fig. 11 .</head><label>1011</label><figDesc>Fig. 10. Fitting results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS RRT planning for an AUV.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Comparison between NoD-RRT and typical RRT. The iterations of NoD-RRT and typical RRT are 242 and 391, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Selected region of Pearl Harbor. Lower left point locates at (157 • 58 48 W, 21 • 20 24 N). Upper right point locates at (157 • 57 36 W, 21 • 21 36 N). Blue lines describe the expanding tree. Red line shows the available trajectory from x init to X goal . Initial state is located at (157 • 58 30 W, 21 • 20 29 N), and goal region set is defined as a circle whose center locates at (157 • 57 47 W, 21 • 21 14 N).</figDesc><graphic coords="8,132.60,387.36,80.91,80.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>ẋ = Ax + Bu; x ∈ R 4 ; A = [0 I; 0 0]; B = [0; I]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Path generated by kinodynamic RRT* with linear system. Iteration is 210. Path length is 241.1 m.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>Kinodynamic RRT* planning for an AUV.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Fig. 15 .</head><label>15</label><figDesc>Fig. 15. Paths returned by NoD-RRT and kinodynamic RRT*. The iterations of both NoD-RRT and kinodynamic RRT* are 300.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 16 .</head><label>16</label><figDesc>Fig. 16. Comparison of the results (path length and computation time) in NoD-RRT and kinodynamic RRT*. Index means (1) linear systems (linear double integrator model ), (2) nonlinear systems (AUV model), and (3) AUV model in clustered environment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Fig. 17</head><label>17</label><figDesc>Fig. 17. 8 forward-facing ultrasonic (sonar) sensors on the Pioneer3-DX robot. Fig. 18. Collision test of x rand .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head></head><label></label><figDesc>Fig. 17. 8 forward-facing ultrasonic (sonar) sensors on the Pioneer3-DX robot. Fig. 18. Collision test of x rand .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Fig. 19 .</head><label>19</label><figDesc>Fig. 19. Actual path of the Pioneer3-DX robot.</figDesc><graphic coords="10,179.47,281.27,80.99,60.74" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>Fig. 20 .</head><label>20</label><figDesc>Fig. 20. Snapshots of the path planning for Pioneer3-DX robot. X and Y axis are denoted with red line. Goal region is denoted as a blue flag.</figDesc><graphic coords="10,177.63,365.01,80.95,60.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>0278-0046 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics</figDesc><table><row><cell>IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS</cell></row><row><cell>II. PROBLEM FORMULATION AND NOTATION</cell></row><row><cell>A. Notation</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics</figDesc><table /><note><p><p><p><p>0278-0046 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p>IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS</p>Algorithm 1 Body of Nod-RRT.</p>1: V ←(x init ); E ← ∅; 2: for k = 1 → K do 3:</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>1: input ← control policy(x new , x near ); 2: x near (Driven)(x new , input); 3: if Cost(x near , x near ) &lt; then</figDesc><table><row><cell>4:</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE I COMPARISON</head><label>I</label><figDesc>BETWEEN NOD-RRT AND RRT*, KINODYNAMIC RRT*</figDesc><table><row><cell></cell><cell></cell><cell>nonlinear</cell><cell>nonlinear</cell></row><row><cell>robot dynamics</cell><cell>linear</cell><cell>(closed-form of</cell><cell>(closed-form of</cell></row><row><cell></cell><cell></cell><cell>Gramian available)</cell><cell>Gramian available)</cell></row><row><cell>RRT*</cell><cell>Yes(complex)</cell><cell>No</cell><cell>No</cell></row><row><cell>kinodynamic RRT*</cell><cell>Yes</cell><cell>Yes(effective)</cell><cell>Yes(complex)</cell></row><row><cell>NoD-RRT*</cell><cell>Yes</cell><cell>Yes</cell><cell>Yes(effective)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TIE.2018.2816000, IEEE Transactions on Industrial Electronics</figDesc><table /><note><p><p>0278-0046 (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.</p>IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE II RUNNING</head><label>II</label><figDesc>TIMES OF KINODYNAMIC RRT* AND NOD-RRT</figDesc><table><row><cell></cell><cell></cell><cell>nonlinear</cell></row><row><cell></cell><cell>linear dynamics</cell><cell>(closed-form of</cell></row><row><cell></cell><cell></cell><cell>Gramian unavailable)</cell></row><row><cell>kinodynamic RRT*</cell><cell>35.7s</cell><cell>433.8s</cell></row><row><cell>NoD-RRT</cell><cell>294.5s</cell><cell>337.1s</cell></row></table></figure>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work was supported in part by the National Natural Science Foundation of China (NSFC) under grant 61472325, grant 61633002, grant 61751310 and grant 61625303.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Motion planning with sequential convex optimization and convex collision checking</title>
		<author>
			<persName><forename type="first">J</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Awwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bradlow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Patil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1251" to="1270" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Firm: Sampling-based feedback motion-planning under motion uncertainty and imperfect measurements</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Agha-Mohammadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chakravorty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">M</forename><surname>Amato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="268" to="304" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On the power of manifold samples in exploring configuration spaces and the dimensionality of narrow passages</title>
		<author>
			<persName><forename type="first">O</forename><surname>Salzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hemmer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Halperin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="529" to="538" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A real-time energyoptimal trajectory generation method for a servomotor system</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">A</forename><surname>Bortoff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ueda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1175" to="1188" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Time-optimal trajectory planning based on dynamics for differential-wheeled mobile robots with a geometric corridor</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">K</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="5502" to="5512" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A recursive receding horizon planning for unmanned vehicles</title>
		<author>
			<persName><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Decastro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Roemer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Electronics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="2912" to="2920" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Integer GA for mobile robot path planning with using another GA as repairing function</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mansouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Shoorehdeli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Teshnehlab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Automation and Logistics</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="135" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">From Dynamic Programming to RRTs: Algorithmic Design of Feasible Trajectories</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Rapidly-exploring random trees: A new tool for path planning</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="293" to="308" />
		</imprint>
	</monogr>
	<note>Algorithmic Computational Robotics New Directions</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sampling-based algorithms for optimal motion planning</title>
		<author>
			<persName><forename type="first">S</forename><surname>Karaman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Frazzoli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="846" to="894" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Use of relaxation methods in samplingbased algorithms for optimal motion planning</title>
		<author>
			<persName><forename type="first">O</forename><surname>Arslan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Tsiotras</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="2421" to="2428" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Advanced perception, navigation and planning for autonomous in-water ship hull inspection</title>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">S</forename><surname>Hover</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Eustice</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Englot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Johannsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Kaess</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Leonard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1445" to="1464" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Anytime safe interval path planning for dynamic environments</title>
		<author>
			<persName><forename type="first">V</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Phillips</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Likhachev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/RSJ International Conference on Intelligent Robots &amp; Systems</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="5628" to="5635" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Optimal path planning in complex cost spaces with sampling-based algorithms</title>
		<author>
			<persName><forename type="first">D</forename><surname>Devaurs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Siméon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cortés</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="415" to="424" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Kinodynamic RRT*: Asymptotically optimal motion planning for robots with linear dynamics</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Webb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">V D</forename><surname>Berg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="5054" to="5061" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Littlefield</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Bekris</surname></persName>
		</author>
		<title level="m">Sparse Methods for Efficient Asymptotically Optimal Kinodynamic Planning</title>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Asymptotically near-optimal RRT for fast, high-quality, motion planning</title>
		<author>
			<persName><forename type="first">O</forename><surname>Salzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Halperin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="4680" to="4685" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">RRTX: Asymptotically optimal single-query sampling-based motion planning with quick replanning</title>
		<author>
			<persName><forename type="first">M</forename><surname>Otte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Frazzoli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Robotics Research</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">3-D trajectory planning of aerial vehicles using RRT</title>
		<author>
			<persName><forename type="first">P</forename><surname>Pharpatara</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hérissé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Bestaoui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Control Systems Technology</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Spline-based RRT path planner for non-holonomic robots</title>
		<author>
			<persName><forename type="first">K</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Moon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">L</forename><surname>Doh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Joo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent &amp; Robotic Systems</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="763" to="782" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Optimal samplingbased planning for linear-quadratic kinodynamic systems</title>
		<author>
			<persName><forename type="first">G</forename><surname>Goretkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Platt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Konidaris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Robotics and Automation</title>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="2429" to="2436" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Time-optimal path planning with power schedules for a solar-powered ground robot</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kaplan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Kingry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Uhing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Dai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Adaptive NN control using integral barrier lyapunov functionals for uncertain nonlinear block-triangular constraint systems</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cybernetics</title>
		<imprint>
			<biblScope unit="issue">99</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Stable adaptive neural network control</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">C</forename><surname>Hang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001">2001</date>
			<publisher>Springer International</publisher>
			<biblScope unit="volume">13</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Neural network control of a robotic manipulator with input deadzone and output constraint</title>
		<author>
			<persName><forename type="first">W</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">O</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems Man &amp; Cybernetics Systems</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="759" to="770" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Some new results on neural network approximation</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hornik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Networks</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1069" to="1072" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Adaptive neural network control of an uncertain robot with full-state constraints</title>
		<author>
			<persName><forename type="first">W</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Yin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cybernetics</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="620" to="629" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Neural-network-based adaptive optimal tracking control scheme for discrete-time nonlinear systems with approximation errors</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="issue">PA</biblScope>
			<biblScope unit="page" from="106" to="115" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Pointwise and uniform approximation by multivariate neural network operators of the max-product type</title>
		<author>
			<persName><forename type="first">D</forename><surname>Costarelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Vinti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Networks</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page">81</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Adaptive NN tracking control of uncertain nonlinear discrete-time systems with nonaffine dead-zone input</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cybernetics</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="497" to="505" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Indirect adaptive hierarchical fuzzy sliding mode controller for a class of nonlinear systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mansouri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Teshnehlab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Shoorehdeli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent &amp; Fuzzy Systems</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1377" to="1391" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName><forename type="first">K</forename><surname>Ito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kunisch</surname></persName>
		</author>
		<title level="m">Optimal Control</title>
		<imprint>
			<publisher>John Wiley &amp; Sons, Inc</publisher>
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">First-and second-order methods for learning: between steepest descent and newton&apos;s method</title>
		<author>
			<persName><forename type="first">R</forename><surname>Battiti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="141" to="166" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Randomized kinodynamic planning</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Lavalle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Kuffner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="378" to="400" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Sampling-based motion planning with deterministic µ-calculus specifications</title>
		<author>
			<persName><forename type="first">S</forename><surname>Karaman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Frazzoli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the 48th IEEE Conference on Decision and Control</title>
		<meeting>the 48th IEEE Conference on Decision and Control</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009. 2009</date>
			<biblScope unit="page" from="2222" to="2229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Global time-varying stabilization of underactuated surface vessel</title>
		<author>
			<persName><forename type="first">W</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automatic Control</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="859" to="864" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Adaptive neural network control of AUVs with control input nonlinearities using reinforcement learning</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sharma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems Man &amp; Cybernetics Systems</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1019" to="1029" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Pareto-optimal coordination of multiple robots with safety guarantees</title>
		<author>
			<persName><forename type="first">R</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Autonomous Robots</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="189" to="205" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
