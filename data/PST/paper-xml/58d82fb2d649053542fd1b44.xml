<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A novel artificial bee colony algorithm with depth-first search framework and elite-guided search equation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2016-07-07">7 July 2016</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Laizhong</forename><surname>Cui</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Genghui</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Qiuzhen</forename><surname>Lin</surname></persName>
							<email>qiuzhlin@szu.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zhihua</forename><surname>Du</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Weifeng</forename><surname>Gao</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Mathematics and Statistics</orgName>
								<orgName type="institution">Xidian University</orgName>
								<address>
									<settlement>Xi&apos;an</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Jianyong</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nan</forename><surname>Lu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Computer Science and Software Engineering</orgName>
								<orgName type="institution">Shenzhen University</orgName>
								<address>
									<settlement>Shenzhen</settlement>
									<region>PR</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A novel artificial bee colony algorithm with depth-first search framework and elite-guided search equation</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2016-07-07">7 July 2016</date>
						</imprint>
					</monogr>
					<idno type="MD5">83F54D47E76D55EAD6F810EA749D2F42</idno>
					<idno type="DOI">10.1016/j.ins.2016.07.022</idno>
					<note type="submission">Received 20 November 2015 Revised 26 June 2016 Accepted 6 July 2016</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T15:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>Artificial bee colony algorithm Depth-first search framework Computing resources allocation Novel search equations</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Inspired by the intelligent foraging behavior of honey bees, the artificial bee colony algorithm (ABC), a swarm-based stochastic optimization method, has shown to be very effective and efficient for solving optimization problems. However, since its solution search equation is good at exploration but poor at exploitation, ABC often suffers from a slow convergence speed. To better balance the tradeoff between exploration and exploitation, in this paper, we propose a depth-first search (DFS) framework. The key feature of the DFS framework is to allocate more computing resources to the food sources with better quality and easier to be improved for evolution. We apply the DFS framework to ABC, GABC and CABC, yielding DFSABC, DFSGABC and DFSCABC respectively. The experimental results on 22 benchmark functions show that the DFS framework can speed up convergence rate in most cases. To further improve the performance, we introduce two novel solution search equations: the first equation incorporates the information of elite solutions and can be applied to the employed bee phase, while the second equation not only exploits the information of the elite solutions but also employs the current best solution in the onlooker bee phase. Finally, two novel proposed search equations are combined with DFSABC to form a new variant of ABC, named DFSABC_elite. Through the comparison of DFSABC_elite with other variants of ABC and some non-ABC methods, the experimental results demonstrate that DFSABC_elite is significantly better than the compared algorithms on most of the test functions in terms of solution quality, robustness, and convergence speed.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In the past decades, global optimization problems (GOPs) have been arisen in many scientific and engineering areas, and therefore optimization techniques have been playing a more and more important role. Moreover, since many real-world optimization problems can be characterized as non-convexity, discontinuity, non-differentiability and multi-modality, they are becoming increasingly complex. Thus, solving these global optimization problems through traditional derivative-based methods is becoming a great challenge task. To address this problem, inspired by nature selection and the survival of the fittest, a lot of derivative-free methods have been proposed, such as genetic algorithm (GA) <ref type="bibr" target="#b17">[18]</ref> , differential evolution (DE) <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b34">35]</ref> , immune algorithm (IA) <ref type="bibr" target="#b33">[34]</ref> , particle swarm optimization (PSO) <ref type="bibr" target="#b32">[33]</ref> , ant colony optimization (ACO) <ref type="bibr" target="#b9">[10]</ref> , biogeography-based optimization (BBO) <ref type="bibr" target="#b39">[40]</ref> and artificial bee colony (ABC) algorithm <ref type="bibr" target="#b22">[23]</ref> , which have shown great potential to handle the complex optimization problems.</p><p>Among the aforementioned evolutionary algorithms (EAs), ABC attracts great attentions from scientific researchers in recent years due to its effectiveness and efficiency. The ABC algorithm, which was firstly invented by D. Karaboga in 2005, is inspired by the intelligent foraging behavior of honey bee swarm. The performance of ABC was firstly validated on three benchmark numerical problems ( i.e ., Sphere function, Rosenbrock function and Rastrigin function) <ref type="bibr" target="#b22">[23]</ref> . ABC was also applied to solve the multivariable optimization functions and show superior performance compared with genetic algorithm (GA), particle swarm optimization algorithm (PSO) and particle swarm inspired evolution algorithm (PS-EA). Moreover, the comprehensive performance of ABC was evaluated by the comparisons with PSO, DE, and evolution strategy (ES) on a large set of test functions <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b24">25]</ref> . The experimental results also demonstrated that the performance of ABC was better than or at least comparable to other population-based optimization algorithms. Especially, it can efficiently deal with multimodal and multidimensional optimization problems. Recently, due to its simple structure, easy implementation and outstanding performance <ref type="bibr" target="#b11">[12]</ref> , ABC has been successfully extended to solve multi-objective optimization problems <ref type="bibr" target="#b45">[46]</ref> , binary optimization problems <ref type="bibr" target="#b36">[37]</ref> , data clustering problems <ref type="bibr" target="#b46">[47]</ref> , and many real-world applications <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b31">32]</ref> .</p><p>However, like other EAs, ABC suffers from a slow convergence speed. This is mainly caused by its solution search equation, which is good at exploration but poor at exploitation <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b49">50]</ref> . To be more specific, when a candidate food source (a new solution) is generated in ABC, only one parameter of the corresponding parent solution is changed randomly . This kind of generation pattern makes the search along the axis and the new solution will be located in the neighborhood of the associated parent solution, which makes the disturbance small <ref type="bibr" target="#b1">[2]</ref> . On the other hand, "randomness " in ABC may not utilize the information of the best solution or other superior solutions, and the promising evolution direction is not fully exploited at all. Thus, it is obvious that the search equation of ABC pays more attention to exploration, but it ignores exploitation relatively. However, the performance evaluation of an algorithm for optimization problems depends on whether a suitable balance between exploration and exploitation can be maintained. To make up the defect of the original ABC and further improve its performance, numerous ABC variants with new solution search equations were proposed to obtain a better balance between exploration and exploitation <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b49">50]</ref> . It is experimentally validated that these modified ABC variants can improve the performance of ABC. However, according to the no free lunch theorem <ref type="bibr" target="#b11">[12]</ref> , it is impossible for a method to effectively solve every problem. Therefore, the performance of ABC still has space to be improved.</p><p>Based on the above considerations, in this paper, we propose a depth-first search (DFS) framework and two novel solution search equations to further improve the performance of ABC. In the employed bee phase of the original ABC, each food source (solution) produces a candidate food source (new solution) via its employed bees, which means all food sources are assigned to the same computing resources in the employed bee phase. In the onlooker bee phase, onlooker bees search new food sources based on the information provided by the employed bees, which indicates that the food sources with better quality will be allocated with more computing resources in the onlooker phase. The computing resource allocation of this method emphasizes on breadth-first search (BFS) and thus causes that ABC is good at exploration but poor at exploitation. To address this concerning issue, a depth-first search (DFS) framework for ABC (DFSABC for short) is introduced. In the employed bee phase of the DFS framework, a randomly selected food source will be updated continuously until it could not produce a better one. Similarly, in the onlooker bee phase of the DFS framework, a randomly selected elite food source (with high fitness value or small objective function value) will be exploited to produce candidate food source consecutively until a better one could not be produced. Obviously, the food sources in the DFS framework, which are easy to be improved and have better quality, will be assigned to more computing resources in each generation. Through our theoretical and experimental analysis, the DFS framework can effectively speed up the convergence of ABC. Furthermore, motivated by some state-of-the-art DE variants <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b47">48]</ref> , we design two novel search equations. One search equation incorporates the beneficial information of elite solutions, which is applied to the employed bee phase. The other one not only exploits the valuable information of the elite solutions but also employs that of the current best solution, which is used in the onlooker phase. Two novel search equations are embedded into DFSABC to form a new variant of ABC, named DFSABC_elite. In brief, the contributions of this paper can be summarized as follows.</p><p>(1) A depth-first search (DFS) framework is introduced to speed up the convergence of ABC, which is controlled by dynamic allocation of computing resources. More specifically, in the DFS framework, the food sources, which have better quality and can be easily exploited to search better food source in their neighbourhoods, may fall into local or global optimal area, resulting in the attraction of more bees to search. Actually, according to Talbi's taxonomy of hybrid methods <ref type="bibr" target="#b40">[41]</ref> , DFS framework belongs to Low-level teamwork hybrid (LTH). To be specific, DFSABC represents a single-solution local search technique with a dynamic manner embedded into the core of ABC. The local search technique is used to optimize locally, while the population-based method (ABC) is exploited to optimize globally. (2) Two novel solution search equations are proposed; one exploits the beneficial information from the elite solutions, and is applied to the employee bee phase, which can make all solutions learn from the elite solutions. The other one simultaneously exploits the valuable information from both current best solution and other elite solutions, and is used in the onlooker bee phase, which can make elite solutions learn from the current best solution. (3) DFS and two novel solution search equations can improve the performance of ABC to some extent. Moreover, a new variant of ABC, named DFSABC_elite, is developed by combining the DFS framework and two novel solution search equations, which can further enhance the performance of ABC.</p><p>To evaluate the performance of DFSABC_elite, extensive experiments are conducted on 52 common benchmark functions derived from CEC2014 ( http://www.ntu.edu.sg/home/epnsugan/ ) and literatures <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b14">15]</ref> . The comparison results with other variants of ABC, ( i.e. , ABC <ref type="bibr" target="#b22">[23]</ref> , GABC <ref type="bibr" target="#b49">[50]</ref> , CABC <ref type="bibr" target="#b14">[15]</ref> , best-so-far ABC <ref type="bibr" target="#b2">[3]</ref> , MABC <ref type="bibr" target="#b13">[14]</ref> , dABC <ref type="bibr" target="#b26">[27]</ref> , qABC <ref type="bibr" target="#b25">[26]</ref> , EABC <ref type="bibr" target="#b16">[17]</ref> , ABCVSS <ref type="bibr" target="#b27">[28]</ref> and BABC <ref type="bibr" target="#b10">[11]</ref> ), some non-ABC methods, ( i.e. , CoDE <ref type="bibr" target="#b41">[42]</ref> , JADE <ref type="bibr" target="#b47">[48]</ref> , SaDE <ref type="bibr" target="#b37">[38]</ref> , jDEscop <ref type="bibr" target="#b4">[5]</ref> , CLPSO <ref type="bibr" target="#b32">[33]</ref> , CMA-ES <ref type="bibr" target="#b18">[19]</ref> ) and AABCLS <ref type="bibr" target="#b19">[20]</ref> , validate the effectiveness and efficiency of DFSABC_elite in terms of solution quality, robustness and convergence speed.</p><p>The remainder of this paper is organized as follows. Section 2 introduces basic ABC algorithm briefly and gives a review on the improved ABC variants. The details of DFSABC_elite are described in Section 3 , which includes the introduction of the DFS framework and two novel search equations. The experimental results are discussed in Section 4 . Finally, Section 5 concludes this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The original artificial bee colony algorithm and related work</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">The original ABC</head><p>The ABC algorithm <ref type="bibr" target="#b22">[23]</ref> is a swarm-based stochastic optimization method, which is inspired by the waggle dance and intelligent foraging behavior of honey bees. In ABC, the position of a food source denotes a possible solution of the optimization problem, and the nectar amount of each food source denotes the quality (fitness) of the corresponding solution. In order to find the best food source, three different types of bees, i.e. , employed bee, onlooker bee and scout bee, are responsible for the different search tasks. Firstly, the first half of the colony consists of employed bees, which are responsible for randomly searching better food source in the neighborhood of the corresponding parent food source and then passing information of the food sources to onlooker bees. Secondly, the second half of the colony is composed of onlooker bees, which further search the better food sources according to the information provided by employed bees. Thirdly, if the quality of a food source is not improved by a preset number of times ( limit ), this food source is abandoned by its employed bee, and then this employed bee becomes a scout bee that begins to seek a new random food source. The original ABC algorithm includes four phases, i.e. , initialization phase, employed bee phase, onlooker bee phase and scout bee phase. After the initialization phase, ABC turns into a loop of employed bee phase, onlooker bee phase and scout bee phase until the termination condition is satisfied. The details of each phase are described as follows.</p><p>Initialization phase : At the beginning of ABC, the initial food sources are generated randomly according to Eq. ( <ref type="formula" target="#formula_0">1</ref>) .</p><formula xml:id="formula_0">X 0 i, j = X L j + ran d j • (X U j -X L j ) , i = 1 , . . . , SN, j = 1 , . . . , D<label>(1)</label></formula><p>where SN is the number of food sources, and SN is equal to the number of employed bees and onlooker bees; D is the dimensionality (variables) of the search space; X L j and X U j are the lower and upper bounds of the j th variable respectively; ran d j is a random real number in range of [0,1].Then, the fitness values of the food sources are calculated by Eq. <ref type="bibr" target="#b1">(2)</ref>.</p><formula xml:id="formula_1">f i t i = ⎧ ⎨ ⎩ 1 1 + f ( X i ) if ( f ( X i ) ≥ 0 ) 1 + abs ( f ( X i )) otherwise<label>(2)</label></formula><p>where f i t i is the fitness value of the i th food source X i , and f ( X i ) is the objective function value of food source X i for the optimization problem. In addition, parameter limit should be determined and parameter counter , which records the number of unsuccessful updates, is set to 0 for each food source.</p><p>Employed bee phase : Each employed bee will fly to a distinct food source and try to find out a candidate food source in the neighborhood of the corresponding parent food source by using Eq. ( <ref type="formula" target="#formula_2">3</ref>) .</p><formula xml:id="formula_2">V G i, j = X G i, j + φ j • (X G i, j -X G k, j ) , i, k ∈ { 1 , 2 , . . . , SN} , j ∈ { 1 , 2 , . . . , D }<label>(3)</label></formula><p>where G is the generation count; V G i, j is the j th dimension of the i th candidate food source (new solution); X G i, j is the j th dimension of the i th food source; X G k, j is the j th dimension of the k th food source;</p><formula xml:id="formula_3">k is picked up from { 1 , 2 , • • • , SN } randomly and k = i ; j is randomly selected from { 1 , 2 , • • • , D } ; φ j is a random real number in the range of [-1,1].</formula><p>After creating a new food source, the fitness value of the candidate food source is calculated by Eq. ( <ref type="formula" target="#formula_1">2</ref>) . If the fitness value of candidate food source is better than that of the old one, the candidate food source will replace the old one and is memorized by its employed bee, and the counter of the food source is reset to 0. Otherwise, counter is increased by 1.</p><p>Onlooker bee phase : According to the quality information of the food source shared by the employed bees, each onlooker bee will fly to a food source X G s , which is selected by the roulette wheel, in order to find a candidate food source by using Eq. ( <ref type="formula" target="#formula_2">3</ref>) . The selection probability of the i th food source is calculated as Eq. ( <ref type="formula">4</ref>) . Obviously, the better the fitness value is, the bigger the selection probability is. If a candidate food source V G s obtained by the onlooker bee is better than the food source X G s , X G s will be replaced by the new one, and its counter is reset to 0. Otherwise, its counter is increased by 1.</p><formula xml:id="formula_4">P i = f i t i / SN i =1 f i t i (4)</formula><p>Scout bee phase : The food source with the highest counter value is selected and its counter value is compared with a pre-defined limit value. If its counter value is bigger than the limit value, the selected food source will be abandoned by its employed bee, and then this employed bee will become a scout bee to seek a new food source randomly according to Eq. ( <ref type="formula" target="#formula_0">1</ref>) . After the new food source is obtained, the corresponding counter value is reset to 0, and the scout bee returns to an employed bee.</p><p>Note that if the j th variable V G i, j of the i th candidate food source violates the boundary constraints in the employed bee phase and onlooker bee phase, it will be reset according to Eq. (1) .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">The improved ABC variants</head><p>Since the performance of the original ABC is poor when solving complex optimization problems, numerous ABC variants have been developed to improve its performance in the last decade.</p><p>A large number of research works pay attention to the solution search equation. By exploiting the information of the current best solution, motivated by PSO, Zhu and Kwong <ref type="bibr" target="#b49">[50]</ref> proposed a gbest-guided ABC (called GABC) by designing a new search equation, which exploits the information of the current best solution to improve the exploitation ability of ABC. The results of comparison demonstrated that GABC could outperform the original ABC in most cases. Xiang et al. <ref type="bibr" target="#b44">[45]</ref> drew inspiration from PSO and introduced a novel search equation, which employs the information of the best solution and other good solutions (called PS-MEABC). Inspired by DE, Gao et al. <ref type="bibr" target="#b12">[13]</ref> designed IABC with two revised search equations, namely ABC/best/1 and ABC/rand/1. Moreover, in order to fully take advantage of them, a selective probability p is used to control the frequency of employing ABC/rand/1 and ABC/best/1 in IABC. Banharnsakunet al. <ref type="bibr" target="#b2">[3]</ref> introduced an ABC variant (named best-so-far ABC), including a best-so-far selection method, an adjustable search radius and an objective-value-based comparison method to enhance exploitation and exploration. Recently, Gao et al. <ref type="bibr" target="#b10">[11]</ref> proposed a Gaussian search equation to produce solutions in the onlooker bee phase, which exploits the valuable information hidden in the best solution to improve exploitation. After that, they further designed two new equations to serve as the search equations for employed bees and onlooker bees respectively <ref type="bibr" target="#b16">[17]</ref> . Moreover, Coelho and Alotto <ref type="bibr" target="#b5">[6]</ref> presented a Gaussian ABC by utilizing a parameter p to control the frequency of using Gaussian and uniform distributions. MABC <ref type="bibr" target="#b13">[14]</ref> was developed to balance between exploitation and exploration based on a control parameter p , in which two search equations focusing on exploitation and exploration respectively are combined. Gao et al. <ref type="bibr" target="#b14">[15]</ref> designed a novel search equation like the crossover operation of GA (called CABC) without the bias to any search direction, which significantly improves the search ability of ABC. The experimental results indicated that CABC performs competitively and effectively. Karaboga <ref type="bibr" target="#b25">[26]</ref> proposed a quick ABC (qABC), in which a new version of search equation is introduced in the onlooker bee phase and exploits the information of the best solution among the neighbors. Kiran et al. <ref type="bibr" target="#b26">[27]</ref> added the directional information to ABC and designed a new search strategy, which selects search equation to produce candidate solution according to the previous directional information (named dABC). Wang et al. <ref type="bibr" target="#b42">[43]</ref> proposed a multi-strategy ensemble artificial bee colony algorithm (MEABC), in which a pool of distinct solution search strategies exists throughout the whole search process and these strategies compete with each other to produce offspring. In order to efficiently solve optimization problems with different characteristics, Kiran et al. <ref type="bibr" target="#b27">[28]</ref> proposed the integration of multiple solution update rules with ABC (called ABCVSS), in which five search strategies are used to update the solutions.</p><p>Many other techniques have also been used to improve the performance of ABC. For instance, Kang et al. <ref type="bibr" target="#b21">[22]</ref> proposed a Rosenbrock ABC (called RABC), in which the exploration phase is realized by ABC and the exploitation phase is completed by the rotational direction method. The slow convergence of the original ABC may lie in the fact that only one parameter of the parent solution is changed when a new solution is produced <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b26">27]</ref> . Thus, Akayet al. <ref type="bibr" target="#b1">[2]</ref> presented two control parameters, i.e. , modification rate ( MR ) and scaling factor ( SF ), to control frequency and magnitude of perturbation respectively, and the authors of <ref type="bibr" target="#b12">[13]</ref> introduced a parameter M to control the number of elements to be evolved, which is selected from</p><formula xml:id="formula_5">{ 1 , 2 , • • • , D } .</formula><p>In addition, Xiang et al. <ref type="bibr" target="#b43">[44]</ref> utilized chaotic map technique in initialization process and scout bee phase to enhance the effectiveness and efficiency of ABC. Kang et al. <ref type="bibr" target="#b20">[21]</ref> proposed a memetic algorithm (named HABC), which combines Hooke-Jeeves pattern search with ABC. To be specific, the exploration phase was realized by ABC and the exploitation phase was completed by pattern search. The experimental results showed that HABC is promising in terms of convergence speed, solution accuracy and success rate. Gao et al. proposed the orthogonal learning method in <ref type="bibr" target="#b14">[15]</ref> , and the chaotic map and opposition-based learning method in <ref type="bibr" target="#b13">[14]</ref> to improve the performance of ABC, and utilized the Powell's method as a local search tool to enhance the exploitation ability of ABC in <ref type="bibr" target="#b15">[16]</ref> . Jadon et al. <ref type="bibr" target="#b19">[20]</ref> introduced a self adaptive local search strategy to exploit the search area in the proximity of the best solution for accelerating the convergence rate of ABC. Banitalebiet al. <ref type="bibr" target="#b3">[4]</ref> proposed an Enhanced compact ABC by combining Estimation of Distribution Algorithm (EDA) framework and ABC (named EcABC). EcABC not only inherits the memory-saving capability of EDA and efficiency of ABC, but also enhances the exploitation ability of original ABC. Moreover, some hybrid methods were proposed to improve the performance of ABC, by merging ABC with other operations. For example, in order to take advantage of the merits of ABC and GA, Zhao et al. <ref type="bibr" target="#b48">[49]</ref> proposed a hybrid approach (named HSIGA), the key idea of which is to exchange information between GA population and bee colony. Shi et al. <ref type="bibr" target="#b38">[39]</ref> proposed a hybrid swarm intelligent algorithm (named IABAP), by introducing two information exchange processes to share valuable information between particle swarm and bee colony. Abraham et al. <ref type="bibr" target="#b0">[1]</ref> designed a hybrid algorithm (named HDABCA), by mixing the ABC and DE strategies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The proposed method</head><p>In this section, the proposed algorithm is described in detail. Firstly, the motivations of this paper are given. Secondly, two novel operations, i.e. , the depth-first search framework and two novel solution search equations are presented. Finally, the complete proposed algorithm is shown.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Motivations</head><p>It is known that ABC has received great interests and has been widely used since its invention. Although it has great advantage, it still has some disadvantages, such as, slow convergence <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27]</ref> . It is mainly caused by the search equation of ABC, which performs well in exploration but badly in exploitation. Besides, the computing resource allocation strategy of ABC determines that ABC emphasizes on breadth-first search, which may also induce that ABC pays more attention to exploration. To be more specific, in the employed bee phase, each food source will be searched by its employed bee and a candidate food source will be generated. Thus, almost half of the computing resources ( e.g. , the number of function evaluations) are equally allocated to all of the food resources in the employed bee phase. In the onlooker bee phase, the food sources will be searched according to probability p as shown by Eq. ( <ref type="formula">4</ref>) , and probability p is proportional to fitness value or inversely proportional to objective function value. In theory, the food source with higher quality will be allocated with more computing resources in the onlooker bee phase. If there is no significant difference between these fitness values, all food sources will obtain nearly identical probability p and will be assigned to almost the same computing resources. Moreover, a food source is selected by the wheel roulette method according to probability p in the original ABC, which is a timeconsuming process. In short, the computing resources are almost evenly assigned to all food sources in each generation, which may also result in the emphasis of ABC on exploration. In general, the current solutions, which have better quality and can be improved easily, may locate in the global or local optimal area. Hence, these solutions should be allocated with more computing resources for further searching. Moreover, on one hand, the solution search equation, shown by Eq. (3) , does not utilize any information of the best solution, which leads to slow convergence. On the other hand, some approaches <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b49">50]</ref> have demonstrated that although the information of the current best solution can be utilized to speed up the convergence on the unimodal functions, the search can easily fall into the local optimum on the multimodal functions. Based on the above considerations, inspired from some state-of-the-art DE variants <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b47">48]</ref> , we utilize the information of the elite solutions synergistically in order to achieve a better balance between exploration and exploitation, and so as to improve the performance of ABC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Depth-first search in ABC (DFSABC)</head><p>Breadth-first search (BFS) and depth-first search (DFS) are two classic techniques in the search field. The swarm-based stochastic optimization method can be treated as a search process. Generally speaking, from the perspective of the optimization method, BFS emphasizes on exploration, while DFS focuses on exploitation. According to our previous analysis, ABC is good at exploration but poor at exploitation because of its BFS framework and the solution search equation. Therefore, we propose the DFS framework (called DFSABC) by adding the DFS strategy into the original ABC to improve its performance. For ease of presentation, the pseudo-code of DFSABC is presented in Fig. <ref type="figure" target="#fig_0">1</ref> . In more detail, for each generation, in the employed bee phase, only some randomly selected solutions will be searched, which is different from that all solutions are exploited in the original ABC. Moreover, if a better candidate solution V G s is found in the neighborhood of a randomly selected solution X G s , X G s is replaced by V G s firstly, and then it will be exploited consecutively until a worse one is produced. Obviously, some randomly selected solutions are easy to be enhanced, which will attract more employed bees and be allocated with more computing resources in the employed bee phase. In the onlooker bee phase, only the top T elite solutions attract onlooker bee to search, where T = p • SN, p ∈ (0 , 1) . Same as the employed bee phase, if a better candidate solution</p><formula xml:id="formula_6">V G</formula><p>e is discovered in the neighborhood of a randomly selected elite solution X G e , X G e is replaced by V G e firstly, and then it will be utilized consecutively until a bad one is produced. Apparently, the solutions that have good quality and are easy to be improved will attract more onlooker bees and thus should be assigned with more computing resources in the onlooker bee phase.</p><p>Note that the number of onlooker bees in DFSABC is not</p><formula xml:id="formula_7">SN but r • T , r ∈ { 1 , 2 , 3 , • • • , ceil( 1 /p ) } , as shown in line 19</formula><p>of Algorithm 1 , and parameter r can control the strategy of computing resource allocation. In general, the bigger the value of the parameter r is, the more computing resources will be assigned to the elite solutions. Such operator will result in that DFSABC emphasizes on exploitation. On the contrary, the original ABC will pay more attention to exploration relatively. To be specific, parameter p controls the size of elite solutions and parameter r determines the number of onlooker bees, which may significantly affect the performance of the proposed algorithm. The influence of parameters p and r will be analyzed by Experiment 4 in Section 4.4 . In brief, the characteristics of DFSABC are summarized as follows.</p><p>(1) In the employed bee phase, the food sources are easy to be improved, which will attract more employed bees and thus be allocated with more computing resources. (2) In the onlooker bee phase, the food sources, which have better quality and are easy to be enhanced, will attract more onlooker bees and thus should be assigned with more computing resources. (3) The quality (fitness value or objective function value) of the food sources may have significant difference in each generation and the time of search process in the onlooker bee phase is extremely reduced relative to the wheel roulette process.</p><p>Actually, DFSABC is realized by combining ABC with a dynamic single-solution search technique. The differences of ABC and DFSABC in logic are illustrated in Fig. <ref type="figure" target="#fig_1">2</ref> , where red diamond denotes the actual global optimal solution, and the arrows represent the search path in a certain generation.</p><p>Moreover, in order to clearly show the differences between ABC and DFSABC, the evolution processes of ABC and DFSABC on 2D unimodal sphere function are illustrated in Fig. <ref type="figure" target="#fig_2">3</ref> , where G denotes the generation, X1 and X2 denote the first and second decision variables of sphere functions, respectively, the red point represents the global optimal solution, and the  size of elite solutions is set to 2. Apparently, in ABC, each solution has the chance to produce new solutions, towards the global optimal solution synchronously in each generation, while in DFSABC, only a part of solutions have the chance to generate new solutions, towards the global optimal solution asynchronously in each generation. Obviously, in DFSABC, the food resource that has good quality and can easily find better one in its neighbourhood, may fall into local or global optimal areas, and will attract more employed bees and onlooker bees to search. Therefore, DFSABC has stronger exploitation ability and faster convergence ability than the original ABC. The effectiveness and efficiency of DFSABC are validated by Experiment 1 in Subsection 4.2.1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Two novel solution search equations</head><p>The solution search equation plays an important role in ABC. Eq. ( <ref type="formula" target="#formula_2">3</ref>) indicates that the solution search equation of ABC is good at exploration but poor at exploitation. To improve the exploitation ability and utilize the beneficial information of the current best solution, Zhu and Kwong proposed a new search equation (named GABC) <ref type="bibr" target="#b49">[50]</ref> , shown in Eq. <ref type="bibr" target="#b4">(5)</ref> . However, as claimed in <ref type="bibr" target="#b14">[15]</ref> , Eq. ( <ref type="formula" target="#formula_8">5</ref>) may cause an oscillation phenomenon and thus may also degrade convergence since the guidance of the last two terms may be in opposite directions. Afterwards, Gao and Liu <ref type="bibr" target="#b12">[13]</ref> designed a new search equation, shown in Eq. <ref type="bibr" target="#b5">(6)</ref> . Although the information of the current best solution is utilized in Eq. ( <ref type="formula">6</ref>) , the candidate solution generated around X G best constantly determines that it emphasizes on exploitation. Therefore, in order to address these issues in Eq. ( <ref type="formula" target="#formula_8">5</ref>) and Eq. (6) , they <ref type="bibr" target="#b14">[15]</ref> invented a novel search equation shown in Eq. <ref type="bibr" target="#b6">(7)</ref> , which has no bias to any search direction and with the guidance from only one term φ i, j (X G r1 -X G r2 ) , the oscillation phenomenon can be effectively avoided. Therefore, the search ability of ABC is improved significantly by Eq. <ref type="bibr" target="#b6">(7)</ref> . From Eq. (5) to Eq. ( <ref type="formula" target="#formula_9">7</ref>) , ψ i, j is a uniform random number in [0, 1.5]; X G best, j is the j th element of the current best solution; index k is an integer randomly chosen from { 1 , 2 , • • • , SN } and different from the base index i ; r 1 and r 2 are two distinct integers randomly picked up from { 1 , 2 , • • • , SN } , and both of them are different from the base index i .</p><formula xml:id="formula_8">V G i, j = X G i, j + φ i, j • (X G i, j -X G k, j ) + ψ i, j • (X G best, j -X G i, j )<label>(5)</label></formula><p>Fig. <ref type="figure">4</ref>. Evolution process of a solution according to (a): Eq. ( <ref type="formula" target="#formula_10">8</ref>) and (b): Eq. ( <ref type="formula" target="#formula_11">9</ref>) in 2-D parametric space.</p><formula xml:id="formula_9">V G i, j = X G best, j + φ i, j • (X G i, j -X G r1 , j ) (6) V G i, j = X G r1 , j + φ i, j • (X G r1 , j -X G r2 , j )<label>(7)</label></formula><p>Although Eq. ( <ref type="formula" target="#formula_9">7</ref>) can significantly improve the search ability of ABC, the beneficial information of the population is not fully exploited. It lies in the fact that it has no bias to any search direction. Inspired by some state-of-the-art DE variants <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b47">48]</ref> , some good solutions can be exploited to guide the evolution direction cooperatively, which can get a better balance between exploration and exploitation effectively. Therefore, in order to further improve the performance of ABC by utilizing the useful information of some good solutions, two novel search equations are designed as follows:</p><formula xml:id="formula_10">V G i, j = X G e, j + φ i, j • (X G e, j -X G k, j )<label>(8)</label></formula><p>V G e, j = 1 2</p><formula xml:id="formula_11">(X G e, j + X G best, j ) + φ e, j • (X G best, j -X G k, j )<label>(9)</label></formula><p>where X G e is randomly chosen from the elite solutions (the top p • SN solutions in current population p ∈ (0 , 1) ); X G k is randomly picked up from current population; X G e and X G k are distinct and both of them are different from X G i ; X G best is the current best solution; φ i, j and φ e, j are two random real numbers in [-</p><p>The candidate solution V G i generated by Eq. ( <ref type="formula" target="#formula_10">8</ref>) learns from a randomly selected elite solution X G e at the j th element, which will be close to the elite solution X G e and be better than its parent solution X G i with a high probability. Eq. ( <ref type="formula" target="#formula_11">9</ref>) exploits the information of the elite solution and the current best solution simultaneously. The candidate solution V e is more close to the current best solution with a large probability when it is compared with corresponding parent solution X e . The evolutionary processes of a solution in 2-D parametric space by using Eq. ( <ref type="formula" target="#formula_10">8</ref>) and Eq. ( <ref type="formula" target="#formula_11">9</ref>) have been diagrammatically shown in Fig. <ref type="figure">4</ref> (a) and (b). Obviously, in Fig. <ref type="figure">4</ref> (a), the candidate solution V i is only generated at the red axis, and it has a large chance to get close to the elite solution X e . In Fig. <ref type="figure">4 (b)</ref>, the candidate solution V e can be only generated at the red axis, which is closer to the current best solution than the corresponding elite solution X e . Moreover, with the guidance from only one term, Eq. ( <ref type="formula" target="#formula_10">8</ref>) and Eq. ( <ref type="formula" target="#formula_11">9</ref>) can also easily avoid the oscillation phenomenon. In our proposed algorithm, Eq. ( <ref type="formula" target="#formula_10">8</ref>) is used in the employed bee phase, which makes all solutions learn from some elite solutions, and Eq. ( <ref type="formula" target="#formula_11">9</ref>) is employed in the onlooker phase, which lets elite solutions learn from the current best solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">The complete proposed algorithm (DFSABC_elite)</head><p>In this subsection, we propose a novel ABC variant, named DFSABC_elite by combining our DFS framework with two novel search equations. The pseudo-code of the complete DFSABC_elite is demonstrated in Fig. <ref type="figure" target="#fig_3">5</ref> . In each generation, at the beginning of the employed bee phase, a control parameter eflag is set to 1 ( line 4 ). Afterward, in the employed bee phase, if eflag == 1, a solution X G s selected randomly from the whole population will be searched by an employed bee to produce a candidate solution V G s according to Eq. ( <ref type="formula" target="#formula_10">8</ref>) ( lines 6-9 ). If the candidate solution V G s is better than X G s , V G s will be recorded by its employed bee and replace X G s . Meanwhile, eflag is set to 0 ( lines 11-13 ), and the next employed bee will continuously fly to X G s to search. Otherwise, eflag is set to 1 ( line 15 ), and the next employed bee will fly to a randomly selected solution to search. At the start of the onlooker bee phase, a control parameter oflag is set to 1 ( line 18 ). Then, in the onlooker bee phase, if oflag == 1, a solution X G e is chosen randomly from the elite solutions to generate a candidate solution V G e by using Eq. ( <ref type="formula" target="#formula_11">9</ref>) ( lines 20-23 ). If the candidate solution V G e outperforms X G e , V G e will be memorized by its onlooker bee and replace X G e . Meanwhile, oflag is set to 0 ( lines 25-27 ), and the next onlooker bee will consecutively fly to X G e to search. Otherwise, oflag is set to 1 ( line 29 ), and the next onlooker bee will fly to the solution picked up randomly from elite solutions to search. After the employed bee phase and onlooker bee phase, the scout bee phase will be launched ( lines 33-37 ). This whole process will be repeated until the termination condition is satisfied. The solution with the smallest objective value in final population is reported as the final optimization result. Note that the differences of Algorithm 1 and Algorithm 2 are shown in lines 9 and 23. Compared with the original ABC, DFSABC_elite introduces additional computation on selecting the elite solutions (sorting the population), whose computational complexity is</p><formula xml:id="formula_13">O (SN • log (SN)) . Since the complexity of the original ABC is O (D • SN) [12] , the overall complexity of DFSABC_elite is O (SN • log (SN) + D • SN) . It can be simplified to O (D • SN) , when D is much</formula><p>larger than log( SN ). Therefore, the total complexity of DFSABC_elite is the same as that of the original ABC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experimental results</head><p>In this section, we firstly analyze the effectiveness of proposed algorithmic components. Secondly, we conduct some experiments to compare DFSABC_elite with some ABCs and EAs <ref type="bibr" target="#b29">[30]</ref> to validate the performance. Finally, we analyze the sensitiveness of some introduced parameters. Sphere</p><formula xml:id="formula_14">f 1 (x ) = D i =1 x 2 i [ -100 , 100 ] D 0 1 × 10 -8 Elliptic f 2 (x ) = D i =1 ( 10 6 ) i -1 D -1 x 2 i [ -100 , 100 ] D 0 1 × 10 -8 SumSquare f 3 (x ) = D i =1 ix 2 i [ -10 , 10 ] D 0 1 × 10 -8 sumPower f 4 (x ) = D i =1 | x i | ( i +1 ) [ -1 , 1 ] D 0 1 × 10 -8 Schwefel 2.22 f 5 (x ) = D i =1 | x i | + D i =1 | x i | [ -10 , 10 ] D 0 1 × 10 -8 Schwefel 2.21 f 6 (x ) = max { | x i | , 1 ≤ i ≤ n } [ -100 , 100 ] D 0 1 × 10 0 Step f 7 (x ) = D i =1 ( x i + 0 . 5 ) 2 [ -100 , 100 ] D 0 1 × 10 -8 Exponential f 8 (x ) = exp ( 0 . 5 * D i =1 x i ) [ -10 , 10 ] D 0 1 × 10 -8 Quartic f 9 (x ) = D i =1 ix 4 i + random [ 0 , 1 ] [ -1 . 28 , 1 . 28 ] D 0 1 × 10 -1 Rosenbrock f 10 (x ) = D -1 i =1 100 ( x i +1 -x 2 i ) 2 + ( x i -1 ) 2 [ -5 , 10 ] D 0 1 × 10 -1 Rastrigin f 11 (x ) = D i =1 x 2 i -10 cos ( 2 πx i ) + 10 [ -5 . 12 , 5 . 12 ] D 0 1 × 10 -8</formula><p>NCRastrigin</p><formula xml:id="formula_15">f 12 (x ) = D i =1 [ y 2 i -10 cos ( 2 πy i ) + 10 ] y i = x i | x i | &lt; 1 2 round( 2 x i ) 2 | x i | ≥ 1 2 [ -5 . 12 , 5 . 12 ] D 0 1 × 10 -8</formula><p>Griewank</p><formula xml:id="formula_16">f 13 (x ) = 1 / 40 0 0 D i =1 x 2 i -D i =1 cos ( x i √ i ) + 1 [ -60 0 , 60 0 ] D 0 1 × 10 -8</formula><p>Schwefel2.26</p><formula xml:id="formula_17">f 14 (x ) = 418 . 98288727243380 * D -D i =1 x i sin ( | x i | ) [ -50 0 , 50 0 ] D 0 1 × 10 -8</formula><p>Ackley</p><formula xml:id="formula_18">f 15 (x ) = 20 + e -20 exp ( -0 . 2 1 D D i =1 x 2 i ) -exp ( 1 D D i =1 cos ( 2 πx i ) ) [ -50 , 50 ] D 0 1 × 10 -8</formula><p>Penalized1</p><formula xml:id="formula_19">f 16 (x ) = π D { 10 sin 2 ( πy 1 )+ D -1 i =1 ( y i -1 ) 2 [ 1 + 10 sin 2 ( πy i +1 ) ] + ( y D -1 ) 2 } + D i =1 u ( x i , 10 , 100 , 4</formula><p>)</p><formula xml:id="formula_20">y i = 1 + 1 / 4 ( x i + 1 ) , u x i ,a,k,m = ⎧ ⎨ ⎩ k ( x i -a ) m x i &gt; a 0 -a ≤ x i ≤ a k ( -x i -a ) m x i &lt; a [ -100 , 100 ] D 0 1 × 10 -8 Penalized2 f 17 (x ) = 1 10 { sin 2 ( πx 1 ) + D -1 i =1 ( x i -1 ) 2 [ 1 + sin 2 ( 3 πx i +1 ) ] + ( x D -1 ) 2 [ 1 + sin 2 ( 2 πx i +1 ) ] } + D i =1 u ( x i , 5 , 100 , 4 ) [ -100 , 100 ] D 0 1 × 10 -8</formula><p>Alpine</p><formula xml:id="formula_21">f 18 (x ) = D -1 i =1 | x i • sin ( x i ) + 0 . 1 • x i | [ -10 , 10 ] D 0 1 × 10 -8</formula><p>Levy</p><formula xml:id="formula_22">f 19 (x ) = D -1 i =1 ( x i -1 ) 2 [ 1 + sin 2 ( 3 πx i +1 ) ] + sin 2 ( 3 π 1 ) + | x D -1 | [ 1 + sin 2 ( 3 πx D ) ] [ -10 , 10 ] D 0 1 × 10 -8</formula><p>Weierstrass</p><formula xml:id="formula_23">f 20 (x ) = D i =1 ( k max k =0 [ a k cos ( 2 πb k ( x i + 0 . 5 ) ) ] -D k max k =0 [ a k cos ( 2 πb k 0 . 5 ) ] , a = 0 . 5 , b = 3 , k max = 20 [ -1 , 1 ] D 0 1 × 10 -8</formula><p>Himmelblau</p><formula xml:id="formula_24">f 21 (x ) = 1 /D D i =1 ( x 4 i -16 x 2 i + 5 x i ) [ -5 , 5 ] D -78 .33236 -78 Michalewicz f 22 (x ) = -n i =1 sin ( x i ) sin 20 i ×x 2 i π [ 0 , π] D</formula><p>-30, -50, -100 -29, -49, -99</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Experimental settings</head><p>To evaluate the performance of DFSABC_elite, we use a set of 22 scalable benchmark functions with dimensions D = 30, 50, 100 <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b30">31]</ref> , which are summarized in Table <ref type="table" target="#tab_0">1</ref> . For instance, f 1 -f 6 and f 8 are the continuous unimodal functions; f 7 is a discontinuous step function; f 9 is a noisy quartic function. f 10 is the Rosenbrock function which is unimodal for D = 2 and D = 3, while it may have multiple optimal solutions when D &gt; 3. f 11 -f 22 are multimodal functions, and the number of their local optimal points increases exponentially with the problem dimension. The search range, the global optimal value, and the "acceptant value" of each function are shown in columns 3, 4 and 5 of Table <ref type="table" target="#tab_0">1</ref> respectively. When the objective function value of the best solution obtained by an algorithm in a run is less than the acceptant value, the run is regarded as a successful run .</p><p>In our performance evaluation, three metrics are considered, described as follows.</p><p>(1) The mean and standard deviation of the best objective function value are obtained by each algorithm, which are used to evaluate the quality or accuracy of the solutions obtained by different algorithms. The smaller the value of this metric is, the higher quality/accuracy the solution has; (2) The average FES (AVEN) is required to reach the acceptant value, which is employed to evaluate the convergence speed. The smaller the value of this metric is, the faster the convergence speed is. Note that AVEN will be only calculated for the successful runs. If an algorithm cannot find any solution whose objective function value is smaller than the acceptant value in all runs, AVEN will be denoted by "NA"; (3) The successful rate (SR%) of the 25 independent runs is utilized to evaluate the robustness or reliability of different algorithms. The greater the value of this metric is, the better the robustness/reliability is.</p><p>There are five experiments in our whole evaluation. Experiment 1 is used to validate the effectiveness and efficiency of our proposed algorithmic components ( i.e. the DFS framework and two novel solution search equations). Experiment 2 is employed to evaluate the performance of DFSABC_elite, when compared to other ten ABC variants. Experiment 3 is utilized to evaluate the performance of DFSABC_elite, when compared to some other non-ABC methods. Experiment 4 is conducted for analyzing the influence of some parameters ( i.e. , p , r and SN ) on the performance of DFSABC_elite. Experiment 5 is an extended experiment, which is used to evaluate the performance of DFSABC_elite, when compared to four recent ABC variants on CEC2014 test functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Experiment 1: effectiveness of the proposed algorithmic components 4.2.1. Effectiveness of the DFS framework</head><p>In this experiment, in order to validate the effectiveness and efficiency of the DFS framework, the DFS framework is embedded in three versions of ABC, i.e. , the standard ABC, global-best-guide ABC (GABC <ref type="bibr" target="#b49">[50]</ref> ) and CABC <ref type="bibr" target="#b14">[15]</ref> , which generate DFSABC, DFSGABC and DFSCABC, respectively. DFSABC, DFSGABC and DFSCABC are respectively compared with ABC, GABC and CABC on 22 benchmark functions with 30 D ( D denotes the number of decision variables). The maximal function evaluation (max_ FES ) is employed as the termination condition, which is set to 150,0 0 0 . For all the algorithms, SN is set to 50 <ref type="bibr" target="#b25">[26]</ref> , and limit is set to SN • D <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b26">27]</ref> . For DFSABC, DFSGABC and DFSCABC, p is set to 0.1, and r is set to 1. All the algorithms are conducted with 25 independent runs for each test function. The results are given in Table <ref type="table" target="#tab_1">2</ref> and the better results are marked with boldface .</p><p>It can be clearly observed from Table <ref type="table" target="#tab_1">2</ref> that the DFS framework can effectively speed up the convergence rate of ABC. To be specific, DFSABC outperforms ABC on most test functions in terms of solution accuracy and convergence speed according to mean (std) and AVEN, respectively. For the rest of test functions, i.e. , f 4 , f 6 -f 9 , f 12 , f 13 and f 19 , although they have similar solution accuracy and success rate, the convergence rate of DFSABC is better than that of ABC according to AVEN. Similarly, DFSGABC and DFSCABC are better than or similar to GABC and CABC, respectively, on most test functions regarding solution accuracy, and especially in terms of convergence rate. In order to clearly demonstrate the convergence rate, the AVEN of ABC, DFSABC, GABC, DFSGABC, CABC and DFSCABC are presented in Fig. <ref type="figure" target="#fig_5">8 (a)</ref>. Obviously, according to Fig. <ref type="figure" target="#fig_5">8 (a)</ref>, the convergence rate of DFSABC, DFSGABC and DFSCABC is always faster than that of ABC, GABC and CABC, respectively. In addition, GABC is always faster than ABC, but slower than CABC. DFSGABC is often faster than DFSABC as well, but slower than DFSCABC. Note that some points are vacant in Fig. <ref type="figure" target="#fig_5">8</ref> , such as f 8 , because some algorithms cannot find an acceptable solution in 25 independent runs. Moreover, the DFS framework could be employed in other variants of ABC. In brief, the experimental results verify that ABC variants with the DFS framework outperform ABC variants with the BFS framework (the framework of the original ABC). Although the performance of some ABC variants ( e.g. , ABC, GABC and CABC) can be improved by the DFS framework to some extent, we should point out that DFS framework with different solution search equations may show different improvement performance. More specifically, the improvement degree of DFSCABC to CABC is distinctly smaller than that of DFSABC to ABC and that of DFSGABC to GABC. It may be caused by the solution search equation of CABC, which is based on three randomly selected solutions. Since the search equation does not make full use of the beneficial information of the good solutions, it may not continuously produce better solutions for a certain solution. Therefore, the merit of the DFS framework is not fully exhibited. On the basis of this situation, we speculate that if the DFS framework can be combined with some solution search equations that take full advantage of the valuable information of good solutions, it may consecutively generate better candidate solution for a certain solution, and significantly further improve the performance. This idea also encourages us to design two novel solution search equations in this paper.</p><p>Although the DFS framework can accelerate the convergence rate, it may lose the population's diversity quickly and be caught into local optimal area easily. To explain why DFSABC can solve this problem by the theoretical analysis, we use a diversity metric as Eq. <ref type="bibr" target="#b9">(10)</ref> , which is used to analyze the change of population's diversity with evolutionary process of ABC and DFSABC. <ref type="bibr" target="#b9">(10)</ref> where SN denotes the number of food sources, D is the number of variables (problem dimension), and x is the center position of the population.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Di v ersity</head><formula xml:id="formula_25">= 1 SN SN i =1 1 D D j=1 ( x i, j -x j ) 2</formula><p>Note that the same initial population is used to each problem for ABC and DFSABC. The experimental results for some selected functions ( f 1 , f 4 , f 6 , f 10 , f 12 , f 16 , f 18 and f 20 ) are illustrated in Fig. <ref type="figure" target="#fig_20">6</ref> since the remainder functions have similar results. As shown in Fig. <ref type="figure" target="#fig_20">6</ref> , DFSABC can keep the diversity as the same as that of ABC to a large extent. Therefore, DFSABC can obtain a better tradeoff between exploration and exploitation.</p><p>Moreover, in the employed bee phase and onlooker bee phase of DFSABC_elite, the DFS search (local search) will be launched when a better solution is found. In the onlooker bee phase, only the elite solutions can be evolved. Obviously, the evolvement chance of elite solutions should be significantly larger than that of other solutions. In order to clearly show this difference, we analyze the number of evolvement of each solution on all functions. The experimental results are shown in Fig. <ref type="figure" target="#fig_4">7</ref> , which contains the results on f 1 , f 5 , f 6 , f 11 , f 13 , f 15 , f 18 and f 20, since the remainder functions have similar results. Note that the same initial population of each function is used to ABC and DFSABC_elite. X axis (individual) denotes the index of solution in the population, and Y axis denotes the proportion of evolvement (the number of evolution/max_ FES ). Evidently, the proportions of some elite solutions in DFSABC_elite are significantly larger than other solutions, while almost all solutions have the similar proportion in most cases of ABC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2.">Effectiveness of each algorithmic component</head><p>In this experiment, the original ABC and following three variants ( i.e. , DFSABC, ABC_elite and DFSABC_elite) are used to analyze how much contribution is made by each of these two proposed algorithmic components. The experimental setup Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0 0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e  and parameters setting are the same as Subsection 4.2.1 , except that p is set to 0.1 and r is set to 10 for DFSABC_elite. The experimental results are given in Table <ref type="table" target="#tab_5">3</ref> .</p><formula xml:id="formula_26">+</formula><p>(1) ABC only combines with the DFS framework, denoted by DFSABC.</p><p>(2) ABC only combines with two novel search equations, denoted by ABC_elite.</p><p>(3) ABC combines with the DFS framework and two novel search equations, denoted as DFSABC_elite.</p><p>As shown in Table <ref type="table" target="#tab_5">3</ref> , DFSABC and ABC_elite are better than ABC in terms of solution accuracy, robustness and convergence rate on most cases, but the contribution of the two novel search equations is larger than that of DFS framework. Moreover, DFSABC_elite outperforms DFSABC and ABC_elite on most cases. This phenomenon effectively validates that each of our proposed components can make contribution to ABC and improves the performance of ABC. In addition, through the combination of two proposed algorithmic components, the performance of ABC can be further significantly improved. Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e </p><formula xml:id="formula_27">+</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Experiment 2: comparison of DFSABC_elite and other ABC variants</head><p>In this subsection, DFSABC_elite is compared with ten ABC variants, i.e. , ABC, GABC <ref type="bibr" target="#b49">[50]</ref> , CABC <ref type="bibr" target="#b14">[15]</ref> , best-so-far ABC <ref type="bibr" target="#b2">[3]</ref> , MABC <ref type="bibr" target="#b13">[14]</ref> , dABC <ref type="bibr" target="#b26">[27]</ref> , qABC <ref type="bibr" target="#b25">[26]</ref> , EABC <ref type="bibr" target="#b16">[17]</ref> , ABCVSS <ref type="bibr" target="#b27">[28]</ref> and BABC <ref type="bibr" target="#b10">[11]</ref> on all 22 test functions with 30 D , 50 D and 100 D . To make a fair comparison, for all the compared algorithms, the initial population is generated randomly according to Eq. (1) ; SN and limit are set to 50 and SN • D respectively; max_ FES is used as the termination condition, which is set to 50 0 0 D ; the detailed parameter settings of all the algorithms are set as suggested in their original papers, which are listed in Table <ref type="table">4</ref> . Moreover, we have conducted some extensive experiments about tuning the parameters of the compared algorithms to validate the fairness and rationality of our adopted settings. The experimental results show that the compared algorithms with the parameter settings as suggested in their original papers could achieve satisfactory results in our experimental environment. Owing to space constraints, we don't give the detailed results. In order to show the differences between DFSABC_elite and other algorithms, the Wilcoxon's rank sum test <ref type="bibr" target="#b8">[9]</ref> , which is a nonparametric statistic test for independent samples, is conducted on the experimental results at a 5% significant level. The box charts of experimental results are shown in Figs. 9-11 . Note that in Figs. 9-11 , 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 denote ABC, GABC, CABC, BFSABC, MABC, dABC, qABC, EABC, ABCVSS, BABC and DFSABC_elite, respectively, and log ( f ( x )) is used for all functions except f 7 , f 8 , f 21 and f 22 . Some positions are vacant, as the times that the best objective function values are found by the corresponding algorithm are 0 among 25 runs. The detailed experimental results are presented in Tables 5-13 and the best results are marked with boldface. It is noted that symbols "-", "+ ", "= " denote that the performance of the corresponding algorithm is worse than, better than and similar to that of DFSABC_elite, respectively, according to Wilcoxon's rank test at a 0.05 significance level.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 4</head><p>Parameters setting of all ABC algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm</head><p>Parameters setting</p><formula xml:id="formula_28">ABC SN = 50 , limit = SN • D GABC SN = 50 , limit = SN • D , C = 1.5 CABC SN = 50 , limit = SN • D MABC SN = 50 , limit = SN • D , P = 0.7 dABC SN = 50 , limit = SN • D qABC SN = 50 , limit = SN • D , r = 1 EABC SN = 50 , limit = SN • D , μ = 0 . 3 , δ = 0 . 3 , A = 1 BABC SN = 50 , limit = SN • D ABCVSS SN = 50 , limit = SN • D , c = 2 Best so far ABC SN = 50 , limit = SN • D , ω max = 1 , ω min = 0 . 2 DFSABC_elite SN = 50 , limit = SN • D , p = 0.1, r = 1/ p</formula><p>The experimental results on 30 D functions are presented in Tables <ref type="table" target="#tab_7">5</ref><ref type="table" target="#tab_11">6</ref>. Clearly, DFSABC_elite is significantly better than all the other algorithms in terms of solution accuracy, convergence rate and robustness on unimodal functions f 1 -f 6 , while all the algorithms show similar performance on unimodal function f 8 . f 7 is a discontinuous step function and may be relatively easy to solve <ref type="bibr" target="#b14">[15]</ref> , as its global optimal solution is a region rather than a point. Hence, all the algorithms can always find out a global optimal solution on f 7 , but qABC, DFSABC_elite and EABC have better convergence rate. Since f 9 is a noisy quartic function and it is very difficult to find its global optimal solution, all the algorithms can obtain a near-global optimal solution but cannot find out the real global optimum. Although all the algorithms get the similar performance regarding solution quality, DFSABC_elite exhibits faster convergence speed than all the competitors. As f 10 is Rosenbrock function and its global optimum is inside a long, narrow, parabolic shaped flat valley, the variables are strongly dependent, and the gradients do not generally point towards the optimum. If the population is guided by the global best solution or some other good solutions, the search will fall into some unpromising areas. Therefore, DFSABC_elite is beaten by all the competitors on f 10 except GABC, MABC and EABC, whose search equation also utilizes the information of the current best solution. Regarding multimodal functions f 11 -f 22 , DFSABC_elite is better than or at least comparable to the compared algorithms in terms of solution accuracy and reliability. However, DFSABC_elite performs better than all the competitors on all multimodal functions regarding convergence rate except for qABC on f 22 . Overall, DFSABC_elite outperforms ABC, GABC, CBAC, best-so-far ABC, MABC, dABC, qABC, EABC, ABCVSS, and BABC on 18, 15, 8, 18, 8, 18, 17, 14, 9 and 9 out of 22 functions. On the contrary, DFSABC_elite is only beaten by ABC, CABC, best-so-far ABC, dABC, qABC, ABCVSS and BABC on f 10 . Moreover, DFSABC_elite is faster than all other competitors on almost all the test functions except f 9 and f 22 . For the convenience and clearness of illustration, the convergence curves of mean objective function values for all the test functions are plotted in Fig. <ref type="figure" target="#fig_13">12</ref> . In brief, it is obvious that DFSABC_elite has better solution accuracy, convergence rate and robustness than all the competitors on almost all the test functions.</p><p>Furthermore, in order to investigate the scalability of DFSABC_elite, we also compare DFSABC_elite with all the competitors on the 22 test functions with 50 D and 100 D . The experimental results are given in Tables <ref type="table" target="#tab_19">8-9</ref> and<ref type="table" target="#tab_28">Tables 11-12</ref> . It clearly shows that DFSABC_elite outperforms all the competitors on most test functions in terms of solution accuracy, reliability and convergence rate, and the superiority of DFSABC_elite is not affected by the growth of the dimensions in search space. In order to highlight the convergence rate of DFSABC_elite, the AVEN of all the compared algorithms on 30 D , 50 D and 100 D test functions are presented in Fig. <ref type="figure" target="#fig_5">8</ref> (b), (c), (d) respectively. Clearly, DFSABC_elite obtains the smallest AVEN value on almost all the test functions except for f 9 and f 22 . Moreover, according to the Friedman test, the final ranking of all ABC variants for each function with 30 D , 50 D and 100 D is shown in Tables 7 , 10 and 13 , respectively. The best results are highlighted in boldface. Obviously, DFSABC_elite obtains the best ranking in the majority of the test functions and the average ranking of all functions of DFSABC_elite is better than that of other ABC variants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.">Experiment 3: comparisons with non-ABC methods and ABC with adaptive local search</head><p>In this subsection, DFSABC_elite is compared with six non-ABC methods, i.e. , DE with composite strategies and control parameters (CoDE) <ref type="bibr" target="#b41">[42]</ref> , adaptive DE with external archive (JADE) <ref type="bibr" target="#b47">[48]</ref> , DE with strategy adaptation (SaDE) <ref type="bibr" target="#b37">[38]</ref> , self-adaptive DE employing three strategies and a population size reduction mechanism (jDEscop) <ref type="bibr" target="#b4">[5]</ref> , the comprehensive learning PSO (CLPSO) <ref type="bibr" target="#b32">[33]</ref> , a very efficient and famous evolution strategy (CMA-ES) <ref type="bibr" target="#b18">[19]</ref> , and an accelerating ABC with an adaptive local search (AABCLS) <ref type="bibr" target="#b19">[20]</ref> on all 22 test functions with 50 D . In our experiments, the parameters of these seven algorithms are set as the suggestion in their original papers. The parameters setting of DFSABC_elite is the same as that of Experiment 2 . The max_ FES for all these algorithms is set to 250,0 0 0, and each algorithm runs 25 times for each test function. The box charts of the experimental results are shown in Fig. <ref type="figure" target="#fig_14">13</ref> . Note that in Fig. <ref type="figure" target="#fig_14">13</ref> , 1, 2, 3, 4, 5, 6, 7, 8 denote CoDE, JADE, SaDE, jDEscop, CLPSO, CMA-ES, AABCLS and DFSABC_elite, respectively. log ( f ( x )) is used for all functions except f 7 , f 8 , f 21 and f 22 . Some positions are vacant as the times that all best objective function values are found by the corresponding algorithm are 0 among 25 runs. The experimental results are given in Table <ref type="table" target="#tab_0">14</ref> and the best results are marked in boldface. Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e    "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level.     "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level.   Table <ref type="table" target="#tab_0">14</ref> shows the comparison results in terms of the mean and standard deviation. Clearly, with regard to unimodal functions f 1 -f 6 , JADE and DFSABC_elite obtain the best and the second best results, respectively, on f 1 -f 3 . To be specific, JADE performs the best on some unimodal functions (such as f 1 , f 2 and f 3 ), the main reason of which is that its mutation operator also exploits the beneficial information of the elite solution. Moreover, multiple dimensions of the new solution may be different from that of the corresponding old solution in JADE, while only one dimension will be changed in DFSABC_elite. Therefore, JADE may perform better than DFSABC_elite on unimodal function when the elite solution can provide effective information to guide the evolutionary direction. CoDE and jDEscop exhibit the best and second best performance on f 4 . The      "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level. Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e     "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level. According to the analysis above, it can be concluded that, DFSABC_elite significantly outperforms all the compared algorithms when considering all the test functions. Moreover, the final rankings of competitors for each problem based on the Friedman test are shown in Table <ref type="table" target="#tab_32">15</ref> . The best results are marked in boldface . Evidently, DFSABC is better than other non-ABC methods and AABCLS.</p><formula xml:id="formula_29">+</formula><formula xml:id="formula_30">+</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.">Experiment 4: parameters analysis 4.5.1. Sensitiveness analysis of parameters p and r</head><p>As described in Fig. <ref type="figure" target="#fig_3">5</ref> ( Algorithm 2 ), two important parameters, i.e. , p and r , are introduced in DFSABC_elite, where p is used to control the size of elite solutions and r determines the number of onlooker bees. They may significantly affect the performance of DFSABC_elite. In order to analyze the influence of these two parameters on DFSABC_elite, some extensional experiments on six selected functions with 30 D ( i.e. , Elliptic function f 2 , Schwefel 2. From Fig. <ref type="figure" target="#fig_25">14</ref> (a), with respect to Elliptic function f 2 , the smaller p and the larger r could get higher accuracy of the solution. Moreover, the smaller the value of p is, the faster the convergence rate is. When p is set to some small values ( e.g. , p = 0.1, 0.2 and 0.3), the larger the value of r is, the faster the convergence speed is. In Fig. <ref type="figure" target="#fig_25">14 (b)</ref>, regarding Schwefel 2.21 function f 6 , p has no discernible impact on the solution quality according to the mean best value , but a larger r can improve the accuracy of the solution and speed up the convergence. In Fig. <ref type="figure" target="#fig_25">14 (c</ref>), with regard to Rastrigin function f 11 , it always can be found out the global optimal solution for different combinations of p and r except that p is set to 0.1. In addition, the smaller p can obtain faster convergence rate, and the larger r can accelerate the convergence with some small p values ( e.g. , p = 0.1, 0.2). In Fig. <ref type="bibr">14 (d)</ref>, in respect to Griewank function f 13 , the different combinations of p and r have no influence on the solution accuracy. Similarly, the smaller p is advantageous to the convergence. In Fig. <ref type="figure" target="#fig_25">14</ref> (e) and Fig. <ref type="figure" target="#fig_25">14</ref> (f), regarding to Ackley function f 15 and Weierstrass function f 17 , all combinations of p and r show similar performance in terms of solution accuracy, but the convergence will be accelerated by small p and large r . Obviously, it can be concluded that DFSABC_elite     "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level.     "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level. shows good performance on solution accuracy with small p ( e.g. , p = 0.1) and large r ( e.g. , r = 10) and especially in terms of convergence rate. It might lie in two aspects. Firstly, only a small part of elite solutions (the top p × SN solutions) guide the evolutionary direction when p is assigned a small value (such as p = 0.1). Secondly, parameter r controls the number of onlooker bees, which only search in the neighborhood of elite solutions. The larger r determines large number of onlooker bees, and thus the elite solutions will be assigned to more computing resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2.">Sensitiveness analysis of parameter SN</head><p>In order to analyze the influence of parameter SN on the performance of DFSABC_elite, nine different values of SN , i.e. , 20, 30, 40, 50, 60, 70, 80, 90, 100, are used to conduct experiments on all 22 test functions with 30 D . The settings of other parameters are the same as those introduced in Experiment 2 . The experimental results are given in Table <ref type="table" target="#tab_33">16</ref> and the best results are marked with boldface.</p><p>It can be seen from Table <ref type="table" target="#tab_33">16</ref> that, the small value of SN ( e.g. , SN = 20) will significantly improve the performance of DFSABC_elite in terms of solution accuracy and convergence rate on the unimodal functions f 1 -f 6 . With regard to f 7 and f 8 , though the solution accuracy and reliability are not affected by SN , large SN will decelerate the convergence speed. With respect to the multimodal functions f 11 -f 22 , the convergence can be accelerated by a small SN , but the reliability will be decreased. Therefore, it could be the appropriate setting that SN is set to 20 and 50 for unimodal and multimodal functions respectively. Moreover, we conduct some experiments to analyze the influence of parameter p with different values. In these experiments, p is set different values (0.2, 0.3, 0.4, and 0.5), and DFSABC_elite is tested for SN = 20 and SN = 50 respectively on some typical unimodal functions ( f 1 , f 2 and f 3 ) and multimodal functions ( f 11 , f 12 and f 13 ) with 30 D . The experimental   "-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level.</p><p>results are given in Table <ref type="table" target="#tab_35">17</ref> and the better results are marked in boldface. Table <ref type="table" target="#tab_35">17</ref> clearly shows that when SN = 20, DF-SABC_elite performs better on unimodal function, but is easily caught in local optimal area. When SN = 50, DFSABC_elite shows better results and robustness on multimodal functions, but converges slowly on unimodal functions. Therefore, a small population ( SN = 20) for DFSABC_elite is suitable for solving unimodal functions and a large one ( SN = 50) is appropriate for addressing multimodal functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.">Experiment 5: comparison on CEC2014 test functions</head><p>In this subsection, DFSABC_elite is compared with four recent ABC variants, i.e ., dABC <ref type="bibr" target="#b26">[27]</ref> , qABC <ref type="bibr" target="#b25">[26]</ref> , EABC <ref type="bibr" target="#b16">[17]</ref> , ABCVSS <ref type="bibr" target="#b27">[28]</ref> on CEC2014 test functions with 10 D . The parameter settings of these compared algorithms are shown in Table <ref type="table">4</ref>.</p><p>In this experimental study, the average and the standard deviation of the function error value f ( X best )f ( X * ) are adopted to express the optimization performance, where X best is the best solution found by the algorithm in each run and X * is the real global optimal solution of the test function. The maximal function evaluation (max_ FES ) is used as the termination condition, which is set to 10 0,0 0 0 according to the guidelines provided in the special session of CEC2014. For all the experiments, 25 independent runs are conducted for each test function. The Wilcoxon's rank-sum test is conducted on the experimental results with the 5% significant level to obtain the reliable statistic conclusion. The experimental results are given in Table <ref type="table" target="#tab_36">18</ref> , and the best result for each test problem is marked with bold face. It can be observed from Table <ref type="table" target="#tab_36">18</ref> that DFSABC_elite performs better than the compared ABCs on most test functions. Particularly, DFSABC_elite outperforms dABC, qABC, ABCVSS and EABC on 21, 19, 18 and 15 out of 30 test functions. By contrast, dABC, qABC, ABCVSS and EABC are only better than DFSABC_elite on 7, 7, 6 and 5 test functions, respectively. Overall, DFSABC_elite can also perform better than the recent ABC variants on these complex test functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion and future work</head><p>In order to enhance the exploitation of ABC and seek a better balance between exploration and exploitation, in this paper, we propose a depth-first search (DFS) framework and two novel search equations. In the DFS framework, the solutions that have good quality and are easy to be improved will be assigned with more computing resources in each generation. We incorporate DFS framework into three versions of ABC ( i.e. , the original ABC, GABC and CABC), respectively. Accordingly, the corresponding modified ABCs are referred to as DFSABC, DFSGABC and DFSCABC, respectively. The experimental results demonstrate that the proposed DFS framework can improve the performance of ABC in terms of solution accuracy and convergence rate. With regard to the two novel search equations, one utilizes the beneficial information of the elite solutions and is employed in the employed bee phase. The other one exploits the valuable information of the elite solutions and the current best solution, which is used in the onlooker bee phase. We also present a novel ABC variant, called DFSABC_elite, by combining the DFS framework with the two search equations. Comprehensive comparisons have been conducted on 52 benchmark functions. The experimental results show that DFSABC_elite can significantly enhance the performance of ABC and surpass other compared algorithms on almost all the test functions in terms of solution accuracy, convergence speed and reliability.</p><p>In our future work, the proposed DFS framework will be embedded in other evolutionary algorithms ( e.g. , PSO and DE), and DFSABC_elite can also be employed to handle some practical optimization problems. Moreover, we will conduct comprehensive comparisons of DFSABC_elite with more ABCs and other EAs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. The pseudo-code of the complete DFSABC.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. (a): BFS framework; (b): DFS framework.</figDesc><graphic coords="7,126.53,55.46,295.75,99.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. (a): The evolutionary procedure of ABC on 2D Sphere function. (b): The evolutionary procedure of DFSABC on 2D Sphere function.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. The pseudo-code of the complete DFSABC_elite.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. The proportion of evolvement of each solution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Average FEs are needed to reach the accept value.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. The box charts of all ABCs on 22 test functions with 30 D .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. The box charts of all ABCs on 22 test functions with 50 D .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. The box charts of all ABCs on 22 test functions with 100 D .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>7</head><label>7</label><figDesc>Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) SR/AVEN 100</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Convergence performance of different ABCs on 22 test functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. The box charts of all non-ABCs and AABCLS on 22 test functions with 50 D .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>7</head><label>7</label><figDesc>Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) SR/AVEN 100</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>21 function f 6 ,</head><label>6</label><figDesc>Rastrigin function f 11 , Griewank function f 13 , Ackley function f 15 and Penalized2 function f 17 ) are conducted, with different combinations of p and r , where p ∈ { 0 . 1 , 0 . 2 , 0 . 3 , 0 . 4 , 0 . 5 } and r ∈ { 1 , 2 , • • • , ceil( 1 /p ) } . In these experiments, max_ FES is set to150 0 0 0 and SN is set to 50. Each combination on each test function is run independently by 25 times. The mean of the best objective function values and AVEN obtained by each combination are used to evaluate their performance. The experimental results are shown in Fig. 14.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>7</head><label>7</label><figDesc>Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) SR/AVEN 100</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>7</head><label>7</label><figDesc>Mean(std) 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) = 0.0 0e + 0 0(0.0 0e + 0 0) SR/AVEN 100</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>F7 1 .</head><label>1</label><figDesc>97e-02(1.03e-02) -1.16e-02(9.55e-03) -5.40e-03(5.36e-03) = 6.30e-03(9.05e-03)-+ 0 0(2.22e + 0 0) -6.34e + 0 0(1.84e + 0 0) -5.15e + 0 0(1.90e + 0 0) -2.39e + 0 0(1.38e + 0 0) + 3.67e + 0 0(1.05e + 0 0) F10 1.03e-01(3.99e-02) -4.34e-02(5.37e-02) = 4.75e-02(5.19e-02) -6.31e-01(1.08e + 00) -3.49e-02(</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Benchmark functions in experiments.</figDesc><table><row><cell>Name</cell><cell>Function</cell><cell>Range</cell><cell>Min</cell><cell>Accept</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Comparisons of DFSABC variants and corresponding ABC variants on 22 functions with 30 D .</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>ABC</cell><cell>DFSABC</cell><cell>GABC</cell><cell>DFSGABC</cell><cell>CABC</cell><cell>DFSCABC</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>1.04e-17(1.20e-17)</cell><cell>1.74e-22(1.42e-22)</cell><cell>1.07e-30(6.09e-31)</cell><cell>1.07e-37(1.21e-37)</cell><cell>2.41e-50(3.19e-50)</cell><cell>6.23e-51(9.42e-51)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /83,702</cell><cell>100 / 68,477</cell><cell>100 /53,134</cell><cell>100/45,931</cell><cell>100 /39,770</cell><cell>100/34,894</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>4.38e-10(4.72e-10)</cell><cell>5.16e-18(4.39e-18)</cell><cell>2.64e-24(2.48e-24)</cell><cell>5.42e-34(2.01e-34)</cell><cell>1.17e-41(2.83e-41)</cell><cell>3.19e-46(4.16e-46)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /136,290</cell><cell>100 / 93,378</cell><cell>100 /81,406</cell><cell>100/58,911</cell><cell>100 /62,490</cell><cell>100/46,862</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.14e-19(9.89e-20)</cell><cell>5.96e-23(8.91e-23)</cell><cell>6.14e-32(4.74e-32)</cell><cell>6.23e-39(3.94e-39)</cell><cell>1.15e-51(1.38e-51)</cell><cell>1.02e-51(6.12e-51)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /75,402</cell><cell>100 / 63,463</cell><cell>100 /48,446</cell><cell>100/41,531</cell><cell>100 /36,314</cell><cell>100/32,977</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>2.02e-31(5.30e-31)</cell><cell>2.29e-30(9.86e-30)</cell><cell>6.78e-50(2.91e-49)</cell><cell>6.23e-58(6.17e-58)</cell><cell>1.60e-60(6.69e-60)</cell><cell>1.12e-60(4.05e-60)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /23,578</cell><cell>100 / 21,559</cell><cell>100 /14,890</cell><cell>100/13,558</cell><cell>100 /12,486</cell><cell>100/12,735</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>7.69e-11(3.04e-011)</cell><cell>4.61e-12(1.46e-12)</cell><cell>8.30e-17(3.10e-17)</cell><cell>6.31e-20(2.89e-20)</cell><cell>1.59e-26(1.04e-26)</cell><cell>1.54e-26(1.19e-26)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /124,870</cell><cell>100 / 109,370</cell><cell>10 0 /81,0 06</cell><cell>100/69,306</cell><cell>100 /56,554</cell><cell>100/54,047</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>4.39e + 0 0(1.07e + 0 0)</cell><cell>4.12e + 00(8.06e-01)</cell><cell>2.47e-01(5.89e-02)</cell><cell>1.42e-01(4.42e-02)</cell><cell>5.83e-02(1.33e-02)</cell><cell>8.28e-02(2.00e-02)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100/110,270</cell><cell>100/102,100</cell><cell>100/88,114</cell><cell>100/ 92,380</cell></row><row><cell>f 7</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>.91e-12(9.96e-13) 0.0 0e + 0 0(0.0 0e + 0 0) 0.0 0e + 0 0(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 10,994</cell><cell>100 /25,601</cell><cell>100/10,606</cell><cell>100/17,617</cell><cell>100 / 10,310</cell><cell>100/ 13,688</cell></row><row><cell>f 8</cell><cell>Mean(std)</cell><cell>7.18e-66(5.21e-73)</cell><cell>7.18e-66(1.56e-73)</cell><cell>7.18e-66(1.07e-75)</cell><cell>7.18e-66(8.84e-79)</cell><cell>7.18e-66(8.92e-80)</cell><cell>7.18e-66(6.74e-80)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /150</cell><cell>100/105</cell><cell>100 /150</cell><cell>100/105</cell><cell>100 /150</cell><cell>100/105</cell></row><row><cell>f 9</cell><cell>Mean(std)</cell><cell>6.02e-02(1.09e-02)</cell><cell>6.11e-02(1.20e-02)</cell><cell>3.08e-02(6.44e-03)</cell><cell>2.70e-02(6.05e-03)</cell><cell>2.15e-02(4.59e-03)</cell><cell>1.71e-02(3.27e-03)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /91,786</cell><cell>100/ 76,692</cell><cell>100 /48,050</cell><cell>100/43,203</cell><cell>100 /29,738</cell><cell>100/27,948</cell></row><row><cell>f 10</cell><cell>Mean(std)</cell><cell>5.45e-02(5.86e-02)</cell><cell>4.19e-02(4.08e-02)</cell><cell>4.78e + 00(1.54e + 01)</cell><cell>2.44e-01(2.19e-01)</cell><cell>1.28e-01(2.03e-01)</cell><cell>1.39e-01(1.82e-01)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>88 / 11,014</cell><cell>88 /11,218</cell><cell>60/82,303</cell><cell>40/103,970</cell><cell>68/100,240</cell><cell>64/108,730</cell></row><row><cell>f 11</cell><cell>Mean(std)</cell><cell>3.50e-14(1.35e-13)</cell><cell>6.11e-15(7.59e-15)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 99,134</cell><cell>100 /104,210</cell><cell>100 /74,522</cell><cell>100/72,254</cell><cell>100 /41,614</cell><cell>100/41,210</cell></row><row><cell>f 12</cell><cell>Mean(std)</cell><cell>1.70e-12(4.36e-12)</cell><cell>8.32e-12(4.05e-11)</cell><cell>8.38e-15(4.19e-14)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 112,080</cell><cell>100 /119,610</cell><cell>100 /83,602</cell><cell>100/79,404</cell><cell>100 /45,746</cell><cell>100/45,443</cell></row><row><cell>f 13</cell><cell>Mean(std)</cell><cell>2.36e-14(5.62e-14)</cell><cell>8.08e-14(4.04e-13)</cell><cell>1.48e-11(7.39e-11)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>1.05e-14(5.20e-14)</cell><cell>5.09-14(2.54e-14)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /94,862</cell><cell>100/79,754</cell><cell>100 /71,778</cell><cell>100/50,628</cell><cell>100 /53,674</cell><cell>100/53,253</cell></row><row><cell>f 14</cell><cell cols="5">Mean(std) 2SR/AVEN 4.58e-12(1.59e-12) 4.00e-12(9.09e-13) 3.42e-12(6.03e-13) 100 / 82,946 100 /106,100 100 / 65,126 100 /71,825</cell><cell>100 /43,842</cell><cell>100/41,929</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>4.31e-09(1.85e-09)</cell><cell>6.86e-10(2.28e-10)</cell><cell>3.71e-14(5.78e-15)</cell><cell>7</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>.64e-15(1.95e-15) 2.66e-15(0.0 0e + 0 0) 2.66e-15(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>SR/AVEN</cell><cell>100 /145,410</cell><cell>100/136,250</cell><cell>100 /95,798</cell><cell>100/80,416</cell><cell>100 /61,662</cell><cell>100/61,050</cell></row><row><cell>f 16</cell><cell>Mean(std)</cell><cell>1.03e-18(6.90e-19)</cell><cell>3.81e-22(6.00e-22)</cell><cell>7.53e-32(3.06e-32)</cell><cell>1</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>.57e-32(0.0 0e + 0 0) 1.57e-32(5.59e-48 ) 1.57e-32(5.59e-48)</head><label></label><figDesc>The population's diversity of ABC and DFSABC.</figDesc><table><row><cell></cell><cell></cell><cell>Fig. 6.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /77,346</cell><cell>100/63,348</cell><cell>100 /48,178</cell><cell>100/39,606</cell><cell>100 /37,458</cell><cell>100/30,637</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>4.88e-18(5.03e-18)</cell><cell>1.31e-21(1.85e-21)</cell><cell>4.83e-31(2.50e-31)</cell><cell>1.50e-33(0.0 0e + 0 0)</cell><cell>1.50e-33(0.0 0e + 0 0)</cell><cell>1.50e-33(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /86,542</cell><cell>100/71,376</cell><cell>100 /52,566</cell><cell>100/44,710</cell><cell>100 /37,958</cell><cell>100/34,762</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>2.35e-06(1.66e-06)</cell><cell>3.31e-07(2.00e-07)</cell><cell>5.22e-07(1.12e-06)</cell><cell>3.04e-10(6.03e-10)</cell><cell>9.41e-28(1.03e-27)</cell><cell>1.11e-26(1.59e-26)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>20/144,750</cell><cell>100/121,820</cell><cell>100 /53,370</cell><cell>100/53,336</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>4.46e-14(5.39e-14)</cell><cell>3.23e-14(4.99e-14)</cell><cell>1.40e-30(1.63e-30)</cell><cell>1.35e-31(0.0 0e + 0 0)</cell><cell>1.35e-31(2.23e-47)</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /90,558</cell><cell>100/82,882</cell><cell>100 /52,834</cell><cell>100/48,670</cell><cell>100 /40,162</cell><cell>100/39,208</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>2.06e-02(2.35e-02)</cell><cell>2.01e-02(2.49e-02)</cell><cell>3.62e-02(0.0 0e + 0 0)</cell><cell>4.64e-03(3.87e-03)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 / 72,774</cell><cell>100/ 73,399</cell></row><row><cell>f 21</cell><cell>Mean(std)</cell><cell>-78.332(0.0 0e + 0 0)</cell><cell>-78.332(0.0 0e + 0 0)</cell><cell>-78.332(5.02e-15)</cell><cell>-78.332(3.11e-15)</cell><cell>-78.332(0.0 0e + 0 0)</cell><cell>-78.332(2.90e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /26,594</cell><cell>100/20,125</cell><cell>100 /16,442</cell><cell>100/12,348</cell><cell>100 /9354.0</cell><cell>100/8676.2</cell></row><row><cell>f 22</cell><cell>Mean(std)</cell><cell>-29.999(6.36e-04)</cell><cell>-30.0 0 0(3.54e-04)</cell><cell>-29.997(1.72e-03)</cell><cell>-30.0 0 0(4.88e-04)</cell><cell>-30.0 0 0(0.0 0e + 0 0)</cell><cell>-30.0 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /25,458</cell><cell>100 / 18,332</cell><cell>100 /22,410</cell><cell>100/14,196</cell><cell>100 /14,534</cell><cell>100/11,604</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3</head><label>3</label><figDesc>Experimental results of ABC, DFSABC, ABC_elite and DFSABC_elite on 22 functions with 30 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>ABC</cell><cell>DFSABC</cell><cell>ABC_elite</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>1.04e-17(1.20e-17)</cell><cell>1.74e-22(1.42e-22)</cell><cell>3.33e-50(5.34e-50)</cell><cell>4.14e-82(8.76e-82)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /83,702</cell><cell>100 /68,477</cell><cell>100 /32,166</cell><cell>100/21,410</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>4.38e-10(4.72e-10)</cell><cell>5.16e-18(4.39e-18)</cell><cell>2.08e-45(4.36e-45)</cell><cell>5.37e-78(8.66e-78)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /136,290</cell><cell>100 /93,378</cell><cell>100 /45,930</cell><cell>100/28,674</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.14e-19(9.89e-20)</cell><cell>5.96e-23(8.91e-23)</cell><cell>9.21e-51(8.50e-51)</cell><cell>2.84e-83(4.66e-83)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /75,402</cell><cell>100 /63,463</cell><cell>100 /30,678</cell><cell>100/19,710</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>2.02e-31(5.30e-31)</cell><cell>2.29e-30(9.86e-30)</cell><cell>1.69e-95(5.46e-95)</cell><cell>2.41e-110(1.19e-109)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /23,578</cell><cell>100 /21,559</cell><cell>100 /10,662</cell><cell>100/7122.0</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>7.69e-11(3.04e-011)</cell><cell>4.61e-12(1.46e-12)</cell><cell>6.59e-26(3.04e-26)</cell><cell>2.06e-42(2.08e-42)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /124,870</cell><cell>100 /109,370</cell><cell>100 /54,874</cell><cell>100/33,426</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>4.39e + 0 0(1.07e + 0 0)</cell><cell>4.12e + 00(8.06e-01)</cell><cell>2.66e + 0 0(1.75e + 0 0)</cell><cell>5.08e-07(3.69e-07)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>80/104,250</cell><cell>100/32,802</cell></row><row><cell>f 7</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>30.0 0 0(0.0 0e + 0 0) -30.0 0 0(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /10,994</cell><cell>100 /25,601</cell><cell>100 /94,740</cell><cell>100/7534</cell></row><row><cell>f 8</cell><cell>Mean(std)</cell><cell>7.18e-66(5.21e-73)</cell><cell>7.18e-66(1.56e-73)</cell><cell>7.18e-66(1.20e-79)</cell><cell>7.18e-66(3.23e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /150</cell><cell>100/105</cell><cell>100 /150</cell><cell>100 /150</cell></row><row><cell>f 9</cell><cell>Mean(std)</cell><cell>6.02e-02(1.09e-02)</cell><cell>6.11e-02(1.20e-02)</cell><cell>1.90e-02(4.83e-03)</cell><cell>1.20e-02(3.80e-03)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /91,786</cell><cell>100 /76,692</cell><cell>100 /31,034</cell><cell>100/16,878</cell></row><row><cell>f 10</cell><cell>Mean(std)</cell><cell>5.45e-02(5.86e-02)</cell><cell>4.19e-02(4.08e-02 )</cell><cell>1.47e-01(5.18e-01)</cell><cell>3.45e + 00(1.45e + 01)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>88 /11,014</cell><cell>88 /11,218</cell><cell>84/78,817</cell><cell>60/58,683</cell></row><row><cell>f 11</cell><cell>Mean(std)</cell><cell>3.50e-14(1.35e-13)</cell><cell>6.11e-15(7.59e-15)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /99,134</cell><cell>100 /104,210</cell><cell>100 /41,522</cell><cell>100/27,754</cell></row><row><cell>f 12</cell><cell>Mean(std)</cell><cell>1.70e-12(4.36e-12)</cell><cell>8.32e-12(4.05e-11)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /112,080</cell><cell>100 /119,610</cell><cell>100 /44,206</cell><cell>100 / 28,602</cell></row><row><cell>f 13</cell><cell>Mean(std)</cell><cell>2.36e-14(5.62e-14)</cell><cell>8.08e-14(4.04e-13)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /94,862</cell><cell>100 /79,754</cell><cell>100 /39,826</cell><cell>100/31,066</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>4.58e-12(1.59e-12)</cell><cell>4.00e-12(9.09e-13)</cell><cell>1.16e-12(1.65e-12)</cell><cell>4.37e-13(1.09e-12)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /82,946</cell><cell>100 /106,100</cell><cell>100 /42,794</cell><cell>100/34,430</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>4.31e-09(1.85e-09)</cell><cell>6.86e-10(2.28e-10)</cell><cell>6.08e-15(7.10e-16)</cell><cell>3.80e-15(1.69e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /145,410</cell><cell>100 /136,250</cell><cell>100 /63,606</cell><cell>100/37,998</cell></row><row><cell>f 16</cell><cell>Mean(std)</cell><cell>1.03e-18(6.90e-19)</cell><cell>3.81e-22(6.00e-22)</cell><cell>1.57e-32(5.59e-48)</cell><cell>1.57e-32(5.59e-48)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /77,346</cell><cell>100 /63,348</cell><cell>100 /30,362</cell><cell>100/18,902</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>4.88e-18(5.03e-18)</cell><cell>1.31e-21(1.85e-21)</cell><cell>1.50e-33(0.0 0e + 0 0)</cell><cell>1.50e-33(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /86,542</cell><cell>100 /71,376</cell><cell>100 /32,470</cell><cell>100/20,970</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>2.35e-06(1.66e-06)</cell><cell>3.31e-07(2.00e-07)</cell><cell>8.88e-18(4.44e-17)</cell><cell>3.10e-40(1.03e-39)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /57,226</cell><cell>100/40,454</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>4.46e-14(5.39e-14)</cell><cell>3.23e-14(4.99e-14)</cell><cell>1.35e-31(2.23e-47)</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /90,558</cell><cell>100 /82,882</cell><cell>100 /33,206</cell><cell>100/24,890</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>2.06e-02(2.35e-02)</cell><cell>2.01e-02(2.49e-02)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /72,506</cell><cell>100/55,910</cell></row><row><cell>f 21</cell><cell>Mean(std)</cell><cell>-78.332(0.0 0e + 0 0)</cell><cell>-78.332(0.0 0e + 0 0)</cell><cell>-78.332(8.70e-15)</cell><cell>-78.332(5.02e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /26,594</cell><cell>100 /20,125</cell><cell>100 /11,194</cell><cell>100/6502.0</cell></row><row><cell>f 22</cell><cell cols="4">Mean(std) -SR/AVEN -29.999(6.36e-04) -30.0 0 0(3.54e-04) 100 /25,458 100 /18,332 100 /15,210</cell><cell>100/5270.0</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 5</head><label>5</label><figDesc>Comparisons of DFSABC_elite and ABC on 22test functions with 30 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>Best-so-far ABC</cell><cell>MABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>1.04e-17(1.20e-17)-</cell><cell>1.07e-30(6.09e-31)-</cell><cell>2.41e-50(3.19e-50)-</cell><cell>6.03e-17(7.53e-17)-</cell><cell>2.36e-40(1.85e-40)-</cell><cell>4.14e-82(8.76e-82)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /83,702</cell><cell>100 /53,134</cell><cell>100 /39,770</cell><cell>100 /95,594</cell><cell>100 /44,253</cell><cell>100/21,410</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>4.38e-10(4.72e-10)-</cell><cell>2.64e-24(2.48e-24)-</cell><cell>1.17e-41(2.83e-41)-</cell><cell>9.30e-11(2.52e-10)-</cell><cell>5.46e-37(4.09e-37)-</cell><cell>5.37e-78(8.66e-78)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /136,290</cell><cell>100 /81,406</cell><cell>100 /62,490</cell><cell>100 /128,730</cell><cell>100 /55,589</cell><cell>100/28,674</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.14e-19(9.89e-20)-</cell><cell>6.14e-32(4.74e-32)-</cell><cell>1.15e-51(1.38e-51)-</cell><cell>5.82e-19(6.63e-19)-</cell><cell>2.93e-41(2.35e-41)-</cell><cell>2.84e-83(4.66e-83)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /75,402</cell><cell>100 /48,446</cell><cell>100 /36,314</cell><cell>100 /87,154</cell><cell>100 /41,289</cell><cell>100/19,710</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>2.02e-31(5.30e-31)-</cell><cell>6.78e-50(2.91e-49)-</cell><cell>1.60e-60(6.69e-60)-</cell><cell>6.33e-30(2.06e-29)-</cell><cell>6.53e-84(3.26e-83)-</cell><cell>2.41e-110(1.19e-109)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /23,578</cell><cell>100 /14,890</cell><cell>100 /12,486</cell><cell>100 /22,014</cell><cell>100 /11,580</cell><cell>100/7122.0</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>7.69e-11(3.04e-11)-</cell><cell>8.30e-17(3.10e-17)-</cell><cell>1.59e-26(1.04e-26)-</cell><cell>5.08e-10(1.76e-10)-</cell><cell>1.50e-21(6.64e-22)-</cell><cell>2.06e-42(2.08e-42)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /124,870</cell><cell>10 0 /81,0 06</cell><cell>100 /56,554</cell><cell>100 /135,350</cell><cell>100 /66,670</cell><cell>100/33,426</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>4.39e + 0 0(1.07e + 0 0)-</cell><cell>2.47e-01(5.89e-02)-</cell><cell>5.83e-02(1.33e-02)-</cell><cell>1.51e + 01(1.62e + 00)-</cell><cell>1.93e + 00(1.32e + 00)-</cell><cell>5.08e-07(3.69e-07)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>100/110,270</cell><cell>100 /88,114</cell><cell>0/NA</cell><cell>32/128,640</cell><cell>100/32,802</cell></row><row><cell>f 7</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>57e-32(5.59e-48) = 1.57e-32(5.59e-48)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>/112,080</cell><cell>100 /83,602</cell><cell>100 /45,746</cell><cell>0/NA</cell><cell>100 /53,442</cell><cell>100/28,602</cell></row><row><cell>f 13</cell><cell>Mean(std)</cell><cell>2.36e-14(5.62e-14)-</cell><cell>1.48e-11(7.39e-11)-</cell><cell>1.05e-14(5.20e-14)-</cell><cell>6.00e-04(2.97e-03)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0) =</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /94,862</cell><cell>100 /71,778</cell><cell>100 /53,674</cell><cell>84/118,800</cell><cell>100 /59,057</cell><cell>100/31,066</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>4.58e-12(1.59e-12)-</cell><cell>3.42e-12(6.03e-13)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0) =</cell><cell>5.12e + 01(6.56e + 01)-</cell><cell>3.49e-12(7.28e-13)-</cell><cell>4.37e-13(1.09e-12)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /82,946</cell><cell>100 /65,126</cell><cell>100 /43,842</cell><cell>0/NA</cell><cell>100 /51,238</cell><cell>100 / 34,430</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>4.31e-09(1.85e-09)-</cell><cell>3.71e-14(5.78e-15) =</cell><cell>2.66e-15(0.0 0e + 0 0) =</cell><cell>4.44e-05(3.24e-05)-</cell><cell>7.07e-15(2.36e-15) =</cell><cell>3.80e-15(1.69e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /145,410</cell><cell>100 /95,798</cell><cell>100 /61,662</cell><cell>0/NA</cell><cell>100 /76,103</cell><cell>100 / 37,998</cell></row><row><cell>f 16</cell><cell cols="6">Mean(std) 1.SR/AVEN 1.03e-18(6.90e-19)-7.53e-32(3.06e-32) = 1.57e-32(5.59e-48 ) = 5.18e-19(8.51e-19)-100 /77,346 100 /48,178 100 /37,458 100 /85,538 100 /39,599</cell><cell>100/18,902</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>4.88e-18(5.03e-18)-</cell><cell>4.83e-31(2.50e-31)-</cell><cell>1.50e-33(0.0 0e + 0 0) =</cell><cell>2.62e-16(3.60e-16)-</cell><cell>1.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>50e-33(0.0 0e + 0 0) = 1.50e-33(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>SR/AVEN</cell><cell>100 /86,542</cell><cell>100 /52,566</cell><cell>100 /37,958</cell><cell>100 /101,900</cell><cell>100 /44,028</cell><cell>100 / 20,970</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>2.35e-06(1.66e-06)-</cell><cell>5.22e-07(1.12e-06)-</cell><cell>9.41e-28(1.03e-27)-</cell><cell>3.16e-04(3.55e-04)-</cell><cell>1.43e-21(1.75e-21)-</cell><cell>3.10e-40(1.03e-39)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>20/144,750</cell><cell>100 /53,370</cell><cell>0/NA</cell><cell>100 /71,796</cell><cell>100/40,454</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>4.46e-14(5.39e-14)-</cell><cell>1.40e-30(1.63e-30)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>3.41e-15(4.40e-15)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /90,558</cell><cell>100 /52,834</cell><cell>100 /40,162</cell><cell>10 0 /98,0 06</cell><cell>100 /42,441</cell><cell>100 / 24,890</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>2.06e-02(2.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 6</head><label>6</label><figDesc>Comparisons of DFSABC_elite and ABC variants on 22test functions with 30 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>4.21e-13(3.92e-13)-</cell><cell>3.38e-15(5.42e-15)-</cell><cell>5.85e-62(2.90e-61)-</cell><cell>2.40e-35(8.54e-35)-</cell><cell>1.14e-43(1.77e-43)-</cell><cell>4.14e-82(8.76e-82)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /96,118</cell><cell>100 /72,922</cell><cell>100 /27,982</cell><cell>100/ 50,526</cell><cell>100 /43,530</cell><cell>100/21,410</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>8.76e-08(1.53e-07)-</cell><cell>1.31e-10(2.21e-10)-</cell><cell>9.26e-60(1.41e-59)-</cell><cell>2.29e-27(9.79e-27)-</cell><cell>4.18e-30(3.33e-17)-</cell><cell>5.37e-78(8.66e-78)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>12/146,620</cell><cell>100 /124,310</cell><cell>10 0 /39,0 06</cell><cell>100 /78,802</cell><cell>100 /83,026</cell><cell>100/28,674</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>3.75e-14(1.04e-13)-</cell><cell>2.47e-16(2.43e-16)-</cell><cell>4.50e-65(5.16r-65)-</cell><cell>9.40e-37(2.54e-36)-</cell><cell>7.40e-15(3.70e-14)-</cell><cell>2.84e-83(4.66e-83)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /89,570</cell><cell>100 /63,730</cell><cell>100 /25,826</cell><cell>100/ 46,222</cell><cell>100 /38,022</cell><cell>100/19,710</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>4.09e-26(1.12e-25)-</cell><cell>2.99e-21(5.31e-21)-</cell><cell>9.57e-33(3.42e-32)-</cell><cell>4.31e-44(1.40e-43)-</cell><cell>4.96e-90(1.54e-89)-</cell><cell>2.41e-110(1.19e-109)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /27,770</cell><cell>100 /15,710</cell><cell>100 /84,180</cell><cell>100/15,818</cell><cell>100 /11,222</cell><cell>100/7122.0</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>4.26e-08(1.48e-08)-</cell><cell>1.17e-08(3.31e-09)-</cell><cell>9.45e-34(8.43e-34)-</cell><cell>7.03e-19(2.18e-18)-</cell><cell>1.61e-24(8.21e-25)-</cell><cell>2.06e-42(2.08e-42)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>36/148,340</cell><cell>100 /42,198</cell><cell>100/ 72,958</cell><cell>100 /58,046</cell><cell>100/33,426</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>1.02e + 00(5.26e-01)-</cell><cell>9.87e-02(2.30e-02)-</cell><cell>2.43e + 01(5.22e + 00)-</cell><cell>2.56e-01(9.19e-02)-</cell><cell>1.71e + 00(1.15e + 00)-</cell><cell>5.08e-07(3.69e-07)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>64/134,550</cell><cell>100 /37,742</cell><cell>0/NA</cell><cell>100/ 111,070</cell><cell>32/122,490</cell><cell>100/32,802</cell></row><row><cell>f</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>50e-33(0.0 0e + 0 0) = 1.50e-33(0.0 0e + 0 0) =</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>/117,300</cell><cell>100 /95,710</cell><cell>96/35,654</cell><cell>100/ 69,514</cell><cell>100 /42,942</cell><cell>100/31,066</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>1.04e-11(6.27e-12)-</cell><cell>4.16e-10(1.05e-09)-</cell><cell>3.35e-12(8.60e-13)-</cell><cell>1.60e-12(3.45e-13)-</cell><cell>2.18e-13(7.80e-13) =</cell><cell>4.37e-13(1.09e-12)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /90,270</cell><cell>100 /116,770</cell><cell>100 /38,454</cell><cell>100/ 52,906</cell><cell>100 /50,418</cell><cell>100 / 34,430</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>3.83e-07(1.85e-07)-</cell><cell>1.67e-06(8.22e-07)-</cell><cell>2.73e-05(1.36e-04)-</cell><cell>6.50e-15(2.27e-15) =</cell><cell>5.65e-15(1.33e-15) =</cell><cell>3.80e-15(1.69e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>96/49,888</cell><cell>100/ 80,074</cell><cell>100 /65,210</cell><cell>100 / 37,998</cell></row><row><cell>f 16</cell><cell>Mean(std)</cell><cell>5.56e-14(6.04e-14)-</cell><cell>2.31e-14(9.81e-14)-</cell><cell>1.57e-32(5.59e-48)-</cell><cell>1.57e-32(5.59e-48) =</cell><cell>8.98e-14(4.49e-13)-</cell><cell>1.57e-32(5.59e-48)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /89,470</cell><cell>100 /61,070</cell><cell>100 /24,862</cell><cell>100/ 46,142</cell><cell>100 /40,542</cell><cell>100 / 18,902</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>1.94e-13(2.27e-13)-</cell><cell>1.72e-15(1.86e-15)-</cell><cell cols="3">1.1.50e-33(8.28e-33) =</cell><cell>1.50e-33(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /101,110</cell><cell>100 /75,426</cell><cell>100 /22,540</cell><cell>100/ 48,154</cell><cell>100/40,810</cell><cell>100 / 20,970</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>7.38e-06(6.48e-06)-</cell><cell>8.87e-06(2.10e-05)-</cell><cell>6.00e-17(3.41e-16)-</cell><cell>6.26e-18(2.91e-17)-</cell><cell>3.33e-17(1.28e-16)-</cell><cell>3.10e-40(1.03e-39)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /42,578</cell><cell>100 /80,966</cell><cell>100 /55,262</cell><cell>100/40,454</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>9.22e-12(1.02e-11)-</cell><cell>2.40e-09(3.34e-09)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /103,590</cell><cell>96/125,240</cell><cell>100 /26,762</cell><cell>100 /48,330</cell><cell>100 /36,362</cell><cell>100 / 24,890</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>3.32e-02(3.58e-02)-</cell><cell>1.10e-02(1.03e-02)-</cell><cell>6.03e-03(1.30e-02)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0) =</cell><cell>2.63e-05(1.32e-04)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>64/58,950</cell><cell>100 /93,050</cell><cell>96/80,696</cell><cell>100 / 55,910</cell></row><row><cell>f 21</cell><cell>Mean(std)</cell><cell>-78.332(2.0e-15) =</cell><cell>-78.332(4.10e-15) =</cell><cell>-78.332(2.90e-15) =</cell><cell>-78.332(1.05e-14) =</cell><cell>-78.332(1.23e-14) =</cell><cell>-78.332(5.02e-15)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /29,766</cell><cell>100 /6738</cell><cell>100 /8538.0</cell><cell>100/ 13,038</cell><cell>100 /10,992</cell><cell>100 / 6502.0</cell></row><row><cell>f 22</cell><cell>Mean(std)</cell><cell>-29.999(7.48e-04)-</cell><cell>-30.0 0 0(1.03e-05) =</cell><cell>-30.0 0 0(1.51e-06) =</cell><cell>-30.0 0 0(3.82e-12) =</cell><cell>-30.0 0 0(1.92e-06) =</cell><cell>-30.0 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /25,926</cell><cell>100 / 2070</cell><cell>100/ 12,602</cell><cell>100 /18,726</cell><cell>100 /14,822</cell><cell>100 /5270.0</cell></row><row><cell>+ / = /-</cell><cell></cell><cell>1/3/18</cell><cell>1/4/17</cell><cell>0/8/14</cell><cell>1/12/9</cell><cell>1/12/9</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 7</head><label>7</label><figDesc>Ranking of all ABCs based on the Friedman test for all functions with 30 D.</figDesc><table><row><cell>Ranking</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>BSFABC</cell><cell>MABC</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>8 .16</cell><cell>7</cell><cell>3</cell><cell>8 .84</cell><cell>5 .12</cell><cell>11</cell><cell>10</cell><cell>2</cell><cell>5 .88</cell><cell>4</cell><cell>1</cell></row><row><cell>f 2</cell><cell>9 .68</cell><cell>7</cell><cell>3</cell><cell>8 .36</cell><cell>4</cell><cell>11</cell><cell>8 .96</cell><cell>2</cell><cell>5 .76</cell><cell>5 .24</cell><cell>1</cell></row><row><cell>f 3</cell><cell>8 .08</cell><cell>6 .96</cell><cell>3</cell><cell>8 .84</cell><cell>5 .12</cell><cell>10 .96</cell><cell>9 .39</cell><cell>2</cell><cell>5 .80</cell><cell>4 .28</cell><cell>1</cell></row><row><cell>f 4</cell><cell>8 .56</cell><cell>5 .20</cell><cell>4</cell><cell>8 .40</cell><cell>2 .84</cell><cell>9 .96</cell><cell>11</cell><cell>7 .08</cell><cell>5 .08</cell><cell>2 .16</cell><cell>1</cell></row><row><cell>f 5</cell><cell>8</cell><cell>7</cell><cell>3</cell><cell>9</cell><cell>5 .08</cell><cell>11</cell><cell>10</cell><cell>2</cell><cell>5 .92</cell><cell>4</cell><cell>1</cell></row><row><cell>f 6</cell><cell>8 .76</cell><cell>4 .60</cell><cell>2 .04</cell><cell>10 .08</cell><cell>7 .24</cell><cell>6 .68</cell><cell>2 .96</cell><cell>10 .92</cell><cell>4 .44</cell><cell>7 .28</cell><cell>1</cell></row><row><cell>f 7</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell></row><row><cell>f 8</cell><cell>7</cell><cell>6</cell><cell>1 .96</cell><cell>9</cell><cell>2 .66</cell><cell>10</cell><cell>8</cell><cell>11</cell><cell>3 .86</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head>Table 8</head><label>8</label><figDesc>Comparisons of DFSABC_elite and ABC variants on 22test functions with 50 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>Best-so-far ABC</cell><cell>MABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>4.33e-17(3.19e-17)-</cell><cell>1.86e-29(1.33e-29)-</cell><cell>9.73e-50(1.24e-49)-</cell><cell>1.09e-15(9.98e-16)-</cell><cell>3.04e-38(1.71e-38)-</cell><cell>1.58e-81(3.87e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /143,530</cell><cell>100 /90,486</cell><cell>100 /68,574</cell><cell>100 /174,010</cell><cell>100 /79,280</cell><cell>100 / 36,598</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>2.43e-09(2.27e-09)-</cell><cell>3.88e-23(2.65e-23)-</cell><cell>2.76e-41(4.77e-41)-</cell><cell>2.59e-09(4.88e-09)-</cell><cell>5.55e-35(3.34e-35)-</cell><cell>1.53e-77(4.78e-77)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /233,158</cell><cell>100 /137,970</cell><cell>100 /107,470</cell><cell>92/230,740</cell><cell>100 /99,396</cell><cell>100 / 49,094</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>2.91e-18(2.97e-18))-</cell><cell>2.30e-30(1.62e-30)-</cell><cell>8.09e-51(1.31e-50)-</cell><cell>5.99e-17(4.15e-17)-</cell><cell>7.40e-39(6.61e-39)-</cell><cell>1.77e-82(1.82e-82)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /132,410</cell><cell>100 /86,210</cell><cell>100 /63,834</cell><cell>100 /164,480</cell><cell>100 /75,810</cell><cell>100 / 34,810</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>2.02e-31(7.03e-31)-</cell><cell>2.26e-51(5.03e-51)-</cell><cell>4.05e-61(9.86e-61)-</cell><cell>1.30e-29(4.18e-29)-</cell><cell>2.41e-86(1.20e-85)-</cell><cell>4.01e-109(2.00e-108)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /38,254</cell><cell>100 /24,878</cell><cell>100 /20,046</cell><cell>100 /34,446</cell><cell>100 /18,891</cell><cell>100 / 11,858</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>2.40e-10(6.62e-11)-</cell><cell>4.58e-16(9.21e-17)-</cell><cell>3.87e-26(2.31e-26)-</cell><cell>3.71e-09(1.35e-09)-</cell><cell>2.14e-20(5.65e-21)-</cell><cell>3.77e-42(2.23e-42)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /217,854</cell><cell>100 /143,970</cell><cell>100 /97,134</cell><cell>100 /241,910</cell><cell>100 /118,380</cell><cell>100 / 57,146</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>1.21e + 01(1.67e + 00)-</cell><cell>2.76e + 00(4.58e-01)-</cell><cell>5.42e-01(1.09e-01)-</cell><cell>2.68e + 01(1.83e + 00)-</cell><cell>1.40e + 01(4.25e + 00)-</cell><cell>1.40e-04(4.52e-05)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /216,770</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 / 81,566</cell></row><row><cell>f</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head>42e-33(1.40e-48) = 9.42e-33(1.40e-48)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>/153,382</cell><cell>100 /103,870</cell><cell>100 /76,110</cell><cell>96/192,500</cell><cell>100 /91,990</cell><cell>100 / 46,106</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>1.63e-11(4.35e-12)-</cell><cell>9.90e-12(2.23e-12)-</cell><cell>3.64e-12(2.31e-26) =</cell><cell>2.07e + 02(1.00e + 02)-</cell><cell>9.60e-12(2.75e-12)-</cell><cell>3.64e-12(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /138,630</cell><cell>100 /143,970</cell><cell>100 /97,134</cell><cell>0/NA</cell><cell>100 /90,584</cell><cell>100 / 61,926</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>6.69e-09(3.14e-09)-</cell><cell>9.45e-14(1.45e-14)-</cell><cell>5.93e-15(9.84e-16) =</cell><cell>3.78e-04(2.22e-04)-</cell><cell>1.36e-14(2.27e-15)-</cell><cell>6.22e-15(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>80/244,100</cell><cell>100 /166,390</cell><cell>100 /103,740</cell><cell>0/NA</cell><cell>100 /133,570</cell><cell>100 / 63,634</cell></row><row><cell>f 16</cell><cell cols="6">Mean(std) 9.SR/AVEN 3.05e-18(1.98e-18)-6.26e-31(5.56e-31)-9.42e-33(1.40e-48) = 8.05e-18(8.10e-18)-100 /131,438 100 /81,014 100 /62,990 100 /155,360 100 /69,539</cell><cell>100/31,810</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>3.55e-17(2.90e-17)-</cell><cell>9.02e-30(5.39e-30)-</cell><cell>1.50e-33(3.88e-33) =</cell><cell>8.96e-15(7.55e-15)-</cell><cell>1.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18"><head>50e-33(0.0 0e + 0 0) = 1.50e-33(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>SR/AVEN</cell><cell>100 /146,466</cell><cell>100 /91,138</cell><cell>100 /64,982</cell><cell>100 /187,310</cell><cell>100 /79,398</cell><cell>100 / 36,138</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>1.16e-05(1.11e-05)-</cell><cell>8.97e-06(1.90e-05)-</cell><cell>8.88e-18(4.44e-17) +</cell><cell>6.68e-03(5.18e-03)-</cell><cell>4.45e-17(2.22e-16) =</cell><cell>6.66e-17(2.48e-16)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>80/227,800</cell><cell>100 /91,758</cell><cell>0/NA</cell><cell>10 0 /130,70 0</cell><cell>100 / 73,294</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>6.98e-14(1.28e-13)-</cell><cell>1.15e-29(1.34e-29)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.50e-14(2.26e-14)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /152,594</cell><cell>100 /91,802</cell><cell>100 /66,654</cell><cell>100 /171,620</cell><cell>100 /74,515</cell><cell>10 0 / 41,0 02</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>1.18e-01(7.56e-02)-</cell><cell>1.37e-01(6.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19"><head>Table 9</head><label>9</label><figDesc>Comparisons of DFSABC_elite and ABC variants on 22test functions with 50 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>1.36e-12(1.10e-12)-</cell><cell>3.63e-15(3.89e-15)-</cell><cell>1.14e-61(2.30e-61)-</cell><cell>6.68e-23(3.16e-32)-</cell><cell>1.01e-14(5.07e-14)-</cell><cell>1.58e-81(3.87e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /162,740</cell><cell>100 /127,590</cell><cell>100 /48,794</cell><cell>100/ 89,554</cell><cell>100/76,430</cell><cell>100 / 36,598</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>2.44e-07(6.24e-07)-</cell><cell>2.35e-10(2.65e-10)-</cell><cell>1.79e-57(2.28e-57)-</cell><cell>1.11e-23(4.17e-23)-</cell><cell>3.14e-29(4.95e-29)-</cell><cell>1.53e-77(4.78e-77)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>80/245,800</cell><cell>100 /212,240</cell><cell>100 /67,686</cell><cell>100 /133,690</cell><cell>100 /143,790</cell><cell>100 / 49,094</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.99e-13(1.90e-13)-</cell><cell>7.44e-16(6.78e-16)-</cell><cell>4.03e-62(6.41e-62)-</cell><cell>1.77e-33(7.88e-33)-</cell><cell>1.23e-13(6.16e-13)-</cell><cell>1.77e-82(1.82e-82)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /155,990</cell><cell>100 /114,050</cell><cell>100 /46,114</cell><cell>100/83,378</cell><cell>100 /68,830</cell><cell>100 / 34,810</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>2.85e-26(6.8e-26)-</cell><cell>2.42e-21(1.05e-20)-</cell><cell>1.74e-32(4.49e-32)-</cell><cell>7.21e-41(3.56e-40)-</cell><cell>2.96e-92(0.0 0e + 0 0)-</cell><cell>4.01e-109(2.00e-108)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /45,946</cell><cell>100 /25,338</cell><cell>100 /14,306</cell><cell>100 /27,142</cell><cell>100 /18,226</cell><cell>100 / 11,858</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>1.13e-07(.53e-08)-</cell><cell>1.82e-08(4.47e-9)-</cell><cell>1.76e-32(6.42e-33)-</cell><cell>2.89e-18(6.52e-18)-</cell><cell>2.18e-06(1.06e-05)-</cell><cell>3.77e-42(2.23e-42)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /74,342</cell><cell>100/ 126,290</cell><cell>92/104,0 0 0</cell><cell>100 / 57,146</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>4.30e + 0 0(1.16e + 0 0)-</cell><cell>2.32e-01(3.14e-02)-</cell><cell>3.43e + 01(4.95e + 00)-</cell><cell>2.06e + 00(3.77e-01)-</cell><cell>7.20e + 0 0(2.78e + 0 0)-</cell><cell>1.40e-04(4.52e-05)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>100 /95,054</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 / 81,566</cell></row><row><cell>f 7</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_23"><head>Table 10</head><label>10</label><figDesc>Ranking of all ABCs based on the Friedman test for all functions with 50 D. that multiple offspring generation strategies are used in CoDE and jDEscop. DFSABC_elite performs the best on f 5 and CMA-ES performs best on f 6 . For step function f 7 and exponential function f 8 , all the algorithms show similar performance except for CMA-ES. Regard to noisy quartic functions f 9 , JADE and CoDE show good performance, while CMAES significantly outperforms other algorithms on Rosenbrock functions f 10 . With respect to multimodal functions f 11 -f 22 , DFS-ABC_elite is significantly better than other compared algorithms on most cases, and no one can outperform DFSABC_elite in any case. In brief, DFSABC_elite outperforms CoDE, JADE, SaDE, jDEscop, CLPSO, CMA-ES and AABCLS on 12, 12, 18, 16, 18, 21 and 11 out of 22 functions respectively. On the contrary, DFSABC_elite is only beaten by CoDE, JADE, jDEscop, CMA-ES and AABCLS on 2, 5, 1, 2 and 1 functions. Moreover, SaDE and CLPSO are unable to surpass DFSABC_elite on any test function.</figDesc><table><row><cell>Ranking</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>BSFABC</cell><cell>MABC</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>7 .96</cell><cell>6 .96</cell><cell>3</cell><cell>9 .2</cell><cell>5 .12</cell><cell>11</cell><cell>9 .72</cell><cell>2</cell><cell>5 .80</cell><cell>4 .24</cell><cell>1</cell></row><row><cell>f 2</cell><cell>9 .64</cell><cell>6 .92</cell><cell>3</cell><cell>9 .04</cell><cell>11</cell><cell>8 .32</cell><cell>8 .32</cell><cell>2</cell><cell>5 .56</cell><cell>5 .48</cell><cell>1</cell></row><row><cell>f 3</cell><cell>7 .96</cell><cell>6 .96</cell><cell>3</cell><cell>8 .96</cell><cell>5 .24</cell><cell>10 .96</cell><cell>9 .96</cell><cell>2</cell><cell>2 .56</cell><cell>4 .28</cell><cell>1</cell></row><row><cell>f 4</cell><cell>8 .28</cell><cell>5 .24</cell><cell>4</cell><cell>8 .36</cell><cell>2 .96</cell><cell>10</cell><cell>11</cell><cell>7 .36</cell><cell>5 .76</cell><cell>2 .04</cell><cell>1</cell></row><row><cell>f 5</cell><cell>7 .92</cell><cell>6 .92</cell><cell>3</cell><cell>8 .92</cell><cell>5 .08</cell><cell>10 .92</cell><cell>9 .92</cell><cell>2</cell><cell>5 .76</cell><cell>4 .56</cell><cell>1</cell></row><row><cell>f 6</cell><cell>8 .36</cell><cell>5</cell><cell>3</cell><cell>10 .08</cell><cell>8 .56</cell><cell>6 .08</cell><cell>2</cell><cell>10 .92</cell><cell>4 .12</cell><cell>6 .88</cell><cell>1</cell></row><row><cell>f 7</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell><cell>6</cell></row><row><cell>f 8</cell><cell>7</cell><cell>5 .96</cell><cell>1 .94</cell><cell>9</cell><cell>2 .94</cell><cell>10</cell><cell>8</cell><cell>11</cell><cell>3 .94</cell><cell>3 .96</cell><cell>1 .26</cell></row><row><cell cols="5">f 9 10 .96 reason may be 9 .16 6 .88 3 .64</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_24"><head>Table 11</head><label>11</label><figDesc>Comparisons of DFSABC_elite and ABC variants on 22test functions with 100 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>Best-so-far ABC</cell><cell>MABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>4.78e-16(4.79e-16)-</cell><cell>2.80e-28(1.17e-28)-</cell><cell>9.73e-4 9(1.05e-4 8)-</cell><cell>4.62e-14(4.39e-14)-</cell><cell>2.50e-36(1.14e-36)-</cell><cell>9.57e-81(9.73e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /288,310</cell><cell>100 /190,830</cell><cell>100 /144,110</cell><cell>100 /380,358</cell><cell>100 /170,170</cell><cell>100 / 76,302</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>5.30e-09(4.89e-09)-</cell><cell>9.41e-22(7.14e-22)-</cell><cell>5.41e-40(8.05e-40)-</cell><cell>6.48e-08(8.35e-08)-</cell><cell>5.49e-33(2.04e-33)-</cell><cell>5.50e-77(6.42e-77)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>88/472,080</cell><cell>100 /287,170</cell><cell>100 /221,250</cell><cell>32/476,950</cell><cell>100 /213,710</cell><cell>100 / 102,360</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.03e-16(8.69e-17)-</cell><cell>1.08e-28(4.72e-29)-</cell><cell>2.83e-4 9(2.58e-4 9)-</cell><cell>1.54e-14(1.10e-14)-</cell><cell>1.19e-36(6.34e-37)-</cell><cell>3.90e-81(8.94e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /283,630</cell><cell>100 /185,010</cell><cell>100 /138,830</cell><cell>100 /375,158</cell><cell>100 /166,150</cell><cell>100 / 74,462</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>1.17e-31(4.89e-31)-</cell><cell>2.77e-50(1.12e-49)-</cell><cell>2.01e-60(7.13e-60)-</cell><cell>2.68e-30(7.24e-30)-</cell><cell>4.69e-88(2.07e-87)-</cell><cell>2.31e-109(7.26e-109)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /76,902</cell><cell>100 /48,938</cell><cell>100 /40,742</cell><cell>100 /71,542</cell><cell>100 /38,724</cell><cell>100 / 23,382</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>1.27e-09(4.11e-10)-</cell><cell>3.00e-15(6.55e-16)-</cell><cell>1.25e-25(4.65e-26)-</cell><cell>4.22e-08(8.44e-09)-</cell><cell>3.08e-19(7.21e-20)-</cell><cell>2.13e-41(2.55e-41)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /464,180</cell><cell>100 /306,110</cell><cell>100 /203,260</cell><cell>0/NA</cell><cell>100 /254,760</cell><cell>100/119,260</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>2.85e + 01(1.31e + 00)-</cell><cell>1.72e + 01(1.34e + 00)-</cell><cell>3.71e + 00(3.41e-01)-</cell><cell>4.12e + 01(1.99e + 00)-</cell><cell>3.88e + 01(3.70e + 00)-</cell><cell>3.90e-02(1.50e-02)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100/286,090</cell></row><row><cell>f</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_26"><head>71e-33(6.98e-49) = 4.71e-33(6.98e-49)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>/296,480</cell><cell>100 /201,490</cell><cell>100 /149,560</cell><cell>100 /389,274</cell><cell>100 /179,590</cell><cell>100/88,886</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>5.79e-11(7.42e-12)-</cell><cell>3.67e-11(1.46e-12) =</cell><cell>7.28e-12(0.0 0e + 0 0) +</cell><cell>7.42e + 02(9.23e + 01)-</cell><cell>3.58e-11(2.91e-12) =</cell><cell>2.18e-11(3.52e-17)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /317,040</cell><cell>100 /246,620</cell><cell>100 /169,740</cell><cell>0/NA</cell><cell>100 /195,180</cell><cell>100/141,040</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>1.42e-08(4.33e-09)-</cell><cell>3.34e-13(4.87e-14)-</cell><cell>1.33e-14(0.0 0e + 0 0) =</cell><cell>2.57e-03(1.42e-03)-</cell><cell>2.88e-14(2.02e-15) =</cell><cell>1.30e-14(9.84e-16)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>16/497,580</cell><cell>100 /351,020</cell><cell>100 /210,690</cell><cell>0/NA</cell><cell>100 /282,280</cell><cell>100/129,850</cell></row><row><cell>f 16</cell><cell cols="6">Mean(std) 4.SR/AVEN 1.48e-17(1.08e-17)-6.80e-30(3.09e-30)-4.71e-33(6.98e-49) = 5.59e-17(5.20e-17)-100 /249,150 100 /163,190 100 /129,490 100 /324,502 100 /146,560</cell><cell>100/63,918</cell></row><row><cell>f 17</cell><cell>Mean(std)</cell><cell>3.27e-16(4.05e-16)-</cell><cell>1.54e-28(8.05e-29)-</cell><cell>1.50e-33(0.0 0e + 0 0) =</cell><cell>6.62e-13(3.86e-13)-</cell><cell>1.</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_27"><head>50e-33(0.0 0e + 0 0) = 1.50e-33(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>SR/AVEN</cell><cell>100 /302,550</cell><cell>100 /191,490</cell><cell>100 /136,440</cell><cell>100 /415,338</cell><cell>100 /170,220</cell><cell>100/75,962</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>3.96e-04(4.66e-04)-</cell><cell>9.26e-05(7.96e-05)-</cell><cell>1.05e-26(6.96e-27) +</cell><cell>5.80e-02(2.09e-02)-</cell><cell>3.90e-18(3.06e-18) +</cell><cell>2.38e-16(3.55e-16)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /193,470</cell><cell>0/NA</cell><cell>100 /292,290</cell><cell>100 / 155,110</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>4.47e-14(5.35e-14)-</cell><cell>6.88e-29(4.80e-29)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>8.69e-14(1.10e-13)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /305,340</cell><cell>100 /189,960</cell><cell>100 /138,140</cell><cell>100 /230,486</cell><cell>100 /158,590</cell><cell>100 / 78,810</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>4.54e-01(1.24e-01)-</cell><cell>2.82e-01(2.39e-01)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0) =</cell><cell>1.43e + 00(1.68e-01)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0) =</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /274,330</cell><cell>0/NA</cell><cell>100 /367,110</cell><cell>100 /214,830</cell></row><row><cell>f 21</cell><cell>Mean(std)</cell><cell>-78.332(2.23e-14) =</cell><cell>-78.332(1.36e-14) =</cell><cell>-78.332(0.0 0e + 0 0) =</cell><cell>-78.332(1.02e-08) =</cell><cell>-78.332(7.11e-15) =</cell><cell>-78.332(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /114,880</cell><cell>100 /69,386</cell><cell>100 /34,714</cell><cell>100 /389,274</cell><cell>100 /47,719</cell><cell>100 /27,598</cell></row><row><cell>f 22</cell><cell>Mean(std)</cell><cell>-99.970(5.00e-03)-</cell><cell>-99.951(1.15e-02)-</cell><cell>-10 0.0 0(8.56e-06) =</cell><cell>-99.963(9.51e-03)-</cell><cell>-10 0.0 0(5.80e-05) =</cell><cell>-10 0.0 0(4.52e-07)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /160,730</cell><cell>100 /153,310</cell><cell>100 /87,726</cell><cell>100 /213,086</cell><cell>100 /121,860</cell><cell>10 0 / 32,0 06</cell></row><row><cell>+ / = /-</cell><cell></cell><cell>1/3/18</cell><cell>0/7/15</cell><cell>3/11/8</cell><cell>0/3/19</cell><cell>1/14/7</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_28"><head>Table 12</head><label>12</label><figDesc>Comparisons of DFSABC_elite and ABC variants on 22test functions with 100 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>Mean(std)</cell><cell>5.02e-12(3.49e-12)-</cell><cell>8.08e-15(4.44e-15)-</cell><cell>1.83e-59(1.99e-59)-</cell><cell>3.84e-31(1.39e-30)-</cell><cell>2.59e-13(1.30e-12)-</cell><cell>9.57e-81(9.73e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /330,150</cell><cell>100 /267,510</cell><cell>100 /103,410</cell><cell>100/ 197,060</cell><cell>100 /158,450</cell><cell>100 / 76,302</cell></row><row><cell>f 2</cell><cell>Mean(std)</cell><cell>1.41e-07(1.70e-07)-</cell><cell>4.15e-10(4.20e-10)-</cell><cell>5.92e-36(2.96e-35)-</cell><cell>2.42e-23(8.37e-23)-</cell><cell>2.51e-14(1.25e-13)-</cell><cell>5.50e-77(6.42e-77)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>100 /447,420</cell><cell>100 /142,420</cell><cell>100 /28,672</cell><cell>100 /301,710</cell><cell>100 / 102,360</cell></row><row><cell>f 3</cell><cell>Mean(std)</cell><cell>1.38e-12(9.92e-13)-</cell><cell>3.17e-15(1.98e-15)-</cell><cell>8.14e-60(7.86e-60)-</cell><cell>9.03e-29(4.51e-28)-</cell><cell>1.38e-14(4.52e-14)-</cell><cell>3.90e-81(8.94e-81)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /312,670</cell><cell>100 /255,160</cell><cell>100 /101,150</cell><cell>100/ 185,670</cell><cell>100 /150,390</cell><cell>100 / 74,462</cell></row><row><cell>f 4</cell><cell>Mean(std)</cell><cell>9.52e-26(3.55e-25)-</cell><cell>1.63e-21(3.83e-21)-</cell><cell>2.39e-31(1.13e-30)-</cell><cell>4.81e-47(1.72e-46)-</cell><cell>2.44e-91(9.04e-91)-</cell><cell>2.31e-109(7.26e-109)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /92,546</cell><cell>100 /44,502</cell><cell>100 /29,382</cell><cell>100 /53,354</cell><cell>100 /37,402</cell><cell>100 / 23,382</cell></row><row><cell>f 5</cell><cell>Mean(std)</cell><cell>5.21e-07(1.40e-07)-</cell><cell>4.26e-08(7.69e-09)-</cell><cell>3.11e-31(1.02e-31)-</cell><cell>2.26e-16(4.87e-16)-</cell><cell>3.09e-07(1.54e-06)-</cell><cell>2.13e-41(2.55e-41)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /156,610</cell><cell>100/ 274,820</cell><cell>96/212,680</cell><cell>100/119,260</cell></row><row><cell>f 6</cell><cell>Mean(std)</cell><cell>9.91e + 00(1.98e-13)-</cell><cell>6.50e-01(9.51e-02)-</cell><cell>4.90e + 01(5.45e + 00)-</cell><cell>1.72e + 01(1.43e + 00)-</cell><cell>1.80e + 01(4.07e + 00)-</cell><cell>3.90e-02(1.50e-02)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>100/384,190</cell><cell>0/NA</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100/286,090</cell></row><row><cell>f</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_30"><head>50e-33(0.0 0e + 0 0) = 1.50e-33(0.0 0e + 0 0)</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>/359,090</cell><cell>100 /304,690</cell><cell>10 0 /141,40 0</cell><cell>100 /206,570</cell><cell>100 /140,960</cell><cell>100 / 88,886</cell></row><row><cell>f 14</cell><cell>Mean(std)</cell><cell>6.17e-11(7.61e-12) =</cell><cell>1.61e-09(6.38e-09)-</cell><cell>3.79e + 01(6.59e + 01)-</cell><cell>2.82e-11(7.07e-12) =</cell><cell>2.27e-11(3.20e-12) =</cell><cell>2.18e-11(3.52e-17)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /336,050</cell><cell>96/402,200</cell><cell>72/153,470</cell><cell>100/ 192,540</cell><cell>100 /231,850</cell><cell>100/141,040</cell></row><row><cell>f 15</cell><cell>Mean(std)</cell><cell>1.43e-06(5.22e-07)-</cell><cell>2.34e-06(1.01e-06)-</cell><cell>2.56e-10(1.28e-09)-</cell><cell>3.58e-14(1.03e-14) =</cell><cell>2.09e-14(2.77e-15) =</cell><cell>1.30e-14(9.84e-16)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>100 /188,040</cell><cell>100 /282,110</cell><cell>100 /240,070</cell><cell>100/129,850</cell></row><row><cell>f 16</cell><cell>Mean(std)</cell><cell>1.98e-13(1.31e-13)-</cell><cell>6.62e-16(1.04e-15)-</cell><cell>4.71e-33(6.98e-49) =</cell><cell>6.29e-32(2.05e-31)-</cell><cell>7.89e-15(3.89e-14)-</cell><cell>4.71e-33(6.98e-49)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /268,100</cell><cell>10 0 /198,20 0</cell><cell>100 /89,398</cell><cell>100 /171,940</cell><cell>100 /143,220</cell><cell>100/63,918</cell></row><row><cell>f 17</cell><cell cols="6">Mean(std) 1.SR/AVEN 2.55e-12(1.77e-12)-9.56e-15(8.32e-15)-1.50e-33(0.0 0e + 0 0) = 7.68e-32(3.58e-31)-100 /342,760 10 0 /279,0 0 0 100 /103,640 100 /187,960 100 /141,510</cell><cell>100/75,962</cell></row><row><cell>f 18</cell><cell>Mean(std)</cell><cell>7.62e-04(9.02e-04)-</cell><cell>4.17e-05(6.72e-05)-</cell><cell>1.71e-16(4.37e-16) =</cell><cell>1.32e-13(5.33e-13)-</cell><cell>1.09e-16(2.32e-16) =</cell><cell>2.38e-16(3.55e-16)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>10 0 /163,50 0</cell><cell>100 /320,760</cell><cell>100 /212,810</cell><cell>100 / 155,110</cell></row><row><cell>f 19</cell><cell>Mean(std)</cell><cell>2.51e-11(3.27e-11)-</cell><cell>2.23e-09(3.04e-09)-</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47) =</cell><cell>1.35e-31(2.23e-47)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>10 0/364,30 0</cell><cell>96/412,180</cell><cell>100 /99,222</cell><cell>100 /169,640</cell><cell>100 /131,170</cell><cell>100 / 78,810</cell></row><row><cell>f 20</cell><cell>Mean(std)</cell><cell>4.64e-01(1.71e-01)-</cell><cell>5.25e-02(3.04e-02)-</cell><cell>1.14e-02(2.67e-02)-</cell><cell>1.36e-14(6.82e-14)-</cell><cell>1.80e-04(8.90e-04)-</cell><cell>0.0 0e + 0 0(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>0/NA</cell><cell>0/NA</cell><cell>40/261,830</cell><cell>100 /348,830</cell><cell>92/334,880</cell><cell>100 /214,830</cell></row><row><cell>f 21</cell><cell>Mean(std)</cell><cell>78.332(1.88e-14) =</cell><cell>-78.332(4.07e-14) =</cell><cell>-78.332(2.15e-14) =</cell><cell>-78.332(2.90e-15) =</cell><cell>-78.332(0.0 0e + 0 0) =</cell><cell>-78.332(0.0 0e + 0 0)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /126,440</cell><cell>100 /27,698</cell><cell>100 /33,610</cell><cell>100/49,382</cell><cell>100 /44,382</cell><cell>100 /27,598</cell></row><row><cell>f 22</cell><cell>Mean(std)</cell><cell>-99.965(5.92e-03)-</cell><cell>-10 0.0 0 0(1.08e-04) =</cell><cell>-10 0.0 0(6.91e-05) =</cell><cell>-10 0.0 0(2.48e-04) =</cell><cell>-10 0.0 0 0(4.96e-06) =</cell><cell>-10 0.0 0(4.52e-07)</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /163,890</cell><cell>100 /10,270</cell><cell>100 /80,098</cell><cell>100 /119,990</cell><cell>100 /91,062</cell><cell>10 0 / 32,0 06</cell></row><row><cell>+ / = /-</cell><cell></cell><cell>1/4/17</cell><cell>1/5/16</cell><cell>0/9/13</cell><cell>1/9/12</cell><cell>1/11/10</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_31"><head>Table 13</head><label>13</label><figDesc>Ranking of all ABCs based on the Friedman test for all functions with 100 D.</figDesc><table><row><cell>Ranking</cell><cell>ABC</cell><cell>GABC</cell><cell>CABC</cell><cell>BSFABC</cell><cell>MABC</cell><cell>dABC</cell><cell>qABC</cell><cell>EABC</cell><cell>ABCVSS</cell><cell>BABC</cell><cell>DFSABC_elite</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_32"><head>Table 15</head><label>15</label><figDesc>Ranking of non-ABCs and AABCLS based on the Friedman test for all functions with 50 D.</figDesc><table><row><cell>rank</cell><cell>CoDE</cell><cell>JADE</cell><cell>SaDE</cell><cell>jDEscop</cell><cell>CLPSO</cell><cell>CMAES</cell><cell>AABCLS</cell><cell>DFSABC_elite</cell><cell>rank</cell><cell>CoDE</cell><cell>JADE</cell><cell>SaDE</cell><cell>jDEscop</cell><cell>CLPSO</cell><cell>CMAES</cell><cell>AABCLS</cell><cell>DFSABC_elite</cell></row><row><cell>f 1</cell><cell>4 .96</cell><cell>1</cell><cell>3</cell><cell>4 .04</cell><cell>8</cell><cell>7</cell><cell>6</cell><cell>2</cell><cell>f 12</cell><cell>7</cell><cell>4 .44</cell><cell>3 .42</cell><cell>3 .74</cell><cell>5 .44</cell><cell>8</cell><cell>2 .16</cell><cell>1 .80</cell></row><row><cell>f 2</cell><cell>4 .96</cell><cell>1 .04</cell><cell>3</cell><cell>4 .04</cell><cell>8</cell><cell>7</cell><cell>6</cell><cell>1 .96</cell><cell>f 13</cell><cell>3 .54</cell><cell>3 .76</cell><cell>5</cell><cell>5 .20</cell><cell>7 .40</cell><cell>4 .22</cell><cell>3 .50</cell><cell>3 .38</cell></row><row><cell>f 3</cell><cell>5</cell><cell>1</cell><cell>3</cell><cell>4</cell><cell>8</cell><cell>7</cell><cell>6</cell><cell>2</cell><cell>f 14</cell><cell>2 .20</cell><cell>4 .38</cell><cell>1 .98</cell><cell>5 .94</cell><cell>5 .68</cell><cell>8</cell><cell>5 .84</cell><cell>1 .98</cell></row><row><cell>f 4</cell><cell>1 .08</cell><cell>3 .96</cell><cell>5</cell><cell>1 .92</cell><cell>6</cell><cell>8</cell><cell>7</cell><cell>3 .04</cell><cell>f 15</cell><cell>1 .08</cell><cell>2 .56</cell><cell>5 .76</cell><cell>6 .70</cell><cell>5 .24</cell><cell>8</cell><cell>4 .10</cell><cell>2 .56</cell></row><row><cell>f 5</cell><cell>5</cell><cell>1 .24</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_33"><head>Table 16</head><label>16</label><figDesc>DFSABC_elite with different values of SN on 22test functions with 30 D.</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>SN = 20</cell><cell>SN = 30</cell><cell>SN = 40</cell><cell>SN = 50</cell><cell>SN = 60</cell><cell>SN = 70</cell><cell>SN = 80</cell><cell>SN = 90</cell><cell>SN = 100</cell></row><row><cell>f 1</cell><cell>Mean</cell><cell>3.00e-177</cell><cell>8.40e-130</cell><cell>1.22e-100</cell><cell>4.14e-82</cell><cell>2.98e-69</cell><cell>1.59e-59</cell><cell>2.5e-52</cell><cell>1.35e-46</cell><cell>6.18e-42</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/10,324</cell><cell>100 /14,024</cell><cell>100 /17,592</cell><cell>100 /21,410</cell><cell>100 /24,871</cell><cell>100 /28,781</cell><cell>100 /32,179</cell><cell>100 /36,040</cell><cell>100 /39,748</cell></row><row><cell>f 2</cell><cell>Mean</cell><cell>3.49e-176</cell><cell>3.55e-125</cell><cell>1.35e-96</cell><cell>5.37e-78</cell><cell>3.95e-65</cell><cell>7.76e-56</cell><cell>1.22e-48</cell><cell>8.98e-43</cell><cell>6.01e-38</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/13,799</cell><cell>100 /18,529</cell><cell>100 /23,819</cell><cell>100 /28,674</cell><cell>100 /33,756</cell><cell>100 /38,514</cell><cell>100 /43,165</cell><cell>100 /48,352</cell><cell>100 /53,356</cell></row><row><cell>f 3</cell><cell>Mean</cell><cell>8.43e-179</cell><cell>1.38e-130</cell><cell>1.37e-101</cell><cell>2.84e-83</cell><cell>7.20e-70</cell><cell>1.63e-60</cell><cell>6.54e-53</cell><cell>2.15e-47</cell><cell>9.21e-43</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/9964</cell><cell>100 /12,959</cell><cell>100 /16,472</cell><cell>100 /19,710</cell><cell>100 /23,316</cell><cell>100 /26,569</cell><cell>100 /29,808</cell><cell>100 /33,361</cell><cell>100 /37,108</cell></row><row><cell>f 4</cell><cell>Mean</cell><cell>4.01e-233</cell><cell>1.74e-168</cell><cell>6.49e-132</cell><cell>2.41e-110</cell><cell>5.37e-94</cell><cell>2.21e-78</cell><cell>4.57e-72</cell><cell>2.57e-65</cell><cell>1.07e-60</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/3663.2</cell><cell>100 /4534.8</cell><cell>100 /6248.0</cell><cell>100 /7122</cell><cell>100 /8272.3</cell><cell>100 /9097.2</cell><cell>100 /10,154</cell><cell>100 /11,552</cell><cell>100 /13,092</cell></row><row><cell>f 5</cell><cell>Mean</cell><cell>8.80e-93</cell><cell>1.09e-66</cell><cell>1.49e-51</cell><cell>2.06e-42</cell><cell>8.90e-36</cell><cell>7.40e-31</cell><cell>2.64e-27</cell><cell>2.68e-24</cell><cell>6.41e-22</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/15,916</cell><cell>100 /21,462</cell><cell>100 /27,451</cell><cell>100 /33,426</cell><cell>100 /39,377</cell><cell>100 /45,335</cell><cell>100 /51,126</cell><cell>100 /57,186</cell><cell>100 /62,932</cell></row><row><cell>f 6</cell><cell>Mean</cell><cell>3.29e-11</cell><cell>2.03e-10</cell><cell>1.30e-08</cell><cell>5.08e-07</cell><cell>7.27e-06</cell><cell>4.39e-05</cell><cell>2.60e-04</cell><cell>9.19e-04</cell><cell>2.33e-03</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/21,337</cell><cell>100 /23,833</cell><cell>100 /27,096</cell><cell>100 /32,802</cell><cell>100 /39,204</cell><cell>100 /42,568</cell><cell>100 /49,373</cell><cell>100 /54,090</cell><cell>100 /59,844</cell></row><row><cell>f 7</cell><cell>Mean</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/4536.8</cell><cell>100 /5178</cell><cell>100 /6308.8</cell><cell>100 /7534</cell><cell>100 /8719.2</cell><cell>100 /9886.8</cell><cell>100 /11,197</cell><cell>100 /12,452</cell><cell>100 /13,636</cell></row><row><cell>f 8</cell><cell>Mean</cell><cell>7.18e-66</cell><cell>7.18e-66</cell><cell>7.18e-66</cell><cell>7.18e-66</cell><cell>7.18e-66</cell><cell>7.17e-66</cell><cell>7.18e-66</cell><cell>7.18e-66</cell><cell>7.18e-66</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/60</cell><cell>100 /90</cell><cell>100 /120</cell><cell>100 /150</cell><cell>100 /180</cell><cell>100 /210</cell><cell>100 /240</cell><cell>100 /270</cell><cell>10 0 /30 0</cell></row><row><cell>f 9</cell><cell>Mean</cell><cell>1.62e-02</cell><cell>1.20e-02</cell><cell>1.21e-02</cell><cell>1.20e-02</cell><cell>1.12e-02</cell><cell>1.20e-02</cell><cell>1.28e-02</cell><cell>1.51e-02</cell><cell>1.51e-02</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 /15,791</cell><cell>100 / 13,638</cell><cell>100/ 14,840</cell><cell>100 /16,878</cell><cell>100 /18,074</cell><cell>100 /20,482</cell><cell>100 /21,379</cell><cell>100 /21,884</cell><cell>100 /25,340</cell></row><row><cell>f 10</cell><cell>Mean</cell><cell>4.19e + 00</cell><cell>2.01e + 00</cell><cell>5.77e + 00</cell><cell>3.45e + 00</cell><cell>2.49e-01</cell><cell>2.48e-01</cell><cell>1.92e-01</cell><cell>6.00e-02</cell><cell>1.15e-01</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>36/76,005</cell><cell>4 8/80,64 8</cell><cell>64/61,045</cell><cell>60/ 58,683</cell><cell>72/66,427</cell><cell>64/60,156</cell><cell>64/69,540</cell><cell>88 /78,865</cell><cell>72/84,700</cell></row><row><cell>f 11</cell><cell>Mean</cell><cell>1.71e + 00</cell><cell>3.18e-01</cell><cell>3.98e-02</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>16/ 16,860</cell><cell>72/23,037</cell><cell>96/23,770</cell><cell>100 /27,754</cell><cell>100 /32,647</cell><cell>100 /36,358</cell><cell>100 /40,374</cell><cell>100 /44,694</cell><cell>100 /51,980</cell></row><row><cell>f 12</cell><cell>Mean</cell><cell>1.52e + 00</cell><cell>3.20e-01</cell><cell>4.00e-02</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>12/ 19,553</cell><cell>72/21,907</cell><cell>96/25,033</cell><cell>100 /28,602</cell><cell>100 /32,273</cell><cell>100 /37,892</cell><cell>100 /41,462</cell><cell>100 /46,645</cell><cell>100 /55,516</cell></row><row><cell>f 13</cell><cell>Mean</cell><cell>8.52e-03</cell><cell>1.68e-03</cell><cell>2.96e-04</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>1.24e-08</cell><cell>0.0 0e + 0 0</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>68/ 33,554</cell><cell>84/26,159</cell><cell>96/29,350</cell><cell>100 /31,066</cell><cell>100 /34,903</cell><cell>100 /39,679</cell><cell>100 /42,390</cell><cell>96/48,450</cell><cell>100 /70,380</cell></row><row><cell>f 14</cell><cell>Mean</cell><cell>1.99e + 02</cell><cell>8.05e + 01</cell><cell>9.48e + 00</cell><cell>4.37e-13</cell><cell>1.46e-13</cell><cell>1.46e-13</cell><cell>2.91e-13</cell><cell>5.82e-13</cell><cell>8.73e-13</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>20/ 20,916</cell><cell>48/24,810</cell><cell>92/29,922</cell><cell>100 /34,430</cell><cell>100 /39,055</cell><cell>100 /41,924</cell><cell>100 /46,678</cell><cell>100 /51,102</cell><cell>100 /55,516</cell></row><row><cell>f 15</cell><cell>Mean</cell><cell>4.51e-15</cell><cell>3.80e-15</cell><cell>4.09e-15</cell><cell>3.80e-15</cell><cell>3.94e-15</cell><cell>4.65e-15</cell><cell>5.08e-15</cell><cell>5.93e-15</cell><cell>5.93e-15</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 18,758</cell><cell>100 /24,954</cell><cell>100 /31,307</cell><cell>100 /37,998</cell><cell>100 /44,364</cell><cell>100 /51,075</cell><cell>100 /57,661</cell><cell>100 /64,120</cell><cell>100 /70,380</cell></row><row><cell>f 16</cell><cell>Mean</cell><cell>8.29e-03</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell><cell>1.57e-32</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>92/ 9260</cell><cell>100 /12,217</cell><cell>100 /15,384</cell><cell>100 /18,902</cell><cell>100 /21,991</cell><cell>100 /24,923</cell><cell>100 /28,304</cell><cell>100 /31,561</cell><cell>100 /34,4 4 4</cell></row><row><cell>f 17</cell><cell>Mean</cell><cell>1.55e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell><cell>1.50e-33</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 10,340</cell><cell>100 /13,794</cell><cell>100 /17,451</cell><cell>100 /20,970</cell><cell>100 /24,948</cell><cell>100 /28,484</cell><cell>100 /32,138</cell><cell>100 /35,636</cell><cell>100 /39,236</cell></row><row><cell>f 18</cell><cell>Mean</cell><cell>1.25e-15</cell><cell>1.73e-16</cell><cell>1.24e-16</cell><cell>3.10e-40</cell><cell>2.66e-17</cell><cell>1.30e-28</cell><cell>1.50e-25</cell><cell>4.04e-22</cell><cell>1.16e-19</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100 / 18,238</cell><cell>100 /24,587</cell><cell>100 /32,702</cell><cell>100 /40,454</cell><cell>100 /48,622</cell><cell>100 /57,134</cell><cell>100 /62,109</cell><cell>100 /69,887</cell><cell>100 /78,412</cell></row><row><cell>f 19</cell><cell>Mean</cell><cell>8.79e-03</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35e-31</cell><cell>1.35-31</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>92/ 11,930</cell><cell>100 /16,292</cell><cell>100 /30,011</cell><cell>100 /24,890</cell><cell>100 /28,639</cell><cell>100 /32,354</cell><cell>100 /36,701</cell><cell>100 /39,553</cell><cell>100 /44,892</cell></row><row><cell>f 20</cell><cell>Mean</cell><cell>2.75e-02</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.00 + 00</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>60/ 29,657</cell><cell>100 /38,831</cell><cell>100 /46,325</cell><cell>100 /55,910</cell><cell>100 /62,537</cell><cell>10 0 /68,90 0</cell><cell>100 /73,878</cell><cell>100 /84,020</cell><cell>10 0 /92,30 0</cell></row><row><cell>f 21</cell><cell>Mean</cell><cell>-78.295</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell><cell>-78.332</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>96/ 4295</cell><cell>100 /5106</cell><cell>100 /5643.2</cell><cell>100 /6502</cell><cell>100 /7826.4</cell><cell>100 /8027.6</cell><cell>100 /9257.6</cell><cell>100 /10,292</cell><cell>100 /10,879</cell></row><row><cell>f 22</cell><cell>Mean</cell><cell>-29.946</cell><cell>-29.999</cell><cell>-</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_34"><head>30.0 0 0 -30.0 0 0 -30.0 0 0 -30.0 0 0 -30.0 0 0 -30.0 0 0 -30.0 0 0</head><label></label><figDesc></figDesc><table><row><cell>SR/AVEN</cell><cell>100/2624.8</cell><cell>100 /3534</cell><cell>100 /4334.4</cell><cell>100 /5270</cell><cell>100 /6367.2</cell><cell>100 /7098</cell><cell>100 /8054.4</cell><cell>100 /86,724</cell><cell>100 /9404</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_35"><head>Table 17</head><label>17</label><figDesc>DFSABC_elite with different values of p for SN = 20 and SN = 50 on 6 test functions with 30 D. = 0.2, r = ceil(1/ p ) p = 0.3, r = ceil(1/ p ) p = 0.4, r = ceil(1/ p ) p = 0.5, r = ceil(1/ p )</figDesc><table><row><cell>Alg</cell><cell>metric</cell><cell>SN = 20</cell><cell>SN = 50</cell><cell>SN = 20</cell><cell>SN = 50</cell><cell>SN = 20</cell><cell>SN = 50</cell><cell>SN = 20</cell><cell>SN = 50</cell></row><row><cell cols="3">p f 1 Mean 5.09e-161</cell><cell>1.27e-69</cell><cell>7.94e-147</cell><cell>1.38e-61</cell><cell>1.87e-137</cell><cell>2.12e-56</cell><cell>1.38e-131</cell><cell>2.62e-53</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/11,849</cell><cell>100 /25,814</cell><cell>10 0/13,0 07</cell><cell>100 /29,222</cell><cell>100/14,042</cell><cell>100 /32,117</cell><cell>100/14,842</cell><cell>100 /34,018</cell></row><row><cell>f 2</cell><cell>Mean</cell><cell>5.54e-156</cell><cell>1.87e-65</cell><cell>2.28e-143</cell><cell>9.05e-58</cell><cell>5.09e-133</cell><cell>6.90e-53</cell><cell>2.64e-127</cell><cell>6.06e-50</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/15,546</cell><cell>100 /34,366</cell><cell>100/16,999</cell><cell>100 /38,356</cell><cell>100/18,100</cell><cell>100 /41,790</cell><cell>100/18,962</cell><cell>100 /43,914</cell></row><row><cell>f 3</cell><cell>Mean</cell><cell>1.40e-160</cell><cell>2.09e-70</cell><cell>1.12e-145</cell><cell>3.56e-62</cell><cell>1.64e-138</cell><cell>2.65e-57</cell><cell>1.16e-132</cell><cell>3.54e-54</cell></row><row><cell></cell><cell>SR/AVEN</cell><cell>100/11,078</cell><cell>100 /24,314</cell><cell>100/12,146</cell><cell>100 /27,431</cell><cell>100/13,018</cell><cell>100 /29,816</cell><cell>100 / 13,745</cell><cell>100 /31,842</cell></row><row><cell></cell><cell>Mean</cell><cell>6.37e-01</cell><cell>0.0 0e + 0 0</cell><cell>3.18e-01</cell><cell>0.0 0e + 0 0</cell><cell>3.58e-01</cell><cell>0.0 0e + 0 0</cell><cell>1.149e-01</cell><cell>0.0 0e + 0 0</cell></row><row><cell>f 11</cell><cell>SR/AVEN</cell><cell>44/ 17,958</cell><cell>100 /32,774</cell><cell>72/ 18,742</cell><cell>100 /35,738</cell><cell>72/ 18,967</cell><cell>100 /38,242</cell><cell>88/ 20,060</cell><cell>100 /40,262</cell></row><row><cell></cell><cell>Mean</cell><cell>6.80e-01</cell><cell>0.0 0e + 0 0</cell><cell>5.60e-01</cell><cell>0.0 0e + 0 0</cell><cell>3.20e-01</cell><cell>0.0 0e + 0 0</cell><cell>3.20e-01</cell><cell>0.0 0e + 0 0</cell></row><row><cell>f 12</cell><cell>SR/AVEN</cell><cell>48/ 18,833</cell><cell>100 /33,866</cell><cell>52/ 18,740</cell><cell>100 /37,450</cell><cell>68/ 19,704</cell><cell>100 /40,438</cell><cell>72/ 20,060</cell><cell>100 /41,870</cell></row><row><cell></cell><cell>Mean</cell><cell>3.94e-04</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>0.0 0e + 0 0</cell><cell>3.13e-08</cell><cell>0.0 0e + 0 0</cell><cell>4.44e-18</cell><cell>0.0 0e + 0 0</cell></row><row><cell>f 13</cell><cell>SR/AVEN</cell><cell>96/ 25,867</cell><cell>100 /33,234</cell><cell>100/20,299</cell><cell>100 /37,054</cell><cell>96/ 19,967</cell><cell>100 /37,833</cell><cell>100 / 24,686</cell><cell>100 /40,586</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_36"><head>Table 18</head><label>18</label><figDesc>Comparisons of DFSABC_elite with recent ABC variants on CEC2014 test functions with 10 D.</figDesc><table><row><cell>Fun</cell><cell>Alg</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>dABC mean(std)</cell><cell>qABC mean(std)</cell><cell>ABCVSS mean(std)</cell><cell>EABC mean(std)</cell><cell>DFSABC_elite mean(std)</cell></row><row><cell>F1</cell><cell>2.15e + 05(2.02e + 05) -</cell><cell>1.46e + 05(1.99e + 05) -</cell><cell>1.49e + 05(1.17e + 05) -</cell><cell>1.06e + 05(7.46e + 04) -</cell><cell>8.60e + 04(6.29e + 04)</cell></row><row><cell>F2</cell><cell>6.96e + 01(9.15e + 01) +</cell><cell>6.56e + 01(1.12e + 02) +</cell><cell>7.25e + 01(1.41e + 02) +</cell><cell>1.94e + 02(2.86e + 02) =</cell><cell>1.98e + 02(3.98e + 02)</cell></row><row><cell>F3</cell><cell>2.85e + 02(2.30e + 02) -</cell><cell>3.26e + 02(2.89e + 02) -</cell><cell>3.66e + 02(4.63e + 02) -</cell><cell>2.66e + 02(3.20e + 02) =</cell><cell>2.52e + 02(3.21e + 02)</cell></row><row><cell>F4</cell><cell>2.94e-02(2.30e + 02) +</cell><cell>2.34e-02(3.50e-02) +</cell><cell>2.74e-02(3.03e-02) +</cell><cell>2.05e + 0 0(6.96e + 0 0) -</cell><cell>3.65e-01(8.91e-01)</cell></row><row><cell>F5</cell><cell>1.68e + 01(6.69e + 00) -</cell><cell>1.51e + 01(8.04e + 00) =</cell><cell>1.60e + 01(6.87e + 00) -</cell><cell>1.45e + 01(8.97e + 00) +</cell><cell>1.52e + 01(8.0 0e + 0 0)</cell></row><row><cell>F6</cell><cell>2.18e + 00(7.93e-01) -</cell><cell>2.15e + 00(5.92e-01)-</cell><cell>2.13e + 00(6.42e-01) -</cell><cell>3.08e-01(2.05e-01) +</cell><cell>6.88e-01(3.26e-01)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_37"><head>67e + 02(2.12e + 02) +</head><label></label><figDesc></figDesc><table><row><cell>F12</cell><cell>1.31e-01(2.88e-02) -</cell><cell>1.39e-01(2.52e-02) -</cell><cell>1.45e-01(4.02e-02) -</cell><cell>2.46e-01(7.72e-02) -</cell><cell>1.22e-01(3.62e-02)</cell></row><row><cell>F13</cell><cell>1.15e-01(2.31e-02) -</cell><cell>1.20e-01(2.50e-02) -</cell><cell>9.44e-02(2.42e-02) =</cell><cell>5.72e-02(1.66e-02) +</cell><cell>8.96e-02(2.31e-02)</cell></row><row><cell>F14</cell><cell>1.70e-01(3.10e-02) -</cell><cell>1.64e-01(2.81e-02) -</cell><cell>1.58e-01(3.08e-02)-</cell><cell>1.57e-01(3.97e-02) -</cell><cell>1.30e-01(3.36e-02)</cell></row><row><cell>F15</cell><cell>8.66e-01(2.23e-01) -</cell><cell>7.82e-01(2.18e-01) -</cell><cell>6.33e-01(1.89e-01) =</cell><cell>5.33e-01(1.43e-01) =</cell><cell>5.65e-01(1.49e-01)</cell></row><row><cell>F16</cell><cell>1.92e + 00(2.61e-01) -</cell><cell>1.90e + 0 0(3.0 0e-01) -</cell><cell>1.79e + 00(2.71e-01) -</cell><cell>1.10e + 00(3.03e-01) +</cell><cell>1.28e + 00(3.25e-01)</cell></row><row><cell>F17</cell><cell>2.36e + 05(1.49e + 02) -</cell><cell>1.59e + 05(1.37e + 05) -</cell><cell>1.63e + 05(1.75e + 05) -</cell><cell>8.55e + 04(6.86e + 04)</cell><cell>1.04e + 03(9.99e + 02)</cell></row><row><cell>F18</cell><cell>3.67e + 02(2.86e + 02) +</cell><cell>4.38e + 02(3.76e + 02) +</cell><cell>7.46e + 02(6.10e + 02) +</cell><cell>3.01e + 03(3.50e + 03) =</cell><cell>2.56e + 03(2.51e + 03)</cell></row><row><cell>F19</cell><cell>3.58e-01(1.57e-01) -</cell><cell>3.21e-01(1.20e-01) -</cell><cell>2.20e-01(1.19e-01) -</cell><cell>2.02e-01(1.75e-01) -</cell><cell>1.07e-01(6.53e-02)</cell></row><row><cell>F20</cell><cell>2.41e + 02(2.88e + 02) +</cell><cell cols="2">1.4.78e + 02(6.87e + 02) +</cell><cell>1.15e + 03(1.06e + 03) =</cell><cell>1.18e + 03(1.51e + 03)</cell></row><row><cell>F21</cell><cell>2.50e + 04(2.77e + 04) -</cell><cell>7.19e + 03(7.43e + 03) -</cell><cell>1.26e + 04(1.77e + 04) -</cell><cell>5.29e + 03(5.84e + 03) =</cell><cell>4.29e + 03(4.07e + 03)</cell></row><row><cell>F22</cell><cell>1.37e + 0 0(4.02e + 0 0) -</cell><cell>1.59e + 0 0(3.33e + 0 0) -</cell><cell>2.76e-01(1.49e-01) =</cell><cell>7.80e + 00(2.40e + 01) -</cell><cell>2.51e-01(1.57e-01)</cell></row><row><cell>F23</cell><cell>1.79e + 02(1.23e + 02) +</cell><cell>1.</cell><cell></cell><cell></cell><cell></cell></row></table><note><p>4.06e-02) F11 2.09e + 02(1.32e + 02) -1.69e + 02(8.17e + 01) -2.00e + 02(9.47e + 01) -9.63e + 01(1.03e + 02) -4.56e + 01(5.21e + 01)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_38"><head>16e + 02(1.21e + 02) +</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>2.72e + 02(1.14e + 02) +</cell><cell>3.29e + 02(1.07e-02) =</cell><cell>3.29e + 02(8.68e-04)</cell></row><row><cell>F24</cell><cell>1.21e + 02(4.59e + 00) -</cell><cell>1.22e + 02(4.65e + 00) -</cell><cell>1.19e + 02(4.23e + 00) -</cell><cell>1.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_39"><head>10e + 02(2.15e + 00) =</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1.12e + 02(2.99e + 00)</cell></row><row><cell>F25</cell><cell>1.40e + 02(1.39e + 01) -</cell><cell>1.32e + 02(7.78e + 00) -</cell><cell>1.36e + 02(1.05e + 01) -</cell><cell>1.27e + 02(8.16e + 00) =</cell><cell>1.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_40"><head>26e + 02(5.98e + 00) F26 9.76e + 01(1.27e + 01) +</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>1.00e + 02(4.01e-02) =</cell><cell>1.00e + 02(4.36e-02) =</cell><cell>1.00e + 02(2.82e-02) =</cell><cell>1.00e + 02(2.95e-02)</cell></row><row><cell>F27</cell><cell>2.12e + 01(7.05e + 01) +</cell><cell>3.56e + 01(9.63e + 01) +</cell><cell>8.65e + 01(1.43e + 02) -</cell><cell>6.88e + 01(1.23e + 02) -</cell><cell>4.27e + 01(1.02e + 02)</cell></row><row><cell>F28</cell><cell>3.92e + 02(8.48e + 01) -</cell><cell>4.01e + 02(2.14e + 01) -</cell><cell>3.78e + 02(1.58e + 01) -</cell><cell>3.73e + 02(1.91e + 01) -</cell><cell>3.63e + 02(5.23e + 0)</cell></row><row><cell>F29</cell><cell>2.71e + 02(1.93e + 01) =</cell><cell>2.66e + 02(2.53e + 01) +</cell><cell>2.68e + 02(2.36e + 01) +</cell><cell>2.91e + 02(4.02e + 01) -</cell><cell>2.72e + 02(3.00e + 01)</cell></row><row><cell>F30</cell><cell>7.47e + 02(1.10e + 02) -</cell><cell>6.35e + 02(6.60e + 01) -</cell><cell>6.24e + 02(8.73e + 01) -</cell><cell>6.68e + 02(1.39e + 02) -</cell><cell>5.86e + 02(8.20e + 01)</cell></row><row><cell>+ / = /-</cell><cell>7/2/21</cell><cell>7/4/19</cell><cell>6/6/18</cell><cell>5/11/14</cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_0"><p>.94 4 .42 4 .06 2 .60</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>This work is supported by the National Natural Science Foundation of China under Grants 61402291 , 61402294 , and 61402534 , Guangdong Natural Science Foundation under Grant S2013040012895 , Foundation for Distinguished Young Talents in Higher Education of Guangdong, China under Grant 2013LYM_0076 and 2014KQNCX129 , Major Fundamental Research Project in the Science and Technology Plan of Shenzhen under Grants JCYJ20130329102017840 , JCYJ20130329102032059 and JCYJ20140828163633977 .</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>"-", "+ ", and "= " respectively denote that the performance of the corresponding algorithm is worse than, better than, and similar to that of DFSABC_elite according to the Wilcoxon's rank test at a 0.05 significance level.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Hybrid differential artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">A</forename><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">K</forename><surname>Jatoth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rajasekhar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Theor. Nanosci</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="249" to="257" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A modified artificial bee colony algorithm for real-parameter optimization</title>
		<author>
			<persName><forename type="first">B</forename><surname>Akay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">192</biblScope>
			<biblScope unit="page" from="120" to="142" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The best-so-far selection in artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">A</forename><surname>Banharnsakun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Achalakul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sirinaovakul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="2888" to="2901" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Enhanced compact artificial bee colony</title>
		<author>
			<persName><forename type="first">A</forename><surname>Banitalebi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I A</forename><surname>Aziz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bahar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">A</forename><surname>Aziz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">298</biblScope>
			<biblScope unit="page" from="491" to="511" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Self-adptive differential evolution algorithm using population size reduction and three strategies</title>
		<author>
			<persName><forename type="first">J</forename><surname>Brest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Maucec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soft. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="2157" to="2174" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Gaussian artificial bee colony algorithm approach applied to Loney&apos;s solenoid benchmark problem</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Coelho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Alotto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Magn</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="1326" to="1329" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Mobile robot path planning using artificial bee colony and evolutionary programming</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Contreras-Cruz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Ayala-Ramirez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">H</forename><surname>Hernandez-Belmonte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="319" to="328" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Adaptive differential evolution algorithm with novel mutation strategies in multiple sub-populations</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">Z</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="page" from="155" to="173" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A practical tutorial on the use of nonparametric statistical tests as a methodology for comparing evolutionary and swarm intelligence algorithms</title>
		<author>
			<persName><forename type="first">J</forename><surname>Derrac</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>García</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Molina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Herrera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Swarm Evol. Computat</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="60" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Ant Colony Optimization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Stutzle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Bare bones artificial bee colony algorithm with parameter adaptation and fitness-based neighborhood</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">T S</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">316</biblScope>
			<biblScope unit="page" from="180" to="200" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Artificial bee colony algorithm based on information Learning</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2827" to="2839" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Improved artificial bee colony algorithm for global optimization</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Process. Lett</title>
		<imprint>
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="issue">17</biblScope>
			<biblScope unit="page" from="871" to="882" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A modified artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="687" to="697" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A novel artificial bee colony algorithm based on modified search equation and orthogonal learning</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Cybern</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="1011" to="1024" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A novel artificial bee colony algorithm with Powell&apos;s method</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="3763" to="3775" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Enhancing artificial bee colony algorithm using more information-based search equations</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">270</biblScope>
			<biblScope unit="page" from="112" to="133" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldberg</surname></persName>
		</author>
		<title level="m">Genetic Algorithms in Search, Optimization and Machine Learning</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Completely derandomized self-adaptation in evolution strategies</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ostermeier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="159" to="195" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Accelerating artificial bee colony algorithm with adaptive local search</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">S</forename><surname>Jadon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tiwari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sharma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Memetic. Comp</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="215" to="230" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Artificial bee colony algorithm and pattern search hybridized for global optimization</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="1781" to="1791" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Rosenbrock artificial bee colony algorithm for accurate global optimization of numerical functions</title>
		<author>
			<persName><forename type="first">F</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">Y</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="3508" to="3531" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">An Idea Based on Honey Bee Swarm for Numerical Optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<idno>-TR06</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
			<pubPlace>Kayseri, Turkey</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Erciyes University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">On the performance of artificial bee colony (ABC) algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Basturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="687" to="697" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A comparative study of artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Basturk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">214</biblScope>
			<biblScope unit="page" from="108" to="132" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A quick artificial bee colony (qABC) algorithm and its performance on optimization problems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Gorkemli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="227" to="238" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A directed artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Kiran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Findik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="454" to="462" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Artificial bee colony algorithm with variable search strategy for continuous optimization</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Kiran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hakli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Guanduz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Uguz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">300</biblScope>
			<biblScope unit="page" from="140" to="157" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A MOS-based dynamic memetic differential evolution algorithm for continuous optimization: a scalability test</title>
		<author>
			<persName><forename type="first">A</forename><surname>Latorre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muelas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Pena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Soft. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="2187" to="2199" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A comprehensive comparison of large scale global optimizers</title>
		<author>
			<persName><forename type="first">A</forename><surname>Latorre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Muelas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Pena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">316</biblScope>
			<biblScope unit="page" from="517" to="549" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Development and investigation of efficient artificial bee colony algorithm for numerical function optimization</title>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">F</forename><surname>Niu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">J</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="320" to="332" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Solving the large-scale hybrid flow shop scheduling problem with limited buffers by a hybrid artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">K</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">316</biblScope>
			<biblScope unit="page" from="487" to="502" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Comprehensive learning particle swarm optimizer for global optimization of multimodal functions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Baskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="281" to="295" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A double-module immune algorithm for multi-objective optimization problems</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">Z</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">H</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ming</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Soft Comput</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="161" to="174" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A novel hybrid multi-objective immune algorithm with adaptive differential evolution</title>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Ming</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="95" to="111" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A modified artificial bee colony algorithm based on converge-onlookers approach for global optimization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">H</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">219</biblScope>
			<biblScope unit="page" from="10253" to="10262" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A novel binary artificial bee colony algorithm based on genetic operators</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ozturk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hancer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karaboga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">297</biblScope>
			<biblScope unit="page" from="154" to="170" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Differential evolution algorithm with strategy adaptation for global numerical optimization</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Suganthan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="79" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">An integrated algorithm based on artificial bee colony and particle swarm optimization</title>
		<author>
			<persName><forename type="first">X</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc IEEE Int Conf Neural Netw</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="2586" to="2590" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Biogeography-based optimization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Simon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="702" to="713" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A taxonomy of hybrid metaheuristics</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">G</forename><surname>Talbi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Heuristics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="541" to="564" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Differential evolution with composite trial vector generation strategies and control parameters</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">X</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">F</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="55" to="66" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Multi-Strategy ensemble artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rahnamayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">S</forename><surname>Pan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="volume">279</biblScope>
			<biblScope unit="page" from="587" to="603" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">An efficient and robust artificial bee colony algorithm for numerical optimization</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">L</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Q</forename><surname>An</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="1256" to="1265" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A particle swarm inspired multi-elite artificial bee colony algorithm for real-parameter optimization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">M</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">B</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><forename type="middle">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">W</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">J</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Optim. Appl</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="493" to="516" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">An elitism based multi-objective artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">R</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Oper. Res</title>
		<imprint>
			<biblScope unit="volume">245</biblScope>
			<biblScope unit="page" from="168" to="193" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">A new approach for data clustering using hybrid artificial bee colony algorithm</title>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">H</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">P</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="page" from="241" to="250" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">JADE: Adaptive differential evolution with optional external archive</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">C</forename><surname>Sanderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Evol. Comput</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="945" to="958" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A hybrid swarm intelligent method based on genetic algorithm and artificial bee colony</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lect. Notes Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">6145</biblScope>
			<biblScope unit="page" from="558" to="565" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Gbest-guided artificial bee colony algorithm for numerical function optimization</title>
		<author>
			<persName><forename type="first">G</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kwong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">217</biblScope>
			<biblScope unit="page" from="3166" to="3173" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
