<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engi-neering</orgName>
								<orgName type="laboratory">IEEE International Symposium on Information Theory</orgName>
								<orgName type="institution">University of Maryland</orgName>
								<address>
									<addrLine>June 2000. H. El Gamal</addrLine>
									<postCode>20742</postCode>
									<settlement>Sorrento, College Park</settlement>
									<region>MD</region>
									<country>Italy, USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<postCode>21046</postCode>
									<settlement>Columbia</settlement>
									<region>MD</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D3AA19A34A8A657FA0A43DBDAE3982FE</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T11:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>O NE of the main reasons behind the impressive perfor- mance achieved by graphical codes such as parallel concatenated convolutional code(s) (PCCC) is the elegant iterative decoding algorithm with the exchange of soft information between successive iterations. Recently, it has been shown that this iterative decoding algorithm is an instance of Pearl belief propagation in Bayesian networks <ref type="bibr" target="#b0">[1]</ref>. Whereas belief propagation is known to converge to the maximum a posteriori (MAP) solution for graphs without loops, relatively little progress has been achieved to date in understanding the theoretical behavior of the algorithm on graphs with loops, especially as a suboptimal decoder for codes having such graphical representation <ref type="bibr" target="#b0">[1]</ref>.</p><p>The rediscovery of Gallager's low-density parity-check (LDPC) codes <ref type="bibr" target="#b1">[2]</ref> and Wiberg's work on the graphical repre-sentation of convolutional codes <ref type="bibr" target="#b2">[3]</ref> were two important steps toward generalizing the structure behind PCCC to what is now known as graphical codes. Over the past five years, different constructions for regular graphical codes have been proposed including serially concatenated convolutional codes(s) (SCCC) <ref type="bibr" target="#b3">[4]</ref>, trellis constrained codes <ref type="bibr" target="#b4">[5]</ref>, and the high-rate graphical codes proposed by <ref type="bibr">Cheng and</ref> McEliece <ref type="bibr" target="#b5">[6]</ref>. Interestingly, none of these codes succeeded in providing performance superior to the originally proposed turbo construction of Berrou et al. <ref type="bibr" target="#b6">[7]</ref> in the low signal-to-noise ratio (SNR) region. This result is somehow at odds with the fact that some of these codes (e.g., SCCC) offer better distance spectrum than turbo codes <ref type="bibr" target="#b3">[4]</ref>. Quite recently, a tighter upper bound on the probability of error of PCCC and SCCC at SNR below the channel cutoff rate was developed <ref type="bibr" target="#b7">[8]</ref>. The new bound confirmed that SCCC would achieve superior performance to PCCC at low SNRs if maximum-likelihood decoding were possible. In this paper, we develop an idealized mathematical model of the iterative decoder, representative of the case in which codeword block sizes are large, that predicts a limit on performance in the low SNR regime due to convergence issues; empirically, this limit is an accurate indication of the "waterfall" region observed for large block lengths.</p><p>This paper is based on a simple but powerful technique originally developed by the first author in his Ph.D. dissertation <ref type="bibr" target="#b8">[9]</ref> to evaluate the convergence characteristics of the iterative decoder for various graphical codes. The mathematical treatment given here is new as is the use of the tool as an aid to convergence-based code design. Independently and at roughly the same time as <ref type="bibr" target="#b8">[9]</ref>, Richardson and Urbanke <ref type="bibr" target="#b9">[10]</ref> developed a rigorous method of analysis for iterative decoding of LDPC codes. Their approach entails computation of density functions as they evolve from one iteration to the next and makes use of the concentration theorem of Luby et al. <ref type="bibr" target="#b10">[11]</ref> to make rigorous the asymptotic assumption of loop-free operation. The density evolution approach was later argued to be applicable to turbo codes <ref type="bibr" target="#b11">[12]</ref>, <ref type="bibr" target="#b12">[13]</ref>. The main thrust of our work is the analysis and design of general graphical codes with emphasis on PCCC. The analysis technique proposed in this paper is simpler to evaluate than the technique of Richardson and Urbanke and, as we will show later, provides insights into the decoder operation that we believe would be difficult to extract using the density evolution approach. Furthermore, despite the idealization of the mathematical model and the simplicity of the analysis technique, the close agreement between its predictions and the simulation results available in the literature, including <ref type="bibr" target="#b9">[10]</ref>, is striking. As part of the review process for the initial submission of this paper, one of the reviewers pointed us to Stephan ten Brink's work 0018-9448/01$10.00 Â© 2001 IEEE Fig. <ref type="figure">1</ref>. Cumulative density function of the sum-product algorithm output. <ref type="bibr" target="#b13">[14]</ref>, where a similar approach, based on mutual information to analyze the turbo decoder convergence, was used. In contrast to our work, no attempt was made in <ref type="bibr" target="#b13">[14]</ref> to prove the existence of convergence thresholds.</p><p>The rest of this paper is organized as follows. In Section II, the mathematical model for the iterative decoder is developed and basic theorems regarding convergence characteristics of the idealized decoder are proven. The application of the proposed convergence analysis technique to various graphical codes is discussed in Section III. In addition to an analysis of code designs available in the literature, which demonstrates the utility and accuracy of the new technique, we also present in this section an interesting new code designed based on convergence considerations that improves upon prior state of the art. Section IV discusses extensions to slow and fast-fading channels. The last section presents a few concluding remarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. MATHEMATICAL MODEL FOR DECODER CONVERGENCE</head><p>Iterative decoding on graphs can be viewed as a multistage decoding operation where soft information is exchanged between the different stages. The algorithm performed in each iteration can be either the sum-product or the min-sum algorithm <ref type="bibr" target="#b2">[3]</ref>. It was shown in <ref type="bibr" target="#b2">[3]</ref> that the soft-output Viterbi (SOVA) and the maximum MAP decoding algorithms are direct applications of the min-sum and the sum-product algorithms to trellis-based codes. It was observed in <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b14">[15]</ref> that, if inputs to either decoding algorithm are independent Gaussian random variables, then the output can be tightly approximated by a Gaussian random variable. In fact, it was pointed out in <ref type="bibr" target="#b2">[3]</ref> that the Gaussian approximation can he helpful in analyzing the performance of turbo codes. As shown in this section, the independent Gaussian approximation allows for complete characterization of the turbo decoder convergence in terms of a single parameter: the extrinsic information SNR.</p><p>The accuracy of the Gaussian approximation has been validated experimentally for different classes of graphical codes. Fig. <ref type="figure">1</ref> compares the cumulative density function (cdf) of the extrinsic information produced by the sum-product algorithm for a check node of an LDPC code with four independent Gaussian inputs and the cdf of a Gaussian random variable with the same mean and variance. Figs. <ref type="figure">2</ref> and<ref type="figure">3</ref> show bit-error rate (BER) scatter diagrams (predicted versus measured) for the extrinsic information produced by the ensemble of all rate-eight-state and 16-state constituent MAP decoders, respectively, under the independent Gaussian assumption. These scattering diagrams were generated by feeding independent Gaussian intrinsic and extrinsic information with different SNRs to the decoders. The predicted BERs were computed from the output extrinsic information's measured SNR assuming a Gaussian distribution [i.e., SNR ]. The average relative errors in the predicted BERs are 1.4% and 1.8% for the eight-state and 16-state decoders, respectively.</p><p>In this paper, we only consider the sum-product algorithm. This choice is motivated by the equivalence of the sum-product algorithm to MAP decoding for codes with loop-free graphical representations <ref type="bibr" target="#b2">[3]</ref>. In this context, we define a constituent code as one having a loop-free graphical representation and, therefore, we assume that the constituent codes are decoded by a soft-input/soft-output (SISO) MAP decoder. The model developed in this section is intended to cover graphical codes that enjoy some symmetry in their structure (e.g., regular LDPC codes, symmetrical turbo codes, symmetrical trellis-constrained codes); however, with minor modifications, the proposed technique can be extended to handle certain irregular codes. In Section III, the necessary modifications required to model the iterative decoding of asymmetric parallel concatenated convolutional codes and serially concatenated convolutional codes are described. No attempt is made to analyze irregular LDPC codes since these codes are relatively well understood due to the recent work by Richardson et al. <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b15">[16]</ref>.</p><p>In our model, each symbol is processed by identical constituent decoders at decoding step and each constituent decoder processes the information for symbols. The th constituent decoder accepts intrinsic information (log-likelihood values associated with the channel variables) and extrinsic information (log-likelihood values supplied by the other constituent decoders at the previous decoding step for use as a priori information) and produces updated extrinsic information for the symbols. The vector comprises the extrinsic information produced by the other constituent decoders for the binary data variable during the th decoding step.</p><p>The extrinsic information is the additional likelihood information produced by the th constituent decoder beyond that provided by the channel measurement and a priori information . In particular After the th decoding step, the best estimate for is given by where (1)</p><p>The BER associated with is the probability that . The constituent MAP decoders are optimal in that no decoding rule for the constituent decoders is capable of producing a smaller . The statistical behavior of the MAP decoder is determined by the statistical distribution of the input variables. For the additive white Gaussian noise (AWGN) channel, the intrinsic information are Gaussian random variables. Also for the AWGN channel, it has been observed experimentally that the extrinsic information variables are also approximately Gaussian. For randomly interleaved codes of sufficiently long codeword length, it is reasonable to assume that the loops in the bipartite graph describing the code can be made relatively long, so that the extrinsic information is approximately independent over some number of decoding steps. In the case of LDPC codes, Richardson and Urbanke <ref type="bibr" target="#b9">[10]</ref> (following work by Luby et al. <ref type="bibr" target="#b10">[11]</ref>) prove that the loop-free assumption holds in an asymptotic sense that enables a rigorous convergence analysis for these codes. In the case of turbo codes, however, the loop-free assumption has only heuristic justification. Motivated by the fact that SNR is a simple sufficient statistic for Gaussian random variables, we formalize the Gaussian and loop-free assumptions as follows.</p><p>Independent Gaussian Assumption: The random sequences are jointly Gaussian and statistically independent in the sense that any finite collection of the and are jointly Gaussian and pairwise independent.</p><p>For each Gaussian random variable with mean and variance , we associate a SNR SNR . Under the independent Gaussian assumption, the behavior of the constituent MAP decoder is completely determined by the SNRs of the input variables; and the bit-error probability is completely determined by the SNR of the output log-likelihood ratio . By symmetry of the general decoder model, the SNR of the extrinsic information is the same for all . Since the constituent encoders are statistically equivalent, we will simplify the notation hereafter by dropping the subscript in reference to the extrinsic information.</p><p>The following proposition follows from the fact that the constituent MAP decoder is optimal. and SNR , respectively. For either scenario, the constituent MAP decoder must produce the smallest possible value of BER . Thus, we must have SNR SNR . Otherwise, for the scenario with SNR , a decoder strategy in which noise is injected to reduce the SNR to SNR before performing MAP decoding would yield a smaller BER than optimal MAP decoding. This contradiction shows that SNR is a nondecreasing function of the input SNRs as claimed.</p><p>The constituent MAP decoder forms the linear combination (1) of the log-likelihood information , , and to produce the decision statistic yielding the smallest BER. For Gaussian random variables, the optimal linear combination producing the highest SNR (and hence lowest BER) is (up to a proportionality constant) the weighted sum</p><formula xml:id="formula_0">(2)</formula><p>where the coefficient is the mean-to-variance ratio of random variable . Thus, under the independent Gaussian assumption, the decision statistic is a scaled version of . [Note that this implies that the values are equal. This is similar to <ref type="bibr" target="#b15">[16]</ref> in which for Gaussian log-likelihood ratios, one has as a consequence of the consistency condition that the probability density function (pdf) of log-likelihood ratio messages must satisfy . Hence, .] It is well known that the SNR of is the sum of the SNRs of each term. We therefore conclude that the value of SNR changes in the same direction as the value of SNR . Hence, SNR is also a nondecreasing function of the SNRs of the other input variables. Likewise, SNR if and only if SNR .</p><p>Given intrinsic information having a common SNR , we can now view the essential action of the constituent decoders as enhancing the SNR of the extrinsic information. In this regard, let denote the SNR of the extrinsic information associated with after the th decoding step, where SNR represents the decoder initial condition. Then, the sequence evolves recursively</p><p>By the independence assumption, the function is the same for all decoding steps. By the Heine-Borel property, the sequence either has an accumulation point or is unbounded . Since, by the previous proposition, the sequence is nondecreasing, it must in fact converge to from below. Thus, .</p><p>Proposition 2: is a nondecreasing function of . Thus, if for some , then for all ; and, conversely, if for some , then for all . Proof: Let . Since is a nondecreasing function of both arguments, we have Thus, Taking the supremum over yields the desired result If the threshold is finite for some input SNR , then, by Proposition 1, the bit-error probability for is bounded away from no matter how many decoding iterations are performed. Conversely, if is infinite, Proposition 1 implies that the bit-error probability converges to as the number of iterations goes to infinity.</p><p>Thus, the behavior at one input SNR determines the behavior for all smaller or larger values of input SNR [depending on whether or ]. Since , the supremum</p><formula xml:id="formula_1">(3)</formula><p>is well-defined and serves as a fundamental threshold determining the convergence of the iterative decoder under the independent Gaussian assumption. Summarizing these results, we have the following proposition.</p><p>Proposition 3: If , then . If , then . Thus, under the independent Gaussian assumption, the iterative decoder converges with zero error probability if the input SNR is greater than , but converges with nonzero error probability if the input SNR is less than . Proposition 3 allows for a complete characterization of the turbo decoder convergence properties using a simple technique. It is sufficient to characterize the extrinsic information SNR input/output relation of the basic constituent decoder(s) to determine if the turbo decoder will converge or not at any . The characterization is possible either through approximate numerical analysis or, more accurately, through simple Monte Carlo simulation. In this paper, we will rely on the simulation approach to benefit from its accuracy. The simulation required in this case is much simpler than the iterative decoder simulation. Here, to obtain the input/output relation at each intrinsic SNR, we only need to simulate one constituent decoder, assuming symmetry, with Gaussian extrinsic and intrinsic inputs and measure a single parameter: the output extrinsic information SNR. Then, the convergence threshold is evaluated from the input/output characteristics of the extrinsic information SNR as described in Section III. This demonstrates the simplicity of our technique compared to the density evolution approach where the pdf is estimated at each step. As shown in Section III, for all of the major classes of codes admitting iterative decoding via constituent MAP decoders, the threshold is found experimentally to be finite and greater than zero. Indeed, for almost all known graphical codes of suitably large codeword length, is found to correspond to the sharp "waterfall region" of the performance characteristic.</p><p>It is worth noting that the threshold depends on the structure of the constituent codes rather than that of the composite code. Thus, for the class of graphical codes obtained by certain concatenation of interleaved convolutional codes, analysis based on the independent Gaussian assumption indicates that the waterfall region determined by is not a function of the code weight spectrum and thus cannot be improved by turbo code interleaver optimizations aimed at improving the weight spectrum. Rather, the waterfall region is determined more by how amenable the constituent codes are to iterative decoding. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. APPLICATION TO DIFFERENT CODE CONSTRUCTIONS</head><p>In this section, we analyze in detail the effect of the iterative decoder convergence characteristics on the performance of various graphical codes. Our primary focus will be PCCC, although representative examples for SCCC and regular LDPC codes will also be discussed to emphasize the broad applicability of the proposed technique. For all of the cases considered, the convergence results predicted by the proposed technique are within a very small fraction of a decibel from the simulation results reported in the literature <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b1">[2]</ref>. The PCCC results constitute an exhaustive study of rate-and -symmetric codes with four, eight, and 16-state constituent codes. Based on these convergence results, we design an interesting asymmetric PCCC that outperforms the asymmetric code proposed by Takeshita et al. <ref type="bibr" target="#b17">[18]</ref> in the waterfall region.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Symmetric PCCC</head><p>For simplicity, we consider the classical turbo code <ref type="bibr" target="#b6">[7]</ref> consisting of two identical constituent encoders. The extension to multiple PCCC is straightforward.</p><p>The analysis technique is best illustrated through a detailed example. Consider the rate-PCCC built from the 16-state convolutional code with transfer function originally introduced by Berrou <ref type="bibr" target="#b6">[7]</ref>. Due to symmetry of the code construction, it is sufficient to study the input/output characteristic of the constituent decoder. Fig. <ref type="figure" target="#fig_2">4</ref> shows the SNR input/output relation for the extrinsic information from the MAP decoder for this constituent code as a function of different bit-energy-to-noise ratio . In the figure, the symbols denote measured SNRs obtained via simulation by inverting the observed BER using the Gaussian -function, whereas the various dashed and solid lines represent curve fits. Since the input extrinsic information to one constituent decoder is an interleaved version of the other decoder output, the turbo decoder will converge asymptotically to after a sufficient number of iterations if and only if the constituent decoder characteristic does not intersect the (In Out) line; the intersection point is the finite accumulation point , and hence, the nonexistence of the intersection point implies that . From the figure, it is clear that the decoder will converge to for and 0.7 dB; but, for and 0.5 dB the probability of error will be bounded away from zero even if the number of iterations is unbounded. Therefore, a coarse estimate for the convergence threshold predicted by the independent Gaussian assumption is that it lies between 0.5 and 0.6 dB.</p><p>A more precise threshold can be calculated from the observation that the extrinsic information SNR input/output relation is locally quadratic (true to a high degree for all PCCC that we have studied), allowing the minimum signed distance between the SNR characteristic and (In Out) line to be accurately determined analytically. The minimum signed distances (so-called -metrics) are plotted in Fig. <ref type="figure" target="#fig_3">5</ref> as a function of input . The convergence threshold is the value for which the -metric is and is easily determined by interpolation (the curves are again locally quadratic). From Fig. <ref type="figure" target="#fig_3">5</ref>, a more precise threshold for the Berrou et al. code is 0.57 dB. Using our analysis technique, we conducted an exhaustive search for symmetric rate-and -PCCC with convergence thresholds less than or equal to 0 and 0.7 dB, respectively (i.e., within 0.5 dB from the Shannon limit for binary signaling).  We restricted our search to constituent codes having at most states and feedback polynomial of the form</p><p>The rate-PCCC are obtained from the rate-PCCC by periodically puncturing the output of the constituent codes as described in <ref type="bibr" target="#b6">[7]</ref>. Tables I and II report the octal representation of the generator polynomials for best constituent codes, from a convergence point of view, found in our search. For rate-PCCC, all the constituent codes are 16-state with nonprimitive feedback polynomials. On the other hand, for the ratecase, two eight-state codes with primitive feedback polynomial exhibit convergence thresholds within 0.5 dB from the capacity limit. Since primitive feedback polynomials are advantageous with respect to high SNR asymptotic performance <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b18">[19]</ref>, Table <ref type="table" target="#tab_2">III</ref> provides a survey of the convergence thresholds for the best rate-primitive PCCC available in the literature. These results suggest that the eight-state code chosen for the third-generation wireless standards achieves the best performance tradeoff both for rate-and -codes <ref type="bibr" target="#b19">[20]</ref> (i.e., the code has a primitive feedback polynomial and its convergence thresholds are among the best for both rate-and -codes). Figs. <ref type="figure" target="#fig_4">6</ref> and<ref type="figure" target="#fig_5">7</ref> compare the convergence thresholds obtained by our technique with simulation results for rate-PCCC with various block lengths. <ref type="foot" target="#foot_0">1</ref> In Fig. <ref type="figure" target="#fig_4">6</ref>, we report simulation results for the primitive four-state and eight-state codes in Table <ref type="table" target="#tab_2">III</ref>, whereas in Fig. <ref type="figure" target="#fig_5">7</ref> we compare the 16-state PCCC with the best convergence threshold with the primitive 16-state PCCC with the best distance spectrum <ref type="bibr" target="#b20">[21]</ref>. For the 65 536 block lengths, all codes achieve BER within less than 0.1 dB from the predicted convergence thresholds. This small offset is similar to that shown in <ref type="bibr" target="#b15">[16]</ref> for the irregular LDPC codes with 1 000 000 block length. It is also shown that the relative performance between the different codes in the waterfall region is very close to the convergence analysis prediction even for relatively small block lengths.</p><p>The extrinsic information SNR transfer characteristic also provides useful information regarding rates of convergence (improvement in BER as a function of the number of iterations). In <ref type="bibr" target="#b6">[7]</ref>, Berrou et al. observed that the performance of a certain four-state PCCC was better than their powerful 16-state PCCC in the first few iterations but ultimately failed to converge to small probability of error with increasing numbers of iterations. This behavior is readily explained by the SNR input/output characteristics for the two codes shown in Fig. <ref type="figure" target="#fig_6">8</ref>. From the figure, it is clear that the iterative decoder will converge at 0.7 dB only for the 16-state code since the SNR input/output relation of the four-state code intersects the (In Out) line. Note that the improvement in the extrinsic information output SNR is higher for the four-state decoder at relatively small input extrinsic information SNRs, while the situation is reversed in favor  of the 16-state decoder at higher input extrinsic information SNRs. Thus, there will be more improvement in performance in the early decoding iterations of the four-state PCCC. However, this code will ultimately fail to converge to . </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Asymmetric and Irregular PCCC</head><p>In <ref type="bibr" target="#b18">[19]</ref>, it was argued that symmetric PCCC should be built using constituent codes with primitive feedback polynomials because of their favorable asymptotic performance in the "error floor" region. However, it was observed through simulation that primitive PCCC exhibit relatively poorer performance in the "waterfall" region compared to other known nonprimitive PCCC <ref type="bibr" target="#b17">[18]</ref>. This phenomenon was validated by our results in the previous section which show that the best symmetric PCCC from a convergence point of view have nonprimitive feedback polynomials. In <ref type="bibr" target="#b17">[18]</ref>, Takeshita et al. proposed a new construction for asymmetric PCCC that uses one primitive and one nonprimitive constituent code. Their proposed code was shown through simulation to "split" the performance of the corresponding codes both in the waterfall and error floor regions <ref type="bibr" target="#b17">[18]</ref>.</p><p>It is not necessary to make this compromise, however, as it is possible to design better asymmetric codes using convergence threshold analysis. For example, let us take the primitive 16-state code with best convergence threshold as the first of the constituent codes. This is the code from Table III with a convergence threshold of 0.096 dB (the same primitive code used by <ref type="bibr">Takeshita et al.)</ref>. Fig. <ref type="figure" target="#fig_7">9</ref> shows the extrinsic information SNR input/output relation for this code at 0 dB. From the figure, it is clear that if a genie were to provide the iterative decoder with extrinsic information having SNR in the first iteration only, the symmetric PCCC built from this 16-state constituent code would converge to the desired . This is predicted by the extrinsic information characteristic of Fig. <ref type="figure" target="#fig_7">9</ref> and can be easily verified through simulation. This says that, if there were a way in the initial iterations to aid this 16-state in avoiding the intersection point, the PCCC would eventually reach the desired zero error convergence point. In the previous section, we noted that carefully chosen codes with different memory size exhibit different rates of convergence. This observation suggests that the second constituent code should be chosen to yield high-quality extrinsic information in the input SNR range where the 16-state is close to the (In Out) line. This second code will then help bootstrap the convergence of the iterative decoder. The best eight-state code found in our search that suits this requirement has the transfer function . A slightly different analytical approach is required to find the convergence threshold for asymmetric PCCC. It is no longer sufficient to compare the extrinsic information SNR input/output relation of one constituent code with the (In Out) line. To analyze asymmetric PCCC convergence, the extrinsic information SNR input/output relations of both decoders are evaluated. To determine whether the turbo decoder will converge or not at any particular , the extrinsic information SNR input/output relations of the two decoders are plotted on reverse axes (i.e., the input axis of one decoder is the output axis of the other decoder and vice versa). Based on the independent Gaussian model, it is easy to see that the asymmetric PCCC decoder will converge to with sufficient number of iterations if and only if the two characteristics do not intersect. The rest of the procedure is the same as that used for symmetric PCCC.</p><p>The convergence threshold for the new asymmetric code is found to be 0.066 dB. This threshold is superior to that of both the symmetric 16-state and the symmetric eight-state PCCC built from the two constituent codes. The simulation results in Fig. <ref type="figure" target="#fig_8">10</ref> confirm that the asymmetric code is superior to both 16-state and eight-state symmetric codes in terms of performance in the waterfall region. This result is rather unexpected in that it indicates that good asymmetric codes can be obtained by mixing the constituent codes from two inferior symmetric codes.</p><p>Fig. <ref type="figure" target="#fig_9">11</ref> compares the performance of three codes: the new asymmetric code, the asymmetric code of Takeshita et al., and the symmetric code with the best convergence threshold from Table <ref type="table" target="#tab_1">I</ref>. The relative performance of the three codes in the waterfall region is in excellent agreement with the convergence threshold analysis. The three codes converge to BER within 0.2 dB from their convergence thresholds, respectively, at this particular frame size <ref type="bibr">(16 384)</ref>. The new asymmetric code offers performance improvement over the current state of the art. The new code outperforms the asymmetric code of Takeshita et al. in the waterfall region. Its convergence threshold is 0.162 dB lower than that of the best symmetric primitive 16-state PCCC, listed in Table <ref type="table" target="#tab_2">III</ref>, and is within 0.086 dB of the convergence threshold of the best symmetric PCCC in Table <ref type="table" target="#tab_1">I</ref>. Due to the strength of the primitive constituent code, the new asymmetric code also avoids the very poor asymptotic performance of the symmetric nonprimitive codes as shown in Fig. <ref type="figure" target="#fig_9">11</ref>.</p><p>A first step toward the design of irregular PCCC was taken by Frey and MacKay <ref type="bibr" target="#b21">[22]</ref> in which they allowed the symbol nodes to have variable degrees. However, their construction was limited by having a single constituent code <ref type="bibr" target="#b21">[22]</ref>. Allowing more than one constituent code, with possibly different constraint lengths, would provide for additional degrees of freedom in the design, perhaps making it possible to optimize the degree sequences of both the symbol and check nodes to yield better convergence characteristic in the waterfall region. We are currently in the process of investigating irregular codes designed in this fashion.</p><p>As a final note, it is clear from Fig. <ref type="figure" target="#fig_10">12</ref> that the same relative performance predicted by the convergence threshold analysis holds in the waterfall region for a relatively small block size 1024. This observation contrasts the case of irregular LDPC codes constructed by optimizing the degree sequences for both the symbol and check nodes to allow for better convergence characteristics of the iterative decoder <ref type="bibr" target="#b15">[16]</ref>. The performance of an exemplary rate-code constructed using this technique was shown to be within 0.1 dB from the Shannon limit with a block length of 1 000 000. For small block lengths, however, the performance of regular PCCC was shown to be still superior to irregular LDPC codes <ref type="bibr" target="#b15">[16]</ref>. Therefore, irregular PCCC hold the promise of achieving superior performance to irregular LDPC codes for small and large block lengths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. SCCC</head><p>For PCCC, the constituent codes produce parity symbols that are not shared or exchanged; hence, the constituent decoders  produce extrinsic information for the data symbols only. The situation is different in the SCCC case. In the SCCC encoder, the parity symbols added by the outer code are multiplexed with the data symbols, and the output stream is then interleaved and encoded by the inner code. At the receiver, the inner constituent decoder provides extrinsic information for both the data and the  outer code's parity symbols each iteration, while the outer constituent decoder provides extrinsic information for the data symbols only.</p><p>To account for the asymmetry in the operation of the two constituent decoders, the analytical approach used for asymmetric PCCC is required to analyze the SCCC convergence. The extrinsic information SNR input/output relations of both the inner and outer decoders are evaluated first. For the outer decoder, the input extrinsic information is added to the intrinsic information of both the data and parity symbols, whereas the input  extrinsic information to the inner decoder is added only to the intrinsic information of the data symbols. To determine whether the turbo decoder will converge or not at any particular , the extrinsic information SNR input/output relations of the inner and outer decoders are plotted on reverse axes. As an example, we consider the rate-SCCC using the eight-state constituent codes studied in <ref type="bibr" target="#b16">[17]</ref>. Figs. 13 and 14 show the extrinsic information SNR input/output relations of the inner and outer decoders at 0 dB and 0.5 dB, respectively. From these diagrams, it is clear that the decoder will converge at 0 dB and will not converge at 0.5 dB. The result is in excellent agreement with the simulation results presented in <ref type="bibr" target="#b16">[17]</ref>, where the decoder was shown to converge at 0.25 dB. It is also clear from the figures that the 0.25-dB margin was only chosen for demonstration purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Gallager LDPC Codes</head><p>In Gallager's regular LDPC codes, each data or parity symbol has the same degree (i.e., connected to exactly check nodes in the bipartite graph). For a rate code, the degree of each check node is . Therefore, each constituent decoder has inputs. In the iterative decoder, each symbol is estimated by different and independent decoders. Each check node calculates each symbol output extrinsic information from the other inputs. The input extrinsic information to any decoder is obtained from the other outputs. Table <ref type="table" target="#tab_3">IV</ref> shows the convergence thresholds for several LDPC codes obtained through our technique and the density evolution technique <ref type="bibr" target="#b9">[10]</ref>, respectively. In all the cases considered, the difference between the two estimated is within 0.15 dB.  <ref type="bibr" target="#b5">[6]</ref>. The difference between this coding scheme and the LDPC codes is that each parity symbol is involved in only one check equation. Hence, in the bipartite graph, the parity nodes and the check nodes are the same. The authors' expectation in <ref type="bibr" target="#b5">[6]</ref> was that increasing the connectivity degree would improve the distance spectrum and, hence, the performance. They found that the effect of increasing the connectivity degree is to lower the error floor and shift the waterfall threshold to a higher SNR. While the improvement in the weight spectrum is supported by the improved asymptotic performance at high SNRs, the degradation in the waterfall region with increasing connectivity was not explained.</p><p>The iterative decoder for Cheng-McEliece codes is easily accommodated in the general decoder model and analyzed via the independent Gaussian assumption technique. Assuming that the degree of each data node is , and the code rate is , then the degree of each parity/check node is and each constituent decoder will have inputs. The iterative decoder in this scheme is different from Gallager's LDPC decoder in one major aspect. Unlike the former codes case, the constituent decoders provide extrinsic information for the data symbols only. Hence, the parity symbols will be coupled with intrinsic information only. However, similar to Gallager's LDPC codes, the extrinsic information for the information symbols is obtained from the other decoders. Taking that into account, the convergence points predicted under the independent Gaussian assumption for codes with different connectivity degrees are reported in Table <ref type="table" target="#tab_4">V</ref>.</p><p>The detrimental effect of increasing the connectivity degree on the ability of the turbo decoder to converge to the ML solution is clear from the table. Since the performance in the low SNR region is largely determined by the decoder convergence, the predicted convergence points explain the degradation in performance observed in <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXTENSION TO FADING CHANNELS</head><p>Available research <ref type="bibr" target="#b9">[10]</ref> on the behavior of iterative decoding thus far has not considered the fading channel scenario. In this section, we extend our convergence analysis to certain frequency nonselective slow and fast Rayleigh fading models; the extension to Rician channels is straightforward. Perfect channel state information is assumed to be available at the receiver.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Quasi-Static Fading Channels</head><p>In this model, the fading amplitude is constant across one code word and is independent from one codeword to the next.</p><p>Hence, fading causes the effective SNR to vary from one codeword to the next according to the distribution of the square of the fading amplitude. From the AWGN analysis, it is clear that the iterative decoder will converge for a particular codeword with a fixed fading amplitude if and only if the effective SNR for this codeword exceeds the convergence threshold. Let be the fading amplitude, be the transmitted symbol energy-to-white-noise ratio, and be the minimum symbol energy-to-white-noise ratio required for iterative decoder convergence in the AWGN channel. Then, the frame error probability for the quasi-static Rayleigh fading channel is given by ( <ref type="formula">4</ref>)</p><p>The importance of this result is twofold. First, it provides a simple and general technique of characterizing the performance of graphical codes over slow-fading channels. Second, it shows that the performance of graphical codes in slow-fading channels is largely determined by the iterative decoder convergence characteristics at high as well as low SNRs. This suggests that, for slow Rayleigh-fading channels, it is more important to optimize for decoder convergence than code weight spectrum.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Fast-Fading Channels</head><p>For the fast-fading channel, each symbol is multiplied by a different and statistically independent Rayleigh fading amplitude. In this case, we modify the independent Gaussian assumption so that, even though the channel variables are no longer Gaussian, the extrinsic information variables are still assumed to be Gaussian. Under this model, Proposition 1 is still true. Essentially, the same proof shows that the SNRs of the decision statistic and the extrinsic information are both nondecreasing functions of the input SNRs, and the one SNR increases to infinity if and only if the other does. But, since the decision statistic is no longer Gaussian, it no longer immediately follows as in the AWGN case that as SNR or SNR . To repair that part of the proof, we note that where is arbitrary and By conditioning on , we can apply Proposition 2.1 to show that as the extrinsic SNR SNR . Thus, we can make by first choosing so that and then choosing SNR sufficiently large so that . This establishes the desired result that as SNR [and hence as SNR ]. The rest of the analysis in Section II regarding the existence of thresholds and then follows exactly as in the AWGN case. Empirically, it is found that the Rayleigh-fading convergence threshold is also finite and nonzero. For example, in <ref type="bibr" target="#b22">[23]</ref>, Hall et al. noted that the performance of PCCC in the fast Rayleigh-fading channel exhibits a waterfall behavior similar to that in the AWGN case but with a larger threshold value. Our analysis based on the independent Gaussian assumption as modified for the Rayleigh-fading channel predicts threshold values in excellent agreement with the simulation results of <ref type="bibr" target="#b22">[23]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>The main result established in this paper is that the performance of graphical codes in the low SNR region is governed by the convergence characteristics of the iterative decoder independent of the distance spectrum of the code. Thus, traditional optimization of the code parameters with respect to the distance spectrum will not in general improve the performance in the low SNR region. To improve the performance in this region, different optimization should be considered to allow for better convergence characteristics of the turbo decoder. This explains, for example, why more sophisticated code constructions such as SCCC which aim to improve asymptotic code performance do not outperform Berrou's original construction in the low SNR region. The simple method developed in this paper to analyze the iterative decoder convergence is based on the Gaussian approximation and yields very accurate results compared with the literature. Based on the insights obtained from such analysis, we presented an interesting construction for asymmetric PCCC that enjoys a favorable performance in the waterfall region. This construction provides a new ingredient to add to Frey and MacKay irregular PCCC design <ref type="bibr" target="#b21">[22]</ref> and improves upon the asymmetric code proposed by Takeshita et al. <ref type="bibr" target="#b17">[18]</ref>. Finally, we extended our analysis to fast-and slow-fading channels. The fast-fading scenario turns out to be very similar to the AWGN case in which decoder convergence characteristics determine the waterfall threshold, while the performance at high SNR is governed by the code weight spectrum. In contrast, for slow-fading channels, the performance of graphical codes is largely determined by the decoder convergence characteristics for all input SNRs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Analyzing the Turbo Decoder Using the Gaussian Approximation Hesham El Gamal, Member, IEEE, and A. Roger Hammons, Jr., Member, IEEE Abstract-In this paper, we introduce a simple technique for analyzing the iterative decoder that is broadly applicable to different classes of codes defined over graphs in certain fading as well as additive white Gaussian noise (AWGN) channels. The technique is based on the observation that the extrinsic information from constituent maximum a posteriori (MAP) decoders is well approximated by Gaussian random variables when the inputs to the decoders are Gaussian. The independent Gaussian model implies the existence of an iterative decoder threshold that statistically characterizes the convergence of the iterative decoder. Specifically, the iterative decoder converges to zero probability of error as the number of iterations increases if and only if the channel 0 exceeds the threshold. Despite the idealization of the model and the simplicity of the analysis technique, the predicted threshold values are in excellent agreement with the waterfall regions observed experimentally in the literature when the codeword lengths are large. Examples are given for parallel concatenated convolutional codes, serially concatenated convolutional codes, and the generalized low-density parity-check (LDPC) codes of Gallager and Cheng-McEliece. Convergence-based design of asymmetric parallel concatenated convolutional codes (PCCC) is also discussed. Index Terms-Convergence-based design, graphical codes, iterative decoding, low-density parity-check (LDPC) codes, turbo codes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .Fig. 3 .</head><label>23</label><figDesc>Fig. 2. Scattering diagram of the Gaussian approximation predicted BERs versus measured BERs for eight-state codes.</figDesc><graphic coords="3,104.34,62.28,381.60,320.76" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Extrinsic information SNR input/output relations for Berrou's 16-state.</figDesc><graphic coords="6,119.70,62.28,354.00,278.28" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. The H-metric for Berrou's 16-state code.</figDesc><graphic coords="7,114.78,62.28,360.72,291.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Comparison between simulation results and convergence thresholds for one primitive four-state and one primitive eight-state codes.</figDesc><graphic coords="9,95.88,50.34,398.64,326.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Comparison between simulation results and convergence thresholds for the best waterfall 16-state code and the best error floor 16-state code.</figDesc><graphic coords="9,102.66,389.64,384.96,333.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Extrinsic information SNR input/output relations for the 16-state and four-state codes at E =N = 0.7 dB.</figDesc><graphic coords="10,119.88,86.16,353.52,283.68" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Extrinsic information SNR input/output relation for the primitive 16-state code at E =N = 0 dB.</figDesc><graphic coords="11,116.28,62.28,357.84,292.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Simulation results for the new asymmetric code and the two symmetric codes built from the eight-state and 16-state constituent codes.</figDesc><graphic coords="12,110.70,62.28,372.00,294.48" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Simulation results for the new asymmetric code, Takeshita et al. asymmetric code, and the 16-state code with the best convergence threshold with 16 384 frame length.</figDesc><graphic coords="12,116.64,388.20,360.00,291.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Simulation results for frame length 1024.</figDesc><graphic coords="13,115.56,370.92,359.28,294.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Eight-state SCCC extrinsic information SNR characteristics: E =N = 00.5 dB.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 14 .</head><label>14</label><figDesc>Fig. 14. Eight-state serially concatenated convolutional code extrinsic information SNR characteristics: E =N = 0 dB.</figDesc><graphic coords="14,110.16,226.32,372.96,315.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="2,112.38,62.28,368.64,291.36" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="8,127.02,91.14,339.36,292.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Proposition 1 :</head><label>1</label><figDesc>Under the independent Gaussian assumption, Consider two scenarios in which only the SNR for input variable is different. Let SNR SNR denote the two different values of signal-to-noise ratio for with corresponding output SNR</figDesc><table><row><cell>the SNR</cell><cell>and SNR</cell><cell cols="3">are nondecreasing functions of</cell></row><row><cell cols="2">the input SNRs SNR</cell><cell>and SNR</cell><cell>for</cell><cell>and</cell></row><row><cell></cell><cell cols="3">. Furthermore, SNR</cell><cell>(and, thus,</cell></row><row><cell>) as</cell><cell cols="2">if and only if SNR</cell><cell></cell><cell>as</cell><cell>.</cell></row><row><cell>Proof:</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE I CONSTITUENT</head><label>I</label><figDesc>CODES FOR SYMMETRIC RATE-1=3 16-STATE PCCC WITH CONVERGENCE THRESHOLDS 0 dB</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE II CONSTITUENT</head><label>II</label><figDesc></figDesc><table /><note><p>CODES FOR SYMMETRIC RATE-1=2 16-STATE PCCC WITH CONVERGENCE THRESHOLDS 0.7 dB TABLE III CONVERGENCE THRESHOLDS FOR BEST PRIMITIVE SYMMETRIC RATE-1=3 PCCC</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE IV CONVERGENCE</head><label>IV</label><figDesc>THRESHOLDS FOR REGULAR LDPC CODES</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE V CONVERGENCE</head><label>V</label><figDesc>THRESHOLDS FOR CHENG AND MC ELIECE HIGH-RATE CODES Cheng and McEliece introduced their higher rate version of Gallager's LDPC codes in</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>In all our simulations we assumed random interleaving and 18 decoding iterations.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors wish to thank the anonymous reviewers for this careful review and the reference to S. ten Brink's work <ref type="bibr" target="#b13">[14]</ref>. They believe that their comments have significantly helped in improving the presentation of this paper.</p></div>
			</div>


			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Communicated by B. J. Frey, Guest Editor. Publisher Item Identifier S 0018-9448(01)00728-3.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Turbo decoding as an instance of Pearl&apos;s &apos;belief propagation&apos; algorithm</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Mceliece</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J C</forename><surname>Mackay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Cheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Select. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="297" to="302" />
			<date type="published" when="1998-02">Feb. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Near Shannon limit performance of low density parity check codes</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J C</forename><surname>Mackay</surname></persName>
		</author>
		<ptr target="http://131.111.48.24/mackay/homepage.html" />
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Lett</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Codes and decoding on general graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Wiberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">LinkÃ¶ping Studies in Sci. and Technol</title>
		<imprint>
			<date type="published" when="1996">1996</date>
			<pubPlace>LinkÃ¶ping, Sweden</pubPlace>
		</imprint>
	</monogr>
	<note>Ph.D. dissertation 440</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Serial concatenation of interleaved codes: Performance analysis, design, and iterative decoding</title>
		<author>
			<persName><forename type="first">S</forename><surname>Benedetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Montorsi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Divsalar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Pollara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Telecom. and Data Acquisition Progress Reps</title>
		<imprint>
			<biblScope unit="page" from="42" to="126" />
			<date type="published" when="1996-08">Aug. 1996</date>
		</imprint>
		<respStmt>
			<orgName>Jet Propulsion Lab.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Trellis constrained codes</title>
		<author>
			<persName><forename type="first">B</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mackay</surname></persName>
		</author>
		<ptr target="http://131.111.48.24/mackay/homepage.html" />
	</analytic>
	<monogr>
		<title level="m">Proc. 35th Allerton Conf. Communications, Control and Computing</title>
		<meeting>35th Allerton Conf. Communications, Control and Computing</meeting>
		<imprint>
			<date type="published" when="1997-10">Oct. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Some high rate near capacity codes for the Gaussian channel</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">F</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Mceliece</surname></persName>
		</author>
		<ptr target="http://www.systems.caltech.edu/systems/jfc/index.html" />
	</analytic>
	<monogr>
		<title level="m">Proc. 34th Allerton Conf. Communications, Control and Computing</title>
		<meeting>34th Allerton Conf. Communications, Control and Computing</meeting>
		<imprint>
			<date type="published" when="1996-10">1996. Oct</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Near Shannon limit error-correcting coding and decoding</title>
		<author>
			<persName><forename type="first">C</forename><surname>Berrou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Glavieux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Thitimajshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int. Conf. Communications</title>
		<imprint>
			<date type="published" when="1993-05">May 1993</date>
			<biblScope unit="page" from="1064" to="1070" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improved upper bounds on the performance of parallel and serial concatenated turbo codes via their ensemble distance spectrum</title>
		<author>
			<persName><forename type="first">I</forename><surname>Sason</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shamai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int. Symp. Information Theory</title>
		<meeting>IEEE Int. Symp. Information Theory<address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-08">Aug. 1998</date>
			<biblScope unit="page">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">On the theory and applications of space-time and graph based codes</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">El</forename><surname>Gamal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-05">May 1999</date>
			<pubPlace>College Park</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Univ. Maryland</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The capacity of low-density paritycheck codes under message passing decoding</title>
		<author>
			<persName><forename type="first">T</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urbanke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="599" to="618" />
			<date type="published" when="2001-02">Feb. 2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Analysis of low density codes and improved designs using irregular graphs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Luby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mitzenmacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shokrollahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Spielman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 30th Annual ACM Symp. Theory of Computation</title>
		<meeting>30th Annual ACM Symp. Theory of Computation</meeting>
		<imprint>
			<date type="published" when="1998">1998</date>
			<biblScope unit="page" from="249" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An introduction to the analysis of iterative coding systems</title>
		<author>
			<persName><forename type="first">T</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urbanke</surname></persName>
		</author>
		<ptr target="http://lcavwww.epfl.ch/ruediger/publications.html" />
	</analytic>
	<monogr>
		<title level="j">IMA Proc</title>
		<imprint>
			<date type="published" when="1999-08">1999. Aug</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Thresholds for turbo codes</title>
		<author>
			<persName><forename type="first">T</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urbanke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Int. Symp. Information Theory</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-06">June 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Trajectories of PCCC decoders</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the 3rd IEEE/ITG Symp. Source and Channel Coding</title>
		<meeting><address><addrLine>Munich, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-01">Jan. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Simulation and optimization of the turbo decoding algorithm</title>
		<author>
			<persName><forename type="first">F</forename><surname>Malardel</surname></persName>
		</author>
		<ptr target="http://www.itr.unisa.edu.au/steven/turbo/fm.ps.gz" />
	</analytic>
	<monogr>
		<title level="m">Final year project report</title>
		<imprint>
			<date type="published" when="1996-11">1996, November</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Design of provably good low density parity check codes</title>
		<author>
			<persName><forename type="first">T</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shokrollahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Urbanke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint/>
	</monogr>
	<note>to be published</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A soft-input soft-output maximum a posteriori module to decode parallel and serially concatenated codes</title>
		<author>
			<persName><forename type="first">S</forename><surname>Benedetto</surname></persName>
			<affiliation>
				<orgName type="collaboration">Jet Propulsion Lab</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Montorsi</surname></persName>
			<affiliation>
				<orgName type="collaboration">Jet Propulsion Lab</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Divsalar</surname></persName>
			<affiliation>
				<orgName type="collaboration">Jet Propulsion Lab</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Pollara</surname></persName>
			<affiliation>
				<orgName type="collaboration">Jet Propulsion Lab</orgName>
			</affiliation>
		</author>
	</analytic>
	<monogr>
		<title level="j">Telecom. and Data Acquisition Progress Repts</title>
		<imprint>
			<biblScope unit="page" from="42" to="127" />
			<date type="published" when="1996-11">Nov. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A note on asymmetric turbo codes</title>
		<author>
			<persName><forename type="first">O</forename><surname>Takeshita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">M</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Massey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D J</forename><surname>Costello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Lett</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="69" to="71" />
			<date type="published" when="1999-03">Mar. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A distance spectrum interpretation of turbo codes</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">C</forename><surname>Perez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Seghers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D J</forename><surname>Costello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Inform. Theory</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="1698" to="1709" />
			<date type="published" when="1996-11">Nov. 1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Third generation wireless communication technologies</title>
		<author>
			<persName><forename type="first">L</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Karimullah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Eroz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Hammons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Multimedia Network Technologies</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Ganesh</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">K</forename><surname>Pahlavan</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Z</forename><surname>Zvonar</surname></persName>
		</editor>
		<meeting><address><addrLine>Norwell, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="23" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A search for good convolutional codes to be used in the construction of turbo codes</title>
		<author>
			<persName><forename type="first">S</forename><surname>Benedetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Garello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Montorsi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Commun</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="1101" to="1105" />
			<date type="published" when="1998-09">Sept. 1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Irregular turbo codes. presented at 37th Allerton Conf. Communications, Control and Computing</title>
		<author>
			<persName><forename type="first">B</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mackay</surname></persName>
		</author>
		<ptr target="http://lcavwww.epfl.ch/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Design and analysis of turbo codes on rayleigh fading channels</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Select. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="371" to="377" />
			<date type="published" when="1998-05">May 1998</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
