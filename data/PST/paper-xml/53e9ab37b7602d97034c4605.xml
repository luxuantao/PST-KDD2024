<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Trust-based on-demand multipath routing in mobile ad hoc networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">X</forename><surname>Li</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Z</forename><surname>Jia</surname></persName>
						</author>
						<author>
							<persName><forename type="first">P</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">R</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">H</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">IET Information Security</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="institution">Shandong University</orgName>
								<address>
									<addrLine>High-tech Development-Zone</addrLine>
									<postCode>250101</postCode>
									<settlement>Ji&apos;nan, Shandong Province</settlement>
									<country>People&apos;s Republic of China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Trust-based on-demand multipath routing in mobile ad hoc networks</title>
					</analytic>
					<monogr>
						<idno type="ISSN">1751-8709</idno>
					</monogr>
					<idno type="MD5">6B80DD308E276B2C499FD97E48BFC584</idno>
					<idno type="DOI">10.1049/iet-ifs.2009.0140</idno>
					<note type="submission">Received on 1st August 2009 Revised on 5th April 2010</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T04:58+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A mobile ad hoc network (MANET) is a self-organised system comprised of mobile wireless nodes. All nodes act as both communicators and routers. Owing to multi-hop routing and absence of centralised administration in open environment, MANETs are vulnerable to attacks by malicious nodes. In order to decrease the hazards from malicious nodes, the authors incorporate the concept of trust to MANETs and build a simple trust model to evaluate neighbours' behaviours -forwarding packets. Extended from the ad hoc ondemand distance vector (AODV) routing protocol and the ad hoc on-demand multipath distance vector (AOMDV) routing protocol, a trust-based reactive multipath routing protocol, ad hoc on-demand trusted-path distance vector (AOTDV), is proposed for MANETs. This protocol is able to discover multiple loop-free paths as candidates in one route discovery. These paths are evaluated by two aspects: hop counts and trust values. This two-dimensional evaluation provides a flexible and feasible approach to choose the shortest path from the candidates that meet the requirements of data packets for dependability or trust. Furthermore, the authors give a routing example in details to describe the procedures of route discovery and the differences among AODV, AOMDV and AOTDV. Several experiments have been conducted to compare these protocols and the results show that AOTDV improves packet delivery ratio and mitigates the impairment from black hole, grey hole and modification attacks.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A multi-agent system (MAS) is a system composed of multiple interacting intelligent agents. One agent communicates and cooperates with other agents to achieve its goals. A mobile ad hoc network (MANET) consists of wireless mobile nodes dynamically forming a self-organised MAS in which no predefined infrastructures exist and all nodes work as both host and routers. Inter-agent communication in a MANET can be achieved by message transmission. Two nodes out of direct communication range need intermediate nodes to forward their messages. MANETs are collaborative in the sense that each node is assumed to relay packets for other nodes. A MANET can exist and work well only if nodes in the network behave cooperatively. However, because of open working environment, MANETs often suffer from attacks by selfish or malicious nodes, such as packet dropping (blackhole) attacks and selective forwarding (grey-hole) attacks. As careful selection of a dependable path may mitigate the impairment from malicious nodes, how to design a dependable routing protocol is a significant problem for a MANET.</p><p>Traditional security mechanisms rely on either authenticated identities of requesting principals or the form of credentials that authorise clients to perform certain actions <ref type="bibr" target="#b0">[1]</ref>. Generally speaking, these mechanisms rely on some underlying infrastructures, for example, public key infrastructure. However, the nature of MANETs is free of fixed infrastructures, so these mechanisms do not fit a MANET.</p><p>With authentication and encryption mechanisms, secure routing protocols <ref type="bibr">[2 -4]</ref> have been developed to ensure properties such as confidentiality and integrity. These protocols require a centralised trusted third party, which is impractical for MANETs <ref type="bibr" target="#b4">[5]</ref>. In addition, secure routing protocols usually cannot prevent malicious or compromised nodes from doing misbehaviours, which are authorised as participants to the network. Similar to human society where one person trusts another to carry out an action <ref type="bibr" target="#b5">[6]</ref>, the concept of trust can be introduced into MANETs to measure an expectation or uncertainty that an entity has about another's future behaviours. It is clear that trust relationship involves two entities (subject and object) and a specific action. The uncertainty of trust exists because subject is not sure whether the object will carry out the action or not. The trust-based routing protocols are not absolutely secure but certainly have an accurate measure of reliability in them <ref type="bibr" target="#b6">[7]</ref>.</p><p>There are two primary motivations associated with trust management in MANETs. Firstly, trust evaluation helps identify malicious entities. One entity can remember others' behaviours through evaluation history. This memory provides a method for good entities to avoid working with 'ex-convict' or suspected ones. Secondly, trust management offers a prediction of one's future behaviours and improves network performance. The results of evaluation can be directly applied as an incentive for a good or honest behaviour while a penalty for a selfish or malicious behaviour in the network. The feedback reminds network participants to act with caution.</p><p>In this paper, we introduce a simple trust model based on packet forwarding ratio to evaluate neighbours' behaviours. In the model, a node trust is represented as a weighted sum of forwarding ratio of packets and a continued product of node trusts is computed as path trust. Then we propose a novel multipath reactive routing protocol for MANETs, termed as ad hoc on-demand trusted-path distance vector (AOTDV). In this protocol, a source can establish multiple loop-free paths to a destination in one route discovery process. Each path has an evaluation vector composed of a hop count and a trust value. A destination will respond with at most k shortest paths as candidates that satisfy the trust requirements of data packets. The shortest one will be selected as the forwarding route. As an intelligent agent, each node evaluates its neighbours' behaviours and selects the shortest trusted path to forward packets. To compare the procedures of route discovery in AODV, AOMDV and AOTDV, we depict a routing example in details and perform some experiments. The experiment results show that AOTDV improves packet delivery ratio and decreases the average response time. As a trusted multipath routing protocol, AOTDV enhances the dependability of forwarding packets and alleviates the threats from malicious nodes.</p><p>Unlike existing security mechanisms based on public key infrastructure, AOTDV routing does not rely on a trusted third party to certify keys or sell/redeem tokens. Instead, AOTDV only uses forwarding ratio of packets to recognise node behaviours. The proposed routing protocol is practical to enhance the dependability of communication and detect malicious nodes in MASs. In particular, the main contributions of our work can be summarised as follows:</p><p>1. An on-demand multipath routing protocol (AOTDV) is proposed for MANETs, in which the first k shortest trusted paths are computed out as candidates during one route discovery.</p><p>2. The traditional routing protocols only care about the number of hops whereas the simple trusted protocol (ST-AODV <ref type="bibr" target="#b4">[5]</ref>) uses node trust values of next-hops to make routing choices. We consider the trust values of paths to the destination as well as the number of hops, so that the next hop selected indicates the shortest trusted path.</p><p>3. During the procedure of forwarding packets, QoS-aware path selection in candidates is established to satisfy userspecific requirements for dependability. An adaptive hopby-hop mechanism is proposed to select a forward path dynamically in terms of the trust requirement posed by a packet. <ref type="bibr" target="#b3">4</ref>. We evaluate AOTDV protocol using the NS-2 simulator and the experimental results prove that our trust model is effective. AOTDV protocol performs better than AODV and AOMDV as it gives higher delivery ratio and lower end-to-end latency with the help of the trust model.</p><p>The rest of the paper is organised as follows. Section 2 discusses the related work. Section 3 gives a simple trust model. Section 4 describes a trust-based on-demand routing protocol. Simulation results are shown in Section 5, followed by discussion in Section 6. Conclusions are drawn in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related work</head><p>Although there has been substantial work on trust models, their applicability in mobile agent systems has received limited research attention. Trust-based routing protocols combine ideas from two research fields -trust models in trust management and routing protocols for MANETs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Trust models</head><p>One of the earliest literatures about computational trust is Marsh's formalism <ref type="bibr" target="#b7">[8]</ref> that uses the outcomes of direct interactions among entities to compute situational and general trust. Situational trust is the level of trust in another entity for a specific situation, whereas general trust means overall trustworthiness in spite of the situation.</p><p>Several trust models have been developed for trust management. These models can be classified into two groups: centralised models and decentralised models.</p><p>In centralised models, trust values are maintained by a common central node or an authorised third party. The simplest method is to keep a record which is equal to the number of positive ratings minus that of negative ones. This method is used in eBay's reputation forum <ref type="bibr" target="#b8">[9]</ref>. The requirement of a trusted third party goes against the nature of MANETs.</p><p>In decentralised models, each node assigns and keeps trust/ trustworthiness values for other communicators. Most researchers <ref type="bibr">[10 -15]</ref> are advocating the use of ratings and prefer making use of rating aggregation algorithms to evaluate the trust from several aspects (e.g. CPU usage, residual energy, bandwidth etc.). However, these sophisticated models are not appropriate for MANETs where resources are limited and network topology is dynamic. Several trust models <ref type="bibr">[16 -19]</ref> have been developed for peer-to-peer systems based on shared recommendation information to establish reputation. Although these models, in principle, can be applied to routing in MANETs, recommendation information exchange will incur significant network traffic. In particular, Pirzada and McDonald <ref type="bibr" target="#b6">[7]</ref> proposed an aggregation mechanism, where nodes calculate trust according to multiple observed events including acknowledgements, packet precision, gratuitous route replies and blacklists. They have obtained promising simulation results, but we argue that similar promising effects can be obtained with a simplified trust model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Routing protocols</head><p>Traditional routing protocols in ad hoc networks can be categorised into two primary types: proactive and reactive <ref type="bibr" target="#b19">[20]</ref>. Proactive routing protocols establish and maintain routes all the time in order to avoid the latency during new route discoveries. Reactive routing protocols discover routes only when one node tries to transmit packets to another unknown-route node so as to save resources. The nodes in an ad hoc network generally have limited resources, such as bandwidth and power energy; therefore reactive routing protocols attract more interest. Perkins et al. <ref type="bibr" target="#b20">[21]</ref> proposed a reactive single path routing protocol AODV which combines the destination sequence number in DSDV <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref> with the on-demand route discovery technique in DSR <ref type="bibr" target="#b23">[24]</ref>. Unlike DSR which uses source routing, AODV is based on a hop-by-hop routing mechanism. Extended from AODV, AOMDV <ref type="bibr" target="#b24">[25]</ref> discovers multiple loop-free and link-disjoint paths. Experiments show that AOMDV achieves a remarkable improvement in the end-to-end delay. These protocols assume that all nodes are honest and cooperative.</p><p>In the area of information security, cryptographic primitives are often used to ensure properties such as confidentiality, integrity and so on. Several secure routing protocols <ref type="bibr" target="#b3">[4]</ref> with cryptography have been proposed to protect ad hoc networks, such as SAODV <ref type="bibr" target="#b1">[2]</ref> and Ariadne <ref type="bibr" target="#b2">[3]</ref>, but most of these protocols need centralised units or trusted third-parties to issue digital certificates or monitor network traffic. The common trusted authority actually violates the nature of self-organisation. Therefore these protocols are less practical for MANETs.</p><p>Recently, a new class of routing protocols in MANETs have been proposed, called trusted routing protocols, which consist of two parts: a routing strategy and a trust model <ref type="bibr" target="#b4">[5]</ref>. The selection of next hops or forward paths in a routing strategy is made according to the trust model. Trusted-DSR <ref type="bibr" target="#b0">[1]</ref> extended from DSR <ref type="bibr" target="#b23">[24]</ref> selects a forward path based on a local evaluation of the trust values of all intermediate nodes along path to the destination. The node trust is calculated through an acknowledged mechanism from destination to source. Every acknowledged packet will increase the sender node's trusts in all the intermediate nodes along the path to the destination, whereas every retransmission decreases the trusts. It is impossible for senders to know which nodes discard packets. Pirzada et al. <ref type="bibr" target="#b25">[26]</ref> evaluated the performance of three trust-based reactive routing protocols (trusted AODV, DSR and TORA) by varying the number of malicious nodes and other experiment settings. The results indicate that each trust-based routing protocol has its own advantage. Specifically, trust-based AODV routing maintains a stable throughput and surpasses TORA and DSR at higher traffic loads <ref type="bibr" target="#b25">[26]</ref>. Therefore we combine our trust model with AODV to design a trust-based multipath routing protocol.</p><p>Inspired by the literature <ref type="bibr" target="#b6">[7]</ref>, Griffiths et al. <ref type="bibr" target="#b4">[5]</ref> proposed the simple trusted AODV protocol (ST-AODV) in which the next-hop node whose trust value is greater than a constant threshold is selected as the forwarding node. The main differences between ST-AODV and our AOTDV are as follows: (i) ST-AODV is a single path routing protocol whereas AOTDV is a multipath protocol; and (ii) ST-AODV uses node trust values of next-hops to make routing choices, whereas AOTDV considers the trust values of paths as well as the number of hops. Therefore in AOTDV, the selected next hop indicates the shortest trusted path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Trust model</head><p>Trust model essentially performs trust derivation, computation and application <ref type="bibr" target="#b25">[26]</ref>. In our model, each node derives trusts in neighbours from packet forwarding ratio. During trust computation, a linear aggregation is used to estimate the overall trust in a node, and a continued product is used to compute the trust of a path. Trust applications including trust-based route discovery and route selection will be discussed in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Trust derivation</head><p>No matter what kind of trust models are used, two types of evolutions (direct trust and indirect trust) are available. Direct trust is first-hand information of neighbours and easy to obtain. Indirect trust is second-hand information about nodes, such as recommend trust from a third party. The indirect trust may incur additional communication cost for trust exchange. In order to simplify trust model, we only use the history of direct interactions among nodes to compute trust. In our trust model, passive acknowledgement is used as the single observable factor for assessing trust. Passive acknowledgement uses promiscuous mode to monitor neighbours' behaviours in the wireless radio channel, which allows a node to detect any transmitted packet in its communication range, irrelevant of their destinations.</p><p>We assume that after one node broadcasts a packet all neighbours will receive the packet correctly. However, if the distance between source and destination is beyond one hop, packets might be dropped by intermediate nodes because of unexpected causes (such as heavy traffic) or malicious attacks (such as black-hold or grey-hold attacks). Trust evaluation in a routing procedure is an assessment of forwarding behaviours of neighbours by a sender. More specifically, a node j will give its neighbour k a trust score after the node k transmits a packet sent by node j. Thus, we use packet forwarding ratio to evaluate the quality of forwarding.</p><p>Definition 1 (Forwarding ratio): Forwarding ratio is the proportion of the number of packets forwarded correctly to the number of those supposed to be forwarded. Correct forwarding means a forwarding node not only transmits a packet to its next hop node but also forwards devotedly (correct modification if required). For instance, when a malicious neighbour node forwards a data packet after tampering with data, it is not considered as correct forwarding. If the sender monitors this illegal modification, the forwarding ratio of the neighbour will decrease.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2 (Window forwarding ratio):</head><p>The window forwarding ratio FR(t) is the packet forwarding ratio in a recent window. FR(t) is computed as follows</p><formula xml:id="formula_0">FR(t) = N C (t) -N C (t -W ) N A (t) -N A (t -W ) , t . W N C (t) N A (t) , t ≤ W ⎧ ⎪ ⎪ ⎨ ⎪ ⎪ ⎩<label>(1)</label></formula><p>where N C (t) represents the cumulative count of correct forwarding and N A (t) signifies the total count of all requesting before time t. The count of correct forwarding in a time window (from time t 2 W to t) is equal to</p><formula xml:id="formula_1">N C (t) 2 N C (t 2 W )</formula><p>, where W represents the width of the time window. We compute FR(t) only using the forwarding count and requesting count in the recent W time units. The history records out of the recent window are discarded.</p><p>In MANETs, all packets can be classified into two groups: control packets and data packets. Control packets are used for route request (discussed in Section 4.4.1), route reply (discussed in Section 4.4.2), route update (discussed in Section 4.5.1) and route error (discussed in Section 4.5.2). The accuracy of control packets plays a vital role in establishment of accurate routes in the network. So FR(t) is divided into two parts: control packet forwarding ratio, denoted by CFR(t), and data packet forwarding ratio, denoted by DFR(t). They are computed using forwarding count of control packets and data packets according to formula (1) respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computation of node trust</head><p>The trust of a node j in another node k (node trust for short) is a measure to ensure that packets sent by node j have actually been forwarded by node k. Two trust factors [CFR(t) and DFR(t)] are assigned weights in order to determine the overall trust value of a node. The direct trust in node k by node j is represented as T jk and is given by the following formula</p><formula xml:id="formula_2">T jk (t) = w 1 × CFR jk (t) + w 2 × DFR jk (t)<label>(2)</label></formula><p>where CFR jk (t) and DFR jk (t) represent control packet forwarding ratio and data packet forwarding ratio observed by node j for forwarding node k at time t, respectively. The weights w 1 and w 2 (w 1 , w 2 ≥ 0 and w 1 + w 2 ¼ 1) are assigned to CFR and DFR, respectively.</p><p>After each interaction, node j checks whether the neighbour k forwards the packet correctly. If so, the trust value T jk increases. Otherwise, T jk decreases. In our trust model, trust values are limited in a continuous range from 0 to 1 (i.e. 0 ≤ T jk ≤ 1). The trust value of 0 signifies complete distrust whereas the value of 1 implies absolute trust. An example of trust levels of nodes are listed in Table <ref type="table" target="#tab_0">1</ref>. If there is no interaction between two nodes, the initial trust value is set to 0.75 (less trustworthy node). That is, we adopt a limited optimistic view on unknown nodes. A threshold h, termed as the black-list trust threshold, is used to detect malicious nodes. In other words, if the trust value of a node is smaller than h, it will be regarded as a malicious node.</p><p>Each node, based upon its personal experiences, rewards collaborative nodes for their benevolent behaviours and punishes malicious nodes for their malevolent actions. To minimise the risk of transmission failure, nodes should interact with the trusted ones whose trust value is above the trust requirements of packets <ref type="bibr" target="#b35">[37]</ref>.</p><p>The sender places itself in promiscuous mode <ref type="bibr" target="#b26">[27]</ref> after the transmission of any packet so as to overhear the retransmission by the forwarding node. Using this method, a node can know whether the packet that has been sent to a neighbour is indeed forwarded or not. The direct trust values can also be shared among neighbours using a higher layer, such as reputation exchange protocol <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Computation of path trust</head><p>When a source discovers a path to the destination with the help of forwarding nodes, the trust value of the path (path trust) should be computed according to the trust values of nodes along the path. Considering the axiom <ref type="bibr" target="#b28">[29]</ref> that concatenation propagation of trust does not increase trust, path trust should not be more than the trust values of intermediate nodes. So, at time t, the trust of a path P denoted by T P (t) is equal to the continued product of node trust values in the path, that is</p><formula xml:id="formula_3">T P (t) = P({T jk (t)|n j , n k [ P and n j n k and n k = N d })<label>(3)</label></formula><p>in which, n j and n k are any two adjacent nodes among the path P, n j n k means that n k is the next-hop node of n j and N d is the destination node in the path P.</p><p>In particular, the node trust in the destination N d by the next node (say node r) to the destination node is not required in formula <ref type="bibr" target="#b2">(3)</ref>. The trust T rd denotes the weighted ratio of N d forwarding packets from node r. The destination N d should not forward the packets for itself, so T rd is not used to compute the path trust to node d. If the destination node d is a neighbour of the source node s, the path trust is equal to 1 because we assume that all packets transmitted in one hop will reach the expected neighbour (node d ).</p><p>As shown in Fig. <ref type="figure" target="#fig_0">1a</ref>, the directed edge from node A to node B denotes a node trust (T AB ¼ 0.8). The trust value of path P (A, B) is equal to 1 (T P (A,B) ¼ 1). The trust value of path P(A, B, C, D) are equal to 0.72 (i.e. T P (A,B,C,D) ¼ T AB × T BC ¼ 0.8 × 0.9 ¼ 0.72). Fig. <ref type="figure" target="#fig_0">1b</ref> shows a complex graph with multiple branches. There are three paths from A to F, in which the path P (A, C, E, F) is the most trustworthy path.</p><p>The computation of path trust based on a continued product takes into account trust values of all intermediate nodes. Path trust denotes a joint probability at which packets will be forwarded if they are sent along the path. The computation of path trust complies with the opinion in information theory: the information cannot be increased via propagation <ref type="bibr" target="#b28">[29]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Trust-based on-demand routing protocol</head><p>In this section, we describe an on-demand routing mechanism for ad hoc networks based on the proposed trust model. First, the structures of routing tables and trust record lists are depicted. Then, the procedures of route discovery and maintenance are discussed. Finally a sequence number method is given to avoid the routing loop.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Routing table</head><p>A routing table is used to store the routes to other nodes in an ad hoc network. Each node maintains a routing table composed of multiple routing entries. AOTDV adopts a hop-by-hop routing mechanism, in which the source is not expected to know all nodes in the path to a destination; it is sufficient for the source to know which neighbour is the next hop. When a data packet is going to a destination, it refers to local routing table to find the next hop (say node j). Once it reaches node j, it refers to node j 's routing table for the next hop to the destination. This process will continue until it reaches the destination.</p><p>Any node only stores routes to nodes that have interacted with it recently, not all routes in history because network topology of a MANET changes dynamically. The mobile nodes may join or quit the network at any time. An unused route to a destination in a certain period is considered invalid and will be deleted from the routing table. Fig. <ref type="figure" target="#fig_1">2</ref> shows the structure of routing table entries for AODV <ref type="bibr" target="#b20">[21]</ref>, AOMDV <ref type="bibr" target="#b24">[25]</ref> and AOTDV. The main difference between AOMDV and AOTDV is that path trust is added to the route list. A routing entry in AOTDV consists of the following fields:</p><p>1. Destination: the identifier of destination node.</p><p>2. Destination sequence number: the greatest known sequence number for destination denotes freshness of the route. It is used to avoid routing loop (discussed in Section 4.6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>Next hop: a neighbour node, to which a packet is sent.</p><p>4. Hop count and path trust: the two metrics compose an evaluation vector of a path. Different from single cost factor (e.g. AODV and AOMDV only use hop count as the cost), here the cost is hop count and trust constraint. The selected path is the shortest one in the paths which satisfy the packet trust requirement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Expiration timeout (ET):</head><p>the time after which the route is considered to be invalid. Each time a route is used to transmit www.ietdl.org data, the timeout for the route is reset to the current time plus a constant (active route timeout).</p><p>Multiple routes leading to the same destination are arranged in ascending order of HopCount, that is HopCount 1 ≤ HopCount 2 ≤ • • • ≤ HopCount n . If two paths have the same HopCount, the one with greater PathTrust precedes, that is</p><formula xml:id="formula_4">∀ HopCount i ¼ HopCount i+1 , PathTrust i ≥ PathTrust i+1 .</formula><p>Table <ref type="table" target="#tab_1">2</ref> gives an example of routing tables, in which there are two paths to node 5 and their next-hops are 1 and 2, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Trust record list</head><p>Trust record list is introduced to remember trust information. Each node will maintain a trust record for every neighbour to which packets have been sent for forwarding. A trust record listed in Table <ref type="table">3</ref> contains a node ID, node trust, two integer counters of N C and N A for control packets, two integer counters of N C and N A for data packets and a packet buffer. The packet buffer is used to record all packets sent recently. It is a circular buffer, which means that the buffer will cycle and overwrite the oldest packet if it is not removed in time.</p><p>Before sending a packet, a sender increases N A for control packets or N A for data packets by 1. For a broadcast packet including a route request packet or a route error packet, the sender increases N A for control packets of all records in its trust record list except N A for control packets of the node where the packet comes from. For a unicast packet, the sender only adds 1 to N A for control packets of the nexthop when the packet is a route reply packet, or adds 1 to N A for data packets of the next-hop when the packet is a data packet. To detect whether a packet is successfully forwarded, the sender will not delete the packet immediately after it is being sent. The packet will be stored in the packet buffer and wait for acknowledgement. A retry counter RetryCnt is used to remember retransmission number of every packet. If the sender in the promiscuous mode monitors that the packet is forwarded correctly, it will be removed from the packet buffer and the corresponding counter of correct forwarding (N C ) is increased by 1. The sender can update the node trust in the neighbour according to formulae (1) and <ref type="bibr" target="#b1">(2)</ref>. If the difference between the new value of node trust and the last value is greater than or equal to a threshold z, the node will broadcast a route update packet to its neighbours. The procedure will be discussed in Section 4.5.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Routing strategy</head><p>As shown in Fig. <ref type="figure" target="#fig_3">3</ref>, the procedure of AOTDV routing is given as follows:</p><p>Step 1: Before a source s send a data packet to another node, say node d, the source looks up in the local routing table a route entry to node d. The qualified route should meet the trust requirement of the data packet. In other words, PathTrust of the qualified route is greater than the requirement of the data packet. If such routes are found, go to step 3.</p><p>Step 2: If there is not such a route, node s initiates a route discovery for d. If one or more paths are discovered, a route  entry for these paths will be created and inserted into the routing table of node s.</p><p>Step 3: Node s selects the route with the smallest hop count in the qualified routes.</p><p>Step 4: If not a qualified route is selected, node s will return no qualified routes.</p><p>Step 5: If a qualified route is selected (assume that the selected next hop is node n), node s increases N A for node n by 1, inserts the data packet into its trust record list, sets its retry counter to 0 and sends the packet. And then node s listens to the radio channel and checks whether the packet will be forwarded correctly by node n.</p><p>Step 6: If the packet is forwarded correctly by node n, node s increases N C for node n by 1 and removes the packet in its trust record list. The procedure is over.</p><p>Step 7: If the packet is not forwarded correctly and its retry counter is less than 1, node s will increase the counter by 1 and retransmit the packet to node n. Go to step 6.</p><p>Step 8: If the counter is greater than or equal to 1, node s will detect malicious nodes according to its local trust record list and look for other valid routes in the routing table. Go to step 2.</p><p>In malicious nodes detection, if the node trust of a neighbour is smaller than the black-list trust threshold h, the neighbour will be regarded as a malicious node, and then be moved into a black list.</p><p>In particular, every node maintains a local black list. A malicious node in a black list is excluded by its neighbour holding the black list. That is, the packets from a malicious node will not be forwarded by the neighbour; meanwhile, the neighbour will not send packets to the malicious node except broadcast packets. If a node is evaluated very low by all its neighbours, any reply it gives to route requests is discarded, and any request it initiates is ignored. In other words, when a node exists in the black lists of all its neighbours, it will be excluded from the local network. If the node moves to a new sub-network, it will be regarded as a new comer with the initial trust value.</p><p>AOTDV is an on-demand multipath protocol, which tries to find multiple paths as candidates in one route discovery to reduce route discovery attempts. Only when all path candidates break or dissatisfy the trust requirement of a data packet, will one node try to discover a new route.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Route discovery and path selection</head><p>A route discovery is launched when no trusted routes exist. The node will initiate a network-wide flood by broadcasting a route request packet and wait for route reply packets. Every node maintains two monotonically increasing counters: a sequence number and a broadcast ID. Sequence number is used to supersede stale cached routes <ref type="bibr" target="#b20">[21]</ref>. Broadcast ID is incremented whenever the source issues a new RREQ , RUPD or RERR packet. The first six fields are similar to the corresponding ones in AODV <ref type="bibr" target="#b20">[21]</ref>. If the source does not have a route to the destination, DestSequenceNo is set to 0. If the source has a route, but its trust value is smaller than the trust requirement, the source will set DestSequenceNo of the RREQ to DestSequenceNo in its routing table. We add two fields -Required Trust (RT) and Actual Trust (AT). We use RT to represent the path trust value required by the data packet, which is set by the source and remains unchanged during the flood. The field AT denotes the continued product of trust values of nodes that the RREQ has passed in the route discovery. It is initialised to 1 by the source and varies with the transmission of the packet.</p><p>When an intermediate node j receives an RREQ from a neighbour k,</p><p>Step 1: It creates a route entry to node k with PathTrust as 1 if there is not a route to node k in its local routing table.</p><p>Step 2: It checks whether one copy of the same RREQ has been received. If so and the later copy has both greater HopCounter and less path trust (that is, the later path is farther and less trustworthy than the existing paths), the RREQ will be discarded and the procedure ends; otherwise, go to step 3.</p><p>Step 3: If node k is not the source, node j creates a reverse route to the source using the previous hop (node k) of the RREQ as the next hop. The path trust of the reverse route entry is set to AT×T jk when T jk is known, or min(AT, 0.75) when T jk is unknown.</p><p>Step 4: If a valid route to the destination is available and SequenceNumber of the route is greater than the DestSequenceNo in the RREQ , node j generates an RREP to node k.</p><p>Step 5: Otherwise, node j modifies the AT of the RREQ using AT × T jk when T jk is known, or min(AT, 0.75) when T jk is unknown. Then node j increases HopCounter by one and propagates the RREQ to all its neighbours.</p><p>If an intermediate node has a route entry for the desired destination, it determines whether the route is fresh by comparing the destination sequence number in its own route entry with the one in the RREQ. If the RREQ's sequence number for the destination is greater than or equal to that in the route entry, the intermediate node should not use its recorded routes to respond to the RREQ. Instead, it rebroadcasts the RREQ.</p><p>When the destination d receives an RREQ , it will compare the DestSequenceNo in the RREQ with the sequence number, say SN d , maintained in node d. If DestSequenceNo is equal to SN d , the destination will increase SN d by 1. If DestSequenceNo is smaller than SN d , the destination preserves SN d . And then the destination decides whether to send back a route reply packet according to the condition discussed in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2">Route reply:</head><p>The intermediate node replies to an RREQ only when it has a route with a sequence number that is greater than that contained in the RREQ. If it does have a fresh route to the destination and the RREQ has not been processed previously, the node unicasts a route reply (RREP) packet back to its neighbour from which it received the RREQ. An RREP packet contains the following information: kSourceAddr, SourceSequenceNo, DestAddr, DestSequenceNo, HopCounter, LifeTime, RequiredTrust, ActualTrustl.</p><p>The first six fields are similar to the corresponding ones in AODV <ref type="bibr" target="#b20">[21]</ref>. The field RequiredTrust (RT) is equal to the RT in the RREQ. The field ActualTrust (AT) in an RREP denotes the continued product of trust values of nodes that the RREP passed during the process of route reply. And it is initialised to 1 by the destination.</p><p>If an intermediate node has multiple paths to the destination, it will reply two copies of RREP at most, one of which has the smallest hop count and the other has the greatest trust value.</p><p>If the destination receives multiple copies of RREQ , it will reply the first k paths at most, whose path trust values are greater than or equal to the RequiredTrust of the RREQ and which come from different neighbours of the destination. Here, we assume that an earlier-arrived packet comes along a shorter path. If several path trust values are smaller than the RequiredTrust, the destination will reply at most k of the shortest paths from different neighbours. The RREP contains the latest sequence number of the destination. The parameter k is used to control the number of RREPs and prevent an RREP storm. Nasipuri et al. <ref type="bibr" target="#b29">[30]</ref> concluded that additional routes beyond a few provide only marginal benefit. So we assign 3 to k in our experiments.</p><p>If an intermediate node receives an RREP, it will unicast the RREP through the route whose PathTrust is not less than the RequiredTrust of the RREP and whose HopCount is the minimal in all paths to the source. As the RREP travels back to the source, each node along the path sets up a forwarding route to the destination and refills its ET for routes to the source and the destination.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.3">A routing example:</head><p>In ad hoc networks on battlefields or business applications, different data have different requirements for importance and trust levels <ref type="bibr" target="#b35">[37]</ref>. Generally, the more important data are, the more secure and trusted routes are needed. An example of three trust levels is listed in Table <ref type="table" target="#tab_2">4</ref>. At the beginning of route discovery, the trust value required by a packet is assigned to RequiredTrust of the request packet. Fig. <ref type="figure" target="#fig_4">4a</ref> shows the network topology and node trust values at a moment. The assumptions in the example are listed as follows:</p><p>1. All nodes do not have any route to node D while node A tries to send a data packet to node D.</p><p>2. The packets require the trust of a path more than 0.7.</p><p>3. The sequence numbers of all nodes are equal to 5 and the BroadcastID of node A is equal to 8. No matter which one of AODV <ref type="bibr" target="#b20">[21]</ref>, AOMDV <ref type="bibr" target="#b24">[25]</ref> or AOTDV is adopted, node A will initiate a route discovery for node D and broadcast an RREQ to its neighbours.</p><p>Consider the procedure of the route discovery in AODV and AOMDV. The RREQ packet in AODV includes kBroadcastID¼8, SourceAddr ¼ A, SourceSequenceNo ¼ 5, DestAddr ¼ D, DestSequence No ¼ 0, HopCounter ¼ 0l. The RREQ in AOMDV carries an additional field, called FirstHop, to indicate the first hop (a neighbour of the source) taken by the RREQ. The FirstHop of the RREQ along the path P(A, B, C, D) will be set to B. If there are multiple paths between an intermediate node and the node A, the intermediate node will receive multiple copies of the RREQ. Only the first arrived RREQ copy is forwarded in AODV and AOMDV. In the example, node B only forwards the RREQ from node A. Node F only forwards the first arrived copy of the RREQ from node B or node E. Assume that the copy from node E arrives at node F earlier. When intermediate nodes receive the RREQ , they will create a reverse route to the last-hop node and the source node A. One difference between AODV and AOMDV is that node B only creates one reverse path P(B, A) to node A in AODV whereas it creates two reverse paths P(B, A) and P(B, F, E, A) in AOMDV. Node F will also create two reverse paths to node A in AOMDV. Each time the RREQ passes an intermediate node, its HopCouter is increased by one. Two copies of the RREQ will arrive at the destination node D if no malicious nodes exist in the network. The destination D will receive two copies of the RREQ in AODV or AOMDV, in which one copy goes along the path P(A, B, C, D) and the other passes the path P(A, E, F, G, D). We assume that the copy along the former path arrives earlier because the hop count of the former (3) is less than the one of the latter (4). Node D only replies the earlier copy in AODV, whereas it replies the two copies in AOMDV because the two paths are link-disjoint <ref type="bibr" target="#b24">[25]</ref>. At last, in AODV, the source node A receives one RREP from node B and creates a route to node D along the path P(A, B, C, D), whereas in AOMDV it receives two RREP packets and creates two routes along the path P(A, B, C, D) and the path P(A, E, F, G, D).</p><p>Next, we describe the discovery procedure in AOTDV. Node A broadcasts the RREQ carrying two additional fields: RequiredTrust(0.7) and ActualTrust(1). After node B receives the RREQ from node A, it will not only create a reverse route to node A but also rebroadcast the RREQ to its neighbours. In the RREQ transmitted by node B, ActualTrust is equal to T P (B,A) , that is ActualTrust ¼ 1. Node B will also receive another copy of the RREQ from node F, but the copy will be discarded because the trust of the path P(B, F, E, A), T P(B, F, G, A) ¼ T P(F, E, A) × T BF 1 × 0.9 ¼ 0.9 is smaller than that of the path P(B, A) T P(B, A) ¼ 1, while path P (B, F, E, A) is longer. After node B receives the latter copy of the RREQ , it will create a route to node F and update the ET of the existing routes. The ET of the route to node A is changed to 7 because two units of time have elapsed. The routing table after node B receiving the second copy of the RREQ is showed in Fig. <ref type="figure" target="#fig_4">4b</ref>. The node F will successively receive the RREQ from node B and node E. There are two cases for node F. Case (1): if node F receives the RREQ from node B earlier, it will broadcast the RREQ. In the RREQ , HopCounter is changed to 2 and ActualTrust is updated to ActualTrust × T FB (i.e. 1 × 0.8). After receiving the second copy of the RREQ from node E, node F will also broadcast it because the latter copy indicates a path with greater trust (T P (F,E,A) ¼ 1) compared with the former one (T P (F,B,A) ¼ 0.8). Case (2): if node F receives the RREQ from node E earlier, it will  broadcast the RREQ to node G. However, the copy of the RREQ from node B will be discarded because the two paths have the same hop count and the latter P(F, B, A) has smaller path trust value than the former P (F, E, A). The two cases may happen in theory, but we assume that case (2) occurs in the next discussion for simplification.</p><p>One copy of the RREQ will be forwarded by node C whereas another copy will be forwarded by node G. After receiving the first copy from node C, the destination D creates a route to node C and a route to node A and unicasts an RREP to node C. After one unit of time, node D receives the second copy of the RREQ from node G and then creates a route to node G. The trust value of P(D, G, F, E, A) is equal to 0.81 and it is greater than that of P (D, C, B, A). Therefore node D will create another route to node A, the next hop of which is node G.</p><p>At this moment, the routing table of node D is shown in Fig. <ref type="figure" target="#fig_4">4c</ref>. Then, node D will unicast an RREP to node G. After receiving the RREP from node C, node B appends a route to node C and a route to node D to its routing table. As shown in Fig. <ref type="figure" target="#fig_4">4d</ref>, the route entry to node D is kNextHop¼C, HopCount¼ 2, PathTrust ¼ 0.9, ExpirationTimeout ¼ 9l. At last, node A receives two copies of the RREP from nodes B and E, and creates two routes to node D. After node A receives the second copy, its routing table is shown in Fig. <ref type="figure" target="#fig_4">4e</ref>, in which one route entry (named r 1 ) is kNextHop¼B, HopCount ¼ 3, PathTrust ¼ 0.72, ExpirationTimeout ¼ 7l, and the other (named r 2 ) is kNextHop¼E, HopCount ¼ 4, PathTrust ¼ 0.81, ExpirationTimeout ¼ 9l.</p><p>After the route discovery, node A finds two trusted paths to node D and their trusts are greater than the requirement (0.7). Node A will choose node B rather than node E as the next hop because the route r 1 has shorter distance than the route r 2 . Node B receives the packet from node A and looks a shortest path up in its routing table to node D. Node B will select node C as the next hop to forward the packet. Finally, the packet comes along the path (A B C D) to its destination. If another data packet requires a path to node D with path trust value not less than 0.8, the path (A E F G D) will be selected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Route maintenance</head><p>The route maintenance in AOTDV is similar to that in AODV. A node maintains and updates its routing table when receiving an RREQ , RREP or route error (RERR) packet. In addition, a new route update (RUPD) packet is used to update the hop count and path trust of a route.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">Route update:</head><p>An RUPD packet contains the following fields: ,BroadcastId, SourceAddr, Source SequenceNo, UpdateDestAddr, UpdateDestSequenceNo, UpdateHopCounter, UpdatePathTrust., where UpdateHop Counter represents the count of nodes in the path and UpdatePathTrust denotes the new trust value of the path from SourceAddr to UpdateDestAddr.</p><p>If the increase or decrease of trust in node k by node j is greater than or equal to the trust update threshold z, that is DT jk ≥ z. Node j will broadcast an RUPD packet to its neighbours. First, node j looks up in the routing table the set of routes X in which the next hop is node k and destination is not node k. Node j update all path trust values in the set X. Then, node j broadcasts an RUPD packet in which UpdateDestAddr is the destination ID passed by node k and UpdateDestSequenceNo is SequenceNumber of the destination in j's routing table. UpdatePathTrust in the RUPD is set to the new value of PathTrust in the route.</p><p>When a node i receives an RUPD packet, it will check whether its UpdateDestAddr is node i. If so, the RUPD packet will be discarded. Otherwise, node i checks whether any route to UpdateDestAddr exists in its routing table. If not, node i adds a new route entry to UpdateDestAddr and discards the RUPD. If a route to the UpdateDestAddr exists, node i refreshes its routing table and broadcasts an RUPD in which the source is node i and other fields are set according to the updated route entry.</p><p>For instance, we set the update threshold z to 0.1. If the node B in Fig. <ref type="figure" target="#fig_4">4a</ref> detects that trust T BC is changed from 0.9 to 0.8, it will look up in its routing table those routes in which the next hop is node C and the destination is not node C. In Fig. <ref type="figure" target="#fig_4">4d</ref>, there is only one route meeting the two conditions. The destination of the route is node D. So, node B broadcasts an RUPD with UpdateDestAddr ¼ D and UpdatePathTrust ¼ 1 × 0.8 ¼ 0.8. After node A receives the RUPD, it computes a new PathTrust of the route to node D as UpdatePathTrust(0.8) × T AB (0.8) and changes PathTrust to 0.64.</p><p>Broadcasting route update packets in case of a trust value increase could help to reduce the count of route discovery. For example, in Fig. <ref type="figure" target="#fig_4">4e</ref>, there are two routes to node D in the routing table of node A: route 1 (A, B, . . . , D) and route 2 (A, E, . . . , D). Assume the trust update threshold z, is set to 0.5. If T EF is changed from 0.9 to 0.95, node E will broadcast a route update packet (UpdatePathTrust ¼ 0.855) to node A. After receiving the route update packet, node A will change the path trust (PT) of route 2 with from 0.81 to 0.855(UpdatePathTrust × T AE ¼ 0.855 × 1). If there is a new packet from A to D which requires trust value above 0.85, the node A will choose node E as next hop. If there no route update packets in case of a trust value increase, node A has not known the change in path trust and has to launch a new route discovery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Route error:</head><p>When a link failure is detected (by a link layer feedback, for example), an RERR is sent back to all sources using that broken link. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>www.ietdl.org</head><p>An RERR packet contains the following fields: ,BroadcastId, SourceAddr, SourceSequenceNo, DestCount, UnreachableDestList., where DestCount represents the count of unreachable nodes and UnreachableDestList is composed of the address and the sequence number of unreachable nodes in the source node's neighbours.</p><p>The corresponding route entries are removed by an RERR along its way. Only when there is not a qualified route entry to the destination that a node needs to send packets to, the node initiates a new route discovery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Loop freedom</head><p>All protocols using broadcast to discover routes will encounter routing loops. For example, an intermediate node j broadcasts an RREQ to its neighbours. A neighbour, say node k, receives the RREQ, creates a reverse path to the source via node j, and broadcasts it, which in turn is heard by node j. If node j accepts the RREQ and forms a reverse path to the source via node k, this will form a loop route. When more than one path exists from a source s to an internal node i, multiple copies of the RREQ packet will arrive at node i. Node i forwarding all such copies will lead to routing loops because node i could re-broadcasts the same copy of RREQ that has been forwarded before.</p><p>Sequence numbers in AODV play a key role in ensuring loop freedom <ref type="bibr" target="#b24">[25]</ref>. Therefore in order to avoid any possibility of loops, every node maintains a monotonically increasing sequence number for itself. It also maintains the highest known sequence numbers for each destination in the routing table (called "SequenceNumber" in Section 4.1). Destination sequence numbers are tagged on all routing packets, thus providing a mechanism to compute the relative freshness of two copies of routing packets generated by two different nodes for the same destination.</p><p>Only when having received a fresh control packet of RREQ or RREP, a node will create a reverse path to the source or a forward path to the destination. A node should not create or update a route on the arrival of an old control packet. Assume that a node j receives a control packet to a destination d ( d = j ) from a neighbour k. The route update rule above is invoked on receiving an RREQ or an RREP packet. Lines 1, 8 and 9 of the route update rule ensure loop freedom (see the Appendix). The protocol only allows accepting alternate routes with smaller hop count or ones with higher path trust.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experimental results</head><p>To evaluate the performance of AOTDV, AODV <ref type="bibr" target="#b20">[21]</ref> and AOMDV <ref type="bibr" target="#b24">[25]</ref>, we have conducted a comprehensive test using NS-2 network simulator <ref type="bibr" target="#b30">[31]</ref>. All experiments are carried out on a PC machine with a Pentium 4 processor (2.4 GHz) and 2 GB main memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experiment setup</head><p>NS-2 simulator (Version 2.34) is used to evaluate the performance of these on-demand routing protocols in different conditions. The distributed coordination function of IEEE 802.11 <ref type="bibr">[32]</ref> for wireless LANs is adopted as the MAC layer protocol. We take an unslotted Carrier Sense Multiple Access protocol with Collision Avoidance <ref type="bibr" target="#b31">[33]</ref> to transmit data packets as well routing packets. Within a rectangular field of 1000 × 1000 m, we dispersed 50 nodes randomly whose transmission radius of every node in one hop is fixed at 250 m. The node mobility uses the random waypoint model <ref type="bibr" target="#b32">[34]</ref> in which each packet starts its journey from a location to another at a randomly chosen speed. A maximum speed of 0 m/s implies that the MANET is a static network. Once the destination is reached, another destination is randomly chosen after a pause time. The fixed simulation parameters in NS-2 are listed in Table <ref type="table" target="#tab_5">5</ref>.</p><p>Table <ref type="table" target="#tab_6">6</ref> shows the simulation parameters in AOTDV which are set as follows:</p><p>1. Trust update threshold z is set between 0.02 and 0.1.</p><p>2. The black-list trust threshold h is set between 0.1 and 0.5. <ref type="formula" target="#formula_0">1</ref>) is set to 300 s. Packet forwarding ratio is computed by the cumulative count of correctly forwarded packets and the number of all requests from the beginning. The weights for control packets and data packets would be set according to two settings: (1) w 1 ¼ 0.6 and w 2 ¼ 0.4; (2) w 1 ¼ 0.5 and w 2 ¼ 0.5. In setting (1), the forwarding ratio of control packets is considered more important than that of data packets. In setting (2), they have equal importance. Accordingly, AOTDV with setting (1) and ( <ref type="formula" target="#formula_2">2</ref>) is represented as AOTDV-1 and AOTDV-2, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The constant W (the width of window) in formula (</head><p>Malicious nodes can launch modification attacks, greyhole attacks or black hole attacks. In the experiments, malicious nodes carry out modification attacks by altering source addresses in the control packets or data packets. In grey-hole attacks, malicious nodes selectively forward data packets at a ratio set to a constant of 30%. In black hole attacks, malicious nodes drop all data packets, but deliver route request and reply packets devotedly in order to participate in data transmission. The fractions of modification, grey hole and black hole attacks are 30, 40 and 30%, respectively. www.ietdl.org</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>222</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Performance metrics</head><p>We use five metrics to evaluate the performance of the routing protocols, in which the first two metrics are the most important for best effort route and transmit protocols.</p><p>1. Packet delivery ratio: or packet throughput, the fraction of the data packets delivered to destination nodes to those sent by source nodes.</p><p>2. Average end-to-end latency: the average time taken by the data packets from sources to destinations, including buffer delays during a route discovery, queuing delays at interface queues, retransmission delays at MAC layer and propagation time.</p><p>3. Routing packet overhead: the ratio of the number of control packets (including route request/reply/update/error packets) to the number of data packets.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.</head><p>Detection ratio: the ratio of the number of nodes whose behaviour (malicious or benevolent) is identified correctly to the actual number of such nodes in the network. This metrics is only used to evaluate the performance of AOTDV under different settings.</p><p>To decrease the disturbance of random error, every experiment repeats 50 times and the average experiment results are computed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Test 1: varying node speeds</head><p>In the first test, we compare AOTDV with AODV and AOMDV as the maximum speed of nodes varies from 0 to 30 m/s. As shown in Fig. <ref type="figure" target="#fig_8">6a</ref>, the delivery ratios of AODV and AOMDV decline remarkably as nodes speed up whereas the delivery ratios of AOTDV-1 and AOTDV-2 decrease gently. The differences become more apparent at higher speeds. This advancement of AOTDV can attribute to the improved probability of node behaviour detection because of more interactions. Under a lower speed (speed , 10 m/s), both AOTDV and AOMDV can make use of the multipath feature, which elevates the probability of successful delivery to a trustworthy node. In contrast, a node in AODV only maintains one route to a destination and is unable to improve packet delivery in case of route break. AOTDV-1 has higher delivery radios than AOTDV-2 because the former pays more attention to control packets and alleviates the impacts of malicious nodes in route discoveries.</p><p>Figs. <ref type="figure" target="#fig_8">6b</ref> and<ref type="figure">c</ref> illustrate that the average end-to-end latency and routing packet overhead in these protocols rise with the increase of maximum speed. At higher speeds, route entries become invalid more quickly and thus source nodes initiate more route rediscoveries before sending data. At the highest speed of 30 m/s, the average latency and routing packet overhead reach their peaks, respectively. AOTDV has a little lower average latency (2-6 ms) than AOMDV when the speed is greater than 5 m/s. The routing overhead in AOTDV and AOMDV remains comparatively lower than that in AODV. Because multiple paths are found in one route discovery, the frequency of route discovery is smaller in AOTDV and AOMDV than in AODV. The overhead in AOTDV is higher than that in AODV and AOMDV.</p><p>There are two reasons for the higher overhead: (i) more RREQ and RREP packets need to be sent for qualified routes to meet trust requirement in AOTDV, and meanwhile, trust requirement is not considered in AODV and AOMDV; and (ii) the additional route update packets increase the amount of control packets and the routing packet overhead in AOTDV.</p><p>As shown in Fig. <ref type="figure" target="#fig_8">6d</ref>, the path optimality of these protocols degrades as the speed increases. AOTDV has smaller path optimality than AODV and AOMDV. It is observed that the actual paths may not be the best available paths because of the fact that in AOTDV intermediate nodes make routing selection considering hop count and trust value. Sometime only longer paths have satisfied trust demands. They reduce the path optimality and also increase a little latency of the packet transmission.</p><p>The detection ratio of AOTDV increases with node speed as shown in Figs. <ref type="figure" target="#fig_8">6e</ref> and<ref type="figure">f</ref>. We can observe that when the nodes move faster, the number of interactions between nodes increases gradually. This leads to higher detection ratios of both malicious nodes and benevolent nodes. In general, AOTDV-1 is a little better than AOTDV-2 in terms of detection ratio. This attributes to the greater weight of control packets. Especially, at higher speed, AOTDV-1 has better detection ratios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Test 2: varying number of malicious nodes</head><p>In test 2, we evaluate these protocols by varying number of malicious nodes. When there are no malicious nodes, the packet loss rate is about 1% in AODV, AOMDV and AOTDV. As shown in Fig. <ref type="figure" target="#fig_9">7a</ref>, the delivery ratios in all protocols degrade sharply as the number of malicious nodes increases. The delivery ratio of AOTDV drops from 99 to 54% as the number of malicious nodes varies from 0 to 20. Lower packet delivery ratio means less network throughput. Malicious nodes essentially limit interactions between nodes in the network. However, in AOTDV, intermediate nodes have several routes to a destination so that when detecting grey hole or black hole attacks, they can try alternative routes to forward packets and thus packet delivery ratio is improved. The delivery radio of AOTDV-2 is very close to that of AOTDV-1, but the latter is a bit better.</p><p>As shown in Fig. <ref type="figure" target="#fig_9">7b</ref>, the average latency of all three protocols declines slowly with the increase in number of malicious nodes. There is an obvious reduction in the average latency with AOMDV and AOTDV compared to AODV. This is because the availability of alternative routes eliminates delay caused by route rediscoveries. These multiple candidates contribute to reduce the end-to-end latency.</p><p>When the number of malicious nodes increases to 20 (40% of the whole nodes), the routing packet overhead of AOTDV is approximately 3.5 as shown in Fig. <ref type="figure" target="#fig_9">7c</ref>. Normally, both AODV and AOTDV generate about 2.4 control packets on average for every data packet whereas AOMDV creates about 1.7 control packets. The increased control packets in AOTDV are primarily because of its route discovery mechanism that broadcasts more RREP packets to look for trustworthy routes to destinations.</p><p>As shown in Fig. <ref type="figure" target="#fig_9">7d</ref>, AODV in these protocols exhibits the best path optimality (86%) when there are no malicious nodes. As malicious nodes increase, the path optimality of all three protocols decreases. On the whole, the path optimality of AOTDV is smaller than that of AOMDV. AOTDV is able to detect and filter out malicious nodes and find trustworthy paths to destinations even though these paths are not the shortest ones.</p><p>The detection ratios in both versions of AOTDV are shown in Figs. <ref type="figure" target="#fig_9">7e</ref> and<ref type="figure">f</ref>. They decline with the increment of the number of malicious nodes. It is observed that the more malicious nodes are, the more serious their damage is. Accordingly, the detection is harder. For the both types of detection, a ratio of over 70% is maintained if the percentage of malicious nodes is not more than 40%. Overall, AOTDV-1 is better than AOTDV-2 in the detection ratios, especially when more malicious nodes exist in the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Test 3: varying trust update threshold</head><p>Trust update threshold, an important constant for route maintenance, denotes the condition when update packets will be sent. For example, when the trust update threshold is set to 0.02, if the increase or decrease of a node trust is greater than or equal to the threshold, an RUPD packet will be broadcasted. In the third test, we evaluate the performance of AOTDV under setting (1) and setting (2) as the trust update threshold z increases from 0.02 to 0.1.</p><p>As shown in Fig. <ref type="figure" target="#fig_10">8a</ref>, the delivery ratios in both AOTDV-1 and AOTDV-2 degrade slowly from 65 to 57% as the trust update threshold increases. When the threshold is set to a smaller value, the nodes' response to trust update is more sensitive. Accordingly, unqualified routes will be detected and bypassed in time. A source node could timely look up a substitute route in its local routing paths in a new route discovery. When the trust update threshold is set to a greater value, the update packets will decrease. Because nodes are not informed the trust changes smaller than the threshold, some packets would be sent along an unqualified route that had been trustworthy. These packets discarded by intermediate nodes increase as the trust update threshold goes up. However, as revealed in Fig. <ref type="figure" target="#fig_10">8b</ref>, the average latency of AOTDV declines as the trust update threshold increases. The buffer delays and queue delays of all packets decrease when the number of update packets reduces. On the whole, AOTDV-1 has a little better performance than AOTDV-2.</p><p>When the threshold is set to a smaller value, more update packets will be transmitted. As shown in Fig. <ref type="figure" target="#fig_10">8c</ref>, the percentage of control packets, that is routing packet overhead, declines as the trust update threshold increases from 0.02 to 0.1. When the threshold increases to 0.06, the routing packet overhead remains at about 2.5.</p><p>Accordingly, the overhead of AOTDV-2 is less than AOTDV-1. Because AOTDV-2 is less sensitive to forwarding ratio of control packets than AOTDV-1, the frequency of path trust fluctuation is smaller in AOTDV-2.</p><p>As shown in Fig. <ref type="figure" target="#fig_10">8d</ref>, the path optimality has changed a little as the trust update threshold rises to 0.1. The optimality ranges from 74 to 70%. We can observe that the trust update threshold has a strongly effect on changes of path trust, but it has little effect on hop counts of selected paths.</p><p>As shown in Fig. <ref type="figure" target="#fig_10">8e</ref>, the increasing trust update threshold results in a reduction in the detection ratio for malicious nodes. The detection ratio for benevolent nodes in Fig. <ref type="figure" target="#fig_10">8f</ref> also declines as the trust update threshold increases. The detection ratio of benevolent nodes is smaller than that of malicious nodes. This is because some normal nodes could be recognised to malicious nodes. For example, some nodes move out of the range of the senders so that their forwarding ratios decrease. These nodes would lose neighbours' trust and even be regarded as malicious nodes. For the both types of detection, a ratio of over 80% is maintained when the trust update threshold ranges from 0.02 to 0.1. Regardless of the detections for malicious nodes or benevolent nodes, AOTDV-1 achieves a better precision than AOTDV-2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Test 4: varying black-list trust threshold</head><p>In the last test, we compare the two AOTDV versions with different trust threshold for local black lists. The number of malicious nodes is set to 20 and the trust threshold ranges from 0.1 to 0.5.</p><p>As shown in Fig. <ref type="figure" target="#fig_11">9a</ref>, on the whole, the delivery ratios of the two versions are not as high as expected. In fact, they are smaller than 55%. This is because the proportion of malicious nodes is 40% and a lot of packets are not forwarded devotedly by the intermediate nodes. The delivery ratios of AOTDV-1 and AOTDV-2 increase slowly from 50 to 55% as the black-list trust threshold increases from 0.1 to 0.5. A smaller trust threshold means that more packets could be dropped by a node before it is regarded as a malicious node. When the threshold is equal to 0.4, the delivery ratios of AOTDV-1 and AOTDV-2 reach their peaks, respectively (i.e. 54.8% for AOTDV-1 and 54.2% for AOTDV-2). Fig. <ref type="figure" target="#fig_11">9b</ref> shows the average end-to-end latency of AOTDV as black-list trust threshold varies. The results indicate that the average latency increases gradually from 10.2 to 15.5 ms as the trust threshold ranges from 0.1 to 0.5. As the trust threshold is set to a smaller value, fewer nodes will be added to black lists. This leads to lower average latency at the smaller threshold. The average latency of AOTDV-1 is very close to that of AOTDV-2. The effects on the routing packet overhead and path optimality are shown in Figs. <ref type="figure" target="#fig_11">9c</ref> and<ref type="figure">d</ref>, respectively. The average overhead is about 3.4 whereas the average path optimality is about 63%. If the trust threshold is assigned to a small value (h , 0.3), the malicious nodes launching grey hole attacks will not be detected and the count of route discoveries for avoiding malicious nodes is small. As the trust threshold increases, more nodes are detected as malicious nodes and more routing packets are forwarded along trustworthy paths. Accordingly, the routing packet overhead tends to rise with the increase in the trust threshold. The optimality of AOTDV-1 and AOTDV-2 fluctuates in the range from 62 to 65% as the trust threshold increases. Overall, AOTDV-1 and AOTDV-2 shows similar performances in routing packet overhead and path optimality.</p><p>Figs. <ref type="figure" target="#fig_11">9e</ref> and<ref type="figure">f</ref> show the detection ratios for malicious nodes and benevolent nodes respectively. In the view of the trend, the changes of the two ratios are just opposite as the black-list trust threshold ranges from 0.1 to 0.5. The former ratio increases from 72 to 81% whereas the latter declines from 90 to 70%. The increase in the ratio for malicious nodes implies that when the trust threshold is set to a greater value, malicious nodes are easier to be detected. Unfortunately, more benevolent nodes would be considered as malicious nodes. Accordingly, the detection ratio for benevolent nodes reduces with the increment of thrust threshold. It should be pointed that the detection ratios change obviously when the threshold changes from 0.3 to 0.4. It is a coincidence that the delivery ratio, in Fig. <ref type="figure" target="#fig_11">9a</ref>, also increases sharply (about 3%) during the period. This is because a constant 30% is used as the forwarding ratio of grey-hole nodes. When the black-list trust threshold is smaller than 0.3, the malicious nodes launching grey-hole attacks cannot be recognised. As the trust threshold rises to 0.4, AOTDV-1 shows better performance in detection ratios for malicious nodes about 3% and for benevolent nodes about 4% than AOTDV-2. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.7">Summary</head><p>The experiment results in tests 1 and 2 show that AOTDV performs better than AODV and AOMDV as AOTDV gives higher delivery ratio and lower end-to-end latency. However, the benefit of AOTDV is obtained at the cost of the routing packets overhead. In other words, control packets increase greatly as the performance, especially, packet delivery ratio, improves in AOTDV. In tests 3 and 4, we evaluate the effects of the trust update threshold and the black-list trust threshold in AOTDV protocol. The analysis shows that the trust update threshold and black-list trust threshold should be maintained at an appropriate median (0.4 -0.5) in order to obtain a trade-off among delivery ratio, latency, overhead and detection ratios. Overall, AOTDV-1 shows a better performance than AOTDV-2. That proves our observation that control packets play a more important role than data packets in MANETs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Discussion</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Trust derivation</head><p>Observing nodes' behaviours is an effective mechanism to determine whether a node can be trusted. Literatures <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7]</ref> use several aspects of node behaviours including acknowledgements, packet precision, gratuitous route replies and so on. These observations can be combined together to compute a trust value. Our opinion is that the behaviours of malicious nodes can also be detected using a much simpler scheme. In this paper, we build trust models using passive acknowledgement as the only observable factor for evaluating trust. We find that passive acknowledgement gives an effective indication of a node's behaviour of cooperation. The trust value of one node to another node summarises the former's experience with the latter's ability of delivering packets correctly. A node trust can be considered as a subjective measurement of a node's quality of forwarding, while a path trust can be used to anticipate the quality of forwarding packets along the path.</p><p>The node's trust can also derive from indirect trustrecommendation. Recommendation mechanism is an important component in any trust evaluation system <ref type="bibr" target="#b28">[29]</ref>. The effectiveness of recommendation is closely related with communication overhead and mobility. Routing protocols should be simple and low communication cost, especially in mobile and resource-limited networks. So recommendation is considered in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Attacks on trust-based routing protocols</head><p>A sender places itself in a promiscuous mode after the transmission of any packet so as to overhear the retransmission by the forwarder. The passive acknowledgement provides AOTDV with the abilities against several attacks from malicious nodes, including black-hole attack, modification attack, fabrication attack and impersonation attack.</p><p>However, MANETs are vulnerable to the Sybil attack and newcomer attack. If a malicious node can create several faked IDs, the trust evaluation system might suffer from the Sybil attack <ref type="bibr" target="#b33">[35,</ref><ref type="bibr" target="#b34">36]</ref>. Faked nodes can share or even take the blame. One approach to prevent Sybil attack is to create a trusted agency to authenticate identities. Without the logically centralised authority, Sybil attack is always possible except under extreme and unrealistic assumptions of resource parity and coordination among entities <ref type="bibr" target="#b33">[35]</ref>. In addition, if a malicious node can easily register as a new user, the trust evaluation suffers from the newcomer attack. Here, malicious nodes can easily remove their bad history by registering as a new user. The defense against the Sybil attack and newcomer attack does not rely on the design of trust evaluation system, but the authentication and access control mechanisms, which make registering a new ID or a faked ID difficult.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Black list</head><p>A node with trust value smaller than the black-list trust threshold will be regarded as a malicious node and added to a local black list. The malicious nodes in a black list are only excluded by the node holding the black list. If a node exists in the black lists of all its neighbours, it will be excluded from the local network. If the node moves to a new sub-network, it will be regarded as a new comer with initial trust value (less trustworthy node). This is a simple but strict rule.</p><p>If the behaviour of nodes in local black list can be reevaluated, a routing protocol can select a 'good' node as main forwarding node and a malicious node in the black list as a redundant forwarding node. Multiple copies of data packets are transmitted in parallel at the same time. This will make the route protocol complicated.</p><p>Punishing malicious nodes for a specific time is another solution for the problem of dynamic modification of a node's behaviour. Every node in the black list has a specific time (termed as the isolated time) in which the node (say node m) is regarded as a malicious node by the owner (say node n) of the blacklist. During the isolated time, node m is insulated from forwarding packets. After the time, node m will be removed from the blacklist and its trust will be set to the black-list trust threshold. Node m will get a chance if node n has a packet to forward. If the packet is forwarded correctly by node m, the trust will increase. If the packet is not forwarded correctly, node m will be put into the blacklist again and be insulated for another term of the isolated time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>In this paper, we use packet forwarding ratio to evaluate a node trust and a continued product of node trusts to estimate a path trust. Combined with the simple model, a novel multipath reactive routing protocol (AOTDV) is proposed to discover IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212 -232 229 doi: 10.1049/iet-ifs.2009.0140 trustworthy forward paths and alleviate the attacks from malicious nodes. In this protocol, a source establishes multiple trustworthy paths as candidates to a destination in a single route discovery. A route discovery is initiated only when all paths break or fail to meet the trust requirements of data packets. This protocol provides a flexible and feasible approach to choose a shortest path in all path candidates. Performance comparison of these routing protocols (AODV, AOMDV and AOTDV) shows that AOTDV is able to achieve a remarkable improvement in the packet delivery ratio and detect most malicious attacks.</p><p>For future work, we plan to incorporate the time-effect of forwarding ratio to the trust model, in which a forwarding ratio is divided into multiple windowed parts at intervals of a certain time. The forwarding ratio of a more recent window is given a larger weight. Moreover, we will consider an adaptive trust level classification of nodes taking into account the average trust value of all nodes. The problem of dynamic behaviour modification will also be considered. In addition, a comprehensive performance evaluation will be conducted to compare AOTDV with other routing protocols (e.g. DSR and TORA).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1</head><label>1</label><figDesc>Figure 1 Path trust computation a An example of a single path b An example of a multiple path</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2</head><label>2</label><figDesc>Figure 2 Structure of routing table entries for AODV, AOMDV and AOTDV a AODV b AOMDV c AOTDV</figDesc><graphic coords="6,123.93,75.18,347.49,82.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>4. 4 . 1</head><label>41</label><figDesc>Route request: An RREQ packet contains the following fields: kBroadcastid, SourceAddr, Source SequenceNo, DestAddr, DestSequenceNo, HopCounter, RequiredTrust, ActualTrustl.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3</head><label>3</label><figDesc>Figure 3 Flowchart of routing procedure</figDesc><graphic coords="7,48.19,75.18,235.65,239.41" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4</head><label>4</label><figDesc>Figure 4 Example of a route discoverya Node trust values b Routing table of node B after receiving the latter RREQ c Routing table of node D after receiving RREQ d Routing table of node B after receiving RREP e Routing table node A after receiving RREP</figDesc><graphic coords="9,143.32,75.18,309.08,156.98" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212 -232 221 doi: 10.1049/iet-ifs.2009.0140 &amp; The Institution of Engineering and Technology 2010</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212-232 &amp; The Institution of Engineering and Technology 2010 doi: 10.1049/iet-ifs.2009.0140</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 4 .</head><label>54</label><figDesc>Figure 5 AOTDV route update rule</figDesc><graphic coords="12,135.38,75.18,324.93,354.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6</head><label>6</label><figDesc>Figure 6 Test 1: Performance with varying node maximum speeds a Packet delivery ratio b Average end-to-end latency c Routing packet overhead d Path optimality e Detection ratio of malicious nodes f Detection ratio of benevolent nodes</figDesc><graphic coords="13,146.04,314.42,303.34,370.54" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7</head><label>7</label><figDesc>Figure 7 Test 2: performance with a varying number of malicious nodes a Packet delivery ratio b Average end-to-end latency c Routing packet overhead d Path optimality e Detection ratio of malicious nodes f Detection ratio of benevolent nodes</figDesc><graphic coords="15,146.04,75.18,303.34,366.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8</head><label>8</label><figDesc>Figure 8 Test 3: performance with varying trust update threshold a Packet delivery ratio b Average end-to-end latency c Routing packet overhead d Path optimality e Detection ratio of malicious nodes f Detection ratio of benevolent nodes</figDesc><graphic coords="16,146.04,75.18,303.34,368.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9</head><label>9</label><figDesc>Figure 9 Test 4: performance with varying black-list trust threshold a Packet delivery ratio b Average end-to-end latency c Routing packet overhead d Path optimality e Detection ratio of malicious nodes f Detection ratio of benevolent nodes</figDesc><graphic coords="17,145.59,75.18,304.31,362.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>Trust levels of nodes</figDesc><table><row><cell cols="2">Level Trust value</cell><cell>Meaning</cell></row><row><cell>1</cell><cell>[0, h)</cell><cell>malicious node</cell></row><row><cell>2</cell><cell>[h, 0.75)</cell><cell>suspect node</cell></row><row><cell>3</cell><cell cols="2">[0.75, 0.9) less trustworthy node</cell></row><row><cell>4</cell><cell>[0.9, 1]</cell><cell>trustworthy node</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc>Example of routing tables</figDesc><table><row><cell cols="2">Destination Destination</cell><cell></cell><cell cols="2">Route list</cell><cell></cell></row><row><cell cols="2">sequence #</cell><cell>Next</cell><cell>Hop</cell><cell>Path</cell><cell>ET</cell></row><row><cell></cell><cell></cell><cell>hop</cell><cell>count</cell><cell>trust</cell><cell></cell></row><row><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>5</cell></row><row><cell>5</cell><cell>2</cell><cell>1</cell><cell>3</cell><cell>0.6</cell><cell>4</cell></row><row><cell></cell><cell></cell><cell>2</cell><cell>4</cell><cell>0.8</cell><cell>4</cell></row><row><cell cols="3">Table 3 Structure of a trust record</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">node ID</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">node Trust</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>N</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note><p>C and N A for control packets N C and N A for data packets packet buffer IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212 -232 217 doi: 10.1049/iet-ifs.2009.0140</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 4</head><label>4</label><figDesc>Example of the trust requirements of data packets The maximum expiration time of a route entry is equal to 9 and each transmission of a packet costs one unit of time.</figDesc><table><row><cell cols="2">Level Trust value</cell><cell>Description</cell></row><row><cell>1</cell><cell>[0.6, 0.75)</cell><cell>less important data</cell></row><row><cell>2</cell><cell>[0.75, 0.9)</cell><cell>important data</cell></row><row><cell>3</cell><cell>[0.9, 1]</cell><cell>extremely important data</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Routing table of node B after receiving the latter RREQ c Routing table of node D after receiving RREQ d Routing table of node B after receiving RREP e Routing table node A after receiving RREP</figDesc><table /><note><p><p>220</p>IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212-232 &amp; The Institution of Engineering and Technology 2010 doi: 10.1049/iet-ifs.2009.0140</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5</head><label>5</label><figDesc>Fixed simulation parameters</figDesc><table><row><cell>Parameter</cell><cell>Value</cell></row><row><cell>simulation time</cell><cell>500 s</cell></row><row><cell>number of nodes</cell><cell>50</cell></row><row><cell>map size</cell><cell>1000 × 1000 m</cell></row><row><cell>mobility model</cell><cell>random way point</cell></row><row><cell>traffic type</cell><cell>constant bit rate (CBR)/UDP</cell></row><row><cell>transmission radius</cell><cell>250 m</cell></row><row><cell>packet size</cell><cell>512 bytes</cell></row><row><cell>connection rate</cell><cell>4 pkts/s</cell></row><row><cell>connections</cell><cell>20</cell></row><row><cell>pause time</cell><cell>10 s</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6</head><label>6</label><figDesc>Varying simulation parameters</figDesc><table><row><cell>Test</cell></row><row><cell>no.</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>table or find new IET Inf. Secur., 2010, Vol. 4, Iss. 4, pp. 212 -232 225 doi: 10.1049/iet-ifs.2009.0140</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>doi: 10.1049/iet-ifs.2009.0140 &amp; The Institution of Engineering and Technology 2010 www.ietdl.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>&amp; The Institution of Engineering and Technology 2010 www.ietdl.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2"><p>&amp; The Institution of Engineering and Technology 2010</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgments</head><p>We would like to thank the reviewers of this paper for detailed and insightful comments. This research is sponsored by the Natural Science Foundation of China (NSFC) under grant nos. 60903031, 90718032, 60970003, the China Postdoctoral Science Foundation under grant no. 20090451310, the Postdoctoral Innovation Foundation of Shandong Province under grant no. 200902021 and the Independent Innovation Foundation of Shandong University under grant no. 2009TS032.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Appendix</head><p>Theorem 1: The route update rule in AOTDV yields loop free routes.</p><p>Proof: By contradiction.</p><p>Suppose that there is an m-sized loop in a route to a destination d, and node links (</p><p>form in a loop route. Assume that nodes j and k are any two consecutive nodes in the route path ( j,k {i 1 ,i 2 , . . . , i m , i 1 }) and j is the previous node of k (i.e. j k). The following condition holds in lines 1 and 8 (discussed in Section 4.6)</p><p>The following inequality must be true in the path</p><p>In other words, the destination sequence numbers are the same for every node in the routing loop. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>www.ietdl.org</head><p>The following condition holds in line 9</p><p>where </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Trust-based route selection in dynamic source routing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">O</forename><surname>Connell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Trust Management</title>
		<meeting>Int. Conf. on Trust Management<address><addrLine>Pisa, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-05">May 2006</date>
			<biblScope unit="page" from="150" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Secure ad hoc on-demand distance vector routing</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">G</forename><surname>Zapata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Asokan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Mob. Comput. Commun. Rev</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="106" to="107" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Ariadne: a secure ondemand routing protocol for ad hoc networks</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">B</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Mobile Computing and Networking (Mobicom&apos;02)</title>
		<meeting>Int. Conf. Mobile Computing and Networking (Mobicom&apos;02)<address><addrLine>Atlanta, Georgia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-09">September 2002</date>
			<biblScope unit="page" from="12" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A survey of secure wireless ad hoc routing</title>
		<author>
			<persName><forename type="first">Y</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perrig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Secur. Priv</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="28" to="39" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A simple trust model for on-demand routing in mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Griffiths</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jhumka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dawson</surname></persName>
		</author>
		<author>
			<persName><surname>Myers R</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. on Intelligent Distributed Computing (IDC 2008)</title>
		<meeting>Int. Symp. on Intelligent Distributed Computing (IDC 2008)</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Trust: making and breaking cooperative relations</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gambetta</surname></persName>
		</author>
		<editor>GAMBETTA D.</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>Oxford Press</publisher>
			<biblScope unit="page" from="213" to="237" />
		</imprint>
	</monogr>
	<note>Can we?</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Trust establishment in pure adhoc networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Pirzada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wirel. Pers. Commun</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="39" to="168" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Formalizing trust as a computational concept</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">P</forename><surname>Marsh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
		<respStmt>
			<orgName>Department of Mathematics and Computer Science, University of Stirling</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Trust among strangers in Internet transactions: Empirical analysis of eBay&apos;s reputation system</title>
		<author>
			<persName><forename type="first">P</forename><surname>Resnick</surname></persName>
		</author>
		<author>
			<persName><surname>Zeckhauser R</surname></persName>
		</author>
		<editor>BAYE M. (ED.</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>Elsevier Press</publisher>
			<biblScope unit="page" from="127" to="157" />
		</imprint>
	</monogr>
	<note>Advances in applied microeconomics: the economics of the internet and E-commerce</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A robust reputation system for p2p and mobile ad-hoc networks</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buchegger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">L</forename><surname>Boudec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on the Economics of Peer-to-Peer Systems</title>
		<meeting>Int. Workshop on the Economics of Peer-to-Peer Systems<address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-06">June 2004</date>
			<biblScope unit="page" from="119" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Jøsang</surname></persName>
		</author>
		<author>
			<persName><surname>Ismail R</surname></persName>
		</author>
		<title level="m">The beta reputation system&apos;. Proc. 15th Bled Electronic Commerce Conf., Bled, Slovenia</title>
		<imprint>
			<date type="published" when="2002-06">June 2002</date>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Regret: reputation in gregarious societies</title>
		<author>
			<persName><forename type="first">J</forename><surname>Sabater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sierra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Autonomous Agents</title>
		<meeting>Int. Conf. Autonomous Agents<address><addrLine>Montreal, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="194" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Securing decentralized reputation management using trustguard</title>
		<author>
			<persName><forename type="first">M</forename><surname>Srivatsa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Parallel Distrib. Comput</title>
		<imprint>
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1217" to="1232" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Powertrust: A robust and scalable reputation system for trusted peer-to-peer computing</title>
		<author>
			<persName><surname>Zhou R</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hwang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Parallel Distrib. Syst</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="460" to="473" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Depth-expurgation based dynamic trust evaluation algorithm for ad hoc networks</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><surname>Zhang R</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Embedded Software and Systems</title>
		<meeting>Int. Conf. on Embedded Software and Systems<address><addrLine>Sichuan, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-07">July 2008</date>
			<biblScope unit="page" from="399" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A reputation-based trust management system for P2P networks</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Selc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Uzun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">R</forename><surname>Pariente</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. on Cluster Computing and the Grid</title>
		<meeting>Int. Symp. on Cluster Computing and the Grid<address><addrLine>Chicago, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-04">April 2004</date>
			<biblScope unit="page" from="251" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">PeerTrust: Supporting reputation-based trust in peer-to-peer communities</title>
		<author>
			<persName><forename type="first">L</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="843" to="857" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Trusted P2P transactions with fuzzy reputation aggregation</title>
		<author>
			<persName><forename type="first">S</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName><surname>Zhou R</surname></persName>
		</author>
		<author>
			<persName><surname>Kwok Y.-K</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Comput</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="24" to="34" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Analysis of ratings on trust inference in open environments</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perform. Eval</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="99" to="128" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A review of current routing protocols for ad hoc mobile wireless networks</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">K</forename><surname>Toh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pers. Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="46" to="55" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Ad-hoc ondemand distance vector routing</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">M</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Mobile Computing Systems and Applications (WMCSA)</title>
		<meeting>Int. Workshop on Mobile Computing Systems and Applications (WMCSA)<address><addrLine>New Orleans, LA, USA.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-02">February 1999</date>
			<biblScope unit="page" from="90" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Highly dynamic destination sequenced distance-vector routing (DSDV) for mobile Computers</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Perkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bhagwat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. ACM SIGCOMM</title>
		<meeting>Int. Conf. ACM SIGCOMM<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-08">August 1994</date>
			<biblScope unit="page" from="234" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A new approach to on-demand loop-free routing in networks using sequence number</title>
		<author>
			<persName><forename type="first">Garcia-Luna-Aceves J</forename><forename type="middle">J</forename><surname>Mosko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Perkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1599" to="1615" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Dynamic source routing in Ad hoc wireless networks</title>
		<author>
			<persName><forename type="first">Johnson</forename><forename type="middle">D</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename></persName>
		</author>
		<editor>TOMASZ I., HANK K.</editor>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Kluwer Academic Press</publisher>
			<biblScope unit="page" from="153" to="181" />
		</imprint>
	</monogr>
	<note>Mobile computing</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On-demand multipath distance vector routing for ad hoc networks</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">K</forename><surname>Marina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Network Protocols</title>
		<meeting>Int. Conf. on Network Protocols<address><addrLine>Riverside, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-11">November 2001</date>
			<biblScope unit="page" from="11" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Performance comparison of trust-based reactive routing protocols</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Pirzada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Datta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Mob. Comput</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="695" to="710" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Mitigating routing misbehavior in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">Marti</forename><forename type="middle">S</forename><surname>Giuli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. Mobile Computing and Networking (MobiCom)</title>
		<meeting>Int. Conf. Mobile Computing and Networking (MobiCom)<address><addrLine>Boston, MA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-08">August 2000</date>
			<biblScope unit="page" from="255" to="265" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Propagating trust in ad hoc networks for reliable routing</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Pirzada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Datta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop Wireless Ad Hoc Networks (IWWAN)</title>
		<meeting>Int. Workshop Wireless Ad Hoc Networks (IWWAN)<address><addrLine>Oulu, Finland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-05">May 2004</date>
			<biblScope unit="page" from="58" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Information theoretic framework of trust modeling and evaluation for ad hoc networks</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yu</forename><forename type="middle">W</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">J R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE J. Sel. Areas Commun</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="305" to="317" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Performance of multipath routing for on-demand protocols in mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nasipuri</surname></persName>
		</author>
		<author>
			<persName><surname>Castaneda R</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Das</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mob. Netw. Appl</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="339" to="349" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Wireless LAN medium access control (MAC) and physical layer (PHY) specifications 802</title>
		<idno>32] 802.11</idno>
		<ptr target="http://www.isi.edu/nsnam/ns/" />
		<imprint>
			<date type="published" when="1997">September, 2009. 1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The medium access control sublayer</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Tanenbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer networks&apos;</title>
		<editor>
			<persName><forename type="first">A</forename><forename type="middle">S</forename><surname>Tanenbaum</surname></persName>
		</editor>
		<imprint>
			<publisher>Prentice Hall Press</publisher>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="251" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">The node distribution of the random waypoint mobility model for wireless ad hoc networks</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bettstetter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Resta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Santi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Mob. Comput</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="257" to="269" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">The Sybil Attack</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Douceur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Workshop on Peer-to-Peer Systems</title>
		<meeting>Int. Workshop on Peer-to-Peer Systems<address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-03">March 2002</date>
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Reliable routing in ad hoc networks using direct trust mechanisms</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Pirzada</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Mcdonald</surname></persName>
		</author>
		<editor>CHENG X.Y., LI D.Y.</editor>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>Springer Press</publisher>
			<biblScope unit="page" from="122" to="160" />
		</imprint>
	</monogr>
	<note>Advances in ad hoc and sensor networks</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A trust-based routing framework in energy-constrained wireless sensor networks</title>
		<author>
			<persName><forename type="first">W</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Peng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Wireless Algorithms, Systems, and Applications (WASA)</title>
		<meeting>Int. Conf. on Wireless Algorithms, Systems, and Applications (WASA)<address><addrLine>Xi&apos;an, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-08">August 2006</date>
			<biblScope unit="page" from="478" to="489" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
