<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Edge-Computing Based Architecture for Mobile Augmented Reality</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jinke</forename><surname>Ren</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yinghui</forename><surname>He</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Guan</forename><surname>Huang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Guanding</forename><surname>Yu</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Yunlong</forename><surname>Cai</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Zhaoyang</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Jinke Ren and Guanding Yu (corresponding author</orgName>
								<orgName type="institution" key="instit1">Zhejiang University</orgName>
								<orgName type="institution" key="instit2">Xidian University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">An Edge-Computing Based Architecture for Mobile Augmented Reality</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">B46A9CB063B0542339D57B7F67C31788</idno>
					<idno type="DOI">10.1109/MNET.2018.1800132</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-07-28T02:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>0890-8044/18/$25.00 Â© 2018 IEEE</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AbstrAct</head><p>In order to mitigate the long processing delay and high energy consumption of mobile augmented reality (AR) applications, mobile edge computing (MEC) has been recently proposed and is envisioned as a promising means to deliver better Quality of Experience (QoE) for AR consumers. In this article, we first present a comprehensive AR overview, including the indispensable components of general AR applications, fashionable AR devices, and several existing techniques for overcoming the thorny latency and energy consumption problems. Then we propose a novel hierarchical computation architecture by inserting an edge layer between the conventional user layer and cloud layer. Based on the proposed architecture, we further develop an innovative operation mechanism to improve the performance of mobile AR applications. Three key technologies are also discussed to further assist the proposed AR architecture. Simulation results are finally provided to verify that our proposals can significantly improve latency and energy performance as compared to existing baseline schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IntroductIon</head><p>As a revolutionary innovation, mobile augmented reality (AR) has become a miraculous technology in the past few years. By combining computer-generated and sensor-extracted elements with real objects and enabling real-time 3D interaction between mobile users and physical surroundings at a user's finger tips, mobile AR is envisioned as a new paradigm to submerge mobile subscribers in a fabulous mixed-reality world <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. In view of the great business opportunities involved in mobile AR, many leading companies have continuously scrambled to design and promote their own mobile AR applications and products, such as Google Glass, Microsoft HoloLens, and Recon Jet.</p><p>However, despite the fully immersive user experience, mobile AR still faces many technical challenges that hinder its widespread commercial use. Due to hardware limitations, running sophisticated AR algorithms at mobile devices generally causes long processing delay and high energy consumption, which are the main hurdles for implementation. To handle these issues, many cutting-edge technologies, such as advanced hardware structure, acceptable approximate computing, and partial video frame updating have been developed to improve mobile AR performance. Nevertheless, these methods still cannot catch up with the rapid growth of user demand while pointlessly increasing the cost of mobile devices. Hence, novel techniques are urgently expected to tackle the above challenges.</p><p>To overcome the computational resource shortage of mobile devices, another major innovation in the past decade is mobile cloud computing (MCC), which allows users to offload computation-intensive tasks to a number of powerful cloud servers deployed at the remote cloud platform for processing <ref type="bibr" target="#b2">[3]</ref>. However, with the strict delay requirement of mobile AR applications, MCC suffers from extra propagation delay due to the long physical distance between mobile devices and cloud servers <ref type="bibr" target="#b3">[4]</ref>. To this end, an improved technique, which is referred to as mobile edge computing (MEC), has been recently proposed by the European Telecommunication Standards Institute (ETSI) and is also considered by the Third Generation Partnership Project (3GPP) in their future standards. By distributing the conventional centralized cloud computing resources to the edge of mobile networks, MEC offers an adjacent computing environment for mobile subscribers and provides a variety of benefits, including ultra-low latency, real-time access, location-aware services, and so on <ref type="bibr" target="#b4">[5]</ref><ref type="bibr" target="#b5">[6]</ref><ref type="bibr" target="#b6">[7]</ref>.</p><p>On the other hand, by taking advantage of the proximity to mobile users in MEC and the abundant computation capacity in MCC, effective collaboration between cloud and edge computing can further improve system performance. Several hierarchical edge-to-cloud architectures have been proposed to collaborate the computation capacity of edge servers and cloud servers <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>. However, they are not specifically designed for AR applications. Motivated by this, in this work we propose a novel hierarchical computation architecture to deal with the long processing delay and high energy consumption of mobile AR applications. The newly-designed architecture is composed of three layers: the user layer, the edge layer, and the cloud layer. By integrating the communication, computation, and control modules in the edge layer while seamlessly collaborating the edge and cloud computing capacities, several critical components of AR applications can be intelligently offloaded to both edge and cloud servers for further processing. In accordance with this architecture, an advanced operation mechanism is developed by embedding the MEC functions into the AR process. Moreover, to support the proposed AR framework, we further discuss three key technologies, that is, joint communication and computation resource allocation, collaborative cloud and edge computing, and content-based image retrieval from the viewpoints of energy efficiency and delay optimization. The main merit of the proposed MEC-based AR framework is that it merges the advantages of cloud computing and edge computing to enormously improve the quality of experience (QoE) for AR applications.</p><p>In what follows, we first provide a comprehensive AR overview, including the indispensable components of general AR applications, fashionable AR devices, and existing technologies for alleviating the inherent long processing delay and high energy consumption problems. To improve system performance, our key contributions are the novel hierarchical computation architecture and the related AR operation mechanism as well as the three key technologies, which can significantly facilitate the implementation of the MECbased AR framework. Finally, simulation results demonstrate that the proposed AR framework can evidently improve energy and delay performance, as compared against some baseline schemes. Our design in this article has great potential to provide an essential reference for the future development of mobile AR technology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>overvIew of Augmented reAlIty</head><p>In this section, we present an overview of AR, including the specific components of general AR applications, the compelling mobile AR devices, and the incumbent AR technologies, from the viewpoints of energy efficiency and latency optimization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ar ApplIcAtIon components</head><p>To combine colorful computer-generated and sensor-extracted data with physical reality, different AR applications possess diverse modules for specific processing purposes. However, five computation components, that is, the video source, tracker, mapper, object recognizer, and renderer, are indispensable for almost all AR applications, and they play the critical roles in general AR architectures <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>.</p><p>As illustrated in Fig. <ref type="figure">1</ref>, the aforementioned five components collaborate closely to accomplish an integrated AR process. First, the video source fetches the raw videos from mobile cameras and clips these videos into frames with a specific image format, such as JPEG and PNG. Next, the video frames are delivered to the tracker to determine the user's position with respect to the physical surroundings. Given the tracking results, virtual coordinate of the environment can be established by the mapper. Then, the internal objects in video frames are identified by the object recognizer with robust features. Afterward, the augmented information of the identified object can be accurately retrieved from local memory (or cloud database) and properly mixed with the original videos by the renderer. The results are finally displayed on the screens of AR devices so that the subscribers are able to enjoy a magic interactive experience with physical reality at their fingertips.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>fAshIonAble Ar devIces</head><p>A variety of AR devices with different operation modes have been recently designed with multifarious functions. Table <ref type="table" target="#tab_0">1</ref> summarizes several well known AR devices developed by major companies. Among them, Google Glass, Microsoft HoloLens, and Osterhout Design Group (ODG) R-9 operate independently, whereas Meta 2 and Recon Jet need to rely on external equipment such as personal computers (PCs) or smart phones.</p><p>The Google Glass is the first-appeared AR glass, which has a stylish appearance and provides users with requested information, such as calendar, weather, and message via natural language voice commands. By comparison, Microsoft Holo-Lens enables users to engage with digital content and interact with holograms of the surroundings to provide subscribers with a mixed-reality experience. This function is extended in ODG R-9 by combining with some advanced modules, such as Bluetooth 5.0, built-in GPS, and six degrees of freedom tracking. However, these devices all suffer from high energy consumption and cannot work for a long time. On the other hand, by connecting powerful computers, Meta 2 allows users to intuitively touch, grab, and move the computer-generated digital objects as real ones, which inevitably leads to its non-portability for outdoor use. In particular, Recon Jet is extensively used in sport scenes and can exhibit the real-time motion information of mobile users.</p><p>Although the above AR devices can provide a fully immersive experience for mobile subscribers, they generally suffer from long processing delay and high energy consumption, which are the most-critical performance metrics for AR applications. To overcome these drawbacks, several existing technologies have been recently developed, which will be discussed in the following.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>exIstIng technologIes</head><p>Presently, there are mainly three kinds of technologies to reduce the processing delay and energy consumption of AR applications, as summarized in the following <ref type="bibr" target="#b0">[1]</ref>.</p><p>Advanced Hardware Structure: It is hard for traditional batteries to sustainably support the complex operations of AR applications. As a result, advanced hardware structures such as a multi-core CPU with low frequency and voltage can be utilized to replace the single-core CPU. Furthermore, dynamic voltage and frequency scaling (DVFS) technology can be adopted to save energy with respect to specific requirements.</p><p>Acceptable Approximate Computing: Consistently performing accurate calculation in AR applications usually consumes much energy and results in long processing delay. Therefore, approximate FIGURE 1. Main components of general AR applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Video Source Renderer Tracker Mapper Object Recognizer</head><p>Resolution Image Format</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of Features</head><p>This article has been accepted for inclusion in a future issue of this magazine. Content is final as presented, with the exception of pagination.</p><p>computing for AR tasks can be adopted according to detailed computational accuracy requirements. For example, low-precision tasks, such as location sensing, can be approximately processed to balance computational accuracy and energy (delay) efficiency.</p><p>Partial Video Frame Updating: The frequent movement of mobile AR devices would produce a large volume of video data, which is adverse for real-time processing. Therefore, partial video frame updating can be exploited to avoid redundant computing by processing the newly-generated data only.</p><p>Based on the above mentioned technologies, the end-to-end latency and energy consumption of AR applications can be improved to some extent. However, since the computation-intensive tasks, for example, tracking, mapping, and object recognition, still remain for local computing, end-to-end latency and energy consumption cannot be further reduced and the anticipated user demand is still far from reach. To overcome the resource shortage of mobile devices, MEC has been recently proposed and is regarded as a new paradigm to deliver a better experience for mobile users by offloading computation-intensive tasks to the servers deployed at the edge of mobile networks <ref type="bibr" target="#b11">[12]</ref>. Motivated by this, in the following section we present a novel computation framework for embedding MEC into AR applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>mec-bAsed Ar frAmework</head><p>In this section, we first present a novel hierarchical computation architecture for multi-user AR systems and then introduce a detailed mechanism to support AR applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>hIerArchIcAl computAtIon ArchItecture</head><p>Considering a multi-user AR scenario where several AR applications need to be executed simultaneously, we propose a hierarchical architecture composed of three layers, namely, the user layer, the edge layer, and the cloud layer. As illustrated in Fig. <ref type="figure">2</ref>, multiple AR devices are located in the user layer and are connected to the edge layer through wireless links. The cloud layer mainly consists of an enormous database for data storage and abundant computational resources for data processing. These two layers are quite similar to the existing AR architectures and thus we do not devote special attention henceforth.</p><p>The uniqueness of our proposed architecture is that an edge layer is inserted between the conventional cloud layer and user layer. The edge layer can be equipped at the base stations (BSs) of cellular networks or the access points (APs) of WiFi networks. The merit of this design is that MEC can be utilized to improve end-to-end latency and energy consumption performance of AR applications. Furthermore, cloud computing and edge computing can be potentially collaborated for further performance enhancement.</p><p>In the proposed hierarchical architecture, one major issue is how to design the function modules in the edge layer to seamlessly collaborate with the other two layers. To tackle this problem, we introduce three functionalized components, namely, communication unit, operation platform, and virtualized controller in the edge layer on the basis of software defined network (SDN) technology. Note that the combination of the three This article has been accepted for inclusion in a future issue of this magazine. Content is final as presented, with the exception of pagination.</p><p>modules also leads to the convergence of communication, computation, and control. In what follows, we will present a detailed description of these three modules.</p><p>Communication Unit: The communication unit can be regarded as a "bridge" that enables real-time data transmission between the edge layer and the other two layers. In one aspect, when multiple AR devices offload the computational tasks, such as video steams, to the BS, the inner radio remote unit (RRU) has the responsibility to successfully receive these data. Furthermore, these data are required to be delivered to the operation platform for further processing. On the other aspect, the computation results from the operation platform and cloud layer should be multicasted to the corresponding users through the communication unit.</p><p>Operation Platform: The operation platform is the core of this architecture, which processes the offloaded AR tasks from mobile users. The original data from the RRU is first stored in the edge cache, and will be delivered to the computing platform for further processing. The critical AR computing platform is composed of a computing module (resembling a computer's CPU) and a graphics module (resembling a computer's GPU). The former is utilized to process computing-related tasks, such as tracking and mapping, while the latter is utilized to process graphics-related tasks such as object recognition. Since AR tasks usually require additional data, such as 3D-models and annotations of the recognized objects, we establish a small database at the edge layer for storing the object information that is frequently accessed. With this design, we do not have to invariably fetch the requested information from the remote cloud database, which can significantly reduce end-to-end latency.</p><p>Virtualized Controller: The virtualized controller serves as the "centralized coordinator" of the whole edge layer, which is divided into four specific components: the network controller, the computing controller, the storage controller, and the system controller. The network controller manages all network activities among three layers, such as network establishment and data transmission. Accordingly, the computing controller supervises the entire process in the operation platform while it optimally allocates the available computational resources to each AR task with specific requirements. Moreover, the inherent executive priorities and collaborative properties of AR tasks from different subscribers are also evaluated in the computing controller. In addition, the storage controller aims at properly managing the memory mechanism of the edge database for fast data searching and updating. Finally, the system controller monitors the behaviors of the above three controllers and coordinates them in a more efficient way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>mec-bAsed Ar operAtIon mechAnIsm</head><p>Thus far, our discussions have focused on the physical modules of the proposed hierarchical architecture for AR applications. In the following, we further present some detailed operations to facilitate the AR implementation.</p><p>As depicted in Fig. <ref type="figure" target="#fig_0">3</ref>, the proposed MEC-based AR operation mechanism can be divided into three tiers, which are consistent with the hierarchical architecture, that is, the user tier, the edge tier, and the cloud tier. The main idea of this mechanism is that the video source and the renderer of AR applications must be processed locally, whereas the computation-intensive components, that is, the tracker, mapper, and object recognizer, should be offloaded to the edge and cloud servers. The detailed operations in each tier are generalized into specific blocks and will be described in the following.</p><p>The user tier is responsible for executing the local operations. Multiple AR devices simultaneously start with sensing the real environment, producing raw videos, and capturing users' gestures via their cameras and sensors. Through identification analysis, this original information will be transformed into two categories: the video streams which contain the raw video data and the operation instructions which carry the specific requirements of mobile subscribers, such as object identification and sentiment analysis. Thereafter, this information will be further duplicated into two copies with one stored in the uplink cache for data transmission and the other stored in the local cache for subsequent processing. Consequently,  </p><note type="other">Cloud Tier Edge Tier User Tier</note><p>This article has been accepted for inclusion in a future issue of this magazine. Content is final as presented, with the exception of pagination.</p><p>the transceivers of mobile AR devices will transmit the data in the uplink cache to the edge layer through wireless channels.</p><p>The edge tier plays a critical role in computing AR applications. Upon receiving the offloaded data from AR devices, the BS will first classify them into two kinds: the raw video streams and the user's operation instructions, and then deliver them to the edge cache for separate storage. Thereafter, these two kinds of data are delivered to the tracker-mapper module and the video clipping module, respectively. The tracker-mapper module then tracks users' locations and builds virtual coordinates to coincide with the real world via some algorithms, such as simultaneous localization and mapping (SLAM) and parallel tracking and mapping (PTAM). Meanwhile, the video clipping module slices one representative frame (or image) from each raw video for subsequent processing. It should be noted that some users may observe the same object and require the same information of this object. With this regard, classifiers can be leveraged to sort all frames from different videos into several categories based on the inherent information, such that each category contains those frames of the same object. This function can be implemented via some well known machine learning algorithms, such as convolutional neural networks (CNN) and support vector machines (SVM). Afterward, one typical image of each category is picked out and utilized to match the standard images pre-stored in the edge database by some image retrieval methods. By this means, the inherent collaborative properties of AR applications can be fully utilized and redundant calculation can be effectively avoided. Then, if the matched standard image is found in the edge database, the corresponding annotation information will be fetched from the adjacent edge storage. Otherwise, the related frame will be offloaded to the cloud server for further searching.</p><p>The cloud tier contains a large cloud database for storing the additional data that are not cached in the edge tier due to its limited memory size. Once the retrieval operation in the edge tier is not realized, the corresponding image will be offloaded to the cloud tier for further searching. Owing to the adequate computational resources at the cloud server and the sufficient capacity of the cloud storage, image retrieval will be generally achieved. Thereafter, the requested information will be transmitted back to the edge tier and combined with the virtual map that is reconstructed by the tracker-mapper module. Also, the total computation results are multicasted to the corresponding devices. Finally, these data are exhibited to the subscribers after mixing with the original videos via the local renderers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>key ImplementAtIon technologIes</head><p>In this section, we will develop three key technologies, that is, joint communication and computation resource allocation, collaborative cloud and edge computing, and content-based image retrieval, to further improve energy efficiency and reduce processing latency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>JoInt communIcAtIon And computAtIon resource AllocAtIon</head><p>In the proposed framework, the computational tasks of an AR application can be jointly processed by the local device, the edge server, and the cloud server. Meanwhile, the communication resources of the wireless network and the computational resources of the edge/cloud servers, can be shared by all AR devices. Therefore, joint communication and computation resource allocation is essential to further improve the delay and energy performance <ref type="bibr" target="#b12">[13]</ref>. Generally, two schemes in current AR scenarios should be taken into account, that is, the centralized and distributed resource allocation schemes.</p><p>In centralized AR systems, both user priority and channel state information can be acquired in the edge layer. Therefore, the network controller and the computing controller can collaboratively design the resource allocation policy by optimizing a specific objective function, such as minimizing end-to-end latency under a prescribed resource utilization constraint and maximizing mobile energy efficiency under an offloading latency constraint. Moreover, the network controller and the computing controller can monitor the specific requirements of different AR tasks in real-time and adaptively adjust the resource allocation to meet the diverse user demands.</p><p>However, in distributed AR systems, the aforementioned information can no longer be obtained by the edge layer, making it difficult to centrally control the allocation of available communication and computational resources. To tackle this problem, game-theoretical techniques can be exploited to develop distributed algorithms based on past network and channel information, whereas the obtained result is demonstrated to achieve the Nash equilibrium and can deliver satisfactory latency and energy consumption experiences for mobile AR subscribers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>collAborAtIve cloud And edge computIng</head><p>On the one hand, traditional cloud servers are typically deployed at the remote cloud platform, suffering from long propagation delay when transmitting onerous AR tasks in the core network. On the other hand, although the adjacent MEC servers can be implemented at the nearby BS, their computation and storage capacities are usually limited. Therefore, by combining the advantages of the powerful computation capacity of cloud computing and the proximity to mobile subscribers of edge computing, collaborative cloud and edge computing is envisioned as a promising paradigm to achieve better AR performance.</p><p>In the proposed framework, due to the limited edge storage capacity, additional information such as 3D models and annotations of those unpopular objects should be stored in the cloud database to alleviate the storage burden at the edge database. On the other hand, the edge database only needs to store the frequently accessed information of the popular objects. This can be realized by storing the historical access record of each object's information in the edge layer and setting By combining the advantages of the powerful computation capacity of cloud computing and the proximity to mobile subscribers of edge computing, collaborative cloud and edge computing is envisioned as a promising paradigm to achieve better AR performance.</p><p>an appropriate threshold to judge which object is popular. By this means, massive object recognition operations can be avoided at the edge layer, and AR processing latency can be effectively reduced. Moreover, when several edge servers are simultaneously served by the same cloud server, it is important to properly allocate the available cloud computational resources to each edge server based on their workload and local computation capacities. The detailed resource allocation policy can be derived by solving a specific optimization problem through some convex and non-convex optimization tools. For instance, more cloud computational resources need to be allocated to assist those edge servers with less computation capacities and heavier workload to balance the uneven resource and workload distribution over different edge servers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>content-bAsed ImAge retrIevAl</head><p>The object recognizer is a critical component of AR applications, which usually consumes a large processing delay, especially in the image retrieval procedure. Therefore, advanced content-based image retrieval technology should be developed to accelerate the searching speed. Motivated by the work in <ref type="bibr" target="#b13">[14]</ref>, we present a typical pipeline for image retrieval within the proposed mechanism, which consists of three steps: feature extraction, feature matching, and geometric verification.</p><p>Feature Extraction: Once an image is input into the graphics module of the edge layer, the feature extraction algorithm will immediately search its inherent salient interest points, which are used to estimate the similarity between this image and the standard images pre-stored in the edge and cloud databases. Various robust feature descriptors can be applied to obtain typical features, such as scale invariant feature transform and speeded up robust features <ref type="bibr" target="#b14">[15]</ref>.</p><p>Feature Matching: The current pairwise feature matching algorithm generally consumes a lot of time since it directly matches the input image with all standard images. To cope with this issue, we pre-construct a data structure to store the features of all standard images with particular indices. Then, by comparing the extracted features with those in the data structure, a shortlist of candidate images can be efficiently filtered. Thereafter, the slow pairwise feature matching method can be applied between the input image and the candidate images only, and a best-matched image can be eventually picked out from the shortlist. In this way, image retrieval delay can be substantially reduced.</p><p>Geometric Verification: After obtaining the best-matched standard image, further examination is required to confirm whether the matching result is correct. Geometric verification is commonly utilized to test whether the input image and the best-matched standard image are similar with only geometric and photometric distortions. If the verification result is correct, the matching relation will be established. Otherwise, the input image and its features will be offloaded to the cloud server for further searching.</p><p>It should be noted that with the above three steps, the computation and storage resources of the cloud server and edge server can be jointly utilized to improve the accuracy of object rec-ognition. Consequently, end-to-end latency and energy consumption can be effectively reduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>performAnce evAluAtIon</head><p>In this section, we present simulation results to manifest the latency and energy performance enhancement of our proposals against two benchmark schemes. We consider a scenario where multiple mobile devices in the coverage of the same BS execute AR applications simultaneously. The edge layer is implemented at the central BS with a radius of 200 m. The cloud layer is deployed in a remote cloud platform. The BS connects the cloud platform through a backhaul link, whose uplink and downlink transmission capacities are both set to be 200 Mb/s. The edge and cloud computing capacities are set to be 5 ï´ 10 10 CPU cycle/s and 3 ï´ 10 11 CPU cycle/s, respectively <ref type="bibr" target="#b11">[12]</ref>. Each AR device is randomly distributed according to Poisson distribution within the BS coverage, adopting TDMA channel access with a bandwidth of 15 MHz. The local computation capacity of each device follows the uniform distribution between [5 ï´ 10 8 , 2 ï´ 10 9 ] CPU cycle/s. The channel gains between mobile devices and the BS are generated according to independent and identically distributed (i.i.d.) Rayleigh random variables with unit variance. Since the cloud computing components are first offloaded to the edge layer through wireless links and then transmitted to the cloud server through the backhaul link equipped with high transmission bandwidth, the distance between mobile devices and the cloud server could be ignored in this article. Other major parameters of AR applications can be found in <ref type="bibr" target="#b15">[16]</ref>.</p><p>In our test, we compare the performance of our proposals with two benchmark schemes: the local computing scheme where the tracker and mapper modules are kept for local processing while the object recognizer is offloaded for cloud computing, and the cloud computing scheme where the tracker, mapper, and object recognizer are all offloaded to the remote cloud platform. Meanwhile, we name our proposed scheme the edge computing scheme.</p><p>Figure <ref type="figure" target="#fig_1">4a</ref> presents the comparative results of the end-to-end latency of each device in the three schemes, where the transmission power of each mobile device is bounded by 24 dBm. In this simulation, since both communication and computation latency increase almost linearly with the number of devices, the end-to-end latency of each scheme has an approximately linear trend. From the figure, the local computing scheme always delivers the worst latency performance among the three schemes because of the insufficient computational resources of mobile devices. Moreover, due to the limited communication resources, the end-to-end latency increases with the number of devices in all schemes. However, the proposed edge computing scheme always achieves the best latency performance since it</p><p>The object recognizer is a critical component of AR applications, which usually consumes a large processing delay, especially in the image retrieval procedure. Therefore, advanced content-based image retrieval technology should be developed to accelerate the searching speed.</p><p>can collaborate the cloud computing and edge computing. Specifically, for the case with 36 devices, the edge computing scheme can reduce latency by about 41.44 percent and 12.85 percent as compared with local computing and cloud computing schemes, respectively. Note that in the simulation, we set the computation capacity of the cloud server almost 10 times of the edge server as a typical example. With the increase of the cloud computation capacity, the performance gap between the cloud computing scheme and the edge computing scheme will become smaller. Figure <ref type="figure" target="#fig_1">4b</ref> depicts the comparative results of the total energy consumption of all devices with the number of devices, where the maximum delay tolerance of each AR application is 450 ms. From this figure, the cloud computing scheme can always achieve better energy efficiency than the local computing scheme because of the extra energy consumption for tracking and mapping at local devices. Nevertheless, the proposed edge computing scheme always achieves the highest energy efficiency among all schemes. In the scenario with 36 devices, our proposed scheme can save about 73.71 percent and 65.34 percent energy consumption as compared with local computing and cloud computing schemes, respectively. Specifically, the overall energy consumption of each scheme would grow rapidly when the number of devices becomes large, because the communication energy becomes dominant with a large number of mobile devices, which increases exponentially with the number of devices.</p><p>To further show the performance advantage on energy saving of the proposed edge computing scheme, in Fig. <ref type="figure" target="#fig_1">4c</ref> we depict the total energy consumption of all mobile devices with different delay tolerances, where the number of devices is set to be 30. From the figure, the mobile energy consumption of each scheme decreases with the maximum delay tolerance. The reason is that, more computational resources should be utilized to assist the task processing to meet the stricter delay requirement, leading to the higher mobile energy consumption. Once again, the superiority of the edge computing scheme is demonstrated by this test.</p><p>Overall, our tests demonstrate that the MECbased AR framework is more efficient than the other two conventional schemes as a result of the collaboration between cloud computing and edge computing. Both processing latency and energy consumption can be significantly reduced, leading to better QoE, such as high image resolution, long battery autonomy, convenient portability, and real-time performance for AR subscribers. conclusIon This article presents a novel MEC-based computation framework for current AR applications to optimize energy efficiency and processing delay. A hierarchical computation architecture is first developed, which is composed of three layers: the user layer, the edge layer, and the cloud layer. By seamlessly integrating the communication, computation, and control functions at the edge layer and taking full advantage of both edge computing and cloud computing, computation-intensive tasks of AR applications can be intelligently offloaded to both edge and cloud servers for collaborative computation. In accordance with this architecture, we then develop a novel mechanism to simultaneously support multiple AR applications of different mobile subscribers. Three key technologies are also discussed, which can cooperate to further reduce the processing latency and energy consumption of mobile AR devices. Finally, our proposed architecture and mechanism are tested by simulation results, which demonstrate the substantial performance improvement of our proposals over the existing schemes.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FIGURE 3 .</head><label>3</label><figDesc>FIGURE 3. MEC-based AR operation mechanism.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIGURE 4 .</head><label>4</label><figDesc>FIGURE 4. Simulation results: a) end-to-end latency of three schemes; b) energy consumption of three schemes; c) total mobile energy consumption under different delay tolerances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE 1 .</head><label>1</label><figDesc>Major AR devices.</figDesc><table><row><cell>Product</cell><cell>Operation mode</cell><cell>CPU</cell><cell>GPU</cell><cell>Latency</cell><cell>Battery autonomy</cell><cell>Weight</cell></row><row><cell>Google Glass</cell><cell>Independent</cell><cell>1 GHz</cell><cell>300 MHz</cell><cell>700 ms for user interface (UI) response</cell><cell>&lt; 1 h when recording videos</cell><cell>42 g</cell></row><row><cell>Microsoft HoloLens</cell><cell>Independent</cell><cell>1.04 GHz</cell><cell>HoloLens Graphics</cell><cell>Few seconds for gesture recognition</cell><cell>2-3 h for typical use</cell><cell>579 g</cell></row><row><cell>ODG R-9</cell><cell>Independent</cell><cell>2.45 GHz</cell><cell>710 MHz</cell><cell>Not available</cell><cell>24 h for browsing and casual use</cell><cell>184 g</cell></row><row><cell>Meta 2</cell><cell>Dependent</cell><cell>3.4 GHz</cell><cell>1127 MHz</cell><cell>80 ms for gesture recognition</cell><cell>Powered by PC</cell><cell>500 g</cell></row><row><cell>Recon Jet</cell><cell>Dependent</cell><cell>1 GHz</cell><cell>PowerVR SGX540</cell><cell>40 s for loading navigation map</cell><cell>4 h for typical use</cell><cell>85 g</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>This article has been accepted for inclusion in a future issue of this magazine. Content is final as presented, with the exception of pagination.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>This work was supported in part by the Natural Science Foundation of China under Grants 61671407, 61471319, and 61831004; the Open Research Fund of the State Key Laboratory of Integrated Services Networks, Xidian University, under Grant ISN18-13; the Zhejiang Provincial Natural Science Foundation for Distinguished Young Scholars under Grant LR19F010002; and the Fundamental Research Funds for the Central Universities.</p><p>references</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Mobile Augmented Reality Survey: From Where We Are to Where We Go</title>
		<author>
			<persName><forename type="first">D</forename><surname>Chatzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="6917" to="6950" />
			<date type="published" when="2017-04">Apr. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The Case for VM-Based Cloudlets in Mobile Computing</title>
		<author>
			<persName><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pervasive Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="14" to="23" />
			<date type="published" when="2009-12">Oct.-Dec. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Gearing Resource-Poor Mobile Devices with Powerful Clouds: Architectures, Challenges, and Applications</title>
		<author>
			<persName><forename type="first">F</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="14" to="22" />
			<date type="published" when="2013-06">Jun. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Mechanisms and Challenges on Mobility-Augmented Service Provisioning for Mobile Cloud Computing</title>
		<author>
			<persName><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="89" to="97" />
			<date type="published" when="2015-03">Mar. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">X</forename><surname>Tran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Collaborative Mobile Edge Computing in 5G Networks: New Paradigms, Scenarios, and Challenges</title>
		<imprint>
			<date type="published" when="2017-04">Apr. 2017</date>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="54" to="61" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Survey on Mobile Edge Computing: The Communication Perspective</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Surv. Tut</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="2322" to="2358" />
			<date type="published" when="2017-08">Aug. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Mobile Edge Computing Potential in Making Cities Smarter</title>
		<author>
			<persName><forename type="first">T</forename><surname>Taleb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="38" to="43" />
			<date type="published" when="2017-03">Mar. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Foggy Clouds and Cloudy Fogs: A Real Need for Coordinated Management of Fog-to-Cloud Computing Systems</title>
		<author>
			<persName><forename type="first">X</forename><surname>Masip-Bruin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="120" to="128" />
			<date type="published" when="2016-10">Oct. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Hierarchical Edge Cloud Architecture for Mobile Computing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Tong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Int&apos;l. Conf. Comput. Commun. (INFOCOM)</title>
		<meeting>IEEE Int&apos;l. Conf. Comput. Commun. (INFOCOM)<address><addrLine>San Francisco, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016-04">Apr. 2016</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Leveraging Cloudlets for Immersive Collaborative Applications</title>
		<author>
			<persName><forename type="first">T</forename><surname>Verbelen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pervasive Computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="38" />
			<date type="published" when="2013-12">Oct.-Dec. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mobile, Collaborative Augmented Reality Using Cloudlets</title>
		<author>
			<persName><forename type="first">S</forename><surname>Bohez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Mobilware</title>
		<meeting>Mobilware<address><addrLine>Bologna, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013-11">Nov. 2013</date>
			<biblScope unit="page" from="45" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Energy-Efficient Resource Allocation for Mobile-Edge Computation Offloading</title>
		<author>
			<persName><forename type="first">C</forename><surname>You</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Wireless Commun</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1397" to="1411" />
			<date type="published" when="2017-03">Mar. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Joint Optimization of Radio and Computational Resources for Multicell Mobile-Edge Computing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sardellitti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Inf. Process. Netw</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="89" to="103" />
			<date type="published" when="2015-06">June 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mobile Visual Search: Architectures, Technologies, and the Emerging MPEG Standard</title>
		<author>
			<persName><forename type="first">B</forename><surname>Girod</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Multimedia</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="86" to="94" />
			<date type="published" when="2011-09">July-Sept. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Recent Advances in Features Extraction and Description Algorithms: A Comprehensive Survey</title>
		<author>
			<persName><forename type="first">E</forename><surname>Salahat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Qasaimeh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE ICIT</title>
		<meeting>IEEE ICIT<address><addrLine>Toronto, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017-03">Mar. 2017</date>
			<biblScope unit="page" from="1059" to="1063" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Energy-Efficient Resource Allocation for Mobile Edge Computing-Based Augmented Reality Applications</title>
		<author>
			<persName><forename type="first">A</forename><surname>Al-Shuwaili</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Simeone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Wireless Commun. Lett</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="398" to="401" />
			<date type="published" when="2017-06">June 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">His research interests include 5G wireless communications with an emphasis on mobile edge computing and device-to-device communications. guan huang is currently pursuing the M.S. degree in information and communication engineering with the College of Information Science and Electronic Engineering, Zhejiang University</title>
		<author>
			<persName><forename type="first">Jinke</forename><surname>Ren</surname></persName>
			<affiliation>
				<orgName type="collaboration">IET Communications</orgName>
			</affiliation>
		</author>
		<author>
			<persName><forename type="first">(</forename><surname>S'17</surname></persName>
			<affiliation>
				<orgName type="collaboration">IET Communications</orgName>
			</affiliation>
		</author>
	</analytic>
	<monogr>
		<title level="m">His research interests include transceiver design for multiple-antenna systems, mmWave communications, and cooperative and relay communications. ZhaoYang Zhang (M&apos;00) received his Ph.D. degree from Zhejiang University in 1998</title>
		<meeting><address><addrLine>Hangzhou, China; Hangzhou, China; China; Hangzhou, China; Hangzhou, China; Hangzhou, China; China; University of York, York, U.K.; Paris, France; Hangzhou, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">2017. 2018. 2018</date>
		</imprint>
		<respStmt>
			<orgName>Zhejiang University ; Zhejiang Provincial Key Laboratory of Information Processing at Zhejiang University ; ing from Zhejiang University ; Science and Electronic Engineering, Zhejiang University ; Xidian University ; Zhejiang University</orgName>
		</respStmt>
	</monogr>
	<note>Globecom 2014 Wireless Communications Symposium, and 2017 Workshop HMWC</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
