<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Soft Processor Overlay with Tightly-coupled FPGA Accelerator</title>
				<funder ref="#_wHrdNpA">
					<orgName type="full">Research Grants Council of Hong Kong</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ho-Cheung</forename><surname>Ng</surname></persName>
							<email>hcng@eee.hku.hk</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical &amp; Electronic Engineering</orgName>
								<orgName type="institution">The University of Hong Kong</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Cheng</forename><surname>Liu</surname></persName>
							<email>liucheng@eee.hku.hk</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical &amp; Electronic Engineering</orgName>
								<orgName type="institution">The University of Hong Kong</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hayden</forename><surname>Kwok-Hay</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical &amp; Electronic Engineering</orgName>
								<orgName type="institution">The University of Hong Kong</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Soft Processor Overlay with Tightly-coupled FPGA Accelerator</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-01-03T09:20+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>FPGA overlays are commonly implemented as coarse-grained reconfigurable architectures with a goal to improve designers' productivity through balancing flexibility and ease of configuration of the underlying fabric. To truly facilitate full application acceleration, it is often necessary to also include a highly efficient processor that integrates and collaborates with the accelerators while maintaining the benefits of being implemented within the same overlay framework.</p><p>This paper presents an open-source soft processor that is designed to tightly-couple with FPGA accelerators as part of an overlay framework. RISC-V is chosen as the instruction set for its openness and portability, and the soft processor is designed as a 4-stage pipeline to balance resource consumption and performance when implemented on FPGAs. The processor is generically implemented so as to promote design portability and compatibility across different FPGA platforms.</p><p>Experimental results show that integrated software-hardware applications using the proposed tightly-coupled architecture achieve comparable performance as hardware-only accelerators while the proposed architecture provides additional run-time flexibility. The processor has been synthesized to both low-end and high-performance FPGA families from different vendors, achieving the highest frequency of 268.67 MHz and resource consumption comparable to existing RISC-V designs.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>By raising the abstraction level of the underlying configurable fabric, many early works have already demonstrated the promise of using FPGA overlays to improve designer's productivity in developing hardware accelerators <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b2">[2]</ref>. While such hardware accelerators can often deliver significant performance improvement over their software counterparts, they are often fixed in functionality and lack the flexibility to process irregular input or data that depends on run-time dynamics. To truly take advantage of the performance benefit of hardware accelerators, it is therefore desirable to have an efficient CPU in the overlay tightly-coupled with the accelerator to control its operations and to maintain compatibility with the rest of the software system.</p><p>To illustrate these intricate hardware-software codesign challenges, Algorithm 1 shows a simple design that accelerates the Sobel edge detection algorithm in such heterogeneous system. In this implementation, an accelerator that computes 16 ? 16 output pixels at a time is implemented in FPGA. During run time, depending on the user input image size, the software reuses this hardware accelerator for as many complete 16 ? 16 output pixels as possible. The remaining odd pixels, as well as pixels on the boundary of the image where the standard filter kernel cannot readily operate on, are handled in software.</p><p>Data: Pixels of size N ? N 1 # define BUF 16 // HW computes 16x16 output pixels 2 for r := 0 to N -1 do Algorithm 1: Pseudocode for Sobel edge detector. As the hardware accelerator operates on a fixed 16 ? 16 array of output pixel at a time, software passes control to the accelerator only for cases when all 17?17 pixels are available. Otherwise, the computation is carried out in software. Assume N -2 is a multiple of BUF.</p><p>While the design of Algorithm 1 may be specific to the particular implementation of Sobel edge detection, it highlights several challenges commonly faced by many real-world hardware-software designers. First of all, because of the limited flexibility of most hardware accelerators, the controlling software must ensure the necessary input data are available before the accelerator is launched. Furthermore, unless the hardware accelerator is arbitrarily flexible, software running in the CPU must also be able to process any run time data that cannot readily be processed by the accelerator.</p><p>In view of the above, this paper proposes the use of a small, open source soft processor to provide fine-grained control for the hardware accelerator in the context of an overlay framework. The core is designed to be tightly-coupled with the hardware accelerator in order to minimize the overhead involved with switching control between hardware and software. RISC-V RV32I <ref type="bibr" target="#b3">[3]</ref> is chosen as the ISA for its openness and simplicity. Finally, the core is generically designed in order to promote design portability and compatibility.</p><p>As such, we consider the main contribution of this work rests on the demonstration of the benefits of tightly-coupling a lightweight CPU with hardware accelerator to serve within a combined overlay architecture. We also demonstrated that a simple RISC-V CPU with 4-stage pipeline is adequate to provide control while delivering reasonable performance and maintaining software compatibility.</p><p>In the next section, we elaborate on the design and implementation of the soft processor and the tightly-coupled architecture. We then evaluate the performance of the proposed architecture in Section III and discuss related work in Section IV. We make conclusions in Section V.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. DESIGN AND IMPLEMENTATION DETAILS</head><p>Figure <ref type="figure" target="#fig_1">1</ref> displays a high-level diagram of the proposed tightly-coupled architecture. This design consists of two entities where an accelerator can be integrated with the singleissue, in-order processor pipeline by sharing the data memory (DMEM). To ensure correct execution flow, control signal is fed from the accelerator to the processor control path so that the pipeline is stalled correctly when the accelerator is carrying out execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Soft Processor</head><p>In order to reduce substantial resource consumption while maintaining certain efficiency, the soft processor is designed as a 4-stage pipeline by integrating the execution-stage and memory-stage together. This eliminates the load-use hazard where a LOAD instruction is followed by an instruction that uses the value which is just transferred from DMEM to Register File.</p><p>In spite of the above advantage, since the memory-stage is now merged with the execution-stage and the memory address needs to be ready before the load/store instruction reaches DMEM, an extra 32-bit adder is placed at the end of the decode-stage. This could incur extra resource consumption and additional pipeline delay.</p><p>We found that, from the synthesis results, the proposed 4-stage processor consumes 18% fewer amounts of FPGA registers and LUTs when compared with the traditional 5stage pipeline. We believe that this reduction is important for portability and compatibility concerns, especially when the  soft processor is ported onto the legacy FPGA devices which could be intrinsically small in size. Also, the additional delay incurred by the extra adder could be partly compensated by the two additional multiplexers which are placed in front of DMEM.</p><p>Moreover, as the benefit of using a virtual layer of overlay architecture on FPGA rests on improving designer's productivity while providing certain customization capabilities, the proposed soft processor can also be customized in terms of the IMEM and DMEM size. Developers can change the memory sizes by modifying a few lines of macro or execute a program that comes along with the soft processor design package.</p><p>It is important to note that, in order to further minimize FPGA resource consumptions, components that are not strictly necessary for processor overlay execution are removed from the current implementation. These components include the Control Status Registers (CSR) and their corresponding logic. Future versions of the processor implementation will incorporate the CSR back and will provide tools to allow developers to remove them during the processor customization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. The Tightly-coupled Architecture</head><p>In order to support direct memory access and allow zerooverhead transfers of control, the soft processor is tightlycoupled with the hardware accelerator as illustrated in Figure 1. In the proposed framework, Multiple Runtime Architecture Computer(MURAC) model <ref type="bibr" target="#b4">[4]</ref> is adopted to handle the transfer of control when the execution is switched from one architecture to another.</p><p>The execution model of the tightly-coupled architecture follows naturally from the MURAC model where the proposed 4-stage pipeline is defined as the primary architecture while the hardware accelerator is defined as the auxiliary architectures. Switching between these two architectures in runtime is achieved by the Branch-Auxiliary Architecture (BAA) and Return-To-Primary-Architecture (RPA) machine instructions. Logically, a MURAC machine contains only one address space that is shared between two architectures.</p><p>1) Custom Instruction-set Extension: To apply MURAC machine for the proposed tightly-coupled architecture, custom instruction-set is used to implement the BAA and RPA instructions.</p><p>Custom instruction-set extension <ref type="bibr" target="#b5">[5]</ref> is an important feature in RISC-V RV32I in the sense that it provides opportunity for 2nd International Workshop on Overlay Architectures for FPGAs (OLAF2016) designers to integrate other hardware modules such as accelerators onto a standard RISC-V processor. It also provides a unified programming model along various and future RISC-V processor designs, which makes it easier to leverage software development efforts for the ISA toolchain during the processor customization process.</p><p>2) BAA and PRA Instructions Format: In the proposed architecture, opcode space custom-0 is selected to implement the BAA and RPA instructions. The format of this opcode is defined to be inst[6:0]==0001011. For the benefits of regularity and simplicity of the decoding hardware, both instructions follow the format of I-type instruction.</p><p>Table <ref type="table" target="#tab_0">I</ref> displays the the format of BAA instruction which resembles the format as in LOAD instruction. The fields base and offset are added together to form a memory address location. It represents an address location that points to an array of data. This address is passed to the auxiliary architecture, i.e. accelerator during the execution of the BBA instruction.</p><p>The array passed to the auxiliary architecture acts like the command line arguments in any C/C++ program. It stores up the data that is needed by accelerator. The first data represents the number of elements inside the array.</p><p>The field width, on the other hand, is used to distinguish between the BAA and RPA instructions, as they share similar encoding. The format of the RPA instruction is shown in Table <ref type="table" target="#tab_1">II</ref>.</p><p>The fields base and offset in RPA instruction are added together to form a return memory address. This instruction acts like a return instruction where the program is unconditionally jumped to base+offset. Currently, the processor will branch to the address (PC+4) after the auxiliary architecture finishes its execution.</p><p>3) Modifications of the Soft Processor: In the control-path, extra control registers are defined to decode the BAA and RPA instructions. These registers are used to recognize the custom instruction with the help of comparators. In addition, stall signals are fed from the auxiliary architecture to the controlpath so that the processor would not be executing once the control is passed to accelerator.</p><p>On the other hand, when the execution is branched to the auxiliary architecture, the processor pipeline is stalled and components on the data-path such as DMEM would not be accessed. This makes resource sharing between two architectures possible. In the proposed architecture, DMEM is designed to be shared with the accelerator. A number of multiplexers are added before the inputs of the DMEM and the output of DMEM is also fed to the auxiliary architecture. The control path would assert the correct sel signal for the multiplexers when the control is branched to auxiliary architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. EXPERIMENTS &amp; MEASUREMENTS</head><p>To study the design implications of the proposed framework, a set of real-life applications was programmed and run on the tightly-coupled architecture. In addition, the soft processor was also benchmarked and compared with an existing similar  RSIC-V design. Finally, resource consumption and design portability of the soft processor were evaluated to warrant the merit of the proposed framework as FPGA overlay.</p><p>A. Evaluation of the Tightly-coupled Architecture 1) Experimental Setup: Four real-life applications including matrix-matrix multiplication (MM), finite impulse response (FIR) filter, K-mean clustering algorithm (KM) and Sobel edge detector (SE) were taken as the benchmark to evaluate the tightly-coupled architecture. These applications are essentially loop kernels which are highly parallelizable and can be mapped to FPGA for performance acceleration. The parameters of the benchmark are listed in Table <ref type="table" target="#tab_2">III</ref>.</p><p>To understand the underlying influence of the tightlycoupled architecture (TIGHTLY-COUPLED), the inner loop nest in each application was partially unrolled. Detailed loop unrolling configurations can be found in Table <ref type="table" target="#tab_3">IV</ref>. The unrolled loop body was executed on a handcrafted hardware design (auxiliary architecture) for acceleration while miscellaneous loop controls and the boundary conditions that could not be covered by the accelerators were executed on the soft processor (primary architecture).</p><p>Meanwhile, we also provided a pure hardware implementation (HW) and a pure software implementation (SW) for each of the applications for comparison. Basically, HW had the whole application implemented on FPGA with handcrafted hardware design. It can process not only the loop body but also the loop control as well as the boundary condition. Therefore, the execution can be done entirely on FPGA without the interventions from the soft processor. SW simply ignored the accelerator and had the whole application running on the proposed soft processor.</p><p>Finally, we assumed that every piece of data was already cached in DMEM so as to eliminate the influence from the memory and maximize the impact of the soft processor architecture on the overall execution.</p><p>2) Results &amp; Analysis: As shown in Figure <ref type="figure" target="#fig_2">2</ref>, the tightlycoupled architecture achieves similar performance when compared with HW in most of the benchmarks. In particular, it is found that the execution of MM, FIR and KM on TIGHTLY- COUPLED exhibits comparable performance to that on HW. The main reason is that these applications only need the soft processor to handle the loop control which takes a small amount of time while they rely on the FPGA accelerators to handle the most time-consuming computing.</p><p>In the case of SE, however, the number of processing cycles needed in TIGHTLY-COUPLED is significantly more than that in HW. Such performance discrepancy is mainly due to the following two reasons. First, the boundary conditions in SE, i.e. the edge pixels, could not be covered by the auxiliary architecture for acceleration. Therefore a relatively large amount of elements (516 in this case) had to be handled by the soft processor. This would undoubtedly increase the overall execution latency. Second, SE needed the soft processor to perform a large amount of multiplication to calculate the correct memory location for a particular pixel and the entire execution latency will be lengthened consequently, especially when RV32I does not include a multiply instruction. This problem can be alleviated by extending the ISA to RV32IM and incorporating a multiplier in the soft processor design, which will be supported in the future as one of the customization parameters in the proposed framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Evaluation of the Soft Processor</head><p>As mentioned in Section I, although the soft processor is mostly responsible for irregular data processing and providing controls over the accelerator, it is still important to have the processor maintaining sufficient efficiency while keeping the area consumption minimal.</p><p>1) Experimental Setup: In order to study the efficiency of the proposed soft processor, we compared the proposed 4-stage pipeline with ORCA RISC-V core from VectorBlox Computing Inc. <ref type="bibr" target="#b6">[6]</ref>. ORCA core is known as an optimized RISC-V  design on FPGA that implements a 4-stage pipeline, which is sharing similar design methodology with our proposed soft processor.</p><p>In this experiment, we first obtained the maximum frequencies supported by both processors as well as their resource consumptions by synthesising the designs in Xilinx ISE 14.3. Then the benchmarks in Table <ref type="table" target="#tab_2">III</ref> were executed using RTL simulator to obtain the processing cycles and subsequently to calculate the execution latency. Note the device chosen for this experiment was Artix 7 xc7a100t-1csg324.</p><p>2) Results &amp; Analysis: Table <ref type="table" target="#tab_4">V</ref>  From these tables, we can see that the proposed soft processor typically occupies less area while at the same time providing slightly higher processing speed. The only resource that the proposed soft processor consumes more than that of ORCA core is the on-chip block RAM. This is mainly due to the existence of the IMEM and DMEM which are inferred as block RAM in the proposed processor. Such memory modules do not exist in ORCA core and hence that explains the discrepancy in block RAM consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Portability and Compatibility Considerations</head><p>One of the major advantages of FPGA overlay is to raise the device abstraction level by providing a virtual layer that is conceptually located between user applications and physical 2nd International Workshop on Overlay Architectures for FPGAs (OLAF2016) FPGA. Therefore, to integrate the soft processor within the same overlay framework of the accelerator, the processor must be able to support cross-vendors and cross-platforms FPGAs to ensure the device portability and compatibility.</p><p>In view of this, we have designed the processor in a generic manner such that the 4-stage pipeline design can be synthesized across various platforms ranging from Spartan-3 to Virtex-7 and Cyclone IV to V. Table VII displays the resource consumption and the maximum frequency of the soft processor implementations on both the high-end and low-end FPGA devices. Again, the percentage values in the table is relative to available resources on the target FPGA device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. RELATED WORK</head><p>In academia, various forms of FPGA overlay have been developed to provide an efficient trade-off between flexibility of software and hardware acceleration for computationally intensive applications. Research works such as ZUMA <ref type="bibr" target="#b7">[7]</ref>, QUKU <ref type="bibr" target="#b8">[8]</ref>, or QuickDough <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b2">[2]</ref> have demonstrated the benefits of overlay by improving designers' productivity while maintaining excellent performance.</p><p>In spite of this, research that focuses on the integration between the processor and accelerator remains uncommon. The coupling between these two has not been strictly defined or specified. Therefore in many of the existing overlay works, diverse choice of soft/ hard processors <ref type="bibr" target="#b9">[9]</ref>, <ref type="bibr" target="#b10">[10]</ref>, <ref type="bibr" target="#b2">[2]</ref> are used and the integration between the processor and accelerator varies from one work to another.</p><p>The closest work that is designed to resolve the above coupling problem is ADRES <ref type="bibr" target="#b11">[11]</ref>. Mei et al. proposed an architecture that contains a VLIW processor tightly-coupled with a coarse-grained reconfigurable matrix. By integrating these two entities together, substantial resource sharing and reduced communication can be obtained. However, it is noticed that ADRES is focusing on enhancing the performance of the entire architecture. The design portability and compatibility of the ADRES framework and the resource consumption of the processor on FPGA are not the major concerns in their work.</p><p>The work on soft processors, on the other hand, is extensive both in the industry and academia. Commercial cores such as MicroBlaze <ref type="bibr" target="#b12">[12]</ref> and Nios II <ref type="bibr" target="#b13">[13]</ref> are the most commonly used soft processors on FPGA. However, design portability of these cores is relatively limited since they are generally restricted to their own platform, and as a result are less favourable for deployment in FPGA overlay.</p><p>In academia, many research works on soft processors concentrate on the influence of underlying FPGA architecture. In particular, the processor architecture that is best suitable for the underlying structures of FPGA is comprehensively studied so as to maximize the performance of soft processors <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b15">[15]</ref>.</p><p>In addition, soft vector processors <ref type="bibr" target="#b16">[16]</ref>, <ref type="bibr" target="#b17">[17]</ref>, <ref type="bibr" target="#b18">[18]</ref>, soft VLIW processors <ref type="bibr" target="#b19">[19]</ref>, <ref type="bibr" target="#b20">[20]</ref>, multi-thread soft processors <ref type="bibr" target="#b21">[21]</ref>, <ref type="bibr" target="#b22">[22]</ref> and application-specific soft processors <ref type="bibr" target="#b23">[23]</ref>, <ref type="bibr" target="#b24">[24]</ref> are also extensively studied and developed on FPGA to analyze the performance and to demonstrate the benefits of soft processors.</p><p>Although the above cores are optimized for performance by customizing the processors architectures according to the underlying FPGA structures, design portability and resource consumption are not the primary concerns in these works and therefore porting these soft cores onto other platforms as part of the FPGA overlay framework could require tremendous amount of efforts. Some existing open source soft processors do focus on area optimization and portability such as Plasma <ref type="bibr" target="#b25">[25]</ref> and MB-LITE <ref type="bibr" target="#b26">[26]</ref>. They are light-weight implementations that can be ported to different platforms in a relatively efficient manner. However, as they are based on MIPS <ref type="bibr" target="#b27">[27]</ref> and MicroBlaze ISA respectively, they suffer from patent and trademark issues when being employed commercially.</p><p>Moreover, there exists some lightweight RV32I designs such as zscale <ref type="bibr" target="#b28">[28]</ref>, GRVI <ref type="bibr" target="#b29">[29]</ref> or ORCA <ref type="bibr" target="#b6">[6]</ref> which are similar to the proposed processor. Zscale is a single-issue 3-stage pipeline that is suited for embedded systems. However, its design is not optimized for soft processor implementation and therefore zscale is less desirable for FPGA overlay framework.</p><p>GRVI <ref type="bibr" target="#b29">[29]</ref> core, on the other hand, is an efficient, FPGAoptimized 3-stage pipeline implementation that is specifically designed for Phalanx framework. It consumes 320 LUTS and runs at 375 MHz on Kintex Ultrascale-2 FPGA. Compared with GRVI, the proposed processor puts emphasis on design portability and compatibility as well as architectural extension to the tightly-coupled accelerator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>This paper has presented an open-source soft processor that is tightly-coupled with an FPGA accelerator to become part of an FPGA overlay framework. RISC-V is chosen as the instruction set for its openness and portability, and the soft processor is designed as a 4-stage pipeline to minimize the resource consumption. Experiments show that, when compared with existing design, the proposed soft processor is small and efficient, and the tightly-coupled architecture can provide a unified programming model for software designers while at the same time maintaining certain performance. Furthermore, the processor is generically implemented so as to promote design portability and compatibility across different FPGA platforms. It is anticipated that the proposed architecture can eventually improve the portability of FPGA overlays, and promote the use of FPGA among software developers.</p><p>The soft processor is available at https://github.com/hkucasr/riscv-overlay.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3 for</head><label>3</label><figDesc>c := 0 to N -1 do 4 if pixel[r, c] is edge then 5 SW SOBEL( pixel, r, c ); 6 else if ((r -1) % BUF) == 0 &amp;&amp; 7 (c -1) % BUF) == 0 then 8 HW SOBEL( pixel, r, c );</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: High-level diagram of the proposed tightly-coupled architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: The performance of SW versus TIGHTLY-COUPLED versus HW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>TABLE I :</head><label>I</label><figDesc>The format of BAA instruction.</figDesc><table><row><cell>31</cell><cell>20</cell><cell>19 15</cell><cell>14 12</cell><cell cols="2">11 7 6</cell><cell>0</cell></row><row><cell cols="2">imm[11:0]</cell><cell>rs1</cell><cell>funct3</cell><cell>-</cell><cell cols="2">opcode</cell></row><row><cell>12</cell><cell></cell><cell>5</cell><cell>3</cell><cell>5</cell><cell>7</cell></row><row><cell cols="2">offset[11:0]</cell><cell>base</cell><cell>width</cell><cell>-</cell><cell>BAA</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE II :</head><label>II</label><figDesc>The format of RPA instruction.</figDesc><table><row><cell>31</cell><cell>20</cell><cell>19 15</cell><cell>14 12</cell><cell cols="2">11 7 6</cell><cell>0</cell></row><row><cell cols="2">imm[11:0]</cell><cell>rs1</cell><cell>funct3</cell><cell>-</cell><cell cols="2">opcode</cell></row><row><cell>12</cell><cell></cell><cell>5</cell><cell>3</cell><cell>5</cell><cell>7</cell></row><row><cell cols="2">offset[11:0]</cell><cell>base</cell><cell>width</cell><cell>-</cell><cell>RPA</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE III :</head><label>III</label><figDesc>Parameters and configurations of the benchmarks.</figDesc><table><row><cell>MM</cell><cell>FIR</cell><cell>KM</cell><cell>SE</cell></row><row><cell>Matrix Size</cell><cell># of Input/ # of Taps+1</cell><cell># of Nodes/ Centroids/ Di-mension</cell><cell># of Vertical Pixels/ # of Horizontal Pixels</cell></row><row><cell>100?100</cell><cell>10000/50</cell><cell>5000/4/2</cell><cell>(128+2)/(128+2)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE IV :</head><label>IV</label><figDesc>The loop kernels were unrolled by the following factors before transferring to the auxiliary architecture for acceleration.</figDesc><table><row><cell></cell><cell>MM</cell><cell>FIR</cell><cell>KM</cell><cell>SE</cell></row><row><cell>Full Loop</cell><cell>100?100? 100</cell><cell>10000? 50</cell><cell>5000? 4?2</cell><cell>(128+2)? (128+2)?3?3</cell></row><row><cell>Unrolling</cell><cell>1?5?100</cell><cell>50?50</cell><cell>125?4?2</cell><cell>16?16?3?3</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE V :</head><label>V</label><figDesc>Resource consumption and maximum frequency of the proposed soft processor versus ORCA RISC-V core.</figDesc><table><row><cell>Designs</cell><cell>Slice Reg-isters</cell><cell>Slice LUTs</cell><cell cols="2">Block RAM</cell><cell>Max. Freq.</cell></row><row><cell>Proposed</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Soft</cell><cell cols="3">334 ? 0 % 1279 2 % 6</cell><cell cols="2">4 % 147.929 MHz</cell></row><row><cell>Processor</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>ORCA</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>RISC-V</cell><cell cols="3">615 ? 0 % 1438 2 % 1</cell><cell cols="2">? 0 %199.322 MHz</cell></row><row><cell>core</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>TABLE VI :</head><label>VI</label><figDesc>Processing cycles and the execution latency of the four benchmarks on the proposed soft processor and ORCA RISC-V core.</figDesc><table><row><cell>Designs</cell><cell cols="3">Benchmarks # of Cycles Latency</cell></row><row><cell></cell><cell>MM</cell><cell cols="2">1965954155 13.29 s</cell></row><row><cell>Proposed Soft Processor</cell><cell>FIR KM</cell><cell>350096784 32382531</cell><cell>2.37 s 0.22 s</cell></row><row><cell></cell><cell>SE</cell><cell>388273610</cell><cell>2.62 s</cell></row><row><cell></cell><cell>MM</cell><cell cols="2">2868605367 14.39 s</cell></row><row><cell>ORCA RISC-V core</cell><cell>FIR KM</cell><cell>503309228 46286121</cell><cell>2.53 s 0.23 s</cell></row><row><cell></cell><cell>SE</cell><cell>566543126</cell><cell>2.84 s</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>and Table VI display the resource consumption and the performance of the proposed soft processor versus ORCA core. The percentage values in Table V are relative to available resources of the targeted FPGA device.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0"><p>Copyright held by the owner/author(s). Presented at 2nd International Workshop on Overlay Architectures for FPGAs (OLAF2016), Monterey, CA, USA, Feb. 21, 2016.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1"><p>2nd International Workshop on Overlay Architectures for FPGAs (OLAF2016)</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>ACKNOWLEDGMENT</head><p>This work was supported in part by the <rs type="funder">Research Grants Council of Hong Kong</rs> project <rs type="grantNumber">ECS 720012E</rs> and the <rs type="institution">Croucher Innovation Award 2013</rs>.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_wHrdNpA">
					<idno type="grant-number">ECS 720012E</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Automatic Nested Loop Acceleration on FPGAs Using Soft CGRA Overlay</title>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-C</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">K</forename></persName>
		</author>
		<author>
			<persName><forename type="first">-H</forename><surname>So</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2nd International Workshop on FPGAs for Software Programmers (FSP)</title>
		<imprint>
			<date type="published" when="2015-09">Sep 2015</date>
			<biblScope unit="page" from="13" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">FPGAs</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">QuickDough: A Rapid FPGA Loop Accelerator Design Framework Using Soft CGRA Overlay</title>
	</analytic>
	<monogr>
		<title level="m">2015 International Conference on Field Programmable Technology (FPT)</title>
		<imprint>
			<date type="published" when="2015-12">Dec 2015</date>
			<biblScope unit="page" from="56" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The RISC-V Instruction Set Architecture</title>
		<author>
			<persName><forename type="first">Risc-V</forename><surname>Community</surname></persName>
		</author>
		<ptr target="http://riscv.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Mixed-Architecture Process Scheduling on Tightly Coupled Reconfigurable Computers</title>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">K</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Inggs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">K H</forename><surname>So</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 24th International Conference on Field Programmable Logic and Applications (FPL)</title>
		<imprint>
			<date type="published" when="2014-09">Sept 2014</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">User-Level ISA Version 2.0, The RISC-V Instruction Set Manual</title>
		<author>
			<persName><forename type="first">A</forename><surname>Waterman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Asanovi?</surname></persName>
		</author>
		<ptr target="http://riscv.org/spec/riscv-spec-v2.0.pdf" />
		<imprint>
			<biblScope unit="volume">I</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<ptr target="https://github.com/VectorBlox/risc-v" />
		<title level="m">VectorBlox/risc-v</title>
		<imprint>
			<publisher>VectorBlox Computing Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">ZUMA: An Open FPGA Overlay Architecture</title>
		<author>
			<persName><forename type="first">A</forename><surname>Brant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G F</forename><surname>Lemieux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 IEEE 20th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)</title>
		<imprint>
			<date type="published" when="2012-04">April 2012</date>
			<biblScope unit="page" from="93" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Quku: a two-level reconfigurable architecture</title>
		<author>
			<persName><forename type="first">S</forename><surname>Shukla</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bergmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Becker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Computer Society Annual Symposium on Emerging VLSI Technologies and Architectures</title>
		<imprint>
			<date type="published" when="2006-03">2006. March 2006</date>
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Dynamically Reconfigurable Weakly Programmable Processor Array Architecture Template</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kissler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hannig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kupriyanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Teich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd International Workshop on Reconfigurable Communication-centric Systems-on-Chip</title>
		<meeting>the 2nd International Workshop on Reconfigurable Communication-centric Systems-on-Chip</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An FPGAbased Heterogeneous Coarse-Grained Dynamically Reconfigurable Architecture</title>
		<author>
			<persName><forename type="first">R</forename><surname>Ferreira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vendramini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Mucida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Carro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Compilers, Architectures and Synthesis for Embedded Systems (CASES)</title>
		<meeting>the 14th International Conference on Compilers, Architectures and Synthesis for Embedded Systems (CASES)</meeting>
		<imprint>
			<date type="published" when="2001-10">2001. Oct 2011</date>
			<biblScope unit="page" from="195" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">ADRES: An Architecture with Tightly Coupled VLIW Processor and Coarse-Grained Reconfigurable Matrix</title>
		<author>
			<persName><forename type="first">B</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vernalde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Verkest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">D</forename><surname>Man</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lauwereins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Field Programmable Logic and Application</title>
		<editor>
			<persName><forename type="first">P</forename><forename type="middle">Y K</forename><surname>Cheung</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">G</forename><surname>Constantinides</surname></persName>
		</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">UG081: MicroBlaze Processor Reference Guide</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Xilinx Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Nios II Processor: Overview</title>
		<ptr target="http://www.altera.com/products/processors/overview.html" />
		<imprint/>
		<respStmt>
			<orgName>Altera Corporation</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">iDEA: A DSP block based FPGA soft processor</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">Y</forename><surname>Cheah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fahmy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maskell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 International Conference on Field-Programmable Technology (FPT)</title>
		<imprint>
			<date type="published" when="2012-12">Dec 2012</date>
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">OCTAVO: An FPGA-centric Processor Family</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Laforest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Steffan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM/SIGDA International Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;12</title>
		<meeting>the ACM/SIGDA International Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;12</meeting>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="219" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Vector Processing As a Soft-core CPU Accelerator</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Lemieux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Eagleston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th International ACM/SIGDA Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;08</title>
		<meeting>the 16th International ACM/SIGDA Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;08</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="222" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">VESPA: Portable, Scalable, and Flexible FPGA-based Vector Processors</title>
		<author>
			<persName><forename type="first">P</forename><surname>Yiannacouras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Steffan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 International Conference on Compilers, Architectures and Synthesis for Embedded Systems, ser. CASES &apos;08</title>
		<meeting>the 2008 International Conference on Compilers, Architectures and Synthesis for Embedded Systems, ser. CASES &apos;08</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">VEGAS: Soft Vector Processor with Scratchpad Memory</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">H</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Severance</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Brant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">G</forename><surname>Lemieux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th ACM/SIGDA International Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;11</title>
		<meeting>the 19th ACM/SIGDA International Symposium on Field Programmable Gate Arrays, ser. FPGA &apos;11</meeting>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="15" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A VLIW Softcore Processor With Dynamically Adjustable Issue-slots</title>
		<author>
			<persName><forename type="first">F</forename><surname>Anjam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nadeem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 International Conference on Field-Programmable Technology (FPT)</title>
		<imprint>
			<date type="published" when="2010-12">Dec 2010</date>
			<biblScope unit="page" from="393" to="398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An FPGA-based VLIW Processor with Custom Hardware Execution</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Hoare</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kusic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Fazekas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Foster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2005 ACM/SIGDA 13th International Symposium on Field-programmable Gate Arrays, ser. FPGA &apos;05</title>
		<meeting>the 2005 ACM/SIGDA 13th International Symposium on Field-programmable Gate Arrays, ser. FPGA &apos;05</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="107" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">CUSTARD -A Customisable Threaded FPGA Soft Processor and Tools</title>
		<author>
			<persName><forename type="first">R</forename><surname>Dimond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Mencer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Luk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2005 International Conference on Field Programmable Logic and Applications</title>
		<imprint>
			<date type="published" when="2005-08">Aug 2005</date>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Improving Pipelined Soft Processors with Multithreading</title>
		<author>
			<persName><forename type="first">M</forename><surname>Labrecque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Steffan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Field Programmable Logic and Applications, 2007 (FPL 2007)</title>
		<imprint>
			<date type="published" when="2007-08">Aug 2007</date>
			<biblScope unit="page" from="210" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Lightweight Multi-threaded Network Processor Core in FPGA</title>
		<author>
			<persName><forename type="first">P</forename><surname>Buciak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Botwicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design and Diagnostics of Electronic Circuits and Systems, 2007. DDECS &apos;07</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007-04">April 2007</date>
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">FPGA implementation of Hierarchical Memory Architecture for Network Processors</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2004 IEEE International Conference on Field-Programmable Technology</title>
		<meeting>2004 IEEE International Conference on Field-Programmable Technology</meeting>
		<imprint>
			<date type="published" when="2004-12">Dec 2004</date>
			<biblScope unit="page" from="295" to="298" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Plasma -most MIPS I(TM) opcodes</title>
		<author>
			<persName><surname>Opencores</surname></persName>
		</author>
		<ptr target="http://opencores.com/project,plasma" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">MB-LITE: A Robust, light-weight soft-core implementation of the MicroBlaze architecture</title>
		<author>
			<persName><forename type="first">T</forename><surname>Kranenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Van Leuken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Design, Automation Test in Europe Conference Exhibition (DATE)</title>
		<imprint>
			<date type="published" when="2010-03">2010. March 2010</date>
			<biblScope unit="page" from="997" to="1000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Imagination Technologies Limited</title>
		<ptr target="http://imgtec.com/mips/architectures/" />
		<imprint/>
	</monogr>
	<note>MIPS Architectures</note>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Verilog version of Z-scale</title>
		<ptr target="https://github.com/ucb-bar/vscale" />
		<imprint>
			<publisher>UC Berkeley Architecture Research</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">GRVI Phalanx: A Massively Parallel RISC-V FPGA Accelerator Accelerator</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE 24th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)</title>
		<imprint>
			<date type="published" when="2016-05">May 2016</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
